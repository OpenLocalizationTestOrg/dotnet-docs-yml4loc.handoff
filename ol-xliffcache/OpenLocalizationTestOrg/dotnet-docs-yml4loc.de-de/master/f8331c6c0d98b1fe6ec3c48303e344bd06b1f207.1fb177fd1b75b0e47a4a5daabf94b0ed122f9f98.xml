{"nodes":[{"content":"Represents the base class for all XML Web service client proxies that use the HTTP transport protocol.","nodes":[{"pos":[0,102],"content":"Represents the base class for all XML Web service client proxies that use the HTTP transport protocol.","nodes":[{"content":"Represents the base class for all XML Web service client proxies that use the HTTP transport protocol.","pos":[0,102]}]}],"pos":[1651,1754],"yaml":true},{"content":"The properties on this class are used to control the behavior of the HTTP request object used to transmit the XML Web service request and response. The properties map to properties found on <xref:System.Net.HttpWebRequest>.  \n  \n To communicate with an XML Web service using HTTP, you must create a proxy class deriving indirectly or directly from <xref:System.Web.Services.Protocols.HttpWebClientProtocol> for the XML Web service. Instead of creating the proxy class manually, you can use the Wsdl.exe tool to create a proxy class for a given XML Web service's service description.  \n  \n Since HttpWebClientProtocol is the base class for all proxy classes, its properties are on your proxy classes. These properties are useful for controlling the request behavior of the underlying transport. For example, use the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A> property for calling XML Web services through a firewall. Many of these properties are used to initialize the <xref:System.Net.HttpWebRequest> that makes the Web request.  \n  \n <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> derive directly or indirectly from <xref:System.Web.Services.Protocols.HttpWebClientProtocol> to provide support for SOAP, HTTP-GET and HTTP-POST respectively.","nodes":[{"pos":[0,223],"content":"The properties on this class are used to control the behavior of the HTTP request object used to transmit the XML Web service request and response. The properties map to properties found on <xref:System.Net.HttpWebRequest>.","nodes":[{"content":"The properties on this class are used to control the behavior of the HTTP request object used to transmit the XML Web service request and response. The properties map to properties found on <xref:System.Net.HttpWebRequest>.","pos":[0,223],"nodes":[{"content":"The properties on this class are used to control the behavior of the HTTP request object used to transmit the XML Web service request and response.","pos":[0,147]},{"content":"The properties map to properties found on <ph id=\"ph1\">&lt;xref:System.Net.HttpWebRequest&gt;</ph>.","pos":[148,223],"source":" The properties map to properties found on <xref:System.Net.HttpWebRequest>."}]}]},{"pos":[230,582],"content":"To communicate with an XML Web service using HTTP, you must create a proxy class deriving indirectly or directly from <xref:System.Web.Services.Protocols.HttpWebClientProtocol> for the XML Web service. Instead of creating the proxy class manually, you can use the Wsdl.exe tool to create a proxy class for a given XML Web service's service description.","nodes":[{"content":"To communicate with an XML Web service using HTTP, you must create a proxy class deriving indirectly or directly from <xref:System.Web.Services.Protocols.HttpWebClientProtocol> for the XML Web service. Instead of creating the proxy class manually, you can use the Wsdl.exe tool to create a proxy class for a given XML Web service's service description.","pos":[0,352],"nodes":[{"content":"To communicate with an XML Web service using HTTP, you must create a proxy class deriving indirectly or directly from <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;</ph> for the XML Web service.","pos":[0,201],"source":"To communicate with an XML Web service using HTTP, you must create a proxy class deriving indirectly or directly from <xref:System.Web.Services.Protocols.HttpWebClientProtocol> for the XML Web service."},{"content":"Instead of creating the proxy class manually, you can use the Wsdl.exe tool to create a proxy class for a given XML Web service's service description.","pos":[202,352]}]}]},{"pos":[589,1053],"content":"Since HttpWebClientProtocol is the base class for all proxy classes, its properties are on your proxy classes. These properties are useful for controlling the request behavior of the underlying transport. For example, use the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A> property for calling XML Web services through a firewall. Many of these properties are used to initialize the <xref:System.Net.HttpWebRequest> that makes the Web request.","nodes":[{"content":"Since HttpWebClientProtocol is the base class for all proxy classes, its properties are on your proxy classes. These properties are useful for controlling the request behavior of the underlying transport. For example, use the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A> property for calling XML Web services through a firewall. Many of these properties are used to initialize the <xref:System.Net.HttpWebRequest> that makes the Web request.","pos":[0,464],"nodes":[{"content":"Since HttpWebClientProtocol is the base class for all proxy classes, its properties are on your proxy classes.","pos":[0,110]},{"content":"These properties are useful for controlling the request behavior of the underlying transport.","pos":[111,204]},{"content":"For example, use the <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A&gt;</ph> property for calling XML Web services through a firewall.","pos":[205,351],"source":" For example, use the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A> property for calling XML Web services through a firewall."},{"content":"Many of these properties are used to initialize the <ph id=\"ph1\">&lt;xref:System.Net.HttpWebRequest&gt;</ph> that makes the Web request.","pos":[352,464],"source":" Many of these properties are used to initialize the <xref:System.Net.HttpWebRequest> that makes the Web request."}]}]},{"pos":[1060,1404],"content":"<xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> derive directly or indirectly from <xref:System.Web.Services.Protocols.HttpWebClientProtocol> to provide support for SOAP, HTTP-GET and HTTP-POST respectively.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Web.Services.Protocols.HttpGetClientProtocol&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Web.Services.Protocols.HttpPostClientProtocol&gt;</ph> derive directly or indirectly from <ph id=\"ph4\">&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;</ph> to provide support for SOAP, HTTP-GET and HTTP-POST respectively.","pos":[0,344],"source":"<xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> derive directly or indirectly from <xref:System.Web.Services.Protocols.HttpWebClientProtocol> to provide support for SOAP, HTTP-GET and HTTP-POST respectively."}]}],"pos":[1765,3178],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.Services.Protocols.HttpWebClientProtocol\"></xref> class.","nodes":[{"pos":[0,113],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Services.Protocols.HttpWebClientProtocol\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.Services.Protocols.HttpWebClientProtocol\"></xref> class."}],"pos":[7431,7545],"yaml":true},{"content":"Gets or sets whether the client automatically follows server redirects.","nodes":[{"pos":[0,71],"content":"Gets or sets whether the client automatically follows server redirects.","nodes":[{"content":"Gets or sets whether the client automatically follows server redirects.","pos":[0,71]}]}],"pos":[8893,8965],"yaml":true},{"content":"If a client sends authentication information, such as a user name and password, you do not want to enable the server to redirect, because this can compromise security.  \n  \n A <xref:System.Net.WebException> is thrown if the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect%2A> property is `false` and the Web server attempts to redirect the request. The <xref:System.Net.WebException.Response%2A> property contains an <xref:System.Net.HttpWebResponse> object, where both the <xref:System.Net.HttpWebResponse.StatusCode%2A> and <xref:System.Net.HttpWebResponse.Headers%2A> properties reflect details regarding the attempted redirect. The <xref:System.Net.HttpWebResponse.StatusCode%2A> property contains an <xref:System.Net.HttpStatusCode> equivalent to one of the HTTP redirect status codes (301, 302, and 307) and the `Location` header within the <xref:System.Net.HttpWebResponse.Headers%2A> collection points to the URI that the request attempted to be redirected to.","nodes":[{"pos":[0,167],"content":"If a client sends authentication information, such as a user name and password, you do not want to enable the server to redirect, because this can compromise security.","nodes":[{"content":"If a client sends authentication information, such as a user name and password, you do not want to enable the server to redirect, because this can compromise security.","pos":[0,167]}]},{"pos":[174,996],"content":"A <xref:System.Net.WebException> is thrown if the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect%2A> property is `false` and the Web server attempts to redirect the request. The <xref:System.Net.WebException.Response%2A> property contains an <xref:System.Net.HttpWebResponse> object, where both the <xref:System.Net.HttpWebResponse.StatusCode%2A> and <xref:System.Net.HttpWebResponse.Headers%2A> properties reflect details regarding the attempted redirect. The <xref:System.Net.HttpWebResponse.StatusCode%2A> property contains an <xref:System.Net.HttpStatusCode> equivalent to one of the HTTP redirect status codes (301, 302, and 307) and the `Location` header within the <xref:System.Net.HttpWebResponse.Headers%2A> collection points to the URI that the request attempted to be redirected to.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Net.WebException&gt;</ph> is thrown if the <ph id=\"ph2\">&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect%2A&gt;</ph> property is <ph id=\"ph3\">`false`</ph> and the Web server attempts to redirect the request.","pos":[0,202],"source":"A <xref:System.Net.WebException> is thrown if the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect%2A> property is `false` and the Web server attempts to redirect the request."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.WebException.Response%2A&gt;</ph> property contains an <ph id=\"ph2\">&lt;xref:System.Net.HttpWebResponse&gt;</ph> object, where both the <ph id=\"ph3\">&lt;xref:System.Net.HttpWebResponse.StatusCode%2A&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Net.HttpWebResponse.Headers%2A&gt;</ph> properties reflect details regarding the attempted redirect.","pos":[203,485],"source":" The <xref:System.Net.WebException.Response%2A> property contains an <xref:System.Net.HttpWebResponse> object, where both the <xref:System.Net.HttpWebResponse.StatusCode%2A> and <xref:System.Net.HttpWebResponse.Headers%2A> properties reflect details regarding the attempted redirect."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.HttpWebResponse.StatusCode%2A&gt;</ph> property contains an <ph id=\"ph2\">&lt;xref:System.Net.HttpStatusCode&gt;</ph> equivalent to one of the HTTP redirect status codes (301, 302, and 307) and the <ph id=\"ph3\">`Location`</ph> header within the <ph id=\"ph4\">&lt;xref:System.Net.HttpWebResponse.Headers%2A&gt;</ph> collection points to the URI that the request attempted to be redirected to.","pos":[486,822],"source":" The <xref:System.Net.HttpWebResponse.StatusCode%2A> property contains an <xref:System.Net.HttpStatusCode> equivalent to one of the HTTP redirect status codes (301, 302, and 307) and the `Location` header within the <xref:System.Net.HttpWebResponse.Headers%2A> collection points to the URI that the request attempted to be redirected to."}]}],"pos":[8976,9977],"yaml":true,"extradata":"MT"},{"content":"`true` to automatically redirect the client to follow server redirects; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,115],"content":"`true` to automatically redirect the client to follow server redirects; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to automatically redirect the client to follow server redirects; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,91],"source":"`true` to automatically redirect the client to follow server redirects; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[92,115],"source":" The default is `false`."}]}],"pos":[10102,10220],"yaml":true},{"content":"The <xref href=\"System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect\"></xref> property is `false` and the Web server attempts to redirect the request.","nodes":[{"pos":[0,167],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">`false`</ph> and the Web server attempts to redirect the request.","source":"The <xref href=\"System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect\"></xref> property is `false` and the Web server attempts to redirect the request."}],"pos":[10409,10577],"yaml":true},{"content":"Cancels an asynchronous call to an XML Web service method, unless the call has already completed.","nodes":[{"pos":[0,97],"content":"Cancels an asynchronous call to an XML Web service method, unless the call has already completed.","nodes":[{"content":"Cancels an asynchronous call to an XML Web service method, unless the call has already completed.","pos":[0,97]}]}],"pos":[11807,11905],"yaml":true},{"content":"The object provided in the last parameter to the asynchronous call of the `Begin` method.","nodes":[{"pos":[0,89],"content":"The object provided in the last parameter to the asynchronous call of the <ph id=\"ph1\">`Begin`</ph> method.","source":"The object provided in the last parameter to the asynchronous call of the `Begin` method."}],"pos":[12056,12146],"yaml":true},{"content":"Gets the collection of client certificates.","nodes":[{"pos":[0,43],"content":"Gets the collection of client certificates.","nodes":[{"content":"Gets the collection of client certificates.","pos":[0,43]}]}],"pos":[13428,13472],"yaml":true},{"content":"This property allows a client to pass one or more client certificates, also known as Authenticode X.509 v.3 certificates, when calling an XML Web service method. If the XML Web service method has been configured to use client certificates, a client certificate can be used as one mechanism for authenticating a client. For details on setting up client certificates, see the Internet Information Services (IIS) documentation.","nodes":[{"pos":[0,424],"content":"This property allows a client to pass one or more client certificates, also known as Authenticode X.509 v.3 certificates, when calling an XML Web service method. If the XML Web service method has been configured to use client certificates, a client certificate can be used as one mechanism for authenticating a client. For details on setting up client certificates, see the Internet Information Services (IIS) documentation.","nodes":[{"content":"This property allows a client to pass one or more client certificates, also known as Authenticode X.509 v.3 certificates, when calling an XML Web service method. If the XML Web service method has been configured to use client certificates, a client certificate can be used as one mechanism for authenticating a client. For details on setting up client certificates, see the Internet Information Services (IIS) documentation.","pos":[0,424],"nodes":[{"content":"This property allows a client to pass one or more client certificates, also known as Authenticode X.509 v.3 certificates, when calling an XML Web service method.","pos":[0,161]},{"content":"If the XML Web service method has been configured to use client certificates, a client certificate can be used as one mechanism for authenticating a client.","pos":[162,318]},{"content":"For details on setting up client certificates, see the Internet Information Services (IIS) documentation.","pos":[319,424]}]}]}],"pos":[13483,13908],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref> that represents the client certificates.","nodes":[{"pos":[0,136],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"&gt;&lt;/xref&gt;</ph> that represents the client certificates.","source":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref> that represents the client certificates."}],"pos":[14857,14994],"yaml":true},{"content":"Gets or sets the collection of cookies.","nodes":[{"pos":[0,39],"content":"Gets or sets the collection of cookies.","nodes":[{"content":"Gets or sets the collection of cookies.","pos":[0,39]}]}],"pos":[16330,16370],"yaml":true},{"content":"If an XML Web service method uses session state, then a cookie is passed back in the response headers to the XML Web service client that uniquely identifies the session for that XML Web service client. In order for an XML Web service to maintain session state for a client, the client must store the cookie. Clients receive the HTTP cookie by creating a new instance of <xref:System.Net.CookieContainer> and assigning that to the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> property of the proxy class before calling the XML Web service method. If you need to maintain session state beyond when the proxy class instance goes out of scope, the client must store the HTTP cookie between calls to the XML Web service. For instance, a Web Forms client can store the HTTP cookie by saving the <xref:System.Net.CookieContainer> in its own session state. Because not all XML Web services use session state and thus clients are not always required to use the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> property of a client proxy, the documentation for the XML Web service must state whether session state is used.","nodes":[{"pos":[0,1174],"content":"If an XML Web service method uses session state, then a cookie is passed back in the response headers to the XML Web service client that uniquely identifies the session for that XML Web service client. In order for an XML Web service to maintain session state for a client, the client must store the cookie. Clients receive the HTTP cookie by creating a new instance of <xref:System.Net.CookieContainer> and assigning that to the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> property of the proxy class before calling the XML Web service method. If you need to maintain session state beyond when the proxy class instance goes out of scope, the client must store the HTTP cookie between calls to the XML Web service. For instance, a Web Forms client can store the HTTP cookie by saving the <xref:System.Net.CookieContainer> in its own session state. Because not all XML Web services use session state and thus clients are not always required to use the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> property of a client proxy, the documentation for the XML Web service must state whether session state is used.","nodes":[{"content":"If an XML Web service method uses session state, then a cookie is passed back in the response headers to the XML Web service client that uniquely identifies the session for that XML Web service client. In order for an XML Web service to maintain session state for a client, the client must store the cookie. Clients receive the HTTP cookie by creating a new instance of <xref:System.Net.CookieContainer> and assigning that to the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> property of the proxy class before calling the XML Web service method. If you need to maintain session state beyond when the proxy class instance goes out of scope, the client must store the HTTP cookie between calls to the XML Web service. For instance, a Web Forms client can store the HTTP cookie by saving the <xref:System.Net.CookieContainer> in its own session state. Because not all XML Web services use session state and thus clients are not always required to use the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> property of a client proxy, the documentation for the XML Web service must state whether session state is used.","pos":[0,1174],"nodes":[{"content":"If an XML Web service method uses session state, then a cookie is passed back in the response headers to the XML Web service client that uniquely identifies the session for that XML Web service client.","pos":[0,201]},{"content":"In order for an XML Web service to maintain session state for a client, the client must store the cookie.","pos":[202,307]},{"content":"Clients receive the HTTP cookie by creating a new instance of <ph id=\"ph1\">&lt;xref:System.Net.CookieContainer&gt;</ph> and assigning that to the <ph id=\"ph2\">&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A&gt;</ph> property of the proxy class before calling the XML Web service method.","pos":[308,578],"source":" Clients receive the HTTP cookie by creating a new instance of <xref:System.Net.CookieContainer> and assigning that to the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> property of the proxy class before calling the XML Web service method."},{"content":"If you need to maintain session state beyond when the proxy class instance goes out of scope, the client must store the HTTP cookie between calls to the XML Web service.","pos":[579,748]},{"content":"For instance, a Web Forms client can store the HTTP cookie by saving the <ph id=\"ph1\">&lt;xref:System.Net.CookieContainer&gt;</ph> in its own session state.","pos":[749,881],"source":" For instance, a Web Forms client can store the HTTP cookie by saving the <xref:System.Net.CookieContainer> in its own session state."},{"content":"Because not all XML Web services use session state and thus clients are not always required to use the <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A&gt;</ph> property of a client proxy, the documentation for the XML Web service must state whether session state is used.","pos":[882,1174],"source":" Because not all XML Web services use session state and thus clients are not always required to use the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> property of a client proxy, the documentation for the XML Web service must state whether session state is used."}]}]}],"pos":[16381,17556],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Net.CookieContainer\"></xref> that represents the cookies for a Web Services client.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.CookieContainer\"&gt;&lt;/xref&gt;</ph> that represents the cookies for a Web Services client.","source":"A <xref href=\"System.Net.CookieContainer\"></xref> that represents the cookies for a Web Services client."}],"pos":[18379,18484],"yaml":true},{"content":"Gets or sets a value that indicates whether decompression is enabled for this <xref href=\"System.Web.Services.Protocols.HttpWebClientProtocol\"></xref>.","nodes":[{"pos":[0,151],"content":"Gets or sets a value that indicates whether decompression is enabled for this <ph id=\"ph1\">&lt;xref href=\"System.Web.Services.Protocols.HttpWebClientProtocol\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets a value that indicates whether decompression is enabled for this <xref href=\"System.Web.Services.Protocols.HttpWebClientProtocol\"></xref>."}],"pos":[19793,19945],"yaml":true},{"content":"`true` if decompression is enabled for this <xref href=\"System.Web.Services.Protocols.HttpWebClientProtocol\"></xref>; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,161],"content":"`true` if decompression is enabled for this <xref href=\"System.Web.Services.Protocols.HttpWebClientProtocol\"></xref>; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if decompression is enabled for this <ph id=\"ph2\">&lt;xref href=\"System.Web.Services.Protocols.HttpWebClientProtocol\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,137],"source":"`true` if decompression is enabled for this <xref href=\"System.Web.Services.Protocols.HttpWebClientProtocol\"></xref>; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[138,161],"source":" The default is `false`."}]}],"pos":[20072,20236],"yaml":true},{"content":"Gets the <xref href=\"System.Xml.Serialization.XmlMembersMapping\"></xref> for each XML Web service method exposed by the specified type, and stores the mappings in the specified <xref href=\"System.Collections.ArrayList\"></xref>.","nodes":[{"pos":[0,227],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Serialization.XmlMembersMapping\"&gt;&lt;/xref&gt;</ph> for each XML Web service method exposed by the specified type, and stores the mappings in the specified <ph id=\"ph2\">&lt;xref href=\"System.Collections.ArrayList\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the <xref href=\"System.Xml.Serialization.XmlMembersMapping\"></xref> for each XML Web service method exposed by the specified type, and stores the mappings in the specified <xref href=\"System.Collections.ArrayList\"></xref>."}],"pos":[21724,21952],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> that exposes the XML Web service methods.","nodes":[{"pos":[0,78],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that exposes the XML Web service methods.","source":"The <xref href=\"System.Type\"></xref> that exposes the XML Web service methods."}],"pos":[22139,22218],"yaml":true},{"content":"`true` if <code>type</code> can be assigned to a <xref href=\"System.Web.Services.Protocols.SoapHttpClientProtocol\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,143],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> can be assigned to a <ph id=\"ph3\">&lt;xref href=\"System.Web.Services.Protocols.SoapHttpClientProtocol\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>type</code> can be assigned to a <xref href=\"System.Web.Services.Protocols.SoapHttpClientProtocol\"></xref>; otherwise, `false`."}],"pos":[22358,22504],"yaml":true},{"content":"Gets the <xref href=\"System.Xml.Serialization.XmlMembersMapping\"></xref> for each XML Web service method exposed by the specified types, and stores the mappings in the specified <xref href=\"System.Collections.ArrayList\"></xref>, as well as in a <xref href=\"System.Collections.Hashtable\"></xref> that this method returns.","nodes":[{"pos":[0,320],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Serialization.XmlMembersMapping\"&gt;&lt;/xref&gt;</ph> for each XML Web service method exposed by the specified types, and stores the mappings in the specified <ph id=\"ph2\">&lt;xref href=\"System.Collections.ArrayList\"&gt;&lt;/xref&gt;</ph>, as well as in a <ph id=\"ph3\">&lt;xref href=\"System.Collections.Hashtable\"&gt;&lt;/xref&gt;</ph> that this method returns.","source":"Gets the <xref href=\"System.Xml.Serialization.XmlMembersMapping\"></xref> for each XML Web service method exposed by the specified types, and stores the mappings in the specified <xref href=\"System.Collections.ArrayList\"></xref>, as well as in a <xref href=\"System.Collections.Hashtable\"></xref> that this method returns."}],"pos":[23987,24308],"yaml":true},{"content":"An array of type <xref href=\"System.Type\"></xref> that contains the types that expose the XML Web service methods.","nodes":[{"pos":[0,114],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that contains the types that expose the XML Web service methods.","source":"An array of type <xref href=\"System.Type\"></xref> that contains the types that expose the XML Web service methods."}],"pos":[24525,24640],"yaml":true},{"content":"A <xref href=\"System.Collections.Hashtable\"></xref> that contains the <xref href=\"System.Xml.Serialization.XmlMembersMapping\"></xref> for each XML Web service method exposed by the specified types. The types contained in <code>types</code> are used as keys.","nodes":[{"pos":[0,257],"content":"A <xref href=\"System.Collections.Hashtable\"></xref> that contains the <xref href=\"System.Xml.Serialization.XmlMembersMapping\"></xref> for each XML Web service method exposed by the specified types. The types contained in <code>types</code> are used as keys.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.Hashtable\"&gt;&lt;/xref&gt;</ph> that contains the <ph id=\"ph2\">&lt;xref href=\"System.Xml.Serialization.XmlMembersMapping\"&gt;&lt;/xref&gt;</ph> for each XML Web service method exposed by the specified types.","pos":[0,197],"source":"A <xref href=\"System.Collections.Hashtable\"></xref> that contains the <xref href=\"System.Xml.Serialization.XmlMembersMapping\"></xref> for each XML Web service method exposed by the specified types."},{"content":"The types contained in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">types</ph><ept id=\"p1\">&lt;/code&gt;</ept> are used as keys.","pos":[198,257],"source":" The types contained in <code>types</code> are used as keys."}]}],"pos":[24794,25052],"yaml":true},{"content":"Creates a <xref href=\"System.Net.WebRequest\"></xref> for the specified URI.","nodes":[{"pos":[0,75],"content":"Creates a <ph id=\"ph1\">&lt;xref href=\"System.Net.WebRequest\"&gt;&lt;/xref&gt;</ph> for the specified URI.","source":"Creates a <xref href=\"System.Net.WebRequest\"></xref> for the specified URI."}],"pos":[26361,26437],"yaml":true},{"content":"The <xref href=\"System.Uri\"></xref> for creating the <xref href=\"System.Net.WebRequest\"></xref>.","nodes":[{"pos":[0,96],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> for creating the <ph id=\"ph2\">&lt;xref href=\"System.Net.WebRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Uri\"></xref> for creating the <xref href=\"System.Net.WebRequest\"></xref>."}],"pos":[26598,26695],"yaml":true},{"content":"The created <xref href=\"System.Net.WebRequest\"></xref>.","nodes":[{"pos":[0,55],"content":"The created <ph id=\"ph1\">&lt;xref href=\"System.Net.WebRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The created <xref href=\"System.Net.WebRequest\"></xref>."}],"pos":[26760,26816],"yaml":true},{"content":"The <code>uri</code> parameter is `null`.","nodes":[{"pos":[0,41],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">uri</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>uri</code> parameter is `null`."}],"pos":[27019,27061],"yaml":true},{"content":"Returns a response from a synchronous request to an XML Web service method.","nodes":[{"pos":[0,75],"content":"Returns a response from a synchronous request to an XML Web service method.","nodes":[{"content":"Returns a response from a synchronous request to an XML Web service method.","pos":[0,75]}]}],"pos":[28328,28404],"yaml":true},{"content":"The <xref href=\"System.Net.WebRequest\"></xref> from which to get the response.","nodes":[{"pos":[0,78],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.WebRequest\"&gt;&lt;/xref&gt;</ph> from which to get the response.","source":"The <xref href=\"System.Net.WebRequest\"></xref> from which to get the response."}],"pos":[28604,28683],"yaml":true},{"content":"A response from a synchronous request to an XML Web service method.","nodes":[{"pos":[0,67],"content":"A response from a synchronous request to an XML Web service method.","nodes":[{"content":"A response from a synchronous request to an XML Web service method.","pos":[0,67]}]}],"pos":[28749,28817],"yaml":true},{"content":"Returns a response from an asynchronous request to an XML Web service method.","nodes":[{"pos":[0,77],"content":"Returns a response from an asynchronous request to an XML Web service method.","nodes":[{"content":"Returns a response from an asynchronous request to an XML Web service method.","pos":[0,77]}]}],"pos":[30283,30361],"yaml":true},{"content":"The <xref href=\"System.Net.WebRequest\"></xref> from which to get the response.","nodes":[{"pos":[0,78],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.WebRequest\"&gt;&lt;/xref&gt;</ph> from which to get the response.","source":"The <xref href=\"System.Net.WebRequest\"></xref> from which to get the response."}],"pos":[30582,30661],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> to pass to <xref href=\"System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)\"></xref> when the response has completed.","nodes":[{"pos":[0,171],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> to pass to <ph id=\"ph2\">&lt;xref href=\"System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)\"&gt;&lt;/xref&gt;</ph> when the response has completed.","source":"The <xref href=\"System.IAsyncResult\"></xref> to pass to <xref href=\"System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)\"></xref> when the response has completed."}],"pos":[30729,30901],"yaml":true},{"content":"A response from an asynchronous request to an XML Web service method.","nodes":[{"pos":[0,69],"content":"A response from an asynchronous request to an XML Web service method.","nodes":[{"content":"A response from an asynchronous request to an XML Web service method.","pos":[0,69]}]}],"pos":[30967,31037],"yaml":true},{"content":"Gets or sets proxy information for making an XML Web service request through a firewall.","nodes":[{"pos":[0,88],"content":"Gets or sets proxy information for making an XML Web service request through a firewall.","nodes":[{"content":"Gets or sets proxy information for making an XML Web service request through a firewall.","pos":[0,88]}]}],"pos":[32244,32333],"yaml":true},{"content":"Use the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A> property if a client needs to use different proxy settings than those in the system settings. Use the <xref:System.Net.WebProxy> class to set the proxy settings, because it implements <xref:System.Net.IWebProxy>.  \n  \n Default proxy settings can be set in a configuration file. For details, see [Configuring Internet Applications](~/docs/framework/network-programming/configuring-internet-applications.md).","nodes":[{"pos":[0,288],"content":"Use the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A> property if a client needs to use different proxy settings than those in the system settings. Use the <xref:System.Net.WebProxy> class to set the proxy settings, because it implements <xref:System.Net.IWebProxy>.","nodes":[{"content":"Use the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A> property if a client needs to use different proxy settings than those in the system settings. Use the <xref:System.Net.WebProxy> class to set the proxy settings, because it implements <xref:System.Net.IWebProxy>.","pos":[0,288],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A&gt;</ph> property if a client needs to use different proxy settings than those in the system settings.","pos":[0,169],"source":"Use the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A> property if a client needs to use different proxy settings than those in the system settings."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Net.WebProxy&gt;</ph> class to set the proxy settings, because it implements <ph id=\"ph2\">&lt;xref:System.Net.IWebProxy&gt;</ph>.","pos":[170,288],"source":" Use the <xref:System.Net.WebProxy> class to set the proxy settings, because it implements <xref:System.Net.IWebProxy>."}]}]},{"pos":[295,482],"content":"Default proxy settings can be set in a configuration file. For details, see [Configuring Internet Applications](~/docs/framework/network-programming/configuring-internet-applications.md).","nodes":[{"content":"Default proxy settings can be set in a configuration file.","pos":[0,58]},{"content":"For details, see <bpt id=\"p1\">[</bpt>Configuring Internet Applications<ept id=\"p1\">](~/docs/framework/network-programming/configuring-internet-applications.md)</ept>.","pos":[59,187],"source":" For details, see [Configuring Internet Applications](~/docs/framework/network-programming/configuring-internet-applications.md)."}]}],"pos":[32344,32831],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Net.IWebProxy\"></xref> that contains the proxy information for making requests through a firewall. The default value is the operating system proxy settings.","nodes":[{"pos":[0,178],"content":"An <xref href=\"System.Net.IWebProxy\"></xref> that contains the proxy information for making requests through a firewall. The default value is the operating system proxy settings.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.IWebProxy\"&gt;&lt;/xref&gt;</ph> that contains the proxy information for making requests through a firewall.","pos":[0,120],"source":"An <xref href=\"System.Net.IWebProxy\"></xref> that contains the proxy information for making requests through a firewall."},{"content":"The default value is the operating system proxy settings.","pos":[121,178]}]}],"pos":[33775,33954],"yaml":true},{"content":"Gets or sets a value that indicates whether connection sharing is enabled when the client uses NTLM authentication to connect to the Web server that hosts the XML Web service.","nodes":[{"pos":[0,175],"content":"Gets or sets a value that indicates whether connection sharing is enabled when the client uses NTLM authentication to connect to the Web server that hosts the XML Web service.","nodes":[{"content":"Gets or sets a value that indicates whether connection sharing is enabled when the client uses NTLM authentication to connect to the Web server that hosts the XML Web service.","pos":[0,175]}]}],"pos":[35403,35579],"yaml":true},{"content":"This property sets the value of the <xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A> property of the <xref:System.Net.HttpWebRequest> used to communicate with the Web server.","nodes":[{"pos":[0,198],"content":"This property sets the value of the <xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A> property of the <xref:System.Net.HttpWebRequest> used to communicate with the Web server.","nodes":[{"content":"This property sets the value of the <ph id=\"ph1\">&lt;xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Net.HttpWebRequest&gt;</ph> used to communicate with the Web server.","pos":[0,198],"source":"This property sets the value of the <xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A> property of the <xref:System.Net.HttpWebRequest> used to communicate with the Web server."}]}],"pos":[35590,35789],"yaml":true,"extradata":"MT"},{"content":"`true` if connection sharing is enabled; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,84],"content":"`true` if connection sharing is enabled; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if connection sharing is enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,60],"source":"`true` if connection sharing is enabled; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[61,84],"source":" The default is `false`."}]}],"pos":[35990,36077],"yaml":true},{"content":"Gets or sets the value for the user agent header that is sent with each request.","nodes":[{"pos":[0,80],"content":"Gets or sets the value for the user agent header that is sent with each request.","nodes":[{"content":"Gets or sets the value for the user agent header that is sent with each request.","pos":[0,80]}]}],"pos":[37395,37476],"yaml":true},{"content":"The user agent string allows a Web server to identify the client.","nodes":[{"pos":[0,65],"content":"The user agent string allows a Web server to identify the client.","nodes":[{"content":"The user agent string allows a Web server to identify the client.","pos":[0,65]}]}],"pos":[37487,37553],"yaml":true,"extradata":"MT"},{"content":"The value of the HTTP protocol user agent header. The default is \"MS Web Services Client Protocol <code>number</code> \", where <code>number</code> is the version of the common language runtime (for example, 1.0.3705.0).","nodes":[{"pos":[0,219],"content":"The value of the HTTP protocol user agent header. The default is \"MS Web Services Client Protocol <code>number</code> \", where <code>number</code> is the version of the common language runtime (for example, 1.0.3705.0).","nodes":[{"content":"The value of the HTTP protocol user agent header.","pos":[0,49]},{"content":"The default is \"MS Web Services Client Protocol <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">number</ph><ept id=\"p1\">&lt;/code&gt;</ept> \", where <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">number</ph><ept id=\"p2\">&lt;/code&gt;</ept> is the version of the common language runtime (for example, 1.0.3705.0).","pos":[50,219],"source":" The default is \"MS Web Services Client Protocol <code>number</code> \", where <code>number</code> is the version of the common language runtime (for example, 1.0.3705.0)."}]}],"pos":[38267,38487],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol\n  commentId: T:System.Web.Services.Protocols.HttpWebClientProtocol\n  id: HttpWebClientProtocol\n  children:\n  - System.Web.Services.Protocols.HttpWebClientProtocol.#ctor\n  - System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect\n  - System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)\n  - System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates\n  - System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer\n  - System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression\n  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)\n  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)\n  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)\n  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)\n  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)\n  - System.Web.Services.Protocols.HttpWebClientProtocol.Proxy\n  - System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing\n  - System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent\n  langs:\n  - csharp\n  name: HttpWebClientProtocol\n  nameWithType: HttpWebClientProtocol\n  fullName: System.Web.Services.Protocols.HttpWebClientProtocol\n  type: Class\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Represents the base class for all XML Web service client proxies that use the HTTP transport protocol.\n  remarks: \"The properties on this class are used to control the behavior of the HTTP request object used to transmit the XML Web service request and response. The properties map to properties found on <xref:System.Net.HttpWebRequest>.  \\n  \\n To communicate with an XML Web service using HTTP, you must create a proxy class deriving indirectly or directly from <xref:System.Web.Services.Protocols.HttpWebClientProtocol> for the XML Web service. Instead of creating the proxy class manually, you can use the Wsdl.exe tool to create a proxy class for a given XML Web service's service description.  \\n  \\n Since HttpWebClientProtocol is the base class for all proxy classes, its properties are on your proxy classes. These properties are useful for controlling the request behavior of the underlying transport. For example, use the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A> property for calling XML Web services through a firewall. Many of these properties are used to initialize the <xref:System.Net.HttpWebRequest> that makes the Web request.  \\n  \\n <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> derive directly or indirectly from <xref:System.Web.Services.Protocols.HttpWebClientProtocol> to provide support for SOAP, HTTP-GET and HTTP-POST respectively.\"\n  example:\n  - \"The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form allows the server to automatically redirect the client to other sites. It also sets client authentication credentials, proxy settings, the request encoding and the time out for the request before calling the XML Web service method.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[Classic HttpWebClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpWebClientProtocol Example/CS/sourcecs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[Classic HttpWebClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpWebClientProtocol Example/VB/sourcevb.aspx#1)]  -->\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class HttpWebClientProtocol : System.Web.Services.Protocols.WebClientProtocol\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  - System.Web.Services.Protocols.WebClientProtocol\n  derivedClasses:\n  - System.Web.Services.Discovery.DiscoveryClientProtocol\n  - System.Web.Services.Protocols.HttpSimpleClientProtocol\n  - System.Web.Services.Protocols.SoapHttpClientProtocol\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Dispose(System.Boolean)\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.ComponentModel.Component.ToString\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Web.Services.Protocols.WebClientProtocol.Abort\n  - System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)\n  - System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName\n  - System.Web.Services.Protocols.WebClientProtocol.Credentials\n  - System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)\n  - System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate\n  - System.Web.Services.Protocols.WebClientProtocol.RequestEncoding\n  - System.Web.Services.Protocols.WebClientProtocol.Timeout\n  - System.Web.Services.Protocols.WebClientProtocol.Url\n  - System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor\n  commentId: M:System.Web.Services.Protocols.HttpWebClientProtocol.#ctor\n  id: '#ctor'\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: HttpWebClientProtocol()\n  nameWithType: HttpWebClientProtocol.HttpWebClientProtocol()\n  fullName: HttpWebClientProtocol.HttpWebClientProtocol()\n  type: Constructor\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Initializes a new instance of the <xref href=\"System.Web.Services.Protocols.HttpWebClientProtocol\"></xref> class.\n  syntax:\n    content: protected HttpWebClientProtocol ();\n    parameters: []\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect\n  commentId: P:System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect\n  id: AllowAutoRedirect\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: AllowAutoRedirect\n  nameWithType: HttpWebClientProtocol.AllowAutoRedirect\n  fullName: HttpWebClientProtocol.AllowAutoRedirect\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets or sets whether the client automatically follows server redirects.\n  remarks: \"If a client sends authentication information, such as a user name and password, you do not want to enable the server to redirect, because this can compromise security.  \\n  \\n A <xref:System.Net.WebException> is thrown if the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect%2A> property is `false` and the Web server attempts to redirect the request. The <xref:System.Net.WebException.Response%2A> property contains an <xref:System.Net.HttpWebResponse> object, where both the <xref:System.Net.HttpWebResponse.StatusCode%2A> and <xref:System.Net.HttpWebResponse.Headers%2A> properties reflect details regarding the attempted redirect. The <xref:System.Net.HttpWebResponse.StatusCode%2A> property contains an <xref:System.Net.HttpStatusCode> equivalent to one of the HTTP redirect status codes (301, 302, and 307) and the `Location` header within the <xref:System.Net.HttpWebResponse.Headers%2A> collection points to the URI that the request attempted to be redirected to.\"\n  syntax:\n    content: public bool AllowAutoRedirect { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to automatically redirect the client to follow server redirects; otherwise, `false`. The default is `false`.'\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect*\n  exceptions:\n  - type: System.Net.WebException\n    commentId: T:System.Net.WebException\n    description: The <xref href=\"System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect\"></xref> property is `false` and the Web server attempts to redirect the request.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)\n  commentId: M:System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)\n  id: CancelAsync(System.Object)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: CancelAsync(Object)\n  nameWithType: HttpWebClientProtocol.CancelAsync(Object)\n  fullName: HttpWebClientProtocol.CancelAsync(Object)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Cancels an asynchronous call to an XML Web service method, unless the call has already completed.\n  syntax:\n    content: protected void CancelAsync (object userState);\n    parameters:\n    - id: userState\n      type: System.Object\n      description: The object provided in the last parameter to the asynchronous call of the `Begin` method.\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates\n  commentId: P:System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates\n  id: ClientCertificates\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: ClientCertificates\n  nameWithType: HttpWebClientProtocol.ClientCertificates\n  fullName: HttpWebClientProtocol.ClientCertificates\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets the collection of client certificates.\n  remarks: This property allows a client to pass one or more client certificates, also known as Authenticode X.509 v.3 certificates, when calling an XML Web service method. If the XML Web service method has been configured to use client certificates, a client certificate can be used as one mechanism for authenticating a client. For details on setting up client certificates, see the Internet Information Services (IIS) documentation.\n  example:\n  - \"The following code example demonstrates how to load in a client certificate from a file and then add it to the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates%2A> property for calling an XML Web service method that uses client certificates for authentication.  \\n  \\n [!code-csharp[HttpWebClientProtocol.ClientCertificates#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebClientProtocol.ClientCertificates/CS/certcs.aspx#1)]\\n [!code-vb[HttpWebClientProtocol.ClientCertificates#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebClientProtocol.ClientCertificates/VB/certvb.aspx#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n      description: An <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref> that represents the client certificates.\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer\n  commentId: P:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer\n  id: CookieContainer\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: CookieContainer\n  nameWithType: HttpWebClientProtocol.CookieContainer\n  fullName: HttpWebClientProtocol.CookieContainer\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets or sets the collection of cookies.\n  remarks: If an XML Web service method uses session state, then a cookie is passed back in the response headers to the XML Web service client that uniquely identifies the session for that XML Web service client. In order for an XML Web service to maintain session state for a client, the client must store the cookie. Clients receive the HTTP cookie by creating a new instance of <xref:System.Net.CookieContainer> and assigning that to the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> property of the proxy class before calling the XML Web service method. If you need to maintain session state beyond when the proxy class instance goes out of scope, the client must store the HTTP cookie between calls to the XML Web service. For instance, a Web Forms client can store the HTTP cookie by saving the <xref:System.Net.CookieContainer> in its own session state. Because not all XML Web services use session state and thus clients are not always required to use the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> property of a client proxy, the documentation for the XML Web service must state whether session state is used.\n  example:\n  - \"The following code example is a Web Forms client of an XML Web service that uses session state. The client stores the HTTP cookie that uniquely identifies the session by storing it in the client's session state.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[HttpWebClientProtocol.CookieContainer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebClientProtocol.CookieContainer/CS/serverusageclientcs.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[HttpWebClientProtocol.CookieContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebClientProtocol.CookieContainer/VB/serverusageclientvb.aspx#1)]  -->\"\n  syntax:\n    content: public System.Net.CookieContainer CookieContainer { get; set; }\n    return:\n      type: System.Net.CookieContainer\n      description: A <xref href=\"System.Net.CookieContainer\"></xref> that represents the cookies for a Web Services client.\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression\n  commentId: P:System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression\n  id: EnableDecompression\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: EnableDecompression\n  nameWithType: HttpWebClientProtocol.EnableDecompression\n  fullName: HttpWebClientProtocol.EnableDecompression\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets or sets a value that indicates whether decompression is enabled for this <xref href=\"System.Web.Services.Protocols.HttpWebClientProtocol\"></xref>.\n  syntax:\n    content: public bool EnableDecompression { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if decompression is enabled for this <xref href=\"System.Web.Services.Protocols.HttpWebClientProtocol\"></xref>; otherwise, `false`. The default is `false`.'\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)\n  commentId: M:System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)\n  id: GenerateXmlMappings(System.Type,System.Collections.ArrayList)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: GenerateXmlMappings(Type, ArrayList)\n  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type, ArrayList)\n  fullName: HttpWebClientProtocol.GenerateXmlMappings(Type, ArrayList)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets the <xref href=\"System.Xml.Serialization.XmlMembersMapping\"></xref> for each XML Web service method exposed by the specified type, and stores the mappings in the specified <xref href=\"System.Collections.ArrayList\"></xref>.\n  syntax:\n    content: public static bool GenerateXmlMappings (Type type, System.Collections.ArrayList mapping);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> that exposes the XML Web service methods.\n    - id: mappings\n      type: System.Collections.ArrayList\n      description: ''\n    return:\n      type: System.Boolean\n      description: '`true` if <code>type</code> can be assigned to a <xref href=\"System.Web.Services.Protocols.SoapHttpClientProtocol\"></xref>; otherwise, `false`.'\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)\n  commentId: M:System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)\n  id: GenerateXmlMappings(System.Type[],System.Collections.ArrayList)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: GenerateXmlMappings(Type[], ArrayList)\n  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type[], ArrayList)\n  fullName: HttpWebClientProtocol.GenerateXmlMappings(Type[], ArrayList)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets the <xref href=\"System.Xml.Serialization.XmlMembersMapping\"></xref> for each XML Web service method exposed by the specified types, and stores the mappings in the specified <xref href=\"System.Collections.ArrayList\"></xref>, as well as in a <xref href=\"System.Collections.Hashtable\"></xref> that this method returns.\n  syntax:\n    content: public static System.Collections.Hashtable GenerateXmlMappings (Type[] types, System.Collections.ArrayList mapping);\n    parameters:\n    - id: types\n      type: System.Type[]\n      description: An array of type <xref href=\"System.Type\"></xref> that contains the types that expose the XML Web service methods.\n    - id: mappings\n      type: System.Collections.ArrayList\n      description: ''\n    return:\n      type: System.Collections.Hashtable\n      description: A <xref href=\"System.Collections.Hashtable\"></xref> that contains the <xref href=\"System.Xml.Serialization.XmlMembersMapping\"></xref> for each XML Web service method exposed by the specified types. The types contained in <code>types</code> are used as keys.\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)\n  commentId: M:System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)\n  id: GetWebRequest(System.Uri)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: GetWebRequest(Uri)\n  nameWithType: HttpWebClientProtocol.GetWebRequest(Uri)\n  fullName: HttpWebClientProtocol.GetWebRequest(Uri)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Creates a <xref href=\"System.Net.WebRequest\"></xref> for the specified URI.\n  syntax:\n    content: protected override System.Net.WebRequest GetWebRequest (Uri uri);\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> for creating the <xref href=\"System.Net.WebRequest\"></xref>.\n    return:\n      type: System.Net.WebRequest\n      description: The created <xref href=\"System.Net.WebRequest\"></xref>.\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <code>uri</code> parameter is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)\n  commentId: M:System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)\n  id: GetWebResponse(System.Net.WebRequest)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: GetWebResponse(WebRequest)\n  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest)\n  fullName: HttpWebClientProtocol.GetWebResponse(WebRequest)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Returns a response from a synchronous request to an XML Web service method.\n  syntax:\n    content: protected override System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);\n    parameters:\n    - id: request\n      type: System.Net.WebRequest\n      description: The <xref href=\"System.Net.WebRequest\"></xref> from which to get the response.\n    return:\n      type: System.Net.WebResponse\n      description: A response from a synchronous request to an XML Web service method.\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)\n  commentId: M:System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)\n  id: GetWebResponse(System.Net.WebRequest,System.IAsyncResult)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: GetWebResponse(WebRequest, IAsyncResult)\n  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest, IAsyncResult)\n  fullName: HttpWebClientProtocol.GetWebResponse(WebRequest, IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Returns a response from an asynchronous request to an XML Web service method.\n  syntax:\n    content: protected override System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);\n    parameters:\n    - id: request\n      type: System.Net.WebRequest\n      description: The <xref href=\"System.Net.WebRequest\"></xref> from which to get the response.\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> to pass to <xref href=\"System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)\"></xref> when the response has completed.\n    return:\n      type: System.Net.WebResponse\n      description: A response from an asynchronous request to an XML Web service method.\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy\n  commentId: P:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy\n  id: Proxy\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: Proxy\n  nameWithType: HttpWebClientProtocol.Proxy\n  fullName: HttpWebClientProtocol.Proxy\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets or sets proxy information for making an XML Web service request through a firewall.\n  remarks: \"Use the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A> property if a client needs to use different proxy settings than those in the system settings. Use the <xref:System.Net.WebProxy> class to set the proxy settings, because it implements <xref:System.Net.IWebProxy>.  \\n  \\n Default proxy settings can be set in a configuration file. For details, see [Configuring Internet Applications](~/docs/framework/network-programming/configuring-internet-applications.md).\"\n  example:\n  - \"The following example sets the following proxy settings prior to invoking the `Math` XML Web service: the proxy server to http://proxyserver, the proxy port to 80 and the bypass to the proxy server for local addresses.  \\n  \\n [!code-cpp[Classic HttpWebClientProtocol.Proxy Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpWebClientProtocol.Proxy Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic HttpWebClientProtocol.Proxy Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpWebClientProtocol.Proxy Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpWebClientProtocol.Proxy Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpWebClientProtocol.Proxy Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Net.IWebProxy Proxy { get; set; }\n    return:\n      type: System.Net.IWebProxy\n      description: An <xref href=\"System.Net.IWebProxy\"></xref> that contains the proxy information for making requests through a firewall. The default value is the operating system proxy settings.\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing\n  commentId: P:System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing\n  id: UnsafeAuthenticatedConnectionSharing\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: UnsafeAuthenticatedConnectionSharing\n  nameWithType: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing\n  fullName: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets or sets a value that indicates whether connection sharing is enabled when the client uses NTLM authentication to connect to the Web server that hosts the XML Web service.\n  remarks: This property sets the value of the <xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A> property of the <xref:System.Net.HttpWebRequest> used to communicate with the Web server.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool UnsafeAuthenticatedConnectionSharing { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if connection sharing is enabled; otherwise, `false`. The default is `false`.'\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent\n  commentId: P:System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent\n  id: UserAgent\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  langs:\n  - csharp\n  name: UserAgent\n  nameWithType: HttpWebClientProtocol.UserAgent\n  fullName: HttpWebClientProtocol.UserAgent\n  type: Property\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Gets or sets the value for the user agent header that is sent with each request.\n  remarks: The user agent string allows a Web server to identify the client.\n  example:\n  - >-\n    [!code-cpp[HttpWebClientProtocol_UserAgent#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebClientProtocol_UserAgent/CPP/httpwebclientprotocol_useragent.cpp#1)]\n     [!code-csharp[HttpWebClientProtocol_UserAgent#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebClientProtocol_UserAgent/CS/httpwebclientprotocol_useragent.cs#1)]\n     [!code-vb[HttpWebClientProtocol_UserAgent#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebClientProtocol_UserAgent/VB/httpwebclientprotocol_useragent.vb#1)]\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public string UserAgent { get; set; }\n    return:\n      type: System.String\n      description: The value of the HTTP protocol user agent header. The default is \"MS Web Services Client Protocol <code>number</code> \", where <code>number</code> is the version of the common language runtime (for example, 1.0.3705.0).\n  overload: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Web.Services.Protocols.WebClientProtocol\n  parent: System.Web.Services.Protocols\n  isExternal: false\n  name: WebClientProtocol\n  nameWithType: WebClientProtocol\n  fullName: System.Web.Services.Protocols.WebClientProtocol\n- uid: System.Net.WebException\n  parent: System.Net\n  isExternal: false\n  name: WebException\n  nameWithType: WebException\n  fullName: System.Net.WebException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: HttpWebClientProtocol()\n  nameWithType: HttpWebClientProtocol.HttpWebClientProtocol()\n  fullName: HttpWebClientProtocol.HttpWebClientProtocol()\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: AllowAutoRedirect\n  nameWithType: HttpWebClientProtocol.AllowAutoRedirect\n  fullName: HttpWebClientProtocol.AllowAutoRedirect\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: CancelAsync(Object)\n  nameWithType: HttpWebClientProtocol.CancelAsync(Object)\n  fullName: HttpWebClientProtocol.CancelAsync(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: ClientCertificates\n  nameWithType: HttpWebClientProtocol.ClientCertificates\n  fullName: HttpWebClientProtocol.ClientCertificates\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509CertificateCollection\n  nameWithType: X509CertificateCollection\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: CookieContainer\n  nameWithType: HttpWebClientProtocol.CookieContainer\n  fullName: HttpWebClientProtocol.CookieContainer\n- uid: System.Net.CookieContainer\n  parent: System.Net\n  isExternal: false\n  name: CookieContainer\n  nameWithType: CookieContainer\n  fullName: System.Net.CookieContainer\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: EnableDecompression\n  nameWithType: HttpWebClientProtocol.EnableDecompression\n  fullName: HttpWebClientProtocol.EnableDecompression\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: GenerateXmlMappings(Type, ArrayList)\n  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type, ArrayList)\n  fullName: HttpWebClientProtocol.GenerateXmlMappings(Type, ArrayList)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Collections.ArrayList\n  parent: System.Collections\n  isExternal: false\n  name: ArrayList\n  nameWithType: ArrayList\n  fullName: System.Collections.ArrayList\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: GenerateXmlMappings(Type[], ArrayList)\n  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type[], ArrayList)\n  fullName: HttpWebClientProtocol.GenerateXmlMappings(Type[], ArrayList)\n- uid: System.Collections.Hashtable\n  parent: System.Collections\n  isExternal: false\n  name: Hashtable\n  nameWithType: Hashtable\n  fullName: System.Collections.Hashtable\n- uid: System.Type[]\n  parent: System\n  isExternal: false\n  name: Type[]\n  nameWithType: Type[]\n  fullName: System.Type[]\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: GetWebRequest(Uri)\n  nameWithType: HttpWebClientProtocol.GetWebRequest(Uri)\n  fullName: HttpWebClientProtocol.GetWebRequest(Uri)\n- uid: System.Net.WebRequest\n  parent: System.Net\n  isExternal: false\n  name: WebRequest\n  nameWithType: WebRequest\n  fullName: System.Net.WebRequest\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: GetWebResponse(WebRequest)\n  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest)\n  fullName: HttpWebClientProtocol.GetWebResponse(WebRequest)\n- uid: System.Net.WebResponse\n  parent: System.Net\n  isExternal: false\n  name: WebResponse\n  nameWithType: WebResponse\n  fullName: System.Net.WebResponse\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: GetWebResponse(WebRequest, IAsyncResult)\n  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest, IAsyncResult)\n  fullName: HttpWebClientProtocol.GetWebResponse(WebRequest, IAsyncResult)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: Proxy\n  nameWithType: HttpWebClientProtocol.Proxy\n  fullName: HttpWebClientProtocol.Proxy\n- uid: System.Net.IWebProxy\n  parent: System.Net\n  isExternal: false\n  name: IWebProxy\n  nameWithType: IWebProxy\n  fullName: System.Net.IWebProxy\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: UnsafeAuthenticatedConnectionSharing\n  nameWithType: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing\n  fullName: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: UserAgent\n  nameWithType: HttpWebClientProtocol.UserAgent\n  fullName: HttpWebClientProtocol.UserAgent\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor*\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: HttpWebClientProtocol\n  nameWithType: HttpWebClientProtocol.HttpWebClientProtocol\n  fullName: HttpWebClientProtocol.HttpWebClientProtocol\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect*\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: AllowAutoRedirect\n  nameWithType: HttpWebClientProtocol.AllowAutoRedirect\n  fullName: HttpWebClientProtocol.AllowAutoRedirect\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync*\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: CancelAsync\n  nameWithType: HttpWebClientProtocol.CancelAsync\n  fullName: HttpWebClientProtocol.CancelAsync\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates*\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: ClientCertificates\n  nameWithType: HttpWebClientProtocol.ClientCertificates\n  fullName: HttpWebClientProtocol.ClientCertificates\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer*\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: CookieContainer\n  nameWithType: HttpWebClientProtocol.CookieContainer\n  fullName: HttpWebClientProtocol.CookieContainer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression*\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: EnableDecompression\n  nameWithType: HttpWebClientProtocol.EnableDecompression\n  fullName: HttpWebClientProtocol.EnableDecompression\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings*\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: GenerateXmlMappings\n  nameWithType: HttpWebClientProtocol.GenerateXmlMappings\n  fullName: HttpWebClientProtocol.GenerateXmlMappings\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest*\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: GetWebRequest\n  nameWithType: HttpWebClientProtocol.GetWebRequest\n  fullName: HttpWebClientProtocol.GetWebRequest\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse*\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: GetWebResponse\n  nameWithType: HttpWebClientProtocol.GetWebResponse\n  fullName: HttpWebClientProtocol.GetWebResponse\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy*\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: Proxy\n  nameWithType: HttpWebClientProtocol.Proxy\n  fullName: HttpWebClientProtocol.Proxy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing*\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: UnsafeAuthenticatedConnectionSharing\n  nameWithType: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing\n  fullName: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent*\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: UserAgent\n  nameWithType: HttpWebClientProtocol.UserAgent\n  fullName: HttpWebClientProtocol.UserAgent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.ComponentModel.Component.ToString\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: ToString()\n  nameWithType: Component.ToString()\n  fullName: Component.ToString()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: CreateObjRef(Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  fullName: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: GetLifetimeService()\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  fullName: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n  fullName: MarshalByRefObject.InitializeLifetimeService()\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MemberwiseClone(Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  fullName: MarshalByRefObject.MemberwiseClone(Boolean)\n- uid: System.ComponentModel.Component.CanRaiseEvents\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: CanRaiseEvents\n  nameWithType: Component.CanRaiseEvents\n  fullName: Component.CanRaiseEvents\n- uid: System.ComponentModel.Component.Container\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Container\n  nameWithType: Component.Container\n  fullName: Component.Container\n- uid: System.ComponentModel.Component.DesignMode\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: DesignMode\n  nameWithType: Component.DesignMode\n  fullName: Component.DesignMode\n- uid: System.ComponentModel.Component.Dispose\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Dispose()\n  nameWithType: Component.Dispose()\n  fullName: Component.Dispose()\n- uid: System.ComponentModel.Component.Dispose(System.Boolean)\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: Component.Dispose(Boolean)\n  fullName: Component.Dispose(Boolean)\n- uid: System.ComponentModel.Component.Disposed\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Disposed\n  nameWithType: Component.Disposed\n  fullName: Component.Disposed\n- uid: System.ComponentModel.Component.Events\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Events\n  nameWithType: Component.Events\n  fullName: Component.Events\n- uid: System.ComponentModel.Component.GetService(System.Type)\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: GetService(Type)\n  nameWithType: Component.GetService(Type)\n  fullName: Component.GetService(Type)\n- uid: System.ComponentModel.Component.Site\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Site\n  nameWithType: Component.Site\n  fullName: Component.Site\n- uid: System.Web.Services.Protocols.WebClientProtocol.Abort\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: Abort()\n  nameWithType: WebClientProtocol.Abort()\n  fullName: WebClientProtocol.Abort()\n- uid: System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: AddToCache(Type, Object)\n  nameWithType: WebClientProtocol.AddToCache(Type, Object)\n  fullName: WebClientProtocol.AddToCache(Type, Object)\n- uid: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: ConnectionGroupName\n  nameWithType: WebClientProtocol.ConnectionGroupName\n  fullName: WebClientProtocol.ConnectionGroupName\n- uid: System.Web.Services.Protocols.WebClientProtocol.Credentials\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: Credentials\n  nameWithType: WebClientProtocol.Credentials\n  fullName: WebClientProtocol.Credentials\n- uid: System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: GetFromCache(Type)\n  nameWithType: WebClientProtocol.GetFromCache(Type)\n  fullName: WebClientProtocol.GetFromCache(Type)\n- uid: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: PreAuthenticate\n  nameWithType: WebClientProtocol.PreAuthenticate\n  fullName: WebClientProtocol.PreAuthenticate\n- uid: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: RequestEncoding\n  nameWithType: WebClientProtocol.RequestEncoding\n  fullName: WebClientProtocol.RequestEncoding\n- uid: System.Web.Services.Protocols.WebClientProtocol.Timeout\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: Timeout\n  nameWithType: WebClientProtocol.Timeout\n  fullName: WebClientProtocol.Timeout\n- uid: System.Web.Services.Protocols.WebClientProtocol.Url\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: Url\n  nameWithType: WebClientProtocol.Url\n  fullName: WebClientProtocol.Url\n- uid: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: UseDefaultCredentials\n  nameWithType: WebClientProtocol.UseDefaultCredentials\n  fullName: WebClientProtocol.UseDefaultCredentials\n"}