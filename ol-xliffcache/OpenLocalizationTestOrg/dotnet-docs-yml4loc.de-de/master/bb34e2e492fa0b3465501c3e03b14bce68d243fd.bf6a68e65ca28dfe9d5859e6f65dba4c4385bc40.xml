{"nodes":[{"content":"Represents an extension that hooks up with compensation activities and persists compensation-related instance state.","nodes":[{"pos":[0,116],"content":"Represents an extension that hooks up with compensation activities and persists compensation-related instance state.","nodes":[{"content":"Represents an extension that hooks up with compensation activities and persists compensation-related instance state.","pos":[0,116]}]}],"pos":[1186,1303],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Activities.Statements.CompensationExtension\"></xref> class.","nodes":[{"pos":[0,112],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.CompensationExtension\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Activities.Statements.CompensationExtension\"></xref> class."}],"pos":[3185,3298],"yaml":true},{"content":"Called by the host to collect read-write values and write-only values related to compensation to be persisted.","nodes":[{"pos":[0,110],"content":"Called by the host to collect read-write values and write-only values related to compensation to be persisted.","nodes":[{"content":"Called by the host to collect read-write values and write-only values related to compensation to be persisted.","pos":[0,110]}]}],"pos":[5112,5223],"yaml":true},{"content":"The read-write values to be persisted.","nodes":[{"pos":[0,38],"content":"The read-write values to be persisted.","nodes":[{"content":"The read-write values to be persisted.","pos":[0,38]}]}],"pos":[5615,5654],"yaml":true},{"content":"The write-only values to be persisted.","nodes":[{"pos":[0,38],"content":"The write-only values to be persisted.","nodes":[{"content":"The write-only values to be persisted.","pos":[0,38]}]}],"pos":[5787,5826],"yaml":true},{"content":"Called by the host to pass all of the loaded values related to compensation that were part of the most recent persistence episode.","nodes":[{"pos":[0,130],"content":"Called by the host to pass all of the loaded values related to compensation that were part of the most recent persistence episode.","nodes":[{"content":"Called by the host to pass all of the loaded values related to compensation that were part of the most recent persistence episode.","pos":[0,130]}]}],"pos":[7258,7389],"yaml":true},{"content":"The read-write values that were loaded from the persistence store.","nodes":[{"pos":[0,66],"content":"The read-write values that were loaded from the persistence store.","nodes":[{"content":"The read-write values that were loaded from the persistence store.","pos":[0,66]}]}],"pos":[7687,7754],"yaml":true},{"content":"Returns any additional extensions to compensation activities.","nodes":[{"pos":[0,61],"content":"Returns any additional extensions to compensation activities.","nodes":[{"content":"Returns any additional extensions to compensation activities.","pos":[0,61]}]}],"pos":[9194,9256],"yaml":true},{"content":"A collection of additional workflow extensions.","nodes":[{"pos":[0,47],"content":"A collection of additional workflow extensions.","nodes":[{"content":"A collection of additional workflow extensions.","pos":[0,47]}]}],"pos":[9497,9545],"yaml":true},{"content":"Sets any additional extensions to compensation activities.","nodes":[{"pos":[0,58],"content":"Sets any additional extensions to compensation activities.","nodes":[{"content":"Sets any additional extensions to compensation activities.","pos":[0,58]}]}],"pos":[11186,11245],"yaml":true},{"content":"The target workflow instance to set.","nodes":[{"pos":[0,36],"content":"The target workflow instance to set.","nodes":[{"content":"The target workflow instance to set.","pos":[0,36]}]}],"pos":[11486,11523],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.CompensationExtension\n  commentId: T:System.Activities.Statements.CompensationExtension\n  id: CompensationExtension\n  children:\n  - System.Activities.Statements.CompensationExtension.#ctor\n  - System.Activities.Statements.CompensationExtension.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)\n  - System.Activities.Statements.CompensationExtension.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})\n  - System.Activities.Statements.CompensationExtension.System#Activities#Hosting#IWorkflowInstanceExtension#GetAdditionalExtensions\n  - System.Activities.Statements.CompensationExtension.System#Activities#Hosting#IWorkflowInstanceExtension#SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)\n  langs:\n  - csharp\n  name: CompensationExtension\n  nameWithType: CompensationExtension\n  fullName: System.Activities.Statements.CompensationExtension\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Represents an extension that hooks up with compensation activities and persists compensation-related instance state.\n  syntax:\n    content: 'public class CompensationExtension : System.Activities.Persistence.PersistenceParticipant, System.Activities.Hosting.IWorkflowInstanceExtension'\n  inheritance:\n  - System.Object\n  - System.Activities.Persistence.PersistenceParticipant\n  implements:\n  - System.Activities.Hosting.IWorkflowInstanceExtension\n  inheritedMembers:\n  - System.Activities.Persistence.PersistenceParticipant.MapValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensationExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.CompensationExtension.#ctor\n  commentId: M:System.Activities.Statements.CompensationExtension.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.CompensationExtension\n  langs:\n  - csharp\n  name: CompensationExtension()\n  nameWithType: CompensationExtension.CompensationExtension()\n  fullName: CompensationExtension.CompensationExtension()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Initializes a new instance of the <xref href=\"System.Activities.Statements.CompensationExtension\"></xref> class.\n  syntax:\n    content: public CompensationExtension ();\n    parameters: []\n  overload: System.Activities.Statements.CompensationExtension.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensationExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.CompensationExtension.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)\n  commentId: M:System.Activities.Statements.CompensationExtension.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)\n  id: CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)\n  parent: System.Activities.Statements.CompensationExtension\n  langs:\n  - csharp\n  name: CollectValues(IDictionary<XName,Object>, IDictionary<XName,Object>)\n  nameWithType: CompensationExtension.CollectValues(IDictionary<XName,Object>, IDictionary<XName,Object>)\n  fullName: CompensationExtension.CollectValues(IDictionary<XName,Object>, IDictionary<XName,Object>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Called by the host to collect read-write values and write-only values related to compensation to be persisted.\n  syntax:\n    content: protected override void CollectValues (out System.Collections.Generic.IDictionary<System.Xml.Linq.XName,object> readWriteValues, out System.Collections.Generic.IDictionary<System.Xml.Linq.XName,object> writeOnlyValues);\n    parameters:\n    - id: readWriteValues\n      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}\n      description: The read-write values to be persisted.\n    - id: writeOnlyValues\n      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}\n      description: The write-only values to be persisted.\n  overload: System.Activities.Statements.CompensationExtension.CollectValues*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensationExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.CompensationExtension.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})\n  commentId: M:System.Activities.Statements.CompensationExtension.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})\n  id: PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})\n  parent: System.Activities.Statements.CompensationExtension\n  langs:\n  - csharp\n  name: PublishValues(IDictionary<XName,Object>)\n  nameWithType: CompensationExtension.PublishValues(IDictionary<XName,Object>)\n  fullName: CompensationExtension.PublishValues(IDictionary<XName,Object>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Called by the host to pass all of the loaded values related to compensation that were part of the most recent persistence episode.\n  syntax:\n    content: protected override void PublishValues (System.Collections.Generic.IDictionary<System.Xml.Linq.XName,object> readWriteValues);\n    parameters:\n    - id: readWriteValues\n      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}\n      description: The read-write values that were loaded from the persistence store.\n  overload: System.Activities.Statements.CompensationExtension.PublishValues*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensationExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.CompensationExtension.System#Activities#Hosting#IWorkflowInstanceExtension#GetAdditionalExtensions\n  commentId: M:System.Activities.Statements.CompensationExtension.System#Activities#Hosting#IWorkflowInstanceExtension#GetAdditionalExtensions\n  id: System#Activities#Hosting#IWorkflowInstanceExtension#GetAdditionalExtensions\n  isEii: true\n  parent: System.Activities.Statements.CompensationExtension\n  langs:\n  - csharp\n  name: IWorkflowInstanceExtension.GetAdditionalExtensions()\n  nameWithType: CompensationExtension.IWorkflowInstanceExtension.GetAdditionalExtensions()\n  fullName: CompensationExtension.IWorkflowInstanceExtension.GetAdditionalExtensions()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Returns any additional extensions to compensation activities.\n  syntax:\n    content: System.Collections.Generic.IEnumerable<object> IWorkflowInstanceExtension.GetAdditionalExtensions ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Object}\n      description: A collection of additional workflow extensions.\n  overload: System.Activities.Statements.CompensationExtension.System#Activities#Hosting#IWorkflowInstanceExtension#GetAdditionalExtensions*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensationExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.CompensationExtension.System#Activities#Hosting#IWorkflowInstanceExtension#SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)\n  commentId: M:System.Activities.Statements.CompensationExtension.System#Activities#Hosting#IWorkflowInstanceExtension#SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)\n  id: System#Activities#Hosting#IWorkflowInstanceExtension#SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)\n  isEii: true\n  parent: System.Activities.Statements.CompensationExtension\n  langs:\n  - csharp\n  name: IWorkflowInstanceExtension.SetInstance(WorkflowInstanceProxy)\n  nameWithType: CompensationExtension.IWorkflowInstanceExtension.SetInstance(WorkflowInstanceProxy)\n  fullName: CompensationExtension.IWorkflowInstanceExtension.SetInstance(WorkflowInstanceProxy)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Sets any additional extensions to compensation activities.\n  syntax:\n    content: void IWorkflowInstanceExtension.SetInstance (System.Activities.Hosting.WorkflowInstanceProxy instance);\n    parameters:\n    - id: instance\n      type: System.Activities.Hosting.WorkflowInstanceProxy\n      description: The target workflow instance to set.\n  overload: System.Activities.Statements.CompensationExtension.System#Activities#Hosting#IWorkflowInstanceExtension#SetInstance*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensationExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.Persistence.PersistenceParticipant\n  parent: System.Activities.Persistence\n  isExternal: false\n  name: PersistenceParticipant\n  nameWithType: PersistenceParticipant\n  fullName: System.Activities.Persistence.PersistenceParticipant\n- uid: System.Activities.Statements.CompensationExtension.#ctor\n  parent: System.Activities.Statements.CompensationExtension\n  isExternal: false\n  name: CompensationExtension()\n  nameWithType: CompensationExtension.CompensationExtension()\n  fullName: CompensationExtension.CompensationExtension()\n- uid: System.Activities.Statements.CompensationExtension.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)\n  parent: System.Activities.Statements.CompensationExtension\n  isExternal: false\n  name: CollectValues(IDictionary<XName,Object>, IDictionary<XName,Object>)\n  nameWithType: CompensationExtension.CollectValues(IDictionary<XName,Object>, IDictionary<XName,Object>)\n  fullName: CompensationExtension.CollectValues(IDictionary<XName,Object>, IDictionary<XName,Object>)\n- uid: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.Xml.Linq.XName\n  name: XName\n  nameWithType: XName\n  fullName: System.Xml.Linq.XName\n- uid: System.Object\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<XName,Object>\n  nameWithType: IDictionary<XName,Object>\n  fullName: System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Xml.Linq.XName\n    name: XName\n    nameWithType: XName\n    fullName: System.Xml.Linq.XName\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.CompensationExtension.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})\n  parent: System.Activities.Statements.CompensationExtension\n  isExternal: false\n  name: PublishValues(IDictionary<XName,Object>)\n  nameWithType: CompensationExtension.PublishValues(IDictionary<XName,Object>)\n  fullName: CompensationExtension.PublishValues(IDictionary<XName,Object>)\n- uid: System.Activities.Statements.CompensationExtension.System#Activities#Hosting#IWorkflowInstanceExtension#GetAdditionalExtensions\n  parent: System.Activities.Statements.CompensationExtension\n  isExternal: false\n  name: IWorkflowInstanceExtension.GetAdditionalExtensions()\n  nameWithType: CompensationExtension.IWorkflowInstanceExtension.GetAdditionalExtensions()\n  fullName: CompensationExtension.IWorkflowInstanceExtension.GetAdditionalExtensions()\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Object>\n  nameWithType: IEnumerable<Object>\n  fullName: System.Collections.Generic.IEnumerable<System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.CompensationExtension.System#Activities#Hosting#IWorkflowInstanceExtension#SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)\n  parent: System.Activities.Statements.CompensationExtension\n  isExternal: false\n  name: IWorkflowInstanceExtension.SetInstance(WorkflowInstanceProxy)\n  nameWithType: CompensationExtension.IWorkflowInstanceExtension.SetInstance(WorkflowInstanceProxy)\n  fullName: CompensationExtension.IWorkflowInstanceExtension.SetInstance(WorkflowInstanceProxy)\n- uid: System.Activities.Hosting.WorkflowInstanceProxy\n  parent: System.Activities.Hosting\n  isExternal: false\n  name: WorkflowInstanceProxy\n  nameWithType: WorkflowInstanceProxy\n  fullName: System.Activities.Hosting.WorkflowInstanceProxy\n- uid: System.Activities.Statements.CompensationExtension.#ctor*\n  parent: System.Activities.Statements.CompensationExtension\n  isExternal: false\n  name: CompensationExtension\n  nameWithType: CompensationExtension.CompensationExtension\n  fullName: CompensationExtension.CompensationExtension\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensationExtension.xml\n- uid: System.Activities.Statements.CompensationExtension.CollectValues*\n  parent: System.Activities.Statements.CompensationExtension\n  isExternal: false\n  name: CollectValues\n  nameWithType: CompensationExtension.CollectValues\n  fullName: CompensationExtension.CollectValues\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensationExtension.xml\n- uid: System.Activities.Statements.CompensationExtension.PublishValues*\n  parent: System.Activities.Statements.CompensationExtension\n  isExternal: false\n  name: PublishValues\n  nameWithType: CompensationExtension.PublishValues\n  fullName: CompensationExtension.PublishValues\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensationExtension.xml\n- uid: System.Activities.Statements.CompensationExtension.System#Activities#Hosting#IWorkflowInstanceExtension#GetAdditionalExtensions*\n  parent: System.Activities.Statements.CompensationExtension\n  isExternal: false\n  name: System.Activities.Hosting.IWorkflowInstanceExtension.GetAdditionalExtensions\n  nameWithType: CompensationExtension.System.Activities.Hosting.IWorkflowInstanceExtension.GetAdditionalExtensions\n  fullName: CompensationExtension.System.Activities.Hosting.IWorkflowInstanceExtension.GetAdditionalExtensions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensationExtension.xml\n- uid: System.Activities.Statements.CompensationExtension.System#Activities#Hosting#IWorkflowInstanceExtension#SetInstance*\n  parent: System.Activities.Statements.CompensationExtension\n  isExternal: false\n  name: System.Activities.Hosting.IWorkflowInstanceExtension.SetInstance\n  nameWithType: CompensationExtension.System.Activities.Hosting.IWorkflowInstanceExtension.SetInstance\n  fullName: CompensationExtension.System.Activities.Hosting.IWorkflowInstanceExtension.SetInstance\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/CompensationExtension.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Activities.Persistence.PersistenceParticipant.MapValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})\n  parent: System.Activities.Persistence.PersistenceParticipant\n  isExternal: false\n  name: MapValues(IDictionary<XName,Object>, IDictionary<XName,Object>)\n  nameWithType: PersistenceParticipant.MapValues(IDictionary<XName,Object>, IDictionary<XName,Object>)\n  fullName: PersistenceParticipant.MapValues(IDictionary<XName,Object>, IDictionary<XName,Object>)\n- uid: System.Activities.Hosting.IWorkflowInstanceExtension\n  parent: System.Activities.Hosting\n  isExternal: false\n  name: IWorkflowInstanceExtension\n  nameWithType: IWorkflowInstanceExtension\n  fullName: System.Activities.Hosting.IWorkflowInstanceExtension\n"}