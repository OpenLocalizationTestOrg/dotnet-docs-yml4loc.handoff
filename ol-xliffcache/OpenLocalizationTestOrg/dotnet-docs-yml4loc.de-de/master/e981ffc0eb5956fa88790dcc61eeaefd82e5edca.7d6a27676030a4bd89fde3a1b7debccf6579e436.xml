{"nodes":[{"content":"Represents a configuration element that defines a filter element. This element is used to define the type of filter, as well as any supporting data or parameters required by the filter.","nodes":[{"pos":[0,185],"content":"Represents a configuration element that defines a filter element. This element is used to define the type of filter, as well as any supporting data or parameters required by the filter.","nodes":[{"content":"Represents a configuration element that defines a filter element. This element is used to define the type of filter, as well as any supporting data or parameters required by the filter.","pos":[0,185],"nodes":[{"content":"Represents a configuration element that defines a filter element.","pos":[0,65]},{"content":"This element is used to define the type of filter, as well as any supporting data or parameters required by the filter.","pos":[66,185]}]}]}],"pos":[948,1134],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Routing.Configuration.FilterElement\"></xref> class.","nodes":[{"pos":[0,117],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Routing.Configuration.FilterElement\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Routing.Configuration.FilterElement\"></xref> class."}],"pos":[5344,5462],"yaml":true},{"content":"Gets or sets the fully-qualified type name of the custom type to be used as a filter.","nodes":[{"pos":[0,85],"content":"Gets or sets the fully-qualified type name of the custom type to be used as a filter.","nodes":[{"content":"Gets or sets the fully-qualified type name of the custom type to be used as a filter.","pos":[0,85]}]}],"pos":[6657,6743],"yaml":true},{"content":"If <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType%2A> is set to custom, <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> is the fully-qualified type name of the class to create. <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> can also contain values to be used during evaluation of the <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> filter. The <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> must implement a constructor that accepts a string value, which contains the <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> information.  \n  \n [!INCLUDE[crdefault](~/includes/crdefault-md.md)] <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.","nodes":[{"pos":[0,701],"content":"If <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType%2A> is set to custom, <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> is the fully-qualified type name of the class to create. <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> can also contain values to be used during evaluation of the <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> filter. The <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> must implement a constructor that accepts a string value, which contains the <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> information.","nodes":[{"content":"If <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType%2A> is set to custom, <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> is the fully-qualified type name of the class to create. <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> can also contain values to be used during evaluation of the <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> filter. The <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> must implement a constructor that accepts a string value, which contains the <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> information.","pos":[0,701],"nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType%2A&gt;</ph> is set to custom, <ph id=\"ph2\">&lt;xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A&gt;</ph> is the fully-qualified type name of the class to create.","pos":[0,231],"source":"If <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType%2A> is set to custom, <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> is the fully-qualified type name of the class to create."},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A&gt;</ph> can also contain values to be used during evaluation of the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A&gt;</ph> filter.","pos":[232,453],"source":" <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> can also contain values to be used during evaluation of the <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> filter."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A&gt;</ph> must implement a constructor that accepts a string value, which contains the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A&gt;</ph> information.","pos":[454,701],"source":" The <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> must implement a constructor that accepts a string value, which contains the <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> information."}]}]},{"pos":[708,835],"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id=\"ph2\">&lt;xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A&gt;</ph>.","source":"[!INCLUDE[crdefault](~/includes/crdefault-md.md)] <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>."}],"pos":[6754,7594],"yaml":true,"extradata":"MT"},{"content":"The fully-qualified type.","nodes":[{"pos":[0,25],"content":"The fully-qualified type.","nodes":[{"content":"The fully-qualified type.","pos":[0,25]}]}],"pos":[7901,7927],"yaml":true},{"content":"Gets or sets the filter1 data of this configuration element. This value is only used when <xref href=\"System.ServiceModel.Routing.Configuration.FilterElement.FilterType\"></xref> is set to And.","nodes":[{"pos":[0,192],"content":"Gets or sets the filter1 data of this configuration element. This value is only used when <xref href=\"System.ServiceModel.Routing.Configuration.FilterElement.FilterType\"></xref> is set to And.","nodes":[{"content":"Gets or sets the filter1 data of this configuration element.","pos":[0,60]},{"content":"This value is only used when <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Routing.Configuration.FilterElement.FilterType\"&gt;&lt;/xref&gt;</ph> is set to And.","pos":[61,192],"source":" This value is only used when <xref href=\"System.ServiceModel.Routing.Configuration.FilterElement.FilterType\"></xref> is set to And."}]}],"pos":[9118,9311],"yaml":true},{"content":"The content of <xref:System.ServiceModel.Routing.Configuration.FilterElement.Filter1%2A> is only used during evaluation of the AND filter. [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.","nodes":[{"pos":[0,265],"content":"The content of <xref:System.ServiceModel.Routing.Configuration.FilterElement.Filter1%2A> is only used during evaluation of the AND filter. [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.","nodes":[{"content":"The content of <ph id=\"ph1\">&lt;xref:System.ServiceModel.Routing.Configuration.FilterElement.Filter1%2A&gt;</ph> is only used during evaluation of the AND filter.","pos":[0,138],"source":"The content of <xref:System.ServiceModel.Routing.Configuration.FilterElement.Filter1%2A> is only used during evaluation of the AND filter."},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph><ph id=\"ph2\">&lt;xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A&gt;</ph>.","pos":[139,265],"source":"[!INCLUDE[crdefault](~/includes/crdefault-md.md)]<xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>."}]}],"pos":[9322,9588],"yaml":true,"extradata":"MT"},{"content":"The filter1 value of this element.","nodes":[{"pos":[0,34],"content":"The filter1 value of this element.","nodes":[{"content":"The filter1 value of this element.","pos":[0,34]}]}],"pos":[9889,9924],"yaml":true},{"content":"Gets or sets the filter2 data of this configuration element. This value is only used when <xref href=\"System.ServiceModel.Routing.Configuration.FilterElement.FilterType\"></xref> is set to AND.","nodes":[{"pos":[0,192],"content":"Gets or sets the filter2 data of this configuration element. This value is only used when <xref href=\"System.ServiceModel.Routing.Configuration.FilterElement.FilterType\"></xref> is set to AND.","nodes":[{"content":"Gets or sets the filter2 data of this configuration element.","pos":[0,60]},{"content":"This value is only used when <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Routing.Configuration.FilterElement.FilterType\"&gt;&lt;/xref&gt;</ph> is set to AND.","pos":[61,192],"source":" This value is only used when <xref href=\"System.ServiceModel.Routing.Configuration.FilterElement.FilterType\"></xref> is set to AND."}]}],"pos":[11112,11305],"yaml":true},{"content":"The content of <xref:System.ServiceModel.Routing.Configuration.FilterElement.Filter2%2A> is only used during evaluation of the AND filters. [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.","nodes":[{"pos":[0,266],"content":"The content of <xref:System.ServiceModel.Routing.Configuration.FilterElement.Filter2%2A> is only used during evaluation of the AND filters. [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.","nodes":[{"content":"The content of <ph id=\"ph1\">&lt;xref:System.ServiceModel.Routing.Configuration.FilterElement.Filter2%2A&gt;</ph> is only used during evaluation of the AND filters.","pos":[0,139],"source":"The content of <xref:System.ServiceModel.Routing.Configuration.FilterElement.Filter2%2A> is only used during evaluation of the AND filters."},{"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph><ph id=\"ph2\">&lt;xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A&gt;</ph>.","pos":[140,266],"source":"[!INCLUDE[crdefault](~/includes/crdefault-md.md)]<xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>."}]}],"pos":[11316,11583],"yaml":true,"extradata":"MT"},{"content":"The filter2 value of this element.","nodes":[{"pos":[0,34],"content":"The filter2 value of this element.","nodes":[{"content":"The filter2 value of this element.","pos":[0,34]}]}],"pos":[11884,11919],"yaml":true},{"content":"Gets or sets the filter data of this configuration element.","nodes":[{"pos":[0,59],"content":"Gets or sets the filter data of this configuration element.","nodes":[{"content":"Gets or sets the filter data of this configuration element.","pos":[0,59]}]}],"pos":[13125,13185],"yaml":true},{"content":"The following table describes the meaning of <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> based on the value of <xref:System.ServiceModel.Routing.Configuration.FilterType>.  \n  \n|Filter  Type|Description|Filter Data Meaning|Example Filter|  \n|------------------|-----------------|-------------------------|--------------------|  \n|Action|Uses the ActionMessageFilter that comes with WCF.|The Action to filter upon.|\\<filter name=\"action1\" filterType=\"Action\" filterData=\"http://ACTION\" />|  \n|Address|Uses the EndpointAddressMessageFilter that comes with WCF with ignore host name == true.|The address to filter upon (in the To header).|\\<filter name=\"address1\" filterType=\"Address\" filterData=\"http://host/vdir/s.svc/b\"  />|  \n|AddressPrefix|Uses the PrefixEndpointAddressMessageFilter that comes with WCF with ignore host name == true.|The address to filter upon using longest prefix matching.|\\<filter name=\"prefix1\" filterType=\"AddressPrefix\" filterData=\"http://host\" />|  \n|StrictAnd|A custom AndMessageFilter that always evaluates both conditions before returning.|filterData is not used, instead filter1 and filter2 have the names of the corresponding messages filters (also in the table), which should be ANDed together.|\\<filter name=\"and1\" filterType=\"And\" filter1=\"address1\" filter2=\"action1\" />|  \n|Custom|A user-defined type that extends MessageFilter and has a constructor taking a string.|customType attribute is the fully-qualified type name of the class to create, filterData is the string to pass to the constructor when creating the filter.|\\<filter name=\"custom1\" filterType=\"Custom\" customType=\"CustomAssembly.CustomMsgFilter, CustomAssembly\" filterData=\"Custom Data\" />|  \n|EndpointName|A custom message filter for use solely in the Routing Service, which filters messages based on the name of the service endpoint.|The name of the service endpoint, for example: \"serviceEndpoint1\".  This should be one of the endpoints exposed on the Routing Service.|\\<filter name=\"stock1\" filterType=\"Endpoint\" filterData=\"SvcEndpoint\" />|  \n|MatchAll|Uses the MatchAllMessageFilter that comes with WCF.|N/A|\\<filter name=\"matchAll1\" filterType=\"MatchAll\" />|  \n|XPath|Uses the XPathMessageFilter that comes with WCF.|The XPath query to use when matching messages.|\\<filter name=\"XPath1\" filterType=\"XPath\" filterData=\"//ns:element\" />|","nodes":[{"pos":[0,204],"content":"The following table describes the meaning of <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> based on the value of <xref:System.ServiceModel.Routing.Configuration.FilterType>.","nodes":[{"content":"The following table describes the meaning of <ph id=\"ph1\">&lt;xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A&gt;</ph> based on the value of <ph id=\"ph2\">&lt;xref:System.ServiceModel.Routing.Configuration.FilterType&gt;</ph>.","pos":[0,204],"source":"The following table describes the meaning of <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> based on the value of <xref:System.ServiceModel.Routing.Configuration.FilterType>."}]},{"pos":[211,223],"content":"Filter  Type","nodes":[{"content":"Filter  Type","pos":[0,12]}]},{"pos":[224,235],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[236,255],"content":"Filter Data Meaning","nodes":[{"content":"Filter Data Meaning","pos":[0,19]}]},{"pos":[256,270],"content":"Example Filter","nodes":[{"content":"Example Filter","pos":[0,14]}]},{"pos":[363,369],"content":"Action","nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[370,419],"content":"Uses the ActionMessageFilter that comes with WCF.","nodes":[{"content":"Uses the ActionMessageFilter that comes with WCF.","pos":[0,49]}]},{"pos":[420,446],"content":"The Action to filter upon.","nodes":[{"content":"The Action to filter upon.","pos":[0,26]}]},{"pos":[447,520],"content":"\\<filter name=\"action1\" filterType=\"Action\" filterData=\"http://ACTION\" />","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>filter name=\"action1\" filterType=\"Action\" filterData=\"http://ACTION\" /&gt;","pos":[0,73],"source":"\\<filter name=\"action1\" filterType=\"Action\" filterData=\"http://ACTION\" />"}]},{"pos":[525,532],"content":"Address","nodes":[{"content":"Address","pos":[0,7]}]},{"pos":[533,621],"content":"Uses the EndpointAddressMessageFilter that comes with WCF with ignore host name == true.","nodes":[{"content":"Uses the EndpointAddressMessageFilter that comes with WCF with ignore host name == true.","pos":[0,88]}]},{"pos":[622,668],"content":"The address to filter upon (in the To header).","nodes":[{"content":"The address to filter upon (in the To header).","pos":[0,46]}]},{"pos":[669,756],"content":"\\<filter name=\"address1\" filterType=\"Address\" filterData=\"http://host/vdir/s.svc/b\"  />","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>filter name=\"address1\" filterType=\"Address\" filterData=\"http://host/vdir/s.svc/b\"  /&gt;","pos":[0,87],"source":"\\<filter name=\"address1\" filterType=\"Address\" filterData=\"http://host/vdir/s.svc/b\"  />"}]},{"pos":[761,774],"content":"AddressPrefix","nodes":[{"content":"AddressPrefix","pos":[0,13]}]},{"pos":[775,869],"content":"Uses the PrefixEndpointAddressMessageFilter that comes with WCF with ignore host name == true.","nodes":[{"content":"Uses the PrefixEndpointAddressMessageFilter that comes with WCF with ignore host name == true.","pos":[0,94]}]},{"pos":[870,927],"content":"The address to filter upon using longest prefix matching.","nodes":[{"content":"The address to filter upon using longest prefix matching.","pos":[0,57]}]},{"pos":[928,1006],"content":"\\<filter name=\"prefix1\" filterType=\"AddressPrefix\" filterData=\"http://host\" />","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>filter name=\"prefix1\" filterType=\"AddressPrefix\" filterData=\"http://host\" /&gt;","pos":[0,78],"source":"\\<filter name=\"prefix1\" filterType=\"AddressPrefix\" filterData=\"http://host\" />"}]},{"pos":[1011,1020],"content":"StrictAnd","nodes":[{"content":"StrictAnd","pos":[0,9]}]},{"pos":[1021,1102],"content":"A custom AndMessageFilter that always evaluates both conditions before returning.","nodes":[{"content":"A custom AndMessageFilter that always evaluates both conditions before returning.","pos":[0,81]}]},{"pos":[1103,1260],"content":"filterData is not used, instead filter1 and filter2 have the names of the corresponding messages filters (also in the table), which should be ANDed together.","nodes":[{"content":"filterData is not used, instead filter1 and filter2 have the names of the corresponding messages filters (also in the table), which should be ANDed together.","pos":[0,157]}]},{"pos":[1261,1338],"content":"\\<filter name=\"and1\" filterType=\"And\" filter1=\"address1\" filter2=\"action1\" />","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>filter name=\"and1\" filterType=\"And\" filter1=\"address1\" filter2=\"action1\" /&gt;","pos":[0,77],"source":"\\<filter name=\"and1\" filterType=\"And\" filter1=\"address1\" filter2=\"action1\" />"}]},{"pos":[1343,1349],"content":"Custom","nodes":[{"content":"Custom","pos":[0,6]}]},{"pos":[1350,1435],"content":"A user-defined type that extends MessageFilter and has a constructor taking a string.","nodes":[{"content":"A user-defined type that extends MessageFilter and has a constructor taking a string.","pos":[0,85]}]},{"pos":[1436,1591],"content":"customType attribute is the fully-qualified type name of the class to create, filterData is the string to pass to the constructor when creating the filter.","nodes":[{"content":"customType attribute is the fully-qualified type name of the class to create, filterData is the string to pass to the constructor when creating the filter.","pos":[0,155]}]},{"pos":[1592,1723],"content":"\\<filter name=\"custom1\" filterType=\"Custom\" customType=\"CustomAssembly.CustomMsgFilter, CustomAssembly\" filterData=\"Custom Data\" />","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>filter name=\"custom1\" filterType=\"Custom\" customType=\"CustomAssembly.CustomMsgFilter, CustomAssembly\" filterData=\"Custom Data\" /&gt;","pos":[0,131],"source":"\\<filter name=\"custom1\" filterType=\"Custom\" customType=\"CustomAssembly.CustomMsgFilter, CustomAssembly\" filterData=\"Custom Data\" />"}]},{"pos":[1728,1740],"content":"EndpointName","nodes":[{"content":"EndpointName","pos":[0,12]}]},{"pos":[1741,1869],"content":"A custom message filter for use solely in the Routing Service, which filters messages based on the name of the service endpoint.","nodes":[{"content":"A custom message filter for use solely in the Routing Service, which filters messages based on the name of the service endpoint.","pos":[0,128]}]},{"pos":[1870,2005],"content":"The name of the service endpoint, for example: \"serviceEndpoint1\".  This should be one of the endpoints exposed on the Routing Service.","nodes":[{"content":"The name of the service endpoint, for example: \"serviceEndpoint1\".  This should be one of the endpoints exposed on the Routing Service.","pos":[0,135],"nodes":[{"content":"The name of the service endpoint, for example: \"serviceEndpoint1\".","pos":[0,66]},{"content":"This should be one of the endpoints exposed on the Routing Service.","pos":[68,135]}]}]},{"pos":[2006,2078],"content":"\\<filter name=\"stock1\" filterType=\"Endpoint\" filterData=\"SvcEndpoint\" />","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>filter name=\"stock1\" filterType=\"Endpoint\" filterData=\"SvcEndpoint\" /&gt;","pos":[0,72],"source":"\\<filter name=\"stock1\" filterType=\"Endpoint\" filterData=\"SvcEndpoint\" />"}]},{"pos":[2083,2091],"content":"MatchAll","nodes":[{"content":"MatchAll","pos":[0,8]}]},{"pos":[2092,2143],"content":"Uses the MatchAllMessageFilter that comes with WCF.","nodes":[{"content":"Uses the MatchAllMessageFilter that comes with WCF.","pos":[0,51]}]},{"pos":[2144,2147],"content":"N/A","nodes":[{"content":"N/A","pos":[0,3]}]},{"pos":[2148,2198],"content":"\\<filter name=\"matchAll1\" filterType=\"MatchAll\" />","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>filter name=\"matchAll1\" filterType=\"MatchAll\" /&gt;","pos":[0,50],"source":"\\<filter name=\"matchAll1\" filterType=\"MatchAll\" />"}]},{"pos":[2203,2208],"content":"XPath","nodes":[{"content":"XPath","pos":[0,5]}]},{"pos":[2209,2257],"content":"Uses the XPathMessageFilter that comes with WCF.","nodes":[{"content":"Uses the XPathMessageFilter that comes with WCF.","pos":[0,48]}]},{"pos":[2258,2304],"content":"The XPath query to use when matching messages.","nodes":[{"content":"The XPath query to use when matching messages.","pos":[0,46]}]},{"pos":[2305,2375],"content":"\\<filter name=\"XPath1\" filterType=\"XPath\" filterData=\"//ns:element\" />","nodes":[{"content":"<ph id=\"ph1\">\\&lt;</ph>filter name=\"XPath1\" filterType=\"XPath\" filterData=\"//ns:element\" /&gt;","pos":[0,70],"source":"\\<filter name=\"XPath1\" filterType=\"XPath\" filterData=\"//ns:element\" />"}]}],"pos":[13196,15646],"yaml":true,"extradata":"MT"},{"content":"The filter data of this element.","nodes":[{"pos":[0,32],"content":"The filter data of this element.","nodes":[{"content":"The filter data of this element.","pos":[0,32]}]}],"pos":[15953,15986],"yaml":true},{"content":"Gets or sets the <xref href=\"System.ServiceModel.Routing.Configuration.FilterType\"></xref> of this configuration element.","nodes":[{"pos":[0,121],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Routing.Configuration.FilterType\"&gt;&lt;/xref&gt;</ph> of this configuration element.","source":"Gets or sets the <xref href=\"System.ServiceModel.Routing.Configuration.FilterType\"></xref> of this configuration element."}],"pos":[17195,17317],"yaml":true},{"content":"The filter type of this element.","nodes":[{"pos":[0,32],"content":"The filter type of this element.","nodes":[{"content":"The filter type of this element.","pos":[0,32]}]}],"pos":[17715,17748],"yaml":true},{"content":"Gets or sets the name of this configuration element.","nodes":[{"pos":[0,52],"content":"Gets or sets the name of this configuration element.","nodes":[{"content":"Gets or sets the name of this configuration element.","pos":[0,52]}]}],"pos":[18921,18974],"yaml":true},{"content":"The unique name of this configuration element.","nodes":[{"pos":[0,46],"content":"The unique name of this configuration element.","nodes":[{"content":"The unique name of this configuration element.","pos":[0,46]}]}],"pos":[19333,19380],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Routing.Configuration.FilterElement\n  commentId: T:System.ServiceModel.Routing.Configuration.FilterElement\n  id: FilterElement\n  children:\n  - System.ServiceModel.Routing.Configuration.FilterElement.#ctor\n  - System.ServiceModel.Routing.Configuration.FilterElement.CustomType\n  - System.ServiceModel.Routing.Configuration.FilterElement.Filter1\n  - System.ServiceModel.Routing.Configuration.FilterElement.Filter2\n  - System.ServiceModel.Routing.Configuration.FilterElement.FilterData\n  - System.ServiceModel.Routing.Configuration.FilterElement.FilterType\n  - System.ServiceModel.Routing.Configuration.FilterElement.Name\n  langs:\n  - csharp\n  name: FilterElement\n  nameWithType: FilterElement\n  fullName: System.ServiceModel.Routing.Configuration.FilterElement\n  type: Class\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Represents a configuration element that defines a filter element. This element is used to define the type of filter, as well as any supporting data or parameters required by the filter.\n  syntax:\n    content: 'public class FilterElement : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Properties\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/FilterElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.#ctor\n  commentId: M:System.ServiceModel.Routing.Configuration.FilterElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  langs:\n  - csharp\n  name: FilterElement()\n  nameWithType: FilterElement.FilterElement()\n  fullName: FilterElement.FilterElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Routing.Configuration.FilterElement\"></xref> class.\n  syntax:\n    content: public FilterElement ();\n    parameters: []\n  overload: System.ServiceModel.Routing.Configuration.FilterElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/FilterElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.CustomType\n  commentId: P:System.ServiceModel.Routing.Configuration.FilterElement.CustomType\n  id: CustomType\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  langs:\n  - csharp\n  name: CustomType\n  nameWithType: FilterElement.CustomType\n  fullName: FilterElement.CustomType\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets or sets the fully-qualified type name of the custom type to be used as a filter.\n  remarks: \"If <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterType%2A> is set to custom, <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> is the fully-qualified type name of the class to create. <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> can also contain values to be used during evaluation of the <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> filter. The <xref:System.ServiceModel.Routing.Configuration.FilterElement.CustomType%2A> must implement a constructor that accepts a string value, which contains the <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> information.  \\n  \\n [!INCLUDE[crdefault](~/includes/crdefault-md.md)] <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"customType\", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)]\n\n      public string CustomType { get; set; }\n    return:\n      type: System.String\n      description: The fully-qualified type.\n  overload: System.ServiceModel.Routing.Configuration.FilterElement.CustomType*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/FilterElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.Filter1\n  commentId: P:System.ServiceModel.Routing.Configuration.FilterElement.Filter1\n  id: Filter1\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  langs:\n  - csharp\n  name: Filter1\n  nameWithType: FilterElement.Filter1\n  fullName: FilterElement.Filter1\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets or sets the filter1 data of this configuration element. This value is only used when <xref href=\"System.ServiceModel.Routing.Configuration.FilterElement.FilterType\"></xref> is set to And.\n  remarks: The content of <xref:System.ServiceModel.Routing.Configuration.FilterElement.Filter1%2A> is only used during evaluation of the AND filter. [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"filter1\", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)]\n\n      public string Filter1 { get; set; }\n    return:\n      type: System.String\n      description: The filter1 value of this element.\n  overload: System.ServiceModel.Routing.Configuration.FilterElement.Filter1*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/FilterElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.Filter2\n  commentId: P:System.ServiceModel.Routing.Configuration.FilterElement.Filter2\n  id: Filter2\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  langs:\n  - csharp\n  name: Filter2\n  nameWithType: FilterElement.Filter2\n  fullName: FilterElement.Filter2\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets or sets the filter2 data of this configuration element. This value is only used when <xref href=\"System.ServiceModel.Routing.Configuration.FilterElement.FilterType\"></xref> is set to AND.\n  remarks: The content of <xref:System.ServiceModel.Routing.Configuration.FilterElement.Filter2%2A> is only used during evaluation of the AND filters. [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A>.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"filter2\", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)]\n\n      public string Filter2 { get; set; }\n    return:\n      type: System.String\n      description: The filter2 value of this element.\n  overload: System.ServiceModel.Routing.Configuration.FilterElement.Filter2*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/FilterElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.FilterData\n  commentId: P:System.ServiceModel.Routing.Configuration.FilterElement.FilterData\n  id: FilterData\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  langs:\n  - csharp\n  name: FilterData\n  nameWithType: FilterElement.FilterData\n  fullName: FilterElement.FilterData\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets or sets the filter data of this configuration element.\n  remarks: \"The following table describes the meaning of <xref:System.ServiceModel.Routing.Configuration.FilterElement.FilterData%2A> based on the value of <xref:System.ServiceModel.Routing.Configuration.FilterType>.  \\n  \\n|Filter  Type|Description|Filter Data Meaning|Example Filter|  \\n|------------------|-----------------|-------------------------|--------------------|  \\n|Action|Uses the ActionMessageFilter that comes with WCF.|The Action to filter upon.|\\\\<filter name=\\\"action1\\\" filterType=\\\"Action\\\" filterData=\\\"http://ACTION\\\" />|  \\n|Address|Uses the EndpointAddressMessageFilter that comes with WCF with ignore host name == true.|The address to filter upon (in the To header).|\\\\<filter name=\\\"address1\\\" filterType=\\\"Address\\\" filterData=\\\"http://host/vdir/s.svc/b\\\"  />|  \\n|AddressPrefix|Uses the PrefixEndpointAddressMessageFilter that comes with WCF with ignore host name == true.|The address to filter upon using longest prefix matching.|\\\\<filter name=\\\"prefix1\\\" filterType=\\\"AddressPrefix\\\" filterData=\\\"http://host\\\" />|  \\n|StrictAnd|A custom AndMessageFilter that always evaluates both conditions before returning.|filterData is not used, instead filter1 and filter2 have the names of the corresponding messages filters (also in the table), which should be ANDed together.|\\\\<filter name=\\\"and1\\\" filterType=\\\"And\\\" filter1=\\\"address1\\\" filter2=\\\"action1\\\" />|  \\n|Custom|A user-defined type that extends MessageFilter and has a constructor taking a string.|customType attribute is the fully-qualified type name of the class to create, filterData is the string to pass to the constructor when creating the filter.|\\\\<filter name=\\\"custom1\\\" filterType=\\\"Custom\\\" customType=\\\"CustomAssembly.CustomMsgFilter, CustomAssembly\\\" filterData=\\\"Custom Data\\\" />|  \\n|EndpointName|A custom message filter for use solely in the Routing Service, which filters messages based on the name of the service endpoint.|The name of the service endpoint, for example: \\\"serviceEndpoint1\\\".  This should be one of the endpoints exposed on the Routing Service.|\\\\<filter name=\\\"stock1\\\" filterType=\\\"Endpoint\\\" filterData=\\\"SvcEndpoint\\\" />|  \\n|MatchAll|Uses the MatchAllMessageFilter that comes with WCF.|N/A|\\\\<filter name=\\\"matchAll1\\\" filterType=\\\"MatchAll\\\" />|  \\n|XPath|Uses the XPathMessageFilter that comes with WCF.|The XPath query to use when matching messages.|\\\\<filter name=\\\"XPath1\\\" filterType=\\\"XPath\\\" filterData=\\\"//ns:element\\\" />|\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"filterData\", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)]\n\n      public string FilterData { get; set; }\n    return:\n      type: System.String\n      description: The filter data of this element.\n  overload: System.ServiceModel.Routing.Configuration.FilterElement.FilterData*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/FilterElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.FilterType\n  commentId: P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType\n  id: FilterType\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  langs:\n  - csharp\n  name: FilterType\n  nameWithType: FilterElement.FilterType\n  fullName: FilterElement.FilterType\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets or sets the <xref href=\"System.ServiceModel.Routing.Configuration.FilterType\"></xref> of this configuration element.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"filterType\", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.IsRequired)]\n\n      public System.ServiceModel.Routing.Configuration.FilterType FilterType { get; set; }\n    return:\n      type: System.ServiceModel.Routing.Configuration.FilterType\n      description: The filter type of this element.\n  overload: System.ServiceModel.Routing.Configuration.FilterElement.FilterType*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/FilterElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.Name\n  commentId: P:System.ServiceModel.Routing.Configuration.FilterElement.Name\n  id: Name\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  langs:\n  - csharp\n  name: Name\n  nameWithType: FilterElement.Name\n  fullName: FilterElement.Name\n  type: Property\n  assemblies:\n  - System.ServiceModel.Routing\n  namespace: System.ServiceModel.Routing.Configuration\n  summary: Gets or sets the name of this configuration element.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"name\", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.IsRequired | System.Configuration.ConfigurationPropertyOptions.IsKey)]\n\n      public string Name { get; set; }\n    return:\n      type: System.String\n      description: The unique name of this configuration element.\n  overload: System.ServiceModel.Routing.Configuration.FilterElement.Name*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/FilterElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationElement\n  nameWithType: ConfigurationElement\n  fullName: System.Configuration.ConfigurationElement\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.#ctor\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: FilterElement()\n  nameWithType: FilterElement.FilterElement()\n  fullName: FilterElement.FilterElement()\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.CustomType\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: CustomType\n  nameWithType: FilterElement.CustomType\n  fullName: FilterElement.CustomType\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.Filter1\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: Filter1\n  nameWithType: FilterElement.Filter1\n  fullName: FilterElement.Filter1\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.Filter2\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: Filter2\n  nameWithType: FilterElement.Filter2\n  fullName: FilterElement.Filter2\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.FilterData\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: FilterData\n  nameWithType: FilterElement.FilterData\n  fullName: FilterElement.FilterData\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.FilterType\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: FilterType\n  nameWithType: FilterElement.FilterType\n  fullName: FilterElement.FilterType\n- uid: System.ServiceModel.Routing.Configuration.FilterType\n  parent: System.ServiceModel.Routing.Configuration\n  isExternal: false\n  name: FilterType\n  nameWithType: FilterType\n  fullName: System.ServiceModel.Routing.Configuration.FilterType\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.Name\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: Name\n  nameWithType: FilterElement.Name\n  fullName: FilterElement.Name\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.#ctor*\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: FilterElement\n  nameWithType: FilterElement.FilterElement\n  fullName: FilterElement.FilterElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/FilterElement.xml\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.CustomType*\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: CustomType\n  nameWithType: FilterElement.CustomType\n  fullName: FilterElement.CustomType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/FilterElement.xml\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.Filter1*\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: Filter1\n  nameWithType: FilterElement.Filter1\n  fullName: FilterElement.Filter1\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/FilterElement.xml\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.Filter2*\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: Filter2\n  nameWithType: FilterElement.Filter2\n  fullName: FilterElement.Filter2\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/FilterElement.xml\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.FilterData*\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: FilterData\n  nameWithType: FilterElement.FilterData\n  fullName: FilterElement.FilterData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/FilterElement.xml\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.FilterType*\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: FilterType\n  nameWithType: FilterElement.FilterType\n  fullName: FilterElement.FilterType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/FilterElement.xml\n- uid: System.ServiceModel.Routing.Configuration.FilterElement.Name*\n  parent: System.ServiceModel.Routing.Configuration.FilterElement\n  isExternal: false\n  name: Name\n  nameWithType: FilterElement.Name\n  fullName: FilterElement.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Routing.Configuration/FilterElement.xml\n- uid: System.Configuration.ConfigurationElement.Equals(System.Object)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ConfigurationElement.Equals(Object)\n  fullName: ConfigurationElement.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Configuration.ConfigurationElement.GetHashCode\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ConfigurationElement.GetHashCode()\n  fullName: ConfigurationElement.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.ConfigurationElement.CurrentConfiguration\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: CurrentConfiguration\n  nameWithType: ConfigurationElement.CurrentConfiguration\n  fullName: ConfigurationElement.CurrentConfiguration\n- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: DeserializeElement(XmlReader, Boolean)\n  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n  fullName: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n- uid: System.Configuration.ConfigurationElement.ElementInformation\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementInformation\n  nameWithType: ConfigurationElement.ElementInformation\n  fullName: ConfigurationElement.ElementInformation\n- uid: System.Configuration.ConfigurationElement.ElementProperty\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementProperty\n  nameWithType: ConfigurationElement.ElementProperty\n  fullName: ConfigurationElement.ElementProperty\n- uid: System.Configuration.ConfigurationElement.EvaluationContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: EvaluationContext\n  nameWithType: ConfigurationElement.EvaluationContext\n  fullName: ConfigurationElement.EvaluationContext\n- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedAssemblyString(String)\n  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)\n  fullName: ConfigurationElement.GetTransformedAssemblyString(String)\n- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedTypeString(String)\n  nameWithType: ConfigurationElement.GetTransformedTypeString(String)\n  fullName: ConfigurationElement.GetTransformedTypeString(String)\n- uid: System.Configuration.ConfigurationElement.HasContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: HasContext\n  nameWithType: ConfigurationElement.HasContext\n  fullName: ConfigurationElement.HasContext\n- uid: System.Configuration.ConfigurationElement.Init\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Init()\n  nameWithType: ConfigurationElement.Init()\n  fullName: ConfigurationElement.Init()\n- uid: System.Configuration.ConfigurationElement.InitializeDefault\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: InitializeDefault()\n  nameWithType: ConfigurationElement.InitializeDefault()\n  fullName: ConfigurationElement.InitializeDefault()\n- uid: System.Configuration.ConfigurationElement.IsModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsModified()\n  nameWithType: ConfigurationElement.IsModified()\n  fullName: ConfigurationElement.IsModified()\n- uid: System.Configuration.ConfigurationElement.IsReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsReadOnly()\n  nameWithType: ConfigurationElement.IsReadOnly()\n  fullName: ConfigurationElement.IsReadOnly()\n- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(ConfigurationProperty)\n  nameWithType: ConfigurationElement.Item(ConfigurationProperty)\n  fullName: ConfigurationElement.Item(ConfigurationProperty)\n- uid: System.Configuration.ConfigurationElement.Item(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(String)\n  nameWithType: ConfigurationElement.Item(String)\n  fullName: ConfigurationElement.Item(String)\n- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ListErrors(IList)\n  nameWithType: ConfigurationElement.ListErrors(IList)\n  fullName: ConfigurationElement.ListErrors(IList)\n- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllAttributesExcept\n  nameWithType: ConfigurationElement.LockAllAttributesExcept\n  fullName: ConfigurationElement.LockAllAttributesExcept\n- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllElementsExcept\n  nameWithType: ConfigurationElement.LockAllElementsExcept\n  fullName: ConfigurationElement.LockAllElementsExcept\n- uid: System.Configuration.ConfigurationElement.LockAttributes\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAttributes\n  nameWithType: ConfigurationElement.LockAttributes\n  fullName: ConfigurationElement.LockAttributes\n- uid: System.Configuration.ConfigurationElement.LockElements\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockElements\n  nameWithType: ConfigurationElement.LockElements\n  fullName: ConfigurationElement.LockElements\n- uid: System.Configuration.ConfigurationElement.LockItem\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockItem\n  nameWithType: ConfigurationElement.LockItem\n  fullName: ConfigurationElement.LockItem\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedAttribute(String, String)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedElement(String, XmlReader)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnRequiredPropertyNotFound(String)\n  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)\n  fullName: ConfigurationElement.OnRequiredPropertyNotFound(String)\n- uid: System.Configuration.ConfigurationElement.PostDeserialize\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PostDeserialize()\n  nameWithType: ConfigurationElement.PostDeserialize()\n  fullName: ConfigurationElement.PostDeserialize()\n- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PreSerialize(XmlWriter)\n  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)\n  fullName: ConfigurationElement.PreSerialize(XmlWriter)\n- uid: System.Configuration.ConfigurationElement.Properties\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Properties\n  nameWithType: ConfigurationElement.Properties\n  fullName: ConfigurationElement.Properties\n- uid: System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: ConfigurationElement.Reset(ConfigurationElement)\n  fullName: ConfigurationElement.Reset(ConfigurationElement)\n- uid: System.Configuration.ConfigurationElement.ResetModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ResetModified()\n  nameWithType: ConfigurationElement.ResetModified()\n  fullName: ConfigurationElement.ResetModified()\n- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeElement(XmlWriter, Boolean)\n  nameWithType: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n  fullName: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeToXmlElement(XmlWriter, String)\n  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n  fullName: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  fullName: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n- uid: System.Configuration.ConfigurationElement.SetReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetReadOnly()\n  nameWithType: ConfigurationElement.SetReadOnly()\n  fullName: ConfigurationElement.SetReadOnly()\n- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  fullName: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n"}