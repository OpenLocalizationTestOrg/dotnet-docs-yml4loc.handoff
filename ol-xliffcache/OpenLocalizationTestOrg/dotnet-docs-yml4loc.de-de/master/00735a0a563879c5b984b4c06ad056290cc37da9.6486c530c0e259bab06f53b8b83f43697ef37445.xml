{"nodes":[{"content":"Represents an immutable block of binary data.","nodes":[{"pos":[0,45],"content":"Represents an immutable block of binary data.","nodes":[{"content":"Represents an immutable block of binary data.","pos":[0,45]}]}],"pos":[884,930],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Data.Linq.Binary\"></xref> class.","nodes":[{"pos":[0,85],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.Binary\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Data.Linq.Binary\"></xref> class."}],"pos":[2393,2479],"yaml":true},{"content":"When`null` is passed to this constructor instead of the required array of bytes, a <xref:System.ArgumentNullException?displayProperty=fullName> exception is thrown. Do not rely on this behavior because it may change in the future.","nodes":[{"pos":[0,230],"content":"When`null` is passed to this constructor instead of the required array of bytes, a <xref:System.ArgumentNullException?displayProperty=fullName> exception is thrown. Do not rely on this behavior because it may change in the future.","nodes":[{"content":"When<ph id=\"ph1\">`null`</ph> is passed to this constructor instead of the required array of bytes, a <ph id=\"ph2\">&lt;xref:System.ArgumentNullException?displayProperty=fullName&gt;</ph> exception is thrown.","pos":[0,164],"source":"When`null` is passed to this constructor instead of the required array of bytes, a <xref:System.ArgumentNullException?displayProperty=fullName> exception is thrown."},{"content":"Do not rely on this behavior because it may change in the future.","pos":[165,230]}]}],"pos":[2490,2721],"yaml":true,"extradata":"MT"},{"content":"The bytes representing the binary data.","nodes":[{"pos":[0,39],"content":"The bytes representing the binary data.","nodes":[{"content":"The bytes representing the binary data.","pos":[0,39]}]}],"pos":[2851,2891],"yaml":true},{"content":"Determines whether two binary objects are equal.","nodes":[{"pos":[0,48],"content":"Determines whether two binary objects are equal.","nodes":[{"content":"Determines whether two binary objects are equal.","pos":[0,48]}]}],"pos":[3926,3975],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> to which the current object is being compared.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to which the current object is being compared.","source":"The <xref href=\"System.Object\"></xref> to which the current object is being compared."}],"pos":[4137,4223],"yaml":true},{"content":"`true` if the two binary objects are equal; otherwise, `false`.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">`true`</ph> if the two binary objects are equal; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the two binary objects are equal; otherwise, `false`."}],"pos":[4281,4347],"yaml":true},{"content":"Determines whether the specified <xref href=\"System.Object\"></xref> is equal to the current <xref href=\"System.Object\"></xref>.","nodes":[{"pos":[0,127],"content":"Determines whether the specified <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> is equal to the current <ph id=\"ph2\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>.","source":"Determines whether the specified <xref href=\"System.Object\"></xref> is equal to the current <xref href=\"System.Object\"></xref>."}],"pos":[5353,5481],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> to compare with the current <xref href=\"System.Object\"></xref>.","nodes":[{"pos":[0,102],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to compare with the current <ph id=\"ph2\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Object\"></xref> to compare with the current <xref href=\"System.Object\"></xref>."}],"pos":[5621,5724],"yaml":true},{"content":"`true` if the two binary objects are equal; otherwise, `false`.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">`true`</ph> if the two binary objects are equal; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the two binary objects are equal; otherwise, `false`."}],"pos":[5782,5848],"yaml":true},{"content":"Serves as a hash function for a particular type.","nodes":[{"pos":[0,48],"content":"Serves as a hash function for a particular type.","nodes":[{"content":"Serves as a hash function for a particular type.","pos":[0,48]}]}],"pos":[6821,6870],"yaml":true},{"content":"A hash code for the current binary object.","nodes":[{"pos":[0,42],"content":"A hash code for the current binary object.","nodes":[{"content":"A hash code for the current binary object.","pos":[0,42]}]}],"pos":[7004,7047],"yaml":true},{"content":"Gets the length of the binary object.","nodes":[{"pos":[0,37],"content":"Gets the length of the binary object.","nodes":[{"content":"Gets the length of the binary object.","pos":[0,37]}]}],"pos":[7991,8029],"yaml":true},{"content":"An integer representing the length.","nodes":[{"pos":[0,35],"content":"An integer representing the length.","nodes":[{"content":"An integer representing the length.","pos":[0,35]}]}],"pos":[8135,8171],"yaml":true},{"content":"Describes the equality relationship between two binary objects.","nodes":[{"pos":[0,63],"content":"Describes the equality relationship between two binary objects.","nodes":[{"content":"Describes the equality relationship between two binary objects.","pos":[0,63]}]}],"pos":[9335,9399],"yaml":true},{"content":"Returns `true` if both are `null` but returns `false` if only one is `null`.","nodes":[{"pos":[0,76],"content":"Returns <ph id=\"ph1\">`true`</ph> if both are <ph id=\"ph2\">`null`</ph> but returns <ph id=\"ph3\">`false`</ph> if only one is <ph id=\"ph4\">`null`</ph>.","source":"Returns `true` if both are `null` but returns `false` if only one is `null`."}],"pos":[9410,9487],"yaml":true,"extradata":"MT"},{"content":"First binary object.","nodes":[{"pos":[0,20],"content":"First binary object.","nodes":[{"content":"First binary object.","pos":[0,20]}]}],"pos":[9698,9719],"yaml":true},{"content":"Second binary object.","nodes":[{"pos":[0,21],"content":"Second binary object.","nodes":[{"content":"Second binary object.","pos":[0,21]}]}],"pos":[9792,9814],"yaml":true},{"content":"`true` if the binary objects are equal; otherwise `false`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">`true`</ph> if the binary objects are equal; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the binary objects are equal; otherwise `false`."}],"pos":[9872,9933],"yaml":true},{"content":"Describes the inequality relationship between two binary objects.","nodes":[{"pos":[0,65],"content":"Describes the inequality relationship between two binary objects.","nodes":[{"content":"Describes the inequality relationship between two binary objects.","pos":[0,65]}]}],"pos":[12395,12461],"yaml":true},{"content":"Returns `false` if both are `null`, but returns `true` if either is `null`.","nodes":[{"pos":[0,75],"content":"Returns <ph id=\"ph1\">`false`</ph> if both are <ph id=\"ph2\">`null`</ph>, but returns <ph id=\"ph3\">`true`</ph> if either is <ph id=\"ph4\">`null`</ph>.","source":"Returns `false` if both are `null`, but returns `true` if either is `null`."}],"pos":[12472,12548],"yaml":true,"extradata":"MT"},{"content":"The first binary object.","nodes":[{"pos":[0,24],"content":"The first binary object.","nodes":[{"content":"The first binary object.","pos":[0,24]}]}],"pos":[12761,12786],"yaml":true},{"content":"The second binary object.","nodes":[{"pos":[0,25],"content":"The second binary object.","nodes":[{"content":"The second binary object.","pos":[0,25]}]}],"pos":[12859,12885],"yaml":true},{"content":"`true` if the binary objects are not equal; otherwise `false`.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">`true`</ph> if the binary objects are not equal; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the binary objects are not equal; otherwise `false`."}],"pos":[12943,13008],"yaml":true},{"content":"Returns an array of bytes that represents the current binary object.","nodes":[{"pos":[0,68],"content":"Returns an array of bytes that represents the current binary object.","nodes":[{"content":"Returns an array of bytes that represents the current binary object.","pos":[0,68]}]}],"pos":[13964,14033],"yaml":true},{"content":"A byte array that contains the value of the current binary object.","nodes":[{"pos":[0,66],"content":"A byte array that contains the value of the current binary object.","nodes":[{"content":"A byte array that contains the value of the current binary object.","pos":[0,66]}]}],"pos":[14158,14225],"yaml":true},{"content":"Returns a <xref href=\"System.String\"></xref> that represents the current binary object.","nodes":[{"pos":[0,87],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that represents the current binary object.","source":"Returns a <xref href=\"System.String\"></xref> that represents the current binary object."}],"pos":[15181,15269],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that represents the current binary object.","nodes":[{"pos":[0,79],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that represents the current binary object.","source":"A <xref href=\"System.String\"></xref> that represents the current binary object."}],"pos":[15404,15484],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.Binary\n  commentId: T:System.Data.Linq.Binary\n  id: Binary\n  children:\n  - System.Data.Linq.Binary.#ctor(System.Byte[])\n  - System.Data.Linq.Binary.Equals(System.Data.Linq.Binary)\n  - System.Data.Linq.Binary.Equals(System.Object)\n  - System.Data.Linq.Binary.GetHashCode\n  - System.Data.Linq.Binary.Length\n  - System.Data.Linq.Binary.op_Equality(System.Data.Linq.Binary,System.Data.Linq.Binary)\n  - System.Data.Linq.Binary.op_Implicit(System.Byte[] to System.Data.Linq.Binary)\n  - System.Data.Linq.Binary.op_Inequality(System.Data.Linq.Binary,System.Data.Linq.Binary)\n  - System.Data.Linq.Binary.ToArray\n  - System.Data.Linq.Binary.ToString\n  langs:\n  - csharp\n  name: Binary\n  nameWithType: Binary\n  fullName: System.Data.Linq.Binary\n  type: Class\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Represents an immutable block of binary data.\n  syntax:\n    content: >-\n      [System.Runtime.Serialization.DataContract]\n\n      public sealed class Binary : IEquatable<System.Data.Linq.Binary>\n  inheritance:\n  - System.Object\n  implements:\n  - System.IEquatable{System.Data.Linq.Binary}\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Runtime.Serialization.DataContractAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Binary.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Binary.#ctor(System.Byte[])\n  commentId: M:System.Data.Linq.Binary.#ctor(System.Byte[])\n  id: '#ctor(System.Byte[])'\n  parent: System.Data.Linq.Binary\n  langs:\n  - csharp\n  name: Binary(Byte[])\n  nameWithType: Binary.Binary(Byte[])\n  fullName: Binary.Binary(Byte[])\n  type: Constructor\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Initializes a new instance of the <xref href=\"System.Data.Linq.Binary\"></xref> class.\n  remarks: When`null` is passed to this constructor instead of the required array of bytes, a <xref:System.ArgumentNullException?displayProperty=fullName> exception is thrown. Do not rely on this behavior because it may change in the future.\n  syntax:\n    content: public Binary (byte[] value);\n    parameters:\n    - id: value\n      type: System.Byte[]\n      description: The bytes representing the binary data.\n  overload: System.Data.Linq.Binary.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Binary.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Binary.Equals(System.Data.Linq.Binary)\n  commentId: M:System.Data.Linq.Binary.Equals(System.Data.Linq.Binary)\n  id: Equals(System.Data.Linq.Binary)\n  parent: System.Data.Linq.Binary\n  langs:\n  - csharp\n  name: Equals(Binary)\n  nameWithType: Binary.Equals(Binary)\n  fullName: Binary.Equals(Binary)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Determines whether two binary objects are equal.\n  syntax:\n    content: public bool Equals (System.Data.Linq.Binary other);\n    parameters:\n    - id: other\n      type: System.Data.Linq.Binary\n      description: The <xref href=\"System.Object\"></xref> to which the current object is being compared.\n    return:\n      type: System.Boolean\n      description: '`true` if the two binary objects are equal; otherwise, `false`.'\n  overload: System.Data.Linq.Binary.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Binary.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Binary.Equals(System.Object)\n  commentId: M:System.Data.Linq.Binary.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Data.Linq.Binary\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Binary.Equals(Object)\n  fullName: Binary.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Determines whether the specified <xref href=\"System.Object\"></xref> is equal to the current <xref href=\"System.Object\"></xref>.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to compare with the current <xref href=\"System.Object\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the two binary objects are equal; otherwise, `false`.'\n  overload: System.Data.Linq.Binary.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Binary.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Binary.GetHashCode\n  commentId: M:System.Data.Linq.Binary.GetHashCode\n  id: GetHashCode\n  parent: System.Data.Linq.Binary\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Binary.GetHashCode()\n  fullName: Binary.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Serves as a hash function for a particular type.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current binary object.\n  overload: System.Data.Linq.Binary.GetHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Binary.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Binary.Length\n  commentId: P:System.Data.Linq.Binary.Length\n  id: Length\n  parent: System.Data.Linq.Binary\n  langs:\n  - csharp\n  name: Length\n  nameWithType: Binary.Length\n  fullName: Binary.Length\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Gets the length of the binary object.\n  syntax:\n    content: public int Length { get; }\n    return:\n      type: System.Int32\n      description: An integer representing the length.\n  overload: System.Data.Linq.Binary.Length*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Binary.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Binary.op_Equality(System.Data.Linq.Binary,System.Data.Linq.Binary)\n  commentId: M:System.Data.Linq.Binary.op_Equality(System.Data.Linq.Binary,System.Data.Linq.Binary)\n  id: op_Equality(System.Data.Linq.Binary,System.Data.Linq.Binary)\n  parent: System.Data.Linq.Binary\n  langs:\n  - csharp\n  name: op_Equality(Binary, Binary)\n  nameWithType: Binary.op_Equality(Binary, Binary)\n  fullName: Binary.op_Equality(Binary, Binary)\n  type: Operator\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Describes the equality relationship between two binary objects.\n  remarks: Returns `true` if both are `null` but returns `false` if only one is `null`.\n  syntax:\n    content: public static bool op_Equality (System.Data.Linq.Binary binary1, System.Data.Linq.Binary binary2);\n    parameters:\n    - id: binary1\n      type: System.Data.Linq.Binary\n      description: First binary object.\n    - id: binary2\n      type: System.Data.Linq.Binary\n      description: Second binary object.\n    return:\n      type: System.Boolean\n      description: '`true` if the binary objects are equal; otherwise `false`.'\n  overload: System.Data.Linq.Binary.op_Equality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Binary.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Binary.op_Implicit(System.Byte[] to System.Data.Linq.Binary)\n  commentId: M:System.Data.Linq.Binary.op_Implicit(System.Byte[])~System.Data.Linq.Binary\n  id: op_Implicit(System.Byte[] to System.Data.Linq.Binary)\n  parent: System.Data.Linq.Binary\n  langs:\n  - csharp\n  name: op_Implicit(Byte[] to Binary)\n  nameWithType: Binary.op_Implicit(Byte[] to Binary)\n  fullName: Binary.op_Implicit(Byte[] to Binary)\n  type: Operator\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public static System.Data.Linq.Binary op_Implicit (byte[] value);\n    parameters:\n    - id: value\n      type: System.Byte[]\n      description: ''\n    return:\n      type: System.Data.Linq.Binary\n      description: ''\n  overload: System.Data.Linq.Binary.op_Implicit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Binary.xml\n- uid: System.Data.Linq.Binary.op_Inequality(System.Data.Linq.Binary,System.Data.Linq.Binary)\n  commentId: M:System.Data.Linq.Binary.op_Inequality(System.Data.Linq.Binary,System.Data.Linq.Binary)\n  id: op_Inequality(System.Data.Linq.Binary,System.Data.Linq.Binary)\n  parent: System.Data.Linq.Binary\n  langs:\n  - csharp\n  name: op_Inequality(Binary, Binary)\n  nameWithType: Binary.op_Inequality(Binary, Binary)\n  fullName: Binary.op_Inequality(Binary, Binary)\n  type: Operator\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Describes the inequality relationship between two binary objects.\n  remarks: Returns `false` if both are `null`, but returns `true` if either is `null`.\n  syntax:\n    content: public static bool op_Inequality (System.Data.Linq.Binary binary1, System.Data.Linq.Binary binary2);\n    parameters:\n    - id: binary1\n      type: System.Data.Linq.Binary\n      description: The first binary object.\n    - id: binary2\n      type: System.Data.Linq.Binary\n      description: The second binary object.\n    return:\n      type: System.Boolean\n      description: '`true` if the binary objects are not equal; otherwise `false`.'\n  overload: System.Data.Linq.Binary.op_Inequality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Binary.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Binary.ToArray\n  commentId: M:System.Data.Linq.Binary.ToArray\n  id: ToArray\n  parent: System.Data.Linq.Binary\n  langs:\n  - csharp\n  name: ToArray()\n  nameWithType: Binary.ToArray()\n  fullName: Binary.ToArray()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Returns an array of bytes that represents the current binary object.\n  syntax:\n    content: public byte[] ToArray ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: A byte array that contains the value of the current binary object.\n  overload: System.Data.Linq.Binary.ToArray*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Binary.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.Binary.ToString\n  commentId: M:System.Data.Linq.Binary.ToString\n  id: ToString\n  parent: System.Data.Linq.Binary\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Binary.ToString()\n  fullName: Binary.ToString()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Returns a <xref href=\"System.String\"></xref> that represents the current binary object.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that represents the current binary object.\n  overload: System.Data.Linq.Binary.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Binary.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Linq.Binary.#ctor(System.Byte[])\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: Binary(Byte[])\n  nameWithType: Binary.Binary(Byte[])\n  fullName: Binary.Binary(Byte[])\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.Linq.Binary.Equals(System.Data.Linq.Binary)\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: Equals(Binary)\n  nameWithType: Binary.Equals(Binary)\n  fullName: Binary.Equals(Binary)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Linq.Binary\n  parent: System.Data.Linq\n  isExternal: false\n  name: Binary\n  nameWithType: Binary\n  fullName: System.Data.Linq.Binary\n- uid: System.Data.Linq.Binary.Equals(System.Object)\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Binary.Equals(Object)\n  fullName: Binary.Equals(Object)\n- uid: System.Data.Linq.Binary.GetHashCode\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Binary.GetHashCode()\n  fullName: Binary.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Linq.Binary.Length\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: Length\n  nameWithType: Binary.Length\n  fullName: Binary.Length\n- uid: System.Data.Linq.Binary.op_Equality(System.Data.Linq.Binary,System.Data.Linq.Binary)\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: op_Equality(Binary, Binary)\n  nameWithType: Binary.op_Equality(Binary, Binary)\n  fullName: Binary.op_Equality(Binary, Binary)\n- uid: System.Data.Linq.Binary.op_Implicit(System.Byte[] to System.Data.Linq.Binary)\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: op_Implicit(Byte[] to Binary)\n  nameWithType: Binary.op_Implicit(Byte[] to Binary)\n  fullName: Binary.op_Implicit(Byte[] to Binary)\n- uid: System.Data.Linq.Binary.op_Inequality(System.Data.Linq.Binary,System.Data.Linq.Binary)\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: op_Inequality(Binary, Binary)\n  nameWithType: Binary.op_Inequality(Binary, Binary)\n  fullName: Binary.op_Inequality(Binary, Binary)\n- uid: System.Data.Linq.Binary.ToArray\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: ToArray()\n  nameWithType: Binary.ToArray()\n  fullName: Binary.ToArray()\n- uid: System.Data.Linq.Binary.ToString\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: ToString()\n  nameWithType: Binary.ToString()\n  fullName: Binary.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Linq.Binary.#ctor*\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: Binary\n  nameWithType: Binary.Binary\n  fullName: Binary.Binary\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Binary.xml\n- uid: System.Data.Linq.Binary.Equals*\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: Equals\n  nameWithType: Binary.Equals\n  fullName: Binary.Equals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Binary.xml\n- uid: System.Data.Linq.Binary.GetHashCode*\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: GetHashCode\n  nameWithType: Binary.GetHashCode\n  fullName: Binary.GetHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Binary.xml\n- uid: System.Data.Linq.Binary.Length*\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: Length\n  nameWithType: Binary.Length\n  fullName: Binary.Length\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Binary.xml\n- uid: System.Data.Linq.Binary.op_Equality*\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: op_Equality\n  nameWithType: Binary.op_Equality\n  fullName: Binary.op_Equality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Binary.xml\n- uid: System.Data.Linq.Binary.op_Implicit*\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: op_Implicit\n  nameWithType: Binary.op_Implicit\n  fullName: Binary.op_Implicit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Binary.xml\n- uid: System.Data.Linq.Binary.op_Inequality*\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: op_Inequality\n  nameWithType: Binary.op_Inequality\n  fullName: Binary.op_Inequality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Binary.xml\n- uid: System.Data.Linq.Binary.ToArray*\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: ToArray\n  nameWithType: Binary.ToArray\n  fullName: Binary.ToArray\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Binary.xml\n- uid: System.Data.Linq.Binary.ToString*\n  parent: System.Data.Linq.Binary\n  isExternal: false\n  name: ToString\n  nameWithType: Binary.ToString\n  fullName: Binary.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/Binary.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.IEquatable`1\n  name: IEquatable<T>\n  nameWithType: IEquatable<T>\n  fullName: System.IEquatable<T>\n- uid: System.IEquatable{System.Data.Linq.Binary}\n  parent: System\n  isExternal: false\n  name: IEquatable<Binary>\n  nameWithType: IEquatable<Binary>\n  fullName: System.IEquatable<System.Data.Linq.Binary>\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    nameWithType: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Linq.Binary\n    name: Binary\n    nameWithType: Binary\n    fullName: System.Data.Linq.Binary\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}