{"nodes":[{"content":"Provides dynamic validation of an object.","nodes":[{"pos":[0,41],"content":"Provides dynamic validation of an object.","nodes":[{"content":"Provides dynamic validation of an object.","pos":[0,41]}]}],"pos":[683,725],"yaml":true},{"content":"To use this class, you need to implement a <xref:System.Configuration.ValidatorCallback> delegate for the type of object you want to validate. When you instantiate this class, you pass in the object type and a reference to the delegate. You can then call <xref:System.Configuration.CallbackValidator.CanValidate%2A> to determine if an object is the correct type or <xref:System.Configuration.CallbackValidator.Validate%2A> to execute the delegate on the object.","nodes":[{"pos":[0,461],"content":"To use this class, you need to implement a <xref:System.Configuration.ValidatorCallback> delegate for the type of object you want to validate. When you instantiate this class, you pass in the object type and a reference to the delegate. You can then call <xref:System.Configuration.CallbackValidator.CanValidate%2A> to determine if an object is the correct type or <xref:System.Configuration.CallbackValidator.Validate%2A> to execute the delegate on the object.","nodes":[{"content":"To use this class, you need to implement a <xref:System.Configuration.ValidatorCallback> delegate for the type of object you want to validate. When you instantiate this class, you pass in the object type and a reference to the delegate. You can then call <xref:System.Configuration.CallbackValidator.CanValidate%2A> to determine if an object is the correct type or <xref:System.Configuration.CallbackValidator.Validate%2A> to execute the delegate on the object.","pos":[0,461],"nodes":[{"content":"To use this class, you need to implement a <ph id=\"ph1\">&lt;xref:System.Configuration.ValidatorCallback&gt;</ph> delegate for the type of object you want to validate.","pos":[0,142],"source":"To use this class, you need to implement a <xref:System.Configuration.ValidatorCallback> delegate for the type of object you want to validate."},{"content":"When you instantiate this class, you pass in the object type and a reference to the delegate.","pos":[143,236]},{"content":"You can then call <ph id=\"ph1\">&lt;xref:System.Configuration.CallbackValidator.CanValidate%2A&gt;</ph> to determine if an object is the correct type or <ph id=\"ph2\">&lt;xref:System.Configuration.CallbackValidator.Validate%2A&gt;</ph> to execute the delegate on the object.","pos":[237,461],"source":" You can then call <xref:System.Configuration.CallbackValidator.CanValidate%2A> to determine if an object is the correct type or <xref:System.Configuration.CallbackValidator.Validate%2A> to execute the delegate on the object."}]}]}],"pos":[736,1198],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Configuration.CallbackValidator\"></xref> class.","nodes":[{"pos":[0,100],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Configuration.CallbackValidator\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Configuration.CallbackValidator\"></xref> class."}],"pos":[2998,3099],"yaml":true},{"content":"The type of object that will be validated.","nodes":[{"pos":[0,42],"content":"The type of object that will be validated.","nodes":[{"content":"The type of object that will be validated.","pos":[0,42]}]}],"pos":[3283,3326],"yaml":true},{"content":"The <xref href=\"System.Configuration.ValidatorCallback\"></xref> used as the delegate.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Configuration.ValidatorCallback\"&gt;&lt;/xref&gt;</ph> used as the delegate.","source":"The <xref href=\"System.Configuration.ValidatorCallback\"></xref> used as the delegate."}],"pos":[3415,3501],"yaml":true},{"content":"<code>type</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>type</code> is `null`."}],"pos":[3675,3704],"yaml":true},{"content":"Determines whether the type of the object can be validated.","nodes":[{"pos":[0,59],"content":"Determines whether the type of the object can be validated.","nodes":[{"content":"Determines whether the type of the object can be validated.","pos":[0,59]}]}],"pos":[4814,4874],"yaml":true},{"content":"The type of object.","nodes":[{"pos":[0,19],"content":"The type of object.","nodes":[{"content":"The type of object.","pos":[0,19]}]}],"pos":[5017,5037],"yaml":true},{"content":"`true` if the `type` parameter matches the type used as the first parameter when creating an instance of <xref href=\"System.Configuration.CallbackValidator\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,185],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">`type`</ph> parameter matches the type used as the first parameter when creating an instance of <ph id=\"ph3\">&lt;xref href=\"System.Configuration.CallbackValidator\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the `type` parameter matches the type used as the first parameter when creating an instance of <xref href=\"System.Configuration.CallbackValidator\"></xref>; otherwise, `false`."}],"pos":[5095,5283],"yaml":true},{"content":"Determines whether the value of an object is valid.","nodes":[{"pos":[0,51],"content":"Determines whether the value of an object is valid.","nodes":[{"content":"Determines whether the value of an object is valid.","pos":[0,51]}]}],"pos":[6468,6520],"yaml":true},{"content":"The <xref:System.Configuration.CallbackValidator> class contains the type and delegate necessary to validate an object. The type and delegate are established when an instance of the <xref:System.Configuration.CallbackValidator> class is created. The object to validate is passed as a parameter of the <xref:System.Configuration.CallbackValidator.Validate%2A> method.","nodes":[{"pos":[0,366],"content":"The <xref:System.Configuration.CallbackValidator> class contains the type and delegate necessary to validate an object. The type and delegate are established when an instance of the <xref:System.Configuration.CallbackValidator> class is created. The object to validate is passed as a parameter of the <xref:System.Configuration.CallbackValidator.Validate%2A> method.","nodes":[{"content":"The <xref:System.Configuration.CallbackValidator> class contains the type and delegate necessary to validate an object. The type and delegate are established when an instance of the <xref:System.Configuration.CallbackValidator> class is created. The object to validate is passed as a parameter of the <xref:System.Configuration.CallbackValidator.Validate%2A> method.","pos":[0,366],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.CallbackValidator&gt;</ph> class contains the type and delegate necessary to validate an object.","pos":[0,119],"source":"The <xref:System.Configuration.CallbackValidator> class contains the type and delegate necessary to validate an object."},{"content":"The type and delegate are established when an instance of the <ph id=\"ph1\">&lt;xref:System.Configuration.CallbackValidator&gt;</ph> class is created.","pos":[120,245],"source":" The type and delegate are established when an instance of the <xref:System.Configuration.CallbackValidator> class is created."},{"content":"The object to validate is passed as a parameter of the <ph id=\"ph1\">&lt;xref:System.Configuration.CallbackValidator.Validate%2A&gt;</ph> method.","pos":[246,366],"source":" The object to validate is passed as a parameter of the <xref:System.Configuration.CallbackValidator.Validate%2A> method."}]}]}],"pos":[6531,6898],"yaml":true,"extradata":"MT"},{"content":"The value of an object.","nodes":[{"pos":[0,23],"content":"The value of an object.","nodes":[{"content":"The value of an object.","pos":[0,23]}]}],"pos":[7044,7068],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.CallbackValidator\n  commentId: T:System.Configuration.CallbackValidator\n  id: CallbackValidator\n  children:\n  - System.Configuration.CallbackValidator.#ctor(System.Type,System.Configuration.ValidatorCallback)\n  - System.Configuration.CallbackValidator.CanValidate(System.Type)\n  - System.Configuration.CallbackValidator.Validate(System.Object)\n  langs:\n  - csharp\n  name: CallbackValidator\n  nameWithType: CallbackValidator\n  fullName: System.Configuration.CallbackValidator\n  type: Class\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Provides dynamic validation of an object.\n  remarks: To use this class, you need to implement a <xref:System.Configuration.ValidatorCallback> delegate for the type of object you want to validate. When you instantiate this class, you pass in the object type and a reference to the delegate. You can then call <xref:System.Configuration.CallbackValidator.CanValidate%2A> to determine if an object is the correct type or <xref:System.Configuration.CallbackValidator.Validate%2A> to execute the delegate on the object.\n  syntax:\n    content: 'public sealed class CallbackValidator : System.Configuration.ConfigurationValidatorBase'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationValidatorBase\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/CallbackValidator.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.CallbackValidator.#ctor(System.Type,System.Configuration.ValidatorCallback)\n  commentId: M:System.Configuration.CallbackValidator.#ctor(System.Type,System.Configuration.ValidatorCallback)\n  id: '#ctor(System.Type,System.Configuration.ValidatorCallback)'\n  parent: System.Configuration.CallbackValidator\n  langs:\n  - csharp\n  name: CallbackValidator(Type, ValidatorCallback)\n  nameWithType: CallbackValidator.CallbackValidator(Type, ValidatorCallback)\n  fullName: CallbackValidator.CallbackValidator(Type, ValidatorCallback)\n  type: Constructor\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.CallbackValidator\"></xref> class.\n  syntax:\n    content: public CallbackValidator (Type type, System.Configuration.ValidatorCallback callback);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type of object that will be validated.\n    - id: callback\n      type: System.Configuration.ValidatorCallback\n      description: The <xref href=\"System.Configuration.ValidatorCallback\"></xref> used as the delegate.\n  overload: System.Configuration.CallbackValidator.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/CallbackValidator.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.CallbackValidator.CanValidate(System.Type)\n  commentId: M:System.Configuration.CallbackValidator.CanValidate(System.Type)\n  id: CanValidate(System.Type)\n  parent: System.Configuration.CallbackValidator\n  langs:\n  - csharp\n  name: CanValidate(Type)\n  nameWithType: CallbackValidator.CanValidate(Type)\n  fullName: CallbackValidator.CanValidate(Type)\n  type: Method\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Determines whether the type of the object can be validated.\n  syntax:\n    content: public override bool CanValidate (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type of object.\n    return:\n      type: System.Boolean\n      description: '`true` if the `type` parameter matches the type used as the first parameter when creating an instance of <xref href=\"System.Configuration.CallbackValidator\"></xref>; otherwise, `false`.'\n  overload: System.Configuration.CallbackValidator.CanValidate*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/CallbackValidator.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.CallbackValidator.Validate(System.Object)\n  commentId: M:System.Configuration.CallbackValidator.Validate(System.Object)\n  id: Validate(System.Object)\n  parent: System.Configuration.CallbackValidator\n  langs:\n  - csharp\n  name: Validate(Object)\n  nameWithType: CallbackValidator.Validate(Object)\n  fullName: CallbackValidator.Validate(Object)\n  type: Method\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Determines whether the value of an object is valid.\n  remarks: The <xref:System.Configuration.CallbackValidator> class contains the type and delegate necessary to validate an object. The type and delegate are established when an instance of the <xref:System.Configuration.CallbackValidator> class is created. The object to validate is passed as a parameter of the <xref:System.Configuration.CallbackValidator.Validate%2A> method.\n  syntax:\n    content: public override void Validate (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The value of an object.\n  overload: System.Configuration.CallbackValidator.Validate*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/CallbackValidator.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Configuration.ConfigurationValidatorBase\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationValidatorBase\n  nameWithType: ConfigurationValidatorBase\n  fullName: System.Configuration.ConfigurationValidatorBase\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Configuration.CallbackValidator.#ctor(System.Type,System.Configuration.ValidatorCallback)\n  parent: System.Configuration.CallbackValidator\n  isExternal: false\n  name: CallbackValidator(Type, ValidatorCallback)\n  nameWithType: CallbackValidator.CallbackValidator(Type, ValidatorCallback)\n  fullName: CallbackValidator.CallbackValidator(Type, ValidatorCallback)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Configuration.ValidatorCallback\n  parent: System.Configuration\n  isExternal: false\n  name: ValidatorCallback\n  nameWithType: ValidatorCallback\n  fullName: System.Configuration.ValidatorCallback\n- uid: System.Configuration.CallbackValidator.CanValidate(System.Type)\n  parent: System.Configuration.CallbackValidator\n  isExternal: false\n  name: CanValidate(Type)\n  nameWithType: CallbackValidator.CanValidate(Type)\n  fullName: CallbackValidator.CanValidate(Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Configuration.CallbackValidator.Validate(System.Object)\n  parent: System.Configuration.CallbackValidator\n  isExternal: false\n  name: Validate(Object)\n  nameWithType: CallbackValidator.Validate(Object)\n  fullName: CallbackValidator.Validate(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Configuration.CallbackValidator.#ctor*\n  parent: System.Configuration.CallbackValidator\n  isExternal: false\n  name: CallbackValidator\n  nameWithType: CallbackValidator.CallbackValidator\n  fullName: CallbackValidator.CallbackValidator\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/CallbackValidator.xml\n- uid: System.Configuration.CallbackValidator.CanValidate*\n  parent: System.Configuration.CallbackValidator\n  isExternal: false\n  name: CanValidate\n  nameWithType: CallbackValidator.CanValidate\n  fullName: CallbackValidator.CanValidate\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/CallbackValidator.xml\n- uid: System.Configuration.CallbackValidator.Validate*\n  parent: System.Configuration.CallbackValidator\n  isExternal: false\n  name: Validate\n  nameWithType: CallbackValidator.Validate\n  fullName: CallbackValidator.Validate\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/CallbackValidator.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}