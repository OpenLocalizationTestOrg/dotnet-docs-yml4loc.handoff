### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.PropertyBuilder
  commentId: T:System.Reflection.Emit.PropertyBuilder
  id: PropertyBuilder
  children:
  - System.Reflection.Emit.PropertyBuilder.#ctor
  - System.Reflection.Emit.PropertyBuilder.AddOtherMethod(System.Reflection.Emit.MethodBuilder)
  - System.Reflection.Emit.PropertyBuilder.Attributes
  - System.Reflection.Emit.PropertyBuilder.CanRead
  - System.Reflection.Emit.PropertyBuilder.CanWrite
  - System.Reflection.Emit.PropertyBuilder.DeclaringType
  - System.Reflection.Emit.PropertyBuilder.GetAccessors(System.Boolean)
  - System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(System.Boolean)
  - System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.Emit.PropertyBuilder.GetGetMethod(System.Boolean)
  - System.Reflection.Emit.PropertyBuilder.GetIndexParameters
  - System.Reflection.Emit.PropertyBuilder.GetSetMethod(System.Boolean)
  - System.Reflection.Emit.PropertyBuilder.GetValue(System.Object,System.Object[])
  - System.Reflection.Emit.PropertyBuilder.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Reflection.Emit.PropertyBuilder.IsDefined(System.Type,System.Boolean)
  - System.Reflection.Emit.PropertyBuilder.Module
  - System.Reflection.Emit.PropertyBuilder.Name
  - System.Reflection.Emit.PropertyBuilder.PropertyToken
  - System.Reflection.Emit.PropertyBuilder.PropertyType
  - System.Reflection.Emit.PropertyBuilder.ReflectedType
  - System.Reflection.Emit.PropertyBuilder.SetConstant(System.Object)
  - System.Reflection.Emit.PropertyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  - System.Reflection.Emit.PropertyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  - System.Reflection.Emit.PropertyBuilder.SetGetMethod(System.Reflection.Emit.MethodBuilder)
  - System.Reflection.Emit.PropertyBuilder.SetSetMethod(System.Reflection.Emit.MethodBuilder)
  - System.Reflection.Emit.PropertyBuilder.SetValue(System.Object,System.Object,System.Object[])
  - System.Reflection.Emit.PropertyBuilder.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  langs:
  - csharp
  name: PropertyBuilder
  nameWithType: PropertyBuilder
  fullName: System.Reflection.Emit.PropertyBuilder
  type: Class
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Defines the properties for a type.
  remarks: A `PropertyBuilder` is always associated with a `TypeBuilder`. The `TypeBuilder`. `DefineProperty` method will return a new `PropertyBuilder` to a client.
  example:
  - "The following code sample demonstrates how to implement properties in a dynamic type using a `PropertyBuilder` obtained via <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A?displayProperty=fullName> to create the property framework and an associated <xref:System.Reflection.Emit.MethodBuilder> to implement the IL logic within the property.  \n  \n [!code-cpp[System.Reflection.Emit.PropertyBuilder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.PropertyBuilder Example/CPP/source.cpp#1)]\n [!code-csharp[System.Reflection.Emit.PropertyBuilder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.PropertyBuilder Example/CS/source.cs#1)]\n [!code-vb[System.Reflection.Emit.PropertyBuilder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.PropertyBuilder Example/VB/source.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class PropertyBuilder : System.Reflection.PropertyInfo, System.Runtime.InteropServices._PropertyBuilder
  inheritance:
  - System.Object
  - System.Reflection.MemberInfo
  - System.Reflection.PropertyInfo
  implements:
  - System.Runtime.InteropServices._PropertyBuilder
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Reflection.MemberInfo.CustomAttributes
  - System.Reflection.MemberInfo.GetCustomAttributesData
  - System.Reflection.MemberInfo.MetadataToken
  - System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  - System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)
  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Reflection.PropertyInfo.Equals(System.Object)
  - System.Reflection.PropertyInfo.GetAccessors
  - System.Reflection.PropertyInfo.GetConstantValue
  - System.Reflection.PropertyInfo.GetGetMethod
  - System.Reflection.PropertyInfo.GetHashCode
  - System.Reflection.PropertyInfo.GetMethod
  - System.Reflection.PropertyInfo.GetOptionalCustomModifiers
  - System.Reflection.PropertyInfo.GetRawConstantValue
  - System.Reflection.PropertyInfo.GetRequiredCustomModifiers
  - System.Reflection.PropertyInfo.GetSetMethod
  - System.Reflection.PropertyInfo.GetValue(System.Object)
  - System.Reflection.PropertyInfo.IsSpecialName
  - System.Reflection.PropertyInfo.MemberType
  - System.Reflection.PropertyInfo.op_Equality(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)
  - System.Reflection.PropertyInfo.op_Inequality(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)
  - System.Reflection.PropertyInfo.SetMethod
  - System.Reflection.PropertyInfo.SetValue(System.Object,System.Object)
  - System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetType
  - System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  extensionMethods:
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)
  - System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)
  - System.Reflection.PropertyInfoExtensions.GetAccessors(System.Reflection.PropertyInfo)
  - System.Reflection.PropertyInfoExtensions.GetAccessors(System.Reflection.PropertyInfo,System.Boolean)
  - System.Reflection.PropertyInfoExtensions.GetGetMethod(System.Reflection.PropertyInfo)
  - System.Reflection.PropertyInfoExtensions.GetGetMethod(System.Reflection.PropertyInfo,System.Boolean)
  - System.Reflection.PropertyInfoExtensions.GetSetMethod(System.Reflection.PropertyInfo)
  - System.Reflection.PropertyInfoExtensions.GetSetMethod(System.Reflection.PropertyInfo,System.Boolean)
  attributes:
  - type: System.Runtime.InteropServices.ClassInterfaceAttribute
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.#ctor
  commentId: M:System.Reflection.Emit.PropertyBuilder.#ctor
  id: '#ctor'
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: PropertyBuilder()
  nameWithType: PropertyBuilder.PropertyBuilder()
  fullName: PropertyBuilder.PropertyBuilder()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  syntax:
    content: protected PropertyBuilder ();
    parameters: []
  overload: System.Reflection.Emit.PropertyBuilder.#ctor*
  exceptions: []
  version:
  - xamarinios-10.8
  monikers:
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.Emit.PropertyBuilder.AddOtherMethod(System.Reflection.Emit.MethodBuilder)
  commentId: M:System.Reflection.Emit.PropertyBuilder.AddOtherMethod(System.Reflection.Emit.MethodBuilder)
  id: AddOtherMethod(System.Reflection.Emit.MethodBuilder)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: AddOtherMethod(MethodBuilder)
  nameWithType: PropertyBuilder.AddOtherMethod(MethodBuilder)
  fullName: PropertyBuilder.AddOtherMethod(MethodBuilder)
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Adds one of the other methods associated with this property.
  syntax:
    content: public void AddOtherMethod (System.Reflection.Emit.MethodBuilder mdBuilder);
    parameters:
    - id: mdBuilder
      type: System.Reflection.Emit.MethodBuilder
      description: A `MethodBuilder` object that represents the other method.
  overload: System.Reflection.Emit.PropertyBuilder.AddOtherMethod*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>mdBuilder</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <xref href="System.Reflection.Emit.TypeBuilder.CreateType"></xref> has been called on the enclosing type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.Attributes
  commentId: P:System.Reflection.Emit.PropertyBuilder.Attributes
  id: Attributes
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: Attributes
  nameWithType: PropertyBuilder.Attributes
  fullName: PropertyBuilder.Attributes
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets the attributes for this property.
  syntax:
    content: public override System.Reflection.PropertyAttributes Attributes { get; }
    return:
      type: System.Reflection.PropertyAttributes
      description: Attributes of this property.
  overload: System.Reflection.Emit.PropertyBuilder.Attributes*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.CanRead
  commentId: P:System.Reflection.Emit.PropertyBuilder.CanRead
  id: CanRead
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: CanRead
  nameWithType: PropertyBuilder.CanRead
  fullName: PropertyBuilder.CanRead
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets a value indicating whether the property can be read.
  remarks: Boolean property indicating if the property can be read. If the property does not have a get accessor, it cannot be read.
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: '`true` if this property can be read; otherwise, `false`.'
  overload: System.Reflection.Emit.PropertyBuilder.CanRead*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.CanWrite
  commentId: P:System.Reflection.Emit.PropertyBuilder.CanWrite
  id: CanWrite
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: CanWrite
  nameWithType: PropertyBuilder.CanWrite
  fullName: PropertyBuilder.CanWrite
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets a value indicating whether the property can be written to.
  remarks: Boolean property indicating if the property can be written to. If the property does not have a set accessor, it cannot be written to.
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: '`true` if this property can be written to; otherwise, `false`.'
  overload: System.Reflection.Emit.PropertyBuilder.CanWrite*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.DeclaringType
  commentId: P:System.Reflection.Emit.PropertyBuilder.DeclaringType
  id: DeclaringType
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: DeclaringType
  nameWithType: PropertyBuilder.DeclaringType
  fullName: PropertyBuilder.DeclaringType
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets the class that declares this member.
  syntax:
    content: public override Type DeclaringType { get; }
    return:
      type: System.Type
      description: The `Type` object for the class that declares this member.
  overload: System.Reflection.Emit.PropertyBuilder.DeclaringType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.GetAccessors(System.Boolean)
  commentId: M:System.Reflection.Emit.PropertyBuilder.GetAccessors(System.Boolean)
  id: GetAccessors(System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: GetAccessors(Boolean)
  nameWithType: PropertyBuilder.GetAccessors(Boolean)
  fullName: PropertyBuilder.GetAccessors(Boolean)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns an array of the public and non-public `get` and `set` accessors on this property.
  remarks: To get the accessors of a property, reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetAccessors.
  syntax:
    content: public override System.Reflection.MethodInfo[] GetAccessors (bool nonPublic);
    parameters:
    - id: nonPublic
      type: System.Boolean
      description: Indicates whether non-public methods should be returned in the `MethodInfo` array. `true` if non-public methods are to be included; otherwise, `false`.
    return:
      type: System.Reflection.MethodInfo[]
      description: An array of type `MethodInfo` containing the matching public or non-public accessors, or an empty array if matching accessors do not exist on this property.
  overload: System.Reflection.Emit.PropertyBuilder.GetAccessors*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not supported.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(System.Boolean)
  commentId: M:System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: PropertyBuilder.GetCustomAttributes(Boolean)
  fullName: PropertyBuilder.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns an array of all the custom attributes for this property.
  remarks: Reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetCustomAttributes.
  syntax:
    content: public override object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: If `true`, walks up this property's inheritance chain to find the custom attributes
    return:
      type: System.Object[]
      description: An array of all the custom attributes.
  overload: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not supported.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(System.Type,System.Boolean)
  commentId: M:System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: GetCustomAttributes(Type, Boolean)
  nameWithType: PropertyBuilder.GetCustomAttributes(Type, Boolean)
  fullName: PropertyBuilder.GetCustomAttributes(Type, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns an array of custom attributes identified by <xref href="System.Type"></xref>.
  remarks: Reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetCustomAttributes.
  syntax:
    content: public override object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: An array of custom attributes identified by type.
    - id: inherit
      type: System.Boolean
      description: If `true`, walks up this property's inheritance chain to find the custom attributes.
    return:
      type: System.Object[]
      description: An array of custom attributes defined on this reflected member, or `null` if no attributes are defined on this member.
  overload: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not supported.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.GetGetMethod(System.Boolean)
  commentId: M:System.Reflection.Emit.PropertyBuilder.GetGetMethod(System.Boolean)
  id: GetGetMethod(System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: GetGetMethod(Boolean)
  nameWithType: PropertyBuilder.GetGetMethod(Boolean)
  fullName: PropertyBuilder.GetGetMethod(Boolean)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the public and non-public get accessor for this property.
  remarks: To get the getter of a property, reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetGetMethod.
  syntax:
    content: public override System.Reflection.MethodInfo GetGetMethod (bool nonPublic);
    parameters:
    - id: nonPublic
      type: System.Boolean
      description: Indicates whether non-public get accessors should be returned. `true` if non-public methods are to be included; otherwise, `false`.
    return:
      type: System.Reflection.MethodInfo
      description: A `MethodInfo` object representing the get accessor for this property, if <code>nonPublic</code> is `true`. Returns `null` if <code>nonPublic</code> is `false` and the get accessor is non-public, or if <code>nonPublic</code> is `true` but no get accessors exist.
  overload: System.Reflection.Emit.PropertyBuilder.GetGetMethod*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.GetIndexParameters
  commentId: M:System.Reflection.Emit.PropertyBuilder.GetIndexParameters
  id: GetIndexParameters
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: GetIndexParameters()
  nameWithType: PropertyBuilder.GetIndexParameters()
  fullName: PropertyBuilder.GetIndexParameters()
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns an array of all the index parameters for the property.
  remarks: To get the index parameters of a property, reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetIndexParameters.
  syntax:
    content: public override System.Reflection.ParameterInfo[] GetIndexParameters ();
    parameters: []
    return:
      type: System.Reflection.ParameterInfo[]
      description: An array of type `ParameterInfo` containing the parameters for the indexes.
  overload: System.Reflection.Emit.PropertyBuilder.GetIndexParameters*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not supported.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.GetSetMethod(System.Boolean)
  commentId: M:System.Reflection.Emit.PropertyBuilder.GetSetMethod(System.Boolean)
  id: GetSetMethod(System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: GetSetMethod(Boolean)
  nameWithType: PropertyBuilder.GetSetMethod(Boolean)
  fullName: PropertyBuilder.GetSetMethod(Boolean)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Returns the set accessor for this property.
  remarks: To get the setter of a property, reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetSetMethod.
  syntax:
    content: public override System.Reflection.MethodInfo GetSetMethod (bool nonPublic);
    parameters:
    - id: nonPublic
      type: System.Boolean
      description: Indicates whether the accessor should be returned if it is non-public. `true` if non-public methods are to be included; otherwise, `false`.
    return:
      type: System.Reflection.MethodInfo
      description: "The property's `Set` method, or `null`, as shown in the following table.  \n  \n <table><thead><tr><th> Value  \n  \n </th><th> Condition  \n  \n </th></tr></thead><tbody><tr><td> A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the Set method for this property.  \n  \n </td><td> The set accessor is public.  \n  \n <code>nonPublic</code> is true and non-public methods can be returned.  \n  \n </td></tr><tr><td> null  \n  \n </td><td><code>nonPublic</code> is true, but the property is read-only.  \n  \n <code>nonPublic</code> is false and the set accessor is non-public.  \n  \n </td></tr></tbody></table>"
  overload: System.Reflection.Emit.PropertyBuilder.GetSetMethod*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.GetValue(System.Object,System.Object[])
  commentId: M:System.Reflection.Emit.PropertyBuilder.GetValue(System.Object,System.Object[])
  id: GetValue(System.Object,System.Object[])
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: GetValue(Object, Object[])
  nameWithType: PropertyBuilder.GetValue(Object, Object[])
  fullName: PropertyBuilder.GetValue(Object, Object[])
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets the value of the indexed property by calling the property's getter method.
  remarks: To get the value of a property, reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the `Reflection` property object from the type, and call `PropertyInfo.GetValue`.
  syntax:
    content: public override object GetValue (object obj, object[] index);
    parameters:
    - id: obj
      type: System.Object
      description: The object whose property value will be returned.
    - id: index
      type: System.Object[]
      description: Optional index values for indexed properties. This value should be `null` for non-indexed properties.
    return:
      type: System.Object
      description: The value of the specified indexed property.
  overload: System.Reflection.Emit.PropertyBuilder.GetValue*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not supported.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  commentId: M:System.Reflection.Emit.PropertyBuilder.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: GetValue(Object, BindingFlags, Binder, Object[], CultureInfo)
  nameWithType: PropertyBuilder.GetValue(Object, BindingFlags, Binder, Object[], CultureInfo)
  fullName: PropertyBuilder.GetValue(Object, BindingFlags, Binder, Object[], CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Gets the value of a property having the specified binding, index, and `CultureInfo`.
  remarks: To get the value of a property, reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetValue.
  syntax:
    content: public override object GetValue (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: The object whose property value will be returned.
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: 'The invocation attribute. This must be a bit flag from `BindingFlags` : `InvokeMethod`, `CreateInstance`, `Static`, `GetField`, `SetField`, `GetProperty`, or `SetProperty`. A suitable invocation attribute must be specified. If a static member is to be invoked, the `Static` flag of `BindingFlags` must be set.'
    - id: binder
      type: System.Reflection.Binder
      description: An object that enables the binding, coercion of argument types, invocation of members, and retrieval of `MemberInfo` objects using reflection. If <code>binder</code> is `null`, the default binder is used.
    - id: index
      type: System.Object[]
      description: Optional index values for indexed properties. This value should be `null` for non-indexed properties.
    - id: culture
      type: System.Globalization.CultureInfo
      description: The `CultureInfo` object that represents the culture for which the resource is to be localized. Note that if the resource is not localized for this culture, the `CultureInfo.Parent` method will be called successively in search of a match. If this value is `null`, the `CultureInfo` is obtained from the `CultureInfo.CurrentUICulture` property.
    return:
      type: System.Object
      description: The property value for <code>obj</code>.
  overload: System.Reflection.Emit.PropertyBuilder.GetValue*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not supported.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.IsDefined(System.Type,System.Boolean)
  commentId: M:System.Reflection.Emit.PropertyBuilder.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: IsDefined(Type, Boolean)
  nameWithType: PropertyBuilder.IsDefined(Type, Boolean)
  fullName: PropertyBuilder.IsDefined(Type, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Indicates whether one or more instance of <code>attributeType</code> is defined on this property.
  remarks: Reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.IsDefined.
  syntax:
    content: public override bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: The `Type` object to which the custom attributes are applied.
    - id: inherit
      type: System.Boolean
      description: Specifies whether to walk up this property's inheritance chain to find the custom attributes.
    return:
      type: System.Boolean
      description: '`true` if one or more instance of <code>attributeType</code> is defined on this property; otherwise `false`.'
  overload: System.Reflection.Emit.PropertyBuilder.IsDefined*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not supported.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.Module
  commentId: P:System.Reflection.Emit.PropertyBuilder.Module
  id: Module
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: Module
  nameWithType: PropertyBuilder.Module
  fullName: PropertyBuilder.Module
  type: Property
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Gets the module in which the type that declares the current property is being defined.
  remarks: This property is provided as a convenience for the user. It is equivalent to using the <xref:System.Reflection.Emit.PropertyBuilder.DeclaringType%2A> property to get the type in which the property is declared, and then calling the <xref:System.Type.Module%2A> property of the resulting <xref:System.Type> object.
  syntax:
    content: public override System.Reflection.Module Module { get; }
    return:
      type: System.Reflection.Module
      description: The <xref href="System.Reflection.Module"></xref> in which the type that declares the current property is defined.
  overload: System.Reflection.Emit.PropertyBuilder.Module*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.Name
  commentId: P:System.Reflection.Emit.PropertyBuilder.Name
  id: Name
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: Name
  nameWithType: PropertyBuilder.Name
  fullName: PropertyBuilder.Name
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets the name of this member.
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> containing the name of this member.
  overload: System.Reflection.Emit.PropertyBuilder.Name*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.PropertyToken
  commentId: P:System.Reflection.Emit.PropertyBuilder.PropertyToken
  id: PropertyToken
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: PropertyToken
  nameWithType: PropertyBuilder.PropertyToken
  fullName: PropertyBuilder.PropertyToken
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the token for this property.
  syntax:
    content: public System.Reflection.Emit.PropertyToken PropertyToken { get; }
    return:
      type: System.Reflection.Emit.PropertyToken
      description: Read-only. Retrieves the token for this property.
  overload: System.Reflection.Emit.PropertyBuilder.PropertyToken*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.PropertyType
  commentId: P:System.Reflection.Emit.PropertyBuilder.PropertyType
  id: PropertyType
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: PropertyType
  nameWithType: PropertyBuilder.PropertyType
  fullName: PropertyBuilder.PropertyType
  type: Property
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets the type of the field of this property.
  syntax:
    content: public override Type PropertyType { get; }
    return:
      type: System.Type
      description: The type of this property.
  overload: System.Reflection.Emit.PropertyBuilder.PropertyType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.ReflectedType
  commentId: P:System.Reflection.Emit.PropertyBuilder.ReflectedType
  id: ReflectedType
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: ReflectedType
  nameWithType: PropertyBuilder.ReflectedType
  fullName: PropertyBuilder.ReflectedType
  type: Property
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Gets the class object that was used to obtain this instance of `MemberInfo`.
  syntax:
    content: public override Type ReflectedType { get; }
    return:
      type: System.Type
      description: The `Type` object through which this `MemberInfo` object was obtained.
  overload: System.Reflection.Emit.PropertyBuilder.ReflectedType*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.SetConstant(System.Object)
  commentId: M:System.Reflection.Emit.PropertyBuilder.SetConstant(System.Object)
  id: SetConstant(System.Object)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: SetConstant(Object)
  nameWithType: PropertyBuilder.SetConstant(Object)
  fullName: PropertyBuilder.SetConstant(Object)
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Sets the default value of this property.
  remarks: '`defaultValue` is restricted to the following types: `Boolean`, `SByte`, `Int16`, `Int32`, `Int64`, `Byte`, `UInt16`, `UInt32`, `UInt64`, `Single`, `Double`, `DateTime`, `Char`, `String`, and `Enum`. If the property type is a reference type, CLS compliance requires `defaultValue` to be `null`. However, starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], `defaultValue` can be non-null for reference types as long as the value can be assigned to that reference type. For example, an `Int32` value can be assigned to a property of type <xref:System.Object>. This is not CLS-compliant, but it can be useful in interop scenarios.'
  syntax:
    content: public void SetConstant (object defaultValue);
    parameters:
    - id: defaultValue
      type: System.Object
      description: The default value of this property.
  overload: System.Reflection.Emit.PropertyBuilder.SetConstant*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <xref href="System.Reflection.Emit.TypeBuilder.CreateType"></xref> has been called on the enclosing type.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The property is not one of the supported types.  \n  \n -or-  \n  \n The type of <code>defaultValue</code> does not match the type of the property.  \n  \n -or-  \n  \n The property is of type <xref href=\"System.Object\"></xref> or other reference type, <code>defaultValue</code> is not `null`, and the value cannot be assigned to the reference type."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  commentId: M:System.Reflection.Emit.PropertyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: SetCustomAttribute(CustomAttributeBuilder)
  nameWithType: PropertyBuilder.SetCustomAttribute(CustomAttributeBuilder)
  fullName: PropertyBuilder.SetCustomAttribute(CustomAttributeBuilder)
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Set a custom attribute using a custom attribute builder.
  syntax:
    content: public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);
    parameters:
    - id: customBuilder
      type: System.Reflection.Emit.CustomAttributeBuilder
      description: An instance of a helper class to define the custom attribute.
  overload: System.Reflection.Emit.PropertyBuilder.SetCustomAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>customBuilder</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: if <xref href="System.Reflection.Emit.TypeBuilder.CreateType"></xref> has been called on the enclosing type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  commentId: M:System.Reflection.Emit.PropertyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: SetCustomAttribute(ConstructorInfo, Byte[])
  nameWithType: PropertyBuilder.SetCustomAttribute(ConstructorInfo, Byte[])
  fullName: PropertyBuilder.SetCustomAttribute(ConstructorInfo, Byte[])
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Set a custom attribute using a specified custom attribute blob.
  remarks: See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`. The Partition II documentation is available online on MSDN ([ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?linkid=65555) Web page) and on the ECMA Web site ([Standard ECMA-335 Common Language Infrastructure](http://go.microsoft.com/fwlink/?linkid=65552) document).
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
      description: The constructor for the custom attribute.
    - id: binaryAttribute
      type: System.Byte[]
      description: A byte blob representing the attributes.
  overload: System.Reflection.Emit.PropertyBuilder.SetCustomAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>con</code> or <code>binaryAttribute</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <xref href="System.Reflection.Emit.TypeBuilder.CreateType"></xref> has been called on the enclosing type.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.SetGetMethod(System.Reflection.Emit.MethodBuilder)
  commentId: M:System.Reflection.Emit.PropertyBuilder.SetGetMethod(System.Reflection.Emit.MethodBuilder)
  id: SetGetMethod(System.Reflection.Emit.MethodBuilder)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: SetGetMethod(MethodBuilder)
  nameWithType: PropertyBuilder.SetGetMethod(MethodBuilder)
  fullName: PropertyBuilder.SetGetMethod(MethodBuilder)
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Sets the method that gets the property value.
  remarks: ''
  example:
  - "The following code sample demonstrates how to attach a dynamic method to a `get` property created with `PropertyBuilder` using `SetGetMethod`.  \n  \n [!code-cpp[PropertyBuilder_SetGetMethod_4#1](~/samples/snippets/cpp/VS_Snippets_CLR/PropertyBuilder_SetGetMethod_4/CPP/propertybuilder_setgetmethod_4.cpp#1)]\n [!code-csharp[PropertyBuilder_SetGetMethod_4#1](~/samples/snippets/csharp/VS_Snippets_CLR/PropertyBuilder_SetGetMethod_4/CS/propertybuilder_setgetmethod_4.cs#1)]\n [!code-vb[PropertyBuilder_SetGetMethod_4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PropertyBuilder_SetGetMethod_4/VB/propertybuilder_setgetmethod_4.vb#1)]"
  syntax:
    content: public void SetGetMethod (System.Reflection.Emit.MethodBuilder mdBuilder);
    parameters:
    - id: mdBuilder
      type: System.Reflection.Emit.MethodBuilder
      description: A `MethodBuilder` object that represents the method that gets the property value.
  overload: System.Reflection.Emit.PropertyBuilder.SetGetMethod*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>mdBuilder</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <xref href="System.Reflection.Emit.TypeBuilder.CreateType"></xref> has been called on the enclosing type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.SetSetMethod(System.Reflection.Emit.MethodBuilder)
  commentId: M:System.Reflection.Emit.PropertyBuilder.SetSetMethod(System.Reflection.Emit.MethodBuilder)
  id: SetSetMethod(System.Reflection.Emit.MethodBuilder)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: SetSetMethod(MethodBuilder)
  nameWithType: PropertyBuilder.SetSetMethod(MethodBuilder)
  fullName: PropertyBuilder.SetSetMethod(MethodBuilder)
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Sets the method that sets the property value.
  remarks: ''
  example:
  - "The following code sample demonstrates how to attach a dynamic method to a `set` property created with `PropertyBuilder` using `SetSetMethod`.  \n  \n [!code-cpp[PropertyBuilder_SetGetMethod_4#2](~/samples/snippets/cpp/VS_Snippets_CLR/PropertyBuilder_SetGetMethod_4/CPP/propertybuilder_setgetmethod_4.cpp#2)]\n [!code-csharp[PropertyBuilder_SetGetMethod_4#2](~/samples/snippets/csharp/VS_Snippets_CLR/PropertyBuilder_SetGetMethod_4/CS/propertybuilder_setgetmethod_4.cs#2)]\n [!code-vb[PropertyBuilder_SetGetMethod_4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PropertyBuilder_SetGetMethod_4/VB/propertybuilder_setgetmethod_4.vb#2)]"
  syntax:
    content: public void SetSetMethod (System.Reflection.Emit.MethodBuilder mdBuilder);
    parameters:
    - id: mdBuilder
      type: System.Reflection.Emit.MethodBuilder
      description: A `MethodBuilder` object that represents the method that sets the property value.
  overload: System.Reflection.Emit.PropertyBuilder.SetSetMethod*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>mdBuilder</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <xref href="System.Reflection.Emit.TypeBuilder.CreateType"></xref> has been called on the enclosing type.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.SetValue(System.Object,System.Object,System.Object[])
  commentId: M:System.Reflection.Emit.PropertyBuilder.SetValue(System.Object,System.Object,System.Object[])
  id: SetValue(System.Object,System.Object,System.Object[])
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: SetValue(Object, Object, Object[])
  nameWithType: PropertyBuilder.SetValue(Object, Object, Object[])
  fullName: PropertyBuilder.SetValue(Object, Object, Object[])
  type: Method
  assemblies:
  - System.Reflection.Emit
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Sets the value of the property with optional index values for index properties.
  remarks: To set the value of a property, reflect on the property's parent type using <xref:System.Type.GetType%2A?displayProperty=fullName> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=fullName>, retrieve the <xref:System.Reflection.PropertyInfo> object from the type, and call <xref:System.Reflection.PropertyInfo.SetValue%2A?displayProperty=fullName>.
  syntax:
    content: public override void SetValue (object obj, object value, object[] index);
    parameters:
    - id: obj
      type: System.Object
      description: The object whose property value will be set.
    - id: value
      type: System.Object
      description: The new value for this property.
    - id: index
      type: System.Object[]
      description: Optional index values for indexed properties. This value should be `null` for non-indexed properties.
  overload: System.Reflection.Emit.PropertyBuilder.SetValue*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not supported.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  commentId: M:System.Reflection.Emit.PropertyBuilder.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: SetValue(Object, Object, BindingFlags, Binder, Object[], CultureInfo)
  nameWithType: PropertyBuilder.SetValue(Object, Object, BindingFlags, Binder, Object[], CultureInfo)
  fullName: PropertyBuilder.SetValue(Object, Object, BindingFlags, Binder, Object[], CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: Sets the property value for the given object to the given value.
  remarks: To set the value of a property, reflect on the property's parent type using <xref:System.Type.GetType%2A?displayProperty=fullName> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=fullName>, retrieve the <xref:System.Reflection.PropertyInfo> object from the type, and call <xref:System.Reflection.PropertyInfo.SetValue%2A?displayProperty=fullName>.
  syntax:
    content: public override void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: The object whose property value will be returned.
    - id: value
      type: System.Object
      description: The new value for this property.
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: 'The invocation attribute. This must be a bit flag from `BindingFlags` : `InvokeMethod`, `CreateInstance`, `Static`, `GetField`, `SetField`, `GetProperty`, or `SetProperty`. A suitable invocation attribute must be specified. If a static member is to be invoked, the `Static` flag of `BindingFlags` must be set.'
    - id: binder
      type: System.Reflection.Binder
      description: An object that enables the binding, coercion of argument types, invocation of members, and retrieval of `MemberInfo` objects using reflection. If <code>binder</code> is `null`, the default binder is used.
    - id: index
      type: System.Object[]
      description: Optional index values for indexed properties. This value should be `null` for non-indexed properties.
    - id: culture
      type: System.Globalization.CultureInfo
      description: The `CultureInfo` object that represents the culture for which the resource is to be localized. Note that if the resource is not localized for this culture, the `CultureInfo.Parent` method will be called successively in search of a match. If this value is `null`, the `CultureInfo` is obtained from the `CultureInfo.CurrentUICulture` property.
  overload: System.Reflection.Emit.PropertyBuilder.SetValue*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is not supported.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  commentId: M:System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_PropertyBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: _PropertyBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: PropertyBuilder._PropertyBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: PropertyBuilder._PropertyBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Maps a set of names to a corresponding set of dispatch identifiers.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.
  syntax:
    content: void _PropertyBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: Reserved for future use. Must be IID_NULL.
    - id: rgszNames
      type: System.IntPtr
      description: Passed-in array of names to be mapped.
    - id: cNames
      type: System.UInt32
      description: Count of the names to be mapped.
    - id: lcid
      type: System.UInt32
      description: The locale context in which to interpret the names.
    - id: rgDispId
      type: System.IntPtr
      description: Caller-allocated array which receives the IDs corresponding to the names.
  overload: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetIDsOfNames*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: The method is called late-bound using the COM <code>IDispatch</code> interface.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  commentId: M:System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: _PropertyBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: PropertyBuilder._PropertyBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: PropertyBuilder._PropertyBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the type information for an object, which can then be used to get the type information for an interface.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.
  syntax:
    content: void _PropertyBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: The type information to return.
    - id: lcid
      type: System.UInt32
      description: The locale identifier for the type information.
    - id: ppTInfo
      type: System.IntPtr
      description: Receives a pointer to the requested type information object.
  overload: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfo*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: The method is called late-bound using the COM <code>IDispatch</code> interface.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfoCount(System.UInt32@)
  commentId: M:System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfoCount(System.UInt32@)
  id: System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfoCount(System.UInt32@)
  isEii: true
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: _PropertyBuilder.GetTypeInfoCount(UInt32)
  nameWithType: PropertyBuilder._PropertyBuilder.GetTypeInfoCount(UInt32)
  fullName: PropertyBuilder._PropertyBuilder.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the number of type information interfaces that an object provides (either 0 or 1).
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.
  syntax:
    content: void _PropertyBuilder.GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: Points to a location that receives the number of type information interfaces provided by the object.
  overload: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfoCount*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: The method is called late-bound using the COM <code>IDispatch</code> interface.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  commentId: M:System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: System#Runtime#InteropServices#_PropertyBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.PropertyBuilder
  langs:
  - csharp
  name: _PropertyBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: PropertyBuilder._PropertyBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: PropertyBuilder._PropertyBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Provides access to properties and methods exposed by an object.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.
  syntax:
    content: void _PropertyBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: Identifies the member.
    - id: riid
      type: System.Guid
      description: Reserved for future use. Must be IID_NULL.
    - id: lcid
      type: System.UInt32
      description: The locale context in which to interpret arguments.
    - id: wFlags
      type: System.Int16
      description: Flags describing the context of the call.
    - id: pDispParams
      type: System.IntPtr
      description: Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.
    - id: pVarResult
      type: System.IntPtr
      description: Pointer to the location where the result is to be stored.
    - id: pExcepInfo
      type: System.IntPtr
      description: Pointer to a structure that contains exception information.
    - id: puArgErr
      type: System.IntPtr
      description: The index of the first argument that has an error.
  overload: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#Invoke*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: The method is called late-bound using the COM <code>IDispatch</code> interface.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: false
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.NotImplementedException
  parent: System
  isExternal: false
  name: NotImplementedException
  nameWithType: NotImplementedException
  fullName: System.NotImplementedException
- uid: System.Reflection.Emit.PropertyBuilder.#ctor
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: PropertyBuilder()
  nameWithType: PropertyBuilder.PropertyBuilder()
  fullName: PropertyBuilder.PropertyBuilder()
- uid: System.Reflection.Emit.PropertyBuilder.AddOtherMethod(System.Reflection.Emit.MethodBuilder)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: AddOtherMethod(MethodBuilder)
  nameWithType: PropertyBuilder.AddOtherMethod(MethodBuilder)
  fullName: PropertyBuilder.AddOtherMethod(MethodBuilder)
- uid: System.Reflection.Emit.MethodBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: MethodBuilder
  nameWithType: MethodBuilder
  fullName: System.Reflection.Emit.MethodBuilder
- uid: System.Reflection.Emit.PropertyBuilder.Attributes
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: Attributes
  nameWithType: PropertyBuilder.Attributes
  fullName: PropertyBuilder.Attributes
- uid: System.Reflection.PropertyAttributes
  parent: System.Reflection
  isExternal: false
  name: PropertyAttributes
  nameWithType: PropertyAttributes
  fullName: System.Reflection.PropertyAttributes
- uid: System.Reflection.Emit.PropertyBuilder.CanRead
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: CanRead
  nameWithType: PropertyBuilder.CanRead
  fullName: PropertyBuilder.CanRead
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.PropertyBuilder.CanWrite
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: CanWrite
  nameWithType: PropertyBuilder.CanWrite
  fullName: PropertyBuilder.CanWrite
- uid: System.Reflection.Emit.PropertyBuilder.DeclaringType
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: DeclaringType
  nameWithType: PropertyBuilder.DeclaringType
  fullName: PropertyBuilder.DeclaringType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Emit.PropertyBuilder.GetAccessors(System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetAccessors(Boolean)
  nameWithType: PropertyBuilder.GetAccessors(Boolean)
  fullName: PropertyBuilder.GetAccessors(Boolean)
- uid: System.Reflection.MethodInfo
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection.MethodInfo[]
  parent: System.Reflection
  isExternal: false
  name: MethodInfo[]
  nameWithType: MethodInfo[]
  fullName: System.Reflection.MethodInfo[]
  spec.csharp:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: System.Reflection.MethodInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: PropertyBuilder.GetCustomAttributes(Boolean)
  fullName: PropertyBuilder.GetCustomAttributes(Boolean)
- uid: System.Object
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object[]
  parent: System
  isExternal: false
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetCustomAttributes(Type, Boolean)
  nameWithType: PropertyBuilder.GetCustomAttributes(Type, Boolean)
  fullName: PropertyBuilder.GetCustomAttributes(Type, Boolean)
- uid: System.Reflection.Emit.PropertyBuilder.GetGetMethod(System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetGetMethod(Boolean)
  nameWithType: PropertyBuilder.GetGetMethod(Boolean)
  fullName: PropertyBuilder.GetGetMethod(Boolean)
- uid: System.Reflection.Emit.PropertyBuilder.GetIndexParameters
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetIndexParameters()
  nameWithType: PropertyBuilder.GetIndexParameters()
  fullName: PropertyBuilder.GetIndexParameters()
- uid: System.Reflection.ParameterInfo
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo
- uid: System.Reflection.ParameterInfo[]
  parent: System.Reflection
  isExternal: false
  name: ParameterInfo[]
  nameWithType: ParameterInfo[]
  fullName: System.Reflection.ParameterInfo[]
  spec.csharp:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.PropertyBuilder.GetSetMethod(System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetSetMethod(Boolean)
  nameWithType: PropertyBuilder.GetSetMethod(Boolean)
  fullName: PropertyBuilder.GetSetMethod(Boolean)
- uid: System.Reflection.Emit.PropertyBuilder.GetValue(System.Object,System.Object[])
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetValue(Object, Object[])
  nameWithType: PropertyBuilder.GetValue(Object, Object[])
  fullName: PropertyBuilder.GetValue(Object, Object[])
- uid: System.Reflection.Emit.PropertyBuilder.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetValue(Object, BindingFlags, Binder, Object[], CultureInfo)
  nameWithType: PropertyBuilder.GetValue(Object, BindingFlags, Binder, Object[], CultureInfo)
  fullName: PropertyBuilder.GetValue(Object, BindingFlags, Binder, Object[], CultureInfo)
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Reflection.Emit.PropertyBuilder.IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: IsDefined(Type, Boolean)
  nameWithType: PropertyBuilder.IsDefined(Type, Boolean)
  fullName: PropertyBuilder.IsDefined(Type, Boolean)
- uid: System.Reflection.Emit.PropertyBuilder.Module
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: Module
  nameWithType: PropertyBuilder.Module
  fullName: PropertyBuilder.Module
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.Reflection.Emit.PropertyBuilder.Name
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: Name
  nameWithType: PropertyBuilder.Name
  fullName: PropertyBuilder.Name
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Emit.PropertyBuilder.PropertyToken
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: PropertyToken
  nameWithType: PropertyBuilder.PropertyToken
  fullName: PropertyBuilder.PropertyToken
- uid: System.Reflection.Emit.PropertyToken
  parent: System.Reflection.Emit
  isExternal: false
  name: PropertyToken
  nameWithType: PropertyToken
  fullName: System.Reflection.Emit.PropertyToken
- uid: System.Reflection.Emit.PropertyBuilder.PropertyType
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: PropertyType
  nameWithType: PropertyBuilder.PropertyType
  fullName: PropertyBuilder.PropertyType
- uid: System.Reflection.Emit.PropertyBuilder.ReflectedType
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: ReflectedType
  nameWithType: PropertyBuilder.ReflectedType
  fullName: PropertyBuilder.ReflectedType
- uid: System.Reflection.Emit.PropertyBuilder.SetConstant(System.Object)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: SetConstant(Object)
  nameWithType: PropertyBuilder.SetConstant(Object)
  fullName: PropertyBuilder.SetConstant(Object)
- uid: System.Reflection.Emit.PropertyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: SetCustomAttribute(CustomAttributeBuilder)
  nameWithType: PropertyBuilder.SetCustomAttribute(CustomAttributeBuilder)
  fullName: PropertyBuilder.SetCustomAttribute(CustomAttributeBuilder)
- uid: System.Reflection.Emit.CustomAttributeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: CustomAttributeBuilder
  nameWithType: CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder
- uid: System.Reflection.Emit.PropertyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: SetCustomAttribute(ConstructorInfo, Byte[])
  nameWithType: PropertyBuilder.SetCustomAttribute(ConstructorInfo, Byte[])
  fullName: PropertyBuilder.SetCustomAttribute(ConstructorInfo, Byte[])
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.PropertyBuilder.SetGetMethod(System.Reflection.Emit.MethodBuilder)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: SetGetMethod(MethodBuilder)
  nameWithType: PropertyBuilder.SetGetMethod(MethodBuilder)
  fullName: PropertyBuilder.SetGetMethod(MethodBuilder)
- uid: System.Reflection.Emit.PropertyBuilder.SetSetMethod(System.Reflection.Emit.MethodBuilder)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: SetSetMethod(MethodBuilder)
  nameWithType: PropertyBuilder.SetSetMethod(MethodBuilder)
  fullName: PropertyBuilder.SetSetMethod(MethodBuilder)
- uid: System.Reflection.Emit.PropertyBuilder.SetValue(System.Object,System.Object,System.Object[])
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: SetValue(Object, Object, Object[])
  nameWithType: PropertyBuilder.SetValue(Object, Object, Object[])
  fullName: PropertyBuilder.SetValue(Object, Object, Object[])
- uid: System.Reflection.Emit.PropertyBuilder.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: SetValue(Object, Object, BindingFlags, Binder, Object[], CultureInfo)
  nameWithType: PropertyBuilder.SetValue(Object, Object, BindingFlags, Binder, Object[], CultureInfo)
  fullName: PropertyBuilder.SetValue(Object, Object, BindingFlags, Binder, Object[], CultureInfo)
- uid: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: _PropertyBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: PropertyBuilder._PropertyBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: PropertyBuilder._PropertyBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: _PropertyBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: PropertyBuilder._PropertyBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: PropertyBuilder._PropertyBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)
- uid: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: _PropertyBuilder.GetTypeInfoCount(UInt32)
  nameWithType: PropertyBuilder._PropertyBuilder.GetTypeInfoCount(UInt32)
  fullName: PropertyBuilder._PropertyBuilder.GetTypeInfoCount(UInt32)
- uid: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: _PropertyBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: PropertyBuilder._PropertyBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: PropertyBuilder._PropertyBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Reflection.Emit.PropertyBuilder.#ctor*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: PropertyBuilder
  nameWithType: PropertyBuilder.PropertyBuilder
  fullName: PropertyBuilder.PropertyBuilder
  monikers:
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.Emit.PropertyBuilder.AddOtherMethod*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: AddOtherMethod
  nameWithType: PropertyBuilder.AddOtherMethod
  fullName: PropertyBuilder.AddOtherMethod
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.Emit.PropertyBuilder.Attributes*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: Attributes
  nameWithType: PropertyBuilder.Attributes
  fullName: PropertyBuilder.Attributes
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.Emit.PropertyBuilder.CanRead*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: CanRead
  nameWithType: PropertyBuilder.CanRead
  fullName: PropertyBuilder.CanRead
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.Emit.PropertyBuilder.CanWrite*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: CanWrite
  nameWithType: PropertyBuilder.CanWrite
  fullName: PropertyBuilder.CanWrite
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.Emit.PropertyBuilder.DeclaringType*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: DeclaringType
  nameWithType: PropertyBuilder.DeclaringType
  fullName: PropertyBuilder.DeclaringType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.Emit.PropertyBuilder.GetAccessors*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetAccessors
  nameWithType: PropertyBuilder.GetAccessors
  fullName: PropertyBuilder.GetAccessors
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetCustomAttributes
  nameWithType: PropertyBuilder.GetCustomAttributes
  fullName: PropertyBuilder.GetCustomAttributes
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.Emit.PropertyBuilder.GetGetMethod*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetGetMethod
  nameWithType: PropertyBuilder.GetGetMethod
  fullName: PropertyBuilder.GetGetMethod
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.Emit.PropertyBuilder.GetIndexParameters*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetIndexParameters
  nameWithType: PropertyBuilder.GetIndexParameters
  fullName: PropertyBuilder.GetIndexParameters
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.Emit.PropertyBuilder.GetSetMethod*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetSetMethod
  nameWithType: PropertyBuilder.GetSetMethod
  fullName: PropertyBuilder.GetSetMethod
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.Emit.PropertyBuilder.GetValue*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: GetValue
  nameWithType: PropertyBuilder.GetValue
  fullName: PropertyBuilder.GetValue
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.Emit.PropertyBuilder.IsDefined*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: IsDefined
  nameWithType: PropertyBuilder.IsDefined
  fullName: PropertyBuilder.IsDefined
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.Emit.PropertyBuilder.Module*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: Module
  nameWithType: PropertyBuilder.Module
  fullName: PropertyBuilder.Module
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.Emit.PropertyBuilder.Name*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: Name
  nameWithType: PropertyBuilder.Name
  fullName: PropertyBuilder.Name
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.Emit.PropertyBuilder.PropertyToken*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: PropertyToken
  nameWithType: PropertyBuilder.PropertyToken
  fullName: PropertyBuilder.PropertyToken
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.Emit.PropertyBuilder.PropertyType*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: PropertyType
  nameWithType: PropertyBuilder.PropertyType
  fullName: PropertyBuilder.PropertyType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.Emit.PropertyBuilder.ReflectedType*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: ReflectedType
  nameWithType: PropertyBuilder.ReflectedType
  fullName: PropertyBuilder.ReflectedType
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.Emit.PropertyBuilder.SetConstant*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: SetConstant
  nameWithType: PropertyBuilder.SetConstant
  fullName: PropertyBuilder.SetConstant
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.Emit.PropertyBuilder.SetCustomAttribute*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: SetCustomAttribute
  nameWithType: PropertyBuilder.SetCustomAttribute
  fullName: PropertyBuilder.SetCustomAttribute
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.Emit.PropertyBuilder.SetGetMethod*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: SetGetMethod
  nameWithType: PropertyBuilder.SetGetMethod
  fullName: PropertyBuilder.SetGetMethod
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.Emit.PropertyBuilder.SetSetMethod*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: SetSetMethod
  nameWithType: PropertyBuilder.SetSetMethod
  fullName: PropertyBuilder.SetSetMethod
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.Emit.PropertyBuilder.SetValue*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: SetValue
  nameWithType: PropertyBuilder.SetValue
  fullName: PropertyBuilder.SetValue
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetIDsOfNames*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames
  nameWithType: PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames
  fullName: PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfo*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo
  nameWithType: PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo
  fullName: PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfoCount*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount
  nameWithType: PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount
  fullName: PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#Invoke*
  parent: System.Reflection.Emit.PropertyBuilder
  isExternal: false
  name: System.Runtime.InteropServices._PropertyBuilder.Invoke
  nameWithType: PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.Invoke
  fullName: PropertyBuilder.System.Runtime.InteropServices._PropertyBuilder.Invoke
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PropertyBuilder.xml
- uid: System.Reflection.PropertyInfo.Equals(System.Object)
  parent: System.Reflection.PropertyInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: PropertyInfo.Equals(Object)
  fullName: PropertyInfo.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Reflection.PropertyInfo.GetHashCode
  parent: System.Reflection.PropertyInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: PropertyInfo.GetHashCode()
  fullName: PropertyInfo.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Reflection.MemberInfo.CustomAttributes
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: CustomAttributes
  nameWithType: MemberInfo.CustomAttributes
  fullName: MemberInfo.CustomAttributes
- uid: System.Reflection.MemberInfo.GetCustomAttributesData
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: GetCustomAttributesData()
  nameWithType: MemberInfo.GetCustomAttributesData()
  fullName: MemberInfo.GetCustomAttributesData()
- uid: System.Reflection.PropertyInfo.MemberType
  parent: System.Reflection.PropertyInfo
  isExternal: false
  name: MemberType
  nameWithType: PropertyInfo.MemberType
  fullName: PropertyInfo.MemberType
- uid: System.Reflection.MemberInfo.MetadataToken
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: MetadataToken
  nameWithType: MemberInfo.MetadataToken
  fullName: MemberInfo.MetadataToken
- uid: System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: op_Equality(MemberInfo, MemberInfo)
  nameWithType: MemberInfo.op_Equality(MemberInfo, MemberInfo)
  fullName: MemberInfo.op_Equality(MemberInfo, MemberInfo)
- uid: System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: op_Inequality(MemberInfo, MemberInfo)
  nameWithType: MemberInfo.op_Inequality(MemberInfo, MemberInfo)
  fullName: MemberInfo.op_Inequality(MemberInfo, MemberInfo)
- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: ICustomAttributeProvider.GetCustomAttributes(Boolean)
  nameWithType: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)
  fullName: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Boolean)
- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)
  nameWithType: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)
  fullName: MemberInfo.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)
- uid: System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: ICustomAttributeProvider.IsDefined(Type, Boolean)
  nameWithType: MemberInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)
  fullName: MemberInfo.ICustomAttributeProvider.IsDefined(Type, Boolean)
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: _MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: MemberInfo._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: MemberInfo._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: _MemberInfo.GetType()
  nameWithType: MemberInfo._MemberInfo.GetType()
  fullName: MemberInfo._MemberInfo.GetType()
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: _MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: MemberInfo._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: MemberInfo._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: _MemberInfo.GetTypeInfoCount(UInt32)
  nameWithType: MemberInfo._MemberInfo.GetTypeInfoCount(UInt32)
  fullName: MemberInfo._MemberInfo.GetTypeInfoCount(UInt32)
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: _MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: MemberInfo._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: MemberInfo._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
- uid: System.Reflection.PropertyInfo.GetAccessors
  parent: System.Reflection.PropertyInfo
  isExternal: false
  name: GetAccessors()
  nameWithType: PropertyInfo.GetAccessors()
  fullName: PropertyInfo.GetAccessors()
- uid: System.Reflection.PropertyInfo.GetConstantValue
  parent: System.Reflection.PropertyInfo
  isExternal: false
  name: GetConstantValue()
  nameWithType: PropertyInfo.GetConstantValue()
  fullName: PropertyInfo.GetConstantValue()
- uid: System.Reflection.PropertyInfo.GetGetMethod
  parent: System.Reflection.PropertyInfo
  isExternal: false
  name: GetGetMethod()
  nameWithType: PropertyInfo.GetGetMethod()
  fullName: PropertyInfo.GetGetMethod()
- uid: System.Reflection.PropertyInfo.GetMethod
  parent: System.Reflection.PropertyInfo
  isExternal: false
  name: GetMethod
  nameWithType: PropertyInfo.GetMethod
  fullName: PropertyInfo.GetMethod
- uid: System.Reflection.PropertyInfo.GetOptionalCustomModifiers
  parent: System.Reflection.PropertyInfo
  isExternal: false
  name: GetOptionalCustomModifiers()
  nameWithType: PropertyInfo.GetOptionalCustomModifiers()
  fullName: PropertyInfo.GetOptionalCustomModifiers()
- uid: System.Reflection.PropertyInfo.GetRawConstantValue
  parent: System.Reflection.PropertyInfo
  isExternal: false
  name: GetRawConstantValue()
  nameWithType: PropertyInfo.GetRawConstantValue()
  fullName: PropertyInfo.GetRawConstantValue()
- uid: System.Reflection.PropertyInfo.GetRequiredCustomModifiers
  parent: System.Reflection.PropertyInfo
  isExternal: false
  name: GetRequiredCustomModifiers()
  nameWithType: PropertyInfo.GetRequiredCustomModifiers()
  fullName: PropertyInfo.GetRequiredCustomModifiers()
- uid: System.Reflection.PropertyInfo.GetSetMethod
  parent: System.Reflection.PropertyInfo
  isExternal: false
  name: GetSetMethod()
  nameWithType: PropertyInfo.GetSetMethod()
  fullName: PropertyInfo.GetSetMethod()
- uid: System.Reflection.PropertyInfo.GetValue(System.Object)
  parent: System.Reflection.PropertyInfo
  isExternal: false
  name: GetValue(Object)
  nameWithType: PropertyInfo.GetValue(Object)
  fullName: PropertyInfo.GetValue(Object)
- uid: System.Reflection.PropertyInfo.IsSpecialName
  parent: System.Reflection.PropertyInfo
  isExternal: false
  name: IsSpecialName
  nameWithType: PropertyInfo.IsSpecialName
  fullName: PropertyInfo.IsSpecialName
- uid: System.Reflection.PropertyInfo.op_Equality(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)
  parent: System.Reflection.PropertyInfo
  isExternal: false
  name: op_Equality(PropertyInfo, PropertyInfo)
  nameWithType: PropertyInfo.op_Equality(PropertyInfo, PropertyInfo)
  fullName: PropertyInfo.op_Equality(PropertyInfo, PropertyInfo)
- uid: System.Reflection.PropertyInfo.op_Inequality(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)
  parent: System.Reflection.PropertyInfo
  isExternal: false
  name: op_Inequality(PropertyInfo, PropertyInfo)
  nameWithType: PropertyInfo.op_Inequality(PropertyInfo, PropertyInfo)
  fullName: PropertyInfo.op_Inequality(PropertyInfo, PropertyInfo)
- uid: System.Reflection.PropertyInfo.SetMethod
  parent: System.Reflection.PropertyInfo
  isExternal: false
  name: SetMethod
  nameWithType: PropertyInfo.SetMethod
  fullName: PropertyInfo.SetMethod
- uid: System.Reflection.PropertyInfo.SetValue(System.Object,System.Object)
  parent: System.Reflection.PropertyInfo
  isExternal: false
  name: SetValue(Object, Object)
  nameWithType: PropertyInfo.SetValue(Object, Object)
  fullName: PropertyInfo.SetValue(Object, Object)
- uid: System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.PropertyInfo
  isExternal: false
  name: _PropertyInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: PropertyInfo._PropertyInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: PropertyInfo._PropertyInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
- uid: System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetType
  parent: System.Reflection.PropertyInfo
  isExternal: false
  name: _PropertyInfo.GetType()
  nameWithType: PropertyInfo._PropertyInfo.GetType()
  fullName: PropertyInfo._PropertyInfo.GetType()
- uid: System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.PropertyInfo
  isExternal: false
  name: _PropertyInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: PropertyInfo._PropertyInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: PropertyInfo._PropertyInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
- uid: System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.PropertyInfo
  isExternal: false
  name: _PropertyInfo.GetTypeInfoCount(UInt32)
  nameWithType: PropertyInfo._PropertyInfo.GetTypeInfoCount(UInt32)
  fullName: PropertyInfo._PropertyInfo.GetTypeInfoCount(UInt32)
- uid: System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.PropertyInfo
  isExternal: false
  name: _PropertyInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: PropertyInfo._PropertyInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: PropertyInfo._PropertyInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute(MemberInfo, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)
  fullName: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute(MemberInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttribute(MemberInfo, Type, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute<T>(MemberInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)
  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttribute<T>(MemberInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(MemberInfo, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(MemberInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Type)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes(MemberInfo, Type, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes<T>(MemberInfo)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)
  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo)
- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: GetCustomAttributes<T>(MemberInfo, Boolean)
  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)
  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(MemberInfo, Boolean)
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: IsDefined(MemberInfo, Type)
  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type)
  fullName: CustomAttributeExtensions.IsDefined(MemberInfo, Type)
- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Reflection.CustomAttributeExtensions
  isExternal: false
  name: IsDefined(MemberInfo, Type, Boolean)
  nameWithType: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)
  fullName: CustomAttributeExtensions.IsDefined(MemberInfo, Type, Boolean)
- uid: System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)
  parent: System.Reflection.MemberInfoExtensions
  isExternal: false
  name: GetMetadataToken(MemberInfo)
  nameWithType: MemberInfoExtensions.GetMetadataToken(MemberInfo)
  fullName: MemberInfoExtensions.GetMetadataToken(MemberInfo)
- uid: System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)
  parent: System.Reflection.MemberInfoExtensions
  isExternal: false
  name: HasMetadataToken(MemberInfo)
  nameWithType: MemberInfoExtensions.HasMetadataToken(MemberInfo)
  fullName: MemberInfoExtensions.HasMetadataToken(MemberInfo)
- uid: System.Reflection.PropertyInfoExtensions.GetAccessors(System.Reflection.PropertyInfo)
  parent: System.Reflection.PropertyInfoExtensions
  isExternal: false
  name: GetAccessors(PropertyInfo)
  nameWithType: PropertyInfoExtensions.GetAccessors(PropertyInfo)
  fullName: PropertyInfoExtensions.GetAccessors(PropertyInfo)
- uid: System.Reflection.PropertyInfoExtensions.GetAccessors(System.Reflection.PropertyInfo,System.Boolean)
  parent: System.Reflection.PropertyInfoExtensions
  isExternal: false
  name: GetAccessors(PropertyInfo, Boolean)
  nameWithType: PropertyInfoExtensions.GetAccessors(PropertyInfo, Boolean)
  fullName: PropertyInfoExtensions.GetAccessors(PropertyInfo, Boolean)
- uid: System.Reflection.PropertyInfoExtensions.GetGetMethod(System.Reflection.PropertyInfo)
  parent: System.Reflection.PropertyInfoExtensions
  isExternal: false
  name: GetGetMethod(PropertyInfo)
  nameWithType: PropertyInfoExtensions.GetGetMethod(PropertyInfo)
  fullName: PropertyInfoExtensions.GetGetMethod(PropertyInfo)
- uid: System.Reflection.PropertyInfoExtensions.GetGetMethod(System.Reflection.PropertyInfo,System.Boolean)
  parent: System.Reflection.PropertyInfoExtensions
  isExternal: false
  name: GetGetMethod(PropertyInfo, Boolean)
  nameWithType: PropertyInfoExtensions.GetGetMethod(PropertyInfo, Boolean)
  fullName: PropertyInfoExtensions.GetGetMethod(PropertyInfo, Boolean)
- uid: System.Reflection.PropertyInfoExtensions.GetSetMethod(System.Reflection.PropertyInfo)
  parent: System.Reflection.PropertyInfoExtensions
  isExternal: false
  name: GetSetMethod(PropertyInfo)
  nameWithType: PropertyInfoExtensions.GetSetMethod(PropertyInfo)
  fullName: PropertyInfoExtensions.GetSetMethod(PropertyInfo)
- uid: System.Reflection.PropertyInfoExtensions.GetSetMethod(System.Reflection.PropertyInfo,System.Boolean)
  parent: System.Reflection.PropertyInfoExtensions
  isExternal: false
  name: GetSetMethod(PropertyInfo, Boolean)
  nameWithType: PropertyInfoExtensions.GetSetMethod(PropertyInfo, Boolean)
  fullName: PropertyInfoExtensions.GetSetMethod(PropertyInfo, Boolean)
- uid: System.Runtime.InteropServices._PropertyBuilder
  parent: System.Runtime.InteropServices
  isExternal: false
  name: _PropertyBuilder
  nameWithType: _PropertyBuilder
  fullName: System.Runtime.InteropServices._PropertyBuilder
