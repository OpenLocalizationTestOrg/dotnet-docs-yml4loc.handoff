### YamlMime:ManagedReference
items:
- uid: System.Text.RegularExpressions.Group
  commentId: T:System.Text.RegularExpressions.Group
  id: Group
  children:
  - System.Text.RegularExpressions.Group.Captures
  - System.Text.RegularExpressions.Group.Name
  - System.Text.RegularExpressions.Group.Success
  - System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)
  langs:
  - csharp
  name: Group
  nameWithType: Group
  fullName: System.Text.RegularExpressions.Group
  type: Class
  assemblies:
  - System.Text.RegularExpressions
  - System
  - netstandard
  namespace: System.Text.RegularExpressions
  summary: Represents the results from a single capturing group.
  remarks: "A capturing group can capture zero, one, or more strings in a single match because of quantifiers. (For more information, see [Quantifiers](~/docs/standard/base-types/quantifiers-in-regular-expressions.md).) All the substrings matched by a single capturing group are available from the <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=fullName> property. Information about the last substring captured can be accessed directly from the `Value` and `Index` properties. (That is, the <xref:System.Text.RegularExpressions.Group> instance is equivalent to the last item of the collection returned by the <xref:System.Text.RegularExpressions.Group.Captures%2A> property, which reflects the last capture made by the capturing group.)  \n  \n An example helps to clarify this relationship between a <xref:System.Text.RegularExpressions.Group> object and the <xref:System.Text.RegularExpressions.CaptureCollection?displayProperty=fullName> that is returned by the <xref:System.Text.RegularExpressions.Group.Captures%2A> property. The regular expression pattern `(\\b(\\w+?)[,:;]?\\s?)+[?.!]` matches entire sentences. The regular expression is defined as shown in the following table.  \n  \n|Pattern|Description|  \n|-------------|-----------------|  \n|`\\b`|Begin the match at a word boundary.|  \n|`(\\w+?)`|Match one or more word characters, but as few characters as possible. This is the second (inner) capturing group. (The first capturing group includes the `\\b` language element.)|  \n|`[,:;]?`|Match zero or one occurrence of a comma, colon, or semicolon.|  \n|`\\s?`|Match zero or one occurrence of a white-space character.|  \n|`(\\b(\\w+?)[,:;]?\\s?)+`|Match the pattern consisting of a word boundary, one or more word characters, a punctuation symbol, and a white-space character one or more times. This is the first capturing group.|  \n|`[?.!]`|Match any occurrence of a period, question mark, or exclamation point.|  \n  \n In this regular expression pattern, the subpattern `(\\w+?)` is designed to match multiple words within a sentence. However, the value of the <xref:System.Text.RegularExpressions.Group> object represents only the last match that `(\\w+?)` captures, whereas the <xref:System.Text.RegularExpressions.Group.Captures%2A> property returns a <xref:System.Text.RegularExpressions.CaptureCollection> that represents all captured text. As the output shows, the <xref:System.Text.RegularExpressions.CaptureCollection> for the second capturing group contains four objects. The last of these corresponds to the <xref:System.Text.RegularExpressions.Group> object.  \n  \n [!code-csharp[System.Text.RegularExpressions.Group.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.group.class/cs/groupandcaptures1.cs#1)]\n [!code-vb[System.Text.RegularExpressions.Group.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.group.class/vb/groupandcaptures1.vb#1)]"
  syntax:
    content: 'public class Group : System.Text.RegularExpressions.Capture'
  inheritance:
  - System.Object
  - System.Text.RegularExpressions.Capture
  derivedClasses:
  - System.Text.RegularExpressions.Match
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Text.RegularExpressions.Capture.Index
  - System.Text.RegularExpressions.Capture.Length
  - System.Text.RegularExpressions.Capture.ToString
  - System.Text.RegularExpressions.Capture.Value
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Group.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Text.RegularExpressions.Group.Captures
  commentId: P:System.Text.RegularExpressions.Group.Captures
  id: Captures
  parent: System.Text.RegularExpressions.Group
  langs:
  - csharp
  name: Captures
  nameWithType: Group.Captures
  fullName: Group.Captures
  type: Property
  assemblies:
  - System.Text.RegularExpressions
  - System
  - netstandard
  namespace: System.Text.RegularExpressions
  summary: Gets a collection of all the captures matched by the capturing group, in innermost-leftmost-first order (or innermost-rightmost-first order if the regular expression is modified with the <xref href="System.Text.RegularExpressions.RegexOptions.RightToLeft"></xref> option). The collection may have zero or more items.
  remarks: "If a quantifier is not applied to a capturing group, the collection returned by the <xref:System.Text.RegularExpressions.Group.Captures%2A> property contains a single <xref:System.Text.RegularExpressions.Capture> object that provides information about the same substring as the <xref:System.Text.RegularExpressions.Group> object. This is illustrated in the following example. It defines a regular expression, `\\b(\\w+)\\b`, that extracts a single word from a sentence. The <xref:System.Text.RegularExpressions.Group> object captures the word \"This\", and the single object in the <xref:System.Text.RegularExpressions.CaptureCollection> contains information about the same capture.  \n  \n [!code-csharp[System.Text.RegularExpressions.Group.Captures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/cs/captures1.cs#1)]\n [!code-vb[System.Text.RegularExpressions.Group.Captures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/vb/captures1.vb#1)]  \n  \n The real utility of the <xref:System.Text.RegularExpressions.Group.Captures%2A> property occurs when a quantifier is applied to a capturing group so that the group captures multiple substrings in a single regular expression. In this case, the <xref:System.Text.RegularExpressions.Group> object contains information about the last captured substring, whereas the <xref:System.Text.RegularExpressions.Group.Captures%2A> property contains information about all the substrings captured by the group. In the following example, the regular expression `\\b(\\w+\\s*)+\\.` matches an entire sentence that ends in a period. The group `(\\w+\\s*)+` captures the individual words in the collection. Because the <xref:System.Text.RegularExpressions.Group> collection contains information only about the last captured substring, it captures the last word in the sentence, \"sentence\". However, each word captured by the group is available from the collection returned by the <xref:System.Text.RegularExpressions.Group.Captures%2A> property.  \n  \n [!code-csharp[System.Text.RegularExpressions.Group.Captures#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/cs/captures2.cs#2)]\n [!code-vb[System.Text.RegularExpressions.Group.Captures#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/vb/captures2.vb#2)]"
  syntax:
    content: public System.Text.RegularExpressions.CaptureCollection Captures { get; }
    return:
      type: System.Text.RegularExpressions.CaptureCollection
      description: The collection of substrings matched by the group.
  overload: System.Text.RegularExpressions.Group.Captures*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Group.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Text.RegularExpressions.Group.Name
  commentId: P:System.Text.RegularExpressions.Group.Name
  id: Name
  parent: System.Text.RegularExpressions.Group
  langs:
  - csharp
  name: Name
  nameWithType: Group.Name
  fullName: Group.Name
  type: Property
  assemblies:
  - System.Text.RegularExpressions
  - System
  namespace: System.Text.RegularExpressions
  summary: Returns the name of the capturing group representing by the current instance.
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: The name of the capturing group represented by the current instance.
  overload: System.Text.RegularExpressions.Group.Name*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  monikers:
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Group.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Text.RegularExpressions.Group.Success
  commentId: P:System.Text.RegularExpressions.Group.Success
  id: Success
  parent: System.Text.RegularExpressions.Group
  langs:
  - csharp
  name: Success
  nameWithType: Group.Success
  fullName: Group.Success
  type: Property
  assemblies:
  - System.Text.RegularExpressions
  - System
  - netstandard
  namespace: System.Text.RegularExpressions
  summary: Gets a value indicating whether the match is successful.
  remarks: The `Success` property is true if at least one substring was captured by this group. It is equivalent to the Boolean expression (Group.Captures.Count > 0).
  syntax:
    content: public bool Success { get; }
    return:
      type: System.Boolean
      description: '`true` if the match is successful; otherwise, `false`.'
  overload: System.Text.RegularExpressions.Group.Success*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Group.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)
  commentId: M:System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)
  id: Synchronized(System.Text.RegularExpressions.Group)
  parent: System.Text.RegularExpressions.Group
  langs:
  - csharp
  name: Synchronized(Group)
  nameWithType: Group.Synchronized(Group)
  fullName: Group.Synchronized(Group)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Returns a `Group` object equivalent to the one supplied that is safe to share between multiple threads.
  syntax:
    content: public static System.Text.RegularExpressions.Group Synchronized (System.Text.RegularExpressions.Group inner);
    parameters:
    - id: inner
      type: System.Text.RegularExpressions.Group
      description: The input <xref href="System.Text.RegularExpressions.Group"></xref> object.
    return:
      type: System.Text.RegularExpressions.Group
      description: A regular expression `Group` object.
  overload: System.Text.RegularExpressions.Group.Synchronized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>inner</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Group.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Text.RegularExpressions.Capture
  parent: System.Text.RegularExpressions
  isExternal: false
  name: Capture
  nameWithType: Capture
  fullName: System.Text.RegularExpressions.Capture
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Text.RegularExpressions.Group.Captures
  parent: System.Text.RegularExpressions.Group
  isExternal: false
  name: Captures
  nameWithType: Group.Captures
  fullName: Group.Captures
- uid: System.Text.RegularExpressions.CaptureCollection
  parent: System.Text.RegularExpressions
  isExternal: false
  name: CaptureCollection
  nameWithType: CaptureCollection
  fullName: System.Text.RegularExpressions.CaptureCollection
- uid: System.Text.RegularExpressions.Group.Name
  parent: System.Text.RegularExpressions.Group
  isExternal: false
  name: Name
  nameWithType: Group.Name
  fullName: Group.Name
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Text.RegularExpressions.Group.Success
  parent: System.Text.RegularExpressions.Group
  isExternal: false
  name: Success
  nameWithType: Group.Success
  fullName: Group.Success
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)
  parent: System.Text.RegularExpressions.Group
  isExternal: false
  name: Synchronized(Group)
  nameWithType: Group.Synchronized(Group)
  fullName: Group.Synchronized(Group)
- uid: System.Text.RegularExpressions.Group
  parent: System.Text.RegularExpressions
  isExternal: false
  name: Group
  nameWithType: Group
  fullName: System.Text.RegularExpressions.Group
- uid: System.Text.RegularExpressions.Group.Captures*
  parent: System.Text.RegularExpressions.Group
  isExternal: false
  name: Captures
  nameWithType: Group.Captures
  fullName: Group.Captures
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Group.xml
- uid: System.Text.RegularExpressions.Group.Name*
  parent: System.Text.RegularExpressions.Group
  isExternal: false
  name: Name
  nameWithType: Group.Name
  fullName: Group.Name
  monikers:
  - netcore-1.1
  - netcore-2.0
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Group.xml
- uid: System.Text.RegularExpressions.Group.Success*
  parent: System.Text.RegularExpressions.Group
  isExternal: false
  name: Success
  nameWithType: Group.Success
  fullName: Group.Success
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Group.xml
- uid: System.Text.RegularExpressions.Group.Synchronized*
  parent: System.Text.RegularExpressions.Group
  isExternal: false
  name: Synchronized
  nameWithType: Group.Synchronized
  fullName: Group.Synchronized
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Text.RegularExpressions/Group.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Text.RegularExpressions.Capture.ToString
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: ToString()
  nameWithType: Capture.ToString()
  fullName: Capture.ToString()
- uid: System.Text.RegularExpressions.Capture.Index
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: Index
  nameWithType: Capture.Index
  fullName: Capture.Index
- uid: System.Text.RegularExpressions.Capture.Length
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: Length
  nameWithType: Capture.Length
  fullName: Capture.Length
- uid: System.Text.RegularExpressions.Capture.Value
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: Value
  nameWithType: Capture.Value
  fullName: Capture.Value
