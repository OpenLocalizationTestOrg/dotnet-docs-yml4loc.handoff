### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlCommand
  commentId: T:System.Data.SqlClient.SqlCommand
  id: SqlCommand
  children:
  - System.Data.SqlClient.SqlCommand.#ctor
  - System.Data.SqlClient.SqlCommand.#ctor(System.String)
  - System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  - System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)
  - System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)
  - System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery
  - System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)
  - System.Data.SqlClient.SqlCommand.BeginExecuteReader
  - System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)
  - System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)
  - System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader
  - System.Data.SqlClient.SqlCommand.Cancel
  - System.Data.SqlClient.SqlCommand.Clone
  - System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
  - System.Data.SqlClient.SqlCommand.CommandText
  - System.Data.SqlClient.SqlCommand.CommandTimeout
  - System.Data.SqlClient.SqlCommand.CommandType
  - System.Data.SqlClient.SqlCommand.Connection
  - System.Data.SqlClient.SqlCommand.CreateDbParameter
  - System.Data.SqlClient.SqlCommand.CreateParameter
  - System.Data.SqlClient.SqlCommand.DbConnection
  - System.Data.SqlClient.SqlCommand.DbParameterCollection
  - System.Data.SqlClient.SqlCommand.DbTransaction
  - System.Data.SqlClient.SqlCommand.DesignTimeVisible
  - System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)
  - System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)
  - System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)
  - System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)
  - System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteNonQuery
  - System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteReader
  - System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteScalar
  - System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteXmlReader
  - System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync
  - System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.Notification
  - System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
  - System.Data.SqlClient.SqlCommand.Parameters
  - System.Data.SqlClient.SqlCommand.Prepare
  - System.Data.SqlClient.SqlCommand.ResetCommandTimeout
  - System.Data.SqlClient.SqlCommand.StatementCompleted
  - System.Data.SqlClient.SqlCommand.Transaction
  - System.Data.SqlClient.SqlCommand.UpdatedRowSource
  - System.Data.SqlClient.SqlCommand.System#ICloneable#Clone
  langs:
  - csharp
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
  type: Class
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Represents a Transact-SQL statement or stored procedure to execute against a SQL Server database. This class cannot be inherited.
  remarks: "When an instance of <xref:System.Data.SqlClient.SqlCommand> is created, the read/write properties are set to their initial values. For a list of these values, see the <xref:System.Data.SqlClient.SqlCommand> constructor.  \n  \n <xref:System.Data.SqlClient.SqlCommand> features the following methods for executing commands at a SQL Server database:  \n  \n|Item|Description|  \n|----------|-----------------|  \n|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>|Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref:System.Data.SqlClient.SqlCommand>, generally executing commands such as INSERT, DELETE, UPDATE, and SET statements. Each call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> must be paired with a call to <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> which finishes the operation, typically on a separate thread.|  \n|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>|Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref:System.Data.SqlClient.SqlCommand> and retrieves one or more results sets from the server. Each call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> must be paired with a call to <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> which finishes the operation, typically on a separate thread.|  \n|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>|Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref:System.Data.SqlClient.SqlCommand>. Each call to `BeginExecuteXmlReader` must be paired with a call to `EndExecuteXmlReader`, which finishes the operation, typically on a separate thread, and returns an <xref:System.Xml.XmlReader> object.|  \n|<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>|Executes commands that return rows. For increased performance, <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> invokes commands using the Transact-SQL `sp_executesql` system stored procedure. Therefore, <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> might not have the effect that you want if used to execute commands such as Transact-SQL SET statements.|  \n|<xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>|Executes commands such as Transact-SQL INSERT, DELETE, UPDATE, and SET statements.|  \n|<xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>|Retrieves a single value (for example, an aggregate value) from a database.|  \n|<xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>|Sends the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> to the <xref:System.Data.SqlClient.SqlCommand.Connection%2A> and builds an <xref:System.Xml.XmlReader> object.|  \n  \n You can reset the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property and reuse the <xref:System.Data.SqlClient.SqlCommand> object. However, you must close the <xref:System.Data.SqlClient.SqlDataReader> before you can execute a new or previous command.  \n  \n If a <xref:System.Data.SqlClient.SqlException> is generated by the method executing a <xref:System.Data.SqlClient.SqlCommand>, the <xref:System.Data.SqlClient.SqlConnection> remains open when the severity level is 19 or less. When the severity level is 20 or greater, the server ordinarily closes the <xref:System.Data.SqlClient.SqlConnection>. However, the user can reopen the connection and continue.  \n  \n> [!NOTE]\n>  Nameless, also called ordinal, parameters are not supported by the .NET Framework Data Provider for SQL Server."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a <xref:System.Data.SqlClient.SqlCommand>, and a <xref:System.Data.SqlClient.SqlDataReader>. The example reads through the data, writing it to the console. Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader> and then the <xref:System.Data.SqlClient.SqlConnection> as it exits the `Using` code blocks.  \n  \n [!code-csharp[Classic WebData SqlCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/CS/source.cs#1)]\n [!code-vb[Classic WebData SqlCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/VB/source.vb#1)]  \n  \n The following sample shows how to create and execute different types of SqlCommand objects.  \n  \n First you must create the sample database, by executing the following script:  \n  \n```  \nUSE [master]  \nGO  \n  \nCREATE DATABASE [MySchool]  \nGO  \n  \nUSE [MySchool]  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE procedure [dbo].[CourseExtInfo] @CourseId int  \nas  \nselect c.CourseID,c.Title,c.Credits,d.Name as DepartmentName  \nfrom Course as c left outer join Department as d on c.DepartmentID=d.DepartmentID  \nwhere c.CourseID=@CourseId  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \ncreate procedure [dbo].[DepartmentInfo] @DepartmentId int,@CourseCount int output  \nas  \nselect @CourseCount=Count(c.CourseID)  \nfrom course as c  \nwhere c.DepartmentID=@DepartmentId  \n  \nselect d.DepartmentID,d.Name,d.Budget,d.StartDate,d.Administrator  \nfrom Department as d  \nwhere d.DepartmentID=@DepartmentId  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCreate PROCEDURE [dbo].[GetDepartmentsOfSpecifiedYear]   \n@Year int,@BudgetSum money output  \nAS  \nBEGIN  \n        SELECT @BudgetSum=SUM([Budget])  \n  FROM [MySchool].[dbo].[Department]  \n  Where YEAR([StartDate])=@Year   \n  \nSELECT [DepartmentID]  \n      ,[Name]  \n      ,[Budget]  \n      ,[StartDate]  \n      ,[Administrator]  \n  FROM [MySchool].[dbo].[Department]  \n  Where YEAR([StartDate])=@Year  \n  \nEND  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE TABLE [dbo].[Course]([CourseID] [nvarchar](10) NOT NULL,  \n[Year] [smallint] NOT NULL,  \n[Title] [nvarchar](100) NOT NULL,  \n[Credits] [int] NOT NULL,  \n[DepartmentID] [int] NOT NULL,  \n CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   \n(  \n[CourseID] ASC,  \n[Year] ASC  \n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE TABLE [dbo].[Department]([DepartmentID] [int] IDENTITY(1,1) NOT NULL,  \n[Name] [nvarchar](50) NOT NULL,  \n[Budget] [money] NOT NULL,  \n[StartDate] [datetime] NOT NULL,  \n[Administrator] [int] NULL,  \n CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   \n(  \n[DepartmentID] ASC  \n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE TABLE [dbo].[Person]([PersonID] [int] IDENTITY(1,1) NOT NULL,  \n[LastName] [nvarchar](50) NOT NULL,  \n[FirstName] [nvarchar](50) NOT NULL,  \n[HireDate] [datetime] NULL,  \n[EnrollmentDate] [datetime] NULL,  \n CONSTRAINT [PK_School.Student] PRIMARY KEY CLUSTERED   \n(  \n[PersonID] ASC  \n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE TABLE [dbo].[StudentGrade]([EnrollmentID] [int] IDENTITY(1,1) NOT NULL,  \n[CourseID] [nvarchar](10) NOT NULL,  \n[StudentID] [int] NOT NULL,  \n[Grade] [decimal](3, 2) NOT NULL,  \n CONSTRAINT [PK_StudentGrade] PRIMARY KEY CLUSTERED   \n(  \n[EnrollmentID] ASC  \n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \ncreate view [dbo].[EnglishCourse]  \nas  \nselect c.CourseID,c.Title,c.Credits,c.DepartmentID  \nfrom Course as c join Department as d on c.DepartmentID=d.DepartmentID  \nwhere d.Name=N'English'  \n  \nGO  \nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  \nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  \nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  \nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  \nSET IDENTITY_INSERT [dbo].[Department] ON   \n  \nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  \nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  \nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  \nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  \nSET IDENTITY_INSERT [dbo].[Department] OFF  \nSET IDENTITY_INSERT [dbo].[Person] ON   \n  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (1, N'Hu', N'Nan', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (2, N'Norman', N'Laura', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (3, N'Olivotto', N'Nino', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (4, N'Anand', N'Arturo', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (5, N'Jai', N'Damien', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (6, N'Holt', N'Roger', CAST(0x000097F100000000 AS DateTime), NULL)  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (7, N'Martin', N'Randall', CAST(0x00008B1A00000000 AS DateTime), NULL)  \nSET IDENTITY_INSERT [dbo].[Person] OFF  \nSET IDENTITY_INSERT [dbo].[StudentGrade] ON   \n  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (1, N'C1045', 1, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (2, N'C1045', 2, CAST(3.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (3, N'C1045', 3, CAST(2.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (4, N'C1045', 4, CAST(4.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (5, N'C1045', 5, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (6, N'C1061', 1, CAST(4.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (7, N'C1061', 3, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (8, N'C1061', 4, CAST(2.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (9, N'C1061', 5, CAST(1.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (10, N'C2021', 1, CAST(2.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (11, N'C2021', 2, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (12, N'C2021', 4, CAST(3.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (13, N'C2021', 5, CAST(3.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (14, N'C2042', 1, CAST(2.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (15, N'C2042', 2, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (16, N'C2042', 3, CAST(4.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (17, N'C2042', 5, CAST(3.00 AS Decimal(3, 2)))  \nSET IDENTITY_INSERT [dbo].[StudentGrade] OFF  \nALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  \nREFERENCES [dbo].[Department] ([DepartmentID])  \nGO  \nALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  \nGO  \nALTER TABLE [dbo].[StudentGrade]  WITH CHECK ADD  CONSTRAINT [FK_StudentGrade_Student] FOREIGN KEY([StudentID])  \nREFERENCES [dbo].[Person] ([PersonID])  \nGO  \nALTER TABLE [dbo].[StudentGrade] CHECK CONSTRAINT [FK_StudentGrade_Student]  \nGO  \n```  \n  \n Next, compile and execute the following:  \n  \n```  \nusing System;  \nusing System.Data;  \nusing System.Data.SqlClient;  \nusing System.Threading.Tasks;  \n  \nclass Program {  \n  \n   static class SqlHelper {  \n      // Set the connection, command, and then execute the command with non query.  \n      public static Int32 ExecuteNonQuery(String connectionString, String commandText,  \n          CommandType commandType, params SqlParameter[] parameters) {  \n         using (SqlConnection conn = new SqlConnection(connectionString)) {  \n            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  \n               // There're three command types: StoredProcedure, Text, TableDirect. The TableDirect   \n               // type is only for OLE DB.    \n               cmd.CommandType = commandType;  \n               cmd.Parameters.AddRange(parameters);  \n  \n               conn.Open();  \n               return cmd.ExecuteNonQuery();  \n            }  \n         }  \n      }  \n  \n      // Set the connection, command, and then execute the command and only return one value.  \n      public static Object ExecuteScalar(String connectionString, String commandText,  \n          CommandType commandType, params SqlParameter[] parameters) {  \n         using (SqlConnection conn = new SqlConnection(connectionString)) {  \n            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  \n               cmd.CommandType = commandType;  \n               cmd.Parameters.AddRange(parameters);  \n  \n               conn.Open();  \n               return cmd.ExecuteScalar();  \n            }  \n         }  \n      }  \n  \n      // Set the connection, command, and then execute the command with query and return the reader.  \n      public static SqlDataReader ExecuteReader(String connectionString, String commandText,  \n          CommandType commandType, params SqlParameter[] parameters) {  \n         SqlConnection conn = new SqlConnection(connectionString);  \n  \n         using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  \n            cmd.CommandType = commandType;  \n            cmd.Parameters.AddRange(parameters);  \n  \n            conn.Open();  \n            // When using CommandBehavior.CloseConnection, the connection will be closed when the   \n            // IDataReader is closed.  \n            SqlDataReader reader = cmd.ExecuteReader(CommandBehavior.CloseConnection);  \n  \n            return reader;  \n         }  \n      }  \n   }  \n  \n   static void Main(string[] args) {  \n      String connectionString = \"Data Source=(local);Initial Catalog=MySchool;Integrated Security=True;Asynchronous Processing=true;\";  \n  \n      CountCourses(connectionString, 2012);  \n      Console.WriteLine();  \n  \n      Console.WriteLine(\"Following result is the departments that started from 2007:\");  \n      GetDepartments(connectionString, 2007);  \n      Console.WriteLine();  \n  \n      Console.WriteLine(\"Add the credits when the credits of course is lower than 4.\");  \n      AddCredits(connectionString, 4);  \n      Console.WriteLine();  \n  \n      Console.WriteLine(\"Please press any key to exit...\");  \n      Console.ReadKey();  \n   }  \n  \n   static void CountCourses(String connectionString, Int32 year) {  \n      String commandText = \"Select Count([CourseID]) FROM [MySchool].[dbo].[Course] Where Year=@Year\";  \n      SqlParameter parameterYear = new SqlParameter(\"@Year\", SqlDbType.Int);  \n      parameterYear.Value = year;  \n  \n      Object oValue = SqlHelper.ExecuteScalar(connectionString, commandText, CommandType.Text, parameterYear);  \n      Int32 count;  \n      if (Int32.TryParse(oValue.ToString(), out count))  \n         Console.WriteLine(\"There {0} {1} course{2} in {3}.\", count > 1 ? \"are\" : \"is\", count, count > 1 ? \"s\" : null, year);  \n   }  \n  \n   // Display the Departments that start from the specified year.  \n   static void GetDepartments(String connectionString, Int32 year) {  \n      String commandText = \"dbo.GetDepartmentsOfSpecifiedYear\";  \n  \n      // Specify the year of StartDate  \n      SqlParameter parameterYear = new SqlParameter(\"@Year\", SqlDbType.Int);  \n      parameterYear.Value = year;  \n  \n      // When the direction of parameter is set as Output, you can get the value after   \n      // executing the command.  \n      SqlParameter parameterBudget = new SqlParameter(\"@BudgetSum\", SqlDbType.Money);  \n      parameterBudget.Direction = ParameterDirection.Output;  \n  \n      using (SqlDataReader reader = SqlHelper.ExecuteReader(connectionString, commandText,  \n          CommandType.StoredProcedure, parameterYear, parameterBudget)) {  \n         Console.WriteLine(\"{0,-20}{1,-20}{2,-20}{3,-20}\", \"Name\", \"Budget\", \"StartDate\",  \n             \"Administrator\");  \n         while (reader.Read()) {  \n            Console.WriteLine(\"{0,-20}{1,-20:C}{2,-20:d}{3,-20}\", reader[\"Name\"],  \n                reader[\"Budget\"], reader[\"StartDate\"], reader[\"Administrator\"]);  \n         }  \n      }  \n      Console.WriteLine(\"{0,-20}{1,-20:C}\", \"Sum:\", parameterBudget.Value);  \n   }  \n  \n   // If credits of course is lower than the certain value, the method will add the credits.  \n   static void AddCredits(String connectionString, Int32 creditsLow) {  \n      String commandText = \"Update [MySchool].[dbo].[Course] Set Credits=Credits+1 Where Credits<@Credits\";  \n  \n      SqlParameter parameterCredits = new SqlParameter(\"@Credits\", creditsLow);  \n  \n      Int32 rows = SqlHelper.ExecuteNonQuery(connectionString, commandText, CommandType.Text, parameterCredits);  \n  \n      Console.WriteLine(\"{0} row{1} {2} updated.\", rows, rows > 1 ? \"s\" : null, rows > 1 ? \"are\" : \"is\");  \n   }  \n}  \n```"
  syntax:
    content: 'public sealed class SqlCommand : System.Data.Common.DbCommand, ICloneable, IDisposable'
  inheritance:
  - System.Object
  - System.Data.Common.DbCommand
  implements:
  - System.ICloneable
  - System.IDisposable
  inheritedMembers:
  - System.Data.Common.DbCommand.Dispose
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync
  - System.Data.Common.DbCommand.ExecuteScalarAsync
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  - System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.#ctor
  commentId: M:System.Data.SqlClient.SqlCommand.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand()
  nameWithType: SqlCommand.SqlCommand()
  fullName: SqlCommand.SqlCommand()
  type: Constructor
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Initializes a new instance of the <xref href="System.Data.SqlClient.SqlCommand"></xref> class.
  remarks: "The base constructor initializes all fields to their default values. The following table shows initial property values for an instance of <xref:System.Data.SqlClient.SqlCommand>.  \n  \n|Properties|Initial value|  \n|----------------|-------------------|  \n|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|empty string (\"\")|  \n|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  \n|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  \n|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|Null|  \n  \n You can change the value for any of these properties through a separate call to the property."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets the `CommandTimeout` property.  \n  \n [!code-csharp[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/CS/source.cs#1)]\n [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/VB/source.vb#1)]"
  syntax:
    content: public SqlCommand ();
    parameters: []
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String)
  commentId: M:System.Data.SqlClient.SqlCommand.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand(String)
  nameWithType: SqlCommand.SqlCommand(String)
  fullName: SqlCommand.SqlCommand(String)
  type: Constructor
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Initializes a new instance of the <xref href="System.Data.SqlClient.SqlCommand"></xref> class with the text of the query.
  remarks: "When an instance of <xref:System.Data.SqlClient.SqlCommand> is created, the following read/write properties are set to initial values.  \n  \n|Properties|Initial value|  \n|----------------|-------------------|  \n|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  \n|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  \n|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  \n|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|null|  \n  \n You can change the value for any of these properties through a separate call to the property."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand>, passing in the connection string and command text.  \n  \n [!code-csharp[Classic WebData SqlCommand.SqlCommand1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand1 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData SqlCommand.SqlCommand1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand1 Example/VB/source.vb#1)]"
  syntax:
    content: public SqlCommand (string cmdText);
    parameters:
    - id: cmdText
      type: System.String
      description: The text of the query.
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  commentId: M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection)'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand(String, SqlConnection)
  nameWithType: SqlCommand.SqlCommand(String, SqlConnection)
  fullName: SqlCommand.SqlCommand(String, SqlConnection)
  type: Constructor
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Initializes a new instance of the <xref href="System.Data.SqlClient.SqlCommand"></xref> class with the text of the query and a <xref href="System.Data.SqlClient.SqlConnection"></xref>.
  remarks: "The following table shows initial property values for an instance of <xref:System.Data.SqlClient.SqlCommand>.  \n  \n|Properties|Initial value|  \n|----------------|-------------------|  \n|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  \n|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  \n|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  \n|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|A new <xref:System.Data.SqlClient.SqlConnection> that is the value for the `connection` parameter.|  \n  \n You can change the value for any of these parameters by setting the related property."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \n  \n [!code-csharp[Classic WebData SqlCommand.SqlCommand2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand2 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData SqlCommand.SqlCommand2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand2 Example/VB/source.vb#1)]"
  syntax:
    content: public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection);
    parameters:
    - id: cmdText
      type: System.String
      description: The text of the query.
    - id: connection
      type: System.Data.SqlClient.SqlConnection
      description: A <xref href="System.Data.SqlClient.SqlConnection"></xref> that represents the connection to an instance of SQL Server.
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)
  commentId: M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)
  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand(String, SqlConnection, SqlTransaction)
  nameWithType: SqlCommand.SqlCommand(String, SqlConnection, SqlTransaction)
  fullName: SqlCommand.SqlCommand(String, SqlConnection, SqlTransaction)
  type: Constructor
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Initializes a new instance of the <xref href="System.Data.SqlClient.SqlCommand"></xref> class with the text of the query, a <xref href="System.Data.SqlClient.SqlConnection"></xref>, and the <xref href="System.Data.SqlClient.SqlTransaction"></xref>.
  remarks: "The following table shows initial property values for an instance of <xref:System.Data.SqlClient.SqlCommand>.  \n  \n|Properties|Initial value|  \n|----------------|-------------------|  \n|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  \n|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  \n|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  \n|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|A new <xref:System.Data.SqlClient.SqlConnection> that is the value for the `connection` parameter.|  \n  \n You can change the value for any of these parameters by setting the related property."
  syntax:
    content: public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction);
    parameters:
    - id: cmdText
      type: System.String
      description: The text of the query.
    - id: connection
      type: System.Data.SqlClient.SqlConnection
      description: A <xref href="System.Data.SqlClient.SqlConnection"></xref> that represents the connection to an instance of SQL Server.
    - id: transaction
      type: System.Data.SqlClient.SqlTransaction
      description: The <xref href="System.Data.SqlClient.SqlTransaction"></xref> in which the <xref href="System.Data.SqlClient.SqlCommand"></xref> executes.
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)
  commentId: M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)
  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand(String, SqlConnection, SqlTransaction, SqlCommandColumnEncryptionSetting)
  nameWithType: SqlCommand.SqlCommand(String, SqlConnection, SqlTransaction, SqlCommandColumnEncryptionSetting)
  fullName: SqlCommand.SqlCommand(String, SqlConnection, SqlTransaction, SqlCommandColumnEncryptionSetting)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: Initializes a new instance of the <xref href="System.Data.SqlClient.SqlCommand"></xref> class with specified command text, connection, transaction, and encryption setting.
  syntax:
    content: public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction, System.Data.SqlClient.SqlCommandColumnEncryptionSetting columnEncryptionSetting);
    parameters:
    - id: cmdText
      type: System.String
      description: The text of the query.
    - id: connection
      type: System.Data.SqlClient.SqlConnection
      description: A <xref href="System.Data.SqlClient.SqlConnection"></xref> that represents the connection to an instance of SQL Server.
    - id: transaction
      type: System.Data.SqlClient.SqlTransaction
      description: The <xref href="System.Data.SqlClient.SqlTransaction"></xref> in which the <xref href="System.Data.SqlClient.SqlCommand"></xref> executes.
    - id: columnEncryptionSetting
      type: System.Data.SqlClient.SqlCommandColumnEncryptionSetting
      description: The encryption setting. For more information, see [Always Encrypted](https://msdn.microsoft.com/library/mt163865.aspx).
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  version:
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery
  commentId: M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery
  id: BeginExecuteNonQuery
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteNonQuery()
  nameWithType: SqlCommand.BeginExecuteNonQuery()
  fullName: SqlCommand.BeginExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href="System.Data.SqlClient.SqlCommand"></xref>.
  remarks: "The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method starts the process of asynchronously executing a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement or stored procedure that does not return rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method to finish the operation. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method returns immediately (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> has no effect on <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>), but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.  \n  \n Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.  \n  \n Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>."
  example:
  - "The following console application creates updates data within the **AdventureWorks** sample database, doing its work asynchronously. In order to emulate a long-running process, this example inserts a WAITFOR statement in the command text. Normally, you would not take efforts to make your commands run slower, but doing this in this case makes it easier to demonstrate the asynchronous behavior.  \n  \n [!code-csharp[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQuery/CS/source.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQuery/VB/source.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteNonQuery ();
    parameters: []
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult"></xref> that can be used to poll or wait for results, or both; this value is also needed when invoking <xref href="System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)"></xref>, which returns the number of affected rows.
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Any error that occurred while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An error occurred in a <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)
  commentId: M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)
  id: BeginExecuteNonQuery(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteNonQuery(AsyncCallback, Object)
  nameWithType: SqlCommand.BeginExecuteNonQuery(AsyncCallback, Object)
  fullName: SqlCommand.BeginExecuteNonQuery(AsyncCallback, Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href="System.Data.SqlClient.SqlCommand"></xref>, given a callback procedure and state information.
  remarks: "The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that does not return rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method to finish the operation. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method returns immediately (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> has no effect on <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>), but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.  \n  \n The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed. You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method from within this delegate procedure, or from any other location within your application. In addition, you can pass any object in the `asyncStateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.  \n  \n Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.  \n  \n Because the callback procedure executes from within a background thread supplied by the Microsoft .NET common language runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications. For example, you must not interact with a form's contents from within your callback procedure; should you have to update the form, you must switch back to the form's thread in order to do your work. The example in this topic demonstrates this behavior.  \n  \n All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure. You must handle the exception in the callback procedure, not in the main application. See the example in this topic for additional information on handling exceptions in the callback procedure."
  example:
  - "The following Windows application demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method, executing a Transact-SQL statement that includes a delay of several seconds (emulating a long-running command).  \n  \n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \n  \n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \n  \n [!code-csharp[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQueryForm/CS/Form1.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQueryForm/VB/Form1.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteNonQuery (AsyncCallback callback, object stateObject);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback"></xref> delegate that is invoked when the command's execution has completed. Pass `null` (`Nothing` in Microsoft Visual Basic) to indicate that no callback is required.
    - id: stateObject
      type: System.Object
      description: A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the <xref href="System.IAsyncResult.AsyncState"></xref> property.
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult"></xref> that can be used to poll or wait for results, or both; this value is also needed when invoking <xref href="System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)"></xref>, which returns the number of affected rows.
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Any error that occurred while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An error occurred in a <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader
  commentId: M:System.Data.SqlClient.SqlCommand.BeginExecuteReader
  id: BeginExecuteReader
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteReader()
  nameWithType: SqlCommand.BeginExecuteReader()
  fullName: SqlCommand.BeginExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href="System.Data.SqlClient.SqlCommand"></xref>, and retrieves one or more result sets from the server.
  remarks: "The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.  \n  \n Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous. Although command execution is asynchronous, value fetching is still synchronous. This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.  \n  \n Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>.  \n  \n If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com."
  example:
  - "The following console application starts the process of retrieving a data reader asynchronously. While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value. As soon as the process has completed, the code retrieves the <xref:System.Data.SqlClient.SqlDataReader> and displays its contents.  \n  \n [!code-csharp[DataWorks SqlCommand.BeginExecuteReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReader/CS/source.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReader/VB/source.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteReader ();
    parameters: []
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult"></xref> that can be used to poll or wait for results, or both; this value is also needed when invoking <xref href="System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)"></xref>, which returns a <xref href="System.Data.SqlClient.SqlDataReader"></xref> instance that can be used to retrieve the returned rows.
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Any error that occurred while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An error occurred in a <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)
  commentId: M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)
  id: BeginExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteReader(CommandBehavior)
  nameWithType: SqlCommand.BeginExecuteReader(CommandBehavior)
  fullName: SqlCommand.BeginExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href="System.Data.SqlClient.SqlCommand"></xref> using one of the <xref href="System.Data.CommandBehavior"></xref> values.
  remarks: "The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.  \n  \n The `behavior` parameter lets you specify options that control the behavior of the command and its connection. These values can be combined together (using the programming language's `OR` operator); generally, developers use the `CommandBehavior.CloseConnection` value to make sure that the connection is closed by the runtime when the <xref:System.Data.SqlClient.SqlDataReader> is closed.  \n  \n Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous. Although command execution is asynchronous, value fetching is still synchronous. This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.  \n  \n Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>.  \n  \n If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com."
  example:
  - "The following console application starts the process of retrieving a data reader asynchronously. While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value. Once the process has completed, the code retrieves the <xref:System.Data.SqlClient.SqlDataReader> and displays its contents.  \n  \n This example also passes the `CommandBehavior.CloseConnection` and `CommandBehavior.SingleRow` values in the behavior parameter, causing the connection to be closed with the returned <xref:System.Data.SqlClient.SqlDataReader> is closed, and to optimize for a single row result.  \n  \n [!code-csharp[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncSimple/CS/source.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncSimple/VB/source.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: One of the <xref href="System.Data.CommandBehavior"></xref> values, indicating options for statement execution and data retrieval.
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult"></xref> that can be used to poll, wait for results, or both; this value is also needed when invoking <xref href="System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)"></xref>, which returns a <xref href="System.Data.SqlClient.SqlDataReader"></xref> instance that can be used to retrieve the returned rows.
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Any error that occurred while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An error occurred in a <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)
  commentId: M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)
  id: BeginExecuteReader(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteReader(AsyncCallback, Object)
  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback, Object)
  fullName: SqlCommand.BeginExecuteReader(AsyncCallback, Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href="System.Data.SqlClient.SqlCommand"></xref> and retrieves one or more result sets from the server, given a callback procedure and state information.
  remarks: "The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed cause the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.  \n  \n The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed. You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method from within this delegate procedure, or from any other location within your application. In addition, you can pass any object in the `stateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.  \n  \n Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous. Although command execution is asynchronous, value fetching is still synchronous. This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.  \n  \n Because the callback procedure executes from within a background thread supplied by the Microsoft .NET runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications. For example, you must not interact with a form's contents from within your callback procedure; should you have to update the form, you must switch back to the form's thread in order to do your work. The example in this topic demonstrates this behavior.  \n  \n All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure. You must handle the exception in the callback procedure, not in the main application. See the example in this topic for additional information on handling exceptions in the callback procedure.  \n  \n If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com."
  example:
  - "The following Windows application demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command). Because the sample executes the command asynchronously, the form remains responsive while awaiting the results. This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter; doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method corresponding to the initial call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.  \n  \n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \n  \n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.DataGridView> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \n  \n [!code-csharp[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsync/CS/Form1.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsync/VB/Form1.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback"></xref> delegate that is invoked when the command's execution has completed. Pass `null` (`Nothing` in Microsoft Visual Basic) to indicate that no callback is required.
    - id: stateObject
      type: System.Object
      description: A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the <xref href="System.IAsyncResult.AsyncState"></xref> property.
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult"></xref> that can be used to poll, wait for results, or both; this value is also needed when invoking <xref href="System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)"></xref>, which returns a <xref href="System.Data.SqlClient.SqlDataReader"></xref> instance which can be used to retrieve the returned rows.
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Any error that occurred while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An error occurred in a <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)
  commentId: M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)
  id: BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteReader(AsyncCallback, Object, CommandBehavior)
  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback, Object, CommandBehavior)
  fullName: SqlCommand.BeginExecuteReader(AsyncCallback, Object, CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href="System.Data.SqlClient.SqlCommand"></xref>, using one of the `CommandBehavior` values, and retrieving one or more result sets from the server, given a callback procedure and state information.
  remarks: "The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.  \n  \n The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed. You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method from within this delegate procedure, or from any other location within your application. In addition, you can pass any object in the `stateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.  \n  \n The `behavior` parameter lets you specify options that control the behavior of the command and its connection. These values can be combined together (using the programming language's `Or` operator); generally, developers use the `CloseConnection` value to make sure that the connection is closed by the runtime when the <xref:System.Data.SqlClient.SqlDataReader> is closed. Developers can also optimize the behavior of the <xref:System.Data.SqlClient.SqlDataReader> by specifying the `SingleRow` value when it is known in advance that the Transact-SQL statement or stored procedure only returns a single row.  \n  \n Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous. Although command execution is asynchronous, value fetching is still synchronous. This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.  \n  \n Because the callback procedure executes from within a background thread supplied by the Microsoft .NET common language runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications. For example, you must not interact with a form's contents from within your callback procedure--should you have to update the form, you must switch back to the form's thread in order to do your work. The example in this topic demonstrates this behavior.  \n  \n All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure. You must handle the exception in the callback procedure, not in the main application. See the example in this topic for additional information on handling exceptions in the callback procedure.  \n  \n If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com."
  example:
  - "The following Windows application demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command). Because the sample executes the command asynchronously, the form remains responsive while awaiting the results. This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter; doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method corresponding to the initial call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.  \n  \n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \n  \n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.DataGridView> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \n  \n This example passes the `CommandBehavior.CloseConnection` value in the `behavior` parameter, causing the returned <xref:System.Data.SqlClient.SqlDataReader> to automatically close its connection when it is closed.  \n  \n [!code-csharp[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior/CS/Form1.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior/VB/Form1.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject, System.Data.CommandBehavior behavior);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback"></xref> delegate that is invoked when the command's execution has completed. Pass `null` (`Nothing` in Microsoft Visual Basic) to indicate that no callback is required.
    - id: stateObject
      type: System.Object
      description: A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the <xref href="System.IAsyncResult.AsyncState"></xref> property.
    - id: behavior
      type: System.Data.CommandBehavior
      description: One of the <xref href="System.Data.CommandBehavior"></xref> values, indicating options for statement execution and data retrieval.
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult"></xref> that can be used to poll or wait for results, or both; this value is also needed when invoking <xref href="System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)"></xref>, which returns a <xref href="System.Data.SqlClient.SqlDataReader"></xref> instance which can be used to retrieve the returned rows.
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Any error that occurred while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An error occurred in a <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)
  commentId: M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)
  id: BeginExecuteXmlReader(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteXmlReader(AsyncCallback, Object)
  nameWithType: SqlCommand.BeginExecuteXmlReader(AsyncCallback, Object)
  fullName: SqlCommand.BeginExecuteXmlReader(AsyncCallback, Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href="System.Data.SqlClient.SqlCommand"></xref> and returns results as an <xref href="System.Xml.XmlReader"></xref> object, using a callback procedure.
  remarks: "The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows as XML, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method to finish the operation and retrieve the requested XML data. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.  \n  \n The <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property ordinarily specifies a Transact-SQL statement with a valid FOR XML clause. However, `CommandText` can also specify a statement that returns data that contains valid XML. This method can also be used to retrieve a single-row, single-column result set. In this case, if more than one row is returned, the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.  \n  \n A typical <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> query can be formatted as in the following C# example:  \n  \n```  \nSqlCommand command = new SqlCommand(\"SELECT ContactID, FirstName, LastName FROM Contact FOR XML AUTO, XMLDATA\", SqlConn);  \n```  \n  \n This method can also be used to retrieve a single-row, single-column result set. In this case, if more than one row is returned, the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.  \n  \n The multiple active result set (MARS) feature lets multiple actions use the same connection.  \n  \n The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed. You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method from within this delegate procedure, or from any other location within your application. In addition, you can pass any object in the `stateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.  \n  \n Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters is sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.  \n  \n All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure. You must handle the exception in the callback procedure, not in the main application. See the example in this topic for additional information on handling exceptions in the callback procedure.  \n  \n If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com."
  example:
  - "The following Windows application demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command). This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter--doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method corresponding to the initial call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>.  \n  \n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \n  \n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.ListBox> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \n  \n [!code-csharp[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReaderAsync/CS/Form1.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReaderAsync/VB/Form1.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteXmlReader (AsyncCallback callback, object stateObject);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback"></xref> delegate that is invoked when the command's execution has completed. Pass `null` (`Nothing` in Microsoft Visual Basic) to indicate that no callback is required.
    - id: stateObject
      type: System.Object
      description: A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback procedure using the <xref href="System.IAsyncResult.AsyncState"></xref> property.
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult"></xref> that can be used to poll, wait for results, or both; this value is also needed when the <xref href="System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)"></xref> is called, which returns the results of the command as XML.
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Any error that occurred while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An error occurred in a <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader
  commentId: M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader
  id: BeginExecuteXmlReader
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteXmlReader()
  nameWithType: SqlCommand.BeginExecuteXmlReader()
  fullName: SqlCommand.BeginExecuteXmlReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref href="System.Data.SqlClient.SqlCommand"></xref> and returns results as an <xref href="System.Xml.XmlReader"></xref> object.
  remarks: "The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method starts the process of asynchronously executing a Transact-SQL statement that returns rows as XML, so that other tasks can run concurrently while the statement is executing. When the statement has completed, developers must call the `EndExecuteXmlReader` method to finish the operation and retrieve the XML returned by the command. The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method returns immediately, but until the code executes the corresponding `EndExecuteXmlReader` method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object. Calling the `EndExecuteXmlReader` before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.  \n  \n The <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property ordinarily specifies a Transact-SQL statement with a valid FOR XML clause. However, `CommandText` can also specify a statement that returns `ntext` data that contains valid XML.  \n  \n A typical <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> query can be formatted as in the following C# example:  \n  \n```  \nSqlCommand command = new SqlCommand(\"SELECT ContactID, FirstName, LastName FROM dbo.Contact FOR XML AUTO, XMLDATA\", SqlConn);  \n```  \n  \n This method can also be used to retrieve a single-row, single-column result set. In this case, if more than one row is returned, the `EndExecuteXmlReader` method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.  \n  \n The multiple active result set (MARS) feature lets multiple actions use the same connection.  \n  \n Note that the command text and parameters are sent to the server synchronously. If a large command or many parameters are sent, this method may block during writes. After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous. Although command execution is asynchronous, value fetching is still synchronous.  \n  \n Because this overload does not support a callback procedure, developers need to either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>.  \n  \n If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com."
  example:
  - "The following console application starts the process of retrieving XML data asynchronously. While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value. Once the process has completed, the code retrieves the XML and displays its contents.  \n  \n [!code-csharp[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReader/CS/source.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReader/VB/source.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteXmlReader ();
    parameters: []
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult"></xref> that can be used to poll or wait for results, or both; this value is also needed when invoking `EndExecuteXmlReader`, which returns a single XML value.
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Any error that occurred while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The name/value pair \"Asynchronous Processing=true\" was not included within the connection string defining the connection for this <xref href=\"System.Data.SqlClient.SqlCommand\"></xref>.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An error occurred in a <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.Cancel
  commentId: M:System.Data.SqlClient.SqlCommand.Cancel
  id: Cancel
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Cancel()
  nameWithType: SqlCommand.Cancel()
  fullName: SqlCommand.Cancel()
  type: Method
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Tries to cancel the execution of a <xref href="System.Data.SqlClient.SqlCommand"></xref>.
  remarks: "If there is nothing to cancel, nothing occurs. However, if there is a command in process, and the attempt to cancel fails, no exception is generated.  \n  \n In some, rare, cases, if you call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> then call <xref:System.Data.SqlClient.SqlDataReader.Close%2A> (implicitily or explicitly) before calling <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>, and then call <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>, the cancel command will not be sent to SQL Server and the result set can continue to stream after you call <xref:System.Data.SqlClient.SqlConnection.Close%2A>. To avoid this, make sure that you call <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> before closing the reader or connection."
  example:
  - "The following example demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> method.  \n  \n [!code-csharp[Classic WebData SqlCommand.Cancel#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Cancel/CS/source.cs#1)]\n [!code-vb[Classic WebData SqlCommand.Cancel#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Cancel/VB/source.vb#1)]"
  syntax:
    content: public override void Cancel ();
    parameters: []
  overload: System.Data.SqlClient.SqlCommand.Cancel*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.Clone
  commentId: M:System.Data.SqlClient.SqlCommand.Clone
  id: Clone
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Clone()
  nameWithType: SqlCommand.Clone()
  fullName: SqlCommand.Clone()
  type: Method
  assemblies:
  - System.Data
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Creates a new <xref href="System.Data.SqlClient.SqlCommand"></xref> object that is a copy of the current instance.
  syntax:
    content: public System.Data.SqlClient.SqlCommand Clone ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlCommand
      description: A new <xref href="System.Data.SqlClient.SqlCommand"></xref> object that is a copy of this instance.
  overload: System.Data.SqlClient.SqlCommand.Clone*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
  commentId: P:System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
  id: ColumnEncryptionSetting
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ColumnEncryptionSetting
  nameWithType: SqlCommand.ColumnEncryptionSetting
  fullName: SqlCommand.ColumnEncryptionSetting
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: Gets or sets the column encryption setting for this command.
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public System.Data.SqlClient.SqlCommandColumnEncryptionSetting ColumnEncryptionSetting { get; }
    return:
      type: System.Data.SqlClient.SqlCommandColumnEncryptionSetting
      description: The column encryption setting for this command.
  overload: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.CommandText
  commentId: P:System.Data.SqlClient.SqlCommand.CommandText
  id: CommandText
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CommandText
  nameWithType: SqlCommand.CommandText
  fullName: SqlCommand.CommandText
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets the Transact-SQL statement, table name or stored procedure to execute at the data source.
  remarks: "When the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property should be set to the name of the stored procedure. The user may be required to use escape character syntax if the stored procedure name contains any special characters. The command executes this stored procedure when you call one of the `Execute` methods.  \n  \n The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a Transact-SQL statement or a stored procedure called by a command of `CommandType.Text`. In this case, named parameters must be used. For example:  \n  \n```  \nSELECT * FROM dbo.Customers WHERE CustomerID = @CustomerID  \n```  \n  \n For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \n  \n [!code-csharp[Classic WebData SqlCommand.CommandText Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.CommandText Example/CS/source.cs#1)]\n [!code-vb[Classic WebData SqlCommand.CommandText Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.CommandText Example/VB/source.vb#1)]"
  syntax:
    content: public override string CommandText { get; set; }
    return:
      type: System.String
      description: The Transact-SQL statement or stored procedure to execute. The default is an empty string.
  overload: System.Data.SqlClient.SqlCommand.CommandText*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.CommandTimeout
  commentId: P:System.Data.SqlClient.SqlCommand.CommandTimeout
  id: CommandTimeout
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CommandTimeout
  nameWithType: SqlCommand.CommandTimeout
  fullName: SqlCommand.CommandTimeout
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets the wait time before terminating the attempt to execute a command and generating an error.
  remarks: "A value of 0 indicates no limit (an attempt to execute a command will wait indefinitely).  \n  \n> [!NOTE]\n>  The <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> property will be ignored during asynchronous method calls such as <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.  \n  \n <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> has no effect when the command is executed against a context connection (a <xref:System.Data.SqlClient.SqlConnection> opened with \"context connection=true\" in the connection string).  \n  \n> [!NOTE]\n>  This property is the cumulative time-out (for all network packets that are read during the invocation of a method) for all network reads during command execution or processing of the results. A time-out can still occur after the first row is returned, and does not include user processing time, only network read time.  \n>   \n>  For example, with a 30 second time out, if <xref:System.Data.SqlClient.SqlDataReader.Read%2A> requires two network packets, then it has 30 seconds to read both network packets. If you call <xref:System.Data.SqlClient.SqlDataReader.Read%2A> again, it will have another 30 seconds to read any data that it requires.  \n  \n```  \nusing System;  \nusing System.Data.SqlClient;  \n///   \npublic class A {  \n   ///   \n   public static void Main() {  \n      string connectionString = \"\";  \n      // Wait for 5 second delay in the command  \n      string queryString = \"waitfor delay '00:00:05'\";  \n      using (SqlConnection connection = new SqlConnection(connectionString)) {  \n         connection.Open();  \n         SqlCommand command = new SqlCommand(queryString, connection);  \n         // Setting command timeout to 1 second  \n         command.CommandTimeout = 1;  \n         try {  \n            command.ExecuteNonQuery();  \n         }  \n         catch (SqlException e) {  \n            Console.WriteLine(\"Got expected SqlException due to command timeout \");  \n            Console.WriteLine(e);  \n         }  \n      }  \n   }  \n}  \n```"
  syntax:
    content: public override int CommandTimeout { get; set; }
    return:
      type: System.Int32
      description: The time in seconds to wait for the command to execute. The default is 30 seconds.
  overload: System.Data.SqlClient.SqlCommand.CommandTimeout*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.CommandType
  commentId: P:System.Data.SqlClient.SqlCommand.CommandType
  id: CommandType
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CommandType
  nameWithType: SqlCommand.CommandType
  fullName: SqlCommand.CommandType
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets a value indicating how the <xref href="System.Data.SqlClient.SqlCommand.CommandText"></xref> property is to be interpreted.
  remarks: "When you set the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property to `StoredProcedure`, you should set the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property to the name of the stored procedure. The command executes this stored procedure when you call one of the Execute methods.  \n  \n The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a SQL Statement or a stored procedure called with a <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> of <xref:System.Data.CommandType.Text>. In this case, named parameters must be used. For example:  \n  \n SELECT * FROM Customers WHERE CustomerID = @CustomerID  \n  \n For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \n  \n [!code-csharp[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/CS/source.cs#1)]\n [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/VB/source.vb#1)]"
  syntax:
    content: public override System.Data.CommandType CommandType { get; set; }
    return:
      type: System.Data.CommandType
      description: One of the <xref href="System.Data.CommandType"></xref> values. The default is `Text`.
  overload: System.Data.SqlClient.SqlCommand.CommandType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The value was not a valid <xref href="System.Data.CommandType"></xref>.
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.Connection
  commentId: P:System.Data.SqlClient.SqlCommand.Connection
  id: Connection
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Connection
  nameWithType: SqlCommand.Connection
  fullName: SqlCommand.Connection
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets the <xref href="System.Data.SqlClient.SqlConnection"></xref> used by this instance of the <xref href="System.Data.SqlClient.SqlCommand"></xref>.
  remarks: "If the command is enlisted in an existing transaction, and the connection is changed, trying to execute the command will throw an <xref:System.InvalidOperationException>.  \n  \n If the <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> property is not null and the transaction has already been committed or rolled back, <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> is set to null."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \n  \n [!code-csharp[Classic WebData SqlCommand.Connection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Connection Example/CS/source.cs#1)]\n [!code-vb[Classic WebData SqlCommand.Connection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Connection Example/VB/source.vb#1)]"
  syntax:
    content: public System.Data.SqlClient.SqlConnection Connection { get; set; }
    return:
      type: System.Data.SqlClient.SqlConnection
      description: The connection to a data source. The default value is `null`.
  overload: System.Data.SqlClient.SqlCommand.Connection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Data.SqlClient.SqlCommand.Connection"></xref> property was changed while the command was enlisted in a transaction..
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.CreateDbParameter
  commentId: M:System.Data.SqlClient.SqlCommand.CreateDbParameter
  id: CreateDbParameter
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CreateDbParameter()
  nameWithType: SqlCommand.CreateDbParameter()
  fullName: SqlCommand.CreateDbParameter()
  type: Method
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbParameter CreateDbParameter ();
    parameters: []
    return:
      type: System.Data.Common.DbParameter
      description: ''
  overload: System.Data.SqlClient.SqlCommand.CreateDbParameter*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.CreateParameter
  commentId: M:System.Data.SqlClient.SqlCommand.CreateParameter
  id: CreateParameter
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CreateParameter()
  nameWithType: SqlCommand.CreateParameter()
  fullName: SqlCommand.CreateParameter()
  type: Method
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Creates a new instance of a <xref href="System.Data.SqlClient.SqlParameter"></xref> object.
  remarks: The <xref:System.Data.SqlClient.SqlCommand.CreateParameter%2A> method is a strongly-typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.
  syntax:
    content: public System.Data.SqlClient.SqlParameter CreateParameter ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlParameter
      description: A <xref href="System.Data.SqlClient.SqlParameter"></xref> object.
  overload: System.Data.SqlClient.SqlCommand.CreateParameter*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.DbConnection
  commentId: P:System.Data.SqlClient.SqlCommand.DbConnection
  id: DbConnection
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: DbConnection
  nameWithType: SqlCommand.DbConnection
  fullName: SqlCommand.DbConnection
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbConnection DbConnection { get; set; }
    return:
      type: System.Data.Common.DbConnection
      description: ''
  overload: System.Data.SqlClient.SqlCommand.DbConnection*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.DbParameterCollection
  commentId: P:System.Data.SqlClient.SqlCommand.DbParameterCollection
  id: DbParameterCollection
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: DbParameterCollection
  nameWithType: SqlCommand.DbParameterCollection
  fullName: SqlCommand.DbParameterCollection
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }
    return:
      type: System.Data.Common.DbParameterCollection
      description: ''
  overload: System.Data.SqlClient.SqlCommand.DbParameterCollection*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.DbTransaction
  commentId: P:System.Data.SqlClient.SqlCommand.DbTransaction
  id: DbTransaction
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: DbTransaction
  nameWithType: SqlCommand.DbTransaction
  fullName: SqlCommand.DbTransaction
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbTransaction DbTransaction { get; set; }
    return:
      type: System.Data.Common.DbTransaction
      description: ''
  overload: System.Data.SqlClient.SqlCommand.DbTransaction*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.DesignTimeVisible
  commentId: P:System.Data.SqlClient.SqlCommand.DesignTimeVisible
  id: DesignTimeVisible
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: DesignTimeVisible
  nameWithType: SqlCommand.DesignTimeVisible
  fullName: SqlCommand.DesignTimeVisible
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets a value indicating whether the command object should be visible in a Windows Form Designer control.
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public override bool DesignTimeVisible { get; set; }
    return:
      type: System.Boolean
      description: A value indicating whether the command object should be visible in a control. The default is **true**.
  overload: System.Data.SqlClient.SqlCommand.DesignTimeVisible*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)
  commentId: M:System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SqlCommand.Dispose(Boolean)
  fullName: SqlCommand.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: ''
  overload: System.Data.SqlClient.SqlCommand.Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)
  commentId: M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)
  id: EndExecuteNonQuery(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: EndExecuteNonQuery(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteNonQuery(IAsyncResult)
  fullName: SqlCommand.EndExecuteNonQuery(IAsyncResult)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: Finishes asynchronous execution of a Transact-SQL statement.
  remarks: When you call <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> to execute a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement, you must call <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> in order to complete the operation. If the process of executing the command has not yet finished, this method blocks until the operation is complete. Users can verify that the command has completed its operation by using the <xref:System.IAsyncResult> instance returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method. If a callback procedure was specified in the call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>, this method must be called.
  example:
  - For examples demonstrating the use of the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>.
  syntax:
    content: public int EndExecuteNonQuery (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> returned by the call to <xref href="System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery"></xref>.
    return:
      type: System.Int32
      description: The number of rows affected (the same behavior as <xref href="System.Data.SqlClient.SqlCommand.ExecuteNonQuery"></xref>).
  overload: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>asyncResult</code> parameter is null (`Nothing` in Microsoft Visual Basic)
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <xref href="System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)"></xref> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <xref href="System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)"></xref> to complete execution of a call to <xref href="System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader"></xref>.
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "The amount of time specified in <xref href=\"System.Data.SqlClient.SqlCommand.CommandTimeout\"></xref> elapsed and the asynchronous operation specified with <xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*\"></xref> is not complete.  \n  \n In some situations, <xref href=\"System.IAsyncResult\"></xref> can be set to `IsCompleted` incorrectly. If this occurs and <xref href=\"System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)\"></xref> is called, EndExecuteNonQuery could raise a SqlException error if the amount of time specified in <xref href=\"System.Data.SqlClient.SqlCommand.CommandTimeout\"></xref> elapsed and the asynchronous operation specified with <xref href=\"System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*\"></xref> is not complete. To correct this situation, you should either increase the value of CommandTimeout or reduce the work being done by the asynchronous operation."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)
  commentId: M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)
  id: EndExecuteReader(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: EndExecuteReader(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteReader(IAsyncResult)
  fullName: SqlCommand.EndExecuteReader(IAsyncResult)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: Finishes asynchronous execution of a Transact-SQL statement, returning the requested <xref href="System.Data.SqlClient.SqlDataReader"></xref>.
  remarks: When you call <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to execute a Transact-SQL statement, you must call <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> in order to complete the operation. If the process of executing the command has not yet finished, this method blocks until the operation is complete. Users can verify that the command has completed its operation by using the <xref:System.IAsyncResult> instance returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method. If a callback procedure was specified in the call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>, this method must be called.
  example:
  - For examples demonstrating the use of the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.
  syntax:
    content: public System.Data.SqlClient.SqlDataReader EndExecuteReader (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> returned by the call to <xref href="System.Data.SqlClient.SqlCommand.BeginExecuteReader"></xref>.
    return:
      type: System.Data.SqlClient.SqlDataReader
      description: A <xref href="System.Data.SqlClient.SqlDataReader"></xref> object that can be used to retrieve the requested rows.
  overload: System.Data.SqlClient.SqlCommand.EndExecuteReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>asyncResult</code> parameter is null (`Nothing` in Microsoft Visual Basic)
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <xref href="System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)"></xref> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <xref href="System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)"></xref> to complete execution of a call to <xref href="System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader"></xref>.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)
  commentId: M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)
  id: EndExecuteXmlReader(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: EndExecuteXmlReader(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteXmlReader(IAsyncResult)
  fullName: SqlCommand.EndExecuteXmlReader(IAsyncResult)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: Finishes asynchronous execution of a Transact-SQL statement, returning the requested data as XML.
  remarks: When you call <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to execute a Transact-SQL statement, you must call <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> in order to complete the operation. If the process of executing the command has not yet finished, this method blocks until the operation is complete. Users can verify that the command has completed its operation by using the <xref:System.IAsyncResult> instance returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method. If a callback procedure was specified in the call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>, this method must be called.
  example:
  - For examples demonstrating the use of the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>.
  syntax:
    content: public System.Xml.XmlReader EndExecuteXmlReader (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> returned by the call to <xref href="System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader"></xref>.
    return:
      type: System.Xml.XmlReader
      description: An <xref href="System.Xml.XmlReader"></xref> object that can be used to fetch the resulting XML data.
  overload: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>asyncResult</code> parameter is null (`Nothing` in Microsoft Visual Basic)
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <xref href="System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)"></xref> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <xref href="System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)"></xref> to complete execution of a call to <xref href="System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery"></xref>.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  id: ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: SqlCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: SqlCommand.ExecuteDbDataReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: ''
    return:
      type: System.Data.Common.DbDataReader
      description: ''
  overload: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  id: ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteDbDataReaderAsync(CommandBehavior, CancellationToken)
  nameWithType: SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior, CancellationToken)
  fullName: SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior, CancellationToken)
  type: Method
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Threading.Tasks.Task<System.Data.Common.DbDataReader> ExecuteDbDataReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
      description: ''
  overload: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQuery
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery
  id: ExecuteNonQuery
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteNonQuery()
  nameWithType: SqlCommand.ExecuteNonQuery()
  fullName: SqlCommand.ExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Executes a Transact-SQL statement against the connection and returns the number of rows affected.
  remarks: "You can use the <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database without using a <xref:System.Data.DataSet> by executing UPDATE, INSERT, or DELETE statements.  \n  \n Although the <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> returns no rows, any output parameters or return values mapped to parameters are populated with data.  \n  \n For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. When a trigger exists on a table being inserted or updated, the return value includes the number of rows affected by both the insert or update operation and the number of rows affected by the trigger or triggers. For all other types of statements, the return value is -1. If a rollback occurs, the return value is also -1."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>. The example is passed a string that is a Transact-SQL statement (such as UPDATE, INSERT, or DELETE) and a string to use to connect to the data source.  \n  \n [!code-csharp[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/CS/source.cs#1)]\n [!code-vb[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/VB/source.vb#1)]"
  syntax:
    content: public override int ExecuteNonQuery ();
    parameters: []
    return:
      type: System.Int32
      description: The number of rows affected.
  overload: System.Data.SqlClient.SqlCommand.ExecuteNonQuery*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An error occurred in a <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Data.SqlClient.SqlConnection"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  id: ExecuteNonQueryAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteNonQueryAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteNonQueryAsync(CancellationToken)
  fullName: SqlCommand.ExecuteNonQueryAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: An asynchronous version of <xref href="System.Data.SqlClient.SqlCommand.ExecuteNonQuery"></xref>, which executes a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement against the connection and returns the number of rows affected. The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object.
  remarks: For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).
  syntax:
    content: public override System.Threading.Tasks.Task<int> ExecuteNonQueryAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation instruction.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A task representing the asynchronous operation.
  overload: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Calling <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)\"></xref> more than once for the same instance before task completion.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n `Context Connection=true` is specified in the connection string."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An error occurred in a <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteReader
  id: ExecuteReader
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReader()
  nameWithType: SqlCommand.ExecuteReader()
  fullName: SqlCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Sends the <xref href="System.Data.SqlClient.SqlCommand.CommandText"></xref> to the <xref href="System.Data.SqlClient.SqlCommand.Connection"></xref> and builds a <xref href="System.Data.SqlClient.SqlDataReader"></xref>.
  remarks: "When the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property should be set to the name of the stored procedure. The command executes this stored procedure when you call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>.  \n  \n> [!NOTE]\n>  If a transaction is deadlocked, an exception may not be thrown until <xref:System.Data.SqlClient.SqlDataReader.Read%2A> is called.  \n  \n The multiple active result set (MARS) feature allows for multiple actions using the same connection.  \n  \n If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source.  \n  \n [!code-csharp[Classic WebData SqlCommand.ExecuteReader Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader Example/CS/source.cs#1)]\n [!code-vb[Classic WebData SqlCommand.ExecuteReader Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader Example/VB/source.vb#1)]"
  syntax:
    content: public System.Data.SqlClient.SqlDataReader ExecuteReader ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlDataReader
      description: A <xref href="System.Data.SqlClient.SqlDataReader"></xref> object.
  overload: System.Data.SqlClient.SqlCommand.ExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The current state of the connection is closed. <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReader\"></xref> requires an open <xref href=\"System.Data.SqlClient.SqlConnection\"></xref>.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An error occurred in a <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)
  id: ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReader(CommandBehavior)
  nameWithType: SqlCommand.ExecuteReader(CommandBehavior)
  fullName: SqlCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Sends the <xref href="System.Data.SqlClient.SqlCommand.CommandText"></xref> to the <xref href="System.Data.SqlClient.SqlCommand.Connection"></xref>, and builds a <xref href="System.Data.SqlClient.SqlDataReader"></xref> using one of the <xref href="System.Data.CommandBehavior"></xref> values.
  remarks: "When the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property should be set to the name of the stored procedure. The command executes this stored procedure when you call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>.  \n  \n> [!NOTE]\n>  Use <xref:System.Data.CommandBehavior.SequentialAccess> to retrieve large values and binary data. Otherwise, an <xref:System.OutOfMemoryException> might occur and the connection will be closed.  \n  \n The multiple active result set (MARS) feature allows for multiple actions using the same connection.  \n  \n If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source. <xref:System.Data.CommandBehavior> is set to <xref:System.Data.CommandBehavior.CloseConnection>.  \n  \n [!code-csharp[Classic WebData SqlCommand.ExecuteReader2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader2/CS/mysample.cs#1)]\n [!code-vb[Classic WebData SqlCommand.ExecuteReader2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader2/VB/mysample.vb#1)]"
  syntax:
    content: public System.Data.SqlClient.SqlDataReader ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: One of the <xref href="System.Data.CommandBehavior"></xref> values.
    return:
      type: System.Data.SqlClient.SqlDataReader
      description: A <xref href="System.Data.SqlClient.SqlDataReader"></xref> object.
  overload: System.Data.SqlClient.SqlCommand.ExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An error occurred in a <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Data.SqlClient.SqlConnection"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync
  id: ExecuteReaderAsync
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReaderAsync()
  nameWithType: SqlCommand.ExecuteReaderAsync()
  fullName: SqlCommand.ExecuteReaderAsync()
  type: Method
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: An asynchronous version of <xref href="System.Data.SqlClient.SqlCommand.ExecuteReader"></xref>, which sends the <xref href="System.Data.SqlClient.SqlCommand.CommandText"></xref> to the <xref href="System.Data.SqlClient.SqlCommand.Connection"></xref> and builds a <xref href="System.Data.SqlClient.SqlDataReader"></xref>. Exceptions will be reported via the returned Task object.
  remarks: For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
      description: A task representing the asynchronous operation.
  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: An invalid <xref href="System.Data.CommandBehavior"></xref> value.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Calling <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReaderAsync\"></xref> more than once for the same instance before task completion.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n `Context Connection=true` is specified in the connection string."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An error occurred in a <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  id: ExecuteReaderAsync(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReaderAsync(CommandBehavior)
  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior)
  fullName: SqlCommand.ExecuteReaderAsync(CommandBehavior)
  type: Method
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: An asynchronous version of <xref href="System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)"></xref>, which sends the <xref href="System.Data.SqlClient.SqlCommand.CommandText"></xref> to the <xref href="System.Data.SqlClient.SqlCommand.Connection"></xref>, and builds a <xref href="System.Data.SqlClient.SqlDataReader"></xref>. Exceptions will be reported via the returned Task object.
  remarks: For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: Options for statement execution and data retrieval.  When is set to `Default`, <xref href="System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)"></xref> reads the entire row before returning a complete Task.
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
      description: A task representing the asynchronous operation.
  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: An invalid <xref href="System.Data.CommandBehavior"></xref> value.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Calling <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)\"></xref> more than once for the same instance before task completion.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n `Context Connection=true` is specified in the connection string."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An error occurred in a <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  id: ExecuteReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReaderAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteReaderAsync(CancellationToken)
  fullName: SqlCommand.ExecuteReaderAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: "An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReader\"></xref>, which sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref> and builds a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>.  \n  \n The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object."
  remarks: For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation instruction.
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
      description: A task representing the asynchronous operation.
  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: An invalid <xref href="System.Data.CommandBehavior"></xref> value.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Calling <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\"></xref> more than once for the same instance before task completion.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n `Context Connection=true` is specified in the connection string."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An error occurred in a <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  id: ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReaderAsync(CommandBehavior, CancellationToken)
  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior, CancellationToken)
  fullName: SqlCommand.ExecuteReaderAsync(CommandBehavior, CancellationToken)
  type: Method
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: "An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)\"></xref>, which sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref>, and builds a <xref href=\"System.Data.SqlClient.SqlDataReader\"></xref>  \n  \n The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object."
  remarks: For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: Options for statement execution and data retrieval.  When is set to `Default`, <xref href="System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)"></xref> reads the entire row before returning a complete Task.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation instruction.
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
      description: A task representing the asynchronous operation.
  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: An invalid <xref href="System.Data.CommandBehavior"></xref> value.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Calling <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)\"></xref> more than once for the same instance before task completion.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n `Context Connection=true` is specified in the connection string."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An error occurred in a <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalar
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteScalar
  id: ExecuteScalar
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteScalar()
  nameWithType: SqlCommand.ExecuteScalar()
  fullName: SqlCommand.ExecuteScalar()
  type: Method
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
  remarks: "Use the <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database. This requires less code than using the <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> method, and then performing the operations that you need to generate the single value using the data returned by a <xref:System.Data.SqlClient.SqlDataReader>.  \n  \n A typical <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> query can be formatted as in the following C# example:  \n  \n```  \ncmd.CommandText = \"SELECT COUNT(*) FROM dbo.region\";  \nInt32 count = (Int32) cmd.ExecuteScalar();  \n```"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>. The example is passed a string representing a new value to be inserted into a table, and a string to use to connect to the data source. The function returns the new **Identity** column value if a new row was inserted, 0 on failure.  \n  \n [!code-csharp[DataWorks SqlCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.ExecuteScalar/CS/source.cs#1)]\n [!code-vb[DataWorks SqlCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.ExecuteScalar/VB/source.vb#1)]"
  syntax:
    content: public override object ExecuteScalar ();
    parameters: []
    return:
      type: System.Object
      description: The first column of the first row in the result set, or a null reference (`Nothing` in Visual Basic) if the result set is empty. Returns a maximum of 2033 characters.
  overload: System.Data.SqlClient.SqlCommand.ExecuteScalar*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Data.SqlClient.SqlConnection"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An error occurred in a <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  id: ExecuteScalarAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteScalarAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteScalarAsync(CancellationToken)
  fullName: SqlCommand.ExecuteScalarAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: "An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteScalar\"></xref>, which executes the query asynchronously and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.  \n  \n The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object."
  remarks: For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).
  syntax:
    content: public override System.Threading.Tasks.Task<object> ExecuteScalarAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation instruction.
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: A task representing the asynchronous operation.
  overload: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Calling <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\"></xref> more than once for the same instance before task completion.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n `Context Connection=true` is specified in the connection string."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An error occurred in a <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReader
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader
  id: ExecuteXmlReader
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteXmlReader()
  nameWithType: SqlCommand.ExecuteXmlReader()
  fullName: SqlCommand.ExecuteXmlReader()
  type: Method
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Sends the <xref href="System.Data.SqlClient.SqlCommand.CommandText"></xref> to the <xref href="System.Data.SqlClient.SqlCommand.Connection"></xref> and builds an <xref href="System.Xml.XmlReader"></xref> object.
  remarks: "The <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property ordinarily specifies a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement with a valid FOR XML clause. However, <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> can also specify a statement that returns `ntext` or `nvarchar` data that contains valid XML, or the contents of a column defined with the `xml` data type.  \n  \n A typical <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> query can be formatted as in the following Microsoft Visual C# example:  \n  \n```  \nSqlCommand command = new SqlCommand(\"SELECT * FROM dbo.Customers FOR XML AUTO, XMLDATA\", SqlConn);  \n```  \n  \n This method can also be used to retrieve a single-row, single-column result set that contains XML data. In this case, if more than one row is returned, the <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.  \n  \n The multiple active result set (MARS) feature allows for multiple actions using the same connection.  \n  \n If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each. To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries. For more information, see article Q310378, \"PRB: XML Data Is Truncated When You Use SqlDataReader,\" in the Microsoft Knowledge Base at http://support.microsoft.com."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>. The example is passed a string that is a Transact-SQL FOR XML SELECT statement, and a string to use to connect to the data source.  \n  \n [!code-csharp[Classic WebData SqlCommand.ExecuteXmlReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteXmlReader/CS/mysample.cs#1)]\n [!code-vb[Classic WebData SqlCommand.ExecuteXmlReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteXmlReader/VB/mysample.vb#1)]"
  syntax:
    content: public System.Xml.XmlReader ExecuteXmlReader ();
    parameters: []
    return:
      type: System.Xml.XmlReader
      description: An <xref href="System.Xml.XmlReader"></xref> object.
  overload: System.Data.SqlClient.SqlCommand.ExecuteXmlReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "An exception occurred while executing the command against a locked row. This exception is not generated when you are using Microsoft .NET Framework version 1.0.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Data.SqlClient.SqlConnection"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An error occurred in a <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync
  id: ExecuteXmlReaderAsync
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteXmlReaderAsync()
  nameWithType: SqlCommand.ExecuteXmlReaderAsync()
  fullName: SqlCommand.ExecuteXmlReaderAsync()
  type: Method
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: "An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteXmlReader\"></xref>, which sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref> and builds an <xref href=\"System.Xml.XmlReader\"></xref> object.  \n  \n Exceptions will be reported via the returned Task object."
  remarks: For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).
  syntax:
    content: public System.Threading.Tasks.Task<System.Xml.XmlReader> ExecuteXmlReaderAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Xml.XmlReader}
      description: A task representing the asynchronous operation.
  overload: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Calling <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\"></xref> more than once for the same instance before task completion.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n `Context Connection=true` is specified in the connection string."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An error occurred in a <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  commentId: M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  id: ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteXmlReaderAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteXmlReaderAsync(CancellationToken)
  fullName: SqlCommand.ExecuteXmlReaderAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: "An asynchronous version of <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteXmlReader\"></xref>, which sends the <xref href=\"System.Data.SqlClient.SqlCommand.CommandText\"></xref> to the <xref href=\"System.Data.SqlClient.SqlCommand.Connection\"></xref> and builds an <xref href=\"System.Xml.XmlReader\"></xref> object.  \n  \n The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object."
  remarks: For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).
  syntax:
    content: public System.Threading.Tasks.Task<System.Xml.XmlReader> ExecuteXmlReaderAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation instruction.
    return:
      type: System.Threading.Tasks.Task{System.Xml.XmlReader}
      description: A task representing the asynchronous operation.
  overload: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Binary** or **VarBinary** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.Stream\"></xref>. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.IO.TextReader\"></xref>.  \n  \n A <xref href=\"System.Data.SqlClient.SqlParameter.SqlDbType\"></xref> other than **Xml** was used when <xref href=\"System.Data.SqlClient.SqlParameter.Value\"></xref> was set to <xref href=\"System.Xml.XmlReader\"></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Calling <xref href=\"System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)\"></xref> more than once for the same instance before task completion.  \n  \n The <xref href=\"System.Data.SqlClient.SqlConnection\"></xref> closed or dropped during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).  \n  \n `Context Connection=true` is specified in the connection string."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.  \n  \n A timeout occurred during a streaming operation. For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An error occurred in a <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.Stream"></xref>, <xref href="System.Xml.XmlReader"></xref> or <xref href="System.IO.TextReader"></xref> object was closed during a streaming operation.  For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.Notification
  commentId: P:System.Data.SqlClient.SqlCommand.Notification
  id: Notification
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Notification
  nameWithType: SqlCommand.Notification
  fullName: SqlCommand.Notification
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: Gets or sets a value that specifies the <xref href="System.Data.Sql.SqlNotificationRequest"></xref> object bound to this command.
  remarks: You must set the value for this property before the command is executed for it to take effect.
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public System.Data.Sql.SqlNotificationRequest Notification { get; set; }
    return:
      type: System.Data.Sql.SqlNotificationRequest
      description: When set to null (default), no notification should be requested.
  overload: System.Data.SqlClient.SqlCommand.Notification*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
  commentId: P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
  id: NotificationAutoEnlist
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: NotificationAutoEnlist
  nameWithType: SqlCommand.NotificationAutoEnlist
  fullName: SqlCommand.NotificationAutoEnlist
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: Gets or sets a value indicating whether the application should automatically receive query notifications from a common <xref href="System.Data.SqlClient.SqlDependency"></xref> object.
  remarks: "This feature is used in ASP.NET applications to receive notifications for all commands executed in an ASP page against SQL Server. This enables ASP.NET to cache the page until the queries used to render the page would produce a different result. Automatic enlistment.  \n  \n This property applies only to versions of SQL Server that support query notifications. For earlier versions, setting this property to **true** has no effect on the application."
  syntax:
    content: public bool NotificationAutoEnlist { get; set; }
    return:
      type: System.Boolean
      description: '**true** if the application should automatically receive query notifications; otherwise **false**. The default value is **true**.'
  overload: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.Parameters
  commentId: P:System.Data.SqlClient.SqlCommand.Parameters
  id: Parameters
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Parameters
  nameWithType: SqlCommand.Parameters
  fullName: SqlCommand.Parameters
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets the <xref href="System.Data.SqlClient.SqlParameterCollection"></xref>.
  remarks: "The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a SQL Statement or a stored procedure called by a command of `CommandType.Text`. In this case, named parameters must be used. For example:  \n  \n SELECT * FROM Customers WHERE CustomerID = @CustomerID  \n  \n> [!NOTE]\n>  If the parameters in the collection do not match the requirements of the query to be executed, an error may result.  \n  \n For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)."
  example:
  - "The following example demonstrates how to create a <xref:System.Data.SqlClient.SqlCommand> and add parameters to the <xref:System.Data.SqlClient.SqlParameterCollection>.  \n  \n [!code-csharp[DataWorks SqlParameterCollection.AddWithValue#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParameterCollection.AddWithValue/CS/source.cs#1)]\n [!code-vb[DataWorks SqlParameterCollection.AddWithValue#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParameterCollection.AddWithValue/VB/source.vb#1)]"
  syntax:
    content: public System.Data.SqlClient.SqlParameterCollection Parameters { get; }
    return:
      type: System.Data.SqlClient.SqlParameterCollection
      description: The parameters of the Transact-SQL statement or stored procedure. The default is an empty collection.
  overload: System.Data.SqlClient.SqlCommand.Parameters*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.Prepare
  commentId: M:System.Data.SqlClient.SqlCommand.Prepare
  id: Prepare
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Prepare()
  nameWithType: SqlCommand.Prepare()
  fullName: SqlCommand.Prepare()
  type: Method
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Creates a prepared version of the command on an instance of SQL Server.
  remarks: "If <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> is set to `StoredProcedure`, the call to <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> should succeed, although it may cause a no-op.  \n  \n Before you call <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>, specify the data type of each parameter in the statement to be prepared. For each parameter that has a variable length data type, you must set the <xref:System.Data.SqlClient.SqlParameter.Size%2A> property to the maximum size needed. <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> returns an error if these conditions are not met.  \n  \n> [!NOTE]\n>  If the database context is changed by executing the Transact-SQL `USE <database>` statement, or by calling the <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A> method, then <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> must be called a second time.  \n  \n If you call an `Execute` method after calling <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>, any parameter value that is larger than the value specified by the <xref:System.Data.SqlClient.SqlParameter.Size%2A> property is automatically truncated to the original specified size of the parameter, and no truncation errors are returned.  \n  \n Output parameters (whether prepared or not) must have a user-specified data type. If you specify a variable length data type, you must also specify the maximum <xref:System.Data.SqlClient.SqlParameter.Size%2A>.  \n  \n Prior to Visual Studio 2010, <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> threw an exception.  Beginning in Visual Studio 2010, this method does not throw an exception."
  example:
  - "The following example demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> method.  \n  \n [!code-csharp[Classic WebData SqlCommand.Prepare#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Prepare/CS/Source.cs#1)]\n [!code-vb[Classic WebData SqlCommand.Prepare#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Prepare/VB/Source.vb#1)]"
  syntax:
    content: public override void Prepare ();
    parameters: []
  overload: System.Data.SqlClient.SqlCommand.Prepare*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.ResetCommandTimeout
  commentId: M:System.Data.SqlClient.SqlCommand.ResetCommandTimeout
  id: ResetCommandTimeout
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ResetCommandTimeout()
  nameWithType: SqlCommand.ResetCommandTimeout()
  fullName: SqlCommand.ResetCommandTimeout()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: Resets the <xref href="System.Data.SqlClient.SqlCommand.CommandTimeout"></xref> property to its default value.
  remarks: The default value of the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> is 30 seconds.
  syntax:
    content: public void ResetCommandTimeout ();
    parameters: []
  overload: System.Data.SqlClient.SqlCommand.ResetCommandTimeout*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.StatementCompleted
  commentId: E:System.Data.SqlClient.SqlCommand.StatementCompleted
  id: StatementCompleted
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: StatementCompleted
  nameWithType: SqlCommand.StatementCompleted
  fullName: SqlCommand.StatementCompleted
  type: Event
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Occurs when the execution of a Transact-SQL statement completes.
  syntax:
    content: public event System.Data.StatementCompletedEventHandler StatementCompleted;
    return:
      type: System.Data.StatementCompletedEventHandler
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.Transaction
  commentId: P:System.Data.SqlClient.SqlCommand.Transaction
  id: Transaction
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Transaction
  nameWithType: SqlCommand.Transaction
  fullName: SqlCommand.Transaction
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets the <xref href="System.Data.SqlClient.SqlTransaction"></xref> within which the <xref href="System.Data.SqlClient.SqlCommand"></xref> executes.
  remarks: You cannot set the <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> property if it is already set to a specific value, and the command is in the process of executing. If you set the transaction property to a <xref:System.Data.SqlClient.SqlTransaction> object that is not connected to the same <xref:System.Data.SqlClient.SqlConnection> as the <xref:System.Data.SqlClient.SqlCommand> object, an exception is thrown the next time that you attempt to execute a statement.
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public System.Data.SqlClient.SqlTransaction Transaction { get; set; }
    return:
      type: System.Data.SqlClient.SqlTransaction
      description: The <xref href="System.Data.SqlClient.SqlTransaction"></xref>. The default value is `null`.
  overload: System.Data.SqlClient.SqlCommand.Transaction*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.UpdatedRowSource
  commentId: P:System.Data.SqlClient.SqlCommand.UpdatedRowSource
  id: UpdatedRowSource
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: UpdatedRowSource
  nameWithType: SqlCommand.UpdatedRowSource
  fullName: SqlCommand.UpdatedRowSource
  type: Property
  assemblies:
  - System.Data.SqlClient
  - System.Data
  - netstandard
  namespace: System.Data.SqlClient
  summary: Gets or sets how command results are applied to the <xref href="System.Data.DataRow"></xref> when used by the **Update** method of the <xref href="System.Data.Common.DbDataAdapter"></xref>.
  remarks: "The default <xref:System.Data.UpdateRowSource> value is **Both** unless the command is automatically generated (as in the case of the <xref:System.Data.SqlClient.SqlCommandBuilder>), in which case the default is **None**.  \n  \n For more information about using the **UpdatedRowSource** property, see [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md)."
  syntax:
    content: public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }
    return:
      type: System.Data.UpdateRowSource
      description: One of the <xref href="System.Data.UpdateRowSource"></xref> values.
  overload: System.Data.SqlClient.SqlCommand.UpdatedRowSource*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone
  commentId: M:System.Data.SqlClient.SqlCommand.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ICloneable.Clone()
  nameWithType: SqlCommand.ICloneable.Clone()
  fullName: SqlCommand.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Creates a new <xref href="System.Data.SqlClient.SqlCommand"></xref> object that is a copy of the current instance.
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: A new <xref href="System.Data.SqlClient.SqlCommand"></xref> object that is a copy of this instance.
  overload: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
references:
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.InvalidCastException
  parent: System
  isExternal: false
  name: InvalidCastException
  nameWithType: InvalidCastException
  fullName: System.InvalidCastException
- uid: System.Data.SqlClient.SqlException
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlException
  nameWithType: SqlException
  fullName: System.Data.SqlClient.SqlException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  nameWithType: IOException
  fullName: System.IO.IOException
- uid: System.ObjectDisposedException
  parent: System
  isExternal: false
  name: ObjectDisposedException
  nameWithType: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Data.SqlClient.SqlCommand.#ctor
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand()
  nameWithType: SqlCommand.SqlCommand()
  fullName: SqlCommand.SqlCommand()
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand(String)
  nameWithType: SqlCommand.SqlCommand(String)
  fullName: SqlCommand.SqlCommand(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand(String, SqlConnection)
  nameWithType: SqlCommand.SqlCommand(String, SqlConnection)
  fullName: SqlCommand.SqlCommand(String, SqlConnection)
- uid: System.Data.SqlClient.SqlConnection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnection
  nameWithType: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand(String, SqlConnection, SqlTransaction)
  nameWithType: SqlCommand.SqlCommand(String, SqlConnection, SqlTransaction)
  fullName: SqlCommand.SqlCommand(String, SqlConnection, SqlTransaction)
- uid: System.Data.SqlClient.SqlTransaction
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlTransaction
  nameWithType: SqlTransaction
  fullName: System.Data.SqlClient.SqlTransaction
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand(String, SqlConnection, SqlTransaction, SqlCommandColumnEncryptionSetting)
  nameWithType: SqlCommand.SqlCommand(String, SqlConnection, SqlTransaction, SqlCommandColumnEncryptionSetting)
  fullName: SqlCommand.SqlCommand(String, SqlConnection, SqlTransaction, SqlCommandColumnEncryptionSetting)
- uid: System.Data.SqlClient.SqlCommandColumnEncryptionSetting
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommandColumnEncryptionSetting
  nameWithType: SqlCommandColumnEncryptionSetting
  fullName: System.Data.SqlClient.SqlCommandColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteNonQuery()
  nameWithType: SqlCommand.BeginExecuteNonQuery()
  fullName: SqlCommand.BeginExecuteNonQuery()
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteNonQuery(AsyncCallback, Object)
  nameWithType: SqlCommand.BeginExecuteNonQuery(AsyncCallback, Object)
  fullName: SqlCommand.BeginExecuteNonQuery(AsyncCallback, Object)
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader()
  nameWithType: SqlCommand.BeginExecuteReader()
  fullName: SqlCommand.BeginExecuteReader()
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader(CommandBehavior)
  nameWithType: SqlCommand.BeginExecuteReader(CommandBehavior)
  fullName: SqlCommand.BeginExecuteReader(CommandBehavior)
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader(AsyncCallback, Object)
  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback, Object)
  fullName: SqlCommand.BeginExecuteReader(AsyncCallback, Object)
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader(AsyncCallback, Object, CommandBehavior)
  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback, Object, CommandBehavior)
  fullName: SqlCommand.BeginExecuteReader(AsyncCallback, Object, CommandBehavior)
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteXmlReader(AsyncCallback, Object)
  nameWithType: SqlCommand.BeginExecuteXmlReader(AsyncCallback, Object)
  fullName: SqlCommand.BeginExecuteXmlReader(AsyncCallback, Object)
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteXmlReader()
  nameWithType: SqlCommand.BeginExecuteXmlReader()
  fullName: SqlCommand.BeginExecuteXmlReader()
- uid: System.Data.SqlClient.SqlCommand.Cancel
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Cancel()
  nameWithType: SqlCommand.Cancel()
  fullName: SqlCommand.Cancel()
- uid: System.Data.SqlClient.SqlCommand.Clone
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Clone()
  nameWithType: SqlCommand.Clone()
  fullName: SqlCommand.Clone()
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
- uid: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ColumnEncryptionSetting
  nameWithType: SqlCommand.ColumnEncryptionSetting
  fullName: SqlCommand.ColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlCommand.CommandText
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandText
  nameWithType: SqlCommand.CommandText
  fullName: SqlCommand.CommandText
- uid: System.Data.SqlClient.SqlCommand.CommandTimeout
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: SqlCommand.CommandTimeout
  fullName: SqlCommand.CommandTimeout
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlCommand.CommandType
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandType
  nameWithType: SqlCommand.CommandType
  fullName: SqlCommand.CommandType
- uid: System.Data.CommandType
  parent: System.Data
  isExternal: false
  name: CommandType
  nameWithType: CommandType
  fullName: System.Data.CommandType
- uid: System.Data.SqlClient.SqlCommand.Connection
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Connection
  nameWithType: SqlCommand.Connection
  fullName: SqlCommand.Connection
- uid: System.Data.SqlClient.SqlCommand.CreateDbParameter
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CreateDbParameter()
  nameWithType: SqlCommand.CreateDbParameter()
  fullName: SqlCommand.CreateDbParameter()
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.SqlClient.SqlCommand.CreateParameter
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CreateParameter()
  nameWithType: SqlCommand.CreateParameter()
  fullName: SqlCommand.CreateParameter()
- uid: System.Data.SqlClient.SqlParameter
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlParameter
  nameWithType: SqlParameter
  fullName: System.Data.SqlClient.SqlParameter
- uid: System.Data.SqlClient.SqlCommand.DbConnection
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbConnection
  nameWithType: SqlCommand.DbConnection
  fullName: SqlCommand.DbConnection
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.SqlClient.SqlCommand.DbParameterCollection
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: SqlCommand.DbParameterCollection
  fullName: SqlCommand.DbParameterCollection
- uid: System.Data.Common.DbParameterCollection
  parent: System.Data.Common
  isExternal: false
  name: DbParameterCollection
  nameWithType: DbParameterCollection
  fullName: System.Data.Common.DbParameterCollection
- uid: System.Data.SqlClient.SqlCommand.DbTransaction
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbTransaction
  nameWithType: SqlCommand.DbTransaction
  fullName: SqlCommand.DbTransaction
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.SqlClient.SqlCommand.DesignTimeVisible
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: SqlCommand.DesignTimeVisible
  fullName: SqlCommand.DesignTimeVisible
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SqlCommand.Dispose(Boolean)
  fullName: SqlCommand.Dispose(Boolean)
- uid: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteNonQuery(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteNonQuery(IAsyncResult)
  fullName: SqlCommand.EndExecuteNonQuery(IAsyncResult)
- uid: System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteReader(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteReader(IAsyncResult)
  fullName: SqlCommand.EndExecuteReader(IAsyncResult)
- uid: System.Data.SqlClient.SqlDataReader
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlDataReader
  nameWithType: SqlDataReader
  fullName: System.Data.SqlClient.SqlDataReader
- uid: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteXmlReader(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteXmlReader(IAsyncResult)
  fullName: SqlCommand.EndExecuteXmlReader(IAsyncResult)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: false
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: SqlCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: SqlCommand.ExecuteDbDataReader(CommandBehavior)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteDbDataReaderAsync(CommandBehavior, CancellationToken)
  nameWithType: SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior, CancellationToken)
  fullName: SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior, CancellationToken)
- uid: System.Threading.Tasks.Task`1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
- uid: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<DbDataReader>
  nameWithType: Task<DbDataReader>
  fullName: System.Threading.Tasks.Task<System.Data.Common.DbDataReader>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.DbDataReader
    name: DbDataReader
    nameWithType: DbDataReader
    fullName: System.Data.Common.DbDataReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQuery
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteNonQuery()
  nameWithType: SqlCommand.ExecuteNonQuery()
  fullName: SqlCommand.ExecuteNonQuery()
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteNonQueryAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteNonQueryAsync(CancellationToken)
  fullName: SqlCommand.ExecuteNonQueryAsync(CancellationToken)
- uid: System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReader()
  nameWithType: SqlCommand.ExecuteReader()
  fullName: SqlCommand.ExecuteReader()
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReader(CommandBehavior)
  nameWithType: SqlCommand.ExecuteReader(CommandBehavior)
  fullName: SqlCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync()
  nameWithType: SqlCommand.ExecuteReaderAsync()
  fullName: SqlCommand.ExecuteReaderAsync()
- uid: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<SqlDataReader>
  nameWithType: Task<SqlDataReader>
  fullName: System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.SqlClient.SqlDataReader
    name: SqlDataReader
    nameWithType: SqlDataReader
    fullName: System.Data.SqlClient.SqlDataReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync(CommandBehavior)
  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior)
  fullName: SqlCommand.ExecuteReaderAsync(CommandBehavior)
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteReaderAsync(CancellationToken)
  fullName: SqlCommand.ExecuteReaderAsync(CancellationToken)
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync(CommandBehavior, CancellationToken)
  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior, CancellationToken)
  fullName: SqlCommand.ExecuteReaderAsync(CommandBehavior, CancellationToken)
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalar
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteScalar()
  nameWithType: SqlCommand.ExecuteScalar()
  fullName: SqlCommand.ExecuteScalar()
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteScalarAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteScalarAsync(CancellationToken)
  fullName: SqlCommand.ExecuteScalarAsync(CancellationToken)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReader
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReader()
  nameWithType: SqlCommand.ExecuteXmlReader()
  fullName: SqlCommand.ExecuteXmlReader()
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReaderAsync()
  nameWithType: SqlCommand.ExecuteXmlReaderAsync()
  fullName: SqlCommand.ExecuteXmlReaderAsync()
- uid: System.Threading.Tasks.Task{System.Xml.XmlReader}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<XmlReader>
  nameWithType: Task<XmlReader>
  fullName: System.Threading.Tasks.Task<System.Xml.XmlReader>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReaderAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteXmlReaderAsync(CancellationToken)
  fullName: SqlCommand.ExecuteXmlReaderAsync(CancellationToken)
- uid: System.Data.SqlClient.SqlCommand.Notification
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Notification
  nameWithType: SqlCommand.Notification
  fullName: SqlCommand.Notification
- uid: System.Data.Sql.SqlNotificationRequest
  parent: System.Data.Sql
  isExternal: false
  name: SqlNotificationRequest
  nameWithType: SqlNotificationRequest
  fullName: System.Data.Sql.SqlNotificationRequest
- uid: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: NotificationAutoEnlist
  nameWithType: SqlCommand.NotificationAutoEnlist
  fullName: SqlCommand.NotificationAutoEnlist
- uid: System.Data.SqlClient.SqlCommand.Parameters
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Parameters
  nameWithType: SqlCommand.Parameters
  fullName: SqlCommand.Parameters
- uid: System.Data.SqlClient.SqlParameterCollection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlParameterCollection
  nameWithType: SqlParameterCollection
  fullName: System.Data.SqlClient.SqlParameterCollection
- uid: System.Data.SqlClient.SqlCommand.Prepare
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Prepare()
  nameWithType: SqlCommand.Prepare()
  fullName: SqlCommand.Prepare()
- uid: System.Data.SqlClient.SqlCommand.ResetCommandTimeout
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ResetCommandTimeout()
  nameWithType: SqlCommand.ResetCommandTimeout()
  fullName: SqlCommand.ResetCommandTimeout()
- uid: System.Data.SqlClient.SqlCommand.StatementCompleted
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: StatementCompleted
  nameWithType: SqlCommand.StatementCompleted
  fullName: SqlCommand.StatementCompleted
- uid: System.Data.StatementCompletedEventHandler
  parent: System.Data
  isExternal: false
  name: StatementCompletedEventHandler
  nameWithType: StatementCompletedEventHandler
  fullName: System.Data.StatementCompletedEventHandler
- uid: System.Data.SqlClient.SqlCommand.Transaction
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Transaction
  nameWithType: SqlCommand.Transaction
  fullName: SqlCommand.Transaction
- uid: System.Data.SqlClient.SqlCommand.UpdatedRowSource
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: SqlCommand.UpdatedRowSource
  fullName: SqlCommand.UpdatedRowSource
- uid: System.Data.UpdateRowSource
  parent: System.Data
  isExternal: false
  name: UpdateRowSource
  nameWithType: UpdateRowSource
  fullName: System.Data.UpdateRowSource
- uid: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ICloneable.Clone()
  nameWithType: SqlCommand.ICloneable.Clone()
  fullName: SqlCommand.ICloneable.Clone()
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync
  nameWithType: SqlCommand.ExecuteReaderAsync
  fullName: SqlCommand.ExecuteReaderAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.#ctor*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand.SqlCommand
  fullName: SqlCommand.SqlCommand
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteNonQuery
  nameWithType: SqlCommand.BeginExecuteNonQuery
  fullName: SqlCommand.BeginExecuteNonQuery
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader
  nameWithType: SqlCommand.BeginExecuteReader
  fullName: SqlCommand.BeginExecuteReader
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteXmlReader
  nameWithType: SqlCommand.BeginExecuteXmlReader
  fullName: SqlCommand.BeginExecuteXmlReader
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.Cancel*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Cancel
  nameWithType: SqlCommand.Cancel
  fullName: SqlCommand.Cancel
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.Clone*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Clone
  nameWithType: SqlCommand.Clone
  fullName: SqlCommand.Clone
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ColumnEncryptionSetting
  nameWithType: SqlCommand.ColumnEncryptionSetting
  fullName: SqlCommand.ColumnEncryptionSetting
  monikers:
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.CommandText*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandText
  nameWithType: SqlCommand.CommandText
  fullName: SqlCommand.CommandText
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.CommandTimeout*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: SqlCommand.CommandTimeout
  fullName: SqlCommand.CommandTimeout
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.CommandType*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandType
  nameWithType: SqlCommand.CommandType
  fullName: SqlCommand.CommandType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.Connection*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Connection
  nameWithType: SqlCommand.Connection
  fullName: SqlCommand.Connection
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.CreateDbParameter*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CreateDbParameter
  nameWithType: SqlCommand.CreateDbParameter
  fullName: SqlCommand.CreateDbParameter
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.CreateParameter*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CreateParameter
  nameWithType: SqlCommand.CreateParameter
  fullName: SqlCommand.CreateParameter
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.DbConnection*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbConnection
  nameWithType: SqlCommand.DbConnection
  fullName: SqlCommand.DbConnection
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.DbParameterCollection*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: SqlCommand.DbParameterCollection
  fullName: SqlCommand.DbParameterCollection
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.DbTransaction*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbTransaction
  nameWithType: SqlCommand.DbTransaction
  fullName: SqlCommand.DbTransaction
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.DesignTimeVisible*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: SqlCommand.DesignTimeVisible
  fullName: SqlCommand.DesignTimeVisible
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.Dispose*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Dispose
  nameWithType: SqlCommand.Dispose
  fullName: SqlCommand.Dispose
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteNonQuery
  nameWithType: SqlCommand.EndExecuteNonQuery
  fullName: SqlCommand.EndExecuteNonQuery
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.EndExecuteReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteReader
  nameWithType: SqlCommand.EndExecuteReader
  fullName: SqlCommand.EndExecuteReader
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteXmlReader
  nameWithType: SqlCommand.EndExecuteXmlReader
  fullName: SqlCommand.EndExecuteXmlReader
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteDbDataReader
  nameWithType: SqlCommand.ExecuteDbDataReader
  fullName: SqlCommand.ExecuteDbDataReader
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteDbDataReaderAsync
  nameWithType: SqlCommand.ExecuteDbDataReaderAsync
  fullName: SqlCommand.ExecuteDbDataReaderAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQuery*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteNonQuery
  nameWithType: SqlCommand.ExecuteNonQuery
  fullName: SqlCommand.ExecuteNonQuery
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteNonQueryAsync
  nameWithType: SqlCommand.ExecuteNonQueryAsync
  fullName: SqlCommand.ExecuteNonQueryAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReader
  nameWithType: SqlCommand.ExecuteReader
  fullName: SqlCommand.ExecuteReader
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalar*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteScalar
  nameWithType: SqlCommand.ExecuteScalar
  fullName: SqlCommand.ExecuteScalar
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteScalarAsync
  nameWithType: SqlCommand.ExecuteScalarAsync
  fullName: SqlCommand.ExecuteScalarAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReader
  nameWithType: SqlCommand.ExecuteXmlReader
  fullName: SqlCommand.ExecuteXmlReader
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReaderAsync
  nameWithType: SqlCommand.ExecuteXmlReaderAsync
  fullName: SqlCommand.ExecuteXmlReaderAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.Notification*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Notification
  nameWithType: SqlCommand.Notification
  fullName: SqlCommand.Notification
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: NotificationAutoEnlist
  nameWithType: SqlCommand.NotificationAutoEnlist
  fullName: SqlCommand.NotificationAutoEnlist
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.Parameters*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Parameters
  nameWithType: SqlCommand.Parameters
  fullName: SqlCommand.Parameters
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.Prepare*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Prepare
  nameWithType: SqlCommand.Prepare
  fullName: SqlCommand.Prepare
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.ResetCommandTimeout*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ResetCommandTimeout
  nameWithType: SqlCommand.ResetCommandTimeout
  fullName: SqlCommand.ResetCommandTimeout
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.Transaction*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Transaction
  nameWithType: SqlCommand.Transaction
  fullName: SqlCommand.Transaction
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.UpdatedRowSource*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: SqlCommand.UpdatedRowSource
  fullName: SqlCommand.UpdatedRowSource
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: SqlCommand.System.ICloneable.Clone
  fullName: SqlCommand.System.ICloneable.Clone
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.SqlClient/SqlCommand.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Data.Common.DbCommand.Dispose
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: Dispose()
  nameWithType: DbCommand.Dispose()
  fullName: DbCommand.Dispose()
- uid: System.Data.Common.DbCommand.ExecuteNonQueryAsync
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteNonQueryAsync()
  nameWithType: DbCommand.ExecuteNonQueryAsync()
  fullName: DbCommand.ExecuteNonQueryAsync()
- uid: System.Data.Common.DbCommand.ExecuteScalarAsync
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteScalarAsync()
  nameWithType: DbCommand.ExecuteScalarAsync()
  fullName: DbCommand.ExecuteScalarAsync()
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: IDbCommand.Connection
  nameWithType: DbCommand.IDbCommand.Connection
  fullName: DbCommand.IDbCommand.Connection
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: IDbCommand.CreateParameter()
  nameWithType: DbCommand.IDbCommand.CreateParameter()
  fullName: DbCommand.IDbCommand.CreateParameter()
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: IDbCommand.ExecuteReader()
  nameWithType: DbCommand.IDbCommand.ExecuteReader()
  fullName: DbCommand.IDbCommand.ExecuteReader()
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: IDbCommand.ExecuteReader(CommandBehavior)
  nameWithType: DbCommand.IDbCommand.ExecuteReader(CommandBehavior)
  fullName: DbCommand.IDbCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: IDbCommand.Parameters
  nameWithType: DbCommand.IDbCommand.Parameters
  fullName: DbCommand.IDbCommand.Parameters
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: IDbCommand.Transaction
  nameWithType: DbCommand.IDbCommand.Transaction
  fullName: DbCommand.IDbCommand.Transaction
- uid: System.ICloneable
  parent: System
  isExternal: false
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
