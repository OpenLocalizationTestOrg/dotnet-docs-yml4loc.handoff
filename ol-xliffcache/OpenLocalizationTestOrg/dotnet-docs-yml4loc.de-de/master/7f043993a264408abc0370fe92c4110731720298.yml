### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  commentId: T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  id: ReverseRandomAccessIterator`1
  children:
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.base
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Clone
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.container
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Item(System.Int32)
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.move(System.Int32)
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.next
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Implicit
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.prev
  - Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.valid
  langs:
  - csharp
  name: ReverseRandomAccessIterator<TValue>
  nameWithType: ReverseRandomAccessIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>
  type: Class
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: 'Provides an iterator that supports the following operations: moving forward one position by calling <code>operator--</code>, moving backward one position by calling <code>operator++</code>, accessing an element by using <code>operator[]</code>, and accessing an element by using pointer arithmetic.'
  remarks: '[!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]'
  syntax:
    content: 'public class ReverseRandomAccessIterator<TValue> : Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>'
    typeParameters:
    - id: TValue
      description: '[!INCLUDE[cpp_iter_arg](~/includes/cpp-iter-arg-md.md)]'
  inheritance:
  - System.Object
  implements:
  - Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{TValue}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor
  id: '#ctor'
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: ReverseRandomAccessIterator<TValue>()
  nameWithType: ReverseRandomAccessIterator<TValue>.ReverseRandomAccessIterator<TValue>()
  fullName: ReverseRandomAccessIterator<TValue>.ReverseRandomAccessIterator<TValue>()
  type: Constructor
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Allocates and initializes a new <xref href="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1"></xref> object.
  syntax:
    content: public ReverseRandomAccessIterator ();
    parameters: []
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  id: '#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})'
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: ReverseRandomAccessIterator<TValue>(IRandomAccessIterator<TValue>)
  nameWithType: ReverseRandomAccessIterator<TValue>.ReverseRandomAccessIterator<TValue>(IRandomAccessIterator<TValue>)
  fullName: ReverseRandomAccessIterator<TValue>.ReverseRandomAccessIterator<TValue>(IRandomAccessIterator<TValue>)
  type: Constructor
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Allocates and initializes a new <xref href="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1"></xref> object from an existing <xref href="Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1"></xref> object.
  syntax:
    content: public ReverseRandomAccessIterator (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Iter);
    parameters:
    - id: _Iter
      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
      description: An existing <xref href="Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1"></xref> object to be copied to the current container.
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: '#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)'
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: ReverseRandomAccessIterator<TValue>(ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.ReverseRandomAccessIterator<TValue>(ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.ReverseRandomAccessIterator<TValue>(ReverseRandomAccessIterator)
  type: Constructor
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: public ReverseRandomAccessIterator (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.base
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.base
  id: base
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: base()
  nameWithType: ReverseRandomAccessIterator<TValue>.base()
  fullName: ReverseRandomAccessIterator<TValue>.base()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Gets the underlying base iterator for the <xref href="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1"></xref> object.
  syntax:
    content: public Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> base ();
    parameters: []
    return:
      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
      description: The underlying base iterator for the <xref href="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1"></xref> object.
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.base*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Clone
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Clone
  id: Clone
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: Clone()
  nameWithType: ReverseRandomAccessIterator<TValue>.Clone()
  fullName: ReverseRandomAccessIterator<TValue>.Clone()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Creates a copy of the current <xref href="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1"></xref> object.
  syntax:
    content: public virtual object Clone ();
    parameters: []
    return:
      type: System.Object
      description: A copy of the current <xref href="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1"></xref> object.
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Clone*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.container
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.container
  id: container
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: container()
  nameWithType: ReverseRandomAccessIterator<TValue>.container()
  fullName: ReverseRandomAccessIterator<TValue>.container()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Gets the container that the iterator is traversing.
  syntax:
    content: public virtual object container ();
    parameters: []
    return:
      type: System.Object
      description: The container that the iterator is traversing.
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.container*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  id: distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: distance(IRandomAccessIterator<TValue>)
  nameWithType: ReverseRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)
  fullName: ReverseRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Determines the distance between the element that the current iterator is pointing to and the element that the given iterator is pointing to.
  syntax:
    content: public virtual int distance (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
      description: A valid iterator that points to the same container as the current iterator.
    return:
      type: System.Int32
      description: The distance, in number of elements, between the element that the current iterator is pointing to and the element that <code>_Right</code> is pointing to. This number is negative if <code>_Right</code> points to an element that is before the element that the current iterator points to.
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: distance(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: distance(ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.distance(ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.distance(ReverseRandomAccessIterator)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: public int distance (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator
      description: ''
    return:
      type: System.Int32
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: equal_to(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: equal_to(ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.equal_to(ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.equal_to(ReverseRandomAccessIterator)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: public bool equal_to (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  id: equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: equal_to(IInputIterator<TValue>)
  nameWithType: ReverseRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)
  fullName: ReverseRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Determines whether the given <xref href="Microsoft.VisualC.StlClr.Generic.IInputIterator`1"></xref> object is the same as the current <xref href="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1"></xref> object.
  syntax:
    content: public virtual bool equal_to (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
      description: The <xref href="Microsoft.VisualC.StlClr.Generic.IInputIterator`1"></xref> object to compare with the current <xref href="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1"></xref> object.
    return:
      type: System.Boolean
      description: '`true` if the two iterators are the same object; otherwise, `false`.'
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Item(System.Int32)
  commentId: P:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ReverseRandomAccessIterator<TValue>.Item(Int32)
  fullName: ReverseRandomAccessIterator<TValue>.Item(Int32)
  type: Property
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Accesses the element at the given position in the container.
  syntax:
    content: public TValue this[int _Pos] { get; set; }
    parameters:
    - id: _Pos
      type: System.Int32
      description: The position of the element to access.
    return:
      type: TValue
      description: The element at the given position in the container.
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Item*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  id: less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: less_than(IRandomAccessIterator<TValue>)
  nameWithType: ReverseRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)
  fullName: ReverseRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Determines whether the current iterator is pointing to an element in the container that is before the element that the given iterator points to.
  syntax:
    content: public virtual bool less_than (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
      description: A valid iterator that points to the same container as the current iterator.
    return:
      type: System.Boolean
      description: '`true` if the current iterator is pointing to an element that comes before the element that <code>_Right</code> is pointing to; otherwise, `false`.'
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: less_than(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: less_than(ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.less_than(ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.less_than(ReverseRandomAccessIterator)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: public bool less_than (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.move(System.Int32)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.move(System.Int32)
  id: move(System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: move(Int32)
  nameWithType: ReverseRandomAccessIterator<TValue>.move(Int32)
  fullName: ReverseRandomAccessIterator<TValue>.move(Int32)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Moves the iterator by the given number of elements.
  syntax:
    content: public virtual int move (int _Offset);
    parameters:
    - id: _Offset
      type: System.Int32
      description: The number of elements to traverse. To move the iterator forward, specify a negative number. To move the iterator backward, use a positive number.
    return:
      type: System.Int32
      description: The actual number of elements traversed. This number will differ from <code>_Offset</code> if the beginning or end of the container is reached before iterating the desired number of elements.
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.move*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.next
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.next
  id: next
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: next()
  nameWithType: ReverseRandomAccessIterator<TValue>.next()
  fullName: ReverseRandomAccessIterator<TValue>.next()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Increments the reverse iterator to the next position in the underlying container, or to the first position in front of the beginning of container if the container has been completely traversed.
  syntax:
    content: public virtual void next ();
    parameters: []
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.next*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)
  id: op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: op_Addition(ReverseRandomAccessIterator<TValue>, Int32)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Addition(ReverseRandomAccessIterator<TValue>, Int32)
  fullName: ReverseRandomAccessIterator<TValue>.op_Addition(ReverseRandomAccessIterator<TValue>, Int32)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Increments the reverse iterator by the given number of elements. The integer parameter is specified on the right side of the addition operator.
  remarks: The equivalent method for this operator is <xref:Microsoft.VisualC.StlClr.%2A> Gene ric.ReverseRandomAccessIterator`1.Add(Microsoft.VisualC.StlClr. Gene ric.ReverseRandomAccessIterator{`0}@,System.Int32)?qualifyHint=True&autoUpgrade=False
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Addition (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue> , int _Right);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
      description: ''
    - id: _Right
      type: System.Int32
      description: The number of elements to increment.
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: op_Addition(ReverseRandomAccessIterator<TValue>, Int32, ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Addition(ReverseRandomAccessIterator<TValue>, Int32, ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.op_Addition(ReverseRandomAccessIterator<TValue>, Int32, ReverseRandomAccessIterator)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: public static Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Addition (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue> , int _Left, Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Right);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
      description: ''
    - id: _Left
      type: System.Int32
      description: ''
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: op_Assign(ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Assign(ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.op_Assign(ReverseRandomAccessIterator)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: public Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator op_Assign (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator
      description: ''
    return:
      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Assign*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)
  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: op_Decrement(ReverseRandomAccessIterator<TValue>)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Decrement(ReverseRandomAccessIterator<TValue>)
  fullName: ReverseRandomAccessIterator<TValue>.op_Decrement(ReverseRandomAccessIterator<TValue>)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Decrements the reverse iterator by one element. This is the prefix version of the decrement operator.
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)
  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: op_Decrement(ReverseRandomAccessIterator<TValue>, Int32)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Decrement(ReverseRandomAccessIterator<TValue>, Int32)
  fullName: ReverseRandomAccessIterator<TValue>.op_Decrement(ReverseRandomAccessIterator<TValue>, Int32)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Decrements the reverse iterator by one element. This is the postfix version of the decrement operator.
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue> , int A_0);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
      description: ''
    - id: A_0
      type: System.Int32
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: op_Equality(ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Equality(ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.op_Equality(ReverseRandomAccessIterator)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: >-
      [System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]

      public bool op_Equality (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Equality*
  exceptions: []
  attributes:
  - type: System.Runtime.TargetedPatchingOptOutAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: op_GreaterThan(ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_GreaterThan(ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.op_GreaterThan(ReverseRandomAccessIterator)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: >-
      [System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]

      public bool op_GreaterThan (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThan*
  exceptions: []
  attributes:
  - type: System.Runtime.TargetedPatchingOptOutAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: op_GreaterThanOrEqual(ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ReverseRandomAccessIterator)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: public bool op_GreaterThanOrEqual (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThanOrEqual*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Implicit
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}
  id: op_Implicit
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: op_Implicit
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Implicit
  fullName: ReverseRandomAccessIterator<TValue>.op_Implicit
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: public Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> op_Implicit ();
    parameters: []
    return:
      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Implicit*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)
  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: op_Increment(ReverseRandomAccessIterator<TValue>)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Increment(ReverseRandomAccessIterator<TValue>)
  fullName: ReverseRandomAccessIterator<TValue>.op_Increment(ReverseRandomAccessIterator<TValue>)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Increments the reverse iterator by one element. This is the prefix version of the increment operator.
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)
  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: op_Increment(ReverseRandomAccessIterator<TValue>, Int32)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Increment(ReverseRandomAccessIterator<TValue>, Int32)
  fullName: ReverseRandomAccessIterator<TValue>.op_Increment(ReverseRandomAccessIterator<TValue>, Int32)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Increments the reverse iterator by one element. This is the postfix version of the increment operator.
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue> , int A_0);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
      description: ''
    - id: A_0
      type: System.Int32
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: op_Inequality(ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Inequality(ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.op_Inequality(ReverseRandomAccessIterator)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: public bool op_Inequality (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Inequality*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_LessThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: op_LessThan(ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_LessThan(ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.op_LessThan(ReverseRandomAccessIterator)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: >-
      [System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]

      public bool op_LessThan (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThan*
  exceptions: []
  attributes:
  - type: System.Runtime.TargetedPatchingOptOutAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: op_LessThanOrEqual(ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_LessThanOrEqual(ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.op_LessThanOrEqual(ReverseRandomAccessIterator)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: public bool op_LessThanOrEqual (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThanOrEqual*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: op_MemberSelection(ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_MemberSelection(ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.op_MemberSelection(ReverseRandomAccessIterator)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: >-
      [System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]

      public static TValue op_MemberSelection (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Left);
    parameters:
    - id: _Left
      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator
      description: ''
    return:
      type: TValue@
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_MemberSelection*
  exceptions: []
  attributes:
  - type: System.Runtime.TargetedPatchingOptOutAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: op_PointerDereference(ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_PointerDereference(ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.op_PointerDereference(ReverseRandomAccessIterator)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: >-
      [System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]

      public static TValue op_PointerDereference (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Left);
    parameters:
    - id: _Left
      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator
      description: ''
    return:
      type: TValue@
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_PointerDereference*
  exceptions: []
  attributes:
  - type: System.Runtime.TargetedPatchingOptOutAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  id: op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: op_Subtraction(IRandomAccessIterator<TValue>)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)
  fullName: ReverseRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Determines the difference between two iterators.
  remarks: The equivalent method for this operator is <xref:Microsoft.VisualC.StlClr.%2A> Gene ric.ReverseRandomAccessIterator`1.Subtract(Microsoft.VisualC.StlClr. Gene ric.IRandomAccessIterator{`0})?qualifyHint=True&autoUpgrade=False
  syntax:
    content: >-
      [System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]

      public int op_Subtraction (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
      description: The <xref href="Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1"></xref> to be subtracted from the current <xref href="Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1"></xref> object.
    return:
      type: System.Int32
      description: The difference, in number of elements, between the two iterators.
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction*
  exceptions: []
  attributes:
  - type: System.Runtime.TargetedPatchingOptOutAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)
  id: op_Subtraction(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: op_Subtraction(ReverseRandomAccessIterator<TValue>, Int32)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Subtraction(ReverseRandomAccessIterator<TValue>, Int32)
  fullName: ReverseRandomAccessIterator<TValue>.op_Subtraction(ReverseRandomAccessIterator<TValue>, Int32)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Decrements the iterator by the given number of elements. The integer parameter is specified on the right side of the subtraction operator.
  remarks: The equivalent method for this operator is <xref:Microsoft.VisualC.StlClr.%2A> Gene ric.ReverseRandomAccessIterator`1.Subtract(Microsoft.VisualC.StlClr. Gene ric.ReverseRandomAccessIterator{`0}@,System.Int32)?qualifyHint=True&autoUpgrade=False
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Subtraction (ref Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue> , int _Right);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
      description: ''
    - id: _Right
      type: System.Int32
      description: The number of elements to decrement.
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.prev
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.prev
  id: prev
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: prev()
  nameWithType: ReverseRandomAccessIterator<TValue>.prev()
  fullName: ReverseRandomAccessIterator<TValue>.prev()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Positions the iterator to the element immediately after the current element.
  syntax:
    content: public virtual void prev ();
    parameters: []
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.prev*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.valid
  commentId: M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.valid
  id: valid
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  langs:
  - csharp
  name: valid()
  nameWithType: ReverseRandomAccessIterator<TValue>.valid()
  fullName: ReverseRandomAccessIterator<TValue>.valid()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Determines whether the iterator is valid and can be safely used to traverse the underlying container.
  syntax:
    content: public virtual bool valid ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the iterator is valid and safe to use; otherwise, `false`.'
  overload: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.valid*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: ReverseRandomAccessIterator<TValue>()
  nameWithType: ReverseRandomAccessIterator<TValue>.ReverseRandomAccessIterator<TValue>()
  fullName: ReverseRandomAccessIterator<TValue>.ReverseRandomAccessIterator<TValue>()
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: ReverseRandomAccessIterator<TValue>(IRandomAccessIterator<TValue>)
  nameWithType: ReverseRandomAccessIterator<TValue>.ReverseRandomAccessIterator<TValue>(IRandomAccessIterator<TValue>)
  fullName: ReverseRandomAccessIterator<TValue>.ReverseRandomAccessIterator<TValue>(IRandomAccessIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: IRandomAccessIterator<TValue>
  nameWithType: IRandomAccessIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: ReverseRandomAccessIterator<TValue>(ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.ReverseRandomAccessIterator<TValue>(ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.ReverseRandomAccessIterator<TValue>(ReverseRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: true
  name: ReverseRandomAccessIterator
  nameWithType: ReverseRandomAccessIterator
  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.base
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: base()
  nameWithType: ReverseRandomAccessIterator<TValue>.base()
  fullName: ReverseRandomAccessIterator<TValue>.base()
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Clone
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: Clone()
  nameWithType: ReverseRandomAccessIterator<TValue>.Clone()
  fullName: ReverseRandomAccessIterator<TValue>.Clone()
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.container
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: container()
  nameWithType: ReverseRandomAccessIterator<TValue>.container()
  fullName: ReverseRandomAccessIterator<TValue>.container()
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: distance(IRandomAccessIterator<TValue>)
  nameWithType: ReverseRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)
  fullName: ReverseRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: distance(ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.distance(ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.distance(ReverseRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: equal_to(ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.equal_to(ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.equal_to(ReverseRandomAccessIterator)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: equal_to(IInputIterator<TValue>)
  nameWithType: ReverseRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)
  fullName: ReverseRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: IInputIterator<TValue>
  nameWithType: IInputIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Item(System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: Item(Int32)
  nameWithType: ReverseRandomAccessIterator<TValue>.Item(Int32)
  fullName: ReverseRandomAccessIterator<TValue>.Item(Int32)
- uid: TValue
  isExternal: true
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: less_than(IRandomAccessIterator<TValue>)
  nameWithType: ReverseRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)
  fullName: ReverseRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: less_than(ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.less_than(ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.less_than(ReverseRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.move(System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: move(Int32)
  nameWithType: ReverseRandomAccessIterator<TValue>.move(Int32)
  fullName: ReverseRandomAccessIterator<TValue>.move(Int32)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.next
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: next()
  nameWithType: ReverseRandomAccessIterator<TValue>.next()
  fullName: ReverseRandomAccessIterator<TValue>.next()
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_Addition(ReverseRandomAccessIterator<TValue>, Int32)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Addition(ReverseRandomAccessIterator<TValue>, Int32)
  fullName: ReverseRandomAccessIterator<TValue>.op_Addition(ReverseRandomAccessIterator<TValue>, Int32)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ReverseRandomAccessIterator<TValue>
  nameWithType: ReverseRandomAccessIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator<TValue>
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_Addition(ReverseRandomAccessIterator<TValue>, Int32, ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Addition(ReverseRandomAccessIterator<TValue>, Int32, ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.op_Addition(ReverseRandomAccessIterator<TValue>, Int32, ReverseRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_Assign(ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Assign(ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.op_Assign(ReverseRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_Decrement(ReverseRandomAccessIterator<TValue>)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Decrement(ReverseRandomAccessIterator<TValue>)
  fullName: ReverseRandomAccessIterator<TValue>.op_Decrement(ReverseRandomAccessIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_Decrement(ReverseRandomAccessIterator<TValue>, Int32)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Decrement(ReverseRandomAccessIterator<TValue>, Int32)
  fullName: ReverseRandomAccessIterator<TValue>.op_Decrement(ReverseRandomAccessIterator<TValue>, Int32)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_Equality(ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Equality(ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.op_Equality(ReverseRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_GreaterThan(ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_GreaterThan(ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.op_GreaterThan(ReverseRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_GreaterThanOrEqual(ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ReverseRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Implicit
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_Implicit
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Implicit
  fullName: ReverseRandomAccessIterator<TValue>.op_Implicit
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_Increment(ReverseRandomAccessIterator<TValue>)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Increment(ReverseRandomAccessIterator<TValue>)
  fullName: ReverseRandomAccessIterator<TValue>.op_Increment(ReverseRandomAccessIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_Increment(ReverseRandomAccessIterator<TValue>, Int32)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Increment(ReverseRandomAccessIterator<TValue>, Int32)
  fullName: ReverseRandomAccessIterator<TValue>.op_Increment(ReverseRandomAccessIterator<TValue>, Int32)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_Inequality(ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Inequality(ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.op_Inequality(ReverseRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_LessThan(ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_LessThan(ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.op_LessThan(ReverseRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_LessThanOrEqual(ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_LessThanOrEqual(ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.op_LessThanOrEqual(ReverseRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_MemberSelection(ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_MemberSelection(ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.op_MemberSelection(ReverseRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_PointerDereference(ReverseRandomAccessIterator)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_PointerDereference(ReverseRandomAccessIterator)
  fullName: ReverseRandomAccessIterator<TValue>.op_PointerDereference(ReverseRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_Subtraction(IRandomAccessIterator<TValue>)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)
  fullName: ReverseRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_Subtraction(ReverseRandomAccessIterator<TValue>, Int32)
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Subtraction(ReverseRandomAccessIterator<TValue>, Int32)
  fullName: ReverseRandomAccessIterator<TValue>.op_Subtraction(ReverseRandomAccessIterator<TValue>, Int32)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.prev
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: prev()
  nameWithType: ReverseRandomAccessIterator<TValue>.prev()
  fullName: ReverseRandomAccessIterator<TValue>.prev()
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.valid
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: valid()
  nameWithType: ReverseRandomAccessIterator<TValue>.valid()
  fullName: ReverseRandomAccessIterator<TValue>.valid()
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: ReverseRandomAccessIterator<TValue>
  nameWithType: ReverseRandomAccessIterator<TValue>.ReverseRandomAccessIterator<TValue>
  fullName: ReverseRandomAccessIterator<TValue>.ReverseRandomAccessIterator<TValue>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.base*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: base
  nameWithType: ReverseRandomAccessIterator<TValue>.base
  fullName: ReverseRandomAccessIterator<TValue>.base
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Clone*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: Clone
  nameWithType: ReverseRandomAccessIterator<TValue>.Clone
  fullName: ReverseRandomAccessIterator<TValue>.Clone
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.container*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: container
  nameWithType: ReverseRandomAccessIterator<TValue>.container
  fullName: ReverseRandomAccessIterator<TValue>.container
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: distance
  nameWithType: ReverseRandomAccessIterator<TValue>.distance
  fullName: ReverseRandomAccessIterator<TValue>.distance
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: equal_to
  nameWithType: ReverseRandomAccessIterator<TValue>.equal_to
  fullName: ReverseRandomAccessIterator<TValue>.equal_to
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Item*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: Item
  nameWithType: ReverseRandomAccessIterator<TValue>.Item
  fullName: ReverseRandomAccessIterator<TValue>.Item
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: less_than
  nameWithType: ReverseRandomAccessIterator<TValue>.less_than
  fullName: ReverseRandomAccessIterator<TValue>.less_than
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.move*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: move
  nameWithType: ReverseRandomAccessIterator<TValue>.move
  fullName: ReverseRandomAccessIterator<TValue>.move
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.next*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: next
  nameWithType: ReverseRandomAccessIterator<TValue>.next
  fullName: ReverseRandomAccessIterator<TValue>.next
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_Addition
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Addition
  fullName: ReverseRandomAccessIterator<TValue>.op_Addition
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Assign*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_Assign
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Assign
  fullName: ReverseRandomAccessIterator<TValue>.op_Assign
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_Decrement
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Decrement
  fullName: ReverseRandomAccessIterator<TValue>.op_Decrement
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Equality*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_Equality
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Equality
  fullName: ReverseRandomAccessIterator<TValue>.op_Equality
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThan*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_GreaterThan
  nameWithType: ReverseRandomAccessIterator<TValue>.op_GreaterThan
  fullName: ReverseRandomAccessIterator<TValue>.op_GreaterThan
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThanOrEqual*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_GreaterThanOrEqual
  nameWithType: ReverseRandomAccessIterator<TValue>.op_GreaterThanOrEqual
  fullName: ReverseRandomAccessIterator<TValue>.op_GreaterThanOrEqual
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Implicit*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_Implicit
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Implicit
  fullName: ReverseRandomAccessIterator<TValue>.op_Implicit
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_Increment
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Increment
  fullName: ReverseRandomAccessIterator<TValue>.op_Increment
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Inequality*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_Inequality
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Inequality
  fullName: ReverseRandomAccessIterator<TValue>.op_Inequality
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThan*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_LessThan
  nameWithType: ReverseRandomAccessIterator<TValue>.op_LessThan
  fullName: ReverseRandomAccessIterator<TValue>.op_LessThan
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThanOrEqual*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_LessThanOrEqual
  nameWithType: ReverseRandomAccessIterator<TValue>.op_LessThanOrEqual
  fullName: ReverseRandomAccessIterator<TValue>.op_LessThanOrEqual
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_MemberSelection*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_MemberSelection
  nameWithType: ReverseRandomAccessIterator<TValue>.op_MemberSelection
  fullName: ReverseRandomAccessIterator<TValue>.op_MemberSelection
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_PointerDereference*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_PointerDereference
  nameWithType: ReverseRandomAccessIterator<TValue>.op_PointerDereference
  fullName: ReverseRandomAccessIterator<TValue>.op_PointerDereference
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: op_Subtraction
  nameWithType: ReverseRandomAccessIterator<TValue>.op_Subtraction
  fullName: ReverseRandomAccessIterator<TValue>.op_Subtraction
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.prev*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: prev
  nameWithType: ReverseRandomAccessIterator<TValue>.prev
  fullName: ReverseRandomAccessIterator<TValue>.prev
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.valid*
  parent: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1
  isExternal: false
  name: valid
  nameWithType: ReverseRandomAccessIterator<TValue>.valid
  fullName: ReverseRandomAccessIterator<TValue>.valid
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ReverseRandomAccessIterator`1.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
