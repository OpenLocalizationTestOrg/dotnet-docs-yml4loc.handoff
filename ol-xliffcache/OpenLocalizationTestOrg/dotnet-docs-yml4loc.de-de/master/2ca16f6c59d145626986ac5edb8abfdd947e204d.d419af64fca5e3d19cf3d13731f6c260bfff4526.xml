{"nodes":[{"content":"Represents an ordered collection of <xref href=\"System.Windows.Media.Visual\"></xref> objects.","nodes":[{"pos":[0,93],"content":"Represents an ordered collection of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;&lt;/xref&gt;</ph> objects.","source":"Represents an ordered collection of <xref href=\"System.Windows.Media.Visual\"></xref> objects."}],"pos":[1698,1792],"yaml":true},{"content":"A <xref:System.Windows.Media.VisualCollection> has implied context affinity. If a procedure attempts to access the <xref:System.Windows.Media.VisualCollection> from a different context than the context of the owning <xref:System.Windows.Media.ContainerVisual>, an exception is thrown.","nodes":[{"pos":[0,284],"content":"A <xref:System.Windows.Media.VisualCollection> has implied context affinity. If a procedure attempts to access the <xref:System.Windows.Media.VisualCollection> from a different context than the context of the owning <xref:System.Windows.Media.ContainerVisual>, an exception is thrown.","nodes":[{"content":"A <xref:System.Windows.Media.VisualCollection> has implied context affinity. If a procedure attempts to access the <xref:System.Windows.Media.VisualCollection> from a different context than the context of the owning <xref:System.Windows.Media.ContainerVisual>, an exception is thrown.","pos":[0,284],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> has implied context affinity.","pos":[0,76],"source":"A <xref:System.Windows.Media.VisualCollection> has implied context affinity."},{"content":"If a procedure attempts to access the <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> from a different context than the context of the owning <ph id=\"ph2\">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph>, an exception is thrown.","pos":[77,284],"source":" If a procedure attempts to access the <xref:System.Windows.Media.VisualCollection> from a different context than the context of the owning <xref:System.Windows.Media.ContainerVisual>, an exception is thrown."}]}]}],"pos":[1803,2088],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Media.VisualCollection\"></xref> class.","nodes":[{"pos":[0,99],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.VisualCollection\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Media.VisualCollection\"></xref> class."}],"pos":[4461,4561],"yaml":true},{"content":"The parent visual object whose <xref href=\"System.Windows.Media.VisualCollection\"></xref> is returned.","nodes":[{"pos":[0,102],"content":"The parent visual object whose <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.VisualCollection\"&gt;&lt;/xref&gt;</ph> is returned.","source":"The parent visual object whose <xref href=\"System.Windows.Media.VisualCollection\"></xref> is returned."}],"pos":[4738,4841],"yaml":true},{"content":"Appends a <xref href=\"System.Windows.Media.Visual\"></xref> to the end of the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.","nodes":[{"pos":[0,136],"content":"Appends a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;&lt;/xref&gt;</ph> to the end of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.VisualCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Appends a <xref href=\"System.Windows.Media.Visual\"></xref> to the end of the <xref href=\"System.Windows.Media.VisualCollection\"></xref>."}],"pos":[5897,6034],"yaml":true},{"content":"Adding a <xref:System.Windows.Media.Visual> whose value is `null` is permitted and does not raise an exception.  \n  \n The <xref:System.Windows.Media.VisualCollection.Add%2A> method also sets up the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.  \n  \n If you need greater low-level control over the underlying storage implementation of visual child objects of a custom class, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods. When you use these methods, you must define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.","nodes":[{"pos":[0,111],"content":"Adding a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Visual&gt;</ph> whose value is <ph id=\"ph2\">`null`</ph> is permitted and does not raise an exception.","source":"Adding a <xref:System.Windows.Media.Visual> whose value is `null` is permitted and does not raise an exception."},{"pos":[118,346],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualCollection.Add%2A&gt;</ph> method also sets up the parent-child relationship between the parent visual, which is the owner of the <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, and the child <ph id=\"ph3\">`visual`</ph>.","source":"The <xref:System.Windows.Media.VisualCollection.Add%2A> method also sets up the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`."},{"pos":[353,755],"content":"If you need greater low-level control over the underlying storage implementation of visual child objects of a custom class, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods. When you use these methods, you must define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.","nodes":[{"content":"If you need greater low-level control over the underlying storage implementation of visual child objects of a custom class, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods. When you use these methods, you must define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.","pos":[0,402],"nodes":[{"content":"If you need greater low-level control over the underlying storage implementation of visual child objects of a custom class, consider using the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> methods.","pos":[0,264],"source":"If you need greater low-level control over the underlying storage implementation of visual child objects of a custom class, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods."},{"content":"When you use these methods, you must define your own storage implementation, and do not use <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.","pos":[265,402],"source":" When you use these methods, you must define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>."}]}]}],"pos":[6045,6807],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Media.Visual\"></xref> to append to the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.","nodes":[{"pos":[0,129],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;&lt;/xref&gt;</ph> to append to the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.VisualCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Windows.Media.Visual\"></xref> to append to the <xref href=\"System.Windows.Media.VisualCollection\"></xref>."}],"pos":[7517,7647],"yaml":true},{"content":"The index in the collection at which <code>visual</code> was added.","nodes":[{"pos":[0,67],"content":"The index in the collection at which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">visual</ph><ept id=\"p1\">&lt;/code&gt;</ept> was added.","source":"The index in the collection at which <code>visual</code> was added."}],"pos":[7703,7771],"yaml":true},{"content":"An <xref href=\"System.ArgumentException\"></xref> is thrown if the <xref href=\"System.Windows.Media.Visual\"></xref> is a root element.","nodes":[{"pos":[0,133],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ArgumentException\"&gt;&lt;/xref&gt;</ph> is thrown if the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;&lt;/xref&gt;</ph> is a root element.","source":"An <xref href=\"System.ArgumentException\"></xref> is thrown if the <xref href=\"System.Windows.Media.Visual\"></xref> is a root element."}],"pos":[7934,8068],"yaml":true},{"content":"Gets or sets the number of elements that the <xref href=\"System.Windows.Media.VisualCollection\"></xref> can contain.","nodes":[{"pos":[0,116],"content":"Gets or sets the number of elements that the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.VisualCollection\"&gt;&lt;/xref&gt;</ph> can contain.","source":"Gets or sets the number of elements that the <xref href=\"System.Windows.Media.VisualCollection\"></xref> can contain."}],"pos":[8993,9110],"yaml":true},{"content":"The value of <xref:System.Windows.Media.VisualCollection.Capacity%2A> is the number of elements that the <xref:System.Windows.Media.VisualCollection> is capable of storing. <xref:System.Windows.Media.VisualCollection.Count%2A> is the number of visuals that are actually in the <xref:System.Windows.Media.VisualCollection>. <xref:System.Windows.Media.VisualCollection.Capacity%2A> is always greater than or equal to <xref:System.Windows.Media.VisualCollection.Count%2A>. If <xref:System.Windows.Media.VisualCollection.Count%2A> exceeds <xref:System.Windows.Media.VisualCollection.Capacity%2A> while adding elements, the capacity of the <xref:System.Windows.Media.VisualCollection> is increased. By default <xref:System.Windows.Media.VisualCollection.Capacity%2A> is zero.","nodes":[{"pos":[0,770],"content":"The value of <xref:System.Windows.Media.VisualCollection.Capacity%2A> is the number of elements that the <xref:System.Windows.Media.VisualCollection> is capable of storing. <xref:System.Windows.Media.VisualCollection.Count%2A> is the number of visuals that are actually in the <xref:System.Windows.Media.VisualCollection>. <xref:System.Windows.Media.VisualCollection.Capacity%2A> is always greater than or equal to <xref:System.Windows.Media.VisualCollection.Count%2A>. If <xref:System.Windows.Media.VisualCollection.Count%2A> exceeds <xref:System.Windows.Media.VisualCollection.Capacity%2A> while adding elements, the capacity of the <xref:System.Windows.Media.VisualCollection> is increased. By default <xref:System.Windows.Media.VisualCollection.Capacity%2A> is zero.","nodes":[{"content":"The value of <xref:System.Windows.Media.VisualCollection.Capacity%2A> is the number of elements that the <xref:System.Windows.Media.VisualCollection> is capable of storing. <xref:System.Windows.Media.VisualCollection.Count%2A> is the number of visuals that are actually in the <xref:System.Windows.Media.VisualCollection>. <xref:System.Windows.Media.VisualCollection.Capacity%2A> is always greater than or equal to <xref:System.Windows.Media.VisualCollection.Count%2A>. If <xref:System.Windows.Media.VisualCollection.Count%2A> exceeds <xref:System.Windows.Media.VisualCollection.Capacity%2A> while adding elements, the capacity of the <xref:System.Windows.Media.VisualCollection> is increased. By default <xref:System.Windows.Media.VisualCollection.Capacity%2A> is zero.","pos":[0,770],"nodes":[{"content":"The value of <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> is the number of elements that the <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> is capable of storing.","pos":[0,172],"source":"The value of <xref:System.Windows.Media.VisualCollection.Capacity%2A> is the number of elements that the <xref:System.Windows.Media.VisualCollection> is capable of storing."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> is the number of visuals that are actually in the <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.","pos":[173,322],"source":" <xref:System.Windows.Media.VisualCollection.Count%2A> is the number of visuals that are actually in the <xref:System.Windows.Media.VisualCollection>."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> is always greater than or equal to <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph>.","pos":[323,469],"source":" <xref:System.Windows.Media.VisualCollection.Capacity%2A> is always greater than or equal to <xref:System.Windows.Media.VisualCollection.Count%2A>."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> exceeds <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> while adding elements, the capacity of the <ph id=\"ph3\">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> is increased.","pos":[470,693],"source":" If <xref:System.Windows.Media.VisualCollection.Count%2A> exceeds <xref:System.Windows.Media.VisualCollection.Capacity%2A> while adding elements, the capacity of the <xref:System.Windows.Media.VisualCollection> is increased."},{"content":"By default <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> is zero.","pos":[694,770],"source":" By default <xref:System.Windows.Media.VisualCollection.Capacity%2A> is zero."}]}]}],"pos":[9121,9892],"yaml":true,"extradata":"MT"},{"content":"The number of elements that the <xref href=\"System.Windows.Media.VisualCollection\"></xref> can contain.","nodes":[{"pos":[0,103],"content":"The number of elements that the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.VisualCollection\"&gt;&lt;/xref&gt;</ph> can contain.","source":"The number of elements that the <xref href=\"System.Windows.Media.VisualCollection\"></xref> can contain."}],"pos":[10005,10109],"yaml":true},{"content":"<xref href=\"System.Windows.Media.VisualCollection.Capacity\"></xref> is set to a value that is less than <xref href=\"System.Windows.Media.VisualCollection.Count\"></xref>.","nodes":[{"pos":[0,169],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.VisualCollection.Capacity\"&gt;&lt;/xref&gt;</ph> is set to a value that is less than <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.VisualCollection.Count\"&gt;&lt;/xref&gt;</ph>.","source":"<xref href=\"System.Windows.Media.VisualCollection.Capacity\"></xref> is set to a value that is less than <xref href=\"System.Windows.Media.VisualCollection.Count\"></xref>."}],"pos":[10297,10467],"yaml":true},{"content":"Removes all elements from the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.","nodes":[{"pos":[0,89],"content":"Removes all elements from the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.VisualCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Removes all elements from the <xref href=\"System.Windows.Media.VisualCollection\"></xref>."}],"pos":[11356,11446],"yaml":true},{"content":"The <xref:System.Windows.Media.VisualCollection.Count%2A> is reset to zero. The value of the <xref:System.Windows.Media.VisualCollection.Capacity%2A> remains unchanged. To reset the capacity of the <xref:System.Windows.Media.VisualCollection>, set the <xref:System.Windows.Media.VisualCollection.Capacity%2A> property to the desired size.","nodes":[{"pos":[0,338],"content":"The <xref:System.Windows.Media.VisualCollection.Count%2A> is reset to zero. The value of the <xref:System.Windows.Media.VisualCollection.Capacity%2A> remains unchanged. To reset the capacity of the <xref:System.Windows.Media.VisualCollection>, set the <xref:System.Windows.Media.VisualCollection.Capacity%2A> property to the desired size.","nodes":[{"content":"The <xref:System.Windows.Media.VisualCollection.Count%2A> is reset to zero. The value of the <xref:System.Windows.Media.VisualCollection.Capacity%2A> remains unchanged. To reset the capacity of the <xref:System.Windows.Media.VisualCollection>, set the <xref:System.Windows.Media.VisualCollection.Capacity%2A> property to the desired size.","pos":[0,338],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> is reset to zero.","pos":[0,75],"source":"The <xref:System.Windows.Media.VisualCollection.Count%2A> is reset to zero."},{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> remains unchanged.","pos":[76,168],"source":" The value of the <xref:System.Windows.Media.VisualCollection.Capacity%2A> remains unchanged."},{"content":"To reset the capacity of the <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, set the <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> property to the desired size.","pos":[169,338],"source":" To reset the capacity of the <xref:System.Windows.Media.VisualCollection>, set the <xref:System.Windows.Media.VisualCollection.Capacity%2A> property to the desired size."}]}]}],"pos":[11457,11796],"yaml":true,"extradata":"MT"},{"content":"Returns a <xref href=\"System.Boolean\"></xref> value that indicates whether the specified <xref href=\"System.Windows.Media.Visual\"></xref> is contained in the collection.","nodes":[{"pos":[0,169],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether the specified <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;&lt;/xref&gt;</ph> is contained in the collection.","source":"Returns a <xref href=\"System.Boolean\"></xref> value that indicates whether the specified <xref href=\"System.Windows.Media.Visual\"></xref> is contained in the collection."}],"pos":[12968,13138],"yaml":true},{"content":"The worst-case runtime scenario of this function is `O(n)`, where `n` is the number of items in the <xref:System.Windows.Media.VisualCollection>.","nodes":[{"pos":[0,145],"content":"The worst-case runtime scenario of this function is <ph id=\"ph1\">`O(n)`</ph>, where <ph id=\"ph2\">`n`</ph> is the number of items in the <ph id=\"ph3\">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.","source":"The worst-case runtime scenario of this function is `O(n)`, where `n` is the number of items in the <xref:System.Windows.Media.VisualCollection>."}],"pos":[13149,13295],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Media.Visual\"></xref> to search for in the collection.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;&lt;/xref&gt;</ph> to search for in the collection.","source":"The <xref href=\"System.Windows.Media.Visual\"></xref> to search for in the collection."}],"pos":[13469,13555],"yaml":true},{"content":"`true` if <code>visual</code> is contained in the collection; otherwise, `false`.","nodes":[{"pos":[0,81],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">visual</ph><ept id=\"p1\">&lt;/code&gt;</ept> is contained in the collection; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>visual</code> is contained in the collection; otherwise, `false`."}],"pos":[13613,13697],"yaml":true},{"content":"Copies the items in the collection to an array, starting at a specific array index.","nodes":[{"pos":[0,83],"content":"Copies the items in the collection to an array, starting at a specific array index.","nodes":[{"content":"Copies the items in the collection to an array, starting at a specific array index.","pos":[0,83]}]}],"pos":[14808,14892],"yaml":true},{"content":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements that are copied from the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.","nodes":[{"pos":[0,178],"content":"The one-dimensional <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> that is the destination of the elements that are copied from the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.VisualCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements that are copied from the <xref href=\"System.Windows.Media.VisualCollection\"></xref>."}],"pos":[15036,15215],"yaml":true},{"content":"The zero-based index in <code>array</code> at which copying begins.","nodes":[{"pos":[0,67],"content":"The zero-based index in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which copying begins.","source":"The zero-based index in <code>array</code> at which copying begins."}],"pos":[15275,15343],"yaml":true},{"content":"Copies the current collection into the passed <xref href=\"System.Windows.Media.Visual\"></xref> array.","nodes":[{"pos":[0,101],"content":"Copies the current collection into the passed <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;&lt;/xref&gt;</ph> array.","source":"Copies the current collection into the passed <xref href=\"System.Windows.Media.Visual\"></xref> array."}],"pos":[16490,16592],"yaml":true},{"content":"An array of <xref href=\"System.Windows.Media.Visual\"></xref> objects (which must have zero-based indexing).","nodes":[{"pos":[0,107],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;&lt;/xref&gt;</ph> objects (which must have zero-based indexing).","source":"An array of <xref href=\"System.Windows.Media.Visual\"></xref> objects (which must have zero-based indexing)."}],"pos":[16777,16885],"yaml":true},{"content":"The index to start copying from within <code>array</code>.","nodes":[{"pos":[0,58],"content":"The index to start copying from within <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The index to start copying from within <code>array</code>."}],"pos":[16945,17004],"yaml":true},{"content":"Gets the number of elements in the collection.","nodes":[{"pos":[0,46],"content":"Gets the number of elements in the collection.","nodes":[{"content":"Gets the number of elements in the collection.","pos":[0,46]}]}],"pos":[17986,18033],"yaml":true},{"content":"<xref:System.Windows.Media.VisualCollection.Count%2A> is the number of elements that are actually in the <xref:System.Windows.Media.VisualCollection>. <xref:System.Windows.Media.VisualCollection.Capacity%2A> is the number of elements that the <xref:System.Windows.Media.VisualCollection> is capable of storing.  \n  \n <xref:System.Windows.Media.VisualCollection.Count%2A> is always less than or equal to <xref:System.Windows.Media.VisualCollection.Capacity%2A>. If <xref:System.Windows.Media.VisualCollection.Count%2A> exceeds <xref:System.Windows.Media.VisualCollection.Capacity%2A> while adding elements, the capacity of the list is doubled by automatically reallocating the internal array before copying the old elements and adding the new elements.","nodes":[{"pos":[0,310],"content":"<xref:System.Windows.Media.VisualCollection.Count%2A> is the number of elements that are actually in the <xref:System.Windows.Media.VisualCollection>. <xref:System.Windows.Media.VisualCollection.Capacity%2A> is the number of elements that the <xref:System.Windows.Media.VisualCollection> is capable of storing.","nodes":[{"content":"<xref:System.Windows.Media.VisualCollection.Count%2A> is the number of elements that are actually in the <xref:System.Windows.Media.VisualCollection>. <xref:System.Windows.Media.VisualCollection.Capacity%2A> is the number of elements that the <xref:System.Windows.Media.VisualCollection> is capable of storing.","pos":[0,310],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.","pos":[0,150],"source":"<xref:System.Windows.Media.VisualCollection.Count%2A> is the number of elements that are actually in the <xref:System.Windows.Media.VisualCollection>."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> is the number of elements that the <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> is capable of storing.","pos":[151,310],"source":" <xref:System.Windows.Media.VisualCollection.Capacity%2A> is the number of elements that the <xref:System.Windows.Media.VisualCollection> is capable of storing."}]}]},{"pos":[317,751],"content":"<xref:System.Windows.Media.VisualCollection.Count%2A> is always less than or equal to <xref:System.Windows.Media.VisualCollection.Capacity%2A>. If <xref:System.Windows.Media.VisualCollection.Count%2A> exceeds <xref:System.Windows.Media.VisualCollection.Capacity%2A> while adding elements, the capacity of the list is doubled by automatically reallocating the internal array before copying the old elements and adding the new elements.","nodes":[{"content":"<xref:System.Windows.Media.VisualCollection.Count%2A> is always less than or equal to <xref:System.Windows.Media.VisualCollection.Capacity%2A>. If <xref:System.Windows.Media.VisualCollection.Count%2A> exceeds <xref:System.Windows.Media.VisualCollection.Capacity%2A> while adding elements, the capacity of the list is doubled by automatically reallocating the internal array before copying the old elements and adding the new elements.","pos":[0,434],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> is always less than or equal to <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph>.","pos":[0,143],"source":"<xref:System.Windows.Media.VisualCollection.Count%2A> is always less than or equal to <xref:System.Windows.Media.VisualCollection.Capacity%2A>."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> exceeds <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> while adding elements, the capacity of the list is doubled by automatically reallocating the internal array before copying the old elements and adding the new elements.","pos":[144,434],"source":" If <xref:System.Windows.Media.VisualCollection.Count%2A> exceeds <xref:System.Windows.Media.VisualCollection.Capacity%2A> while adding elements, the capacity of the list is doubled by automatically reallocating the internal array before copying the old elements and adding the new elements."}]}]}],"pos":[18044,18800],"yaml":true,"extradata":"MT"},{"content":"The number of elements that the <xref href=\"System.Windows.Media.VisualCollection\"></xref> contains.","nodes":[{"pos":[0,100],"content":"The number of elements that the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.VisualCollection\"&gt;&lt;/xref&gt;</ph> contains.","source":"The number of elements that the <xref href=\"System.Windows.Media.VisualCollection\"></xref> contains."}],"pos":[18905,19006],"yaml":true},{"content":"Retrieves an enumerator that can iterate through the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.","nodes":[{"pos":[0,112],"content":"Retrieves an enumerator that can iterate through the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.VisualCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves an enumerator that can iterate through the <xref href=\"System.Windows.Media.VisualCollection\"></xref>."}],"pos":[20039,20152],"yaml":true},{"content":"An enumerator that can be used to iterate through the collection.","nodes":[{"pos":[0,65],"content":"An enumerator that can be used to iterate through the collection.","nodes":[{"content":"An enumerator that can be used to iterate through the collection.","pos":[0,65]}]}],"pos":[20360,20426],"yaml":true},{"content":"Returns the zero-based index of the <xref href=\"System.Windows.Media.Visual\"></xref>.","nodes":[{"pos":[0,85],"content":"Returns the zero-based index of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the zero-based index of the <xref href=\"System.Windows.Media.Visual\"></xref>."}],"pos":[21536,21622],"yaml":true},{"content":"If the <xref:System.Windows.Media.Visual> is not in the <xref:System.Windows.Media.VisualCollection>, -1 is returned. If `null` is passed to the method, the index of the first entry that has `null` is returned. If there is no null entry, -1 is returned.","nodes":[{"pos":[0,253],"content":"If the <xref:System.Windows.Media.Visual> is not in the <xref:System.Windows.Media.VisualCollection>, -1 is returned. If `null` is passed to the method, the index of the first entry that has `null` is returned. If there is no null entry, -1 is returned.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Visual&gt;</ph> is not in the <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, -1 is returned.","pos":[0,117],"source":"If the <xref:System.Windows.Media.Visual> is not in the <xref:System.Windows.Media.VisualCollection>, -1 is returned."},{"content":"If <ph id=\"ph1\">`null`</ph> is passed to the method, the index of the first entry that has <ph id=\"ph2\">`null`</ph> is returned.","pos":[118,210],"source":" If `null` is passed to the method, the index of the first entry that has `null` is returned."},{"content":"If there is no null entry, -1 is returned.","pos":[211,253]}]}],"pos":[21633,21887],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Media.Visual\"></xref> to locate in the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.","nodes":[{"pos":[0,129],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;&lt;/xref&gt;</ph> to locate in the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.VisualCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Windows.Media.Visual\"></xref> to locate in the <xref href=\"System.Windows.Media.VisualCollection\"></xref>."}],"pos":[22059,22189],"yaml":true},{"content":"The index of the <xref href=\"System.Windows.Media.Visual\"></xref>.","nodes":[{"pos":[0,66],"content":"The index of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;&lt;/xref&gt;</ph>.","source":"The index of the <xref href=\"System.Windows.Media.Visual\"></xref>."}],"pos":[22245,22312],"yaml":true},{"content":"Inserts an element into the <xref href=\"System.Windows.Media.VisualCollection\"></xref> at the specified index.","nodes":[{"pos":[0,110],"content":"Inserts an element into the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.VisualCollection\"&gt;&lt;/xref&gt;</ph> at the specified index.","source":"Inserts an element into the <xref href=\"System.Windows.Media.VisualCollection\"></xref> at the specified index."}],"pos":[23470,23581],"yaml":true},{"content":"If <xref:System.Windows.Media.VisualCollection.Count%2A> already equals <xref:System.Windows.Media.VisualCollection.Capacity%2A>, the capacity of the <xref:System.Windows.Media.VisualCollection> is increased before the new <xref:System.Windows.Media.Visual> is inserted. If `index` is equal to <xref:System.Windows.Media.VisualCollection.Count%2A>, `visual` is added to the end of <xref:System.Windows.Media.VisualCollection>. Any existing visual objects that are equal to or greater than `index` are shifted to accommodate the new <xref:System.Windows.Media.Visual>, and their index values are updated.  \n  \n The <xref:System.Windows.Media.VisualCollection.Insert%2A> method also sets up the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.  \n  \n If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods. When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.","nodes":[{"pos":[0,603],"content":"If <xref:System.Windows.Media.VisualCollection.Count%2A> already equals <xref:System.Windows.Media.VisualCollection.Capacity%2A>, the capacity of the <xref:System.Windows.Media.VisualCollection> is increased before the new <xref:System.Windows.Media.Visual> is inserted. If `index` is equal to <xref:System.Windows.Media.VisualCollection.Count%2A>, `visual` is added to the end of <xref:System.Windows.Media.VisualCollection>. Any existing visual objects that are equal to or greater than `index` are shifted to accommodate the new <xref:System.Windows.Media.Visual>, and their index values are updated.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> already equals <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph>, the capacity of the <ph id=\"ph3\">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> is increased before the new <ph id=\"ph4\">&lt;xref:System.Windows.Media.Visual&gt;</ph> is inserted.","pos":[0,270],"source":"If <xref:System.Windows.Media.VisualCollection.Count%2A> already equals <xref:System.Windows.Media.VisualCollection.Capacity%2A>, the capacity of the <xref:System.Windows.Media.VisualCollection> is increased before the new <xref:System.Windows.Media.Visual> is inserted."},{"content":"If <ph id=\"ph1\">`index`</ph> is equal to <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph>, <ph id=\"ph3\">`visual`</ph> is added to the end of <ph id=\"ph4\">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.","pos":[271,426],"source":" If `index` is equal to <xref:System.Windows.Media.VisualCollection.Count%2A>, `visual` is added to the end of <xref:System.Windows.Media.VisualCollection>."},{"content":"Any existing visual objects that are equal to or greater than <ph id=\"ph1\">`index`</ph> are shifted to accommodate the new <ph id=\"ph2\">&lt;xref:System.Windows.Media.Visual&gt;</ph>, and their index values are updated.","pos":[427,603],"source":" Any existing visual objects that are equal to or greater than `index` are shifted to accommodate the new <xref:System.Windows.Media.Visual>, and their index values are updated."}]},{"pos":[610,841],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualCollection.Insert%2A&gt;</ph> method also sets up the parent-child relationship between the parent visual, which is the owner of the <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, and the child <ph id=\"ph3\">`visual`</ph>.","source":"The <xref:System.Windows.Media.VisualCollection.Insert%2A> method also sets up the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`."},{"pos":[848,1227],"content":"If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods. When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.","nodes":[{"content":"If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods. When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.","pos":[0,379],"nodes":[{"content":"If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> methods.","pos":[0,246],"source":"If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods."},{"content":"When you use these methods, you define your own storage implementation, and do not use <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.","pos":[247,379],"source":" When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>."}]}]}],"pos":[23592,24826],"yaml":true,"extradata":"MT"},{"content":"The zero-based index at which the value should be inserted.","nodes":[{"pos":[0,59],"content":"The zero-based index at which the value should be inserted.","nodes":[{"content":"The zero-based index at which the value should be inserted.","pos":[0,59]}]}],"pos":[24993,25053],"yaml":true},{"content":"The <xref href=\"System.Windows.Media.Visual\"></xref> to insert into the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;&lt;/xref&gt;</ph> to insert into the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.VisualCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Windows.Media.Visual\"></xref> to insert into the <xref href=\"System.Windows.Media.VisualCollection\"></xref>."}],"pos":[25129,25261],"yaml":true},{"content":"<code>index</code> is less than zero or greater than <xref href=\"System.Windows.Media.VisualCollection.Count\"></xref>.","nodes":[{"pos":[0,118],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero or greater than <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.VisualCollection.Count\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is less than zero or greater than <xref href=\"System.Windows.Media.VisualCollection.Count\"></xref>."}],"pos":[25447,25566],"yaml":true},{"content":"Gets a value that indicates whether the <xref href=\"System.Windows.Media.VisualCollection\"></xref> is read-only.","nodes":[{"pos":[0,112],"content":"Gets a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.VisualCollection\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"Gets a value that indicates whether the <xref href=\"System.Windows.Media.VisualCollection\"></xref> is read-only."}],"pos":[26503,26616],"yaml":true},{"content":"This property is always `false` for all <xref:System.Windows.Media.VisualCollection> objects.","nodes":[{"pos":[0,93],"content":"This property is always <ph id=\"ph1\">`false`</ph> for all <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> objects.","source":"This property is always `false` for all <xref:System.Windows.Media.VisualCollection> objects."}],"pos":[26627,26721],"yaml":true,"extradata":"MT"},{"content":"The value that indicates whether the <xref href=\"System.Windows.Media.VisualCollection\"></xref> is read-only.","nodes":[{"pos":[0,109],"content":"The value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.VisualCollection\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"The value that indicates whether the <xref href=\"System.Windows.Media.VisualCollection\"></xref> is read-only."}],"pos":[26834,26944],"yaml":true},{"content":"Gets a value that indicates whether access to the <xref href=\"System.Windows.Media.VisualCollection\"></xref> is synchronized (thread-safe).","nodes":[{"pos":[0,139],"content":"Gets a value that indicates whether access to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.VisualCollection\"&gt;&lt;/xref&gt;</ph> is synchronized (thread-safe).","source":"Gets a value that indicates whether access to the <xref href=\"System.Windows.Media.VisualCollection\"></xref> is synchronized (thread-safe)."}],"pos":[27984,28124],"yaml":true},{"content":"This property is always `false` for all <xref:System.Windows.Media.VisualCollection> objects.","nodes":[{"pos":[0,93],"content":"This property is always <ph id=\"ph1\">`false`</ph> for all <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> objects.","source":"This property is always `false` for all <xref:System.Windows.Media.VisualCollection> objects."}],"pos":[28135,28229],"yaml":true,"extradata":"MT"},{"content":"The value that indicates whether the <xref href=\"System.Windows.Media.VisualCollection\"></xref> is synchronized (thread-safe).","nodes":[{"pos":[0,126],"content":"The value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.VisualCollection\"&gt;&lt;/xref&gt;</ph> is synchronized (thread-safe).","source":"The value that indicates whether the <xref href=\"System.Windows.Media.VisualCollection\"></xref> is synchronized (thread-safe)."}],"pos":[28346,28473],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Windows.Media.Visual\"></xref> that is stored at the zero-based index of the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.","nodes":[{"pos":[0,171],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;&lt;/xref&gt;</ph> that is stored at the zero-based index of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.VisualCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the <xref href=\"System.Windows.Media.Visual\"></xref> that is stored at the zero-based index of the <xref href=\"System.Windows.Media.VisualCollection\"></xref>."}],"pos":[29498,29670],"yaml":true},{"content":"This property provides the ability to access a specific <xref:System.Windows.Media.Visual> in the <xref:System.Windows.Media.VisualCollection> by using an index.","nodes":[{"pos":[0,161],"content":"This property provides the ability to access a specific <xref:System.Windows.Media.Visual> in the <xref:System.Windows.Media.VisualCollection> by using an index.","nodes":[{"content":"This property provides the ability to access a specific <ph id=\"ph1\">&lt;xref:System.Windows.Media.Visual&gt;</ph> in the <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> by using an index.","pos":[0,161],"source":"This property provides the ability to access a specific <xref:System.Windows.Media.Visual> in the <xref:System.Windows.Media.VisualCollection> by using an index."}]}],"pos":[29681,29843],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the <xref href=\"System.Windows.Media.VisualCollection\"></xref> from which to get or set the <xref href=\"System.Windows.Media.Visual\"></xref>.","nodes":[{"pos":[0,165],"content":"The zero-based index of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.VisualCollection\"&gt;&lt;/xref&gt;</ph> from which to get or set the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;&lt;/xref&gt;</ph>.","source":"The zero-based index of the <xref href=\"System.Windows.Media.VisualCollection\"></xref> from which to get or set the <xref href=\"System.Windows.Media.Visual\"></xref>."}],"pos":[30007,30173],"yaml":true},{"content":"The <xref href=\"System.Windows.Media.Visual\"></xref> that is stored at <code>index</code>.","nodes":[{"pos":[0,90],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;&lt;/xref&gt;</ph> that is stored at <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.Windows.Media.Visual\"></xref> that is stored at <code>index</code>."}],"pos":[30244,30335],"yaml":true},{"content":"<code>index</code> is less than zero, or <code>index</code> is equal to or greater than <xref href=\"System.Windows.Media.VisualCollection.Count\"></xref>.","nodes":[{"pos":[0,153],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero, or <ph id=\"ph2\">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.VisualCollection.Count\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is less than zero, or <code>index</code> is equal to or greater than <xref href=\"System.Windows.Media.VisualCollection.Count\"></xref>."}],"pos":[30519,30673],"yaml":true},{"content":"The new child element already has a parent, or the value at the specified index is not `null`.","nodes":[{"pos":[0,94],"content":"The new child element already has a parent, or the value at the specified index is not <ph id=\"ph1\">`null`</ph>.","source":"The new child element already has a parent, or the value at the specified index is not `null`."}],"pos":[30767,30862],"yaml":true},{"content":"Removes the specified <xref href=\"System.Windows.Media.Visual\"></xref> object from the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.","nodes":[{"pos":[0,146],"content":"Removes the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;&lt;/xref&gt;</ph> object from the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.VisualCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Removes the specified <xref href=\"System.Windows.Media.Visual\"></xref> object from the <xref href=\"System.Windows.Media.VisualCollection\"></xref>."}],"pos":[31862,32009],"yaml":true},{"content":"The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated. If `visual` is `null`, the first `null` entry is removed. Note that removing a `null` entry is linear in the size of the collection.  \n  \n The <xref:System.Windows.Media.VisualCollection.Remove%2A> method also removes the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.  \n  \n If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods. When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.","nodes":[{"pos":[0,262],"content":"The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated. If `visual` is `null`, the first `null` entry is removed. Note that removing a `null` entry is linear in the size of the collection.","nodes":[{"content":"The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.","pos":[0,129]},{"content":"If <ph id=\"ph1\">`visual`</ph> is <ph id=\"ph2\">`null`</ph>, the first <ph id=\"ph3\">`null`</ph> entry is removed.","pos":[130,187],"source":" If `visual` is `null`, the first `null` entry is removed."},{"content":"Note that removing a <ph id=\"ph1\">`null`</ph> entry is linear in the size of the collection.","pos":[188,262],"source":" Note that removing a `null` entry is linear in the size of the collection."}]},{"pos":[269,500],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualCollection.Remove%2A&gt;</ph> method also removes the parent-child relationship between the parent visual, which is the owner of the <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, and the child <ph id=\"ph3\">`visual`</ph>.","source":"The <xref:System.Windows.Media.VisualCollection.Remove%2A> method also removes the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`."},{"pos":[507,886],"content":"If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods. When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.","nodes":[{"content":"If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods. When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.","pos":[0,379],"nodes":[{"content":"If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> methods.","pos":[0,246],"source":"If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods."},{"content":"When you use these methods, you define your own storage implementation, and do not use <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.","pos":[247,379],"source":" When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>."}]}]}],"pos":[32020,32913],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Media.Visual\"></xref> to remove from the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Visual\"&gt;&lt;/xref&gt;</ph> to remove from the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.VisualCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Windows.Media.Visual\"></xref> to remove from the <xref href=\"System.Windows.Media.VisualCollection\"></xref>."}],"pos":[33085,33217],"yaml":true},{"content":"Removes the visual object at the specified index in the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.","nodes":[{"pos":[0,115],"content":"Removes the visual object at the specified index in the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.VisualCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Removes the visual object at the specified index in the <xref href=\"System.Windows.Media.VisualCollection\"></xref>."}],"pos":[34278,34394],"yaml":true},{"content":"The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.  \n  \n The <xref:System.Windows.Media.VisualCollection.RemoveAt%2A> method also removes the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.  \n  \n If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods. When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.","nodes":[{"pos":[0,129],"content":"The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.","nodes":[{"content":"The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.","pos":[0,129]}]},{"pos":[136,369],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualCollection.RemoveAt%2A&gt;</ph> method also removes the parent-child relationship between the parent visual, which is the owner of the <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, and the child <ph id=\"ph3\">`visual`</ph>.","source":"The <xref:System.Windows.Media.VisualCollection.RemoveAt%2A> method also removes the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`."},{"pos":[376,755],"content":"If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods. When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.","nodes":[{"content":"If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods. When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.","pos":[0,379],"nodes":[{"content":"If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> methods.","pos":[0,246],"source":"If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods."},{"content":"When you use these methods, you define your own storage implementation, and do not use <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.","pos":[247,379],"source":" When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>."}]}]}],"pos":[34405,35167],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the visual to remove.","nodes":[{"pos":[0,45],"content":"The zero-based index of the visual to remove.","nodes":[{"content":"The zero-based index of the visual to remove.","pos":[0,45]}]}],"pos":[35300,35346],"yaml":true},{"content":"<code>index</code> is less than zero, or <code>index</code> is equal to or greater than <xref href=\"System.Windows.Media.VisualCollection.Count\"></xref>.","nodes":[{"pos":[0,153],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero, or <ph id=\"ph2\">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.VisualCollection.Count\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is less than zero, or <code>index</code> is equal to or greater than <xref href=\"System.Windows.Media.VisualCollection.Count\"></xref>."}],"pos":[35534,35688],"yaml":true},{"content":"Removes a range of visual objects from the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.","nodes":[{"pos":[0,102],"content":"Removes a range of visual objects from the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.VisualCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Removes a range of visual objects from the <xref href=\"System.Windows.Media.VisualCollection\"></xref>."}],"pos":[36752,36855],"yaml":true},{"content":"The visual objects that follow the removed objects are shifted to occupy the vacated positions, and their index values are updated.  \n  \n The <xref:System.Windows.Media.VisualCollection.RemoveRange%2A> method also removes the parent-child relationships between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the range of child visuals.  \n  \n If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods. When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.","nodes":[{"pos":[0,131],"content":"The visual objects that follow the removed objects are shifted to occupy the vacated positions, and their index values are updated.","nodes":[{"content":"The visual objects that follow the removed objects are shifted to occupy the vacated positions, and their index values are updated.","pos":[0,131]}]},{"pos":[138,383],"content":"The <xref:System.Windows.Media.VisualCollection.RemoveRange%2A> method also removes the parent-child relationships between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the range of child visuals.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualCollection.RemoveRange%2A&gt;</ph> method also removes the parent-child relationships between the parent visual, which is the owner of the <ph id=\"ph2\">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, and the range of child visuals.","pos":[0,245],"source":"The <xref:System.Windows.Media.VisualCollection.RemoveRange%2A> method also removes the parent-child relationships between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the range of child visuals."}]},{"pos":[390,769],"content":"If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods. When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.","nodes":[{"content":"If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods. When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.","pos":[0,379],"nodes":[{"content":"If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> methods.","pos":[0,246],"source":"If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods."},{"content":"When you use these methods, you define your own storage implementation, and do not use <ph id=\"ph1\">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.","pos":[247,379],"source":" When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>."}]}]}],"pos":[36866,37642],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the range of elements to remove.","nodes":[{"pos":[0,56],"content":"The zero-based index of the range of elements to remove.","nodes":[{"content":"The zero-based index of the range of elements to remove.","pos":[0,56]}]}],"pos":[37789,37846],"yaml":true},{"content":"The number of elements to remove.","nodes":[{"pos":[0,33],"content":"The number of elements to remove.","nodes":[{"content":"The number of elements to remove.","pos":[0,33]}]}],"pos":[37906,37940],"yaml":true},{"content":"<code>index</code> is less than zero or <code>count</code> is less than zero.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero or <code>count</code> is less than zero."}],"pos":[38131,38209],"yaml":true},{"content":"<code>index</code> and <code>count</code> do not refer to a valid range of elements in the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.","nodes":[{"pos":[0,150],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> and <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> do not refer to a valid range of elements in the <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.VisualCollection\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> and <code>count</code> do not refer to a valid range of elements in the <xref href=\"System.Windows.Media.VisualCollection\"></xref>."}],"pos":[38303,38454],"yaml":true},{"content":"Gets an object that can be used to synchronize access to the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.","nodes":[{"pos":[0,120],"content":"Gets an object that can be used to synchronize access to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.VisualCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Gets an object that can be used to synchronize access to the <xref href=\"System.Windows.Media.VisualCollection\"></xref>."}],"pos":[39379,39500],"yaml":true},{"content":"A value of type <xref href=\"System.Object\"></xref>.","nodes":[{"pos":[0,51],"content":"A value of type <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>.","source":"A value of type <xref href=\"System.Object\"></xref>."}],"pos":[39612,39664],"yaml":true},{"content":"This member supports the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code. For a description of this member, see <xref href=\"System.Collections.IEnumerable.GetEnumerator\"></xref>.","nodes":[{"pos":[0,272],"content":"This member supports the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code. For a description of this member, see <xref href=\"System.Collections.IEnumerable.GetEnumerator\"></xref>.","nodes":[{"content":"This member supports the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","pos":[0,167],"source":"This member supports the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code."},{"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerable.GetEnumerator\"&gt;&lt;/xref&gt;</ph>.","pos":[168,272],"source":" For a description of this member, see <xref href=\"System.Collections.IEnumerable.GetEnumerator\"></xref>."}]}],"pos":[40843,41116],"yaml":true},{"content":"An object that can be used to iterate through the collection.","nodes":[{"pos":[0,61],"content":"An object that can be used to iterate through the collection.","nodes":[{"content":"An object that can be used to iterate through the collection.","pos":[0,61]}]}],"pos":[41293,41355],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.VisualCollection\n  commentId: T:System.Windows.Media.VisualCollection\n  id: VisualCollection\n  children:\n  - System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)\n  - System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)\n  - System.Windows.Media.VisualCollection.Capacity\n  - System.Windows.Media.VisualCollection.Clear\n  - System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)\n  - System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)\n  - System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)\n  - System.Windows.Media.VisualCollection.Count\n  - System.Windows.Media.VisualCollection.GetEnumerator\n  - System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)\n  - System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)\n  - System.Windows.Media.VisualCollection.IsReadOnly\n  - System.Windows.Media.VisualCollection.IsSynchronized\n  - System.Windows.Media.VisualCollection.Item(System.Int32)\n  - System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)\n  - System.Windows.Media.VisualCollection.RemoveAt(System.Int32)\n  - System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)\n  - System.Windows.Media.VisualCollection.SyncRoot\n  - System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator\n  langs:\n  - csharp\n  name: VisualCollection\n  nameWithType: VisualCollection\n  fullName: System.Windows.Media.VisualCollection\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Represents an ordered collection of <xref href=\"System.Windows.Media.Visual\"></xref> objects.\n  remarks: A <xref:System.Windows.Media.VisualCollection> has implied context affinity. If a procedure attempts to access the <xref:System.Windows.Media.VisualCollection> from a different context than the context of the owning <xref:System.Windows.Media.ContainerVisual>, an exception is thrown.\n  example:\n  - \"The following example shows how to create a <xref:System.Windows.Media.VisualCollection> and add members to it.  \\n  \\n [!code-csharp[DrawingVisualSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#100)]\\n [!code-vb[DrawingVisualSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#100)]  \\n  \\n> [!NOTE]\\n>  For the complete sample, see [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994).\"\n  syntax:\n    content: 'public sealed class VisualCollection : System.Collections.ICollection'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.ICollection\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)\n  commentId: M:System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)\n  id: '#ctor(System.Windows.Media.Visual)'\n  parent: System.Windows.Media.VisualCollection\n  langs:\n  - csharp\n  name: VisualCollection(Visual)\n  nameWithType: VisualCollection.VisualCollection(Visual)\n  fullName: VisualCollection.VisualCollection(Visual)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.VisualCollection\"></xref> class.\n  syntax:\n    content: public VisualCollection (System.Windows.Media.Visual parent);\n    parameters:\n    - id: parent\n      type: System.Windows.Media.Visual\n      description: The parent visual object whose <xref href=\"System.Windows.Media.VisualCollection\"></xref> is returned.\n  overload: System.Windows.Media.VisualCollection.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)\n  commentId: M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)\n  id: Add(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualCollection\n  langs:\n  - csharp\n  name: Add(Visual)\n  nameWithType: VisualCollection.Add(Visual)\n  fullName: VisualCollection.Add(Visual)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Appends a <xref href=\"System.Windows.Media.Visual\"></xref> to the end of the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.\n  remarks: \"Adding a <xref:System.Windows.Media.Visual> whose value is `null` is permitted and does not raise an exception.  \\n  \\n The <xref:System.Windows.Media.VisualCollection.Add%2A> method also sets up the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.  \\n  \\n If you need greater low-level control over the underlying storage implementation of visual child objects of a custom class, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods. When you use these methods, you must define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.\"\n  example:\n  - \"The following example shows how to create a <xref:System.Windows.Media.VisualCollection> and add members to it.  \\n  \\n [!code-csharp[DrawingVisualSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#100)]\\n [!code-vb[DrawingVisualSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#100)]  \\n  \\n> [!NOTE]\\n>  For the complete sample, see [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994).\"\n  syntax:\n    content: public int Add (System.Windows.Media.Visual visual);\n    parameters:\n    - id: visual\n      type: System.Windows.Media.Visual\n      description: The <xref href=\"System.Windows.Media.Visual\"></xref> to append to the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.\n    return:\n      type: System.Int32\n      description: The index in the collection at which <code>visual</code> was added.\n  overload: System.Windows.Media.VisualCollection.Add*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An <xref href=\"System.ArgumentException\"></xref> is thrown if the <xref href=\"System.Windows.Media.Visual\"></xref> is a root element.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.VisualCollection.Capacity\n  commentId: P:System.Windows.Media.VisualCollection.Capacity\n  id: Capacity\n  parent: System.Windows.Media.VisualCollection\n  langs:\n  - csharp\n  name: Capacity\n  nameWithType: VisualCollection.Capacity\n  fullName: VisualCollection.Capacity\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets or sets the number of elements that the <xref href=\"System.Windows.Media.VisualCollection\"></xref> can contain.\n  remarks: The value of <xref:System.Windows.Media.VisualCollection.Capacity%2A> is the number of elements that the <xref:System.Windows.Media.VisualCollection> is capable of storing. <xref:System.Windows.Media.VisualCollection.Count%2A> is the number of visuals that are actually in the <xref:System.Windows.Media.VisualCollection>. <xref:System.Windows.Media.VisualCollection.Capacity%2A> is always greater than or equal to <xref:System.Windows.Media.VisualCollection.Count%2A>. If <xref:System.Windows.Media.VisualCollection.Count%2A> exceeds <xref:System.Windows.Media.VisualCollection.Capacity%2A> while adding elements, the capacity of the <xref:System.Windows.Media.VisualCollection> is increased. By default <xref:System.Windows.Media.VisualCollection.Capacity%2A> is zero.\n  syntax:\n    content: public int Capacity { get; set; }\n    return:\n      type: System.Int32\n      description: The number of elements that the <xref href=\"System.Windows.Media.VisualCollection\"></xref> can contain.\n  overload: System.Windows.Media.VisualCollection.Capacity*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <xref href=\"System.Windows.Media.VisualCollection.Capacity\"></xref> is set to a value that is less than <xref href=\"System.Windows.Media.VisualCollection.Count\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.VisualCollection.Clear\n  commentId: M:System.Windows.Media.VisualCollection.Clear\n  id: Clear\n  parent: System.Windows.Media.VisualCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: VisualCollection.Clear()\n  fullName: VisualCollection.Clear()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Removes all elements from the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.\n  remarks: The <xref:System.Windows.Media.VisualCollection.Count%2A> is reset to zero. The value of the <xref:System.Windows.Media.VisualCollection.Capacity%2A> remains unchanged. To reset the capacity of the <xref:System.Windows.Media.VisualCollection>, set the <xref:System.Windows.Media.VisualCollection.Capacity%2A> property to the desired size.\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Windows.Media.VisualCollection.Clear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)\n  commentId: M:System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)\n  id: Contains(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualCollection\n  langs:\n  - csharp\n  name: Contains(Visual)\n  nameWithType: VisualCollection.Contains(Visual)\n  fullName: VisualCollection.Contains(Visual)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Returns a <xref href=\"System.Boolean\"></xref> value that indicates whether the specified <xref href=\"System.Windows.Media.Visual\"></xref> is contained in the collection.\n  remarks: The worst-case runtime scenario of this function is `O(n)`, where `n` is the number of items in the <xref:System.Windows.Media.VisualCollection>.\n  syntax:\n    content: public bool Contains (System.Windows.Media.Visual visual);\n    parameters:\n    - id: visual\n      type: System.Windows.Media.Visual\n      description: The <xref href=\"System.Windows.Media.Visual\"></xref> to search for in the collection.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>visual</code> is contained in the collection; otherwise, `false`.'\n  overload: System.Windows.Media.VisualCollection.Contains*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)\n  commentId: M:System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)\n  id: CopyTo(System.Array,System.Int32)\n  parent: System.Windows.Media.VisualCollection\n  langs:\n  - csharp\n  name: CopyTo(Array, Int32)\n  nameWithType: VisualCollection.CopyTo(Array, Int32)\n  fullName: VisualCollection.CopyTo(Array, Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Copies the items in the collection to an array, starting at a specific array index.\n  syntax:\n    content: public void CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements that are copied from the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in <code>array</code> at which copying begins.\n  overload: System.Windows.Media.VisualCollection.CopyTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)\n  commentId: M:System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)\n  id: CopyTo(System.Windows.Media.Visual[],System.Int32)\n  parent: System.Windows.Media.VisualCollection\n  langs:\n  - csharp\n  name: CopyTo(Visual[], Int32)\n  nameWithType: VisualCollection.CopyTo(Visual[], Int32)\n  fullName: VisualCollection.CopyTo(Visual[], Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Copies the current collection into the passed <xref href=\"System.Windows.Media.Visual\"></xref> array.\n  syntax:\n    content: public void CopyTo (System.Windows.Media.Visual[] array, int index);\n    parameters:\n    - id: array\n      type: System.Windows.Media.Visual[]\n      description: An array of <xref href=\"System.Windows.Media.Visual\"></xref> objects (which must have zero-based indexing).\n    - id: index\n      type: System.Int32\n      description: The index to start copying from within <code>array</code>.\n  overload: System.Windows.Media.VisualCollection.CopyTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.VisualCollection.Count\n  commentId: P:System.Windows.Media.VisualCollection.Count\n  id: Count\n  parent: System.Windows.Media.VisualCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: VisualCollection.Count\n  fullName: VisualCollection.Count\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets the number of elements in the collection.\n  remarks: \"<xref:System.Windows.Media.VisualCollection.Count%2A> is the number of elements that are actually in the <xref:System.Windows.Media.VisualCollection>. <xref:System.Windows.Media.VisualCollection.Capacity%2A> is the number of elements that the <xref:System.Windows.Media.VisualCollection> is capable of storing.  \\n  \\n <xref:System.Windows.Media.VisualCollection.Count%2A> is always less than or equal to <xref:System.Windows.Media.VisualCollection.Capacity%2A>. If <xref:System.Windows.Media.VisualCollection.Count%2A> exceeds <xref:System.Windows.Media.VisualCollection.Capacity%2A> while adding elements, the capacity of the list is doubled by automatically reallocating the internal array before copying the old elements and adding the new elements.\"\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of elements that the <xref href=\"System.Windows.Media.VisualCollection\"></xref> contains.\n  overload: System.Windows.Media.VisualCollection.Count*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.VisualCollection.GetEnumerator\n  commentId: M:System.Windows.Media.VisualCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Windows.Media.VisualCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: VisualCollection.GetEnumerator()\n  fullName: VisualCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Retrieves an enumerator that can iterate through the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.\n  syntax:\n    content: public System.Windows.Media.VisualCollection.Enumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Windows.Media.VisualCollection+Enumerator\n      description: An enumerator that can be used to iterate through the collection.\n  overload: System.Windows.Media.VisualCollection.GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)\n  commentId: M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)\n  id: IndexOf(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualCollection\n  langs:\n  - csharp\n  name: IndexOf(Visual)\n  nameWithType: VisualCollection.IndexOf(Visual)\n  fullName: VisualCollection.IndexOf(Visual)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Returns the zero-based index of the <xref href=\"System.Windows.Media.Visual\"></xref>.\n  remarks: If the <xref:System.Windows.Media.Visual> is not in the <xref:System.Windows.Media.VisualCollection>, -1 is returned. If `null` is passed to the method, the index of the first entry that has `null` is returned. If there is no null entry, -1 is returned.\n  syntax:\n    content: public int IndexOf (System.Windows.Media.Visual visual);\n    parameters:\n    - id: visual\n      type: System.Windows.Media.Visual\n      description: The <xref href=\"System.Windows.Media.Visual\"></xref> to locate in the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.\n    return:\n      type: System.Int32\n      description: The index of the <xref href=\"System.Windows.Media.Visual\"></xref>.\n  overload: System.Windows.Media.VisualCollection.IndexOf*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)\n  commentId: M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)\n  id: Insert(System.Int32,System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualCollection\n  langs:\n  - csharp\n  name: Insert(Int32, Visual)\n  nameWithType: VisualCollection.Insert(Int32, Visual)\n  fullName: VisualCollection.Insert(Int32, Visual)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Inserts an element into the <xref href=\"System.Windows.Media.VisualCollection\"></xref> at the specified index.\n  remarks: \"If <xref:System.Windows.Media.VisualCollection.Count%2A> already equals <xref:System.Windows.Media.VisualCollection.Capacity%2A>, the capacity of the <xref:System.Windows.Media.VisualCollection> is increased before the new <xref:System.Windows.Media.Visual> is inserted. If `index` is equal to <xref:System.Windows.Media.VisualCollection.Count%2A>, `visual` is added to the end of <xref:System.Windows.Media.VisualCollection>. Any existing visual objects that are equal to or greater than `index` are shifted to accommodate the new <xref:System.Windows.Media.Visual>, and their index values are updated.  \\n  \\n The <xref:System.Windows.Media.VisualCollection.Insert%2A> method also sets up the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.  \\n  \\n If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods. When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.\"\n  syntax:\n    content: public void Insert (int index, System.Windows.Media.Visual visual);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which the value should be inserted.\n    - id: visual\n      type: System.Windows.Media.Visual\n      description: The <xref href=\"System.Windows.Media.Visual\"></xref> to insert into the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.\n  overload: System.Windows.Media.VisualCollection.Insert*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero or greater than <xref href=\"System.Windows.Media.VisualCollection.Count\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.VisualCollection.IsReadOnly\n  commentId: P:System.Windows.Media.VisualCollection.IsReadOnly\n  id: IsReadOnly\n  parent: System.Windows.Media.VisualCollection\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: VisualCollection.IsReadOnly\n  fullName: VisualCollection.IsReadOnly\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets a value that indicates whether the <xref href=\"System.Windows.Media.VisualCollection\"></xref> is read-only.\n  remarks: This property is always `false` for all <xref:System.Windows.Media.VisualCollection> objects.\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: The value that indicates whether the <xref href=\"System.Windows.Media.VisualCollection\"></xref> is read-only.\n  overload: System.Windows.Media.VisualCollection.IsReadOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.VisualCollection.IsSynchronized\n  commentId: P:System.Windows.Media.VisualCollection.IsSynchronized\n  id: IsSynchronized\n  parent: System.Windows.Media.VisualCollection\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: VisualCollection.IsSynchronized\n  fullName: VisualCollection.IsSynchronized\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets a value that indicates whether access to the <xref href=\"System.Windows.Media.VisualCollection\"></xref> is synchronized (thread-safe).\n  remarks: This property is always `false` for all <xref:System.Windows.Media.VisualCollection> objects.\n  syntax:\n    content: public bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: The value that indicates whether the <xref href=\"System.Windows.Media.VisualCollection\"></xref> is synchronized (thread-safe).\n  overload: System.Windows.Media.VisualCollection.IsSynchronized*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.VisualCollection.Item(System.Int32)\n  commentId: P:System.Windows.Media.VisualCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Windows.Media.VisualCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: VisualCollection.Item(Int32)\n  fullName: VisualCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets or sets the <xref href=\"System.Windows.Media.Visual\"></xref> that is stored at the zero-based index of the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.\n  remarks: This property provides the ability to access a specific <xref:System.Windows.Media.Visual> in the <xref:System.Windows.Media.VisualCollection> by using an index.\n  syntax:\n    content: public System.Windows.Media.Visual this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the <xref href=\"System.Windows.Media.VisualCollection\"></xref> from which to get or set the <xref href=\"System.Windows.Media.Visual\"></xref>.\n    return:\n      type: System.Windows.Media.Visual\n      description: The <xref href=\"System.Windows.Media.Visual\"></xref> that is stored at <code>index</code>.\n  overload: System.Windows.Media.VisualCollection.Item*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero, or <code>index</code> is equal to or greater than <xref href=\"System.Windows.Media.VisualCollection.Count\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The new child element already has a parent, or the value at the specified index is not `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)\n  commentId: M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)\n  id: Remove(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualCollection\n  langs:\n  - csharp\n  name: Remove(Visual)\n  nameWithType: VisualCollection.Remove(Visual)\n  fullName: VisualCollection.Remove(Visual)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Removes the specified <xref href=\"System.Windows.Media.Visual\"></xref> object from the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.\n  remarks: \"The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated. If `visual` is `null`, the first `null` entry is removed. Note that removing a `null` entry is linear in the size of the collection.  \\n  \\n The <xref:System.Windows.Media.VisualCollection.Remove%2A> method also removes the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.  \\n  \\n If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods. When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.\"\n  syntax:\n    content: public void Remove (System.Windows.Media.Visual visual);\n    parameters:\n    - id: visual\n      type: System.Windows.Media.Visual\n      description: The <xref href=\"System.Windows.Media.Visual\"></xref> to remove from the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.\n  overload: System.Windows.Media.VisualCollection.Remove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.VisualCollection.RemoveAt(System.Int32)\n  commentId: M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Windows.Media.VisualCollection\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: VisualCollection.RemoveAt(Int32)\n  fullName: VisualCollection.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Removes the visual object at the specified index in the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.\n  remarks: \"The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.  \\n  \\n The <xref:System.Windows.Media.VisualCollection.RemoveAt%2A> method also removes the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.  \\n  \\n If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods. When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.\"\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the visual to remove.\n  overload: System.Windows.Media.VisualCollection.RemoveAt*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero, or <code>index</code> is equal to or greater than <xref href=\"System.Windows.Media.VisualCollection.Count\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)\n  commentId: M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)\n  id: RemoveRange(System.Int32,System.Int32)\n  parent: System.Windows.Media.VisualCollection\n  langs:\n  - csharp\n  name: RemoveRange(Int32, Int32)\n  nameWithType: VisualCollection.RemoveRange(Int32, Int32)\n  fullName: VisualCollection.RemoveRange(Int32, Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Removes a range of visual objects from the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.\n  remarks: \"The visual objects that follow the removed objects are shifted to occupy the vacated positions, and their index values are updated.  \\n  \\n The <xref:System.Windows.Media.VisualCollection.RemoveRange%2A> method also removes the parent-child relationships between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the range of child visuals.  \\n  \\n If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods. When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.\"\n  syntax:\n    content: public void RemoveRange (int index, int count);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the range of elements to remove.\n    - id: count\n      type: System.Int32\n      description: The number of elements to remove.\n  overload: System.Windows.Media.VisualCollection.RemoveRange*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero or <code>count</code> is less than zero.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>index</code> and <code>count</code> do not refer to a valid range of elements in the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.VisualCollection.SyncRoot\n  commentId: P:System.Windows.Media.VisualCollection.SyncRoot\n  id: SyncRoot\n  parent: System.Windows.Media.VisualCollection\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: VisualCollection.SyncRoot\n  fullName: VisualCollection.SyncRoot\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets an object that can be used to synchronize access to the <xref href=\"System.Windows.Media.VisualCollection\"></xref>.\n  syntax:\n    content: public object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: A value of type <xref href=\"System.Object\"></xref>.\n  overload: System.Windows.Media.VisualCollection.SyncRoot*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator\n  commentId: M:System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Windows.Media.VisualCollection\n  langs:\n  - csharp\n  name: IEnumerable.GetEnumerator()\n  nameWithType: VisualCollection.IEnumerable.GetEnumerator()\n  fullName: VisualCollection.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: This member supports the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code. For a description of this member, see <xref href=\"System.Collections.IEnumerable.GetEnumerator\"></xref>.\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An object that can be used to iterate through the collection.\n  overload: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: VisualCollection(Visual)\n  nameWithType: VisualCollection.VisualCollection(Visual)\n  fullName: VisualCollection.VisualCollection(Visual)\n- uid: System.Windows.Media.Visual\n  parent: System.Windows.Media\n  isExternal: false\n  name: Visual\n  nameWithType: Visual\n  fullName: System.Windows.Media.Visual\n- uid: System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: Add(Visual)\n  nameWithType: VisualCollection.Add(Visual)\n  fullName: VisualCollection.Add(Visual)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.VisualCollection.Capacity\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: Capacity\n  nameWithType: VisualCollection.Capacity\n  fullName: VisualCollection.Capacity\n- uid: System.Windows.Media.VisualCollection.Clear\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: VisualCollection.Clear()\n  fullName: VisualCollection.Clear()\n- uid: System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: Contains(Visual)\n  nameWithType: VisualCollection.Contains(Visual)\n  fullName: VisualCollection.Contains(Visual)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: CopyTo(Array, Int32)\n  nameWithType: VisualCollection.CopyTo(Array, Int32)\n  fullName: VisualCollection.CopyTo(Array, Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: CopyTo(Visual[], Int32)\n  nameWithType: VisualCollection.CopyTo(Visual[], Int32)\n  fullName: VisualCollection.CopyTo(Visual[], Int32)\n- uid: System.Windows.Media.Visual[]\n  parent: System.Windows.Media\n  isExternal: false\n  name: Visual[]\n  nameWithType: Visual[]\n  fullName: System.Windows.Media.Visual[]\n  spec.csharp:\n  - uid: System.Windows.Media.Visual\n    name: Visual\n    nameWithType: Visual\n    fullName: System.Windows.Media.Visual\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Media.VisualCollection.Count\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: Count\n  nameWithType: VisualCollection.Count\n  fullName: VisualCollection.Count\n- uid: System.Windows.Media.VisualCollection.GetEnumerator\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: VisualCollection.GetEnumerator()\n  fullName: VisualCollection.GetEnumerator()\n- uid: System.Windows.Media.VisualCollection\n  parent: System.Windows.Media\n  isExternal: false\n  name: VisualCollection\n  nameWithType: VisualCollection\n  fullName: System.Windows.Media.VisualCollection+Enumerator\n- uid: System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: IndexOf(Visual)\n  nameWithType: VisualCollection.IndexOf(Visual)\n  fullName: VisualCollection.IndexOf(Visual)\n- uid: System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: Insert(Int32, Visual)\n  nameWithType: VisualCollection.Insert(Int32, Visual)\n  fullName: VisualCollection.Insert(Int32, Visual)\n- uid: System.Windows.Media.VisualCollection.IsReadOnly\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: VisualCollection.IsReadOnly\n  fullName: VisualCollection.IsReadOnly\n- uid: System.Windows.Media.VisualCollection.IsSynchronized\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: VisualCollection.IsSynchronized\n  fullName: VisualCollection.IsSynchronized\n- uid: System.Windows.Media.VisualCollection.Item(System.Int32)\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: VisualCollection.Item(Int32)\n  fullName: VisualCollection.Item(Int32)\n- uid: System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: Remove(Visual)\n  nameWithType: VisualCollection.Remove(Visual)\n  fullName: VisualCollection.Remove(Visual)\n- uid: System.Windows.Media.VisualCollection.RemoveAt(System.Int32)\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: VisualCollection.RemoveAt(Int32)\n  fullName: VisualCollection.RemoveAt(Int32)\n- uid: System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: RemoveRange(Int32, Int32)\n  nameWithType: VisualCollection.RemoveRange(Int32, Int32)\n  fullName: VisualCollection.RemoveRange(Int32, Int32)\n- uid: System.Windows.Media.VisualCollection.SyncRoot\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: VisualCollection.SyncRoot\n  fullName: VisualCollection.SyncRoot\n- uid: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  nameWithType: VisualCollection.IEnumerable.GetEnumerator()\n  fullName: VisualCollection.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.Media.VisualCollection.#ctor*\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: VisualCollection\n  nameWithType: VisualCollection.VisualCollection\n  fullName: VisualCollection.VisualCollection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n- uid: System.Windows.Media.VisualCollection.Add*\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: Add\n  nameWithType: VisualCollection.Add\n  fullName: VisualCollection.Add\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n- uid: System.Windows.Media.VisualCollection.Capacity*\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: Capacity\n  nameWithType: VisualCollection.Capacity\n  fullName: VisualCollection.Capacity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n- uid: System.Windows.Media.VisualCollection.Clear*\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: Clear\n  nameWithType: VisualCollection.Clear\n  fullName: VisualCollection.Clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n- uid: System.Windows.Media.VisualCollection.Contains*\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: Contains\n  nameWithType: VisualCollection.Contains\n  fullName: VisualCollection.Contains\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n- uid: System.Windows.Media.VisualCollection.CopyTo*\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: VisualCollection.CopyTo\n  fullName: VisualCollection.CopyTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n- uid: System.Windows.Media.VisualCollection.Count*\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: Count\n  nameWithType: VisualCollection.Count\n  fullName: VisualCollection.Count\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n- uid: System.Windows.Media.VisualCollection.GetEnumerator*\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: VisualCollection.GetEnumerator\n  fullName: VisualCollection.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n- uid: System.Windows.Media.VisualCollection.IndexOf*\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: VisualCollection.IndexOf\n  fullName: VisualCollection.IndexOf\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n- uid: System.Windows.Media.VisualCollection.Insert*\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: Insert\n  nameWithType: VisualCollection.Insert\n  fullName: VisualCollection.Insert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n- uid: System.Windows.Media.VisualCollection.IsReadOnly*\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: VisualCollection.IsReadOnly\n  fullName: VisualCollection.IsReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n- uid: System.Windows.Media.VisualCollection.IsSynchronized*\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: VisualCollection.IsSynchronized\n  fullName: VisualCollection.IsSynchronized\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n- uid: System.Windows.Media.VisualCollection.Item*\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: Item\n  nameWithType: VisualCollection.Item\n  fullName: VisualCollection.Item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n- uid: System.Windows.Media.VisualCollection.Remove*\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: Remove\n  nameWithType: VisualCollection.Remove\n  fullName: VisualCollection.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n- uid: System.Windows.Media.VisualCollection.RemoveAt*\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: RemoveAt\n  nameWithType: VisualCollection.RemoveAt\n  fullName: VisualCollection.RemoveAt\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n- uid: System.Windows.Media.VisualCollection.RemoveRange*\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: RemoveRange\n  nameWithType: VisualCollection.RemoveRange\n  fullName: VisualCollection.RemoveRange\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n- uid: System.Windows.Media.VisualCollection.SyncRoot*\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: VisualCollection.SyncRoot\n  fullName: VisualCollection.SyncRoot\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n- uid: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Windows.Media.VisualCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: VisualCollection.System.Collections.IEnumerable.GetEnumerator\n  fullName: VisualCollection.System.Collections.IEnumerable.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/VisualCollection.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n"}