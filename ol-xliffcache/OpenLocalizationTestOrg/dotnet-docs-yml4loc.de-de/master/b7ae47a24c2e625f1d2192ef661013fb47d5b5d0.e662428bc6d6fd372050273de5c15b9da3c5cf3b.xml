{"nodes":[{"content":"Represents a custom binding element that supports channel security using an SSL stream.","nodes":[{"pos":[0,87],"content":"Represents a custom binding element that supports channel security using an SSL stream.","nodes":[{"content":"Represents a custom binding element that supports channel security using an SSL stream.","pos":[0,87]}]}],"pos":[2420,2508],"yaml":true},{"content":"Transports that use a stream-oriented protocol such as TCP and named pipes support stream-based transport upgrades. Specifically, [!INCLUDE[indigo1](~/includes/indigo1-md.md)] provides security upgrades. The configuration of this transport security is encapsulated by this class as well as by <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement>, which can be configured and added to a custom binding. In addition, a third party can write their own custom `StreamSecurityBindingElement`. These binding elements extend the <xref:System.ServiceModel.Channels.StreamUpgradeBindingElement> class that is called to build the client and server stream upgrade providers.  \n  \n A custom binding contains a collection of binding elements arranged in a specific order: the element that represents the top of the binding stack is added first, the next element down in the binding stack is added second, and so on.  \n  \n### To add this class to a binding  \n  \n1.  Create a <xref:System.ServiceModel.Channels.BindingElementCollection>.  \n  \n2.  Create custom binding elements that are above this binding element in the binding stack, such as the optional <xref:System.ServiceModel.Channels.TransactionFlowBindingElement> and <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>.  \n  \n3.  Add the created elements in the order described previously to the <xref:System.ServiceModel.Channels.BindingElementCollection> using the <xref:System.ServiceModel.Channels.BindingElementCollection.InsertItem%2A> method.  \n  \n4.  Create an instance of <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement> and add it to the collection.  \n  \n5.  Add any additional custom binding elements to the collection, such as <xref:System.ServiceModel.Channels.TcpTransportBindingElement>.  \n  \n There are three scenarios in which you must either manually specify the correct UPN/SPN on the client endpoint after importing the WSDL, or specify a custom <xref:System.ServiceModel.Security.IdentityVerifier> on the clientâ€™s <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement>.  \n  \n1.  No service identity is published in WSDL. <xref:System.ServiceModel.Configuration.AuthenticationMode.SspiNegotiatedOverTransport> and HTTPS are used (for example, a <xref:System.ServiceModel.WSHttpBinding> with SecurityMode = <xref:System.ServiceModel.SecurityMode.TransportWithMessageCredential>). If the service is not running with the machine identity, you must manually specify the correct UPN/SPN on the client endpoint after importing the WSDL.  \n  \n2.  DNSservice identity is published in WSDL. <xref:System.ServiceModel.Configuration.AuthenticationMode.SspiNegotiatedOverTransport> and <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement> are used (for example, <xref:System.ServiceModel.NetTcpBinding> with SecurityMode = <xref:System.ServiceModel.SecurityMode.TransportWithMessageCredential>) instead of a UPN/SPN. If the service is not running with the machine identity, or the DNS identity is not the machine's identity, you must manually specify the correct UPN/SPN on the client endpoint after importing the WSDL.  \n  \n3.  DNS identity is published in WSDL. If <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement> is overridden on the client, you must specify a custom <xref:System.ServiceModel.Security.IdentityVerifier> on the client's <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement>.  \n  \n The following code shows how to manually specify the correct UPN/SPN on the client endpoint, as well as how to specify a custom <xref:System.ServiceModel.Security.IdentityVerifier> on the client's <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement>.  \n  \n```  \n  \nusing System;  \nusing System.Collections.Generic;  \nusing System.Linq;  \nusing System.Net;  \nusing System.IdentityModel.Claims;  \nusing System.IdentityModel.Policy;  \nusing System.Security.Cryptography.X509Certificates;  \nusing System.ServiceModel;  \nusing System.ServiceModel.Channels;  \nusing System.ServiceModel.Description;  \nusing System.ServiceModel.Security;  \nusing System.Xml;  \n  \nnamespace ServiceNamespace  \n{  \n    [ServiceContract]  \n    interface IService  \n    {  \n        [OperationContract]  \n        void DoSomething();  \n    }  \n  \n    class DnsIdentityVerifier : IdentityVerifier  \n    {  \n        DnsEndpointIdentity _expectedIdentity;  \n  \n        public DnsIdentityVerifier(EndpointAddress serviceEndpoint)  \n        {  \n            _expectedIdentity = new DnsEndpointIdentity(serviceEndpoint.Uri.DnsSafeHost);  \n        }  \n  \n        public override bool CheckAccess(EndpointIdentity identity, AuthorizationContext authContext)  \n        {  \n            Claim dnsClaim = authContext.Claims().Single(claim => claim.ClaimType == ClaimTypes.Dns);  \n            return String.Equals(_expectedIdentity.IdentityClaim.Resource, dnsClaim.Resource);  \n        }  \n  \n        public override bool TryGetIdentity(EndpointAddress reference, out EndpointIdentity identity)  \n        {  \n            identity = _expectedIdentity;  \n            return true;  \n        }  \n    }  \n  \n    static class LinqExtensionForClaims  \n    {  \n        public static IEnumerable<Claim> Claims(this AuthorizationContext authContext)  \n        {  \n            if (null != authContext.ClaimSets)  \n            {  \n                foreach (ClaimSet claimSet in authContext.ClaimSets)  \n                {  \n                    if (null != claimSet)  \n                    {  \n                        foreach (Claim claim in claimSet)  \n                        {  \n                            yield return claim;  \n                        }  \n                    }  \n                }  \n            }  \n        }  \n    }  \n  \n    class Service : IService  \n    {  \n        public void DoSomething()  \n        {  \n            Console.WriteLine(\"Service called.\");  \n        }  \n    }  \n  \n    class Program  \n    {  \n        static void Main(string[] args)  \n        {  \n            string hostname = Dns.GetHostEntry(String.Empty).HostName;  \n            NetTcpBinding serviceBinding = new NetTcpBinding(SecurityMode.TransportWithMessageCredential);  \n  \n            ServiceHost serviceHost = new ServiceHost(typeof(Service), new Uri(String.Format(\"net.tcp://{0}:8080/Service\", hostname)));  \n            serviceHost.Credentials.ServiceCertificate.SetCertificate(StoreLocation.LocalMachine, StoreName.My, X509FindType.FindByThumbprint, \"8a 42 1b eb cf 8a 14 b1 de 83 d9 a5 70 88 0a 62 f9 bf 69 06\");  \n            ServiceEndpoint serviceEndpoint = serviceHost.AddServiceEndpoint(typeof(IService), serviceBinding, \"Endpoint\");  \n            serviceHost.Open();  \n  \n            CustomBinding clientBinding = new CustomBinding(serviceBinding.CreateBindingElements());  \n            SslStreamSecurityBindingElement sslStream = clientBinding.Elements.Find<SslStreamSecurityBindingElement>();  \n            sslStream.IdentityVerifier = new DnsIdentityVerifier(serviceEndpoint.Address);  \n  \n            ChannelFactory<IService> channelFactory = new ChannelFactory<IService>(clientBinding, new EndpointAddress(serviceEndpoint.Address.Uri, UpnEndpointIdentity.CreateUpnIdentity(\"username@domain\")));  \n            channelFactory.Credentials.Windows.AllowNtlm = false;  \n            IService channel = channelFactory.CreateChannel();  \n            channel.DoSomething();  \n        }  \n    }  \n  \n```","nodes":[{"pos":[0,678],"content":"Transports that use a stream-oriented protocol such as TCP and named pipes support stream-based transport upgrades. Specifically, [!INCLUDE[indigo1](~/includes/indigo1-md.md)] provides security upgrades. The configuration of this transport security is encapsulated by this class as well as by <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement>, which can be configured and added to a custom binding. In addition, a third party can write their own custom `StreamSecurityBindingElement`. These binding elements extend the <xref:System.ServiceModel.Channels.StreamUpgradeBindingElement> class that is called to build the client and server stream upgrade providers.","nodes":[{"content":"Transports that use a stream-oriented protocol such as TCP and named pipes support stream-based transport upgrades.","pos":[0,115]},{"content":"Specifically, <ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> provides security upgrades.","pos":[116,203],"source":" Specifically, [!INCLUDE[indigo1](~/includes/indigo1-md.md)] provides security upgrades."},{"content":"The configuration of this transport security is encapsulated by this class as well as by <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement&gt;</ph>, which can be configured and added to a custom binding.","pos":[204,416],"source":" The configuration of this transport security is encapsulated by this class as well as by <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement>, which can be configured and added to a custom binding."},{"content":"In addition, a third party can write their own custom <ph id=\"ph1\">`StreamSecurityBindingElement`</ph>.","pos":[417,502],"source":" In addition, a third party can write their own custom `StreamSecurityBindingElement`."},{"content":"These binding elements extend the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.StreamUpgradeBindingElement&gt;</ph> class that is called to build the client and server stream upgrade providers.","pos":[503,678],"source":" These binding elements extend the <xref:System.ServiceModel.Channels.StreamUpgradeBindingElement> class that is called to build the client and server stream upgrade providers."}]},{"pos":[685,917],"content":"A custom binding contains a collection of binding elements arranged in a specific order: the element that represents the top of the binding stack is added first, the next element down in the binding stack is added second, and so on.","nodes":[{"content":"A custom binding contains a collection of binding elements arranged in a specific order: the element that represents the top of the binding stack is added first, the next element down in the binding stack is added second, and so on.","pos":[0,232]}]},{"pos":[927,957],"content":"To add this class to a binding","linkify":"To add this class to a binding","nodes":[{"content":"To add this class to a binding","pos":[0,30]}]},{"pos":[967,1037],"content":"Create a <xref:System.ServiceModel.Channels.BindingElementCollection>.","nodes":[{"content":"Create a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.BindingElementCollection&gt;</ph>.","pos":[0,70],"source":"Create a <xref:System.ServiceModel.Channels.BindingElementCollection>."}]},{"pos":[1047,1293],"content":"Create custom binding elements that are above this binding element in the binding stack, such as the optional <xref:System.ServiceModel.Channels.TransactionFlowBindingElement> and <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>.","nodes":[{"content":"Create custom binding elements that are above this binding element in the binding stack, such as the optional <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.TransactionFlowBindingElement&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.ReliableSessionBindingElement&gt;</ph>.","pos":[0,246],"source":"Create custom binding elements that are above this binding element in the binding stack, such as the optional <xref:System.ServiceModel.Channels.TransactionFlowBindingElement> and <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>."}]},{"pos":[1303,1522],"content":"Add the created elements in the order described previously to the <xref:System.ServiceModel.Channels.BindingElementCollection> using the <xref:System.ServiceModel.Channels.BindingElementCollection.InsertItem%2A> method.","nodes":[{"content":"Add the created elements in the order described previously to the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.BindingElementCollection&gt;</ph> using the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.BindingElementCollection.InsertItem%2A&gt;</ph> method.","pos":[0,219],"source":"Add the created elements in the order described previously to the <xref:System.ServiceModel.Channels.BindingElementCollection> using the <xref:System.ServiceModel.Channels.BindingElementCollection.InsertItem%2A> method."}]},{"pos":[1532,1651],"content":"Create an instance of <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement> and add it to the collection.","nodes":[{"content":"Create an instance of <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement&gt;</ph> and add it to the collection.","pos":[0,119],"source":"Create an instance of <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement> and add it to the collection."}]},{"pos":[1661,1794],"content":"Add any additional custom binding elements to the collection, such as <xref:System.ServiceModel.Channels.TcpTransportBindingElement>.","nodes":[{"content":"Add any additional custom binding elements to the collection, such as <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.TcpTransportBindingElement&gt;</ph>.","pos":[0,133],"source":"Add any additional custom binding elements to the collection, such as <xref:System.ServiceModel.Channels.TcpTransportBindingElement>."}]},{"pos":[1801,2095],"content":"There are three scenarios in which you must either manually specify the correct UPN/SPN on the client endpoint after importing the WSDL, or specify a custom <xref:System.ServiceModel.Security.IdentityVerifier> on the clientâ€™s <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement>.","nodes":[{"content":"There are three scenarios in which you must either manually specify the correct UPN/SPN on the client endpoint after importing the WSDL, or specify a custom <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.IdentityVerifier&gt;</ph> on the clientâ€™s <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement&gt;</ph>.","pos":[0,294],"source":"There are three scenarios in which you must either manually specify the correct UPN/SPN on the client endpoint after importing the WSDL, or specify a custom <xref:System.ServiceModel.Security.IdentityVerifier> on the clientâ€™s <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement>."}]},{"pos":[2105,2555],"content":"No service identity is published in WSDL. <xref:System.ServiceModel.Configuration.AuthenticationMode.SspiNegotiatedOverTransport> and HTTPS are used (for example, a <xref:System.ServiceModel.WSHttpBinding> with SecurityMode = <xref:System.ServiceModel.SecurityMode.TransportWithMessageCredential>). If the service is not running with the machine identity, you must manually specify the correct UPN/SPN on the client endpoint after importing the WSDL.","nodes":[{"content":"No service identity is published in WSDL. <xref:System.ServiceModel.Configuration.AuthenticationMode.SspiNegotiatedOverTransport> and HTTPS are used (for example, a <xref:System.ServiceModel.WSHttpBinding> with SecurityMode = <xref:System.ServiceModel.SecurityMode.TransportWithMessageCredential>). If the service is not running with the machine identity, you must manually specify the correct UPN/SPN on the client endpoint after importing the WSDL.","pos":[0,450],"nodes":[{"content":"No service identity is published in WSDL.","pos":[0,41]},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Configuration.AuthenticationMode.SspiNegotiatedOverTransport&gt;</ph> and HTTPS are used (for example, a <ph id=\"ph2\">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph> with SecurityMode = <ph id=\"ph3\">&lt;xref:System.ServiceModel.SecurityMode.TransportWithMessageCredential&gt;</ph>).","pos":[42,298],"source":" <xref:System.ServiceModel.Configuration.AuthenticationMode.SspiNegotiatedOverTransport> and HTTPS are used (for example, a <xref:System.ServiceModel.WSHttpBinding> with SecurityMode = <xref:System.ServiceModel.SecurityMode.TransportWithMessageCredential>)."},{"content":"If the service is not running with the machine identity, you must manually specify the correct UPN/SPN on the client endpoint after importing the WSDL.","pos":[299,450]}]}]},{"pos":[2565,3147],"content":"DNSservice identity is published in WSDL. <xref:System.ServiceModel.Configuration.AuthenticationMode.SspiNegotiatedOverTransport> and <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement> are used (for example, <xref:System.ServiceModel.NetTcpBinding> with SecurityMode = <xref:System.ServiceModel.SecurityMode.TransportWithMessageCredential>) instead of a UPN/SPN. If the service is not running with the machine identity, or the DNS identity is not the machine's identity, you must manually specify the correct UPN/SPN on the client endpoint after importing the WSDL.","nodes":[{"content":"DNSservice identity is published in WSDL. <xref:System.ServiceModel.Configuration.AuthenticationMode.SspiNegotiatedOverTransport> and <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement> are used (for example, <xref:System.ServiceModel.NetTcpBinding> with SecurityMode = <xref:System.ServiceModel.SecurityMode.TransportWithMessageCredential>) instead of a UPN/SPN. If the service is not running with the machine identity, or the DNS identity is not the machine's identity, you must manually specify the correct UPN/SPN on the client endpoint after importing the WSDL.","pos":[0,582],"nodes":[{"content":"DNSservice identity is published in WSDL.","pos":[0,41]},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Configuration.AuthenticationMode.SspiNegotiatedOverTransport&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement&gt;</ph> are used (for example, <ph id=\"ph3\">&lt;xref:System.ServiceModel.NetTcpBinding&gt;</ph> with SecurityMode = <ph id=\"ph4\">&lt;xref:System.ServiceModel.SecurityMode.TransportWithMessageCredential&gt;</ph>) instead of a UPN/SPN.","pos":[42,379],"source":" <xref:System.ServiceModel.Configuration.AuthenticationMode.SspiNegotiatedOverTransport> and <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement> are used (for example, <xref:System.ServiceModel.NetTcpBinding> with SecurityMode = <xref:System.ServiceModel.SecurityMode.TransportWithMessageCredential>) instead of a UPN/SPN."},{"content":"If the service is not running with the machine identity, or the DNS identity is not the machine's identity, you must manually specify the correct UPN/SPN on the client endpoint after importing the WSDL.","pos":[380,582]}]}]},{"pos":[3157,3455],"content":"DNS identity is published in WSDL. If <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement> is overridden on the client, you must specify a custom <xref:System.ServiceModel.Security.IdentityVerifier> on the client's <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement>.","nodes":[{"content":"DNS identity is published in WSDL. If <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement> is overridden on the client, you must specify a custom <xref:System.ServiceModel.Security.IdentityVerifier> on the client's <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement>.","pos":[0,298],"nodes":[{"content":"DNS identity is published in WSDL.","pos":[0,34]},{"content":"If <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement&gt;</ph> is overridden on the client, you must specify a custom <ph id=\"ph2\">&lt;xref:System.ServiceModel.Security.IdentityVerifier&gt;</ph> on the client's <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement&gt;</ph>.","pos":[35,298],"source":" If <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement> is overridden on the client, you must specify a custom <xref:System.ServiceModel.Security.IdentityVerifier> on the client's <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement>."}]}]},{"pos":[3462,3727],"content":"The following code shows how to manually specify the correct UPN/SPN on the client endpoint, as well as how to specify a custom <xref:System.ServiceModel.Security.IdentityVerifier> on the client's <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement>.","nodes":[{"content":"The following code shows how to manually specify the correct UPN/SPN on the client endpoint, as well as how to specify a custom <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.IdentityVerifier&gt;</ph> on the client's <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement&gt;</ph>.","pos":[0,265],"source":"The following code shows how to manually specify the correct UPN/SPN on the client endpoint, as well as how to specify a custom <xref:System.ServiceModel.Security.IdentityVerifier> on the client's <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement>."}]}],"pos":[2519,10080],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.SslStreamSecurityBindingElement\"></xref> class.","nodes":[{"pos":[0,122],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.SslStreamSecurityBindingElement\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.SslStreamSecurityBindingElement\"></xref> class."}],"pos":[12144,12267],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.SslStreamSecurityBindingElement\"></xref> class using the values from another <xref href=\"System.ServiceModel.Channels.SslStreamSecurityBindingElement\"></xref>.","nodes":[{"pos":[0,234],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.SslStreamSecurityBindingElement\"&gt;&lt;/xref&gt;</ph> class using the values from another <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.SslStreamSecurityBindingElement\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.SslStreamSecurityBindingElement\"></xref> class using the values from another <xref href=\"System.ServiceModel.Channels.SslStreamSecurityBindingElement\"></xref>."}],"pos":[13982,14217],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.SslStreamSecurityBindingElement\"></xref> to clone.","nodes":[{"pos":[0,95],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.SslStreamSecurityBindingElement\"&gt;&lt;/xref&gt;</ph> to clone.","source":"The <xref href=\"System.ServiceModel.Channels.SslStreamSecurityBindingElement\"></xref> to clone."}],"pos":[14500,14596],"yaml":true},{"content":"Creates a channel factory of a specified type.","nodes":[{"pos":[0,46],"content":"Creates a channel factory of a specified type.","nodes":[{"content":"Creates a channel factory of a specified type.","pos":[0,46]}]}],"pos":[16038,16085],"yaml":true},{"content":"This method creates a channel factory, which is used to create a channel that processes outgoing messages for this binding.","nodes":[{"pos":[0,123],"content":"This method creates a channel factory, which is used to create a channel that processes outgoing messages for this binding.","nodes":[{"content":"This method creates a channel factory, which is used to create a channel that processes outgoing messages for this binding.","pos":[0,123]}]}],"pos":[16096,16220],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref>.","nodes":[{"pos":[0,69],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref>."}],"pos":[16508,16578],"yaml":true},{"content":"Type of channel factory.","nodes":[{"pos":[0,24],"content":"Type of channel factory.","nodes":[{"content":"Type of channel factory.","pos":[0,24]}]}],"pos":[16636,16661],"yaml":true},{"content":"An <xref href=\"System.ServiceModel.Channels.IChannelFactory\"></xref> object that represents the channel factory of type <code>TChannel</code>.","nodes":[{"pos":[0,142],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelFactory\"&gt;&lt;/xref&gt;</ph> object that represents the channel factory of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An <xref href=\"System.ServiceModel.Channels.IChannelFactory\"></xref> object that represents the channel factory of type <code>TChannel</code>."}],"pos":[16751,16894],"yaml":true},{"content":"<code>context</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>context</code> is `null`."}],"pos":[17107,17139],"yaml":true},{"content":"Creates a channel listener of a specified type.","nodes":[{"pos":[0,47],"content":"Creates a channel listener of a specified type.","nodes":[{"content":"Creates a channel listener of a specified type.","pos":[0,47]}]}],"pos":[18614,18662],"yaml":true},{"content":"This method creates a channel listener, which is used to create a channel that processes incoming messages for this binding.","nodes":[{"pos":[0,124],"content":"This method creates a channel listener, which is used to create a channel that processes incoming messages for this binding.","nodes":[{"content":"This method creates a channel listener, which is used to create a channel that processes incoming messages for this binding.","pos":[0,124]}]}],"pos":[18673,18798],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref>.","nodes":[{"pos":[0,69],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref>."}],"pos":[19152,19222],"yaml":true},{"content":"Type of channel listener.","nodes":[{"pos":[0,25],"content":"Type of channel listener.","nodes":[{"content":"Type of channel listener.","pos":[0,25]}]}],"pos":[19280,19306],"yaml":true},{"content":"An <xref href=\"System.ServiceModel.Channels.IChannelListener\"></xref> object that represents a channel listener of type <code>TChannel</code>.","nodes":[{"pos":[0,142],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelListener\"&gt;&lt;/xref&gt;</ph> object that represents a channel listener of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An <xref href=\"System.ServiceModel.Channels.IChannelListener\"></xref> object that represents a channel listener of type <code>TChannel</code>."}],"pos":[19397,19540],"yaml":true},{"content":"<code>context</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>context</code> is `null`."}],"pos":[19754,19786],"yaml":true},{"content":"Creates an instance on the client of the <xref href=\"System.ServiceModel.Channels.StreamUpgradeProvider\"></xref> based on the channel context provided.","nodes":[{"pos":[0,151],"content":"Creates an instance on the client of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.StreamUpgradeProvider\"&gt;&lt;/xref&gt;</ph> based on the channel context provided.","source":"Creates an instance on the client of the <xref href=\"System.ServiceModel.Channels.StreamUpgradeProvider\"></xref> based on the channel context provided."}],"pos":[21170,21322],"yaml":true},{"content":"This method is called when opening the client channel factory and provides a custom implementation of the <xref:System.ServiceModel.Channels.StreamUpgradeProvider> abstract class.  \n  \n The <xref:System.ServiceModel.Channels.BindingContext> parameter enables reacting to other elements in the channel stack.","nodes":[{"pos":[0,179],"content":"This method is called when opening the client channel factory and provides a custom implementation of the <xref:System.ServiceModel.Channels.StreamUpgradeProvider> abstract class.","nodes":[{"content":"This method is called when opening the client channel factory and provides a custom implementation of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.StreamUpgradeProvider&gt;</ph> abstract class.","pos":[0,179],"source":"This method is called when opening the client channel factory and provides a custom implementation of the <xref:System.ServiceModel.Channels.StreamUpgradeProvider> abstract class."}]},{"pos":[186,307],"content":"The <xref:System.ServiceModel.Channels.BindingContext> parameter enables reacting to other elements in the channel stack.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.BindingContext&gt;</ph> parameter enables reacting to other elements in the channel stack.","pos":[0,121],"source":"The <xref:System.ServiceModel.Channels.BindingContext> parameter enables reacting to other elements in the channel stack."}]}],"pos":[21333,21645],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> for the entire channel stack.","nodes":[{"pos":[0,98],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph> for the entire channel stack.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> for the entire channel stack."}],"pos":[21932,22031],"yaml":true},{"content":"An instance of the <xref href=\"System.ServiceModel.Channels.StreamUpgradeProvider\"></xref>.","nodes":[{"pos":[0,91],"content":"An instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.StreamUpgradeProvider\"&gt;&lt;/xref&gt;</ph>.","source":"An instance of the <xref href=\"System.ServiceModel.Channels.StreamUpgradeProvider\"></xref>."}],"pos":[22125,22217],"yaml":true},{"content":"Creates an instance on the server of the <xref href=\"System.ServiceModel.Channels.StreamUpgradeProvider\"></xref> based on the channel context provided.","nodes":[{"pos":[0,151],"content":"Creates an instance on the server of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.StreamUpgradeProvider\"&gt;&lt;/xref&gt;</ph> based on the channel context provided.","source":"Creates an instance on the server of the <xref href=\"System.ServiceModel.Channels.StreamUpgradeProvider\"></xref> based on the channel context provided."}],"pos":[23725,23877],"yaml":true},{"content":"This method is called when opening the service and provides a custom implementation of the <xref:System.ServiceModel.Channels.StreamUpgradeProvider> abstract class.  \n  \n The <xref:System.ServiceModel.Channels.BindingContext> parameter enables reacting to other elements in the channel stack.","nodes":[{"pos":[0,164],"content":"This method is called when opening the service and provides a custom implementation of the <xref:System.ServiceModel.Channels.StreamUpgradeProvider> abstract class.","nodes":[{"content":"This method is called when opening the service and provides a custom implementation of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.StreamUpgradeProvider&gt;</ph> abstract class.","pos":[0,164],"source":"This method is called when opening the service and provides a custom implementation of the <xref:System.ServiceModel.Channels.StreamUpgradeProvider> abstract class."}]},{"pos":[171,292],"content":"The <xref:System.ServiceModel.Channels.BindingContext> parameter enables reacting to other elements in the channel stack.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.BindingContext&gt;</ph> parameter enables reacting to other elements in the channel stack.","pos":[0,121],"source":"The <xref:System.ServiceModel.Channels.BindingContext> parameter enables reacting to other elements in the channel stack."}]}],"pos":[23888,24185],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> for the entire channel stack.","nodes":[{"pos":[0,98],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph> for the entire channel stack.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> for the entire channel stack."}],"pos":[24472,24571],"yaml":true},{"content":"An instance of the <xref href=\"System.ServiceModel.Channels.StreamUpgradeProvider\"></xref>.","nodes":[{"pos":[0,91],"content":"An instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.StreamUpgradeProvider\"&gt;&lt;/xref&gt;</ph>.","source":"An instance of the <xref href=\"System.ServiceModel.Channels.StreamUpgradeProvider\"></xref>."}],"pos":[24665,24757],"yaml":true},{"content":"Gets a value that indicates whether a channel factory of the specified type can be built.","nodes":[{"pos":[0,89],"content":"Gets a value that indicates whether a channel factory of the specified type can be built.","nodes":[{"content":"Gets a value that indicates whether a channel factory of the specified type can be built.","pos":[0,89]}]}],"pos":[26244,26334],"yaml":true},{"content":"You should call this method before trying to create a channel factory.","nodes":[{"pos":[0,70],"content":"You should call this method before trying to create a channel factory.","nodes":[{"content":"You should call this method before trying to create a channel factory.","pos":[0,70]}]}],"pos":[26345,26416],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref>.","nodes":[{"pos":[0,69],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref>."}],"pos":[26657,26727],"yaml":true},{"content":"Type of channel factory.","nodes":[{"pos":[0,24],"content":"Type of channel factory.","nodes":[{"content":"Type of channel factory.","pos":[0,24]}]}],"pos":[26785,26810],"yaml":true},{"content":"`true` if a channel factory of the specified type can be built; otherwise, `false`.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">`true`</ph> if a channel factory of the specified type can be built; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if a channel factory of the specified type can be built; otherwise, `false`."}],"pos":[26868,26954],"yaml":true},{"content":"<code>context</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>context</code> is `null`."}],"pos":[27170,27202],"yaml":true},{"content":"Gets a value that indicates whether a channel listener of the specified type can be built.","nodes":[{"pos":[0,90],"content":"Gets a value that indicates whether a channel listener of the specified type can be built.","nodes":[{"content":"Gets a value that indicates whether a channel listener of the specified type can be built.","pos":[0,90]}]}],"pos":[28695,28786],"yaml":true},{"content":"You should call this method before trying to create a channel listener.","nodes":[{"pos":[0,71],"content":"You should call this method before trying to create a channel listener.","nodes":[{"content":"You should call this method before trying to create a channel listener.","pos":[0,71]}]}],"pos":[28797,28869],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref>.","nodes":[{"pos":[0,69],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref>."}],"pos":[29175,29245],"yaml":true},{"content":"Type of channel listener.","nodes":[{"pos":[0,25],"content":"Type of channel listener.","nodes":[{"content":"Type of channel listener.","pos":[0,25]}]}],"pos":[29303,29329],"yaml":true},{"content":"`true` if a channel listener of the specified type can be built; otherwise, `false`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">`true`</ph> if a channel listener of the specified type can be built; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if a channel listener of the specified type can be built; otherwise, `false`."}],"pos":[29387,29474],"yaml":true},{"content":"<code>context</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>context</code> is `null`."}],"pos":[29691,29723],"yaml":true},{"content":"Creates a new instance that is a copy of the current instance.","nodes":[{"pos":[0,62],"content":"Creates a new instance that is a copy of the current instance.","nodes":[{"content":"Creates a new instance that is a copy of the current instance.","pos":[0,62]}]}],"pos":[30768,30831],"yaml":true},{"content":"A <xref href=\"System.ServiceModel.Channels.SslStreamSecurityBindingElement\"></xref> instance that is a copy of the current instance.","nodes":[{"pos":[0,132],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.SslStreamSecurityBindingElement\"&gt;&lt;/xref&gt;</ph> instance that is a copy of the current instance.","source":"A <xref href=\"System.ServiceModel.Channels.SslStreamSecurityBindingElement\"></xref> instance that is a copy of the current instance."}],"pos":[31030,31163],"yaml":true},{"content":"Gets a specified object from the <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref>.","nodes":[{"pos":[0,98],"content":"Gets a specified object from the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph>.","source":"Gets a specified object from the <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref>."}],"pos":[32660,32759],"yaml":true},{"content":"This method gets the specified object from the base class or from one of that class's ancestors. The object returned is usually a collection of properties, for example, an object that implements <xref:System.ServiceModel.Channels.ISecurityCapabilities>.","nodes":[{"pos":[0,253],"content":"This method gets the specified object from the base class or from one of that class's ancestors. The object returned is usually a collection of properties, for example, an object that implements <xref:System.ServiceModel.Channels.ISecurityCapabilities>.","nodes":[{"content":"This method gets the specified object from the base class or from one of that class's ancestors. The object returned is usually a collection of properties, for example, an object that implements <xref:System.ServiceModel.Channels.ISecurityCapabilities>.","pos":[0,253],"nodes":[{"content":"This method gets the specified object from the base class or from one of that class's ancestors.","pos":[0,96]},{"content":"The object returned is usually a collection of properties, for example, an object that implements <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ISecurityCapabilities&gt;</ph>.","pos":[97,253],"source":" The object returned is usually a collection of properties, for example, an object that implements <xref:System.ServiceModel.Channels.ISecurityCapabilities>."}]}]}],"pos":[32770,33024],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref>.","nodes":[{"pos":[0,67],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref>."}],"pos":[33262,33330],"yaml":true},{"content":"The type of the object to get.","nodes":[{"pos":[0,30],"content":"The type of the object to get.","nodes":[{"content":"The type of the object to get.","pos":[0,30]}]}],"pos":[33381,33412],"yaml":true},{"content":"The  object of type <code>T</code> from the <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref>, or `null` if the object is not found.","nodes":[{"pos":[0,147],"content":"The  object of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> from the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph3\">`null`</ph> if the object is not found.","source":"The  object of type <code>T</code> from the <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref>, or `null` if the object is not found."}],"pos":[33457,33605],"yaml":true},{"content":"Gets the <xref href=\"System.Xml.XmlElement\"></xref> that represents the transport token used in the security binding.","nodes":[{"pos":[0,117],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlElement\"&gt;&lt;/xref&gt;</ph> that represents the transport token used in the security binding.","source":"Gets the <xref href=\"System.Xml.XmlElement\"></xref> that represents the transport token used in the security binding."}],"pos":[35006,35124],"yaml":true},{"content":"This method is used to generate WSDL for the associated service.","nodes":[{"pos":[0,64],"content":"This method is used to generate WSDL for the associated service.","nodes":[{"content":"This method is used to generate WSDL for the associated service.","pos":[0,64]}]}],"pos":[35135,35200],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Xml.XmlElement\"></xref> that represents the transport token used in the security binding.","nodes":[{"pos":[0,111],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlElement\"&gt;&lt;/xref&gt;</ph> that represents the transport token used in the security binding.","source":"An <xref href=\"System.Xml.XmlElement\"></xref> that represents the transport token used in the security binding."}],"pos":[35367,35479],"yaml":true},{"content":"Gets or sets the identity verifier for this binding.","nodes":[{"pos":[0,52],"content":"Gets or sets the identity verifier for this binding.","nodes":[{"content":"Gets or sets the identity verifier for this binding.","pos":[0,52]}]}],"pos":[36704,36757],"yaml":true},{"content":"An <xref href=\"System.ServiceModel.Security.IdentityVerifier\"></xref> object.","nodes":[{"pos":[0,77],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Security.IdentityVerifier\"&gt;&lt;/xref&gt;</ph> object.","source":"An <xref href=\"System.ServiceModel.Security.IdentityVerifier\"></xref> object."}],"pos":[36953,37031],"yaml":true},{"content":"The value to set is null.","nodes":[{"pos":[0,25],"content":"The value to set is null.","nodes":[{"content":"The value to set is null.","pos":[0,25]}]}],"pos":[37238,37264],"yaml":true},{"content":"Gets or sets a value that specifies whether a client certificate is required for this binding.","nodes":[{"pos":[0,94],"content":"Gets or sets a value that specifies whether a client certificate is required for this binding.","nodes":[{"content":"Gets or sets a value that specifies whether a client certificate is required for this binding.","pos":[0,94]}]}],"pos":[38419,38514],"yaml":true},{"content":"`true` if a client certificate is required for this binding; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,104],"content":"`true` if a client certificate is required for this binding; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if a client certificate is required for this binding; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,80],"source":"`true` if a client certificate is required for this binding; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[81,104],"source":" The default is `false`."}]}],"pos":[38646,38753],"yaml":true},{"content":"Gets a value that indicates whether the identify verifier should be serialized.","nodes":[{"pos":[0,79],"content":"Gets a value that indicates whether the identify verifier should be serialized.","nodes":[{"content":"Gets a value that indicates whether the identify verifier should be serialized.","pos":[0,79]}]}],"pos":[40194,40274],"yaml":true},{"content":"`true` if the identity verifier should be serialized; otherwise, `false`.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> if the identity verifier should be serialized; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the identity verifier should be serialized; otherwise, `false`."}],"pos":[40422,40498],"yaml":true},{"content":"Specifies the list of SSL/TLS protocols to negotiate when using a client credential type of TcpClientCredentialType.Certificate. The value can be a combination of one of more of the following enumeration members: Ssl3, Tls, Tls11, Tls12.","nodes":[{"pos":[0,237],"content":"Specifies the list of SSL/TLS protocols to negotiate when using a client credential type of TcpClientCredentialType.Certificate. The value can be a combination of one of more of the following enumeration members: Ssl3, Tls, Tls11, Tls12.","nodes":[{"content":"Specifies the list of SSL/TLS protocols to negotiate when using a client credential type of TcpClientCredentialType.Certificate. The value can be a combination of one of more of the following enumeration members: Ssl3, Tls, Tls11, Tls12.","pos":[0,237],"nodes":[{"content":"Specifies the list of SSL/TLS protocols to negotiate when using a client credential type of TcpClientCredentialType.Certificate.","pos":[0,128]},{"content":"The value can be a combination of one of more of the following enumeration members: Ssl3, Tls, Tls11, Tls12.","pos":[129,237]}]}]}],"pos":[41721,41961],"yaml":true},{"content":"The default value is Ssl3 &#124; Tls &#124; Tls11 &#124; Tls12. Versions of the framework prior to 4.6 only support Ssl3 and Tls. If these are not included, communication with earlier versions of the framework will not be possible. Specifying Tls11 and/or Tls12 will disable the usage of Ssl3, even if it has been included.","nodes":[{"pos":[0,323],"content":"The default value is Ssl3 &#124; Tls &#124; Tls11 &#124; Tls12. Versions of the framework prior to 4.6 only support Ssl3 and Tls. If these are not included, communication with earlier versions of the framework will not be possible. Specifying Tls11 and/or Tls12 will disable the usage of Ssl3, even if it has been included.","nodes":[{"content":"The default value is Ssl3 &#124; Tls &#124; Tls11 &#124; Tls12. Versions of the framework prior to 4.6 only support Ssl3 and Tls. If these are not included, communication with earlier versions of the framework will not be possible. Specifying Tls11 and/or Tls12 will disable the usage of Ssl3, even if it has been included.","pos":[0,323],"nodes":[{"content":"The default value is Ssl3 &amp;#124; Tls &amp;#124; Tls11 &amp;#124; Tls12.","pos":[0,63],"source":"The default value is Ssl3 &#124; Tls &#124; Tls11 &#124; Tls12."},{"content":"Versions of the framework prior to 4.6 only support Ssl3 and Tls.","pos":[64,129]},{"content":"If these are not included, communication with earlier versions of the framework will not be possible.","pos":[130,231]},{"content":"Specifying Tls11 and/or Tls12 will disable the usage of Ssl3, even if it has been included.","pos":[232,323]}]}]}],"pos":[41972,42296],"yaml":true,"extradata":"MT"},{"content":"Returns <xref href=\"System.Security.Authentication.SslProtocols\"></xref>.","nodes":[{"pos":[0,73],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Security.Authentication.SslProtocols\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Security.Authentication.SslProtocols\"></xref>."}],"pos":[43264,43338],"yaml":true},{"content":"Exports a custom policy assertion about bindings.","nodes":[{"pos":[0,49],"content":"Exports a custom policy assertion about bindings.","nodes":[{"content":"Exports a custom policy assertion about bindings.","pos":[0,49]}]}],"pos":[45208,45258],"yaml":true},{"content":"This method writes binding-related statements into the WSDL information exposed by a particular contract and is used by [!INCLUDE[indigo2](~/includes/indigo2-md.md)] to communicate to clients the existence of this custom binding element in the binding stack.  \n  \n This method takes two parameters: the <xref:System.ServiceModel.Description.MetadataExporter> and <xref:System.ServiceModel.Description.PolicyConversionContext> objects. Use the <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, and <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> methods to obtain collections of policy assertions that have already been exported at various scopes. Then use this method to add your own policy assertions to the appropriate collection.  \n  \n The <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> property exposes the <xref:System.ServiceModel.Description.ContractDescription> for the endpoint that is being exported. This enables this method to correctly scope their exported policy assertions. For example, security attributes in code can add behaviors to the <xref:System.ServiceModel.Description.ContractDescription> that indicate where security policy assertions should be added.  \n  \n Once custom policy assertions are attached to the WSDL information, clients can detect and import the custom binding assertions by implementing an <xref:System.ServiceModel.Description.IPolicyImportExtension> interface.","nodes":[{"pos":[0,258],"content":"This method writes binding-related statements into the WSDL information exposed by a particular contract and is used by <ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> to communicate to clients the existence of this custom binding element in the binding stack.","source":"This method writes binding-related statements into the WSDL information exposed by a particular contract and is used by [!INCLUDE[indigo2](~/includes/indigo2-md.md)] to communicate to clients the existence of this custom binding element in the binding stack."},{"pos":[265,913],"content":"This method takes two parameters: the <xref:System.ServiceModel.Description.MetadataExporter> and <xref:System.ServiceModel.Description.PolicyConversionContext> objects. Use the <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, and <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> methods to obtain collections of policy assertions that have already been exported at various scopes. Then use this method to add your own policy assertions to the appropriate collection.","nodes":[{"content":"This method takes two parameters: the <xref:System.ServiceModel.Description.MetadataExporter> and <xref:System.ServiceModel.Description.PolicyConversionContext> objects. Use the <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, and <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> methods to obtain collections of policy assertions that have already been exported at various scopes. Then use this method to add your own policy assertions to the appropriate collection.","pos":[0,648],"nodes":[{"content":"This method takes two parameters: the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataExporter&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> objects.","pos":[0,169],"source":"This method takes two parameters: the <xref:System.ServiceModel.Description.MetadataExporter> and <xref:System.ServiceModel.Description.PolicyConversionContext> objects."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;</ph> methods to obtain collections of policy assertions that have already been exported at various scopes.","pos":[170,562],"source":" Use the <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, and <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> methods to obtain collections of policy assertions that have already been exported at various scopes."},{"content":"Then use this method to add your own policy assertions to the appropriate collection.","pos":[563,648]}]}]},{"pos":[920,1386],"content":"The <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> property exposes the <xref:System.ServiceModel.Description.ContractDescription> for the endpoint that is being exported. This enables this method to correctly scope their exported policy assertions. For example, security attributes in code can add behaviors to the <xref:System.ServiceModel.Description.ContractDescription> that indicate where security policy assertions should be added.","nodes":[{"content":"The <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> property exposes the <xref:System.ServiceModel.Description.ContractDescription> for the endpoint that is being exported. This enables this method to correctly scope their exported policy assertions. For example, security attributes in code can add behaviors to the <xref:System.ServiceModel.Description.ContractDescription> that indicate where security policy assertions should be added.","pos":[0,466],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A&gt;</ph> property exposes the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> for the endpoint that is being exported.","pos":[0,199],"source":"The <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> property exposes the <xref:System.ServiceModel.Description.ContractDescription> for the endpoint that is being exported."},{"content":"This enables this method to correctly scope their exported policy assertions.","pos":[200,277]},{"content":"For example, security attributes in code can add behaviors to the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> that indicate where security policy assertions should be added.","pos":[278,466],"source":" For example, security attributes in code can add behaviors to the <xref:System.ServiceModel.Description.ContractDescription> that indicate where security policy assertions should be added."}]}]},{"pos":[1393,1612],"content":"Once custom policy assertions are attached to the WSDL information, clients can detect and import the custom binding assertions by implementing an <xref:System.ServiceModel.Description.IPolicyImportExtension> interface.","nodes":[{"content":"Once custom policy assertions are attached to the WSDL information, clients can detect and import the custom binding assertions by implementing an <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> interface.","pos":[0,219],"source":"Once custom policy assertions are attached to the WSDL information, clients can detect and import the custom binding assertions by implementing an <xref:System.ServiceModel.Description.IPolicyImportExtension> interface."}]}],"pos":[45269,46890],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Description.MetadataExporter\"></xref> that you can use to modify the exporting process.","nodes":[{"pos":[0,123],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.MetadataExporter\"&gt;&lt;/xref&gt;</ph> that you can use to modify the exporting process.","source":"The <xref href=\"System.ServiceModel.Description.MetadataExporter\"></xref> that you can use to modify the exporting process."}],"pos":[47195,47319],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Description.PolicyConversionContext\"></xref> that you can use to insert your custom policy assertion.","nodes":[{"pos":[0,137],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.PolicyConversionContext\"&gt;&lt;/xref&gt;</ph> that you can use to insert your custom policy assertion.","source":"The <xref href=\"System.ServiceModel.Description.PolicyConversionContext\"></xref> that you can use to insert your custom policy assertion."}],"pos":[47424,47562],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  commentId: T:System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  id: SslStreamSecurityBindingElement\n  children:\n  - System.ServiceModel.Channels.SslStreamSecurityBindingElement.#ctor\n  - System.ServiceModel.Channels.SslStreamSecurityBindingElement.#ctor(System.ServiceModel.Channels.SslStreamSecurityBindingElement)\n  - System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildClientStreamUpgradeProvider(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildServerStreamUpgradeProvider(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.SslStreamSecurityBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.SslStreamSecurityBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.SslStreamSecurityBindingElement.Clone\n  - System.ServiceModel.Channels.SslStreamSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.SslStreamSecurityBindingElement.GetTransportTokenAssertion\n  - System.ServiceModel.Channels.SslStreamSecurityBindingElement.IdentityVerifier\n  - System.ServiceModel.Channels.SslStreamSecurityBindingElement.RequireClientCertificate\n  - System.ServiceModel.Channels.SslStreamSecurityBindingElement.ShouldSerializeIdentityVerifier\n  - System.ServiceModel.Channels.SslStreamSecurityBindingElement.SslProtocols\n  - System.ServiceModel.Channels.SslStreamSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  langs:\n  - csharp\n  name: SslStreamSecurityBindingElement\n  nameWithType: SslStreamSecurityBindingElement\n  fullName: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Represents a custom binding element that supports channel security using an SSL stream.\n  remarks: \"Transports that use a stream-oriented protocol such as TCP and named pipes support stream-based transport upgrades. Specifically, [!INCLUDE[indigo1](~/includes/indigo1-md.md)] provides security upgrades. The configuration of this transport security is encapsulated by this class as well as by <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement>, which can be configured and added to a custom binding. In addition, a third party can write their own custom `StreamSecurityBindingElement`. These binding elements extend the <xref:System.ServiceModel.Channels.StreamUpgradeBindingElement> class that is called to build the client and server stream upgrade providers.  \\n  \\n A custom binding contains a collection of binding elements arranged in a specific order: the element that represents the top of the binding stack is added first, the next element down in the binding stack is added second, and so on.  \\n  \\n### To add this class to a binding  \\n  \\n1.  Create a <xref:System.ServiceModel.Channels.BindingElementCollection>.  \\n  \\n2.  Create custom binding elements that are above this binding element in the binding stack, such as the optional <xref:System.ServiceModel.Channels.TransactionFlowBindingElement> and <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>.  \\n  \\n3.  Add the created elements in the order described previously to the <xref:System.ServiceModel.Channels.BindingElementCollection> using the <xref:System.ServiceModel.Channels.BindingElementCollection.InsertItem%2A> method.  \\n  \\n4.  Create an instance of <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement> and add it to the collection.  \\n  \\n5.  Add any additional custom binding elements to the collection, such as <xref:System.ServiceModel.Channels.TcpTransportBindingElement>.  \\n  \\n There are three scenarios in which you must either manually specify the correct UPN/SPN on the client endpoint after importing the WSDL, or specify a custom <xref:System.ServiceModel.Security.IdentityVerifier> on the clientâ€™s <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement>.  \\n  \\n1.  No service identity is published in WSDL. <xref:System.ServiceModel.Configuration.AuthenticationMode.SspiNegotiatedOverTransport> and HTTPS are used (for example, a <xref:System.ServiceModel.WSHttpBinding> with SecurityMode = <xref:System.ServiceModel.SecurityMode.TransportWithMessageCredential>). If the service is not running with the machine identity, you must manually specify the correct UPN/SPN on the client endpoint after importing the WSDL.  \\n  \\n2.  DNSservice identity is published in WSDL. <xref:System.ServiceModel.Configuration.AuthenticationMode.SspiNegotiatedOverTransport> and <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement> are used (for example, <xref:System.ServiceModel.NetTcpBinding> with SecurityMode = <xref:System.ServiceModel.SecurityMode.TransportWithMessageCredential>) instead of a UPN/SPN. If the service is not running with the machine identity, or the DNS identity is not the machine's identity, you must manually specify the correct UPN/SPN on the client endpoint after importing the WSDL.  \\n  \\n3.  DNS identity is published in WSDL. If <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement> is overridden on the client, you must specify a custom <xref:System.ServiceModel.Security.IdentityVerifier> on the client's <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement>.  \\n  \\n The following code shows how to manually specify the correct UPN/SPN on the client endpoint, as well as how to specify a custom <xref:System.ServiceModel.Security.IdentityVerifier> on the client's <xref:System.ServiceModel.Channels.SslStreamSecurityBindingElement>.  \\n  \\n```  \\n  \\nusing System;  \\nusing System.Collections.Generic;  \\nusing System.Linq;  \\nusing System.Net;  \\nusing System.IdentityModel.Claims;  \\nusing System.IdentityModel.Policy;  \\nusing System.Security.Cryptography.X509Certificates;  \\nusing System.ServiceModel;  \\nusing System.ServiceModel.Channels;  \\nusing System.ServiceModel.Description;  \\nusing System.ServiceModel.Security;  \\nusing System.Xml;  \\n  \\nnamespace ServiceNamespace  \\n{  \\n    [ServiceContract]  \\n    interface IService  \\n    {  \\n        [OperationContract]  \\n        void DoSomething();  \\n    }  \\n  \\n    class DnsIdentityVerifier : IdentityVerifier  \\n    {  \\n        DnsEndpointIdentity _expectedIdentity;  \\n  \\n        public DnsIdentityVerifier(EndpointAddress serviceEndpoint)  \\n        {  \\n            _expectedIdentity = new DnsEndpointIdentity(serviceEndpoint.Uri.DnsSafeHost);  \\n        }  \\n  \\n        public override bool CheckAccess(EndpointIdentity identity, AuthorizationContext authContext)  \\n        {  \\n            Claim dnsClaim = authContext.Claims().Single(claim => claim.ClaimType == ClaimTypes.Dns);  \\n            return String.Equals(_expectedIdentity.IdentityClaim.Resource, dnsClaim.Resource);  \\n        }  \\n  \\n        public override bool TryGetIdentity(EndpointAddress reference, out EndpointIdentity identity)  \\n        {  \\n            identity = _expectedIdentity;  \\n            return true;  \\n        }  \\n    }  \\n  \\n    static class LinqExtensionForClaims  \\n    {  \\n        public static IEnumerable<Claim> Claims(this AuthorizationContext authContext)  \\n        {  \\n            if (null != authContext.ClaimSets)  \\n            {  \\n                foreach (ClaimSet claimSet in authContext.ClaimSets)  \\n                {  \\n                    if (null != claimSet)  \\n                    {  \\n                        foreach (Claim claim in claimSet)  \\n                        {  \\n                            yield return claim;  \\n                        }  \\n                    }  \\n                }  \\n            }  \\n        }  \\n    }  \\n  \\n    class Service : IService  \\n    {  \\n        public void DoSomething()  \\n        {  \\n            Console.WriteLine(\\\"Service called.\\\");  \\n        }  \\n    }  \\n  \\n    class Program  \\n    {  \\n        static void Main(string[] args)  \\n        {  \\n            string hostname = Dns.GetHostEntry(String.Empty).HostName;  \\n            NetTcpBinding serviceBinding = new NetTcpBinding(SecurityMode.TransportWithMessageCredential);  \\n  \\n            ServiceHost serviceHost = new ServiceHost(typeof(Service), new Uri(String.Format(\\\"net.tcp://{0}:8080/Service\\\", hostname)));  \\n            serviceHost.Credentials.ServiceCertificate.SetCertificate(StoreLocation.LocalMachine, StoreName.My, X509FindType.FindByThumbprint, \\\"8a 42 1b eb cf 8a 14 b1 de 83 d9 a5 70 88 0a 62 f9 bf 69 06\\\");  \\n            ServiceEndpoint serviceEndpoint = serviceHost.AddServiceEndpoint(typeof(IService), serviceBinding, \\\"Endpoint\\\");  \\n            serviceHost.Open();  \\n  \\n            CustomBinding clientBinding = new CustomBinding(serviceBinding.CreateBindingElements());  \\n            SslStreamSecurityBindingElement sslStream = clientBinding.Elements.Find<SslStreamSecurityBindingElement>();  \\n            sslStream.IdentityVerifier = new DnsIdentityVerifier(serviceEndpoint.Address);  \\n  \\n            ChannelFactory<IService> channelFactory = new ChannelFactory<IService>(clientBinding, new EndpointAddress(serviceEndpoint.Address.Uri, UpnEndpointIdentity.CreateUpnIdentity(\\\"username@domain\\\")));  \\n            channelFactory.Credentials.Windows.AllowNtlm = false;  \\n            IService channel = channelFactory.CreateChannel();  \\n            channel.DoSomething();  \\n        }  \\n    }  \\n  \\n```\"\n  syntax:\n    content: 'public class SslStreamSecurityBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Channels.ITransportTokenAssertionProvider, System.ServiceModel.Description.IPolicyExportExtension'\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Channels.BindingElement\n  - System.ServiceModel.Channels.StreamUpgradeBindingElement\n  implements:\n  - System.ServiceModel.Channels.ITransportTokenAssertionProvider\n  - System.ServiceModel.Description.IPolicyExportExtension\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.#ctor\n  commentId: M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  langs:\n  - csharp\n  name: SslStreamSecurityBindingElement()\n  nameWithType: SslStreamSecurityBindingElement.SslStreamSecurityBindingElement()\n  fullName: SslStreamSecurityBindingElement.SslStreamSecurityBindingElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.SslStreamSecurityBindingElement\"></xref> class.\n  syntax:\n    content: public SslStreamSecurityBindingElement ();\n    parameters: []\n  overload: System.ServiceModel.Channels.SslStreamSecurityBindingElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.#ctor(System.ServiceModel.Channels.SslStreamSecurityBindingElement)\n  commentId: M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.#ctor(System.ServiceModel.Channels.SslStreamSecurityBindingElement)\n  id: '#ctor(System.ServiceModel.Channels.SslStreamSecurityBindingElement)'\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  langs:\n  - csharp\n  name: SslStreamSecurityBindingElement(SslStreamSecurityBindingElement)\n  nameWithType: SslStreamSecurityBindingElement.SslStreamSecurityBindingElement(SslStreamSecurityBindingElement)\n  fullName: SslStreamSecurityBindingElement.SslStreamSecurityBindingElement(SslStreamSecurityBindingElement)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.SslStreamSecurityBindingElement\"></xref> class using the values from another <xref href=\"System.ServiceModel.Channels.SslStreamSecurityBindingElement\"></xref>.\n  syntax:\n    content: protected SslStreamSecurityBindingElement (System.ServiceModel.Channels.SslStreamSecurityBindingElement elementToBeCloned);\n    parameters:\n    - id: elementToBeCloned\n      type: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n      description: The <xref href=\"System.ServiceModel.Channels.SslStreamSecurityBindingElement\"></xref> to clone.\n  overload: System.ServiceModel.Channels.SslStreamSecurityBindingElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  langs:\n  - csharp\n  name: BuildChannelFactory<TChannel>(BindingContext)\n  nameWithType: SslStreamSecurityBindingElement.BuildChannelFactory<TChannel>(BindingContext)\n  fullName: SslStreamSecurityBindingElement.BuildChannelFactory<TChannel>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Creates a channel factory of a specified type.\n  remarks: This method creates a channel factory, which is used to create a channel that processes outgoing messages for this binding.\n  syntax:\n    content: public override System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref>.\n    typeParameters:\n    - id: TChannel\n      description: Type of channel factory.\n    return:\n      type: System.ServiceModel.Channels.IChannelFactory`1\n      description: An <xref href=\"System.ServiceModel.Channels.IChannelFactory\"></xref> object that represents the channel factory of type <code>TChannel</code>.\n  overload: System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildChannelFactory``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  id: BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  langs:\n  - csharp\n  name: BuildChannelListener<TChannel>(BindingContext)\n  nameWithType: SslStreamSecurityBindingElement.BuildChannelListener<TChannel>(BindingContext)\n  fullName: SslStreamSecurityBindingElement.BuildChannelListener<TChannel>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Creates a channel listener of a specified type.\n  remarks: This method creates a channel listener, which is used to create a channel that processes incoming messages for this binding.\n  syntax:\n    content: 'public override System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref>.\n    typeParameters:\n    - id: TChannel\n      description: Type of channel listener.\n    return:\n      type: System.ServiceModel.Channels.IChannelListener`1\n      description: An <xref href=\"System.ServiceModel.Channels.IChannelListener\"></xref> object that represents a channel listener of type <code>TChannel</code>.\n  overload: System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildChannelListener``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildClientStreamUpgradeProvider(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildClientStreamUpgradeProvider(System.ServiceModel.Channels.BindingContext)\n  id: BuildClientStreamUpgradeProvider(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  langs:\n  - csharp\n  name: BuildClientStreamUpgradeProvider(BindingContext)\n  nameWithType: SslStreamSecurityBindingElement.BuildClientStreamUpgradeProvider(BindingContext)\n  fullName: SslStreamSecurityBindingElement.BuildClientStreamUpgradeProvider(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Creates an instance on the client of the <xref href=\"System.ServiceModel.Channels.StreamUpgradeProvider\"></xref> based on the channel context provided.\n  remarks: \"This method is called when opening the client channel factory and provides a custom implementation of the <xref:System.ServiceModel.Channels.StreamUpgradeProvider> abstract class.  \\n  \\n The <xref:System.ServiceModel.Channels.BindingContext> parameter enables reacting to other elements in the channel stack.\"\n  syntax:\n    content: public override System.ServiceModel.Channels.StreamUpgradeProvider BuildClientStreamUpgradeProvider (System.ServiceModel.Channels.BindingContext context);\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> for the entire channel stack.\n    return:\n      type: System.ServiceModel.Channels.StreamUpgradeProvider\n      description: An instance of the <xref href=\"System.ServiceModel.Channels.StreamUpgradeProvider\"></xref>.\n  overload: System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildClientStreamUpgradeProvider*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildServerStreamUpgradeProvider(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildServerStreamUpgradeProvider(System.ServiceModel.Channels.BindingContext)\n  id: BuildServerStreamUpgradeProvider(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  langs:\n  - csharp\n  name: BuildServerStreamUpgradeProvider(BindingContext)\n  nameWithType: SslStreamSecurityBindingElement.BuildServerStreamUpgradeProvider(BindingContext)\n  fullName: SslStreamSecurityBindingElement.BuildServerStreamUpgradeProvider(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Creates an instance on the server of the <xref href=\"System.ServiceModel.Channels.StreamUpgradeProvider\"></xref> based on the channel context provided.\n  remarks: \"This method is called when opening the service and provides a custom implementation of the <xref:System.ServiceModel.Channels.StreamUpgradeProvider> abstract class.  \\n  \\n The <xref:System.ServiceModel.Channels.BindingContext> parameter enables reacting to other elements in the channel stack.\"\n  syntax:\n    content: public override System.ServiceModel.Channels.StreamUpgradeProvider BuildServerStreamUpgradeProvider (System.ServiceModel.Channels.BindingContext context);\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> for the entire channel stack.\n    return:\n      type: System.ServiceModel.Channels.StreamUpgradeProvider\n      description: An instance of the <xref href=\"System.ServiceModel.Channels.StreamUpgradeProvider\"></xref>.\n  overload: System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildServerStreamUpgradeProvider*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  id: CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  langs:\n  - csharp\n  name: CanBuildChannelFactory<TChannel>(BindingContext)\n  nameWithType: SslStreamSecurityBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)\n  fullName: SslStreamSecurityBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets a value that indicates whether a channel factory of the specified type can be built.\n  remarks: You should call this method before trying to create a channel factory.\n  syntax:\n    content: public override bool CanBuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref>.\n    typeParameters:\n    - id: TChannel\n      description: Type of channel factory.\n    return:\n      type: System.Boolean\n      description: '`true` if a channel factory of the specified type can be built; otherwise, `false`.'\n  overload: System.ServiceModel.Channels.SslStreamSecurityBindingElement.CanBuildChannelFactory``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  id: CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  langs:\n  - csharp\n  name: CanBuildChannelListener<TChannel>(BindingContext)\n  nameWithType: SslStreamSecurityBindingElement.CanBuildChannelListener<TChannel>(BindingContext)\n  fullName: SslStreamSecurityBindingElement.CanBuildChannelListener<TChannel>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets a value that indicates whether a channel listener of the specified type can be built.\n  remarks: You should call this method before trying to create a channel listener.\n  syntax:\n    content: 'public override bool CanBuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref>.\n    typeParameters:\n    - id: TChannel\n      description: Type of channel listener.\n    return:\n      type: System.Boolean\n      description: '`true` if a channel listener of the specified type can be built; otherwise, `false`.'\n  overload: System.ServiceModel.Channels.SslStreamSecurityBindingElement.CanBuildChannelListener``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.Clone\n  commentId: M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.Clone\n  id: Clone\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: SslStreamSecurityBindingElement.Clone()\n  fullName: SslStreamSecurityBindingElement.Clone()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Creates a new instance that is a copy of the current instance.\n  syntax:\n    content: public override System.ServiceModel.Channels.BindingElement Clone ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Channels.BindingElement\n      description: A <xref href=\"System.ServiceModel.Channels.SslStreamSecurityBindingElement\"></xref> instance that is a copy of the current instance.\n  overload: System.ServiceModel.Channels.SslStreamSecurityBindingElement.Clone*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  id: GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  langs:\n  - csharp\n  name: GetProperty<T>(BindingContext)\n  nameWithType: SslStreamSecurityBindingElement.GetProperty<T>(BindingContext)\n  fullName: SslStreamSecurityBindingElement.GetProperty<T>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets a specified object from the <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref>.\n  remarks: This method gets the specified object from the base class or from one of that class's ancestors. The object returned is usually a collection of properties, for example, an object that implements <xref:System.ServiceModel.Channels.ISecurityCapabilities>.\n  syntax:\n    content: 'public override T GetProperty<T> (System.ServiceModel.Channels.BindingContext context) where T : class;'\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: A <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref>.\n    typeParameters:\n    - id: T\n      description: The type of the object to get.\n    return:\n      type: T\n      description: The  object of type <code>T</code> from the <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref>, or `null` if the object is not found.\n  overload: System.ServiceModel.Channels.SslStreamSecurityBindingElement.GetProperty``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.GetTransportTokenAssertion\n  commentId: M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.GetTransportTokenAssertion\n  id: GetTransportTokenAssertion\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  langs:\n  - csharp\n  name: GetTransportTokenAssertion()\n  nameWithType: SslStreamSecurityBindingElement.GetTransportTokenAssertion()\n  fullName: SslStreamSecurityBindingElement.GetTransportTokenAssertion()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the <xref href=\"System.Xml.XmlElement\"></xref> that represents the transport token used in the security binding.\n  remarks: This method is used to generate WSDL for the associated service.\n  syntax:\n    content: public System.Xml.XmlElement GetTransportTokenAssertion ();\n    parameters: []\n    return:\n      type: System.Xml.XmlElement\n      description: An <xref href=\"System.Xml.XmlElement\"></xref> that represents the transport token used in the security binding.\n  overload: System.ServiceModel.Channels.SslStreamSecurityBindingElement.GetTransportTokenAssertion*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.IdentityVerifier\n  commentId: P:System.ServiceModel.Channels.SslStreamSecurityBindingElement.IdentityVerifier\n  id: IdentityVerifier\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  langs:\n  - csharp\n  name: IdentityVerifier\n  nameWithType: SslStreamSecurityBindingElement.IdentityVerifier\n  fullName: SslStreamSecurityBindingElement.IdentityVerifier\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the identity verifier for this binding.\n  syntax:\n    content: public System.ServiceModel.Security.IdentityVerifier IdentityVerifier { get; set; }\n    return:\n      type: System.ServiceModel.Security.IdentityVerifier\n      description: An <xref href=\"System.ServiceModel.Security.IdentityVerifier\"></xref> object.\n  overload: System.ServiceModel.Channels.SslStreamSecurityBindingElement.IdentityVerifier*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value to set is null.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.RequireClientCertificate\n  commentId: P:System.ServiceModel.Channels.SslStreamSecurityBindingElement.RequireClientCertificate\n  id: RequireClientCertificate\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  langs:\n  - csharp\n  name: RequireClientCertificate\n  nameWithType: SslStreamSecurityBindingElement.RequireClientCertificate\n  fullName: SslStreamSecurityBindingElement.RequireClientCertificate\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets a value that specifies whether a client certificate is required for this binding.\n  syntax:\n    content: public bool RequireClientCertificate { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if a client certificate is required for this binding; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.Channels.SslStreamSecurityBindingElement.RequireClientCertificate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.ShouldSerializeIdentityVerifier\n  commentId: M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.ShouldSerializeIdentityVerifier\n  id: ShouldSerializeIdentityVerifier\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  langs:\n  - csharp\n  name: ShouldSerializeIdentityVerifier()\n  nameWithType: SslStreamSecurityBindingElement.ShouldSerializeIdentityVerifier()\n  fullName: SslStreamSecurityBindingElement.ShouldSerializeIdentityVerifier()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets a value that indicates whether the identify verifier should be serialized.\n  syntax:\n    content: public bool ShouldSerializeIdentityVerifier ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the identity verifier should be serialized; otherwise, `false`.'\n  overload: System.ServiceModel.Channels.SslStreamSecurityBindingElement.ShouldSerializeIdentityVerifier*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.SslProtocols\n  commentId: P:System.ServiceModel.Channels.SslStreamSecurityBindingElement.SslProtocols\n  id: SslProtocols\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  langs:\n  - csharp\n  name: SslProtocols\n  nameWithType: SslStreamSecurityBindingElement.SslProtocols\n  fullName: SslStreamSecurityBindingElement.SslProtocols\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: 'Specifies the list of SSL/TLS protocols to negotiate when using a client credential type of TcpClientCredentialType.Certificate. The value can be a combination of one of more of the following enumeration members: Ssl3, Tls, Tls11, Tls12.'\n  remarks: The default value is Ssl3 &#124; Tls &#124; Tls11 &#124; Tls12. Versions of the framework prior to 4.6 only support Ssl3 and Tls. If these are not included, communication with earlier versions of the framework will not be possible. Specifying Tls11 and/or Tls12 will disable the usage of Ssl3, even if it has been included.\n  example:\n  - \"```  \\nNetTcpBinding netTcpBinding = new NetTcpBinding(SecurityMode.Transport);  \\nnetTcpBinding.Security.Transport.ClientCredentialType = TcpClientCredentialType.Certificate;  \\nCustomBinding b = new CustomBinding(netTcpBinding);  \\nSslStreamSecurityBindingElement sslStream = b.Elements.Find<SslStreamSecurityBindingElement>();  \\nsslStream.SslProtocols = SslProtocols.Tls11 | SslProtocols.Tls12;  \\nEndpointAddress a = new EndpointAddress(\\\"net.tcp://contoso.com/TcpAddress\\\");  \\nChannelFactory<ICalculator> cf = new ChannelFactory<ICalculator>(b, a);  \\ncf.Credentials.ClientCertificate.SetCertificate(  \\nÂ Â Â  StoreLocation.LocalMachine,  \\nÂ Â Â  StoreName.My,  \\nÂ Â Â  X509FindType.FindByThumbprint,  \\nÂ Â Â  \\\"0000000000000000000000000000000000000000\\\");  \\n```\"\n  syntax:\n    content: public System.Security.Authentication.SslProtocols SslProtocols { get; set; }\n    return:\n      type: System.Security.Authentication.SslProtocols\n      description: Returns <xref href=\"System.Security.Authentication.SslProtocols\"></xref>.\n  overload: System.ServiceModel.Channels.SslStreamSecurityBindingElement.SslProtocols*\n  exceptions: []\n  version:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  commentId: M:System.ServiceModel.Channels.SslStreamSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  id: System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  isEii: true\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  langs:\n  - csharp\n  name: IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)\n  nameWithType: SslStreamSecurityBindingElement.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)\n  fullName: SslStreamSecurityBindingElement.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Exports a custom policy assertion about bindings.\n  remarks: \"This method writes binding-related statements into the WSDL information exposed by a particular contract and is used by [!INCLUDE[indigo2](~/includes/indigo2-md.md)] to communicate to clients the existence of this custom binding element in the binding stack.  \\n  \\n This method takes two parameters: the <xref:System.ServiceModel.Description.MetadataExporter> and <xref:System.ServiceModel.Description.PolicyConversionContext> objects. Use the <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, and <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> methods to obtain collections of policy assertions that have already been exported at various scopes. Then use this method to add your own policy assertions to the appropriate collection.  \\n  \\n The <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> property exposes the <xref:System.ServiceModel.Description.ContractDescription> for the endpoint that is being exported. This enables this method to correctly scope their exported policy assertions. For example, security attributes in code can add behaviors to the <xref:System.ServiceModel.Description.ContractDescription> that indicate where security policy assertions should be added.  \\n  \\n Once custom policy assertions are attached to the WSDL information, clients can detect and import the custom binding assertions by implementing an <xref:System.ServiceModel.Description.IPolicyImportExtension> interface.\"\n  syntax:\n    content: void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);\n    parameters:\n    - id: exporter\n      type: System.ServiceModel.Description.MetadataExporter\n      description: The <xref href=\"System.ServiceModel.Description.MetadataExporter\"></xref> that you can use to modify the exporting process.\n    - id: context\n      type: System.ServiceModel.Description.PolicyConversionContext\n      description: The <xref href=\"System.ServiceModel.Description.PolicyConversionContext\"></xref> that you can use to insert your custom policy assertion.\n  overload: System.ServiceModel.Channels.SslStreamSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Channels.StreamUpgradeBindingElement\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: StreamUpgradeBindingElement\n  nameWithType: StreamUpgradeBindingElement\n  fullName: System.ServiceModel.Channels.StreamUpgradeBindingElement\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.#ctor\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: SslStreamSecurityBindingElement()\n  nameWithType: SslStreamSecurityBindingElement.SslStreamSecurityBindingElement()\n  fullName: SslStreamSecurityBindingElement.SslStreamSecurityBindingElement()\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.#ctor(System.ServiceModel.Channels.SslStreamSecurityBindingElement)\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: SslStreamSecurityBindingElement(SslStreamSecurityBindingElement)\n  nameWithType: SslStreamSecurityBindingElement.SslStreamSecurityBindingElement(SslStreamSecurityBindingElement)\n  fullName: SslStreamSecurityBindingElement.SslStreamSecurityBindingElement(SslStreamSecurityBindingElement)\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: SslStreamSecurityBindingElement\n  nameWithType: SslStreamSecurityBindingElement\n  fullName: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: BuildChannelFactory<TChannel>(BindingContext)\n  nameWithType: SslStreamSecurityBindingElement.BuildChannelFactory<TChannel>(BindingContext)\n  fullName: SslStreamSecurityBindingElement.BuildChannelFactory<TChannel>(BindingContext)\n- uid: System.ServiceModel.Channels.IChannelFactory`1\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IChannelFactory<TChannel>\n  nameWithType: IChannelFactory<TChannel>\n  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>\n- uid: System.ServiceModel.Channels.BindingContext\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: BindingContext\n  nameWithType: BindingContext\n  fullName: System.ServiceModel.Channels.BindingContext\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: BuildChannelListener<TChannel>(BindingContext)\n  nameWithType: SslStreamSecurityBindingElement.BuildChannelListener<TChannel>(BindingContext)\n  fullName: SslStreamSecurityBindingElement.BuildChannelListener<TChannel>(BindingContext)\n- uid: System.ServiceModel.Channels.IChannelListener`1\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IChannelListener<TChannel>\n  nameWithType: IChannelListener<TChannel>\n  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildClientStreamUpgradeProvider(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: BuildClientStreamUpgradeProvider(BindingContext)\n  nameWithType: SslStreamSecurityBindingElement.BuildClientStreamUpgradeProvider(BindingContext)\n  fullName: SslStreamSecurityBindingElement.BuildClientStreamUpgradeProvider(BindingContext)\n- uid: System.ServiceModel.Channels.StreamUpgradeProvider\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: StreamUpgradeProvider\n  nameWithType: StreamUpgradeProvider\n  fullName: System.ServiceModel.Channels.StreamUpgradeProvider\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildServerStreamUpgradeProvider(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: BuildServerStreamUpgradeProvider(BindingContext)\n  nameWithType: SslStreamSecurityBindingElement.BuildServerStreamUpgradeProvider(BindingContext)\n  fullName: SslStreamSecurityBindingElement.BuildServerStreamUpgradeProvider(BindingContext)\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: CanBuildChannelFactory<TChannel>(BindingContext)\n  nameWithType: SslStreamSecurityBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)\n  fullName: SslStreamSecurityBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: CanBuildChannelListener<TChannel>(BindingContext)\n  nameWithType: SslStreamSecurityBindingElement.CanBuildChannelListener<TChannel>(BindingContext)\n  fullName: SslStreamSecurityBindingElement.CanBuildChannelListener<TChannel>(BindingContext)\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.Clone\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: Clone()\n  nameWithType: SslStreamSecurityBindingElement.Clone()\n  fullName: SslStreamSecurityBindingElement.Clone()\n- uid: System.ServiceModel.Channels.BindingElement\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: BindingElement\n  nameWithType: BindingElement\n  fullName: System.ServiceModel.Channels.BindingElement\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: GetProperty<T>(BindingContext)\n  nameWithType: SslStreamSecurityBindingElement.GetProperty<T>(BindingContext)\n  fullName: SslStreamSecurityBindingElement.GetProperty<T>(BindingContext)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.GetTransportTokenAssertion\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: GetTransportTokenAssertion()\n  nameWithType: SslStreamSecurityBindingElement.GetTransportTokenAssertion()\n  fullName: SslStreamSecurityBindingElement.GetTransportTokenAssertion()\n- uid: System.Xml.XmlElement\n  parent: System.Xml\n  isExternal: false\n  name: XmlElement\n  nameWithType: XmlElement\n  fullName: System.Xml.XmlElement\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.IdentityVerifier\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: IdentityVerifier\n  nameWithType: SslStreamSecurityBindingElement.IdentityVerifier\n  fullName: SslStreamSecurityBindingElement.IdentityVerifier\n- uid: System.ServiceModel.Security.IdentityVerifier\n  parent: System.ServiceModel.Security\n  isExternal: false\n  name: IdentityVerifier\n  nameWithType: IdentityVerifier\n  fullName: System.ServiceModel.Security.IdentityVerifier\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.RequireClientCertificate\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: RequireClientCertificate\n  nameWithType: SslStreamSecurityBindingElement.RequireClientCertificate\n  fullName: SslStreamSecurityBindingElement.RequireClientCertificate\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.ShouldSerializeIdentityVerifier\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: ShouldSerializeIdentityVerifier()\n  nameWithType: SslStreamSecurityBindingElement.ShouldSerializeIdentityVerifier()\n  fullName: SslStreamSecurityBindingElement.ShouldSerializeIdentityVerifier()\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.SslProtocols\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: SslProtocols\n  nameWithType: SslStreamSecurityBindingElement.SslProtocols\n  fullName: SslStreamSecurityBindingElement.SslProtocols\n- uid: System.Security.Authentication.SslProtocols\n  parent: System.Security.Authentication\n  isExternal: false\n  name: SslProtocols\n  nameWithType: SslProtocols\n  fullName: System.Security.Authentication.SslProtocols\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)\n  nameWithType: SslStreamSecurityBindingElement.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)\n  fullName: SslStreamSecurityBindingElement.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)\n- uid: System.ServiceModel.Description.MetadataExporter\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: MetadataExporter\n  nameWithType: MetadataExporter\n  fullName: System.ServiceModel.Description.MetadataExporter\n- uid: System.ServiceModel.Description.PolicyConversionContext\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: PolicyConversionContext\n  nameWithType: PolicyConversionContext\n  fullName: System.ServiceModel.Description.PolicyConversionContext\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.#ctor*\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: SslStreamSecurityBindingElement\n  nameWithType: SslStreamSecurityBindingElement.SslStreamSecurityBindingElement\n  fullName: SslStreamSecurityBindingElement.SslStreamSecurityBindingElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildChannelFactory``1*\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: BuildChannelFactory<TChannel>\n  nameWithType: SslStreamSecurityBindingElement.BuildChannelFactory<TChannel>\n  fullName: SslStreamSecurityBindingElement.BuildChannelFactory<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildChannelListener``1*\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: BuildChannelListener<TChannel>\n  nameWithType: SslStreamSecurityBindingElement.BuildChannelListener<TChannel>\n  fullName: SslStreamSecurityBindingElement.BuildChannelListener<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildClientStreamUpgradeProvider*\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: BuildClientStreamUpgradeProvider\n  nameWithType: SslStreamSecurityBindingElement.BuildClientStreamUpgradeProvider\n  fullName: SslStreamSecurityBindingElement.BuildClientStreamUpgradeProvider\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.BuildServerStreamUpgradeProvider*\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: BuildServerStreamUpgradeProvider\n  nameWithType: SslStreamSecurityBindingElement.BuildServerStreamUpgradeProvider\n  fullName: SslStreamSecurityBindingElement.BuildServerStreamUpgradeProvider\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.CanBuildChannelFactory``1*\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: CanBuildChannelFactory<TChannel>\n  nameWithType: SslStreamSecurityBindingElement.CanBuildChannelFactory<TChannel>\n  fullName: SslStreamSecurityBindingElement.CanBuildChannelFactory<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.CanBuildChannelListener``1*\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: CanBuildChannelListener<TChannel>\n  nameWithType: SslStreamSecurityBindingElement.CanBuildChannelListener<TChannel>\n  fullName: SslStreamSecurityBindingElement.CanBuildChannelListener<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.Clone*\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: Clone\n  nameWithType: SslStreamSecurityBindingElement.Clone\n  fullName: SslStreamSecurityBindingElement.Clone\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.GetProperty``1*\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: GetProperty<T>\n  nameWithType: SslStreamSecurityBindingElement.GetProperty<T>\n  fullName: SslStreamSecurityBindingElement.GetProperty<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.GetTransportTokenAssertion*\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: GetTransportTokenAssertion\n  nameWithType: SslStreamSecurityBindingElement.GetTransportTokenAssertion\n  fullName: SslStreamSecurityBindingElement.GetTransportTokenAssertion\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.IdentityVerifier*\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: IdentityVerifier\n  nameWithType: SslStreamSecurityBindingElement.IdentityVerifier\n  fullName: SslStreamSecurityBindingElement.IdentityVerifier\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.RequireClientCertificate*\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: RequireClientCertificate\n  nameWithType: SslStreamSecurityBindingElement.RequireClientCertificate\n  fullName: SslStreamSecurityBindingElement.RequireClientCertificate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.ShouldSerializeIdentityVerifier*\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: ShouldSerializeIdentityVerifier\n  nameWithType: SslStreamSecurityBindingElement.ShouldSerializeIdentityVerifier\n  fullName: SslStreamSecurityBindingElement.ShouldSerializeIdentityVerifier\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.SslProtocols*\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: SslProtocols\n  nameWithType: SslStreamSecurityBindingElement.SslProtocols\n  fullName: SslStreamSecurityBindingElement.SslProtocols\n  monikers:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n- uid: System.ServiceModel.Channels.SslStreamSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*\n  parent: System.ServiceModel.Channels.SslStreamSecurityBindingElement\n  isExternal: false\n  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy\n  nameWithType: SslStreamSecurityBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy\n  fullName: SslStreamSecurityBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/SslStreamSecurityBindingElement.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.Channels.ITransportTokenAssertionProvider\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: ITransportTokenAssertionProvider\n  nameWithType: ITransportTokenAssertionProvider\n  fullName: System.ServiceModel.Channels.ITransportTokenAssertionProvider\n- uid: System.ServiceModel.Description.IPolicyExportExtension\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: IPolicyExportExtension\n  nameWithType: IPolicyExportExtension\n  fullName: System.ServiceModel.Description.IPolicyExportExtension\n"}