{"nodes":[{"content":"Specifies one or more SOAP faults that are returned when a service operation encounters processing errors.","nodes":[{"pos":[0,106],"content":"Specifies one or more SOAP faults that are returned when a service operation encounters processing errors.","nodes":[{"content":"Specifies one or more SOAP faults that are returned when a service operation encounters processing errors.","pos":[0,106]}]}],"pos":[842,949],"yaml":true},{"content":"Mark an operation with the <xref:System.ServiceModel.FaultContractAttribute> attribute to declare one or more specific exception conditions that are added to the Web Service Description Language (WSDL) description of the service operation as explicit SOAP fault messages returned by the operation.  \n  \n In all managed applications, processing errors are represented by <xref:System.Exception> objects. In SOAP-based applications such as [!INCLUDE[indigo1](~/includes/indigo1-md.md)] applications, service methods communicate processing error information using SOAP fault messages. Because [!INCLUDE[indigo2](~/includes/indigo2-md.md)] applications execute under both types of error systems, any managed exception information that must be sent to the client must be converted from exceptions into SOAP faults. You can use the default service exception behaviors, or you can explicitly control whether -- and how -- exceptions are mapped to fault messages. For an overview of exceptions and SOAP faults in [!INCLUDE[indigo2](~/includes/indigo2-md.md)] applications, see [Specifying and Handling Faults in Contracts and Services](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md).  \n  \n It is recommended that service operations use the <xref:System.ServiceModel.FaultContractAttribute> to formally specify all SOAP faults that a client can expect to receive in the normal course of an operation. It is also recommended that only that information a client must know is returned in a SOAP fault to minimize information disclosure.  \n  \n-   The <xref:System.ServiceModel.FaultContractAttribute.Action%2A> property controls the action of the fault message.  \n  \n-   The <xref:System.ServiceModel.FaultContractAttribute.DetailType%2A> property gets the type of the detail object serialized in the fault message.  \n  \n-   The <xref:System.ServiceModel.FaultContractAttribute.Name%2A> and <xref:System.ServiceModel.FaultContractAttribute.Namespace%2A> properties control the name and namespace, respectively, of the fault message.  \n  \n-   The <xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A> indicates whether the fault message has a protection level specified, and if so, the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property controls that level of protection.  \n  \n> [!CAUTION]\n>  If a fault message carries information that is sensitive or can lead to security problems, it is strongly recommended that the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property be set.  \n  \n-   If you set the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> explicitly to either <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> or <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>, then you must use a binding with security enabled using the <xref:System.ServiceModel.SecurityMode?displayProperty=fullName> property on the binding or an exception is thrown.  \n  \n-   If you select a binding that enables security and you do not set the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property anywhere on the contract, all application data will be encrypted and signed.  \n  \n-   If you select a binding that does not have security enabled (for example, the <xref:System.ServiceModel.BasicHttpBinding?displayProperty=fullName> has security disabled by default), and the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> is not explicitly set, then none of the application data will be protected.  \n  \n For many scenarios setting <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> to <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> for fault messages is sufficient. For more details, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).  \n  \n To return a specified fault from an operation marked with <xref:System.ServiceModel.FaultContractAttribute>, throw a <xref:System.ServiceModel.FaultException%601> (where the type parameter is the serializable error information) when the managed exception occurs during the operation. [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client applications surface the SOAP fault as the same type as was thrown in the client implementation -- that is, as a <xref:System.ServiceModel.FaultException%601> (where the typeparameter is the serializable error information). The <xref:System.ServiceModel.FaultContractAttribute> can be used only to specify SOAP faults for two-way service operations and for asynchronous operation pairs; one-way operations do not support SOAP faults and therefore do not support <xref:System.ServiceModel.FaultContractAttribute>.  \n  \n> [!NOTE]\n>  You can use any serializable type to convey error information. The only restriction in this version of [!INCLUDE[indigo2](~/includes/indigo2-md.md)] is that types specified in a <xref:System.ServiceModel.FaultContractAttribute> must be serializable by the <xref:System.Runtime.Serialization.DataContractSerializer?displayProperty=fullName>. For the serialization support the <xref:System.Runtime.Serialization.DataContractSerializer> provides, see [Data Contract Serializer](~/docs/framework/wcf/feature-details/data-contract-serializer.md).  \n  \n For example, to specify that clients can expect a SOAP fault that contains an <xref:System.Int32>, place that type parameter in the <xref:System.ServiceModel.FaultContractAttribute> on your service method.  \n  \n> [!NOTE]\n>  The following code examples do not set the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A>, <xref:System.ServiceModel.FaultContractAttribute.Name%2A>, or <xref:System.ServiceModel.FaultContractAttribute.Namespace%2A> properties.  \n  \n [!code-csharp[C_FCA#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_fca/cs/fcademo.cs#1)]\n [!code-vb[C_FCA#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_fca/vb/fcademo.vb#1)]  \n  \n Then, in your service method, throw a new <xref:System.ServiceModel.FaultException%601> where the type parameter is the type that contains the error information (in the above case, a <xref:System.Int32>). For example:  \n  \n [!code-csharp[C_FCA#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_fca/cs/fcademo.cs#2)]\n [!code-vb[C_FCA#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_fca/vb/fcademo.vb#2)]  \n  \n The preceding example is very basic; almost any information can be passed using an <xref:System.Int32?displayProperty=fullName> code, so this detail type is not the most useful. Typically, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] applications specify SOAP faults with detail types specific to the error information requirements of the client. For a more complete example, see the Example section.  \n  \n> [!NOTE]\n>  If you specify a <xref:System.ServiceModel.FaultException%601> where the type parameter is a <xref:System.String?displayProperty=fullName>, the string value is assigned to the Detail property in the client application; clients cannot retrieve that string by calling the <xref:System.ServiceModel.FaultException%601.ToString%2A?displayProperty=fullName> method. To have the string value returned when the client application calls <xref:System.Exception.ToString%2A?displayProperty=fullName>, throw a <xref:System.ServiceModel.FaultException?displayProperty=fullName> exception inside the operation and pass the string to the constructor.  \n  \n To explicitly control the behavior of the application when an exception or <xref:System.ServiceModel.FaultException%601> is thrown, implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=fullName> interface on an <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=fullName>, <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName> or <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName> and assign it to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=fullName> property. <xref:System.ServiceModel.Dispatcher.IErrorHandler>enables you to explicitly control the SOAP fault that is generated and whether to send it back to the client.  \n  \n To facilitate debugging, set the <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> to `true` in code or you can use the <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> in an application configuration file. When enabled, the service automatically returns exception information to the caller. These faults appear to the client as <xref:System.ServiceModel.FaultException> exceptions.  \n  \n> [!IMPORTANT]\n>  Because managed exceptions can expose internal application information, setting <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> or <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> to `true` can permit [!INCLUDE[indigo2](~/includes/indigo2-md.md)] clients to obtain information about internal service operation exceptions, including personally identifiable or other sensitive information.  \n>   \n>  Therefore, setting <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> or <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> to `true` is only recommended as a way of temporarily debugging a service application. In addition, the WSDL for a method that returns unhandled managed exceptions in this way does not contain the contract for the <xref:System.ServiceModel.FaultException%601> of type <xref:System.String>. Clients must expect the possibility of an unknown SOAP fault (returned to [!INCLUDE[indigo2](~/includes/indigo2-md.md)] clients as <xref:System.ServiceModel.FaultException?displayProperty=fullName> objects) to obtain the debugging information properly.","nodes":[{"pos":[0,297],"content":"Mark an operation with the <xref:System.ServiceModel.FaultContractAttribute> attribute to declare one or more specific exception conditions that are added to the Web Service Description Language (WSDL) description of the service operation as explicit SOAP fault messages returned by the operation.","nodes":[{"content":"Mark an operation with the <ph id=\"ph1\">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> attribute to declare one or more specific exception conditions that are added to the Web Service Description Language (WSDL) description of the service operation as explicit SOAP fault messages returned by the operation.","pos":[0,297],"source":"Mark an operation with the <xref:System.ServiceModel.FaultContractAttribute> attribute to declare one or more specific exception conditions that are added to the Web Service Description Language (WSDL) description of the service operation as explicit SOAP fault messages returned by the operation."}]},{"pos":[304,1210],"content":"In all managed applications, processing errors are represented by <xref:System.Exception> objects. In SOAP-based applications such as [!INCLUDE[indigo1](~/includes/indigo1-md.md)] applications, service methods communicate processing error information using SOAP fault messages. Because [!INCLUDE[indigo2](~/includes/indigo2-md.md)] applications execute under both types of error systems, any managed exception information that must be sent to the client must be converted from exceptions into SOAP faults. You can use the default service exception behaviors, or you can explicitly control whether -- and how -- exceptions are mapped to fault messages. For an overview of exceptions and SOAP faults in [!INCLUDE[indigo2](~/includes/indigo2-md.md)] applications, see [Specifying and Handling Faults in Contracts and Services](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md).","nodes":[{"content":"In all managed applications, processing errors are represented by <ph id=\"ph1\">&lt;xref:System.Exception&gt;</ph> objects.","pos":[0,98],"source":"In all managed applications, processing errors are represented by <xref:System.Exception> objects."},{"content":"In SOAP-based applications such as <ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> applications, service methods communicate processing error information using SOAP fault messages.","pos":[99,277],"source":" In SOAP-based applications such as [!INCLUDE[indigo1](~/includes/indigo1-md.md)] applications, service methods communicate processing error information using SOAP fault messages."},{"content":"Because <ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> applications execute under both types of error systems, any managed exception information that must be sent to the client must be converted from exceptions into SOAP faults.","pos":[278,505],"source":" Because [!INCLUDE[indigo2](~/includes/indigo2-md.md)] applications execute under both types of error systems, any managed exception information that must be sent to the client must be converted from exceptions into SOAP faults."},{"content":"You can use the default service exception behaviors, or you can explicitly control whether -- and how -- exceptions are mapped to fault messages.","pos":[506,651]},{"content":"For an overview of exceptions and SOAP faults in <ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> applications, see <bpt id=\"p1\">[</bpt>Specifying and Handling Faults in Contracts and Services<ept id=\"p1\">](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md)</ept>.","pos":[652,906],"source":" For an overview of exceptions and SOAP faults in [!INCLUDE[indigo2](~/includes/indigo2-md.md)] applications, see [Specifying and Handling Faults in Contracts and Services](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md)."}]},{"pos":[1217,1559],"content":"It is recommended that service operations use the <xref:System.ServiceModel.FaultContractAttribute> to formally specify all SOAP faults that a client can expect to receive in the normal course of an operation. It is also recommended that only that information a client must know is returned in a SOAP fault to minimize information disclosure.","nodes":[{"content":"It is recommended that service operations use the <xref:System.ServiceModel.FaultContractAttribute> to formally specify all SOAP faults that a client can expect to receive in the normal course of an operation. It is also recommended that only that information a client must know is returned in a SOAP fault to minimize information disclosure.","pos":[0,342],"nodes":[{"content":"It is recommended that service operations use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> to formally specify all SOAP faults that a client can expect to receive in the normal course of an operation.","pos":[0,209],"source":"It is recommended that service operations use the <xref:System.ServiceModel.FaultContractAttribute> to formally specify all SOAP faults that a client can expect to receive in the normal course of an operation."},{"content":"It is also recommended that only that information a client must know is returned in a SOAP fault to minimize information disclosure.","pos":[210,342]}]}]},{"pos":[1569,1683],"content":"The <xref:System.ServiceModel.FaultContractAttribute.Action%2A> property controls the action of the fault message.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.FaultContractAttribute.Action%2A&gt;</ph> property controls the action of the fault message.","pos":[0,114],"source":"The <xref:System.ServiceModel.FaultContractAttribute.Action%2A> property controls the action of the fault message."}]},{"pos":[1693,1837],"content":"The <xref:System.ServiceModel.FaultContractAttribute.DetailType%2A> property gets the type of the detail object serialized in the fault message.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.FaultContractAttribute.DetailType%2A&gt;</ph> property gets the type of the detail object serialized in the fault message.","pos":[0,144],"source":"The <xref:System.ServiceModel.FaultContractAttribute.DetailType%2A> property gets the type of the detail object serialized in the fault message."}]},{"pos":[1847,2054],"content":"The <xref:System.ServiceModel.FaultContractAttribute.Name%2A> and <xref:System.ServiceModel.FaultContractAttribute.Namespace%2A> properties control the name and namespace, respectively, of the fault message.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.FaultContractAttribute.Name%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ServiceModel.FaultContractAttribute.Namespace%2A&gt;</ph> properties control the name and namespace, respectively, of the fault message.","pos":[0,207],"source":"The <xref:System.ServiceModel.FaultContractAttribute.Name%2A> and <xref:System.ServiceModel.FaultContractAttribute.Namespace%2A> properties control the name and namespace, respectively, of the fault message."}]},{"pos":[2064,2337],"content":"The <xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A> indicates whether the fault message has a protection level specified, and if so, the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property controls that level of protection.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A&gt;</ph> indicates whether the fault message has a protection level specified, and if so, the <ph id=\"ph2\">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> property controls that level of protection.","pos":[0,273],"source":"The <xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A> indicates whether the fault message has a protection level specified, and if so, the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property controls that level of protection."}]},{"pos":[2345,2571],"content":"[!CAUTION]\n If a fault message carries information that is sensitive or can lead to security problems, it is strongly recommended that the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property be set.","leadings":["","> "],"nodes":[{"content":"If a fault message carries information that is sensitive or can lead to security problems, it is strongly recommended that the <ph id=\"ph1\">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> property be set.","pos":[12,224],"source":" If a fault message carries information that is sensitive or can lead to security problems, it is strongly recommended that the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property be set."}]},{"pos":[2581,3001],"content":"If you set the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> explicitly to either <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> or <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>, then you must use a binding with security enabled using the <xref:System.ServiceModel.SecurityMode?displayProperty=fullName> property on the binding or an exception is thrown.","nodes":[{"content":"If you set the <ph id=\"ph1\">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> explicitly to either <ph id=\"ph2\">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=fullName&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=fullName&gt;</ph>, then you must use a binding with security enabled using the <ph id=\"ph4\">&lt;xref:System.ServiceModel.SecurityMode?displayProperty=fullName&gt;</ph> property on the binding or an exception is thrown.","pos":[0,420],"source":"If you set the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> explicitly to either <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> or <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>, then you must use a binding with security enabled using the <xref:System.ServiceModel.SecurityMode?displayProperty=fullName> property on the binding or an exception is thrown."}]},{"pos":[3011,3234],"content":"If you select a binding that enables security and you do not set the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property anywhere on the contract, all application data will be encrypted and signed.","nodes":[{"content":"If you select a binding that enables security and you do not set the <ph id=\"ph1\">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> property anywhere on the contract, all application data will be encrypted and signed.","pos":[0,223],"source":"If you select a binding that enables security and you do not set the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property anywhere on the contract, all application data will be encrypted and signed."}]},{"pos":[3244,3578],"content":"If you select a binding that does not have security enabled (for example, the <xref:System.ServiceModel.BasicHttpBinding?displayProperty=fullName> has security disabled by default), and the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> is not explicitly set, then none of the application data will be protected.","nodes":[{"content":"If you select a binding that does not have security enabled (for example, the <ph id=\"ph1\">&lt;xref:System.ServiceModel.BasicHttpBinding?displayProperty=fullName&gt;</ph> has security disabled by default), and the <ph id=\"ph2\">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> is not explicitly set, then none of the application data will be protected.","pos":[0,334],"source":"If you select a binding that does not have security enabled (for example, the <xref:System.ServiceModel.BasicHttpBinding?displayProperty=fullName> has security disabled by default), and the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> is not explicitly set, then none of the application data will be protected."}]},{"pos":[3585,3887],"content":"For many scenarios setting <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> to <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> for fault messages is sufficient. For more details, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).","nodes":[{"content":"For many scenarios setting <ph id=\"ph1\">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> to <ph id=\"ph2\">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign&gt;</ph> for fault messages is sufficient.","pos":[0,190],"source":"For many scenarios setting <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> to <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> for fault messages is sufficient."},{"content":"For more details, see <bpt id=\"p1\">[</bpt>Understanding Protection Level<ept id=\"p1\">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.","pos":[191,302],"source":" For more details, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md)."}]},{"pos":[3894,4743],"content":"To return a specified fault from an operation marked with <xref:System.ServiceModel.FaultContractAttribute>, throw a <xref:System.ServiceModel.FaultException%601> (where the type parameter is the serializable error information) when the managed exception occurs during the operation. [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client applications surface the SOAP fault as the same type as was thrown in the client implementation -- that is, as a <xref:System.ServiceModel.FaultException%601> (where the typeparameter is the serializable error information). The <xref:System.ServiceModel.FaultContractAttribute> can be used only to specify SOAP faults for two-way service operations and for asynchronous operation pairs; one-way operations do not support SOAP faults and therefore do not support <xref:System.ServiceModel.FaultContractAttribute>.","nodes":[{"content":"To return a specified fault from an operation marked with <ph id=\"ph1\">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph>, throw a <ph id=\"ph2\">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> (where the type parameter is the serializable error information) when the managed exception occurs during the operation.","pos":[0,283],"source":"To return a specified fault from an operation marked with <xref:System.ServiceModel.FaultContractAttribute>, throw a <xref:System.ServiceModel.FaultException%601> (where the type parameter is the serializable error information) when the managed exception occurs during the operation."},{"content":"<ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client applications surface the SOAP fault as the same type as was thrown in the client implementation -- that is, as a <ph id=\"ph2\">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> (where the typeparameter is the serializable error information).","pos":[284,560],"source":"[!INCLUDE[indigo2](~/includes/indigo2-md.md)] client applications surface the SOAP fault as the same type as was thrown in the client implementation -- that is, as a <xref:System.ServiceModel.FaultException%601> (where the typeparameter is the serializable error information)."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> can be used only to specify SOAP faults for two-way service operations and for asynchronous operation pairs; one-way operations do not support SOAP faults and therefore do not support <ph id=\"ph2\">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph>.","pos":[561,849],"source":" The <xref:System.ServiceModel.FaultContractAttribute> can be used only to specify SOAP faults for two-way service operations and for asynchronous operation pairs; one-way operations do not support SOAP faults and therefore do not support <xref:System.ServiceModel.FaultContractAttribute>."}]},{"pos":[4751,5303],"content":"[!NOTE]\n You can use any serializable type to convey error information. The only restriction in this version of [!INCLUDE[indigo2](~/includes/indigo2-md.md)] is that types specified in a <xref:System.ServiceModel.FaultContractAttribute> must be serializable by the <xref:System.Runtime.Serialization.DataContractSerializer?displayProperty=fullName>. For the serialization support the <xref:System.Runtime.Serialization.DataContractSerializer> provides, see [Data Contract Serializer](~/docs/framework/wcf/feature-details/data-contract-serializer.md).","leadings":["","> "],"nodes":[{"content":" You can use any serializable type to convey error information. The only restriction in this version of [!INCLUDE[indigo2](~/includes/indigo2-md.md)] is that types specified in a <xref:System.ServiceModel.FaultContractAttribute> must be serializable by the <xref:System.Runtime.Serialization.DataContractSerializer?displayProperty=fullName>. For the serialization support the <xref:System.Runtime.Serialization.DataContractSerializer> provides, see [Data Contract Serializer](~/docs/framework/wcf/feature-details/data-contract-serializer.md).","pos":[8,550],"nodes":[{"content":"You can use any serializable type to convey error information.","pos":[1,63]},{"content":"The only restriction in this version of <ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> is that types specified in a <ph id=\"ph2\">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> must be serializable by the <ph id=\"ph3\">&lt;xref:System.Runtime.Serialization.DataContractSerializer?displayProperty=fullName&gt;</ph>.","pos":[64,341],"source":" The only restriction in this version of [!INCLUDE[indigo2](~/includes/indigo2-md.md)] is that types specified in a <xref:System.ServiceModel.FaultContractAttribute> must be serializable by the <xref:System.Runtime.Serialization.DataContractSerializer?displayProperty=fullName>."},{"content":"For the serialization support the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> provides, see <bpt id=\"p1\">[</bpt>Data Contract Serializer<ept id=\"p1\">](~/docs/framework/wcf/feature-details/data-contract-serializer.md)</ept>.","pos":[342,542],"source":" For the serialization support the <xref:System.Runtime.Serialization.DataContractSerializer> provides, see [Data Contract Serializer](~/docs/framework/wcf/feature-details/data-contract-serializer.md)."}]}]},{"pos":[5310,5515],"content":"For example, to specify that clients can expect a SOAP fault that contains an <xref:System.Int32>, place that type parameter in the <xref:System.ServiceModel.FaultContractAttribute> on your service method.","nodes":[{"content":"For example, to specify that clients can expect a SOAP fault that contains an <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph>, place that type parameter in the <ph id=\"ph2\">&lt;xref:System.ServiceModel.FaultContractAttribute&gt;</ph> on your service method.","pos":[0,205],"source":"For example, to specify that clients can expect a SOAP fault that contains an <xref:System.Int32>, place that type parameter in the <xref:System.ServiceModel.FaultContractAttribute> on your service method."}]},{"pos":[5523,5783],"content":"[!NOTE]\n The following code examples do not set the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A>, <xref:System.ServiceModel.FaultContractAttribute.Name%2A>, or <xref:System.ServiceModel.FaultContractAttribute.Namespace%2A> properties.","leadings":["","> "],"nodes":[{"content":"The following code examples do not set the <ph id=\"ph1\">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.ServiceModel.FaultContractAttribute.Name%2A&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.ServiceModel.FaultContractAttribute.Namespace%2A&gt;</ph> properties.","pos":[9,258],"source":" The following code examples do not set the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A>, <xref:System.ServiceModel.FaultContractAttribute.Name%2A>, or <xref:System.ServiceModel.FaultContractAttribute.Namespace%2A> properties."}]},{"pos":[5790,5969],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>C_FCA#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CFX/c_fca/cs/fcademo.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>C_FCA#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_fca/vb/fcademo.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[C_FCA#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_fca/cs/fcademo.cs#1)]\n [!code-vb[C_FCA#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_fca/vb/fcademo.vb#1)]"},{"pos":[5976,6193],"content":"Then, in your service method, throw a new <xref:System.ServiceModel.FaultException%601> where the type parameter is the type that contains the error information (in the above case, a <xref:System.Int32>). For example:","nodes":[{"content":"Then, in your service method, throw a new <xref:System.ServiceModel.FaultException%601> where the type parameter is the type that contains the error information (in the above case, a <xref:System.Int32>). For example:","pos":[0,217],"nodes":[{"content":"Then, in your service method, throw a new <ph id=\"ph1\">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> where the type parameter is the type that contains the error information (in the above case, a <ph id=\"ph2\">&lt;xref:System.Int32&gt;</ph>).","pos":[0,204],"source":"Then, in your service method, throw a new <xref:System.ServiceModel.FaultException%601> where the type parameter is the type that contains the error information (in the above case, a <xref:System.Int32>)."},{"content":"For example:","pos":[205,217]}]}]},{"pos":[6200,6379],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>C_FCA#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CFX/c_fca/cs/fcademo.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>C_FCA#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_fca/vb/fcademo.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[C_FCA#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_fca/cs/fcademo.cs#2)]\n [!code-vb[C_FCA#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_fca/vb/fcademo.vb#2)]"},{"pos":[6386,6787],"content":"The preceding example is very basic; almost any information can be passed using an <xref:System.Int32?displayProperty=fullName> code, so this detail type is not the most useful. Typically, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] applications specify SOAP faults with detail types specific to the error information requirements of the client. For a more complete example, see the Example section.","nodes":[{"content":"The preceding example is very basic; almost any information can be passed using an <ph id=\"ph1\">&lt;xref:System.Int32?displayProperty=fullName&gt;</ph> code, so this detail type is not the most useful.","pos":[0,177],"source":"The preceding example is very basic; almost any information can be passed using an <xref:System.Int32?displayProperty=fullName> code, so this detail type is not the most useful."},{"content":"Typically, <ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> applications specify SOAP faults with detail types specific to the error information requirements of the client.","pos":[178,347],"source":" Typically, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] applications specify SOAP faults with detail types specific to the error information requirements of the client."},{"content":"For a more complete example, see the Example section.","pos":[348,401]}]},{"pos":[6795,7442],"content":"[!NOTE]\n If you specify a <xref:System.ServiceModel.FaultException%601> where the type parameter is a <xref:System.String?displayProperty=fullName>, the string value is assigned to the Detail property in the client application; clients cannot retrieve that string by calling the <xref:System.ServiceModel.FaultException%601.ToString%2A?displayProperty=fullName> method. To have the string value returned when the client application calls <xref:System.Exception.ToString%2A?displayProperty=fullName>, throw a <xref:System.ServiceModel.FaultException?displayProperty=fullName> exception inside the operation and pass the string to the constructor.","leadings":["","> "],"nodes":[{"content":" If you specify a <xref:System.ServiceModel.FaultException%601> where the type parameter is a <xref:System.String?displayProperty=fullName>, the string value is assigned to the Detail property in the client application; clients cannot retrieve that string by calling the <xref:System.ServiceModel.FaultException%601.ToString%2A?displayProperty=fullName> method. To have the string value returned when the client application calls <xref:System.Exception.ToString%2A?displayProperty=fullName>, throw a <xref:System.ServiceModel.FaultException?displayProperty=fullName> exception inside the operation and pass the string to the constructor.","pos":[8,645],"nodes":[{"content":"If you specify a <ph id=\"ph1\">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> where the type parameter is a <ph id=\"ph2\">&lt;xref:System.String?displayProperty=fullName&gt;</ph>, the string value is assigned to the Detail property in the client application; clients cannot retrieve that string by calling the <ph id=\"ph3\">&lt;xref:System.ServiceModel.FaultException%601.ToString%2A?displayProperty=fullName&gt;</ph> method.","pos":[1,361],"source":" If you specify a <xref:System.ServiceModel.FaultException%601> where the type parameter is a <xref:System.String?displayProperty=fullName>, the string value is assigned to the Detail property in the client application; clients cannot retrieve that string by calling the <xref:System.ServiceModel.FaultException%601.ToString%2A?displayProperty=fullName> method."},{"content":"To have the string value returned when the client application calls <ph id=\"ph1\">&lt;xref:System.Exception.ToString%2A?displayProperty=fullName&gt;</ph>, throw a <ph id=\"ph2\">&lt;xref:System.ServiceModel.FaultException?displayProperty=fullName&gt;</ph> exception inside the operation and pass the string to the constructor.","pos":[362,637],"source":" To have the string value returned when the client application calls <xref:System.Exception.ToString%2A?displayProperty=fullName>, throw a <xref:System.ServiceModel.FaultException?displayProperty=fullName> exception inside the operation and pass the string to the constructor."}]}]},{"pos":[7449,8226],"content":"To explicitly control the behavior of the application when an exception or <xref:System.ServiceModel.FaultException%601> is thrown, implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=fullName> interface on an <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=fullName>, <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName> or <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName> and assign it to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=fullName> property. <xref:System.ServiceModel.Dispatcher.IErrorHandler>enables you to explicitly control the SOAP fault that is generated and whether to send it back to the client.","nodes":[{"content":"To explicitly control the behavior of the application when an exception or <xref:System.ServiceModel.FaultException%601> is thrown, implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=fullName> interface on an <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=fullName>, <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName> or <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName> and assign it to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=fullName> property. <xref:System.ServiceModel.Dispatcher.IErrorHandler>enables you to explicitly control the SOAP fault that is generated and whether to send it back to the client.","pos":[0,777],"nodes":[{"content":"To explicitly control the behavior of the application when an exception or <ph id=\"ph1\">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> is thrown, implement the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=fullName&gt;</ph> interface on an <ph id=\"ph3\">&lt;xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=fullName&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName&gt;</ph> or <ph id=\"ph5\">&lt;xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName&gt;</ph> and assign it to the <ph id=\"ph6\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,616],"source":"To explicitly control the behavior of the application when an exception or <xref:System.ServiceModel.FaultException%601> is thrown, implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=fullName> interface on an <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=fullName>, <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName> or <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName> and assign it to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=fullName> property."},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler&gt;</ph>enables you to explicitly control the SOAP fault that is generated and whether to send it back to the client.","pos":[617,777],"source":" <xref:System.ServiceModel.Dispatcher.IErrorHandler>enables you to explicitly control the SOAP fault that is generated and whether to send it back to the client."}]}]},{"pos":[8233,8746],"content":"To facilitate debugging, set the <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> to `true` in code or you can use the <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> in an application configuration file. When enabled, the service automatically returns exception information to the caller. These faults appear to the client as <xref:System.ServiceModel.FaultException> exceptions.","nodes":[{"content":"To facilitate debugging, set the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=fullName&gt;</ph> to <ph id=\"ph2\">`true`</ph> in code or you can use the <ph id=\"ph3\">&lt;xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=fullName&gt;</ph> in an application configuration file.","pos":[0,337],"source":"To facilitate debugging, set the <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> to `true` in code or you can use the <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> in an application configuration file."},{"content":"When enabled, the service automatically returns exception information to the caller.","pos":[338,422]},{"content":"These faults appear to the client as <ph id=\"ph1\">&lt;xref:System.ServiceModel.FaultException&gt;</ph> exceptions.","pos":[423,513],"source":" These faults appear to the client as <xref:System.ServiceModel.FaultException> exceptions."}]},{"pos":[8754,9290],"content":"[!IMPORTANT]\n Because managed exceptions can expose internal application information, setting <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> or <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> to `true` can permit [!INCLUDE[indigo2](~/includes/indigo2-md.md)] clients to obtain information about internal service operation exceptions, including personally identifiable or other sensitive information.","leadings":["","> "],"nodes":[{"content":"Because managed exceptions can expose internal application information, setting <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=fullName&gt;</ph> to <ph id=\"ph3\">`true`</ph> can permit <ph id=\"ph4\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> clients to obtain information about internal service operation exceptions, including personally identifiable or other sensitive information.","pos":[14,534],"source":" Because managed exceptions can expose internal application information, setting <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> or <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> to `true` can permit [!INCLUDE[indigo2](~/includes/indigo2-md.md)] clients to obtain information about internal service operation exceptions, including personally identifiable or other sensitive information."}]},{"pos":[9301,10095],"content":"Therefore, setting <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> or <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> to `true` is only recommended as a way of temporarily debugging a service application. In addition, the WSDL for a method that returns unhandled managed exceptions in this way does not contain the contract for the <xref:System.ServiceModel.FaultException%601> of type <xref:System.String>. Clients must expect the possibility of an unknown SOAP fault (returned to [!INCLUDE[indigo2](~/includes/indigo2-md.md)] clients as <xref:System.ServiceModel.FaultException?displayProperty=fullName> objects) to obtain the debugging information properly.","nodes":[{"content":"Therefore, setting <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=fullName&gt;</ph> to <ph id=\"ph3\">`true`</ph> is only recommended as a way of temporarily debugging a service application.","pos":[0,338],"source":"Therefore, setting <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> or <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> to `true` is only recommended as a way of temporarily debugging a service application."},{"content":"In addition, the WSDL for a method that returns unhandled managed exceptions in this way does not contain the contract for the <ph id=\"ph1\">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> of type <ph id=\"ph2\">&lt;xref:System.String&gt;</ph>.","pos":[339,541],"source":" In addition, the WSDL for a method that returns unhandled managed exceptions in this way does not contain the contract for the <xref:System.ServiceModel.FaultException%601> of type <xref:System.String>."},{"content":"Clients must expect the possibility of an unknown SOAP fault (returned to <ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> clients as <ph id=\"ph2\">&lt;xref:System.ServiceModel.FaultException?displayProperty=fullName&gt;</ph> objects) to obtain the debugging information properly.","pos":[542,794],"source":" Clients must expect the possibility of an unknown SOAP fault (returned to [!INCLUDE[indigo2](~/includes/indigo2-md.md)] clients as <xref:System.ServiceModel.FaultException?displayProperty=fullName> objects) to obtain the debugging information properly."}]}],"pos":[960,11113],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.FaultContractAttribute\"></xref> class.","nodes":[{"pos":[0,104],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.FaultContractAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.FaultContractAttribute\"></xref> class."}],"pos":[17203,17308],"yaml":true},{"content":"The constructor is typically executed by applying the attribute to a service method and specifying a type as the argument in the attribute.","nodes":[{"pos":[0,139],"content":"The constructor is typically executed by applying the attribute to a service method and specifying a type as the argument in the attribute.","nodes":[{"content":"The constructor is typically executed by applying the attribute to a service method and specifying a type as the argument in the attribute.","pos":[0,139]}]}],"pos":[17319,17459],"yaml":true,"extradata":"MT"},{"content":"The serializable type that contains error information for the caller.","nodes":[{"pos":[0,69],"content":"The serializable type that contains error information for the caller.","nodes":[{"content":"The serializable type that contains error information for the caller.","pos":[0,69]}]}],"pos":[18091,18161],"yaml":true},{"content":"The <code>detailType</code> argument is `null`.","nodes":[{"pos":[0,47],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">detailType</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument is <ph id=\"ph2\">`null`</ph>.","source":"The <code>detailType</code> argument is `null`."}],"pos":[18339,18387],"yaml":true},{"content":"Gets or sets the action of the SOAP fault message that is specified as part of the operation contract.","nodes":[{"pos":[0,102],"content":"Gets or sets the action of the SOAP fault message that is specified as part of the operation contract.","nodes":[{"content":"Gets or sets the action of the SOAP fault message that is specified as part of the operation contract.","pos":[0,102]}]}],"pos":[19459,19562],"yaml":true},{"content":"Use to control the action of the SOAP fault message.","nodes":[{"pos":[0,52],"content":"Use to control the action of the SOAP fault message.","nodes":[{"content":"Use to control the action of the SOAP fault message.","pos":[0,52]}]}],"pos":[19573,19626],"yaml":true,"extradata":"MT"},{"content":"The value of the action for the SOAP fault message.","nodes":[{"pos":[0,51],"content":"The value of the action for the SOAP fault message.","nodes":[{"content":"The value of the action for the SOAP fault message.","pos":[0,51]}]}],"pos":[19741,19793],"yaml":true},{"content":"Gets the type of a serializable object that contains error information.","nodes":[{"pos":[0,71],"content":"Gets the type of a serializable object that contains error information.","nodes":[{"content":"Gets the type of a serializable object that contains error information.","pos":[0,71]}]}],"pos":[20969,21041],"yaml":true},{"content":"The type that represents the serializable error class.","nodes":[{"pos":[0,54],"content":"The type that represents the serializable error class.","nodes":[{"content":"The type that represents the serializable error class.","pos":[0,54]}]}],"pos":[21645,21700],"yaml":true},{"content":"Gets a value that indicates whether the SOAP fault message has a protection level assigned.","nodes":[{"pos":[0,91],"content":"Gets a value that indicates whether the SOAP fault message has a protection level assigned.","nodes":[{"content":"Gets a value that indicates whether the SOAP fault message has a protection level assigned.","pos":[0,91]}]}],"pos":[22928,23020],"yaml":true},{"content":"Use the <xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A> property to specify whether the SOAP fault message must be encrypted, signed, or both. See the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property for details.","nodes":[{"pos":[0,265],"content":"Use the <xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A> property to specify whether the SOAP fault message must be encrypted, signed, or both. See the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property for details.","nodes":[{"content":"Use the <xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A> property to specify whether the SOAP fault message must be encrypted, signed, or both. See the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property for details.","pos":[0,265],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A&gt;</ph> property to specify whether the SOAP fault message must be encrypted, signed, or both.","pos":[0,166],"source":"Use the <xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A> property to specify whether the SOAP fault message must be encrypted, signed, or both."},{"content":"See the <ph id=\"ph1\">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> property for details.","pos":[167,265],"source":" See the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property for details."}]}]}],"pos":[23031,23297],"yaml":true,"extradata":"MT"},{"content":"`true` if the fault message has a protection level; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,95],"content":"`true` if the fault message has a protection level; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the fault message has a protection level; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,71],"source":"`true` if the fault message has a protection level; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[72,95],"source":" The default is `false`."}]}],"pos":[23418,23516],"yaml":true},{"content":"Gets or sets the name of the fault message in Web Services Description Language (WSDL).","nodes":[{"pos":[0,87],"content":"Gets or sets the name of the fault message in Web Services Description Language (WSDL).","nodes":[{"content":"Gets or sets the name of the fault message in Web Services Description Language (WSDL).","pos":[0,87]}]}],"pos":[24668,24756],"yaml":true},{"content":"The fault message name. The default is the name of the type used as the fault detail.","nodes":[{"pos":[0,85],"content":"The fault message name. The default is the name of the type used as the fault detail.","nodes":[{"content":"The fault message name. The default is the name of the type used as the fault detail.","pos":[0,85],"nodes":[{"content":"The fault message name.","pos":[0,23]},{"content":"The default is the name of the type used as the fault detail.","pos":[24,85]}]}]}],"pos":[24869,24955],"yaml":true},{"content":"Gets or sets the namespace of the SOAP fault.","nodes":[{"pos":[0,45],"content":"Gets or sets the namespace of the SOAP fault.","nodes":[{"content":"Gets or sets the namespace of the SOAP fault.","pos":[0,45]}]}],"pos":[26123,26169],"yaml":true},{"content":"The namespace of the SOAP fault.","nodes":[{"pos":[0,32],"content":"The namespace of the SOAP fault.","nodes":[{"content":"The namespace of the SOAP fault.","pos":[0,32]}]}],"pos":[26287,26320],"yaml":true},{"content":"Specifies the level of protection the SOAP fault requires from the binding.","nodes":[{"pos":[0,75],"content":"Specifies the level of protection the SOAP fault requires from the binding.","nodes":[{"content":"Specifies the level of protection the SOAP fault requires from the binding.","pos":[0,75]}]}],"pos":[27529,27605],"yaml":true},{"content":"Use the <xref:System.ServiceModel.Description.FaultDescription.ProtectionLevel%2A?displayProperty=fullName> property to specify the degree to which the binding must encrypt, sign, or both when sending the SOAP fault. It is strongly recommended that an operation's fault explicitly decide the security protection level requirements on the contract. The default protection level is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>, meaning that the SOAP fault message you are defining does not require encryption or a digital signature (although your binding may provide this support if it is configured to do so). If a fault message carries information that is sensitive or can lead to security problems, it is strongly recommended that the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property be set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>. For more about security issues, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).  \n  \n The protection behavior at runtime is the combination of the protection-level properties that have a hierarchical structure. Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set. In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.  \n  \n For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName> is set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed, including fault messages. If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute> set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed, including fault messages.  \n  \n The scopes at which these values are set are:  \n  \n <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \n  \n <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \n  \n <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \n  \n <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \n  \n The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName> property on <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=fullName>.  \n  \n The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName> property on <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=fullName>.  \n  \n When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>. If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> for the whole contract. The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>.","nodes":[{"pos":[0,1041],"content":"Use the <xref:System.ServiceModel.Description.FaultDescription.ProtectionLevel%2A?displayProperty=fullName> property to specify the degree to which the binding must encrypt, sign, or both when sending the SOAP fault. It is strongly recommended that an operation's fault explicitly decide the security protection level requirements on the contract. The default protection level is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>, meaning that the SOAP fault message you are defining does not require encryption or a digital signature (although your binding may provide this support if it is configured to do so). If a fault message carries information that is sensitive or can lead to security problems, it is strongly recommended that the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property be set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>. For more about security issues, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.FaultDescription.ProtectionLevel%2A?displayProperty=fullName&gt;</ph> property to specify the degree to which the binding must encrypt, sign, or both when sending the SOAP fault.","pos":[0,216],"source":"Use the <xref:System.ServiceModel.Description.FaultDescription.ProtectionLevel%2A?displayProperty=fullName> property to specify the degree to which the binding must encrypt, sign, or both when sending the SOAP fault."},{"content":"It is strongly recommended that an operation's fault explicitly decide the security protection level requirements on the contract.","pos":[217,347]},{"content":"The default protection level is <ph id=\"ph1\">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=fullName&gt;</ph>, meaning that the SOAP fault message you are defining does not require encryption or a digital signature (although your binding may provide this support if it is configured to do so).","pos":[348,631],"source":" The default protection level is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>, meaning that the SOAP fault message you are defining does not require encryption or a digital signature (although your binding may provide this support if it is configured to do so)."},{"content":"If a fault message carries information that is sensitive or can lead to security problems, it is strongly recommended that the <ph id=\"ph1\">&lt;xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A&gt;</ph> property be set to <ph id=\"ph2\">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=fullName&gt;</ph>.","pos":[632,915],"source":" If a fault message carries information that is sensitive or can lead to security problems, it is strongly recommended that the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property be set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>."},{"content":"For more about security issues, see <bpt id=\"p1\">[</bpt>Understanding Protection Level<ept id=\"p1\">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.","pos":[916,1041],"source":" For more about security issues, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md)."}]},{"pos":[1048,1440],"content":"The protection behavior at runtime is the combination of the protection-level properties that have a hierarchical structure. Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set. In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.","nodes":[{"content":"The protection behavior at runtime is the combination of the protection-level properties that have a hierarchical structure. Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set. In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.","pos":[0,392],"nodes":[{"content":"The protection behavior at runtime is the combination of the protection-level properties that have a hierarchical structure.","pos":[0,124]},{"content":"Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set.","pos":[125,273]},{"content":"In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.","pos":[274,392]}]}]},{"pos":[1447,2101],"content":"For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName> is set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed, including fault messages. If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute> set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed, including fault messages.","nodes":[{"content":"For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName> is set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed, including fault messages. If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute> set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed, including fault messages.","pos":[0,654],"nodes":[{"content":"For example, if <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName&gt;</ph> is set to <ph id=\"ph2\">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=fullName&gt;</ph> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed, including fault messages.","pos":[0,340],"source":"For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName> is set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed, including fault messages."},{"content":"If, however, one of those operations has the <ph id=\"ph1\">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> set to <ph id=\"ph2\">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=fullName&gt;</ph>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed, including fault messages.","pos":[341,654],"source":" If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute> set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed, including fault messages."}]}]},{"pos":[2108,2153],"content":"The scopes at which these values are set are:","nodes":[{"content":"The scopes at which these values are set are:","pos":[0,45]}]},{"pos":[2160,2255],"content":"<xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName>","nodes":[]},{"pos":[2262,2359],"content":"<xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A?displayProperty=fullName>","nodes":[]},{"pos":[2366,2459],"content":"<xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A?displayProperty=fullName>","nodes":[]},{"pos":[2466,2561],"content":"<xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A?displayProperty=fullName>","nodes":[]},{"pos":[2568,2761],"content":"The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName> property on <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=fullName>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName&gt;</ph> property on <ph id=\"ph2\">&lt;xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=fullName&gt;</ph>.","pos":[0,193],"source":"The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName> property on <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=fullName>."}]},{"pos":[2768,2965],"content":"The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName> property on <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=fullName>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName&gt;</ph> property on <ph id=\"ph2\">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=fullName&gt;</ph>.","pos":[0,197],"source":"The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName> property on <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=fullName>."}]},{"pos":[2972,3766],"content":"When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>. If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> for the whole contract. The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>.","nodes":[{"content":"When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>. If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> for the whole contract. The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>.","pos":[0,794],"nodes":[{"content":"When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <ph id=\"ph1\">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=fullName&gt;</ph>.","pos":[0,286],"source":"When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>."},{"content":"If the binding does not support security (such as <ph id=\"ph1\">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>), the effective <ph id=\"ph2\">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=fullName&gt;</ph> is <ph id=\"ph3\">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=fullName&gt;</ph> for the whole contract.","pos":[287,559],"source":" If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> for the whole contract."},{"content":"The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <ph id=\"ph1\">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=fullName&gt;</ph>.","pos":[560,794],"source":" The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>."}]}]}],"pos":[27616,31405],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Net.Security.ProtectionLevel\"></xref> values. The default is <xref href=\"System.Net.Security.ProtectionLevel.None\"></xref>.","nodes":[{"pos":[0,153],"content":"One of the <xref href=\"System.Net.Security.ProtectionLevel\"></xref> values. The default is <xref href=\"System.Net.Security.ProtectionLevel.None\"></xref>.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.ProtectionLevel\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,75],"source":"One of the <xref href=\"System.Net.Security.ProtectionLevel\"></xref> values."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.ProtectionLevel.None\"&gt;&lt;/xref&gt;</ph>.","pos":[76,153],"source":" The default is <xref href=\"System.Net.Security.ProtectionLevel.None\"></xref>."}]}],"pos":[31580,31734],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.FaultContractAttribute\n  commentId: T:System.ServiceModel.FaultContractAttribute\n  id: FaultContractAttribute\n  children:\n  - System.ServiceModel.FaultContractAttribute.#ctor(System.Type)\n  - System.ServiceModel.FaultContractAttribute.Action\n  - System.ServiceModel.FaultContractAttribute.DetailType\n  - System.ServiceModel.FaultContractAttribute.HasProtectionLevel\n  - System.ServiceModel.FaultContractAttribute.Name\n  - System.ServiceModel.FaultContractAttribute.Namespace\n  - System.ServiceModel.FaultContractAttribute.ProtectionLevel\n  langs:\n  - csharp\n  name: FaultContractAttribute\n  nameWithType: FaultContractAttribute\n  fullName: System.ServiceModel.FaultContractAttribute\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Specifies one or more SOAP faults that are returned when a service operation encounters processing errors.\n  remarks: \"Mark an operation with the <xref:System.ServiceModel.FaultContractAttribute> attribute to declare one or more specific exception conditions that are added to the Web Service Description Language (WSDL) description of the service operation as explicit SOAP fault messages returned by the operation.  \\n  \\n In all managed applications, processing errors are represented by <xref:System.Exception> objects. In SOAP-based applications such as [!INCLUDE[indigo1](~/includes/indigo1-md.md)] applications, service methods communicate processing error information using SOAP fault messages. Because [!INCLUDE[indigo2](~/includes/indigo2-md.md)] applications execute under both types of error systems, any managed exception information that must be sent to the client must be converted from exceptions into SOAP faults. You can use the default service exception behaviors, or you can explicitly control whether -- and how -- exceptions are mapped to fault messages. For an overview of exceptions and SOAP faults in [!INCLUDE[indigo2](~/includes/indigo2-md.md)] applications, see [Specifying and Handling Faults in Contracts and Services](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md).  \\n  \\n It is recommended that service operations use the <xref:System.ServiceModel.FaultContractAttribute> to formally specify all SOAP faults that a client can expect to receive in the normal course of an operation. It is also recommended that only that information a client must know is returned in a SOAP fault to minimize information disclosure.  \\n  \\n-   The <xref:System.ServiceModel.FaultContractAttribute.Action%2A> property controls the action of the fault message.  \\n  \\n-   The <xref:System.ServiceModel.FaultContractAttribute.DetailType%2A> property gets the type of the detail object serialized in the fault message.  \\n  \\n-   The <xref:System.ServiceModel.FaultContractAttribute.Name%2A> and <xref:System.ServiceModel.FaultContractAttribute.Namespace%2A> properties control the name and namespace, respectively, of the fault message.  \\n  \\n-   The <xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A> indicates whether the fault message has a protection level specified, and if so, the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property controls that level of protection.  \\n  \\n> [!CAUTION]\\n>  If a fault message carries information that is sensitive or can lead to security problems, it is strongly recommended that the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property be set.  \\n  \\n-   If you set the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> explicitly to either <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> or <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>, then you must use a binding with security enabled using the <xref:System.ServiceModel.SecurityMode?displayProperty=fullName> property on the binding or an exception is thrown.  \\n  \\n-   If you select a binding that enables security and you do not set the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property anywhere on the contract, all application data will be encrypted and signed.  \\n  \\n-   If you select a binding that does not have security enabled (for example, the <xref:System.ServiceModel.BasicHttpBinding?displayProperty=fullName> has security disabled by default), and the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> is not explicitly set, then none of the application data will be protected.  \\n  \\n For many scenarios setting <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> to <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> for fault messages is sufficient. For more details, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).  \\n  \\n To return a specified fault from an operation marked with <xref:System.ServiceModel.FaultContractAttribute>, throw a <xref:System.ServiceModel.FaultException%601> (where the type parameter is the serializable error information) when the managed exception occurs during the operation. [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client applications surface the SOAP fault as the same type as was thrown in the client implementation -- that is, as a <xref:System.ServiceModel.FaultException%601> (where the typeparameter is the serializable error information). The <xref:System.ServiceModel.FaultContractAttribute> can be used only to specify SOAP faults for two-way service operations and for asynchronous operation pairs; one-way operations do not support SOAP faults and therefore do not support <xref:System.ServiceModel.FaultContractAttribute>.  \\n  \\n> [!NOTE]\\n>  You can use any serializable type to convey error information. The only restriction in this version of [!INCLUDE[indigo2](~/includes/indigo2-md.md)] is that types specified in a <xref:System.ServiceModel.FaultContractAttribute> must be serializable by the <xref:System.Runtime.Serialization.DataContractSerializer?displayProperty=fullName>. For the serialization support the <xref:System.Runtime.Serialization.DataContractSerializer> provides, see [Data Contract Serializer](~/docs/framework/wcf/feature-details/data-contract-serializer.md).  \\n  \\n For example, to specify that clients can expect a SOAP fault that contains an <xref:System.Int32>, place that type parameter in the <xref:System.ServiceModel.FaultContractAttribute> on your service method.  \\n  \\n> [!NOTE]\\n>  The following code examples do not set the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A>, <xref:System.ServiceModel.FaultContractAttribute.Name%2A>, or <xref:System.ServiceModel.FaultContractAttribute.Namespace%2A> properties.  \\n  \\n [!code-csharp[C_FCA#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_fca/cs/fcademo.cs#1)]\\n [!code-vb[C_FCA#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_fca/vb/fcademo.vb#1)]  \\n  \\n Then, in your service method, throw a new <xref:System.ServiceModel.FaultException%601> where the type parameter is the type that contains the error information (in the above case, a <xref:System.Int32>). For example:  \\n  \\n [!code-csharp[C_FCA#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_fca/cs/fcademo.cs#2)]\\n [!code-vb[C_FCA#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_fca/vb/fcademo.vb#2)]  \\n  \\n The preceding example is very basic; almost any information can be passed using an <xref:System.Int32?displayProperty=fullName> code, so this detail type is not the most useful. Typically, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] applications specify SOAP faults with detail types specific to the error information requirements of the client. For a more complete example, see the Example section.  \\n  \\n> [!NOTE]\\n>  If you specify a <xref:System.ServiceModel.FaultException%601> where the type parameter is a <xref:System.String?displayProperty=fullName>, the string value is assigned to the Detail property in the client application; clients cannot retrieve that string by calling the <xref:System.ServiceModel.FaultException%601.ToString%2A?displayProperty=fullName> method. To have the string value returned when the client application calls <xref:System.Exception.ToString%2A?displayProperty=fullName>, throw a <xref:System.ServiceModel.FaultException?displayProperty=fullName> exception inside the operation and pass the string to the constructor.  \\n  \\n To explicitly control the behavior of the application when an exception or <xref:System.ServiceModel.FaultException%601> is thrown, implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=fullName> interface on an <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=fullName>, <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName> or <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName> and assign it to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=fullName> property. <xref:System.ServiceModel.Dispatcher.IErrorHandler>enables you to explicitly control the SOAP fault that is generated and whether to send it back to the client.  \\n  \\n To facilitate debugging, set the <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> to `true` in code or you can use the <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> in an application configuration file. When enabled, the service automatically returns exception information to the caller. These faults appear to the client as <xref:System.ServiceModel.FaultException> exceptions.  \\n  \\n> [!IMPORTANT]\\n>  Because managed exceptions can expose internal application information, setting <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> or <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> to `true` can permit [!INCLUDE[indigo2](~/includes/indigo2-md.md)] clients to obtain information about internal service operation exceptions, including personally identifiable or other sensitive information.  \\n>   \\n>  Therefore, setting <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> or <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> to `true` is only recommended as a way of temporarily debugging a service application. In addition, the WSDL for a method that returns unhandled managed exceptions in this way does not contain the contract for the <xref:System.ServiceModel.FaultException%601> of type <xref:System.String>. Clients must expect the possibility of an unknown SOAP fault (returned to [!INCLUDE[indigo2](~/includes/indigo2-md.md)] clients as <xref:System.ServiceModel.FaultException?displayProperty=fullName> objects) to obtain the debugging information properly.\"\n  example:\n  - \"The following code example shows the use of <xref:System.ServiceModel.FaultContractAttribute> to specify that the `SampleMethod` operation can return a SOAP fault with the detail type of `GreetingFault`.  \\n  \\n [!code-csharp[FaultContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/faultcontractattribute/cs/services.cs#1)]\\n [!code-vb[FaultContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/faultcontractattribute/vb/services.vb#1)]  \\n  \\n The following code example shows that [!INCLUDE[indigo2](~/includes/indigo2-md.md)] clients of `ISampleService` experience this SOAP fault as a <xref:System.ServiceModel.FaultException%601> of type `GreetingFault`.  \\n  \\n [!code-csharp[FaultContractAttribute#3](~/samples/snippets/csharp/VS_Snippets_CFX/faultcontractattribute/cs/client.cs#3)]\\n [!code-vb[FaultContractAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/faultcontractattribute/vb/client.vb#3)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]\n\n      public sealed class FaultContractAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.FaultContractAttribute.#ctor(System.Type)\n  commentId: M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.ServiceModel.FaultContractAttribute\n  langs:\n  - csharp\n  name: FaultContractAttribute(Type)\n  nameWithType: FaultContractAttribute.FaultContractAttribute(Type)\n  fullName: FaultContractAttribute.FaultContractAttribute(Type)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.FaultContractAttribute\"></xref> class.\n  remarks: The constructor is typically executed by applying the attribute to a service method and specifying a type as the argument in the attribute.\n  example:\n  - \"The following code example shows the use of <xref:System.ServiceModel.FaultContractAttribute> to specify that the `SampleMethod` operation can return a SOAP fault with the detail type of `GreetingFault`.  \\n  \\n [!code-csharp[FaultContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/faultcontractattribute/cs/services.cs#1)]\\n [!code-vb[FaultContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/faultcontractattribute/vb/services.vb#1)]\"\n  syntax:\n    content: public FaultContractAttribute (Type detailType);\n    parameters:\n    - id: detailType\n      type: System.Type\n      description: The serializable type that contains error information for the caller.\n  overload: System.ServiceModel.FaultContractAttribute.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>detailType</code> argument is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.FaultContractAttribute.Action\n  commentId: P:System.ServiceModel.FaultContractAttribute.Action\n  id: Action\n  parent: System.ServiceModel.FaultContractAttribute\n  langs:\n  - csharp\n  name: Action\n  nameWithType: FaultContractAttribute.Action\n  fullName: FaultContractAttribute.Action\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the action of the SOAP fault message that is specified as part of the operation contract.\n  remarks: Use to control the action of the SOAP fault message.\n  syntax:\n    content: public string Action { get; set; }\n    return:\n      type: System.String\n      description: The value of the action for the SOAP fault message.\n  overload: System.ServiceModel.FaultContractAttribute.Action*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.FaultContractAttribute.DetailType\n  commentId: P:System.ServiceModel.FaultContractAttribute.DetailType\n  id: DetailType\n  parent: System.ServiceModel.FaultContractAttribute\n  langs:\n  - csharp\n  name: DetailType\n  nameWithType: FaultContractAttribute.DetailType\n  fullName: FaultContractAttribute.DetailType\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the type of a serializable object that contains error information.\n  remarks: ''\n  example:\n  - \"The following code example shows the use of <xref:System.ServiceModel.FaultContractAttribute> to specify that the `SampleMethod` operation can return a SOAP fault with the detail type of `GreetingFault`.  \\n  \\n [!code-csharp[FaultContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/faultcontractattribute/cs/services.cs#1)]\\n [!code-vb[FaultContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/faultcontractattribute/vb/services.vb#1)]\"\n  syntax:\n    content: public Type DetailType { get; }\n    return:\n      type: System.Type\n      description: The type that represents the serializable error class.\n  overload: System.ServiceModel.FaultContractAttribute.DetailType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.FaultContractAttribute.HasProtectionLevel\n  commentId: P:System.ServiceModel.FaultContractAttribute.HasProtectionLevel\n  id: HasProtectionLevel\n  parent: System.ServiceModel.FaultContractAttribute\n  langs:\n  - csharp\n  name: HasProtectionLevel\n  nameWithType: FaultContractAttribute.HasProtectionLevel\n  fullName: FaultContractAttribute.HasProtectionLevel\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets a value that indicates whether the SOAP fault message has a protection level assigned.\n  remarks: Use the <xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A> property to specify whether the SOAP fault message must be encrypted, signed, or both. See the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property for details.\n  syntax:\n    content: public bool HasProtectionLevel { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the fault message has a protection level; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.FaultContractAttribute.HasProtectionLevel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.FaultContractAttribute.Name\n  commentId: P:System.ServiceModel.FaultContractAttribute.Name\n  id: Name\n  parent: System.ServiceModel.FaultContractAttribute\n  langs:\n  - csharp\n  name: Name\n  nameWithType: FaultContractAttribute.Name\n  fullName: FaultContractAttribute.Name\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the name of the fault message in Web Services Description Language (WSDL).\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: The fault message name. The default is the name of the type used as the fault detail.\n  overload: System.ServiceModel.FaultContractAttribute.Name*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.FaultContractAttribute.Namespace\n  commentId: P:System.ServiceModel.FaultContractAttribute.Namespace\n  id: Namespace\n  parent: System.ServiceModel.FaultContractAttribute\n  langs:\n  - csharp\n  name: Namespace\n  nameWithType: FaultContractAttribute.Namespace\n  fullName: FaultContractAttribute.Namespace\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the namespace of the SOAP fault.\n  syntax:\n    content: public string Namespace { get; set; }\n    return:\n      type: System.String\n      description: The namespace of the SOAP fault.\n  overload: System.ServiceModel.FaultContractAttribute.Namespace*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.FaultContractAttribute.ProtectionLevel\n  commentId: P:System.ServiceModel.FaultContractAttribute.ProtectionLevel\n  id: ProtectionLevel\n  parent: System.ServiceModel.FaultContractAttribute\n  langs:\n  - csharp\n  name: ProtectionLevel\n  nameWithType: FaultContractAttribute.ProtectionLevel\n  fullName: FaultContractAttribute.ProtectionLevel\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Specifies the level of protection the SOAP fault requires from the binding.\n  remarks: \"Use the <xref:System.ServiceModel.Description.FaultDescription.ProtectionLevel%2A?displayProperty=fullName> property to specify the degree to which the binding must encrypt, sign, or both when sending the SOAP fault. It is strongly recommended that an operation's fault explicitly decide the security protection level requirements on the contract. The default protection level is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>, meaning that the SOAP fault message you are defining does not require encryption or a digital signature (although your binding may provide this support if it is configured to do so). If a fault message carries information that is sensitive or can lead to security problems, it is strongly recommended that the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property be set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>. For more about security issues, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).  \\n  \\n The protection behavior at runtime is the combination of the protection-level properties that have a hierarchical structure. Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set. In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.  \\n  \\n For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName> is set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed, including fault messages. If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute> set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed, including fault messages.  \\n  \\n The scopes at which these values are set are:  \\n  \\n <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \\n  \\n <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \\n  \\n <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \\n  \\n <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \\n  \\n The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName> property on <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=fullName>.  \\n  \\n The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName> property on <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=fullName>.  \\n  \\n When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>. If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> for the whole contract. The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>.\"\n  syntax:\n    content: public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }\n    return:\n      type: System.Net.Security.ProtectionLevel\n      description: One of the <xref href=\"System.Net.Security.ProtectionLevel\"></xref> values. The default is <xref href=\"System.Net.Security.ProtectionLevel.None\"></xref>.\n  overload: System.ServiceModel.FaultContractAttribute.ProtectionLevel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ServiceModel.FaultContractAttribute.#ctor(System.Type)\n  parent: System.ServiceModel.FaultContractAttribute\n  isExternal: false\n  name: FaultContractAttribute(Type)\n  nameWithType: FaultContractAttribute.FaultContractAttribute(Type)\n  fullName: FaultContractAttribute.FaultContractAttribute(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.FaultContractAttribute.Action\n  parent: System.ServiceModel.FaultContractAttribute\n  isExternal: false\n  name: Action\n  nameWithType: FaultContractAttribute.Action\n  fullName: FaultContractAttribute.Action\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.FaultContractAttribute.DetailType\n  parent: System.ServiceModel.FaultContractAttribute\n  isExternal: false\n  name: DetailType\n  nameWithType: FaultContractAttribute.DetailType\n  fullName: FaultContractAttribute.DetailType\n- uid: System.ServiceModel.FaultContractAttribute.HasProtectionLevel\n  parent: System.ServiceModel.FaultContractAttribute\n  isExternal: false\n  name: HasProtectionLevel\n  nameWithType: FaultContractAttribute.HasProtectionLevel\n  fullName: FaultContractAttribute.HasProtectionLevel\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.FaultContractAttribute.Name\n  parent: System.ServiceModel.FaultContractAttribute\n  isExternal: false\n  name: Name\n  nameWithType: FaultContractAttribute.Name\n  fullName: FaultContractAttribute.Name\n- uid: System.ServiceModel.FaultContractAttribute.Namespace\n  parent: System.ServiceModel.FaultContractAttribute\n  isExternal: false\n  name: Namespace\n  nameWithType: FaultContractAttribute.Namespace\n  fullName: FaultContractAttribute.Namespace\n- uid: System.ServiceModel.FaultContractAttribute.ProtectionLevel\n  parent: System.ServiceModel.FaultContractAttribute\n  isExternal: false\n  name: ProtectionLevel\n  nameWithType: FaultContractAttribute.ProtectionLevel\n  fullName: FaultContractAttribute.ProtectionLevel\n- uid: System.Net.Security.ProtectionLevel\n  parent: System.Net.Security\n  isExternal: false\n  name: ProtectionLevel\n  nameWithType: ProtectionLevel\n  fullName: System.Net.Security.ProtectionLevel\n- uid: System.ServiceModel.FaultContractAttribute.#ctor*\n  parent: System.ServiceModel.FaultContractAttribute\n  isExternal: false\n  name: FaultContractAttribute\n  nameWithType: FaultContractAttribute.FaultContractAttribute\n  fullName: FaultContractAttribute.FaultContractAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml\n- uid: System.ServiceModel.FaultContractAttribute.Action*\n  parent: System.ServiceModel.FaultContractAttribute\n  isExternal: false\n  name: Action\n  nameWithType: FaultContractAttribute.Action\n  fullName: FaultContractAttribute.Action\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml\n- uid: System.ServiceModel.FaultContractAttribute.DetailType*\n  parent: System.ServiceModel.FaultContractAttribute\n  isExternal: false\n  name: DetailType\n  nameWithType: FaultContractAttribute.DetailType\n  fullName: FaultContractAttribute.DetailType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml\n- uid: System.ServiceModel.FaultContractAttribute.HasProtectionLevel*\n  parent: System.ServiceModel.FaultContractAttribute\n  isExternal: false\n  name: HasProtectionLevel\n  nameWithType: FaultContractAttribute.HasProtectionLevel\n  fullName: FaultContractAttribute.HasProtectionLevel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml\n- uid: System.ServiceModel.FaultContractAttribute.Name*\n  parent: System.ServiceModel.FaultContractAttribute\n  isExternal: false\n  name: Name\n  nameWithType: FaultContractAttribute.Name\n  fullName: FaultContractAttribute.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml\n- uid: System.ServiceModel.FaultContractAttribute.Namespace*\n  parent: System.ServiceModel.FaultContractAttribute\n  isExternal: false\n  name: Namespace\n  nameWithType: FaultContractAttribute.Namespace\n  fullName: FaultContractAttribute.Namespace\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml\n- uid: System.ServiceModel.FaultContractAttribute.ProtectionLevel*\n  parent: System.ServiceModel.FaultContractAttribute\n  isExternal: false\n  name: ProtectionLevel\n  nameWithType: FaultContractAttribute.ProtectionLevel\n  fullName: FaultContractAttribute.ProtectionLevel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}