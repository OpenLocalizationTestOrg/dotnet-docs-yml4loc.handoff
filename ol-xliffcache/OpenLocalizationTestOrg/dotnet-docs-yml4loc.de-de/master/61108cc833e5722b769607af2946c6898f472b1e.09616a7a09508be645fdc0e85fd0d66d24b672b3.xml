{"nodes":[{"content":"Specifies whether the <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token's <xref href=\"System.IdentityModel.Tokens.SamlAudienceRestrictionCondition\"></xref> should be validated.","nodes":[{"pos":[0,208],"content":"Specifies whether the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"&gt;&lt;/xref&gt;</ph> security token's <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.SamlAudienceRestrictionCondition\"&gt;&lt;/xref&gt;</ph> should be validated.","source":"Specifies whether the <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token's <xref href=\"System.IdentityModel.Tokens.SamlAudienceRestrictionCondition\"></xref> should be validated."}],"pos":[608,817],"yaml":true},{"content":"Use the <xref:System.IdentityModel.Selectors.AudienceUriMode> property in a federated application that utilizes a security token service (STS) that issues <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens. When the STS issues the security token, it can specify the URI of the Web services for which the security token is intended by adding a <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> to the security token. That allows the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator> for the recipient Web service to verify that the issued security token is intended for this Web service by specifying that this check should happen by doing the following:  \n  \n-   Set the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A> property to Always or BearerKeyOnly.  \n  \n-   Specify the set of valid URIs, by adding the URIs to the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A> collection.  \n  \n Optionally, override the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A> method to specify the validation algorithm to use for the allowed URI.","nodes":[{"pos":[0,708],"content":"Use the <xref:System.IdentityModel.Selectors.AudienceUriMode> property in a federated application that utilizes a security token service (STS) that issues <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens. When the STS issues the security token, it can specify the URI of the Web services for which the security token is intended by adding a <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> to the security token. That allows the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator> for the recipient Web service to verify that the issued security token is intended for this Web service by specifying that this check should happen by doing the following:","nodes":[{"content":"Use the <xref:System.IdentityModel.Selectors.AudienceUriMode> property in a federated application that utilizes a security token service (STS) that issues <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens. When the STS issues the security token, it can specify the URI of the Web services for which the security token is intended by adding a <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> to the security token. That allows the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator> for the recipient Web service to verify that the issued security token is intended for this Web service by specifying that this check should happen by doing the following:","pos":[0,708],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.AudienceUriMode&gt;</ph> property in a federated application that utilizes a security token service (STS) that issues <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.SamlSecurityToken&gt;</ph> security tokens.","pos":[0,224],"source":"Use the <xref:System.IdentityModel.Selectors.AudienceUriMode> property in a federated application that utilizes a security token service (STS) that issues <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens."},{"content":"When the STS issues the security token, it can specify the URI of the Web services for which the security token is intended by adding a <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition&gt;</ph> to the security token.","pos":[225,451],"source":" When the STS issues the security token, it can specify the URI of the Web services for which the security token is intended by adding a <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> to the security token."},{"content":"That allows the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator&gt;</ph> for the recipient Web service to verify that the issued security token is intended for this Web service by specifying that this check should happen by doing the following:","pos":[452,708],"source":" That allows the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator> for the recipient Web service to verify that the issued security token is intended for this Web service by specifying that this check should happen by doing the following:"}]}]},{"pos":[718,850],"content":"Set the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A> property to Always or BearerKeyOnly.","nodes":[{"content":"Set the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A&gt;</ph> property to Always or BearerKeyOnly.","pos":[0,132],"source":"Set the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A> property to Always or BearerKeyOnly."}]},{"pos":[860,1020],"content":"Specify the set of valid URIs, by adding the URIs to the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A> collection.","nodes":[{"content":"Specify the set of valid URIs, by adding the URIs to the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A&gt;</ph> collection.","pos":[0,160],"source":"Specify the set of valid URIs, by adding the URIs to the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A> collection."}]},{"pos":[1027,1222],"content":"Optionally, override the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A> method to specify the validation algorithm to use for the allowed URI.","nodes":[{"content":"Optionally, override the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A&gt;</ph> method to specify the validation algorithm to use for the allowed URI.","pos":[0,195],"source":"Optionally, override the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A> method to specify the validation algorithm to use for the allowed URI."}]}],"pos":[828,2059],"yaml":true,"extradata":"MT"},{"content":"Always.","nodes":[{"pos":[0,7],"content":"Always.","nodes":[{"content":"Always.","pos":[0,7]}]}],"pos":[3177,3185],"yaml":true},{"content":"Only when the security token's key is of type BearerKey and there are no proof of possession keys in the security token.","nodes":[{"pos":[0,120],"content":"Only when the security token's key is of type BearerKey and there are no proof of possession keys in the security token.","nodes":[{"content":"Only when the security token's key is of type BearerKey and there are no proof of possession keys in the security token.","pos":[0,120]}]}],"pos":[4272,4393],"yaml":true},{"content":"Never.","nodes":[{"pos":[0,6],"content":"Never.","nodes":[{"content":"Never.","pos":[0,6]}]}],"pos":[5439,5446],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Selectors.AudienceUriMode\n  commentId: T:System.IdentityModel.Selectors.AudienceUriMode\n  id: AudienceUriMode\n  children:\n  - System.IdentityModel.Selectors.AudienceUriMode.Always\n  - System.IdentityModel.Selectors.AudienceUriMode.BearerKeyOnly\n  - System.IdentityModel.Selectors.AudienceUriMode.Never\n  langs:\n  - csharp\n  name: AudienceUriMode\n  nameWithType: AudienceUriMode\n  fullName: System.IdentityModel.Selectors.AudienceUriMode\n  type: Enum\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Specifies whether the <xref href=\"System.IdentityModel.Tokens.SamlSecurityToken\"></xref> security token's <xref href=\"System.IdentityModel.Tokens.SamlAudienceRestrictionCondition\"></xref> should be validated.\n  remarks: \"Use the <xref:System.IdentityModel.Selectors.AudienceUriMode> property in a federated application that utilizes a security token service (STS) that issues <xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens. When the STS issues the security token, it can specify the URI of the Web services for which the security token is intended by adding a <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> to the security token. That allows the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator> for the recipient Web service to verify that the issued security token is intended for this Web service by specifying that this check should happen by doing the following:  \\n  \\n-   Set the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A> property to Always or BearerKeyOnly.  \\n  \\n-   Specify the set of valid URIs, by adding the URIs to the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A> collection.  \\n  \\n Optionally, override the <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A> method to specify the validation algorithm to use for the allowed URI.\"\n  syntax:\n    content: public enum AudienceUriMode\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/AudienceUriMode.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IdentityModel.Selectors.AudienceUriMode.Always\n  commentId: F:System.IdentityModel.Selectors.AudienceUriMode.Always\n  id: Always\n  parent: System.IdentityModel.Selectors.AudienceUriMode\n  langs:\n  - csharp\n  name: Always\n  nameWithType: AudienceUriMode.Always\n  fullName: AudienceUriMode.Always\n  type: Field\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Always.\n  syntax:\n    content: Always\n    return:\n      type: System.IdentityModel.Selectors.AudienceUriMode\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/AudienceUriMode.xml\n- uid: System.IdentityModel.Selectors.AudienceUriMode.BearerKeyOnly\n  commentId: F:System.IdentityModel.Selectors.AudienceUriMode.BearerKeyOnly\n  id: BearerKeyOnly\n  parent: System.IdentityModel.Selectors.AudienceUriMode\n  langs:\n  - csharp\n  name: BearerKeyOnly\n  nameWithType: AudienceUriMode.BearerKeyOnly\n  fullName: AudienceUriMode.BearerKeyOnly\n  type: Field\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Only when the security token's key is of type BearerKey and there are no proof of possession keys in the security token.\n  syntax:\n    content: BearerKeyOnly\n    return:\n      type: System.IdentityModel.Selectors.AudienceUriMode\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/AudienceUriMode.xml\n- uid: System.IdentityModel.Selectors.AudienceUriMode.Never\n  commentId: F:System.IdentityModel.Selectors.AudienceUriMode.Never\n  id: Never\n  parent: System.IdentityModel.Selectors.AudienceUriMode\n  langs:\n  - csharp\n  name: Never\n  nameWithType: AudienceUriMode.Never\n  fullName: AudienceUriMode.Never\n  type: Field\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Never.\n  syntax:\n    content: Never\n    return:\n      type: System.IdentityModel.Selectors.AudienceUriMode\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/AudienceUriMode.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.IdentityModel.Selectors.AudienceUriMode.Always\n  parent: System.IdentityModel.Selectors.AudienceUriMode\n  isExternal: false\n  name: Always\n  nameWithType: AudienceUriMode.Always\n  fullName: AudienceUriMode.Always\n- uid: System.IdentityModel.Selectors.AudienceUriMode\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: AudienceUriMode\n  nameWithType: AudienceUriMode\n  fullName: System.IdentityModel.Selectors.AudienceUriMode\n- uid: System.IdentityModel.Selectors.AudienceUriMode.BearerKeyOnly\n  parent: System.IdentityModel.Selectors.AudienceUriMode\n  isExternal: false\n  name: BearerKeyOnly\n  nameWithType: AudienceUriMode.BearerKeyOnly\n  fullName: AudienceUriMode.BearerKeyOnly\n- uid: System.IdentityModel.Selectors.AudienceUriMode.Never\n  parent: System.IdentityModel.Selectors.AudienceUriMode\n  isExternal: false\n  name: Never\n  nameWithType: AudienceUriMode.Never\n  fullName: AudienceUriMode.Never\n"}