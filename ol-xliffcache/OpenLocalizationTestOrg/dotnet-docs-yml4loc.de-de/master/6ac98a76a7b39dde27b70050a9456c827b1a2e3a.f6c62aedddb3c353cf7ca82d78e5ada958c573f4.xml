{"nodes":[{"content":"The <xref href=\"System.Data.Services.QueryInterceptorAttribute\"></xref> on a method annotates it as a query interceptor on the specified entity set.","nodes":[{"pos":[0,148],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.Services.QueryInterceptorAttribute\"&gt;&lt;/xref&gt;</ph> on a method annotates it as a query interceptor on the specified entity set.","source":"The <xref href=\"System.Data.Services.QueryInterceptorAttribute\"></xref> on a method annotates it as a query interceptor on the specified entity set."}],"pos":[586,735],"yaml":true},{"content":"Entity set-level authorization and validation is implemented by methods annotated with the <xref:System.Data.Services.QueryInterceptorAttribute>. [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]s do not implement security policies but instead provide the infrastructure required for service developers to write their own security rules and business validation.  \n  \n Entity set access control and validation is enabled through query operations by using query composition. To control entity-based access, implement a method-per-entity set according to the following rules:  \n  \n The method must have public scope and be annotated with the <xref:System.Data.Services.QueryInterceptorAttribute>, taking the name of a entity set as a parameter.  \n  \n The method must accept no parameters.  \n  \n The method must return an expression of type `Expression<Func<T, bool>>` that is the filter to be composed for the entity set.","nodes":[{"pos":[0,361],"content":"Entity set-level authorization and validation is implemented by methods annotated with the <xref:System.Data.Services.QueryInterceptorAttribute>. [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]s do not implement security policies but instead provide the infrastructure required for service developers to write their own security rules and business validation.","nodes":[{"content":"Entity set-level authorization and validation is implemented by methods annotated with the <ph id=\"ph1\">&lt;xref:System.Data.Services.QueryInterceptorAttribute&gt;</ph>.","pos":[0,145],"source":"Entity set-level authorization and validation is implemented by methods annotated with the <xref:System.Data.Services.QueryInterceptorAttribute>."},{"content":"<ph id=\"ph1\">[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]</ph>s do not implement security policies but instead provide the infrastructure required for service developers to write their own security rules and business validation.","pos":[146,361],"source":"[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]s do not implement security policies but instead provide the infrastructure required for service developers to write their own security rules and business validation."}]},{"pos":[368,572],"content":"Entity set access control and validation is enabled through query operations by using query composition. To control entity-based access, implement a method-per-entity set according to the following rules:","nodes":[{"content":"Entity set access control and validation is enabled through query operations by using query composition. To control entity-based access, implement a method-per-entity set according to the following rules:","pos":[0,204],"nodes":[{"content":"Entity set access control and validation is enabled through query operations by using query composition.","pos":[0,104]},{"content":"To control entity-based access, implement a method-per-entity set according to the following rules:","pos":[105,204]}]}]},{"pos":[579,741],"content":"The method must have public scope and be annotated with the <xref:System.Data.Services.QueryInterceptorAttribute>, taking the name of a entity set as a parameter.","nodes":[{"content":"The method must have public scope and be annotated with the <ph id=\"ph1\">&lt;xref:System.Data.Services.QueryInterceptorAttribute&gt;</ph>, taking the name of a entity set as a parameter.","pos":[0,162],"source":"The method must have public scope and be annotated with the <xref:System.Data.Services.QueryInterceptorAttribute>, taking the name of a entity set as a parameter."}]},{"pos":[748,785],"content":"The method must accept no parameters.","nodes":[{"content":"The method must accept no parameters.","pos":[0,37]}]},{"pos":[792,918],"content":"The method must return an expression of type <ph id=\"ph1\">`Expression&lt;Func&lt;T, bool&gt;&gt;`</ph> that is the filter to be composed for the entity set.","source":"The method must return an expression of type `Expression<Func<T, bool>>` that is the filter to be composed for the entity set."}],"pos":[746,1675],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Data.Services.QueryInterceptorAttribute\"></xref> class for the entity set specified by the <code>entitySetName</code> parameter.","nodes":[{"pos":[0,181],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Services.QueryInterceptorAttribute\"&gt;&lt;/xref&gt;</ph> class for the entity set specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">entitySetName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"Initializes a new instance of the <xref href=\"System.Data.Services.QueryInterceptorAttribute\"></xref> class for the entity set specified by the <code>entitySetName</code> parameter."}],"pos":[7622,7804],"yaml":true},{"content":"The name of the entity set that contains the entity to which the interceptor applies.","nodes":[{"pos":[0,85],"content":"The name of the entity set that contains the entity to which the interceptor applies.","nodes":[{"content":"The name of the entity set that contains the entity to which the interceptor applies.","pos":[0,85]}]}],"pos":[7969,8055],"yaml":true},{"content":"Gets the name of the entity set that contains the entity to which the interceptor applies.","nodes":[{"pos":[0,90],"content":"Gets the name of the entity set that contains the entity to which the interceptor applies.","nodes":[{"content":"Gets the name of the entity set that contains the entity to which the interceptor applies.","pos":[0,90]}]}],"pos":[9158,9249],"yaml":true},{"content":"A string that indicates the name of the entity set that contains the entity to which the interceptor applies.","nodes":[{"pos":[0,109],"content":"A string that indicates the name of the entity set that contains the entity to which the interceptor applies.","nodes":[{"content":"A string that indicates the name of the entity set that contains the entity to which the interceptor applies.","pos":[0,109]}]}],"pos":[9428,9538],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Services.QueryInterceptorAttribute\n  commentId: T:System.Data.Services.QueryInterceptorAttribute\n  id: QueryInterceptorAttribute\n  children:\n  - System.Data.Services.QueryInterceptorAttribute.#ctor(System.String)\n  - System.Data.Services.QueryInterceptorAttribute.EntitySetName\n  langs:\n  - csharp\n  name: QueryInterceptorAttribute\n  nameWithType: QueryInterceptorAttribute\n  fullName: System.Data.Services.QueryInterceptorAttribute\n  type: Class\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  summary: The <xref href=\"System.Data.Services.QueryInterceptorAttribute\"></xref> on a method annotates it as a query interceptor on the specified entity set.\n  remarks: \"Entity set-level authorization and validation is implemented by methods annotated with the <xref:System.Data.Services.QueryInterceptorAttribute>. [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]s do not implement security policies but instead provide the infrastructure required for service developers to write their own security rules and business validation.  \\n  \\n Entity set access control and validation is enabled through query operations by using query composition. To control entity-based access, implement a method-per-entity set according to the following rules:  \\n  \\n The method must have public scope and be annotated with the <xref:System.Data.Services.QueryInterceptorAttribute>, taking the name of a entity set as a parameter.  \\n  \\n The method must accept no parameters.  \\n  \\n The method must return an expression of type `Expression<Func<T, bool>>` that is the filter to be composed for the entity set.\"\n  example:\n  - \"The following example controls access to the `Customers` entity set. Each `Customer` can only see `Orders` associated with that `Customer`.  \\n  \\n```  \\n[QueryInterceptor(\\\"Orders\\\")]  \\npublic Expression<Func<Order, bool>> FilterOrders()   \\n{  \\n    return o => o.Customer.Name == /* Current principal name. */;  \\n}   \\n  \\n// Insures that the user accessing the customer(s) has the appropriate  \\n// rights as defined in the QueryRules object to access the customer  \\n// resource(s).  \\n  \\n[QueryInterceptor (\\\"Customers\\\")]  \\npublic Expression<Func<Customer, bool>> FilterCustomers()   \\n{  \\n  return c => c.Name == /* Current principal name. */ &&  \\n              this.CurrentDataSource.QueryRules.Contains(  \\n                rule => rule.Name == c.Name &&  \\n                        rule.CustomerAllowedToQuery == true  \\n              );  \\n}  \\n  \\n```\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true, Inherited=true)]\n\n      public sealed class QueryInterceptorAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Services/QueryInterceptorAttribute.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Services.QueryInterceptorAttribute.#ctor(System.String)\n  commentId: M:System.Data.Services.QueryInterceptorAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Data.Services.QueryInterceptorAttribute\n  langs:\n  - csharp\n  name: QueryInterceptorAttribute(String)\n  nameWithType: QueryInterceptorAttribute.QueryInterceptorAttribute(String)\n  fullName: QueryInterceptorAttribute.QueryInterceptorAttribute(String)\n  type: Constructor\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  summary: Initializes a new instance of the <xref href=\"System.Data.Services.QueryInterceptorAttribute\"></xref> class for the entity set specified by the <code>entitySetName</code> parameter.\n  syntax:\n    content: public QueryInterceptorAttribute (string entitySetName);\n    parameters:\n    - id: entitySetName\n      type: System.String\n      description: The name of the entity set that contains the entity to which the interceptor applies.\n  overload: System.Data.Services.QueryInterceptorAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Services/QueryInterceptorAttribute.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Services.QueryInterceptorAttribute.EntitySetName\n  commentId: P:System.Data.Services.QueryInterceptorAttribute.EntitySetName\n  id: EntitySetName\n  parent: System.Data.Services.QueryInterceptorAttribute\n  langs:\n  - csharp\n  name: EntitySetName\n  nameWithType: QueryInterceptorAttribute.EntitySetName\n  fullName: QueryInterceptorAttribute.EntitySetName\n  type: Property\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  summary: Gets the name of the entity set that contains the entity to which the interceptor applies.\n  syntax:\n    content: >-\n      [get: System.Diagnostics.DebuggerStepThrough]\n\n      public string EntitySetName { get; }\n    return:\n      type: System.String\n      description: A string that indicates the name of the entity set that contains the entity to which the interceptor applies.\n  overload: System.Data.Services.QueryInterceptorAttribute.EntitySetName*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Diagnostics.DebuggerStepThrough'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Services/QueryInterceptorAttribute.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Data.Services.QueryInterceptorAttribute.#ctor(System.String)\n  parent: System.Data.Services.QueryInterceptorAttribute\n  isExternal: false\n  name: QueryInterceptorAttribute(String)\n  nameWithType: QueryInterceptorAttribute.QueryInterceptorAttribute(String)\n  fullName: QueryInterceptorAttribute.QueryInterceptorAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Services.QueryInterceptorAttribute.EntitySetName\n  parent: System.Data.Services.QueryInterceptorAttribute\n  isExternal: false\n  name: EntitySetName\n  nameWithType: QueryInterceptorAttribute.EntitySetName\n  fullName: QueryInterceptorAttribute.EntitySetName\n- uid: System.Data.Services.QueryInterceptorAttribute.#ctor*\n  parent: System.Data.Services.QueryInterceptorAttribute\n  isExternal: false\n  name: QueryInterceptorAttribute\n  nameWithType: QueryInterceptorAttribute.QueryInterceptorAttribute\n  fullName: QueryInterceptorAttribute.QueryInterceptorAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Services/QueryInterceptorAttribute.xml\n- uid: System.Data.Services.QueryInterceptorAttribute.EntitySetName*\n  parent: System.Data.Services.QueryInterceptorAttribute\n  isExternal: false\n  name: EntitySetName\n  nameWithType: QueryInterceptorAttribute.EntitySetName\n  fullName: QueryInterceptorAttribute.EntitySetName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Services/QueryInterceptorAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}