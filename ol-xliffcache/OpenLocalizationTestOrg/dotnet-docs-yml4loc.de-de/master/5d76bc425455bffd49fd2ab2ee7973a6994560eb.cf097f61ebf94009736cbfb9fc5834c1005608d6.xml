{"nodes":[{"content":"The exception that is thrown if the main assembly does not contain the resources for the neutral culture, and an appropriate satellite assembly is missing.","nodes":[{"pos":[0,155],"content":"The exception that is thrown if the main assembly does not contain the resources for the neutral culture, and an appropriate satellite assembly is missing.","nodes":[{"content":"The exception that is thrown if the main assembly does not contain the resources for the neutral culture, and an appropriate satellite assembly is missing.","pos":[0,155]}]}],"pos":[897,1053],"yaml":true},{"content":"## Desktop Apps  \n In desktop apps, <xref:System.Resources.MissingManifestResourceException> is thrown when the attempt to retrieve a resource fails because the resource set for the neutral culture could not be loaded from a particular assembly. Although the exception is thrown when you try to retrieve a particular resource, it is caused by the failure to load the resource set rather than the failure to find the resource.  \n  \n> [!NOTE]\n>  For additional information, see the \"Handling a MissingManifestResourceException Exception\" section in the <xref:System.Resources.ResourceManager> class topic.  \n  \n The main causes of the exception include the following:  \n  \n-   The resource set is not identified by its fully qualified name. For example, if the `baseName` parameter in the call to the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=fullName> method specifies the root name of the resource set without a namespace, but the resource set is assigned a namespace when it is stored in its assembly, the call to the <xref:System.Resources.ResourceManager.GetString%2A?displayProperty=fullName> method throws this exception.  \n  \n     If you have embedded the .resources file that contains the default culture's resources in your executable and your app is throwing a <xref:System.Resources.MissingManifestResourceException>, you can use a reflection tool such as  to determine the fully qualified name of the resource. In ILDasm, double click the executable's **MANIFEST** label to open the **MANIFEST** window. Resources appear as `.mresource` items and are listed after external assembly references and custom assembly-level attributes. You can also compile the following simple utility, which lists the fully qualified names of embedded resources in the assembly whose name is passed to it as a command-line parameter.  \n  \n     [!code-csharp[System.Resources.ResourceManager.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/resourcenames.cs#4)]\n     [!code-vb[System.Resources.ResourceManager.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/resourcenames.vb#4)]  \n  \n-   You identify the resource set by its resource file name (along with its optional namespace) and its file extension rather than by its namespace and root file name alone. For example, this exception is thrown if the neutral culture's resource set is named `GlobalResources` and you supply a value of `GlobalResources.resources` (instead of `GlobalResources`) to the `baseName` parameter of the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=fullName> constructor.  \n  \n-   The culture-specific resource set that is identified in a method call cannot be found, and the fallback resource set cannot be loaded. For example, if you create satellite assemblies for the English (United States) and Russia (Russian) cultures but you fail to provide a resource set for the neutral culture, this exception is thrown if your app's current culture is English (Great Britain).  \n  \n <xref:System.Resources.MissingManifestResourceException> uses the HRESULT COR_E_MISSINGMANIFESTRESOURCE, which has the value 0x80131532.  \n  \n <xref:System.Resources.MissingManifestResourceException> uses the default <xref:System.Object.Equals%2A> implementation, which supports reference equality.  \n  \n For a list of initial property values for an instance of <xref:System.Resources.MissingManifestResourceException>, see the <xref:System.Resources.MissingManifestResourceException.%23ctor%2A> constructors.  \n  \n> [!NOTE]\n>  We recommend that you include a neutral set of resources in your main assembly, so your app won't fail if a satellite assembly is unavailable.  \n  \n## [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] Apps  \n Unlike desktop apps, which deploy localized resources in satellite assemblies and typically store the resources of the neutral culture in the main assembly, [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps deploy resources for multiple cultures, including the neutral culture, in a single package resource index (.pri) file. As a result, in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app, if resources for the preferred culture cannot be found, the <xref:System.Resources.MissingManifestResourceException> is thrown under either of the following conditions:  \n  \n-   The app does not include a .pri file or the .pri file could not be opened.  \n  \n-   The app's .pri file does not contain a resource set for the given root name.","nodes":[{"pos":[3,15],"content":"Desktop Apps","linkify":"Desktop Apps","nodes":[{"content":"Desktop Apps","pos":[0,12]}]},{"pos":[19,425],"content":"In desktop apps, <xref:System.Resources.MissingManifestResourceException> is thrown when the attempt to retrieve a resource fails because the resource set for the neutral culture could not be loaded from a particular assembly. Although the exception is thrown when you try to retrieve a particular resource, it is caused by the failure to load the resource set rather than the failure to find the resource.","nodes":[{"content":"In desktop apps, <xref:System.Resources.MissingManifestResourceException> is thrown when the attempt to retrieve a resource fails because the resource set for the neutral culture could not be loaded from a particular assembly. Although the exception is thrown when you try to retrieve a particular resource, it is caused by the failure to load the resource set rather than the failure to find the resource.","pos":[0,406],"nodes":[{"content":"In desktop apps, <ph id=\"ph1\">&lt;xref:System.Resources.MissingManifestResourceException&gt;</ph> is thrown when the attempt to retrieve a resource fails because the resource set for the neutral culture could not be loaded from a particular assembly.","pos":[0,226],"source":"In desktop apps, <xref:System.Resources.MissingManifestResourceException> is thrown when the attempt to retrieve a resource fails because the resource set for the neutral culture could not be loaded from a particular assembly."},{"content":"Although the exception is thrown when you try to retrieve a particular resource, it is caused by the failure to load the resource set rather than the failure to find the resource.","pos":[227,406]}]}]},{"pos":[433,603],"content":"[!NOTE]\n For additional information, see the \"Handling a MissingManifestResourceException Exception\" section in the <xref:System.Resources.ResourceManager> class topic.","leadings":["","> "],"nodes":[{"content":"For additional information, see the \"Handling a MissingManifestResourceException Exception\" section in the <ph id=\"ph1\">&lt;xref:System.Resources.ResourceManager&gt;</ph> class topic.","pos":[9,168],"source":" For additional information, see the \"Handling a MissingManifestResourceException Exception\" section in the <xref:System.Resources.ResourceManager> class topic."}]},{"pos":[610,665],"content":"The main causes of the exception include the following:","nodes":[{"content":"The main causes of the exception include the following:","pos":[0,55]}]},{"pos":[675,1195],"content":"The resource set is not identified by its fully qualified name. For example, if the `baseName` parameter in the call to the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=fullName> method specifies the root name of the resource set without a namespace, but the resource set is assigned a namespace when it is stored in its assembly, the call to the <xref:System.Resources.ResourceManager.GetString%2A?displayProperty=fullName> method throws this exception.","nodes":[{"content":"The resource set is not identified by its fully qualified name.","pos":[0,63]},{"content":"For example, if the <ph id=\"ph1\">`baseName`</ph> parameter in the call to the <ph id=\"ph2\">&lt;xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=fullName&gt;</ph> method specifies the root name of the resource set without a namespace, but the resource set is assigned a namespace when it is stored in its assembly, the call to the <ph id=\"ph3\">&lt;xref:System.Resources.ResourceManager.GetString%2A?displayProperty=fullName&gt;</ph> method throws this exception.","pos":[64,520],"source":" For example, if the `baseName` parameter in the call to the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=fullName> method specifies the root name of the resource set without a namespace, but the resource set is assigned a namespace when it is stored in its assembly, the call to the <xref:System.Resources.ResourceManager.GetString%2A?displayProperty=fullName> method throws this exception."}]},{"pos":[1206,1893],"content":"If you have embedded the .resources file that contains the default culture's resources in your executable and your app is throwing a <xref:System.Resources.MissingManifestResourceException>, you can use a reflection tool such as  to determine the fully qualified name of the resource. In ILDasm, double click the executable's **MANIFEST** label to open the **MANIFEST** window. Resources appear as `.mresource` items and are listed after external assembly references and custom assembly-level attributes. You can also compile the following simple utility, which lists the fully qualified names of embedded resources in the assembly whose name is passed to it as a command-line parameter.","nodes":[{"content":"If you have embedded the .resources file that contains the default culture's resources in your executable and your app is throwing a <ph id=\"ph1\">&lt;xref:System.Resources.MissingManifestResourceException&gt;</ph>, you can use a reflection tool such as  to determine the fully qualified name of the resource.","pos":[0,284],"source":"If you have embedded the .resources file that contains the default culture's resources in your executable and your app is throwing a <xref:System.Resources.MissingManifestResourceException>, you can use a reflection tool such as  to determine the fully qualified name of the resource."},{"content":"In ILDasm, double click the executable's <bpt id=\"p1\">**</bpt>MANIFEST<ept id=\"p1\">**</ept> label to open the <bpt id=\"p2\">**</bpt>MANIFEST<ept id=\"p2\">**</ept> window.","pos":[285,377],"source":" In ILDasm, double click the executable's **MANIFEST** label to open the **MANIFEST** window."},{"content":"Resources appear as <ph id=\"ph1\">`.mresource`</ph> items and are listed after external assembly references and custom assembly-level attributes.","pos":[378,504],"source":" Resources appear as `.mresource` items and are listed after external assembly references and custom assembly-level attributes."},{"content":"You can also compile the following simple utility, which lists the fully qualified names of embedded resources in the assembly whose name is passed to it as a command-line parameter.","pos":[505,687]}]},{"pos":[1904,2245],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Resources.ResourceManager.Class#4<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/resourcenames.cs#4)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Resources.ResourceManager.Class#4<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/resourcenames.vb#4)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.Resources.ResourceManager.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/resourcenames.cs#4)]\n [!code-vb[System.Resources.ResourceManager.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/resourcenames.vb#4)]"},{"pos":[2255,2781],"content":"You identify the resource set by its resource file name (along with its optional namespace) and its file extension rather than by its namespace and root file name alone. For example, this exception is thrown if the neutral culture's resource set is named `GlobalResources` and you supply a value of `GlobalResources.resources` (instead of `GlobalResources`) to the `baseName` parameter of the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=fullName> constructor.","nodes":[{"content":"You identify the resource set by its resource file name (along with its optional namespace) and its file extension rather than by its namespace and root file name alone.","pos":[0,169]},{"content":"For example, this exception is thrown if the neutral culture's resource set is named <ph id=\"ph1\">`GlobalResources`</ph> and you supply a value of <ph id=\"ph2\">`GlobalResources.resources`</ph> (instead of <ph id=\"ph3\">`GlobalResources`</ph>) to the <ph id=\"ph4\">`baseName`</ph> parameter of the <ph id=\"ph5\">&lt;xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=fullName&gt;</ph> constructor.","pos":[170,526],"source":" For example, this exception is thrown if the neutral culture's resource set is named `GlobalResources` and you supply a value of `GlobalResources.resources` (instead of `GlobalResources`) to the `baseName` parameter of the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=fullName> constructor."}]},{"pos":[2791,3182],"content":"The culture-specific resource set that is identified in a method call cannot be found, and the fallback resource set cannot be loaded. For example, if you create satellite assemblies for the English (United States) and Russia (Russian) cultures but you fail to provide a resource set for the neutral culture, this exception is thrown if your app's current culture is English (Great Britain).","nodes":[{"content":"The culture-specific resource set that is identified in a method call cannot be found, and the fallback resource set cannot be loaded. For example, if you create satellite assemblies for the English (United States) and Russia (Russian) cultures but you fail to provide a resource set for the neutral culture, this exception is thrown if your app's current culture is English (Great Britain).","pos":[0,391],"nodes":[{"content":"The culture-specific resource set that is identified in a method call cannot be found, and the fallback resource set cannot be loaded.","pos":[0,134]},{"content":"For example, if you create satellite assemblies for the English (United States) and Russia (Russian) cultures but you fail to provide a resource set for the neutral culture, this exception is thrown if your app's current culture is English (Great Britain).","pos":[135,391]}]}]},{"pos":[3189,3325],"content":"<xref:System.Resources.MissingManifestResourceException> uses the HRESULT COR_E_MISSINGMANIFESTRESOURCE, which has the value 0x80131532.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Resources.MissingManifestResourceException&gt;</ph> uses the HRESULT COR_E_MISSINGMANIFESTRESOURCE, which has the value 0x80131532.","pos":[0,136],"source":"<xref:System.Resources.MissingManifestResourceException> uses the HRESULT COR_E_MISSINGMANIFESTRESOURCE, which has the value 0x80131532."}]},{"pos":[3332,3487],"content":"<xref:System.Resources.MissingManifestResourceException> uses the default <xref:System.Object.Equals%2A> implementation, which supports reference equality.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Resources.MissingManifestResourceException&gt;</ph> uses the default <ph id=\"ph2\">&lt;xref:System.Object.Equals%2A&gt;</ph> implementation, which supports reference equality.","pos":[0,155],"source":"<xref:System.Resources.MissingManifestResourceException> uses the default <xref:System.Object.Equals%2A> implementation, which supports reference equality."}]},{"pos":[3494,3698],"content":"For a list of initial property values for an instance of <xref:System.Resources.MissingManifestResourceException>, see the <xref:System.Resources.MissingManifestResourceException.%23ctor%2A> constructors.","nodes":[{"content":"For a list of initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.Resources.MissingManifestResourceException&gt;</ph>, see the <ph id=\"ph2\">&lt;xref:System.Resources.MissingManifestResourceException.%23ctor%2A&gt;</ph> constructors.","pos":[0,204],"source":"For a list of initial property values for an instance of <xref:System.Resources.MissingManifestResourceException>, see the <xref:System.Resources.MissingManifestResourceException.%23ctor%2A> constructors."}]},{"pos":[3706,3859],"content":"[!NOTE]\n We recommend that you include a neutral set of resources in your main assembly, so your app won't fail if a satellite assembly is unavailable.","leadings":["","> "],"nodes":[{"content":"We recommend that you include a neutral set of resources in your main assembly, so your app won't fail if a satellite assembly is unavailable.","pos":[9,151]}]},{"pos":[3868,3938],"content":"<ph id=\"ph1\">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]</ph> Apps","linkify":"[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] Apps","source":"[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] Apps"},{"pos":[3942,4546],"content":"Unlike desktop apps, which deploy localized resources in satellite assemblies and typically store the resources of the neutral culture in the main assembly, [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps deploy resources for multiple cultures, including the neutral culture, in a single package resource index (.pri) file. As a result, in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app, if resources for the preferred culture cannot be found, the <xref:System.Resources.MissingManifestResourceException> is thrown under either of the following conditions:","nodes":[{"content":"Unlike desktop apps, which deploy localized resources in satellite assemblies and typically store the resources of the neutral culture in the main assembly, <ph id=\"ph1\">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]</ph> apps deploy resources for multiple cultures, including the neutral culture, in a single package resource index (.pri) file.","pos":[0,346],"source":"Unlike desktop apps, which deploy localized resources in satellite assemblies and typically store the resources of the neutral culture in the main assembly, [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps deploy resources for multiple cultures, including the neutral culture, in a single package resource index (.pri) file."},{"content":"As a result, in a <ph id=\"ph1\">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]</ph> app, if resources for the preferred culture cannot be found, the <ph id=\"ph2\">&lt;xref:System.Resources.MissingManifestResourceException&gt;</ph> is thrown under either of the following conditions:","pos":[347,604],"source":" As a result, in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app, if resources for the preferred culture cannot be found, the <xref:System.Resources.MissingManifestResourceException> is thrown under either of the following conditions:"}]},{"pos":[4556,4630],"content":"The app does not include a .pri file or the .pri file could not be opened.","nodes":[{"content":"The app does not include a .pri file or the .pri file could not be opened.","pos":[0,74]}]},{"pos":[4640,4716],"content":"The app's .pri file does not contain a resource set for the given root name.","nodes":[{"content":"The app's .pri file does not contain a resource set for the given root name.","pos":[0,76]}]}],"pos":[1064,5818],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Resources.MissingManifestResourceException\"></xref> class with default properties.","nodes":[{"pos":[0,135],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Resources.MissingManifestResourceException\"&gt;&lt;/xref&gt;</ph> class with default properties.","source":"Initializes a new instance of the <xref href=\"System.Resources.MissingManifestResourceException\"></xref> class with default properties."}],"pos":[8494,8630],"yaml":true},{"content":"The following table shows the initial property values for an instance of <xref:System.Resources.MissingManifestResourceException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The localized error message for <xref:System.Resources.MissingManifestResourceException>.|","nodes":[{"pos":[0,130],"content":"The following table shows the initial property values for an instance of <xref:System.Resources.MissingManifestResourceException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.Resources.MissingManifestResourceException&gt;</ph>.","pos":[0,130],"source":"The following table shows the initial property values for an instance of <xref:System.Resources.MissingManifestResourceException>."}]},{"pos":[137,145],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[146,151],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[187,228],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[229,236],"content":"<ph id=\"ph1\">`null`</ph>.","source":"`null`."},{"pos":[241,275],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[276,365],"content":"The localized error message for <xref:System.Resources.MissingManifestResourceException>.","nodes":[{"content":"The localized error message for <ph id=\"ph1\">&lt;xref:System.Resources.MissingManifestResourceException&gt;</ph>.","pos":[0,89],"source":"The localized error message for <xref:System.Resources.MissingManifestResourceException>."}]}],"pos":[8641,9015],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Resources.MissingManifestResourceException\"></xref> class with the specified error message.","nodes":[{"pos":[0,144],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Resources.MissingManifestResourceException\"&gt;&lt;/xref&gt;</ph> class with the specified error message.","source":"Initializes a new instance of the <xref href=\"System.Resources.MissingManifestResourceException\"></xref> class with the specified error message."}],"pos":[10876,11021],"yaml":true},{"content":"The following table shows the initial property values for an instance of <xref:System.Resources.MissingManifestResourceException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The `message` string.|","nodes":[{"pos":[0,130],"content":"The following table shows the initial property values for an instance of <xref:System.Resources.MissingManifestResourceException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.Resources.MissingManifestResourceException&gt;</ph>.","pos":[0,130],"source":"The following table shows the initial property values for an instance of <xref:System.Resources.MissingManifestResourceException>."}]},{"pos":[137,145],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[146,151],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[187,228],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[229,236],"content":"<ph id=\"ph1\">`null`</ph>.","source":"`null`."},{"pos":[241,275],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[276,297],"content":"The <ph id=\"ph1\">`message`</ph> string.","source":"The `message` string."}],"pos":[11032,11338],"yaml":true,"extradata":"MT"},{"content":"The error message that explains the reason for the exception.","nodes":[{"pos":[0,61],"content":"The error message that explains the reason for the exception.","nodes":[{"content":"The error message that explains the reason for the exception.","pos":[0,61]}]}],"pos":[11498,11560],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Resources.MissingManifestResourceException\"></xref> class from serialized data.","nodes":[{"pos":[0,132],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Resources.MissingManifestResourceException\"&gt;&lt;/xref&gt;</ph> class from serialized data.","source":"Initializes a new instance of the <xref href=\"System.Resources.MissingManifestResourceException\"></xref> class from serialized data."}],"pos":[13659,13792],"yaml":true},{"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.","nodes":[{"pos":[0,113],"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.","nodes":[{"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.","pos":[0,113]}]}],"pos":[13803,13917],"yaml":true,"extradata":"MT"},{"content":"The object that holds the serialized object data.","nodes":[{"pos":[0,49],"content":"The object that holds the serialized object data.","nodes":[{"content":"The object that holds the serialized object data.","pos":[0,49]}]}],"pos":[14202,14252],"yaml":true},{"content":"The contextual information about the source or destination of the exception.","nodes":[{"pos":[0,76],"content":"The contextual information about the source or destination of the exception.","nodes":[{"content":"The contextual information about the source or destination of the exception.","pos":[0,76]}]}],"pos":[14347,14424],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Resources.MissingManifestResourceException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.","nodes":[{"pos":[0,217],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Resources.MissingManifestResourceException\"&gt;&lt;/xref&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.","source":"Initializes a new instance of the <xref href=\"System.Resources.MissingManifestResourceException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception."}],"pos":[15979,16197],"yaml":true},{"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.Resources.MissingManifestResourceException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.Exception.Message%2A>|The error message string.|","nodes":[{"pos":[0,427],"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.","nodes":[{"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.","pos":[0,182],"source":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id=\"ph2\">`null`</ph> if the <ph id=\"ph3\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.","pos":[183,427],"source":" The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor."}]},{"pos":[434,564],"content":"The following table shows the initial property values for an instance of <xref:System.Resources.MissingManifestResourceException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.Resources.MissingManifestResourceException&gt;</ph>.","pos":[0,130],"source":"The following table shows the initial property values for an instance of <xref:System.Resources.MissingManifestResourceException>."}]},{"pos":[571,579],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[580,585],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[621,662],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[663,693],"content":"The inner exception reference.","nodes":[{"content":"The inner exception reference.","pos":[0,30]}]},{"pos":[698,732],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[733,758],"content":"The error message string.","nodes":[{"content":"The error message string.","pos":[0,25]}]}],"pos":[16208,16977],"yaml":true,"extradata":"MT"},{"content":"The error message that explains the reason for the exception.","nodes":[{"pos":[0,61],"content":"The error message that explains the reason for the exception.","nodes":[{"content":"The error message that explains the reason for the exception.","pos":[0,61]}]}],"pos":[17154,17216],"yaml":true},{"content":"The exception that is the cause of the current exception. If the <code>inner</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"pos":[0,193],"content":"The exception that is the cause of the current exception. If the <code>inner</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"content":"The exception that is the cause of the current exception.","pos":[0,57]},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inner</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <ph id=\"ph2\">`null`</ph>, the current exception is raised in a <ph id=\"ph3\">`catch`</ph> block that handles the inner exception.","pos":[58,193],"source":" If the <code>inner</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception."}]}],"pos":[17280,17474],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Resources.MissingManifestResourceException\n  commentId: T:System.Resources.MissingManifestResourceException\n  id: MissingManifestResourceException\n  children:\n  - System.Resources.MissingManifestResourceException.#ctor\n  - System.Resources.MissingManifestResourceException.#ctor(System.String)\n  - System.Resources.MissingManifestResourceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Resources.MissingManifestResourceException.#ctor(System.String,System.Exception)\n  langs:\n  - csharp\n  name: MissingManifestResourceException\n  nameWithType: MissingManifestResourceException\n  fullName: System.Resources.MissingManifestResourceException\n  type: Class\n  assemblies:\n  - System.Resources.ResourceManager\n  - mscorlib\n  - netstandard\n  namespace: System.Resources\n  summary: The exception that is thrown if the main assembly does not contain the resources for the neutral culture, and an appropriate satellite assembly is missing.\n  remarks: \"## Desktop Apps  \\n In desktop apps, <xref:System.Resources.MissingManifestResourceException> is thrown when the attempt to retrieve a resource fails because the resource set for the neutral culture could not be loaded from a particular assembly. Although the exception is thrown when you try to retrieve a particular resource, it is caused by the failure to load the resource set rather than the failure to find the resource.  \\n  \\n> [!NOTE]\\n>  For additional information, see the \\\"Handling a MissingManifestResourceException Exception\\\" section in the <xref:System.Resources.ResourceManager> class topic.  \\n  \\n The main causes of the exception include the following:  \\n  \\n-   The resource set is not identified by its fully qualified name. For example, if the `baseName` parameter in the call to the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=fullName> method specifies the root name of the resource set without a namespace, but the resource set is assigned a namespace when it is stored in its assembly, the call to the <xref:System.Resources.ResourceManager.GetString%2A?displayProperty=fullName> method throws this exception.  \\n  \\n     If you have embedded the .resources file that contains the default culture's resources in your executable and your app is throwing a <xref:System.Resources.MissingManifestResourceException>, you can use a reflection tool such as  to determine the fully qualified name of the resource. In ILDasm, double click the executable's **MANIFEST** label to open the **MANIFEST** window. Resources appear as `.mresource` items and are listed after external assembly references and custom assembly-level attributes. You can also compile the following simple utility, which lists the fully qualified names of embedded resources in the assembly whose name is passed to it as a command-line parameter.  \\n  \\n     [!code-csharp[System.Resources.ResourceManager.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcemanager.class/cs/resourcenames.cs#4)]\\n     [!code-vb[System.Resources.ResourceManager.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcemanager.class/vb/resourcenames.vb#4)]  \\n  \\n-   You identify the resource set by its resource file name (along with its optional namespace) and its file extension rather than by its namespace and root file name alone. For example, this exception is thrown if the neutral culture's resource set is named `GlobalResources` and you supply a value of `GlobalResources.resources` (instead of `GlobalResources`) to the `baseName` parameter of the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=fullName> constructor.  \\n  \\n-   The culture-specific resource set that is identified in a method call cannot be found, and the fallback resource set cannot be loaded. For example, if you create satellite assemblies for the English (United States) and Russia (Russian) cultures but you fail to provide a resource set for the neutral culture, this exception is thrown if your app's current culture is English (Great Britain).  \\n  \\n <xref:System.Resources.MissingManifestResourceException> uses the HRESULT COR_E_MISSINGMANIFESTRESOURCE, which has the value 0x80131532.  \\n  \\n <xref:System.Resources.MissingManifestResourceException> uses the default <xref:System.Object.Equals%2A> implementation, which supports reference equality.  \\n  \\n For a list of initial property values for an instance of <xref:System.Resources.MissingManifestResourceException>, see the <xref:System.Resources.MissingManifestResourceException.%23ctor%2A> constructors.  \\n  \\n> [!NOTE]\\n>  We recommend that you include a neutral set of resources in your main assembly, so your app won't fail if a satellite assembly is unavailable.  \\n  \\n## [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] Apps  \\n Unlike desktop apps, which deploy localized resources in satellite assemblies and typically store the resources of the neutral culture in the main assembly, [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps deploy resources for multiple cultures, including the neutral culture, in a single package resource index (.pri) file. As a result, in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app, if resources for the preferred culture cannot be found, the <xref:System.Resources.MissingManifestResourceException> is thrown under either of the following conditions:  \\n  \\n-   The app does not include a .pri file or the .pri file could not be opened.  \\n  \\n-   The app's .pri file does not contain a resource set for the given root name.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class MissingManifestResourceException : SystemException\n  inheritance:\n  - System.Object\n  - System.Exception\n  implements: []\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.GetBaseException\n  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Exception.GetType\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Message\n  - System.Exception.SerializeObjectState\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.TargetSite\n  - System.Exception.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Resources/MissingManifestResourceException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Resources.MissingManifestResourceException.#ctor\n  commentId: M:System.Resources.MissingManifestResourceException.#ctor\n  id: '#ctor'\n  parent: System.Resources.MissingManifestResourceException\n  langs:\n  - csharp\n  name: MissingManifestResourceException()\n  nameWithType: MissingManifestResourceException.MissingManifestResourceException()\n  fullName: MissingManifestResourceException.MissingManifestResourceException()\n  type: Constructor\n  assemblies:\n  - System.Resources.ResourceManager\n  - mscorlib\n  - netstandard\n  namespace: System.Resources\n  summary: Initializes a new instance of the <xref href=\"System.Resources.MissingManifestResourceException\"></xref> class with default properties.\n  remarks: \"The following table shows the initial property values for an instance of <xref:System.Resources.MissingManifestResourceException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|`null`.|  \\n|<xref:System.Exception.Message%2A>|The localized error message for <xref:System.Resources.MissingManifestResourceException>.|\"\n  syntax:\n    content: public MissingManifestResourceException ();\n    parameters: []\n  overload: System.Resources.MissingManifestResourceException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Resources/MissingManifestResourceException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Resources.MissingManifestResourceException.#ctor(System.String)\n  commentId: M:System.Resources.MissingManifestResourceException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Resources.MissingManifestResourceException\n  langs:\n  - csharp\n  name: MissingManifestResourceException(String)\n  nameWithType: MissingManifestResourceException.MissingManifestResourceException(String)\n  fullName: MissingManifestResourceException.MissingManifestResourceException(String)\n  type: Constructor\n  assemblies:\n  - System.Resources.ResourceManager\n  - mscorlib\n  - netstandard\n  namespace: System.Resources\n  summary: Initializes a new instance of the <xref href=\"System.Resources.MissingManifestResourceException\"></xref> class with the specified error message.\n  remarks: \"The following table shows the initial property values for an instance of <xref:System.Resources.MissingManifestResourceException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|`null`.|  \\n|<xref:System.Exception.Message%2A>|The `message` string.|\"\n  syntax:\n    content: public MissingManifestResourceException (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: The error message that explains the reason for the exception.\n  overload: System.Resources.MissingManifestResourceException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Resources/MissingManifestResourceException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Resources.MissingManifestResourceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Resources.MissingManifestResourceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.Resources.MissingManifestResourceException\n  langs:\n  - csharp\n  name: MissingManifestResourceException(SerializationInfo, StreamingContext)\n  nameWithType: MissingManifestResourceException.MissingManifestResourceException(SerializationInfo, StreamingContext)\n  fullName: MissingManifestResourceException.MissingManifestResourceException(SerializationInfo, StreamingContext)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Resources.ResourceManager\n  namespace: System.Resources\n  summary: Initializes a new instance of the <xref href=\"System.Resources.MissingManifestResourceException\"></xref> class from serialized data.\n  remarks: This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.\n  syntax:\n    content: protected MissingManifestResourceException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The object that holds the serialized object data.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The contextual information about the source or destination of the exception.\n  overload: System.Resources.MissingManifestResourceException.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Resources/MissingManifestResourceException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Resources.MissingManifestResourceException.#ctor(System.String,System.Exception)\n  commentId: M:System.Resources.MissingManifestResourceException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.Resources.MissingManifestResourceException\n  langs:\n  - csharp\n  name: MissingManifestResourceException(String, Exception)\n  nameWithType: MissingManifestResourceException.MissingManifestResourceException(String, Exception)\n  fullName: MissingManifestResourceException.MissingManifestResourceException(String, Exception)\n  type: Constructor\n  assemblies:\n  - System.Resources.ResourceManager\n  - mscorlib\n  - netstandard\n  namespace: System.Resources\n  summary: Initializes a new instance of the <xref href=\"System.Resources.MissingManifestResourceException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.\n  remarks: \"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.Resources.MissingManifestResourceException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \\n|<xref:System.Exception.Message%2A>|The error message string.|\"\n  syntax:\n    content: public MissingManifestResourceException (string message, Exception inner);\n    parameters:\n    - id: message\n      type: System.String\n      description: The error message that explains the reason for the exception.\n    - id: inner\n      type: System.Exception\n      description: The exception that is the cause of the current exception. If the <code>inner</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.\n  overload: System.Resources.MissingManifestResourceException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Resources/MissingManifestResourceException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Resources.MissingManifestResourceException.#ctor\n  parent: System.Resources.MissingManifestResourceException\n  isExternal: false\n  name: MissingManifestResourceException()\n  nameWithType: MissingManifestResourceException.MissingManifestResourceException()\n  fullName: MissingManifestResourceException.MissingManifestResourceException()\n- uid: System.Resources.MissingManifestResourceException.#ctor(System.String)\n  parent: System.Resources.MissingManifestResourceException\n  isExternal: false\n  name: MissingManifestResourceException(String)\n  nameWithType: MissingManifestResourceException.MissingManifestResourceException(String)\n  fullName: MissingManifestResourceException.MissingManifestResourceException(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Resources.MissingManifestResourceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Resources.MissingManifestResourceException\n  isExternal: false\n  name: MissingManifestResourceException(SerializationInfo, StreamingContext)\n  nameWithType: MissingManifestResourceException.MissingManifestResourceException(SerializationInfo, StreamingContext)\n  fullName: MissingManifestResourceException.MissingManifestResourceException(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Resources.MissingManifestResourceException.#ctor(System.String,System.Exception)\n  parent: System.Resources.MissingManifestResourceException\n  isExternal: false\n  name: MissingManifestResourceException(String, Exception)\n  nameWithType: MissingManifestResourceException.MissingManifestResourceException(String, Exception)\n  fullName: MissingManifestResourceException.MissingManifestResourceException(String, Exception)\n- uid: System.Resources.MissingManifestResourceException.#ctor*\n  parent: System.Resources.MissingManifestResourceException\n  isExternal: false\n  name: MissingManifestResourceException\n  nameWithType: MissingManifestResourceException.MissingManifestResourceException\n  fullName: MissingManifestResourceException.MissingManifestResourceException\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Resources/MissingManifestResourceException.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: false\n  name: GetType()\n  nameWithType: Exception.GetType()\n  fullName: Exception.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  nameWithType: Exception.ToString()\n  fullName: Exception.ToString()\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  nameWithType: Exception.Data\n  fullName: Exception.Data\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  nameWithType: Exception.GetBaseException()\n  fullName: Exception.GetBaseException()\n- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Exception\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: Exception.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  nameWithType: Exception.HelpLink\n  fullName: Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  nameWithType: Exception.HResult\n  fullName: Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  nameWithType: Exception.InnerException\n  fullName: Exception.InnerException\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  nameWithType: Exception.Message\n  fullName: Exception.Message\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: false\n  name: SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  fullName: Exception.SerializeObjectState\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  nameWithType: Exception.Source\n  fullName: Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  nameWithType: Exception.StackTrace\n  fullName: Exception.StackTrace\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: false\n  name: TargetSite\n  nameWithType: Exception.TargetSite\n  fullName: Exception.TargetSite\n"}