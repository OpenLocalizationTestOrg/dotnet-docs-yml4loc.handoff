### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  commentId: T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  id: IpcServerChannel
  children:
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String)
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String)
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri(System.String)
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse(System.String,System.String@)
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening(System.Object)
  - System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening(System.Object)
  langs:
  - csharp
  name: IpcServerChannel
  nameWithType: IpcServerChannel
  fullName: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  type: Class
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: Implements a server channel for remote calls that uses the IPC system to transmit messages.
  remarks: "Channels are used by the .NET Framework remoting infrastructure to transport remote calls. When a client calls a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel. After the message is received, it is deserialized and processed. Any returned values are transmitted by the server channel and received by the client channel.  \n  \n The <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> class uses the Windows interprocess communication (IPC) system to transport messages between application domains on the same computer. When communicating between application domains on the same computer, the IPC channel is much faster than the TCP or HTTP channels.  \n  \n To perform additional processing of messages on the server side, specify an implementation of the <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> interface through which all messages processed by the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> instance are passed.  \n  \n The <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> instance accepts messages serialized in either binary or SOAP format.  \n  \n A <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> method) or programmatically (by passing an <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> constructor). For a list of these configuration properties, see the documentation for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> constructor.  \n  \n> [!CAUTION]\n>  When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe. In such a case requests can go to any of the channels registered. This setting is considered secure only if ALCs are also used."
  example:
  - "The following code example illustrates how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> class.  \n  \n [!code-cpp[Remoting_Ipc#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/server.cpp#10)]\n [!code-csharp[Remoting_Ipc#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/server.cs#10)]  \n  \n The preceding code is used to expose the following remote object.  \n  \n [!code-cpp[Remoting_Ipc#0](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/counter.cpp#0)]\n [!code-csharp[Remoting_Ipc#0](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/counter.cs#0)]  \n  \n For an example of a client using this object remotely, see <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel>."
  syntax:
    content: 'public class IpcServerChannel : System.Runtime.Remoting.Channels.IChannelReceiver, System.Runtime.Remoting.Channels.ISecurableChannel'
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Remoting.Channels.IChannelReceiver
  - System.Runtime.Remoting.Channels.ISecurableChannel
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String)
  commentId: M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: IpcServerChannel(String)
  nameWithType: IpcServerChannel.IpcServerChannel(String)
  fullName: IpcServerChannel.IpcServerChannel(String)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: Initializes a new instance of the <xref href="System.Runtime.Remoting.Channels.Ipc.IpcServerChannel"></xref> class with the specified IPC port name.
  remarks: ''
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cpp[Remoting_Ipc#11](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/server.cpp#11)]\n [!code-csharp[Remoting_Ipc#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/server.cs#11)]"
  syntax:
    content: public IpcServerChannel (string portName);
    parameters:
    - id: portName
      type: System.String
      description: The name of the IPC port to be used by the channel.
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  commentId: M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  id: '#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)'
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: IpcServerChannel(IDictionary, IServerChannelSinkProvider)
  nameWithType: IpcServerChannel.IpcServerChannel(IDictionary, IServerChannelSinkProvider)
  fullName: IpcServerChannel.IpcServerChannel(IDictionary, IServerChannelSinkProvider)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: Initializes a new instance of the <xref href="System.Runtime.Remoting.Channels.Ipc.IpcServerChannel"></xref> class with the specified channel properties and sink.
  remarks: "For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).  \n  \n If you do not require sink functionality, set the `sinkProvider` parameter to `null`.  \n  \n> [!CAUTION]\n>  When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe. In such a case requests can go to any of the channels registered. This setting is considered secure only if ALCs are also used."
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#41](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server2.cpp#41)]\n [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#41](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server2.cs#41)]"
  syntax:
    content: public IpcServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);
    parameters:
    - id: properties
      type: System.Collections.IDictionary
      description: A <xref href="System.Collections.IDictionary"></xref> collection that specifies values for configuration properties to be used by the channel.
    - id: sinkProvider
      type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
      description: The <xref href="System.Runtime.Remoting.Channels.IServerChannelSinkProvider"></xref> implementation to be used by the channel.
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String)
  commentId: M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: IpcServerChannel(String, String)
  nameWithType: IpcServerChannel.IpcServerChannel(String, String)
  fullName: IpcServerChannel.IpcServerChannel(String, String)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: Initializes a new instance of the <xref href="System.Runtime.Remoting.Channels.Ipc.IpcServerChannel"></xref> class with the specified channel name and IPC port name.
  remarks: This constructor sets the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> property by using the `name` parameter. If you want to register more than one channel, each channel must have a unique name.
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#42](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server2.cpp#42)]\n [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#42](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server2.cs#42)]"
  syntax:
    content: public IpcServerChannel (string name, string portName);
    parameters:
    - id: name
      type: System.String
      description: The name of the channel.
    - id: portName
      type: System.String
      description: The name of the IPC port to be used by the channel.
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)
  commentId: M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)
  id: '#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)'
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: IpcServerChannel(IDictionary, IServerChannelSinkProvider, CommonSecurityDescriptor)
  nameWithType: IpcServerChannel.IpcServerChannel(IDictionary, IServerChannelSinkProvider, CommonSecurityDescriptor)
  fullName: IpcServerChannel.IpcServerChannel(IDictionary, IServerChannelSinkProvider, CommonSecurityDescriptor)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: Initializes a new instance of the <xref href="System.Runtime.Remoting.Channels.Ipc.IpcServerChannel"></xref> class with the specified channel properties, sink, and security descriptor.
  remarks: "For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).  \n  \n If you do not require sink functionality, set the `sinkProvider` parameter to `null`. If you do not require a security descriptor, set the `securityDescriptor` parameter to `null`.  \n  \n> [!CAUTION]\n>  When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe. In such a case requests can go to any of the channels registered. This setting is considered secure only if ALCs are also used."
  syntax:
    content: public IpcServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider, System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor);
    parameters:
    - id: properties
      type: System.Collections.IDictionary
      description: A <xref href="System.Collections.IDictionary"></xref> collection that specifies values for configuration properties to be used by the channel.
    - id: sinkProvider
      type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
      description: The <xref href="System.Runtime.Remoting.Channels.IServerChannelSinkProvider"></xref> implementation to be used by the channel.
    - id: securityDescriptor
      type: System.Security.AccessControl.CommonSecurityDescriptor
      description: A <xref href="System.Security.AccessControl.CommonSecurityDescriptor"></xref> to be used by the channel.
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  commentId: M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  id: '#ctor(System.String,System.String,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)'
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: IpcServerChannel(String, String, IServerChannelSinkProvider)
  nameWithType: IpcServerChannel.IpcServerChannel(String, String, IServerChannelSinkProvider)
  fullName: IpcServerChannel.IpcServerChannel(String, String, IServerChannelSinkProvider)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: Initializes a new instance of the <xref href="System.Runtime.Remoting.Channels.Ipc.IpcServerChannel"></xref> class with the specified channel name, IPC port name, and sink.
  remarks: "This constructor sets the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> property by using the `name` parameter. If you want to register more than one channel, each channel must have a unique name.  \n  \n If you do not require sink functionality, set the `sinkProvider` parameter to `null`."
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#43](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server2.cpp#43)]\n [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#43](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server2.cs#43)]"
  syntax:
    content: public IpcServerChannel (string name, string portName, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);
    parameters:
    - id: name
      type: System.String
      description: The name of the channel.
    - id: portName
      type: System.String
      description: The name of the IPC port to be used by the channel.
    - id: sinkProvider
      type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
      description: The <xref href="System.Runtime.Remoting.Channels.IServerChannelSinkProvider"></xref> implementation to be used by the channel.
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData
  commentId: P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData
  id: ChannelData
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: ChannelData
  nameWithType: IpcServerChannel.ChannelData
  fullName: IpcServerChannel.ChannelData
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: Gets channel-specific data.
  remarks: Although returned as an instance of the <xref:System.Object?displayProperty=fullName> class, the value of this property can be cast to an instance of <xref:System.Runtime.Remoting.Channels.ChannelDataStore> that describes the channel to which the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> object listens.
  example:
  - "The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData%2A> property.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#15](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#15)]\n [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#15](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#15)]"
  syntax:
    content: public object ChannelData { get; }
    return:
      type: System.Object
      description: A <xref href="System.Runtime.Remoting.Channels.ChannelDataStore"></xref> instance that contains channel-specific data.
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName
  commentId: P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName
  id: ChannelName
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: ChannelName
  nameWithType: IpcServerChannel.ChannelName
  fullName: IpcServerChannel.ChannelName
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: Gets the name of the current channel.
  remarks: Every registered channel has a unique name. The name is used to retrieve a specific channel when calling the <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A> method. The default name is "ipc server".
  example:
  - "The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> property.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#12](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#12)]\n [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#12](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#12)]"
  syntax:
    content: public string ChannelName { get; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> instance that contains the name of the channel.
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority
  commentId: P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority
  id: ChannelPriority
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: ChannelPriority
  nameWithType: IpcServerChannel.ChannelPriority
  fullName: IpcServerChannel.ChannelPriority
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: Gets the priority of the current channel.
  remarks: The priority controls the order in which channel data appears in a <xref:System.Runtime.Remoting.ObjRef> instance; higher priority channels appear before lower priority channels. Clients try to connect to the server channels in the order that they are listed in the <xref:System.Runtime.Remoting.ObjRef> instance. The default priority is 20; negative priorities are allowed.
  example:
  - "The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority%2A> property.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#13](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#13)]\n [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#13](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#13)]"
  syntax:
    content: public int ChannelPriority { get; }
    return:
      type: System.Int32
      description: An integer that indicates the priority assigned to the channel.
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri
  commentId: M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri
  id: GetChannelUri
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: GetChannelUri()
  nameWithType: IpcServerChannel.GetChannelUri()
  fullName: IpcServerChannel.GetChannelUri()
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: Returns the URI of the current channel.
  remarks: The channel URI is used by the client to specify a remote server channel.
  example:
  - "The following code example illustrates how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri%2A> method.  \n  \n [!code-cpp[Remoting_Ipc#12](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/server.cpp#12)]\n [!code-csharp[Remoting_Ipc#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/server.cs#12)]"
  syntax:
    content: public string GetChannelUri ();
    parameters: []
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains the URI of the channel.
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri(System.String)
  commentId: M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri(System.String)
  id: GetUrlsForUri(System.String)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: GetUrlsForUri(String)
  nameWithType: IpcServerChannel.GetUrlsForUri(String)
  fullName: IpcServerChannel.GetUrlsForUri(String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: Returns an array of all the URLs for the object with the specified URI, hosted on the current <xref href="System.Runtime.Remoting.Channels.Ipc.IpcChannel"></xref> instance.
  remarks: This method is used by the <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName> method.
  example:
  - "The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri%2A> method.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#19)]\n [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#19)]"
  syntax:
    content: public virtual string[] GetUrlsForUri (string objectUri);
    parameters:
    - id: objectUri
      type: System.String
      description: The URI of the object for which URLs are required.
    return:
      type: System.String[]
      description: An array of the URLs for an object with the specified URI, hosted on the current <xref href="System.Runtime.Remoting.Channels.Tcp.TcpChannel"></xref> instance.
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured
  commentId: P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured
  id: IsSecured
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: IsSecured
  nameWithType: IpcServerChannel.IsSecured
  fullName: IpcServerChannel.IsSecured
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: Gets or sets a Boolean value that indicates whether the current channel is secure.
  syntax:
    content: public bool IsSecured { get; set; }
    return:
      type: System.Boolean
      description: A Boolean value that indicates whether the current instance is secure.
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse(System.String,System.String@)
  commentId: M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse(System.String,System.String@)
  id: Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: Parse(String, String)
  nameWithType: IpcServerChannel.Parse(String, String)
  fullName: IpcServerChannel.Parse(String, String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: Extracts the channel URI and the remote well-known object URI from the specified URL.
  remarks: The URI of an object is a value that uniquely identifies a specific object instance.
  example:
  - "The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse%2A> method.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#19)]\n [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#19)]"
  syntax:
    content: public string Parse (string url, out string objectURI);
    parameters:
    - id: url
      type: System.String
      description: The URL from which to extract the URI of the remote well-known object.
    - id: objectURI
      type: System.String
      description: When this method returns, contains a <xref href="System.String"></xref> instance that holds the URI of the remote well-known object.
    return:
      type: System.String
      description: The URI of the current channel.
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening(System.Object)
  commentId: M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening(System.Object)
  id: StartListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: StartListening(Object)
  nameWithType: IpcServerChannel.StartListening(Object)
  fullName: IpcServerChannel.StartListening(Object)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: Instructs the current channel to start listening for requests.
  remarks: "It is not necessary to call this method to begin listening on a newly initialized channel.  \n  \n Use this method to restart listening on a channel after the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening%2A> method has been called to stop listening on the channel.  \n  \n The data object can be used to pass a specific initialization state to the channel. If you do not want to pass a specific state to the channel, pass `null` as the `data` parameter value."
  syntax:
    content: public void StartListening (object data);
    parameters:
    - id: data
      type: System.Object
      description: An object that specifies an initialization state, or `null`, if you do not want to pass a specific state to the channel.
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: The specified listening port is not available.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening(System.Object)
  commentId: M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening(System.Object)
  id: StopListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  langs:
  - csharp
  name: StopListening(Object)
  nameWithType: IpcServerChannel.StopListening(Object)
  fullName: IpcServerChannel.StopListening(Object)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Ipc
  summary: Instructs the current channel to stop listening for requests.
  remarks: "Use this method to stop listening on a channel. To restart listening, use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening%2A> method.  \n  \n The data object can be used to pass a specific initialization state to the channel. If you do not want to pass a specific state to the channel, pass `null` as the `data` parameter value."
  syntax:
    content: public void StopListening (object data);
    parameters:
    - id: data
      type: System.Object
      description: An object that specifies an initialization state, or `null`, if you do not want to pass a specific state to the channel.
  overload: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: IpcServerChannel(String)
  nameWithType: IpcServerChannel.IpcServerChannel(String)
  fullName: IpcServerChannel.IpcServerChannel(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: IpcServerChannel(IDictionary, IServerChannelSinkProvider)
  nameWithType: IpcServerChannel.IpcServerChannel(IDictionary, IServerChannelSinkProvider)
  fullName: IpcServerChannel.IpcServerChannel(IDictionary, IServerChannelSinkProvider)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerChannelSinkProvider
  nameWithType: IServerChannelSinkProvider
  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: IpcServerChannel(String, String)
  nameWithType: IpcServerChannel.IpcServerChannel(String, String)
  fullName: IpcServerChannel.IpcServerChannel(String, String)
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: IpcServerChannel(IDictionary, IServerChannelSinkProvider, CommonSecurityDescriptor)
  nameWithType: IpcServerChannel.IpcServerChannel(IDictionary, IServerChannelSinkProvider, CommonSecurityDescriptor)
  fullName: IpcServerChannel.IpcServerChannel(IDictionary, IServerChannelSinkProvider, CommonSecurityDescriptor)
- uid: System.Security.AccessControl.CommonSecurityDescriptor
  parent: System.Security.AccessControl
  isExternal: false
  name: CommonSecurityDescriptor
  nameWithType: CommonSecurityDescriptor
  fullName: System.Security.AccessControl.CommonSecurityDescriptor
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: IpcServerChannel(String, String, IServerChannelSinkProvider)
  nameWithType: IpcServerChannel.IpcServerChannel(String, String, IServerChannelSinkProvider)
  fullName: IpcServerChannel.IpcServerChannel(String, String, IServerChannelSinkProvider)
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: ChannelData
  nameWithType: IpcServerChannel.ChannelData
  fullName: IpcServerChannel.ChannelData
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: ChannelName
  nameWithType: IpcServerChannel.ChannelName
  fullName: IpcServerChannel.ChannelName
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: IpcServerChannel.ChannelPriority
  fullName: IpcServerChannel.ChannelPriority
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: GetChannelUri()
  nameWithType: IpcServerChannel.GetChannelUri()
  fullName: IpcServerChannel.GetChannelUri()
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri(System.String)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: GetUrlsForUri(String)
  nameWithType: IpcServerChannel.GetUrlsForUri(String)
  fullName: IpcServerChannel.GetUrlsForUri(String)
- uid: System.String[]
  parent: System
  isExternal: false
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: IsSecured
  nameWithType: IpcServerChannel.IsSecured
  fullName: IpcServerChannel.IsSecured
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: Parse(String, String)
  nameWithType: IpcServerChannel.Parse(String, String)
  fullName: IpcServerChannel.Parse(String, String)
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: StartListening(Object)
  nameWithType: IpcServerChannel.StartListening(Object)
  fullName: IpcServerChannel.StartListening(Object)
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: StopListening(Object)
  nameWithType: IpcServerChannel.StopListening(Object)
  fullName: IpcServerChannel.StopListening(Object)
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: IpcServerChannel
  nameWithType: IpcServerChannel.IpcServerChannel
  fullName: IpcServerChannel.IpcServerChannel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: ChannelData
  nameWithType: IpcServerChannel.ChannelData
  fullName: IpcServerChannel.ChannelData
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: ChannelName
  nameWithType: IpcServerChannel.ChannelName
  fullName: IpcServerChannel.ChannelName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: IpcServerChannel.ChannelPriority
  fullName: IpcServerChannel.ChannelPriority
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: GetChannelUri
  nameWithType: IpcServerChannel.GetChannelUri
  fullName: IpcServerChannel.GetChannelUri
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: GetUrlsForUri
  nameWithType: IpcServerChannel.GetUrlsForUri
  fullName: IpcServerChannel.GetUrlsForUri
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: IsSecured
  nameWithType: IpcServerChannel.IsSecured
  fullName: IpcServerChannel.IsSecured
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: Parse
  nameWithType: IpcServerChannel.Parse
  fullName: IpcServerChannel.Parse
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: StartListening
  nameWithType: IpcServerChannel.StartListening
  fullName: IpcServerChannel.StartListening
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml
- uid: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening*
  parent: System.Runtime.Remoting.Channels.Ipc.IpcServerChannel
  isExternal: false
  name: StopListening
  nameWithType: IpcServerChannel.StopListening
  fullName: IpcServerChannel.StopListening
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Channels.Ipc/IpcServerChannel.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Runtime.Remoting.Channels.IChannelReceiver
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IChannelReceiver
  nameWithType: IChannelReceiver
  fullName: System.Runtime.Remoting.Channels.IChannelReceiver
- uid: System.Runtime.Remoting.Channels.ISecurableChannel
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: ISecurableChannel
  nameWithType: ISecurableChannel
  fullName: System.Runtime.Remoting.Channels.ISecurableChannel
