### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher
  commentId: T:System.ServiceModel.Dispatcher.ChannelDispatcher
  id: ChannelDispatcher
  children:
  - System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled
  - System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName
  - System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers
  - System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput
  - System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout
  - System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout
  - System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints
  - System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers
  - System.ServiceModel.Dispatcher.ChannelDispatcher.Host
  - System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults
  - System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept
  - System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive
  - System.ServiceModel.Dispatcher.ChannelDispatcher.Listener
  - System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing
  - System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives
  - System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize
  - System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(System.TimeSpan)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(System.TimeSpan)
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened
  - System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening
  - System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled
  - System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously
  - System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously
  - System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle
  - System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel
  - System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout
  langs:
  - csharp
  name: ChannelDispatcher
  nameWithType: ChannelDispatcher
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcher
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: A component that accepts channels and associates them with a service.
  remarks: "A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> object associates an <xref:System.ServiceModel.Channels.IChannelListener> at a particular URI (called a listen URI) with an instance of a service. Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different listener and listen URI for that service.  \n  \n When a message arrives, the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> queries each of the associated <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> objects whether the endpoint can accept the message, and passes the message to the one that can. The <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> object is responsible for processing messages from a <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> when the destination address of a message matches the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> property and the message action matches the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> property.  \n  \n All properties that control the lifetime and behavior of a channel session are available for inspection or modification on the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> object. In addition to the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>, these include custom <xref:System.ServiceModel.Dispatcher.IChannelInitializer> objects, the <xref:System.ServiceModel.Channels.IChannelListener>, the <xref:System.ServiceModel.ServiceHost>, the associated and <xref:System.ServiceModel.InstanceContext>."
  example:
  - >-
    [!code-csharp[S_UE_ChannelDispatcher#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/service.cs#0)]
     [!code-vb[S_UE_ChannelDispatcher#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/service.vb#0)]
  syntax:
    content: 'public class ChannelDispatcher : System.ServiceModel.Dispatcher.ChannelDispatcherBase'
  inheritance:
  - System.Object
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.ServiceModel.Channels.CommunicationObject.Abort
  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.Close
  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.Closed
  - System.ServiceModel.Channels.CommunicationObject.Closing
  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.Fault
  - System.ServiceModel.Channels.CommunicationObject.Faulted
  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  - System.ServiceModel.Channels.CommunicationObject.IsDisposed
  - System.ServiceModel.Channels.CommunicationObject.OnClosing
  - System.ServiceModel.Channels.CommunicationObject.OnFaulted
  - System.ServiceModel.Channels.CommunicationObject.Open
  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.Opened
  - System.ServiceModel.Channels.CommunicationObject.Opening
  - System.ServiceModel.Channels.CommunicationObject.State
  - System.ServiceModel.Channels.CommunicationObject.ThisLock
  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed
  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable
  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener)
  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener)
  id: '#ctor(System.ServiceModel.Channels.IChannelListener)'
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ChannelDispatcher(IChannelListener)
  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener)
  fullName: ChannelDispatcher.ChannelDispatcher(IChannelListener)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Dispatcher.ChannelDispatcher"></xref> class.
  remarks: Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener, with system-provided default timeouts.
  example:
  - >-
    [!code-csharp[S_UE_ChannelDispatcher#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#1)]
     [!code-vb[S_UE_ChannelDispatcher#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#1)]
  syntax:
    content: public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener);
    parameters:
    - id: listener
      type: System.ServiceModel.Channels.IChannelListener
      description: The <xref href="System.ServiceModel.Channels.IChannelListener"></xref> for the channel dispatcher.
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>listener</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String)
  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String)
  id: '#ctor(System.ServiceModel.Channels.IChannelListener,System.String)'
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ChannelDispatcher(IChannelListener, String)
  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener, String)
  fullName: ChannelDispatcher.ChannelDispatcher(IChannelListener, String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Dispatcher.ChannelDispatcher"></xref> class.
  remarks: Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener and binding, with system-provided default timeouts.
  example:
  - >-
    [!code-csharp[S_UE_ChannelDispatcher#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#2)]
     [!code-vb[S_UE_ChannelDispatcher#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#2)]
  syntax:
    content: public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener, string bindingName);
    parameters:
    - id: listener
      type: System.ServiceModel.Channels.IChannelListener
      description: The <xref href="System.ServiceModel.Channels.IChannelListener"></xref> for the channel dispatcher.
    - id: bindingName
      type: System.String
      description: The name of the binding used to configure the service.
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>listener</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)
  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)
  id: '#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)'
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ChannelDispatcher(IChannelListener, String, IDefaultCommunicationTimeouts)
  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener, String, IDefaultCommunicationTimeouts)
  fullName: ChannelDispatcher.ChannelDispatcher(IChannelListener, String, IDefaultCommunicationTimeouts)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Dispatcher.ChannelDispatcher"></xref> class.
  remarks: Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener and binding, with the specified default timeouts.
  example:
  - >-
    [!code-csharp[S_UE_ChannelDispatcher#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#3)]
     [!code-vb[S_UE_ChannelDispatcher#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#3)]
  syntax:
    content: public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener, string bindingName, System.ServiceModel.IDefaultCommunicationTimeouts timeouts);
    parameters:
    - id: listener
      type: System.ServiceModel.Channels.IChannelListener
      description: The <xref href="System.ServiceModel.Channels.IChannelListener"></xref> for the service.
    - id: bindingName
      type: System.String
      description: The name of the binding used to configure the service.
    - id: timeouts
      type: System.ServiceModel.IDefaultCommunicationTimeouts
      description: The <xref href="System.ServiceModel.IDefaultCommunicationTimeouts"></xref> for the service.
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>listener</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled
  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled
  id: AsynchronousTransactedAcceptEnabled
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: AsynchronousTransactedAcceptEnabled
  nameWithType: ChannelDispatcher.AsynchronousTransactedAcceptEnabled
  fullName: ChannelDispatcher.AsynchronousTransactedAcceptEnabled
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Gets a value that indicates whether the transacted accept method calls on listener are asynchronous.
  syntax:
    content: public bool AsynchronousTransactedAcceptEnabled { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the transacted accept method calls on listener are asynchronous; otherwise, `false`.'
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(System.ServiceModel.ServiceHostBase)
  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(System.ServiceModel.ServiceHostBase)
  id: Attach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: Attach(ServiceHostBase)
  nameWithType: ChannelDispatcher.Attach(ServiceHostBase)
  fullName: ChannelDispatcher.Attach(ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Attaches the channel dispatcher to the host.
  remarks: This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.
  syntax:
    content: protected override void Attach (System.ServiceModel.ServiceHostBase host);
    parameters:
    - id: host
      type: System.ServiceModel.ServiceHostBase
      description: The <xref href="System.ServiceModel.ServiceHostBase"></xref> for the service.
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.Attach*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The communication object is in an <xref href="System.ServiceModel.CommunicationState.Opening"></xref> or <xref href="System.ServiceModel.CommunicationState.Opened"></xref> state.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The communication object is in a <xref href="System.ServiceModel.CommunicationState.Closing"></xref> or <xref href="System.ServiceModel.CommunicationState.Closed"></xref> state.
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: The communication object is in a <xref href="System.ServiceModel.CommunicationState.Faulted"></xref> state.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName
  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName
  id: BindingName
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: BindingName
  nameWithType: ChannelDispatcher.BindingName
  fullName: ChannelDispatcher.BindingName
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Gets the name of the binding used to configure the service.
  remarks: Used to obtain the binding name for the binding with which this channel dispatcher is associated.
  example:
  - >-
    [!code-csharp[S_UE_ChannelDispatcher#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#4)]
     [!code-vb[S_UE_ChannelDispatcher#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#4)]
  syntax:
    content: public string BindingName { get; }
    return:
      type: System.String
      description: The binding name of the service.
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers
  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers
  id: ChannelInitializers
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ChannelInitializers
  nameWithType: ChannelDispatcher.ChannelInitializers
  fullName: ChannelDispatcher.ChannelInitializers
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Gets a set of <xref href="System.ServiceModel.Dispatcher.IChannelInitializer"></xref> objects that you can use to inspect and add state to channels when they are first created.
  remarks: Use this property to insert a custom channel initializer into the initialization collection to inspect or modify channel state when they are created. This is also useful to perform the same behavior on outgoing channels if the contract associated with a dispatcher is a duplex contract.
  example:
  - >-
    [!code-csharp[S_UE_ChannelDispatcher#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#5)]
     [!code-vb[S_UE_ChannelDispatcher#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#5)]
  syntax:
    content: public System.Collections.Generic.SynchronizedCollection<System.ServiceModel.Dispatcher.IChannelInitializer> ChannelInitializers { get; }
    return:
      type: System.Collections.Generic.SynchronizedCollection{System.ServiceModel.Dispatcher.IChannelInitializer}
      description: A <xref href="System.Collections.Generic.SynchronizedCollection`1"></xref> of type <xref href="System.ServiceModel.Dispatcher.IChannelInitializer"></xref> objects.
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput
  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput
  id: CloseInput
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: CloseInput()
  nameWithType: ChannelDispatcher.CloseInput()
  fullName: ChannelDispatcher.CloseInput()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Stops the listener from accepting new channels.
  remarks: Calling this method stops the listener listening.
  syntax:
    content: public override void CloseInput ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout
  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout
  id: DefaultCloseTimeout
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: DefaultCloseTimeout
  nameWithType: ChannelDispatcher.DefaultCloseTimeout
  fullName: ChannelDispatcher.DefaultCloseTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Gets the default interval of time allowed for the channel dispatcher to close.
  remarks: This default close timeout can be set using <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>. Otherwise, a service model default value of 1 minute is used.
  syntax:
    content: protected override TimeSpan DefaultCloseTimeout { get; }
    return:
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies the default interval of time allowed for the channel dispatcher to close.
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout
  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout
  id: DefaultOpenTimeout
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: DefaultOpenTimeout
  nameWithType: ChannelDispatcher.DefaultOpenTimeout
  fullName: ChannelDispatcher.DefaultOpenTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Gets the default interval of time allowed for the channel dispatcher to open.
  remarks: This default open timeout can be set using <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>. Otherwise, a service model default value of 1 minute is used.
  syntax:
    content: protected override TimeSpan DefaultOpenTimeout { get; }
    return:
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies the default interval of time allowed for the channel dispatcher to close.
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(System.ServiceModel.ServiceHostBase)
  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(System.ServiceModel.ServiceHostBase)
  id: Detach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: Detach(ServiceHostBase)
  nameWithType: ChannelDispatcher.Detach(ServiceHostBase)
  fullName: ChannelDispatcher.Detach(ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Detaches the service host from the channel dispatcher.
  remarks: "The <xref:System.ServiceModel.ServiceHostBase> can only be detached when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.  \n  \n Sets the <xref:System.ServiceModel.ServiceHostBase> associated with the channel dispatcher to `null`."
  example:
  - >-
    [!code-csharp[S_UE_ChannelDispatcher#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#18)]
     [!code-vb[S_UE_ChannelDispatcher#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#18)]
  syntax:
    content: protected override void Detach (System.ServiceModel.ServiceHostBase host);
    parameters:
    - id: host
      type: System.ServiceModel.ServiceHostBase
      description: The <xref href="System.ServiceModel.ServiceHostBase"></xref> for the service.
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.Detach*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>host</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The communication object is in an <xref href="System.ServiceModel.CommunicationState.Opening"></xref> or <xref href="System.ServiceModel.CommunicationState.Opened"></xref> state.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The communication object is in a <xref href="System.ServiceModel.CommunicationState.Closing"></xref> or <xref href="System.ServiceModel.CommunicationState.Closed"></xref> state.
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: The communication object is in a <xref href="System.ServiceModel.CommunicationState.Faulted"></xref> state.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints
  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints
  id: Endpoints
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: Endpoints
  nameWithType: ChannelDispatcher.Endpoints
  fullName: ChannelDispatcher.Endpoints
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Gets the endpoint dispatchers which forward messages to the channel endpoints.
  remarks: "The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> has a distinct <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> for each endpoint that the channel can support.  \n  \n Use the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> to obtain access to runtime properties that enable you to customize the runtime across an entire endpoint."
  example:
  - >-
    [!code-csharp[S_UE_ChannelDispatcher#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#6)]
     [!code-vb[S_UE_ChannelDispatcher#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#6)]
  syntax:
    content: public System.Collections.Generic.SynchronizedCollection<System.ServiceModel.Dispatcher.EndpointDispatcher> Endpoints { get; }
    return:
      type: System.Collections.Generic.SynchronizedCollection{System.ServiceModel.Dispatcher.EndpointDispatcher}
      description: A <xref href="System.Collections.Generic.SynchronizedCollection`1"></xref> of <xref href="System.ServiceModel.Dispatcher.EndpointDispatcher"></xref> which forward messages to the channel endpoints.
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers
  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers
  id: ErrorHandlers
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ErrorHandlers
  nameWithType: ChannelDispatcher.ErrorHandlers
  fullName: ChannelDispatcher.ErrorHandlers
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Gets a set of <xref href="System.ServiceModel.Dispatcher.IErrorHandler"></xref> objects that can be used to insert custom error handling functionality for an endpoint.
  remarks: ''
  example:
  - >-
    [!code-csharp[S_UE_ChannelDispatcher#7](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#7)]
     [!code-vb[S_UE_ChannelDispatcher#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#7)]
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.ServiceModel.Dispatcher.IErrorHandler> ErrorHandlers { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.IErrorHandler}
      description: A <xref href="System.Collections.Generic.SynchronizedCollection`1"></xref> of <xref href="System.ServiceModel.Dispatcher.IErrorHandler"></xref> objects.
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Host
  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.Host
  id: Host
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: Host
  nameWithType: ChannelDispatcher.Host
  fullName: ChannelDispatcher.Host
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Gets the host for the service associated with the dispatcher.
  remarks: Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different <xref:System.ServiceModel.Channels.IChannelListener> for that service.
  example:
  - >-
    [!code-csharp[S_UE_ChannelDispatcher#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#8)]
     [!code-vb[S_UE_ChannelDispatcher#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#8)]
  syntax:
    content: public override System.ServiceModel.ServiceHostBase Host { get; }
    return:
      type: System.ServiceModel.ServiceHostBase
      description: The <xref href="System.ServiceModel.ServiceHostBase"></xref> for the service associated with the dispatcher.
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.Host*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults
  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults
  id: IncludeExceptionDetailInFaults
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: IncludeExceptionDetailInFaults
  nameWithType: ChannelDispatcher.IncludeExceptionDetailInFaults
  fullName: ChannelDispatcher.IncludeExceptionDetailInFaults
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Gets or sets a value that indicates whether to include the details about an exception in a fault.
  remarks: This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.
  example:
  - >-
    [!code-csharp[S_UE_ChannelDispatcher#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#19)]
     [!code-vb[S_UE_ChannelDispatcher#19](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#19)]
  syntax:
    content: public bool IncludeExceptionDetailInFaults { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the details about an exception are included in the faults; otherwise, `false`.'
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The communication object is in an <xref href="System.ServiceModel.CommunicationState.Opening"></xref> or <xref href="System.ServiceModel.CommunicationState.Opened"></xref> state.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The communication object is in a <xref href="System.ServiceModel.CommunicationState.Closing"></xref> or <xref href="System.ServiceModel.CommunicationState.Closed"></xref> state.
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: The communication object is in a <xref href="System.ServiceModel.CommunicationState.Faulted"></xref> state.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept
  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept
  id: IsTransactedAccept
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: IsTransactedAccept
  nameWithType: ChannelDispatcher.IsTransactedAccept
  fullName: ChannelDispatcher.IsTransactedAccept
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Gets a value that indicates whether the accept method calls on the listener are done under a transaction.
  remarks: ''
  example:
  - >-
    [!code-csharp[S_UE_ChannelDispatcher#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#9)]
     [!code-vb[S_UE_ChannelDispatcher#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#9)]
  syntax:
    content: public bool IsTransactedAccept { get; }
    return:
      type: System.Boolean
      description: '`true` if the accept method calls on the listener are done under a transaction; otherwise, `false`.'
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive
  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive
  id: IsTransactedReceive
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: IsTransactedReceive
  nameWithType: ChannelDispatcher.IsTransactedReceive
  fullName: ChannelDispatcher.IsTransactedReceive
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Gets a value that indicates whether the receive method calls on the listener are done under a transaction.
  remarks: The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive%2A> property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.
  example:
  - >-
    [!code-csharp[S_UE_ChannelDispatcher#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#10)]
     [!code-vb[S_UE_ChannelDispatcher#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#10)]
  syntax:
    content: public bool IsTransactedReceive { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the receive method calls on the listener are done under a transaction; otherwise, `false`.'
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The communication object is in an <xref href="System.ServiceModel.CommunicationState.Opening"></xref> or <xref href="System.ServiceModel.CommunicationState.Opened"></xref> state.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The communication object is in a <xref href="System.ServiceModel.CommunicationState.Closing"></xref> or <xref href="System.ServiceModel.CommunicationState.Closed"></xref> state.
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: The communication object is in a <xref href="System.ServiceModel.CommunicationState.Faulted"></xref> state.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Listener
  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.Listener
  id: Listener
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: Listener
  nameWithType: ChannelDispatcher.Listener
  fullName: ChannelDispatcher.Listener
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Gets the listener associated with the channel dispatcher.
  remarks: A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associates an <xref:System.ServiceModel.Channels.IChannelListener> at a particular URI with an instance of a service.
  example:
  - >-
    [!code-csharp[S_UE_ChannelDispatcher#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#11)]
     [!code-vb[S_UE_ChannelDispatcher#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#11)]
  syntax:
    content: public override System.ServiceModel.Channels.IChannelListener Listener { get; }
    return:
      type: System.ServiceModel.Channels.IChannelListener
      description: The <xref href="System.ServiceModel.Channels.IChannelListener"></xref> associated with the channel dispatcher.
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.Listener*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing
  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing
  id: ManualAddressing
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ManualAddressing
  nameWithType: ChannelDispatcher.ManualAddressing
  fullName: ChannelDispatcher.ManualAddressing
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Gets or sets a value that indicates whether the channel dispatcher adds addressing headers to request-reply messages.
  remarks: "This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.  \n  \n Set the <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> property to `true` if you want to prevent the client from adding Message ID and ReplyTo addressing headers to request/response messages so that your application can control these headers."
  example:
  - >-
    [!code-csharp[S_UE_ChannelDispatcher#12](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#12)]
     [!code-vb[S_UE_ChannelDispatcher#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#12)]
  syntax:
    content: public bool ManualAddressing { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the proxy does not add any addressing headers; otherwise, `false`. The default is `false`.'
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The communication object is in an <xref href="System.ServiceModel.CommunicationState.Opening"></xref> or <xref href="System.ServiceModel.CommunicationState.Opened"></xref> state.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The communication object is in a <xref href="System.ServiceModel.CommunicationState.Closing"></xref> or <xref href="System.ServiceModel.CommunicationState.Closed"></xref> state.
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: The communication object is in a <xref href="System.ServiceModel.CommunicationState.Faulted"></xref> state.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives
  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives
  id: MaxPendingReceives
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: MaxPendingReceives
  nameWithType: ChannelDispatcher.MaxPendingReceives
  fullName: ChannelDispatcher.MaxPendingReceives
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Gets or sets the maximum pending messages per channel.
  syntax:
    content: public int MaxPendingReceives { get; set; }
    return:
      type: System.Int32
      description: An integer representing a maximum number of messages.
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize
  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize
  id: MaxTransactedBatchSize
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: MaxTransactedBatchSize
  nameWithType: ChannelDispatcher.MaxTransactedBatchSize
  fullName: ChannelDispatcher.MaxTransactedBatchSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Gets or sets the maximum size for a transacted batch.
  remarks: The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize%2A> property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.
  example:
  - >-
    [!code-csharp[S_UE_ChannelDispatcher#13](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#13)]
     [!code-vb[S_UE_ChannelDispatcher#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#13)]
  syntax:
    content: public int MaxTransactedBatchSize { get; set; }
    return:
      type: System.Int32
      description: The maximum size for a transacted batch.
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value set is less than zero.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The communication object is in an <xref href="System.ServiceModel.CommunicationState.Opening"></xref> or <xref href="System.ServiceModel.CommunicationState.Opened"></xref> state.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The communication object is in a <xref href="System.ServiceModel.CommunicationState.Closing"></xref> or <xref href="System.ServiceModel.CommunicationState.Closed"></xref> state.
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: The communication object is in a <xref href="System.ServiceModel.CommunicationState.Faulted"></xref> state.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion
  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion
  id: MessageVersion
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: MessageVersion
  nameWithType: ChannelDispatcher.MessageVersion
  fullName: ChannelDispatcher.MessageVersion
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Gets or sets the SOAP message and WS-Addressing versions that are used or expected.
  remarks: "Specifies the versions of SOAP and WS-Addressing associated with a message and its exchange.  \n  \n This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed."
  example:
  - >-
    [!code-csharp[S_UE_ChannelDispatcher#20](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#20)]
     [!code-vb[S_UE_ChannelDispatcher#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#20)]
  syntax:
    content: public System.ServiceModel.Channels.MessageVersion MessageVersion { get; set; }
    return:
      type: System.ServiceModel.Channels.MessageVersion
      description: The <xref href="System.ServiceModel.Channels.MessageVersion"></xref> that is used or expected.
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The communication object is in an <xref href="System.ServiceModel.CommunicationState.Opening"></xref> or <xref href="System.ServiceModel.CommunicationState.Opened"></xref> state.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The communication object is in a <xref href="System.ServiceModel.CommunicationState.Closing"></xref> or <xref href="System.ServiceModel.CommunicationState.Closed"></xref> state.
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: The communication object is in a <xref href="System.ServiceModel.CommunicationState.Faulted"></xref> state.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort
  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort
  id: OnAbort
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnAbort()
  nameWithType: ChannelDispatcher.OnAbort()
  fullName: ChannelDispatcher.OnAbort()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Aborts the listener associated with the dispatcher.
  syntax:
    content: protected override void OnAbort ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnBeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: ChannelDispatcher.OnBeginClose(TimeSpan, AsyncCallback, Object)
  fullName: ChannelDispatcher.OnBeginClose(TimeSpan, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Begins an asynchronous operation to close a channel listener for the dispatcher that must be completed within a specified interval of time.
  syntax:
    content: protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies how long the close operation has to complete before timing out.
    - id: callback
      type: System.AsyncCallback
      description: The <xref href="System.AsyncCallback"></xref> delegate that receives the notification of the asynchronous completion of the close operation.
    - id: state
      type: System.Object
      description: An object, specified by the application, that contains state information associated with the asynchronous close operation.
    return:
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> that references the asynchronous operation to close a channel listener for the dispatcher.
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: ChannelDispatcher.OnBeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: ChannelDispatcher.OnBeginOpen(TimeSpan, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Begins an asynchronous operation to open a channel listener for the dispatcher that must be completed within a specified interval of time.
  remarks: The channel dispatcher must be associated with a non-`null` service host when this method is called.
  syntax:
    content: protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies how long the open operation has to complete before timing out.
    - id: callback
      type: System.AsyncCallback
      description: The <xref href="System.AsyncCallback"></xref> delegate that receives the notification of the asynchronous completion of the open operation.
    - id: state
      type: System.Object
      description: An object, specified by the application, that contains state information associated with the asynchronous open operation.
    return:
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> that references the asynchronous operation to open a channel listener for the dispatcher.
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The host or the message version is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(System.TimeSpan)
  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(System.TimeSpan)
  id: OnClose(System.TimeSpan)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnClose(TimeSpan)
  nameWithType: ChannelDispatcher.OnClose(TimeSpan)
  fullName: ChannelDispatcher.OnClose(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Closes the channel listener associated with the dispatcher within a specified interval of time.
  syntax:
    content: protected override void OnClose (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies the interval of time allowed for the listener to close.
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed
  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed
  id: OnClosed
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnClosed()
  nameWithType: ChannelDispatcher.OnClosed()
  fullName: ChannelDispatcher.OnClosed()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Provides a trace of the closing of the endpoint dispatchers associated with the channel dispatcher.
  syntax:
    content: protected override void OnClosed ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(System.IAsyncResult)
  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(System.IAsyncResult)
  id: OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnEndClose(IAsyncResult)
  nameWithType: ChannelDispatcher.OnEndClose(IAsyncResult)
  fullName: ChannelDispatcher.OnEndClose(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Completes an asynchronous operation to close a channel listener for the dispatcher.
  syntax:
    content: protected override void OnEndClose (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> returned by a call to the <xref href="System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)"></xref> method.
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(System.IAsyncResult)
  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(System.IAsyncResult)
  id: OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnEndOpen(IAsyncResult)
  nameWithType: ChannelDispatcher.OnEndOpen(IAsyncResult)
  fullName: ChannelDispatcher.OnEndOpen(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Completes an asynchronous operation to open a channel listener for the dispatcher.
  syntax:
    content: protected override void OnEndOpen (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> returned by a call to the <xref href="System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)"></xref> method.
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(System.TimeSpan)
  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(System.TimeSpan)
  id: OnOpen(System.TimeSpan)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnOpen(TimeSpan)
  nameWithType: ChannelDispatcher.OnOpen(TimeSpan)
  fullName: ChannelDispatcher.OnOpen(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Opens the listener associated with the channel dispatcher.
  remarks: The channel dispatcher must be associated with a non-`null` service host when this method is called and message version must be set to a non-`null` value.
  syntax:
    content: protected override void OnOpen (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies the interval of time allowed for the listener to open.
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The host or the message version is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened
  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened
  id: OnOpened
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnOpened()
  nameWithType: ChannelDispatcher.OnOpened()
  fullName: ChannelDispatcher.OnOpened()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Populates and validates filter table used to dispatch to the endpoints.
  remarks: The channel dispatcher must be associated with a non-`null` service host when this method is called.
  syntax:
    content: protected override void OnOpened ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The host is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening
  commentId: M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening
  id: OnOpening
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: OnOpening()
  nameWithType: ChannelDispatcher.OnOpening()
  fullName: ChannelDispatcher.OnOpening()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Checks whether the channel dispatcher is attached to a host.
  remarks: The channel dispatcher must be associated with a non-`null` service host on opening.
  syntax:
    content: protected override void OnOpening ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The host is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled
  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled
  id: ReceiveContextEnabled
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ReceiveContextEnabled
  nameWithType: ChannelDispatcher.ReceiveContextEnabled
  fullName: ChannelDispatcher.ReceiveContextEnabled
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Gets or sets whether ReceiveContext is enabled.
  remarks: The ReceiveContext controls the manner in which messages are handled by the service, for example locking of the message as long as needed.
  syntax:
    content: public bool ReceiveContextEnabled { get; set; }
    return:
      type: System.Boolean
      description: '`true` if ReceiveContext is enabled; otherwise, `false`.'
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously
  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously
  id: ReceiveSynchronously
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ReceiveSynchronously
  nameWithType: ChannelDispatcher.ReceiveSynchronously
  fullName: ChannelDispatcher.ReceiveSynchronously
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Gets or sets a value that specifies whether the dispatcher uses synchronous calls to read messages from channels.
  remarks: "If a binding implements <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, [!INCLUDE[indigo1](~/includes/indigo1-md.md)] assigns the value of the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property to this property. So if this value is `true`, the `false` default value of <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> is overridden.  \n  \n This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed."
  example:
  - >-
    [!code-csharp[S_UE_ChannelDispatcher#14](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#14)]
     [!code-vb[S_UE_ChannelDispatcher#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#14)]
  syntax:
    content: public bool ReceiveSynchronously { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the dispatcher uses synchronous methods to read messages from channels; otherwise, `false`. The default is `false`.'
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The communication object is in an <xref href="System.ServiceModel.CommunicationState.Opening"></xref> or <xref href="System.ServiceModel.CommunicationState.Opened"></xref> state.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The communication object is in a <xref href="System.ServiceModel.CommunicationState.Closing"></xref> or <xref href="System.ServiceModel.CommunicationState.Closed"></xref> state.
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: The communication object is in a <xref href="System.ServiceModel.CommunicationState.Faulted"></xref> state.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously
  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously
  id: SendAsynchronously
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: SendAsynchronously
  nameWithType: ChannelDispatcher.SendAsynchronously
  fullName: ChannelDispatcher.SendAsynchronously
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Gets or sets whether messages are sent asynchronously.
  syntax:
    content: public bool SendAsynchronously { get; set; }
    return:
      type: System.Boolean
      description: '`true` if messages are sent asynchronously; otherwise, `false`.'
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle
  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle
  id: ServiceThrottle
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: ServiceThrottle
  nameWithType: ChannelDispatcher.ServiceThrottle
  fullName: ChannelDispatcher.ServiceThrottle
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Gets or sets the service throttle for the service associated with the channel dispatcher.
  remarks: "This provides access to the controls used to optimize the availability and performance of a service.  \n  \n This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed."
  example:
  - >-
    [!code-csharp[S_UE_ChannelDispatcher#15](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#15)]
     [!code-vb[S_UE_ChannelDispatcher#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#15)]
  syntax:
    content: public System.ServiceModel.Dispatcher.ServiceThrottle ServiceThrottle { get; set; }
    return:
      type: System.ServiceModel.Dispatcher.ServiceThrottle
      description: A <xref href="System.ServiceModel.Dispatcher.ServiceThrottle"></xref> object.
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The communication object is in an <xref href="System.ServiceModel.CommunicationState.Opening"></xref> or <xref href="System.ServiceModel.CommunicationState.Opened"></xref> state.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The communication object is in a <xref href="System.ServiceModel.CommunicationState.Closing"></xref> or <xref href="System.ServiceModel.CommunicationState.Closed"></xref> state.
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: The communication object is in a <xref href="System.ServiceModel.CommunicationState.Faulted"></xref> state.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel
  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel
  id: TransactionIsolationLevel
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: TransactionIsolationLevel
  nameWithType: ChannelDispatcher.TransactionIsolationLevel
  fullName: ChannelDispatcher.TransactionIsolationLevel
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Gets or sets the default isolation level for transactions.
  remarks: "Use the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel%2A> property to get or set the default isolation level for new transactions created by the dispatcher for the service.  \n  \n This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed."
  example:
  - >-
    [!code-csharp[S_UE_ChannelDispatcher#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#16)]
     [!code-vb[S_UE_ChannelDispatcher#16](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#16)]
  syntax:
    content: public System.Transactions.IsolationLevel TransactionIsolationLevel { get; set; }
    return:
      type: System.Transactions.IsolationLevel
      description: One of the <xref href="System.Transactions.IsolationLevel"></xref> values. The default is <xref href="System.Transactions.IsolationLevel.Unspecified"></xref>.
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The isolation level set is not defined.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The communication object is in an <xref href="System.ServiceModel.CommunicationState.Opening"></xref> or <xref href="System.ServiceModel.CommunicationState.Opened"></xref> state.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The communication object is in a <xref href="System.ServiceModel.CommunicationState.Closing"></xref> or <xref href="System.ServiceModel.CommunicationState.Closed"></xref> state.
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: The communication object is in a <xref href="System.ServiceModel.CommunicationState.Faulted"></xref> state.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout
  commentId: P:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout
  id: TransactionTimeout
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  langs:
  - csharp
  name: TransactionTimeout
  nameWithType: ChannelDispatcher.TransactionTimeout
  fullName: ChannelDispatcher.TransactionTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Gets or sets a value that specifies the default timeout for new transactions created by the dispatcher on behalf of the service.
  remarks: This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.
  example:
  - >-
    [!code-csharp[S_UE_ChannelDispatcher#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#17)]
     [!code-vb[S_UE_ChannelDispatcher#17](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#17)]
  syntax:
    content: public TimeSpan TransactionTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan"></xref> value that represents the default timeout period for transactions. The default is <xref href="System.TimeSpan.Zero"></xref>.
  overload: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value set is less than zero or is too large.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The communication object is in an <xref href="System.ServiceModel.CommunicationState.Opening"></xref> or <xref href="System.ServiceModel.CommunicationState.Opened"></xref> state.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The communication object is in a <xref href="System.ServiceModel.CommunicationState.Closing"></xref> or <xref href="System.ServiceModel.CommunicationState.Closed"></xref> state.
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: The communication object is in a <xref href="System.ServiceModel.CommunicationState.Faulted"></xref> state.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: ChannelDispatcherBase
  nameWithType: ChannelDispatcherBase
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ObjectDisposedException
  parent: System
  isExternal: false
  name: ObjectDisposedException
  nameWithType: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.ServiceModel.CommunicationObjectFaultedException
  parent: System.ServiceModel
  isExternal: false
  name: CommunicationObjectFaultedException
  nameWithType: CommunicationObjectFaultedException
  fullName: System.ServiceModel.CommunicationObjectFaultedException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ChannelDispatcher(IChannelListener)
  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener)
  fullName: ChannelDispatcher.ChannelDispatcher(IChannelListener)
- uid: System.ServiceModel.Channels.IChannelListener
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelListener
  nameWithType: IChannelListener
  fullName: System.ServiceModel.Channels.IChannelListener
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ChannelDispatcher(IChannelListener, String)
  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener, String)
  fullName: ChannelDispatcher.ChannelDispatcher(IChannelListener, String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ChannelDispatcher(IChannelListener, String, IDefaultCommunicationTimeouts)
  nameWithType: ChannelDispatcher.ChannelDispatcher(IChannelListener, String, IDefaultCommunicationTimeouts)
  fullName: ChannelDispatcher.ChannelDispatcher(IChannelListener, String, IDefaultCommunicationTimeouts)
- uid: System.ServiceModel.IDefaultCommunicationTimeouts
  parent: System.ServiceModel
  isExternal: false
  name: IDefaultCommunicationTimeouts
  nameWithType: IDefaultCommunicationTimeouts
  fullName: System.ServiceModel.IDefaultCommunicationTimeouts
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: AsynchronousTransactedAcceptEnabled
  nameWithType: ChannelDispatcher.AsynchronousTransactedAcceptEnabled
  fullName: ChannelDispatcher.AsynchronousTransactedAcceptEnabled
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Attach(ServiceHostBase)
  nameWithType: ChannelDispatcher.Attach(ServiceHostBase)
  fullName: ChannelDispatcher.Attach(ServiceHostBase)
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: BindingName
  nameWithType: ChannelDispatcher.BindingName
  fullName: ChannelDispatcher.BindingName
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ChannelInitializers
  nameWithType: ChannelDispatcher.ChannelInitializers
  fullName: ChannelDispatcher.ChannelInitializers
- uid: System.Collections.Generic.SynchronizedCollection`1
  name: SynchronizedCollection<T>
  nameWithType: SynchronizedCollection<T>
  fullName: System.Collections.Generic.SynchronizedCollection<T>
- uid: System.ServiceModel.Dispatcher.IChannelInitializer
  name: IChannelInitializer
  nameWithType: IChannelInitializer
  fullName: System.ServiceModel.Dispatcher.IChannelInitializer
- uid: System.Collections.Generic.SynchronizedCollection{System.ServiceModel.Dispatcher.IChannelInitializer}
  parent: System.Collections.Generic
  isExternal: false
  name: SynchronizedCollection<IChannelInitializer>
  nameWithType: SynchronizedCollection<IChannelInitializer>
  fullName: System.Collections.Generic.SynchronizedCollection<System.ServiceModel.Dispatcher.IChannelInitializer>
  spec.csharp:
  - uid: System.Collections.Generic.SynchronizedCollection`1
    name: SynchronizedCollection
    nameWithType: SynchronizedCollection
    fullName: System.Collections.Generic.SynchronizedCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Dispatcher.IChannelInitializer
    name: IChannelInitializer
    nameWithType: IChannelInitializer
    fullName: System.ServiceModel.Dispatcher.IChannelInitializer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: CloseInput()
  nameWithType: ChannelDispatcher.CloseInput()
  fullName: ChannelDispatcher.CloseInput()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ChannelDispatcher.DefaultCloseTimeout
  fullName: ChannelDispatcher.DefaultCloseTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ChannelDispatcher.DefaultOpenTimeout
  fullName: ChannelDispatcher.DefaultOpenTimeout
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Detach(ServiceHostBase)
  nameWithType: ChannelDispatcher.Detach(ServiceHostBase)
  fullName: ChannelDispatcher.Detach(ServiceHostBase)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Endpoints
  nameWithType: ChannelDispatcher.Endpoints
  fullName: ChannelDispatcher.Endpoints
- uid: System.ServiceModel.Dispatcher.EndpointDispatcher
  name: EndpointDispatcher
  nameWithType: EndpointDispatcher
  fullName: System.ServiceModel.Dispatcher.EndpointDispatcher
- uid: System.Collections.Generic.SynchronizedCollection{System.ServiceModel.Dispatcher.EndpointDispatcher}
  parent: System.Collections.Generic
  isExternal: false
  name: SynchronizedCollection<EndpointDispatcher>
  nameWithType: SynchronizedCollection<EndpointDispatcher>
  fullName: System.Collections.Generic.SynchronizedCollection<System.ServiceModel.Dispatcher.EndpointDispatcher>
  spec.csharp:
  - uid: System.Collections.Generic.SynchronizedCollection`1
    name: SynchronizedCollection
    nameWithType: SynchronizedCollection
    fullName: System.Collections.Generic.SynchronizedCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Dispatcher.EndpointDispatcher
    name: EndpointDispatcher
    nameWithType: EndpointDispatcher
    fullName: System.ServiceModel.Dispatcher.EndpointDispatcher
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ErrorHandlers
  nameWithType: ChannelDispatcher.ErrorHandlers
  fullName: ChannelDispatcher.ErrorHandlers
- uid: System.Collections.ObjectModel.Collection`1
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
- uid: System.ServiceModel.Dispatcher.IErrorHandler
  name: IErrorHandler
  nameWithType: IErrorHandler
  fullName: System.ServiceModel.Dispatcher.IErrorHandler
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.IErrorHandler}
  parent: System.Collections.ObjectModel
  isExternal: false
  name: Collection<IErrorHandler>
  nameWithType: Collection<IErrorHandler>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Dispatcher.IErrorHandler>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Dispatcher.IErrorHandler
    name: IErrorHandler
    nameWithType: IErrorHandler
    fullName: System.ServiceModel.Dispatcher.IErrorHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Host
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Host
  nameWithType: ChannelDispatcher.Host
  fullName: ChannelDispatcher.Host
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: IncludeExceptionDetailInFaults
  nameWithType: ChannelDispatcher.IncludeExceptionDetailInFaults
  fullName: ChannelDispatcher.IncludeExceptionDetailInFaults
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: IsTransactedAccept
  nameWithType: ChannelDispatcher.IsTransactedAccept
  fullName: ChannelDispatcher.IsTransactedAccept
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: IsTransactedReceive
  nameWithType: ChannelDispatcher.IsTransactedReceive
  fullName: ChannelDispatcher.IsTransactedReceive
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Listener
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Listener
  nameWithType: ChannelDispatcher.Listener
  fullName: ChannelDispatcher.Listener
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ManualAddressing
  nameWithType: ChannelDispatcher.ManualAddressing
  fullName: ChannelDispatcher.ManualAddressing
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: MaxPendingReceives
  nameWithType: ChannelDispatcher.MaxPendingReceives
  fullName: ChannelDispatcher.MaxPendingReceives
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: MaxTransactedBatchSize
  nameWithType: ChannelDispatcher.MaxTransactedBatchSize
  fullName: ChannelDispatcher.MaxTransactedBatchSize
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: MessageVersion
  nameWithType: ChannelDispatcher.MessageVersion
  fullName: ChannelDispatcher.MessageVersion
- uid: System.ServiceModel.Channels.MessageVersion
  parent: System.ServiceModel.Channels
  isExternal: false
  name: MessageVersion
  nameWithType: MessageVersion
  fullName: System.ServiceModel.Channels.MessageVersion
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnAbort()
  nameWithType: ChannelDispatcher.OnAbort()
  fullName: ChannelDispatcher.OnAbort()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnBeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: ChannelDispatcher.OnBeginClose(TimeSpan, AsyncCallback, Object)
  fullName: ChannelDispatcher.OnBeginClose(TimeSpan, AsyncCallback, Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: ChannelDispatcher.OnBeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: ChannelDispatcher.OnBeginOpen(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(System.TimeSpan)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnClose(TimeSpan)
  nameWithType: ChannelDispatcher.OnClose(TimeSpan)
  fullName: ChannelDispatcher.OnClose(TimeSpan)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnClosed()
  nameWithType: ChannelDispatcher.OnClosed()
  fullName: ChannelDispatcher.OnClosed()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnEndClose(IAsyncResult)
  nameWithType: ChannelDispatcher.OnEndClose(IAsyncResult)
  fullName: ChannelDispatcher.OnEndClose(IAsyncResult)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnEndOpen(IAsyncResult)
  nameWithType: ChannelDispatcher.OnEndOpen(IAsyncResult)
  fullName: ChannelDispatcher.OnEndOpen(IAsyncResult)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(System.TimeSpan)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnOpen(TimeSpan)
  nameWithType: ChannelDispatcher.OnOpen(TimeSpan)
  fullName: ChannelDispatcher.OnOpen(TimeSpan)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnOpened()
  nameWithType: ChannelDispatcher.OnOpened()
  fullName: ChannelDispatcher.OnOpened()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnOpening()
  nameWithType: ChannelDispatcher.OnOpening()
  fullName: ChannelDispatcher.OnOpening()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ReceiveContextEnabled
  nameWithType: ChannelDispatcher.ReceiveContextEnabled
  fullName: ChannelDispatcher.ReceiveContextEnabled
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ReceiveSynchronously
  nameWithType: ChannelDispatcher.ReceiveSynchronously
  fullName: ChannelDispatcher.ReceiveSynchronously
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: SendAsynchronously
  nameWithType: ChannelDispatcher.SendAsynchronously
  fullName: ChannelDispatcher.SendAsynchronously
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ServiceThrottle
  nameWithType: ChannelDispatcher.ServiceThrottle
  fullName: ChannelDispatcher.ServiceThrottle
- uid: System.ServiceModel.Dispatcher.ServiceThrottle
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: ServiceThrottle
  nameWithType: ServiceThrottle
  fullName: System.ServiceModel.Dispatcher.ServiceThrottle
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: TransactionIsolationLevel
  nameWithType: ChannelDispatcher.TransactionIsolationLevel
  fullName: ChannelDispatcher.TransactionIsolationLevel
- uid: System.Transactions.IsolationLevel
  parent: System.Transactions
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Transactions.IsolationLevel
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: TransactionTimeout
  nameWithType: ChannelDispatcher.TransactionTimeout
  fullName: ChannelDispatcher.TransactionTimeout
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ChannelDispatcher
  nameWithType: ChannelDispatcher.ChannelDispatcher
  fullName: ChannelDispatcher.ChannelDispatcher
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: AsynchronousTransactedAcceptEnabled
  nameWithType: ChannelDispatcher.AsynchronousTransactedAcceptEnabled
  fullName: ChannelDispatcher.AsynchronousTransactedAcceptEnabled
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Attach*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Attach
  nameWithType: ChannelDispatcher.Attach
  fullName: ChannelDispatcher.Attach
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: BindingName
  nameWithType: ChannelDispatcher.BindingName
  fullName: ChannelDispatcher.BindingName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ChannelInitializers
  nameWithType: ChannelDispatcher.ChannelInitializers
  fullName: ChannelDispatcher.ChannelInitializers
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: CloseInput
  nameWithType: ChannelDispatcher.CloseInput
  fullName: ChannelDispatcher.CloseInput
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ChannelDispatcher.DefaultCloseTimeout
  fullName: ChannelDispatcher.DefaultCloseTimeout
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ChannelDispatcher.DefaultOpenTimeout
  fullName: ChannelDispatcher.DefaultOpenTimeout
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Detach*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Detach
  nameWithType: ChannelDispatcher.Detach
  fullName: ChannelDispatcher.Detach
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Endpoints
  nameWithType: ChannelDispatcher.Endpoints
  fullName: ChannelDispatcher.Endpoints
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ErrorHandlers
  nameWithType: ChannelDispatcher.ErrorHandlers
  fullName: ChannelDispatcher.ErrorHandlers
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Host*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Host
  nameWithType: ChannelDispatcher.Host
  fullName: ChannelDispatcher.Host
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: IncludeExceptionDetailInFaults
  nameWithType: ChannelDispatcher.IncludeExceptionDetailInFaults
  fullName: ChannelDispatcher.IncludeExceptionDetailInFaults
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: IsTransactedAccept
  nameWithType: ChannelDispatcher.IsTransactedAccept
  fullName: ChannelDispatcher.IsTransactedAccept
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: IsTransactedReceive
  nameWithType: ChannelDispatcher.IsTransactedReceive
  fullName: ChannelDispatcher.IsTransactedReceive
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.Listener*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: Listener
  nameWithType: ChannelDispatcher.Listener
  fullName: ChannelDispatcher.Listener
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ManualAddressing
  nameWithType: ChannelDispatcher.ManualAddressing
  fullName: ChannelDispatcher.ManualAddressing
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: MaxPendingReceives
  nameWithType: ChannelDispatcher.MaxPendingReceives
  fullName: ChannelDispatcher.MaxPendingReceives
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: MaxTransactedBatchSize
  nameWithType: ChannelDispatcher.MaxTransactedBatchSize
  fullName: ChannelDispatcher.MaxTransactedBatchSize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: MessageVersion
  nameWithType: ChannelDispatcher.MessageVersion
  fullName: ChannelDispatcher.MessageVersion
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnAbort
  nameWithType: ChannelDispatcher.OnAbort
  fullName: ChannelDispatcher.OnAbort
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnBeginClose
  nameWithType: ChannelDispatcher.OnBeginClose
  fullName: ChannelDispatcher.OnBeginClose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnBeginOpen
  nameWithType: ChannelDispatcher.OnBeginOpen
  fullName: ChannelDispatcher.OnBeginOpen
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnClose
  nameWithType: ChannelDispatcher.OnClose
  fullName: ChannelDispatcher.OnClose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnClosed
  nameWithType: ChannelDispatcher.OnClosed
  fullName: ChannelDispatcher.OnClosed
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnEndClose
  nameWithType: ChannelDispatcher.OnEndClose
  fullName: ChannelDispatcher.OnEndClose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnEndOpen
  nameWithType: ChannelDispatcher.OnEndOpen
  fullName: ChannelDispatcher.OnEndOpen
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnOpen
  nameWithType: ChannelDispatcher.OnOpen
  fullName: ChannelDispatcher.OnOpen
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnOpened
  nameWithType: ChannelDispatcher.OnOpened
  fullName: ChannelDispatcher.OnOpened
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: OnOpening
  nameWithType: ChannelDispatcher.OnOpening
  fullName: ChannelDispatcher.OnOpening
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ReceiveContextEnabled
  nameWithType: ChannelDispatcher.ReceiveContextEnabled
  fullName: ChannelDispatcher.ReceiveContextEnabled
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ReceiveSynchronously
  nameWithType: ChannelDispatcher.ReceiveSynchronously
  fullName: ChannelDispatcher.ReceiveSynchronously
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: SendAsynchronously
  nameWithType: ChannelDispatcher.SendAsynchronously
  fullName: ChannelDispatcher.SendAsynchronously
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: ServiceThrottle
  nameWithType: ChannelDispatcher.ServiceThrottle
  fullName: ChannelDispatcher.ServiceThrottle
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: TransactionIsolationLevel
  nameWithType: ChannelDispatcher.TransactionIsolationLevel
  fullName: ChannelDispatcher.TransactionIsolationLevel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcher
  isExternal: false
  name: TransactionTimeout
  nameWithType: ChannelDispatcher.TransactionTimeout
  fullName: ChannelDispatcher.TransactionTimeout
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ChannelDispatcher.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.ServiceModel.Channels.CommunicationObject.Abort
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Abort()
  nameWithType: CommunicationObject.Abort()
  fullName: CommunicationObject.Abort()
- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: BeginClose(AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginClose(AsyncCallback, Object)
  fullName: CommunicationObject.BeginClose(AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: BeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
  fullName: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: BeginOpen(AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginOpen(AsyncCallback, Object)
  fullName: CommunicationObject.BeginOpen(AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: BeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.Close
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Close()
  nameWithType: CommunicationObject.Close()
  fullName: CommunicationObject.Close()
- uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Close(TimeSpan)
  nameWithType: CommunicationObject.Close(TimeSpan)
  fullName: CommunicationObject.Close(TimeSpan)
- uid: System.ServiceModel.Channels.CommunicationObject.Closed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Closed
  nameWithType: CommunicationObject.Closed
  fullName: CommunicationObject.Closed
- uid: System.ServiceModel.Channels.CommunicationObject.Closing
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Closing
  nameWithType: CommunicationObject.Closing
  fullName: CommunicationObject.Closing
- uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: EndClose(IAsyncResult)
  nameWithType: CommunicationObject.EndClose(IAsyncResult)
  fullName: CommunicationObject.EndClose(IAsyncResult)
- uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: EndOpen(IAsyncResult)
  nameWithType: CommunicationObject.EndOpen(IAsyncResult)
  fullName: CommunicationObject.EndOpen(IAsyncResult)
- uid: System.ServiceModel.Channels.CommunicationObject.Fault
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Fault()
  nameWithType: CommunicationObject.Fault()
  fullName: CommunicationObject.Fault()
- uid: System.ServiceModel.Channels.CommunicationObject.Faulted
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Faulted
  nameWithType: CommunicationObject.Faulted
  fullName: CommunicationObject.Faulted
- uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: GetCommunicationObjectType()
  nameWithType: CommunicationObject.GetCommunicationObjectType()
  fullName: CommunicationObject.GetCommunicationObjectType()
- uid: System.ServiceModel.Channels.CommunicationObject.IsDisposed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: IsDisposed
  nameWithType: CommunicationObject.IsDisposed
  fullName: CommunicationObject.IsDisposed
- uid: System.ServiceModel.Channels.CommunicationObject.OnClosing
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnClosing()
  nameWithType: CommunicationObject.OnClosing()
  fullName: CommunicationObject.OnClosing()
- uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnFaulted()
  nameWithType: CommunicationObject.OnFaulted()
  fullName: CommunicationObject.OnFaulted()
- uid: System.ServiceModel.Channels.CommunicationObject.Open
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Open()
  nameWithType: CommunicationObject.Open()
  fullName: CommunicationObject.Open()
- uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Open(TimeSpan)
  nameWithType: CommunicationObject.Open(TimeSpan)
  fullName: CommunicationObject.Open(TimeSpan)
- uid: System.ServiceModel.Channels.CommunicationObject.Opened
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Opened
  nameWithType: CommunicationObject.Opened
  fullName: CommunicationObject.Opened
- uid: System.ServiceModel.Channels.CommunicationObject.Opening
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Opening
  nameWithType: CommunicationObject.Opening
  fullName: CommunicationObject.Opening
- uid: System.ServiceModel.Channels.CommunicationObject.State
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: State
  nameWithType: CommunicationObject.State
  fullName: CommunicationObject.State
- uid: System.ServiceModel.Channels.CommunicationObject.ThisLock
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: ThisLock
  nameWithType: CommunicationObject.ThisLock
  fullName: CommunicationObject.ThisLock
- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: ThrowIfDisposed()
  nameWithType: CommunicationObject.ThrowIfDisposed()
  fullName: CommunicationObject.ThrowIfDisposed()
- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: ThrowIfDisposedOrImmutable()
  nameWithType: CommunicationObject.ThrowIfDisposedOrImmutable()
  fullName: CommunicationObject.ThrowIfDisposedOrImmutable()
- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: ThrowIfDisposedOrNotOpen()
  nameWithType: CommunicationObject.ThrowIfDisposedOrNotOpen()
  fullName: CommunicationObject.ThrowIfDisposedOrNotOpen()
