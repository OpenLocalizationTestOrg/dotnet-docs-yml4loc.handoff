{"nodes":[{"content":"Represents the abstract class from which all mask generator algorithms must derive.","nodes":[{"pos":[0,83],"content":"Represents the abstract class from which all mask generator algorithms must derive.","nodes":[{"content":"Represents the abstract class from which all mask generator algorithms must derive.","pos":[0,83]}]}],"pos":[654,738],"yaml":true},{"content":"Derived classes of <xref:System.Security.Cryptography.MaskGenerationMethod> compute masks that are used in key exchange algorithms such as Optimal Asymmetric Encryption Padding (OAEP).  \n  \n This class is used by implementations of key exchange algorithms only for mask generation. Application code does not use this class directly.","nodes":[{"pos":[0,184],"content":"Derived classes of <xref:System.Security.Cryptography.MaskGenerationMethod> compute masks that are used in key exchange algorithms such as Optimal Asymmetric Encryption Padding (OAEP).","nodes":[{"content":"Derived classes of <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.MaskGenerationMethod&gt;</ph> compute masks that are used in key exchange algorithms such as Optimal Asymmetric Encryption Padding (OAEP).","pos":[0,184],"source":"Derived classes of <xref:System.Security.Cryptography.MaskGenerationMethod> compute masks that are used in key exchange algorithms such as Optimal Asymmetric Encryption Padding (OAEP)."}]},{"pos":[191,332],"content":"This class is used by implementations of key exchange algorithms only for mask generation. Application code does not use this class directly.","nodes":[{"content":"This class is used by implementations of key exchange algorithms only for mask generation. Application code does not use this class directly.","pos":[0,141],"nodes":[{"content":"This class is used by implementations of key exchange algorithms only for mask generation.","pos":[0,90]},{"content":"Application code does not use this class directly.","pos":[91,141]}]}]}],"pos":[749,1086],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.MaskGenerationMethod\"></xref> class.","nodes":[{"pos":[0,111],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.MaskGenerationMethod\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.MaskGenerationMethod\"></xref> class."}],"pos":[3715,3827],"yaml":true},{"content":"When overridden in a derived class, generates a mask with the specified length using the specified random seed.","nodes":[{"pos":[0,111],"content":"When overridden in a derived class, generates a mask with the specified length using the specified random seed.","nodes":[{"content":"When overridden in a derived class, generates a mask with the specified length using the specified random seed.","pos":[0,111]}]}],"pos":[5381,5493],"yaml":true},{"content":"The random seed to use to compute the mask.","nodes":[{"pos":[0,43],"content":"The random seed to use to compute the mask.","nodes":[{"content":"The random seed to use to compute the mask.","pos":[0,43]}]}],"pos":[6134,6178],"yaml":true},{"content":"The length of the generated mask in bytes.","nodes":[{"pos":[0,42],"content":"The length of the generated mask in bytes.","nodes":[{"content":"The length of the generated mask in bytes.","pos":[0,42]}]}],"pos":[6241,6284],"yaml":true},{"content":"A randomly generated mask whose length is equal to the <code>cbReturn</code> parameter.","nodes":[{"pos":[0,87],"content":"A randomly generated mask whose length is equal to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">cbReturn</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A randomly generated mask whose length is equal to the <code>cbReturn</code> parameter."}],"pos":[6341,6429],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.MaskGenerationMethod\n  commentId: T:System.Security.Cryptography.MaskGenerationMethod\n  id: MaskGenerationMethod\n  children:\n  - System.Security.Cryptography.MaskGenerationMethod.#ctor\n  - System.Security.Cryptography.MaskGenerationMethod.GenerateMask(System.Byte[],System.Int32)\n  langs:\n  - csharp\n  name: MaskGenerationMethod\n  nameWithType: MaskGenerationMethod\n  fullName: System.Security.Cryptography.MaskGenerationMethod\n  type: Class\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Represents the abstract class from which all mask generator algorithms must derive.\n  remarks: \"Derived classes of <xref:System.Security.Cryptography.MaskGenerationMethod> compute masks that are used in key exchange algorithms such as Optimal Asymmetric Encryption Padding (OAEP).  \\n  \\n This class is used by implementations of key exchange algorithms only for mask generation. Application code does not use this class directly.\"\n  example:\n  - \"The following code example demonstrates how to derive from the <xref:System.Security.Cryptography.MaskGenerationMethod> class.  \\n  \\n [!code-cpp[System.Security.Cryptography.MaskGenerationMethod#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.MaskGenerationMethod/CPP/maskgenerator.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.MaskGenerationMethod#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.MaskGenerationMethod/CS/maskgenerator.cs#1)]\\n [!code-vb[System.Security.Cryptography.MaskGenerationMethod#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.MaskGenerationMethod/VB/maskgenerator.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class MaskGenerationMethod\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Security.Cryptography.PKCS1MaskGenerationMethod\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MaskGenerationMethod.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.MaskGenerationMethod.#ctor\n  commentId: M:System.Security.Cryptography.MaskGenerationMethod.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.MaskGenerationMethod\n  langs:\n  - csharp\n  name: MaskGenerationMethod()\n  nameWithType: MaskGenerationMethod.MaskGenerationMethod()\n  fullName: MaskGenerationMethod.MaskGenerationMethod()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.MaskGenerationMethod\"></xref> class.\n  syntax:\n    content: protected MaskGenerationMethod ();\n    parameters: []\n  overload: System.Security.Cryptography.MaskGenerationMethod.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MaskGenerationMethod.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.MaskGenerationMethod.GenerateMask(System.Byte[],System.Int32)\n  commentId: M:System.Security.Cryptography.MaskGenerationMethod.GenerateMask(System.Byte[],System.Int32)\n  id: GenerateMask(System.Byte[],System.Int32)\n  parent: System.Security.Cryptography.MaskGenerationMethod\n  langs:\n  - csharp\n  name: GenerateMask(Byte[], Int32)\n  nameWithType: MaskGenerationMethod.GenerateMask(Byte[], Int32)\n  fullName: MaskGenerationMethod.GenerateMask(Byte[], Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: When overridden in a derived class, generates a mask with the specified length using the specified random seed.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to override the <xref:System.Security.Cryptography.MaskGenerationMethod.GenerateMask%2A> to create and return a mask using the specified seed. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.MaskGenerationMethod> class.  \\n  \\n System.Security.Cryptography.MaskGenerationMethod#3\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract byte[] GenerateMask (byte[] rgbSeed, int cbReturn);\n    parameters:\n    - id: rgbSeed\n      type: System.Byte[]\n      description: The random seed to use to compute the mask.\n    - id: cbReturn\n      type: System.Int32\n      description: The length of the generated mask in bytes.\n    return:\n      type: System.Byte[]\n      description: A randomly generated mask whose length is equal to the <code>cbReturn</code> parameter.\n  overload: System.Security.Cryptography.MaskGenerationMethod.GenerateMask*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MaskGenerationMethod.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Cryptography.MaskGenerationMethod.#ctor\n  parent: System.Security.Cryptography.MaskGenerationMethod\n  isExternal: false\n  name: MaskGenerationMethod()\n  nameWithType: MaskGenerationMethod.MaskGenerationMethod()\n  fullName: MaskGenerationMethod.MaskGenerationMethod()\n- uid: System.Security.Cryptography.MaskGenerationMethod.GenerateMask(System.Byte[],System.Int32)\n  parent: System.Security.Cryptography.MaskGenerationMethod\n  isExternal: false\n  name: GenerateMask(Byte[], Int32)\n  nameWithType: MaskGenerationMethod.GenerateMask(Byte[], Int32)\n  fullName: MaskGenerationMethod.GenerateMask(Byte[], Int32)\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.MaskGenerationMethod.#ctor*\n  parent: System.Security.Cryptography.MaskGenerationMethod\n  isExternal: false\n  name: MaskGenerationMethod\n  nameWithType: MaskGenerationMethod.MaskGenerationMethod\n  fullName: MaskGenerationMethod.MaskGenerationMethod\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MaskGenerationMethod.xml\n- uid: System.Security.Cryptography.MaskGenerationMethod.GenerateMask*\n  parent: System.Security.Cryptography.MaskGenerationMethod\n  isExternal: false\n  name: GenerateMask\n  nameWithType: MaskGenerationMethod.GenerateMask\n  fullName: MaskGenerationMethod.GenerateMask\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MaskGenerationMethod.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}