### YamlMime:ManagedReference
items:
- uid: System.Configuration.Install
  id: System.Configuration.Install
  children:
  - System.Configuration.Install.AssemblyInstaller
  - System.Configuration.Install.ComponentInstaller
  - System.Configuration.Install.IManagedInstaller
  - System.Configuration.Install.InstallContext
  - System.Configuration.Install.Installer
  - System.Configuration.Install.InstallerCollection
  - System.Configuration.Install.InstallEventArgs
  - System.Configuration.Install.InstallEventHandler
  - System.Configuration.Install.InstallException
  - System.Configuration.Install.ManagedInstallerClass
  - System.Configuration.Install.TransactedInstaller
  - System.Configuration.Install.UninstallAction
  langs:
  - csharp
  name: System.Configuration.Install
  nameWithType: System.Configuration.Install
  fullName: System.Configuration.Install
  type: Namespace
  summary: The <xref href="System.Configuration.Install"></xref> namespace provides classes that allow you to write custom installers for your own components. The <xref href="System.Configuration.Install.Installer"></xref> class is the base class for all custom installers in the.NET Framework.
  remarks: "Through the <xref:System.Configuration.Install.Installer.Installers%2A> property, an installer contains a collection of other installers as children. As the installer is executed, it cycles through its children and calls <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, or <xref:System.Configuration.Install.Installer.Uninstall%2A>. For an example of an object in the <xref:System.Configuration.Install.Installer.Installers%2A> collection, see <xref:System.Diagnostics.EventLogInstaller>.  \n  \n The <xref:System.Configuration.Install.Installer.Context%2A> property contains information about the installation. For example, information about the location of the log file for the installation, the location of the file that saves information required by the <xref:System.Configuration.Install.Installer.Uninstall%2A> method, and the command line that was entered when the installation executable was run. For an example of an installation executable, see [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md).  \n  \n The <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, and <xref:System.Configuration.Install.Installer.Uninstall%2A> methods are not always called on the same instance of <xref:System.Configuration.Install.Installer>. For example, you might use an <xref:System.Configuration.Install.Installer> to install and commit an application, and then release the reference to that <xref:System.Configuration.Install.Installer>. Later, uninstalling the application creates a new reference to an <xref:System.Configuration.Install.Installer>, which means that the <xref:System.Configuration.Install.Installer.Uninstall%2A> method is called on a different instance of <xref:System.Configuration.Install.Installer>. For this reason, do not save the state of a computer in an installer. Instead, use an <xref:System.Collections.IDictionary> that is preserved across calls and passed into the <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, and <xref:System.Configuration.Install.Installer.Uninstall%2A> methods."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/ns-System.Configuration.Install.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Configuration.Install.AssemblyInstaller
  parent: System.Configuration.Install
  isExternal: false
  name: AssemblyInstaller
  nameWithType: AssemblyInstaller
  fullName: System.Configuration.Install.AssemblyInstaller
- uid: System.Configuration.Install.ComponentInstaller
  parent: System.Configuration.Install
  isExternal: false
  name: ComponentInstaller
  nameWithType: ComponentInstaller
  fullName: System.Configuration.Install.ComponentInstaller
- uid: System.Configuration.Install.IManagedInstaller
  parent: System.Configuration.Install
  isExternal: false
  name: IManagedInstaller
  nameWithType: IManagedInstaller
  fullName: System.Configuration.Install.IManagedInstaller
- uid: System.Configuration.Install.InstallContext
  parent: System.Configuration.Install
  isExternal: false
  name: InstallContext
  nameWithType: InstallContext
  fullName: System.Configuration.Install.InstallContext
- uid: System.Configuration.Install.Installer
  parent: System.Configuration.Install
  isExternal: false
  name: Installer
  nameWithType: Installer
  fullName: System.Configuration.Install.Installer
- uid: System.Configuration.Install.InstallerCollection
  parent: System.Configuration.Install
  isExternal: false
  name: InstallerCollection
  nameWithType: InstallerCollection
  fullName: System.Configuration.Install.InstallerCollection
- uid: System.Configuration.Install.InstallEventArgs
  parent: System.Configuration.Install
  isExternal: false
  name: InstallEventArgs
  nameWithType: InstallEventArgs
  fullName: System.Configuration.Install.InstallEventArgs
- uid: System.Configuration.Install.InstallEventHandler
  parent: System.Configuration.Install
  isExternal: false
  name: InstallEventHandler
  nameWithType: InstallEventHandler
  fullName: System.Configuration.Install.InstallEventHandler
- uid: System.Configuration.Install.InstallException
  parent: System.Configuration.Install
  isExternal: false
  name: InstallException
  nameWithType: InstallException
  fullName: System.Configuration.Install.InstallException
- uid: System.Configuration.Install.ManagedInstallerClass
  parent: System.Configuration.Install
  isExternal: false
  name: ManagedInstallerClass
  nameWithType: ManagedInstallerClass
  fullName: System.Configuration.Install.ManagedInstallerClass
- uid: System.Configuration.Install.TransactedInstaller
  parent: System.Configuration.Install
  isExternal: false
  name: TransactedInstaller
  nameWithType: TransactedInstaller
  fullName: System.Configuration.Install.TransactedInstaller
- uid: System.Configuration.Install.UninstallAction
  parent: System.Configuration.Install
  isExternal: false
  name: UninstallAction
  nameWithType: UninstallAction
  fullName: System.Configuration.Install.UninstallAction
