### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.IDataObject
  commentId: T:System.Windows.Forms.IDataObject
  id: IDataObject
  children:
  - System.Windows.Forms.IDataObject.GetData(System.String)
  - System.Windows.Forms.IDataObject.GetData(System.Type)
  - System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  - System.Windows.Forms.IDataObject.GetFormats
  - System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  - System.Windows.Forms.IDataObject.SetData(System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  langs:
  - csharp
  name: IDataObject
  nameWithType: IDataObject
  fullName: System.Windows.Forms.IDataObject
  type: Interface
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Provides a format-independent mechanism for transferring data.
  remarks: "The `IDataObject` interface is used by the <xref:System.Windows.Forms.Clipboard> class and in drag-and-drop operations.  \n  \n When implemented in a class, the <xref:System.Windows.Forms.IDataObject> methods allow the user to store data in multiple formats in an instance of the class. Storing data in more than one format increases the chance that a target application, whose format requirements you might not know, can retrieve the stored data. To store data in an instance of <xref:System.Windows.Forms.IDataObject>, call the <xref:System.Windows.Forms.IDataObject.SetData%2A> method and specify the data format in the `format` parameter. Set the `autoConvert` parameter to `false` if you do not want stored data to be converted to another format when it is retrieved. Invoke <xref:System.Windows.Forms.IDataObject.SetData%2A> multiple times on one instance of <xref:System.Windows.Forms.IDataObject> to store data in more than one format.  \n  \n You retrieve stored data from an <xref:System.Windows.Forms.IDataObject> by calling the <xref:System.Windows.Forms.IDataObject.GetData%2A> method and specifying the data format in the `format` parameter. Set the `autoConvert` parameter to `false` to retrieve only data that was stored in the specified format. To convert the stored data to the specified format, set `autoConvert` to `true`, or do not use `autoConvert`.  \n  \n To determine the formats of the data stored in an <xref:System.Windows.Forms.IDataObject>, use the following <xref:System.Windows.Forms.IDataObject> methods.  \n  \n-   Call the <xref:System.Windows.Forms.IDataObject.GetFormats%2A> method to retrieve an array of all the formats in which the data is available. Set the `autoConvert` parameter to `false` to get only the formats in which the data is stored. To get all the formats in which the data is available, set `autoConvert` to `true`, or do not use this parameter.  \n  \n-   Call the <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> method to determine whether stored data is available in a certain format. If you do not want stored data to be converted to the specified format, set the `autoConvert` parameter to `false`.  \n  \n See the <xref:System.Windows.Forms.DataObject> class for an implementation of this interface. See the <xref:System.Windows.Forms.DataFormats> class for the predefined <xref:System.Windows.Forms.Clipboard> data formats."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IDataObject
  derivedClasses:
  - System.Windows.Forms.DataObject
  implements: []
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/IDataObject.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.IDataObject.GetData(System.String)
  commentId: M:System.Windows.Forms.IDataObject.GetData(System.String)
  id: GetData(System.String)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(String)
  nameWithType: IDataObject.GetData(String)
  fullName: IDataObject.GetData(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Retrieves the data associated with the specified data format.
  remarks: "If this method cannot find data in the specified format, it attempts to convert the data to the format. If the data cannot be converted to the specified format, this method returns `null`.  \n  \n To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>. Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for a list of valid formats for the data stored in this instance.  \n  \n> [!NOTE]\n>  Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format. For example, data stored as Unicode can be converted to text.  \n  \n For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>."
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject,` to demonstrate the use of the `GetData` method. The method is used to retrieve the data stored in `myDataObject`, which is associated with the `Text` format. The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.  \n  \n [!code-cpp[GetData1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetData1/CPP/getdata1.cpp#1)]\n [!code-csharp[GetData1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetData1/CS/getdata1.cs#1)]\n [!code-vb[GetData1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetData1/VB/getdata1.vb#1)]"
  syntax:
    content: public object GetData (string format);
    parameters:
    - id: format
      type: System.String
      description: The format of the data to retrieve. See <xref href="System.Windows.Forms.DataFormats"></xref> for predefined formats.
    return:
      type: System.Object
      description: The data associated with the specified format, or `null`.
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/IDataObject.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.IDataObject.GetData(System.Type)
  commentId: M:System.Windows.Forms.IDataObject.GetData(System.Type)
  id: GetData(System.Type)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(Type)
  nameWithType: IDataObject.GetData(Type)
  fullName: IDataObject.GetData(Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Retrieves the data associated with the specified class type format.
  remarks: "If this method cannot find data in the specified format, it attempts to convert the data to the format. If the data cannot be converted to the specified format, this method returns `null`.  \n  \n To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>. Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for a list of valid formats for the data stored in this instance.  \n  \n> [!NOTE]\n>  Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format. For example, data stored as Unicode can be converted to text.  \n  \n For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>."
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method. The method is used to retrieve the data stored in `myObject`, which is associated with a specific type, `myType`. The type of the retrieved data is displayed in a message box. The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[GetData2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetData2/CPP/getdata2.cpp#1)]\n [!code-csharp[GetData2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetData2/CS/getdata2.cs#1)]\n [!code-vb[GetData2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetData2/VB/getdata2.vb#1)]"
  syntax:
    content: public object GetData (Type format);
    parameters:
    - id: format
      type: System.Type
      description: A <xref href="System.Type"></xref> representing the format of the data to retrieve. See <xref href="System.Windows.Forms.DataFormats"></xref> for predefined formats.
    return:
      type: System.Object
      description: The data associated with the specified format, or `null`.
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/IDataObject.xml
  ms.technology:
  - dotnet-winforms
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  commentId: M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  id: GetData(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(String, Boolean)
  nameWithType: IDataObject.GetData(String, Boolean)
  fullName: IDataObject.GetData(String, Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Retrieves the data associated with the specified data format, using a Boolean to determine whether to convert the data to the format.
  remarks: "If the `autoConvert` parameter is `true` and this method cannot find data in the specified format, it attempts to convert the data to the format. If the data cannot be converted to the specified format, or if the data was stored with the `autoConvert` parameter set to `false`, this method returns `null`.  \n  \n If the `autoConvert` parameter is `false`, this method returns data in the specified format, or `null` if no data in this format can be found.  \n  \n To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>. Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for a list of valid formats for the data stored in this instance.  \n  \n> [!NOTE]\n>  Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format. For example, data stored as Unicode can be converted to text.  \n  \n For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>."
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method. The example retrieves the data stored in a `DataObject`, using the `autoConvert` parameter to specify whether or not to convert the data format. First, `myDataObject` is created with text data. Then the example tries twice to retrieve the data. In the first trial, it specifies its format as a string and sets the `autoConvert` parameter to `false`. This trial fails, and the result is displayed in a message box labeled \"Message #1.\" In the second trial, the example retrieves the same data with the `autoConvert` parameter set to `true`. This trial succeeds, and the result is displayed in a message box labeled \"Message #2.\" The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[GetData3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetData3/CPP/getdata3.cpp#1)]\n [!code-csharp[GetData3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetData3/CS/getdata3.cs#1)]\n [!code-vb[GetData3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetData3/VB/getdata3.vb#1)]"
  syntax:
    content: public object GetData (string format, bool autoConvert);
    parameters:
    - id: format
      type: System.String
      description: The format of the data to retrieve. See <xref href="System.Windows.Forms.DataFormats"></xref> for predefined formats.
    - id: autoConvert
      type: System.Boolean
      description: '`true` to convert the data to the specified format; otherwise, `false`.'
    return:
      type: System.Object
      description: The data associated with the specified format, or `null`.
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/IDataObject.xml
  ms.technology:
  - dotnet-winforms
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  commentId: M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  id: GetDataPresent(System.String)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(String)
  nameWithType: IDataObject.GetDataPresent(String)
  fullName: IDataObject.GetDataPresent(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Determines whether data stored in this instance is associated with, or can be converted to, the specified format.
  remarks: "Call this method to determine whether a format exists in this <xref:System.Windows.Forms.DataObject> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>. Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for the formats that are available in this instance.  \n  \n> [!NOTE]\n>  Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format. For example, data stored as Unicode can be converted to text.  \n  \n For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>."
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a data object using a string and the `Text` format. Then it verifies that the data is present in the `Text` format and displays the results in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[GetDataPresent1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetDataPresent1/CPP/getdatapresent1.cpp#1)]\n [!code-csharp[GetDataPresent1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetDataPresent1/CS/getdatapresent1.cs#1)]\n [!code-vb[GetDataPresent1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetDataPresent1/VB/getdatapresent1.vb#1)]"
  syntax:
    content: public bool GetDataPresent (string format);
    parameters:
    - id: format
      type: System.String
      description: The format for which to check. See <xref href="System.Windows.Forms.DataFormats"></xref> for predefined formats.
    return:
      type: System.Boolean
      description: '`true` if data stored in this instance is associated with, or can be converted to, the specified format; otherwise `false`.'
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/IDataObject.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  commentId: M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  id: GetDataPresent(System.Type)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(Type)
  nameWithType: IDataObject.GetDataPresent(Type)
  fullName: IDataObject.GetDataPresent(Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Determines whether data stored in this instance is associated with, or can be converted to, the specified format.
  remarks: "Call this method to determine whether a format exists in this <xref:System.Windows.Forms.DataObject> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>. Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for the formats that are available in this instance.  \n  \n> [!NOTE]\n>  Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format. For example, data stored as Unicode can be converted to text.  \n  \n For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>."
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`). Then it checks whether the specified data is stored in `myDataObject`. If the test evaluates `true`, it displays the result in a message box and displays the data type in a text box. This example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.  \n  \n [!code-cpp[GetDataPresent2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetDataPresent2/CPP/getdatapresent2.cpp#1)]\n [!code-csharp[GetDataPresent2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetDataPresent2/CS/getdatapresent2.cs#1)]\n [!code-vb[GetDataPresent2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetDataPresent2/VB/getdatapresent2.vb#1)]"
  syntax:
    content: public bool GetDataPresent (Type format);
    parameters:
    - id: format
      type: System.Type
      description: A <xref href="System.Type"></xref> representing the format for which to check. See <xref href="System.Windows.Forms.DataFormats"></xref> for predefined formats.
    return:
      type: System.Boolean
      description: '`true` if data stored in this instance is associated with, or can be converted to, the specified format; otherwise, `false`.'
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/IDataObject.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  commentId: M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  id: GetDataPresent(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(String, Boolean)
  nameWithType: IDataObject.GetDataPresent(String, Boolean)
  fullName: IDataObject.GetDataPresent(String, Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Determines whether data stored in this instance is associated with the specified format, using a Boolean value to determine whether to convert the data to the format.
  remarks: "Call this method to determine whether a format exists in this <xref:System.Windows.Forms.DataObject> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>. Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for the formats that are available in this instance.  \n  \n This method returns `true` when:  \n  \n-   The `autoConvert` parameter is `true` and the data is in a format that can be converted to the appropriate format.  \n  \n-   The `autoConvert` parameter is `false` and the data is in the appropriate format.  \n  \n This method returns `false` when:  \n  \n-   The `autoConvert` parameter is `true` and this method cannot find data in the specified format, and it cannot convert data to the specified format, or the data was stored with `autoConvert` set to `false`.  \n  \n-   The `autoConvert` parameter is `false`, and data does not exist in this instance in the specified format.  \n  \n> [!NOTE]\n>  Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format. For example, data stored as Unicode can be converted to text.  \n  \n For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>."
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a data object (`myDataObject`) using a string and the `Text` format. Then it queries the object for data associated with the `Text` format, with the `autoConvert` parameter set to `false`. This trial fails, and the result is displayed in a message box labeled \"Message #1.\" In the second trial, it sets the `autoConvert` parameter to `true`. This trial succeeds, and the result is displayed in a message box labeled \"Message #2.\" The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[GetDataPresent3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetDataPresent3/CPP/getdatapresent3.cpp#1)]\n [!code-csharp[GetDataPresent3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetDataPresent3/CS/getdatapresent3.cs#1)]\n [!code-vb[GetDataPresent3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetDataPresent3/VB/getdatapresent3.vb#1)]"
  syntax:
    content: public bool GetDataPresent (string format, bool autoConvert);
    parameters:
    - id: format
      type: System.String
      description: The format for which to check. See <xref href="System.Windows.Forms.DataFormats"></xref> for predefined formats.
    - id: autoConvert
      type: System.Boolean
      description: '`true` to determine whether data stored in this instance can be converted to the specified format; `false` to check whether the data is in the specified format.'
    return:
      type: System.Boolean
      description: '`true` if the data is in, or can be converted to, the specified format; otherwise, `false`.'
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/IDataObject.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.IDataObject.GetFormats
  commentId: M:System.Windows.Forms.IDataObject.GetFormats
  id: GetFormats
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetFormats()
  nameWithType: IDataObject.GetFormats()
  fullName: IDataObject.GetFormats()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Returns a list of all formats that data stored in this instance is associated with or can be converted to.
  remarks: "Call this method to get the supported data formats before calling the <xref:System.Windows.Forms.IDataObject.GetData%2A> method. See the <xref:System.Windows.Forms.DataFormats> class for the predefined formats.  \n  \n> [!NOTE]\n>  Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format. For example, data stored as Unicode can be converted to text.  \n  \n For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>."
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method. First, it creates a data object (`myDataObject`) using a string and the `Text` format. Then it retrieves all the data formats and data conversion formats in the data object, and displays the resulting list in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[GetFormats1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetFormats1/CPP/getformats1.cpp#1)]\n [!code-csharp[GetFormats1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetFormats1/CS/getformats1.cs#1)]\n [!code-vb[GetFormats1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetFormats1/VB/getformats1.vb#1)]"
  syntax:
    content: public string[] GetFormats ();
    parameters: []
    return:
      type: System.String[]
      description: An array of the names that represents a list of all formats that are supported by the data stored in this object.
  overload: System.Windows.Forms.IDataObject.GetFormats*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/IDataObject.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  commentId: M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  id: GetFormats(System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetFormats(Boolean)
  nameWithType: IDataObject.GetFormats(Boolean)
  fullName: IDataObject.GetFormats(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Gets a list of all formats that data stored in this instance is associated with or can be converted to, using a Boolean value to determine whether to retrieve all formats that the data can be converted to or only native data formats.
  remarks: "Call this method to get the supported data formats before calling the <xref:System.Windows.Forms.IDataObject.GetData%2A> method. See the <xref:System.Windows.Forms.DataFormats> class for the predefined formats.  \n  \n> [!NOTE]\n>  Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format. For example, data stored as Unicode can be converted to text.  \n  \n For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>."
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method. First, it creates a data object (`myDataObject`) using a string and the `UnicodeText` format. Then it makes two queries to get the formats associated with the data. In the first query, it sets the `autoConvert` parameter to `false` : in this case, only the native format of the data is returned. In the second query, it sets the `autoConvert` parameter to `true`, so that it gets the list of formats, including the formats that the data can be converted to. In each case, the resulting list is displayed in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[GetFormats2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetFormats2/CPP/getformats2.cpp#1)]\n [!code-csharp[GetFormats2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetFormats2/CS/getformats2.cs#1)]\n [!code-vb[GetFormats2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetFormats2/VB/getformats2.vb#1)]"
  syntax:
    content: public string[] GetFormats (bool autoConvert);
    parameters:
    - id: autoConvert
      type: System.Boolean
      description: '`true` to retrieve all formats that data stored in this instance is associated with or can be converted to; `false` to retrieve only native data formats.'
    return:
      type: System.String[]
      description: An array of the names that represents a list of all formats that are supported by the data stored in this object.
  overload: System.Windows.Forms.IDataObject.GetFormats*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/IDataObject.xml
  ms.technology:
  - dotnet-winforms
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Forms.IDataObject.SetData(System.Object)
  commentId: M:System.Windows.Forms.IDataObject.SetData(System.Object)
  id: SetData(System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(Object)
  nameWithType: IDataObject.SetData(Object)
  fullName: IDataObject.SetData(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Stores the specified data in this instance, using the class of the data for the format.
  remarks: "The format is derived from the data class.  \n  \n Data stored using this method can be converted to a compatible format when it is retrieved.  \n  \n For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>."
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`). Then it checks whether the specified data is stored in the data object, and displays the result in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[SetData1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData1/CPP/setdata1.cpp#1)]\n [!code-csharp[SetData1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData1/CS/setdata1.cs#1)]\n [!code-vb[SetData1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData1/VB/setdata1.vb#1)]"
  syntax:
    content: public void SetData (object data);
    parameters:
    - id: data
      type: System.Object
      description: The data to store.
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/IDataObject.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  commentId: M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  id: SetData(System.String,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(String, Object)
  nameWithType: IDataObject.SetData(String, Object)
  fullName: IDataObject.SetData(String, Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Stores the specified data and its associated format in this instance.
  remarks: "If you do not know the format of the target application, you can store data in multiple formats using this method.  \n  \n Data stored using this method can be converted to a compatible format when it is retrieved.  \n  \n For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>."
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a data object (`myDataObject`) and stores a string in the object specifying the `UnicodeText` format. Then it retrieves that data stored in the object specifying the `Text` format, so that the data is converted to the `Text` format. The result is displayed in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[SetData2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData2/CPP/setdata2.cpp#1)]\n [!code-csharp[SetData2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData2/CS/setdata2.cs#1)]\n [!code-vb[SetData2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData2/VB/setdata2.vb#1)]"
  syntax:
    content: public void SetData (string format, object data);
    parameters:
    - id: format
      type: System.String
      description: The format associated with the data. See <xref href="System.Windows.Forms.DataFormats"></xref> for predefined formats.
    - id: data
      type: System.Object
      description: The data to store.
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/IDataObject.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  commentId: M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  id: SetData(System.Type,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(Type, Object)
  nameWithType: IDataObject.SetData(Type, Object)
  fullName: IDataObject.SetData(Type, Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Stores the specified data and its associated class type in this instance.
  remarks: "If you do not know the format of the target application, you can store data in multiple formats using this method.  \n  \n Data stored using this method can be converted to a compatible format when it is retrieved.  \n  \n For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>."
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`), using `myType` to specify the data format. Then it checks whether the data of the specified type is stored in the object, and displays the result in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[SetData3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData3/CPP/setdata3.cpp#1)]\n [!code-csharp[SetData3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData3/CS/setdata3.cs#1)]\n [!code-vb[SetData3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData3/VB/setdata3.vb#1)]"
  syntax:
    content: public void SetData (Type format, object data);
    parameters:
    - id: format
      type: System.Type
      description: A <xref href="System.Type"></xref> representing the format associated with the data. See <xref href="System.Windows.Forms.DataFormats"></xref> for predefined formats.
    - id: data
      type: System.Object
      description: The data to store.
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/IDataObject.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  commentId: M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  id: SetData(System.String,System.Boolean,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(String, Boolean, Object)
  nameWithType: IDataObject.SetData(String, Boolean, Object)
  fullName: IDataObject.SetData(String, Boolean, Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Stores the specified data and its associated format in this instance, using a Boolean value to specify whether the data can be converted to another format.
  remarks: "If you do not know the format of the target application, you can store data in multiple formats using this method.  \n  \n For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>."
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a data object (`myDataObject`) and stores a `UnicodeText` string in it, with the `autoConvert` parameter set to `false`. Then it retrieves the format(s) associated with the data stored in the object and displays the result in a message box. The only format associated with the data is the `UnicodeText` format. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[SetData4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData4/CPP/form1.cpp#1)]\n [!code-csharp[SetData4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData4/CS/form1.cs#1)]\n [!code-vb[SetData4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData4/VB/form1.vb#1)]"
  syntax:
    content: public void SetData (string format, bool autoConvert, object data);
    parameters:
    - id: format
      type: System.String
      description: The format associated with the data. See <xref href="System.Windows.Forms.DataFormats"></xref> for predefined formats.
    - id: autoConvert
      type: System.Boolean
      description: '`true` to allow the data to be converted to another format; otherwise, `false`.'
    - id: data
      type: System.Object
      description: The data to store.
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/IDataObject.xml
  ms.technology:
  - dotnet-winforms
  ms.author: kempb
  manager: ghogen
references:
- uid: System.Windows.Forms.IDataObject.GetData(System.String)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(String)
  nameWithType: IDataObject.GetData(String)
  fullName: IDataObject.GetData(String)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.IDataObject.GetData(System.Type)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(Type)
  nameWithType: IDataObject.GetData(Type)
  fullName: IDataObject.GetData(Type)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(String, Boolean)
  nameWithType: IDataObject.GetData(String, Boolean)
  fullName: IDataObject.GetData(String, Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(String)
  nameWithType: IDataObject.GetDataPresent(String)
  fullName: IDataObject.GetDataPresent(String)
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(Type)
  nameWithType: IDataObject.GetDataPresent(Type)
  fullName: IDataObject.GetDataPresent(Type)
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(String, Boolean)
  nameWithType: IDataObject.GetDataPresent(String, Boolean)
  fullName: IDataObject.GetDataPresent(String, Boolean)
- uid: System.Windows.Forms.IDataObject.GetFormats
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats()
  nameWithType: IDataObject.GetFormats()
  fullName: IDataObject.GetFormats()
- uid: System.String[]
  parent: System
  isExternal: false
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats(Boolean)
  nameWithType: IDataObject.GetFormats(Boolean)
  fullName: IDataObject.GetFormats(Boolean)
- uid: System.Windows.Forms.IDataObject.SetData(System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(Object)
  nameWithType: IDataObject.SetData(Object)
  fullName: IDataObject.SetData(Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(String, Object)
  nameWithType: IDataObject.SetData(String, Object)
  fullName: IDataObject.SetData(String, Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(Type, Object)
  nameWithType: IDataObject.SetData(Type, Object)
  fullName: IDataObject.SetData(Type, Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(String, Boolean, Object)
  nameWithType: IDataObject.SetData(String, Boolean, Object)
  fullName: IDataObject.SetData(String, Boolean, Object)
- uid: System.Windows.Forms.IDataObject.GetData*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData
  nameWithType: IDataObject.GetData
  fullName: IDataObject.GetData
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/IDataObject.xml
- uid: System.Windows.Forms.IDataObject.GetDataPresent*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent
  nameWithType: IDataObject.GetDataPresent
  fullName: IDataObject.GetDataPresent
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/IDataObject.xml
- uid: System.Windows.Forms.IDataObject.GetFormats*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats
  nameWithType: IDataObject.GetFormats
  fullName: IDataObject.GetFormats
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/IDataObject.xml
- uid: System.Windows.Forms.IDataObject.SetData*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData
  nameWithType: IDataObject.SetData
  fullName: IDataObject.SetData
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/IDataObject.xml
