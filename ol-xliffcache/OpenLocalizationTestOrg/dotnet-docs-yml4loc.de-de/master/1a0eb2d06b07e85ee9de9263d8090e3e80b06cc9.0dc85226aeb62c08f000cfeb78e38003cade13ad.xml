{"nodes":[{"content":"The execution context for an asynchronous activity.","nodes":[{"pos":[0,51],"content":"The execution context for an asynchronous activity.","nodes":[{"content":"The execution context for an asynchronous activity.","pos":[0,51]}]}],"pos":[616,668],"yaml":true},{"content":"This is a sealed class and is derived from <xref:System.Activities.CodeActivityContext>.","nodes":[{"pos":[0,88],"content":"This is a sealed class and is derived from <xref:System.Activities.CodeActivityContext>.","nodes":[{"content":"This is a sealed class and is derived from <ph id=\"ph1\">&lt;xref:System.Activities.CodeActivityContext&gt;</ph>.","pos":[0,88],"source":"This is a sealed class and is derived from <xref:System.Activities.CodeActivityContext>."}]}],"pos":[679,768],"yaml":true,"extradata":"MT"},{"content":"Gets a value that indicates whether the currently executing <xref href=\"System.Activities.AsyncCodeActivity\"></xref> is to be canceled.","nodes":[{"pos":[0,135],"content":"Gets a value that indicates whether the currently executing <ph id=\"ph1\">&lt;xref href=\"System.Activities.AsyncCodeActivity\"&gt;&lt;/xref&gt;</ph> is to be canceled.","source":"Gets a value that indicates whether the currently executing <xref href=\"System.Activities.AsyncCodeActivity\"></xref> is to be canceled."}],"pos":[3768,3904],"yaml":true},{"content":"`true` if the currently executing <xref href=\"System.Activities.AsyncCodeActivity\"></xref> is to be canceled; otherwise, `false`.","nodes":[{"pos":[0,129],"content":"<ph id=\"ph1\">`true`</ph> if the currently executing <ph id=\"ph2\">&lt;xref href=\"System.Activities.AsyncCodeActivity\"&gt;&lt;/xref&gt;</ph> is to be canceled; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the currently executing <xref href=\"System.Activities.AsyncCodeActivity\"></xref> is to be canceled; otherwise, `false`."}],"pos":[4030,4162],"yaml":true},{"content":"Marks the current activity instance as canceled.","nodes":[{"pos":[0,48],"content":"Marks the current activity instance as canceled.","nodes":[{"content":"Marks the current activity instance as canceled.","pos":[0,48]}]}],"pos":[5247,5296],"yaml":true},{"content":"Gets or sets a user-defined object associated with the current asynchronous activity.","nodes":[{"pos":[0,85],"content":"Gets or sets a user-defined object associated with the current asynchronous activity.","nodes":[{"content":"Gets or sets a user-defined object associated with the current asynchronous activity.","pos":[0,85]}]}],"pos":[6419,6505],"yaml":true},{"content":"The user-defined object.","nodes":[{"pos":[0,24],"content":"The user-defined object.","nodes":[{"content":"The user-defined object.","pos":[0,24]}]}],"pos":[6623,6648],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.AsyncCodeActivityContext\n  commentId: T:System.Activities.AsyncCodeActivityContext\n  id: AsyncCodeActivityContext\n  children:\n  - System.Activities.AsyncCodeActivityContext.IsCancellationRequested\n  - System.Activities.AsyncCodeActivityContext.MarkCanceled\n  - System.Activities.AsyncCodeActivityContext.UserState\n  langs:\n  - csharp\n  name: AsyncCodeActivityContext\n  nameWithType: AsyncCodeActivityContext\n  fullName: System.Activities.AsyncCodeActivityContext\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: The execution context for an asynchronous activity.\n  remarks: This is a sealed class and is derived from <xref:System.Activities.CodeActivityContext>.\n  syntax:\n    content: 'public sealed class AsyncCodeActivityContext : System.Activities.CodeActivityContext'\n  inheritance:\n  - System.Object\n  - System.Activities.ActivityContext\n  - System.Activities.CodeActivityContext\n  implements: []\n  inheritedMembers:\n  - System.Activities.ActivityContext.ActivityInstanceId\n  - System.Activities.ActivityContext.DataContext\n  - System.Activities.ActivityContext.GetExtension``1\n  - System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)\n  - System.Activities.ActivityContext.GetValue(System.Activities.Argument)\n  - System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)\n  - System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument{``0})\n  - System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument{``0})\n  - System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)\n  - System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument{``0})\n  - System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)\n  - System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument{``0},``0)\n  - System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument{``0},``0)\n  - System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)\n  - System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument{``0},``0)\n  - System.Activities.ActivityContext.WorkflowInstanceId\n  - System.Activities.CodeActivityContext.GetProperty``1\n  - System.Activities.CodeActivityContext.Track(System.Activities.Tracking.CustomTrackingRecord)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/AsyncCodeActivityContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.AsyncCodeActivityContext.IsCancellationRequested\n  commentId: P:System.Activities.AsyncCodeActivityContext.IsCancellationRequested\n  id: IsCancellationRequested\n  parent: System.Activities.AsyncCodeActivityContext\n  langs:\n  - csharp\n  name: IsCancellationRequested\n  nameWithType: AsyncCodeActivityContext.IsCancellationRequested\n  fullName: AsyncCodeActivityContext.IsCancellationRequested\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets a value that indicates whether the currently executing <xref href=\"System.Activities.AsyncCodeActivity\"></xref> is to be canceled.\n  syntax:\n    content: public bool IsCancellationRequested { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the currently executing <xref href=\"System.Activities.AsyncCodeActivity\"></xref> is to be canceled; otherwise, `false`.'\n  overload: System.Activities.AsyncCodeActivityContext.IsCancellationRequested*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/AsyncCodeActivityContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.AsyncCodeActivityContext.MarkCanceled\n  commentId: M:System.Activities.AsyncCodeActivityContext.MarkCanceled\n  id: MarkCanceled\n  parent: System.Activities.AsyncCodeActivityContext\n  langs:\n  - csharp\n  name: MarkCanceled()\n  nameWithType: AsyncCodeActivityContext.MarkCanceled()\n  fullName: AsyncCodeActivityContext.MarkCanceled()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Marks the current activity instance as canceled.\n  syntax:\n    content: public void MarkCanceled ();\n    parameters: []\n  overload: System.Activities.AsyncCodeActivityContext.MarkCanceled*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/AsyncCodeActivityContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.AsyncCodeActivityContext.UserState\n  commentId: P:System.Activities.AsyncCodeActivityContext.UserState\n  id: UserState\n  parent: System.Activities.AsyncCodeActivityContext\n  langs:\n  - csharp\n  name: UserState\n  nameWithType: AsyncCodeActivityContext.UserState\n  fullName: AsyncCodeActivityContext.UserState\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets or sets a user-defined object associated with the current asynchronous activity.\n  syntax:\n    content: public object UserState { get; set; }\n    return:\n      type: System.Object\n      description: The user-defined object.\n  overload: System.Activities.AsyncCodeActivityContext.UserState*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/AsyncCodeActivityContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.CodeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityContext\n  nameWithType: CodeActivityContext\n  fullName: System.Activities.CodeActivityContext\n- uid: System.Activities.AsyncCodeActivityContext.IsCancellationRequested\n  parent: System.Activities.AsyncCodeActivityContext\n  isExternal: false\n  name: IsCancellationRequested\n  nameWithType: AsyncCodeActivityContext.IsCancellationRequested\n  fullName: AsyncCodeActivityContext.IsCancellationRequested\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.AsyncCodeActivityContext.MarkCanceled\n  parent: System.Activities.AsyncCodeActivityContext\n  isExternal: false\n  name: MarkCanceled()\n  nameWithType: AsyncCodeActivityContext.MarkCanceled()\n  fullName: AsyncCodeActivityContext.MarkCanceled()\n- uid: System.Activities.AsyncCodeActivityContext.UserState\n  parent: System.Activities.AsyncCodeActivityContext\n  isExternal: false\n  name: UserState\n  nameWithType: AsyncCodeActivityContext.UserState\n  fullName: AsyncCodeActivityContext.UserState\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.AsyncCodeActivityContext.IsCancellationRequested*\n  parent: System.Activities.AsyncCodeActivityContext\n  isExternal: false\n  name: IsCancellationRequested\n  nameWithType: AsyncCodeActivityContext.IsCancellationRequested\n  fullName: AsyncCodeActivityContext.IsCancellationRequested\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/AsyncCodeActivityContext.xml\n- uid: System.Activities.AsyncCodeActivityContext.MarkCanceled*\n  parent: System.Activities.AsyncCodeActivityContext\n  isExternal: false\n  name: MarkCanceled\n  nameWithType: AsyncCodeActivityContext.MarkCanceled\n  fullName: AsyncCodeActivityContext.MarkCanceled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/AsyncCodeActivityContext.xml\n- uid: System.Activities.AsyncCodeActivityContext.UserState*\n  parent: System.Activities.AsyncCodeActivityContext\n  isExternal: false\n  name: UserState\n  nameWithType: AsyncCodeActivityContext.UserState\n  fullName: AsyncCodeActivityContext.UserState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/AsyncCodeActivityContext.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Activities.ActivityContext.ActivityInstanceId\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: ActivityInstanceId\n  nameWithType: ActivityContext.ActivityInstanceId\n  fullName: ActivityContext.ActivityInstanceId\n- uid: System.Activities.ActivityContext.DataContext\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: DataContext\n  nameWithType: ActivityContext.DataContext\n  fullName: ActivityContext.DataContext\n- uid: System.Activities.ActivityContext.GetExtension``1\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: GetExtension<T>()\n  nameWithType: ActivityContext.GetExtension<T>()\n  fullName: ActivityContext.GetExtension<T>()\n- uid: System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: GetLocation<T>(LocationReference)\n  nameWithType: ActivityContext.GetLocation<T>(LocationReference)\n  fullName: ActivityContext.GetLocation<T>(LocationReference)\n- uid: System.Activities.ActivityContext.GetValue(System.Activities.Argument)\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: GetValue(Argument)\n  nameWithType: ActivityContext.GetValue(Argument)\n  fullName: ActivityContext.GetValue(Argument)\n- uid: System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: GetValue(RuntimeArgument)\n  nameWithType: ActivityContext.GetValue(RuntimeArgument)\n  fullName: ActivityContext.GetValue(RuntimeArgument)\n- uid: System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument{``0})\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: GetValue<T>(InArgument<T>)\n  nameWithType: ActivityContext.GetValue<T>(InArgument<T>)\n  fullName: ActivityContext.GetValue<T>(InArgument<T>)\n- uid: System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument{``0})\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: GetValue<T>(InOutArgument<T>)\n  nameWithType: ActivityContext.GetValue<T>(InOutArgument<T>)\n  fullName: ActivityContext.GetValue<T>(InOutArgument<T>)\n- uid: System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: GetValue<T>(LocationReference)\n  nameWithType: ActivityContext.GetValue<T>(LocationReference)\n  fullName: ActivityContext.GetValue<T>(LocationReference)\n- uid: System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument{``0})\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: GetValue<T>(OutArgument<T>)\n  nameWithType: ActivityContext.GetValue<T>(OutArgument<T>)\n  fullName: ActivityContext.GetValue<T>(OutArgument<T>)\n- uid: System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: SetValue(Argument, Object)\n  nameWithType: ActivityContext.SetValue(Argument, Object)\n  fullName: ActivityContext.SetValue(Argument, Object)\n- uid: System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument{``0},``0)\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: SetValue<T>(InArgument<T>, T)\n  nameWithType: ActivityContext.SetValue<T>(InArgument<T>, T)\n  fullName: ActivityContext.SetValue<T>(InArgument<T>, T)\n- uid: System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument{``0},``0)\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: SetValue<T>(InOutArgument<T>, T)\n  nameWithType: ActivityContext.SetValue<T>(InOutArgument<T>, T)\n  fullName: ActivityContext.SetValue<T>(InOutArgument<T>, T)\n- uid: System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: SetValue<T>(LocationReference, T)\n  nameWithType: ActivityContext.SetValue<T>(LocationReference, T)\n  fullName: ActivityContext.SetValue<T>(LocationReference, T)\n- uid: System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument{``0},``0)\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: SetValue<T>(OutArgument<T>, T)\n  nameWithType: ActivityContext.SetValue<T>(OutArgument<T>, T)\n  fullName: ActivityContext.SetValue<T>(OutArgument<T>, T)\n- uid: System.Activities.ActivityContext.WorkflowInstanceId\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: WorkflowInstanceId\n  nameWithType: ActivityContext.WorkflowInstanceId\n  fullName: ActivityContext.WorkflowInstanceId\n- uid: System.Activities.CodeActivityContext.GetProperty``1\n  parent: System.Activities.CodeActivityContext\n  isExternal: false\n  name: GetProperty<THandle>()\n  nameWithType: CodeActivityContext.GetProperty<THandle>()\n  fullName: CodeActivityContext.GetProperty<THandle>()\n- uid: System.Activities.CodeActivityContext.Track(System.Activities.Tracking.CustomTrackingRecord)\n  parent: System.Activities.CodeActivityContext\n  isExternal: false\n  name: Track(CustomTrackingRecord)\n  nameWithType: CodeActivityContext.Track(CustomTrackingRecord)\n  fullName: CodeActivityContext.Track(CustomTrackingRecord)\n"}