{"nodes":[{"content":"Enables packet routing and the use of one-way methods.","nodes":[{"pos":[0,54],"content":"Enables packet routing and the use of one-way methods.","nodes":[{"content":"Enables packet routing and the use of one-way methods.","pos":[0,54]}]}],"pos":[1714,1769],"yaml":true},{"content":"To enable packet routing a *one-way conversion* layer is required, which this class provides. This class is a binding in the stack of bindings that performs a message-level shape change called `OneWayBindingElement`. This shape change can take a <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or a <xref:System.ServiceModel.Channels.IRequestChannel> and expose it as a <xref:System.ServiceModel.Channels.IInputChannel>, or conversely it can take a <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or a <xref:System.ServiceModel.Channels.IRequestChannel> and expose it as a <xref:System.ServiceModel.Channels.IOutputChannel>. A user can create a custom binding that layers this binding over a session-aware or request-reply transport to make it packet routable.  \n  \n This class is also useful when you want to expose one-way methods in a more native fashion. More transformations can be applied over this layer, such as Composite Duplex and Reliable Messaging.","nodes":[{"pos":[0,780],"content":"To enable packet routing a *one-way conversion* layer is required, which this class provides. This class is a binding in the stack of bindings that performs a message-level shape change called `OneWayBindingElement`. This shape change can take a <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or a <xref:System.ServiceModel.Channels.IRequestChannel> and expose it as a <xref:System.ServiceModel.Channels.IInputChannel>, or conversely it can take a <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or a <xref:System.ServiceModel.Channels.IRequestChannel> and expose it as a <xref:System.ServiceModel.Channels.IOutputChannel>. A user can create a custom binding that layers this binding over a session-aware or request-reply transport to make it packet routable.","nodes":[{"content":"To enable packet routing a <bpt id=\"p1\">*</bpt>one-way conversion<ept id=\"p1\">*</ept> layer is required, which this class provides.","pos":[0,93],"source":"To enable packet routing a *one-way conversion* layer is required, which this class provides."},{"content":"This class is a binding in the stack of bindings that performs a message-level shape change called <ph id=\"ph1\">`OneWayBindingElement`</ph>.","pos":[94,216],"source":" This class is a binding in the stack of bindings that performs a message-level shape change called `OneWayBindingElement`."},{"content":"This shape change can take a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel&gt;</ph> or a <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.IRequestChannel&gt;</ph> and expose it as a <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph>, or conversely it can take a <ph id=\"ph4\">&lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel&gt;</ph> or a <ph id=\"ph5\">&lt;xref:System.ServiceModel.Channels.IRequestChannel&gt;</ph> and expose it as a <ph id=\"ph6\">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph>.","pos":[217,644],"source":" This shape change can take a <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or a <xref:System.ServiceModel.Channels.IRequestChannel> and expose it as a <xref:System.ServiceModel.Channels.IInputChannel>, or conversely it can take a <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or a <xref:System.ServiceModel.Channels.IRequestChannel> and expose it as a <xref:System.ServiceModel.Channels.IOutputChannel>."},{"content":"A user can create a custom binding that layers this binding over a session-aware or request-reply transport to make it packet routable.","pos":[645,780]}]},{"pos":[787,980],"content":"This class is also useful when you want to expose one-way methods in a more native fashion. More transformations can be applied over this layer, such as Composite Duplex and Reliable Messaging.","nodes":[{"content":"This class is also useful when you want to expose one-way methods in a more native fashion. More transformations can be applied over this layer, such as Composite Duplex and Reliable Messaging.","pos":[0,193],"nodes":[{"content":"This class is also useful when you want to expose one-way methods in a more native fashion.","pos":[0,91]},{"content":"More transformations can be applied over this layer, such as Composite Duplex and Reliable Messaging.","pos":[92,193]}]}]}],"pos":[1780,2765],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.OneWayBindingElement\"></xref> class.","nodes":[{"pos":[0,111],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.OneWayBindingElement\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.OneWayBindingElement\"></xref> class."}],"pos":[4412,4524],"yaml":true},{"content":"Initializes a channel factory for producing one-way channels from the binding context.","nodes":[{"pos":[0,86],"content":"Initializes a channel factory for producing one-way channels from the binding context.","nodes":[{"content":"Initializes a channel factory for producing one-way channels from the binding context.","pos":[0,86]}]}],"pos":[5963,6050],"yaml":true},{"content":"This method creates a channel factory, which is used to create a channel that processes outgoing messages for this binding.","nodes":[{"pos":[0,123],"content":"This method creates a channel factory, which is used to create a channel that processes outgoing messages for this binding.","nodes":[{"content":"This method creates a channel factory, which is used to create a channel that processes outgoing messages for this binding.","pos":[0,123]}]}],"pos":[6061,6185],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides context for the binding element.","nodes":[{"pos":[0,115],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph> that provides context for the binding element.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides context for the binding element."}],"pos":[6473,6589],"yaml":true},{"content":"The type of channel that the factory builds.","nodes":[{"pos":[0,44],"content":"The type of channel that the factory builds.","nodes":[{"content":"The type of channel that the factory builds.","pos":[0,44]}]}],"pos":[6647,6692],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"></xref> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> initialized from the <code>context</code>.","nodes":[{"pos":[0,181],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"&gt;&lt;/xref&gt;</ph> of type <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.IChannel\"&gt;&lt;/xref&gt;</ph> initialized from the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">context</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"></xref> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> initialized from the <code>context</code>."}],"pos":[6782,6964],"yaml":true},{"content":"<code>context</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>context</code> is `null`."}],"pos":[7166,7198],"yaml":true},{"content":"The type of <code>TChannel</code> is not <xref href=\"System.ServiceModel.Channels.IOutputChannel\"></xref>.","nodes":[{"pos":[0,106],"content":"The type of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.IOutputChannel\"&gt;&lt;/xref&gt;</ph>.","source":"The type of <code>TChannel</code> is not <xref href=\"System.ServiceModel.Channels.IOutputChannel\"></xref>."}],"pos":[7292,7399],"yaml":true},{"content":"The inner binding element does not support <xref href=\"System.ServiceModel.Channels.IDuplexSessionChannel\"></xref> or <xref href=\"System.ServiceModel.Channels.IRequestChannel\"></xref>.","nodes":[{"pos":[0,184],"content":"The inner binding element does not support <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IDuplexSessionChannel\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.IRequestChannel\"&gt;&lt;/xref&gt;</ph>.","source":"The inner binding element does not support <xref href=\"System.ServiceModel.Channels.IDuplexSessionChannel\"></xref> or <xref href=\"System.ServiceModel.Channels.IRequestChannel\"></xref>."}],"pos":[7509,7694],"yaml":true},{"content":"Initializes a channel listener for accepting one-way channels.","nodes":[{"pos":[0,62],"content":"Initializes a channel listener for accepting one-way channels.","nodes":[{"content":"Initializes a channel listener for accepting one-way channels.","pos":[0,62]}]}],"pos":[8979,9042],"yaml":true},{"content":"This method creates a channel listener, which is used to create a channel that processes incoming messages for this binding.","nodes":[{"pos":[0,124],"content":"This method creates a channel listener, which is used to create a channel that processes incoming messages for this binding.","nodes":[{"content":"This method creates a channel listener, which is used to create a channel that processes incoming messages for this binding.","pos":[0,124]}]}],"pos":[9053,9178],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides context for the binding element.","nodes":[{"pos":[0,115],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph> that provides context for the binding element.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides context for the binding element."}],"pos":[9532,9648],"yaml":true},{"content":"The type of channel that the listener is built to accept.","nodes":[{"pos":[0,57],"content":"The type of channel that the listener is built to accept.","nodes":[{"content":"The type of channel that the listener is built to accept.","pos":[0,57]}]}],"pos":[9706,9764],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> initialized from the <code>context</code>.","nodes":[{"pos":[0,182],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelListener`1\"&gt;&lt;/xref&gt;</ph> of type <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.IChannel\"&gt;&lt;/xref&gt;</ph> initialized from the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">context</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> initialized from the <code>context</code>."}],"pos":[9855,10038],"yaml":true},{"content":"<code>context</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>context</code> is `null`."}],"pos":[10241,10273],"yaml":true},{"content":"The type of <code>TChannel</code> is not <xref href=\"System.ServiceModel.Channels.IInputChannel\"></xref>.","nodes":[{"pos":[0,105],"content":"The type of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.IInputChannel\"&gt;&lt;/xref&gt;</ph>.","source":"The type of <code>TChannel</code> is not <xref href=\"System.ServiceModel.Channels.IInputChannel\"></xref>."}],"pos":[10367,10473],"yaml":true},{"content":"The inner binding element does not support <xref href=\"System.ServiceModel.Channels.IDuplexSessionChannel\"></xref> or <xref href=\"System.ServiceModel.Channels.IRequestChannel\"></xref>.","nodes":[{"pos":[0,184],"content":"The inner binding element does not support <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IDuplexSessionChannel\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.IRequestChannel\"&gt;&lt;/xref&gt;</ph>.","source":"The inner binding element does not support <xref href=\"System.ServiceModel.Channels.IDuplexSessionChannel\"></xref> or <xref href=\"System.ServiceModel.Channels.IRequestChannel\"></xref>."}],"pos":[10583,10768],"yaml":true},{"content":"Gets a value that indicates whether a channel factory of the specified type can be built.","nodes":[{"pos":[0,89],"content":"Gets a value that indicates whether a channel factory of the specified type can be built.","nodes":[{"content":"Gets a value that indicates whether a channel factory of the specified type can be built.","pos":[0,89]}]}],"pos":[12065,12155],"yaml":true},{"content":"You should call this method before trying to create a channel factory.  \n  \n This method returns `true` when `TChannel` is an <xref:System.ServiceModel.Channels.IOutputChannel>, and the binding below the present one in the binding stack is an <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or <xref:System.ServiceModel.Channels.IRequestChannel>.","nodes":[{"pos":[0,70],"content":"You should call this method before trying to create a channel factory.","nodes":[{"content":"You should call this method before trying to create a channel factory.","pos":[0,70]}]},{"pos":[77,356],"content":"This method returns <ph id=\"ph1\">`true`</ph> when <ph id=\"ph2\">`TChannel`</ph> is an <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph>, and the binding below the present one in the binding stack is an <ph id=\"ph4\">&lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel&gt;</ph> or <ph id=\"ph5\">&lt;xref:System.ServiceModel.Channels.IRequestChannel&gt;</ph>.","source":"This method returns `true` when `TChannel` is an <xref:System.ServiceModel.Channels.IOutputChannel>, and the binding below the present one in the binding stack is an <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or <xref:System.ServiceModel.Channels.IRequestChannel>."}],"pos":[12166,12527],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides context for the binding element.","nodes":[{"pos":[0,115],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph> that provides context for the binding element.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides context for the binding element."}],"pos":[12768,12884],"yaml":true},{"content":"The type of channel factory to build.","nodes":[{"pos":[0,37],"content":"The type of channel factory to build.","nodes":[{"content":"The type of channel factory to build.","pos":[0,37]}]}],"pos":[12942,12980],"yaml":true},{"content":"`true` if a channel factory of the specified type can be built; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,107],"content":"`true` if a channel factory of the specified type can be built; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if a channel factory of the specified type can be built; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,83],"source":"`true` if a channel factory of the specified type can be built; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[84,107],"source":" The default is `false`."}]}],"pos":[13038,13148],"yaml":true},{"content":"<code>context</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>context</code> is `null`."}],"pos":[13353,13385],"yaml":true},{"content":"Gets a value that indicates whether a channel listener of the specified type can be built.","nodes":[{"pos":[0,90],"content":"Gets a value that indicates whether a channel listener of the specified type can be built.","nodes":[{"content":"Gets a value that indicates whether a channel listener of the specified type can be built.","pos":[0,90]}]}],"pos":[14688,14779],"yaml":true},{"content":"You should call this method before trying to create a channel listener.  \n  \n This method returns `true` when `TChannel` is an <xref:System.ServiceModel.Channels.IInputChannel>, and the binding below the present one in the binding stack is an <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or <xref:System.ServiceModel.Channels.IReplyChannel>.","nodes":[{"pos":[0,71],"content":"You should call this method before trying to create a channel listener.","nodes":[{"content":"You should call this method before trying to create a channel listener.","pos":[0,71]}]},{"pos":[78,354],"content":"This method returns <ph id=\"ph1\">`true`</ph> when <ph id=\"ph2\">`TChannel`</ph> is an <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph>, and the binding below the present one in the binding stack is an <ph id=\"ph4\">&lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel&gt;</ph> or <ph id=\"ph5\">&lt;xref:System.ServiceModel.Channels.IReplyChannel&gt;</ph>.","source":"This method returns `true` when `TChannel` is an <xref:System.ServiceModel.Channels.IInputChannel>, and the binding below the present one in the binding stack is an <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or <xref:System.ServiceModel.Channels.IReplyChannel>."}],"pos":[14790,15149],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides context for the binding element.","nodes":[{"pos":[0,115],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph> that provides context for the binding element.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides context for the binding element."}],"pos":[15455,15571],"yaml":true},{"content":"The type of channel listener to build.","nodes":[{"pos":[0,38],"content":"The type of channel listener to build.","nodes":[{"content":"The type of channel listener to build.","pos":[0,38]}]}],"pos":[15629,15668],"yaml":true},{"content":"`true` if a channel listener of the specified type can be built; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,108],"content":"`true` if a channel listener of the specified type can be built; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if a channel listener of the specified type can be built; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,84],"source":"`true` if a channel listener of the specified type can be built; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[85,108],"source":" The default is `false`."}]}],"pos":[15726,15837],"yaml":true},{"content":"<code>context</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>context</code> is `null`."}],"pos":[16043,16075],"yaml":true},{"content":"Gets the channel pool settings.","nodes":[{"pos":[0,31],"content":"Gets the channel pool settings.","nodes":[{"content":"Gets the channel pool settings.","pos":[0,31]}]}],"pos":[17134,17166],"yaml":true},{"content":"A <xref href=\"System.ServiceModel.Channels.ChannelPoolSettings\"></xref> object that contains properties of the channel pool associated with this binding element.","nodes":[{"pos":[0,161],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.ChannelPoolSettings\"&gt;&lt;/xref&gt;</ph> object that contains properties of the channel pool associated with this binding element.","source":"A <xref href=\"System.ServiceModel.Channels.ChannelPoolSettings\"></xref> object that contains properties of the channel pool associated with this binding element."}],"pos":[17371,17533],"yaml":true},{"content":"Clones an instance of this class.","nodes":[{"pos":[0,33],"content":"Clones an instance of this class.","nodes":[{"content":"Clones an instance of this class.","pos":[0,33]}]}],"pos":[18612,18646],"yaml":true},{"content":"A cloned copy of this instance of this class.","nodes":[{"pos":[0,45],"content":"A cloned copy of this instance of this class.","nodes":[{"content":"A cloned copy of this instance of this class.","pos":[0,45]}]}],"pos":[18845,18891],"yaml":true},{"content":"Gets properties from the binding stack, if present.","nodes":[{"pos":[0,51],"content":"Gets properties from the binding stack, if present.","nodes":[{"content":"Gets properties from the binding stack, if present.","pos":[0,51]}]}],"pos":[20187,20239],"yaml":true},{"content":"This method receives a binding context as an input parameter, which represents the stack of binding elements.  \n  \n Each binding element in the stack can handle the inquiry itself or delegate the inquiry, or a combination of the two. Each binding element can modify the context if it delegates the inquiry. However, a transport binding element handles the inquiry itself.  \n  \n This method is implemented by binding elements as well as by the runtime objects, such as <xref:System.ServiceModel.Channels.IChannelFactory>, <xref:System.ServiceModel.Channels.IChannelListener>, and <xref:System.ServiceModel.Channels.IChannel>.","nodes":[{"pos":[0,109],"content":"This method receives a binding context as an input parameter, which represents the stack of binding elements.","nodes":[{"content":"This method receives a binding context as an input parameter, which represents the stack of binding elements.","pos":[0,109]}]},{"pos":[116,371],"content":"Each binding element in the stack can handle the inquiry itself or delegate the inquiry, or a combination of the two. Each binding element can modify the context if it delegates the inquiry. However, a transport binding element handles the inquiry itself.","nodes":[{"content":"Each binding element in the stack can handle the inquiry itself or delegate the inquiry, or a combination of the two. Each binding element can modify the context if it delegates the inquiry. However, a transport binding element handles the inquiry itself.","pos":[0,255],"nodes":[{"content":"Each binding element in the stack can handle the inquiry itself or delegate the inquiry, or a combination of the two.","pos":[0,117]},{"content":"Each binding element can modify the context if it delegates the inquiry.","pos":[118,190]},{"content":"However, a transport binding element handles the inquiry itself.","pos":[191,255]}]}]},{"pos":[378,624],"content":"This method is implemented by binding elements as well as by the runtime objects, such as <xref:System.ServiceModel.Channels.IChannelFactory>, <xref:System.ServiceModel.Channels.IChannelListener>, and <xref:System.ServiceModel.Channels.IChannel>.","nodes":[{"content":"This method is implemented by binding elements as well as by the runtime objects, such as <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.IChannel&gt;</ph>.","pos":[0,246],"source":"This method is implemented by binding elements as well as by the runtime objects, such as <xref:System.ServiceModel.Channels.IChannelFactory>, <xref:System.ServiceModel.Channels.IChannelListener>, and <xref:System.ServiceModel.Channels.IChannel>."}]}],"pos":[20250,20881],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides context for the binding element.","nodes":[{"pos":[0,115],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph> that provides context for the binding element.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides context for the binding element."}],"pos":[21119,21235],"yaml":true},{"content":"Type of the property.","nodes":[{"pos":[0,21],"content":"Type of the property.","nodes":[{"content":"Type of the property.","pos":[0,21]}]}],"pos":[21286,21308],"yaml":true},{"content":"A <code>T</code> object from the binding stack, if present.","nodes":[{"pos":[0,59],"content":"A <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> object from the binding stack, if present.","source":"A <code>T</code> object from the binding stack, if present."}],"pos":[21353,21413],"yaml":true},{"content":"Gets or sets the maximum number of channels that can be accepted.","nodes":[{"pos":[0,65],"content":"Gets or sets the maximum number of channels that can be accepted.","nodes":[{"content":"Gets or sets the maximum number of channels that can be accepted.","pos":[0,65]}]}],"pos":[22567,22633],"yaml":true},{"content":"The maximum number of channels that can be accepted. The default value is 10.","nodes":[{"pos":[0,77],"content":"The maximum number of channels that can be accepted. The default value is 10.","nodes":[{"content":"The maximum number of channels that can be accepted. The default value is 10.","pos":[0,77],"nodes":[{"content":"The maximum number of channels that can be accepted.","pos":[0,52]},{"content":"The default value is 10.","pos":[53,77]}]}]}],"pos":[22757,22835],"yaml":true},{"content":"Gets or sets a value that indicates whether packet routing is enabled.","nodes":[{"pos":[0,70],"content":"Gets or sets a value that indicates whether packet routing is enabled.","nodes":[{"content":"Gets or sets a value that indicates whether packet routing is enabled.","pos":[0,70]}]}],"pos":[23981,24052],"yaml":true},{"content":"This class can optionally use a message-level protocol that transforms a `DuplexSessionChannel`/`RequestChannel`/`ReplyChannel` to a one-way channel and allows the messages from the transformed channel to be routed. Usage of this protocol is controlled by the <xref:System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable%2A> property.  \n  \n When this property is `true`, upon `DuplexSessionChannel` initiation (for example, Buffered TCP and Named Pipes), this class adds a message header (MustUnderstand = `false`, signed if security is enabled) that semantically means \"you can packet-route this channel\". On the acceptor side, when this property is `true`, this class looks for this header in the first message received on the channel. If this header does not exist, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] faults the channel. If the header exists, then [!INCLUDE[indigo2](~/includes/indigo2-md.md)] funnels the new channel into a shared input channel.  \n  \n To transform a Request-Reply channel (for example, TCP Streaming or HTTP) when this property is `true`, this header is added to every request to signal that the request can be packet routed. [!INCLUDE[indigo2](~/includes/indigo2-md.md)] also verifies that `SendRequest` returns `null` and replies with `null` on the server.","nodes":[{"pos":[0,344],"content":"This class can optionally use a message-level protocol that transforms a `DuplexSessionChannel`/`RequestChannel`/`ReplyChannel` to a one-way channel and allows the messages from the transformed channel to be routed. Usage of this protocol is controlled by the <xref:System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable%2A> property.","nodes":[{"content":"This class can optionally use a message-level protocol that transforms a <ph id=\"ph1\">`DuplexSessionChannel`</ph><ph id=\"ph2\">/</ph><ph id=\"ph3\">`RequestChannel`</ph><ph id=\"ph4\">/</ph><ph id=\"ph5\">`ReplyChannel`</ph> to a one-way channel and allows the messages from the transformed channel to be routed.","pos":[0,215],"source":"This class can optionally use a message-level protocol that transforms a `DuplexSessionChannel`/`RequestChannel`/`ReplyChannel` to a one-way channel and allows the messages from the transformed channel to be routed."},{"content":"Usage of this protocol is controlled by the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable%2A&gt;</ph> property.","pos":[216,344],"source":" Usage of this protocol is controlled by the <xref:System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable%2A> property."}]},{"pos":[351,970],"content":"When this property is `true`, upon `DuplexSessionChannel` initiation (for example, Buffered TCP and Named Pipes), this class adds a message header (MustUnderstand = `false`, signed if security is enabled) that semantically means \"you can packet-route this channel\". On the acceptor side, when this property is `true`, this class looks for this header in the first message received on the channel. If this header does not exist, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] faults the channel. If the header exists, then [!INCLUDE[indigo2](~/includes/indigo2-md.md)] funnels the new channel into a shared input channel.","nodes":[{"content":"When this property is <ph id=\"ph1\">`true`</ph>, upon <ph id=\"ph2\">`DuplexSessionChannel`</ph> initiation (for example, Buffered TCP and Named Pipes), this class adds a message header (MustUnderstand = <ph id=\"ph3\">`false`</ph>, signed if security is enabled) that semantically means \"you can packet-route this channel\".","pos":[0,265],"source":"When this property is `true`, upon `DuplexSessionChannel` initiation (for example, Buffered TCP and Named Pipes), this class adds a message header (MustUnderstand = `false`, signed if security is enabled) that semantically means \"you can packet-route this channel\"."},{"content":"On the acceptor side, when this property is <ph id=\"ph1\">`true`</ph>, this class looks for this header in the first message received on the channel.","pos":[266,396],"source":" On the acceptor side, when this property is `true`, this class looks for this header in the first message received on the channel."},{"content":"If this header does not exist, <ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> faults the channel.","pos":[397,493],"source":" If this header does not exist, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] faults the channel."},{"content":"If the header exists, then <ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> funnels the new channel into a shared input channel.","pos":[494,619],"source":" If the header exists, then [!INCLUDE[indigo2](~/includes/indigo2-md.md)] funnels the new channel into a shared input channel."}]},{"pos":[977,1300],"content":"To transform a Request-Reply channel (for example, TCP Streaming or HTTP) when this property is `true`, this header is added to every request to signal that the request can be packet routed. [!INCLUDE[indigo2](~/includes/indigo2-md.md)] also verifies that `SendRequest` returns `null` and replies with `null` on the server.","nodes":[{"content":"To transform a Request-Reply channel (for example, TCP Streaming or HTTP) when this property is <ph id=\"ph1\">`true`</ph>, this header is added to every request to signal that the request can be packet routed.","pos":[0,190],"source":"To transform a Request-Reply channel (for example, TCP Streaming or HTTP) when this property is `true`, this header is added to every request to signal that the request can be packet routed."},{"content":"<ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> also verifies that <ph id=\"ph2\">`SendRequest`</ph> returns <ph id=\"ph3\">`null`</ph> and replies with <ph id=\"ph4\">`null`</ph> on the server.","pos":[191,323],"source":"[!INCLUDE[indigo2](~/includes/indigo2-md.md)] also verifies that `SendRequest` returns `null` and replies with `null` on the server."}]}],"pos":[24063,25372],"yaml":true,"extradata":"MT"},{"content":"`true` if packet routing is enabled; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,80],"content":"`true` if packet routing is enabled; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if packet routing is enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,56],"source":"`true` if packet routing is enabled; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[57,80],"source":" The default is `false`."}]}],"pos":[25494,25577],"yaml":true},{"content":"Returns whether the properties of the channel pool that are associated with this binding element should be serialized.","nodes":[{"pos":[0,118],"content":"Returns whether the properties of the channel pool that are associated with this binding element should be serialized.","nodes":[{"content":"Returns whether the properties of the channel pool that are associated with this binding element should be serialized.","pos":[0,118]}]}],"pos":[26842,26961],"yaml":true},{"content":"`true` if the channel pool settings should be serialized; otherwise, `false`.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">`true`</ph> if the channel pool settings should be serialized; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the channel pool settings should be serialized; otherwise, `false`."}],"pos":[27112,27192],"yaml":true},{"content":"Exports a custom policy assertion that represents the one-way binding element.","nodes":[{"pos":[0,78],"content":"Exports a custom policy assertion that represents the one-way binding element.","nodes":[{"content":"Exports a custom policy assertion that represents the one-way binding element.","pos":[0,78]}]}],"pos":[29034,29113],"yaml":true},{"content":"This method writes binding-related statements into the WSDL information exposed by a particular contract and is used by [!INCLUDE[indigo2](~/includes/indigo2-md.md)] to communicate to clients the existence of this custom binding element in the binding stack.  \n  \n This method takes two parameters: the <xref:System.ServiceModel.Description.MetadataExporter> and <xref:System.ServiceModel.Description.PolicyConversionContext> objects. Use the <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, and <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> methods to obtain collections of policy assertions that have already been exported at various scopes. Then use this method to add your own policy assertions to the appropriate collection.  \n  \n The <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> property exposes the <xref:System.ServiceModel.Description.ContractDescription> for the endpoint that is being exported. This enables this method to correctly scope their exported policy assertions. For example, security attributes in code can add behaviors to the <xref:System.ServiceModel.Description.ContractDescription> that indicate where security policy assertions should be added.  \n  \n Once custom policy assertions are attached to the WSDL information, clients can detect and import the custom binding assertions by implementing an <xref:System.ServiceModel.Description.IPolicyImportExtension> interface.","nodes":[{"pos":[0,258],"content":"This method writes binding-related statements into the WSDL information exposed by a particular contract and is used by <ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> to communicate to clients the existence of this custom binding element in the binding stack.","source":"This method writes binding-related statements into the WSDL information exposed by a particular contract and is used by [!INCLUDE[indigo2](~/includes/indigo2-md.md)] to communicate to clients the existence of this custom binding element in the binding stack."},{"pos":[265,913],"content":"This method takes two parameters: the <xref:System.ServiceModel.Description.MetadataExporter> and <xref:System.ServiceModel.Description.PolicyConversionContext> objects. Use the <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, and <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> methods to obtain collections of policy assertions that have already been exported at various scopes. Then use this method to add your own policy assertions to the appropriate collection.","nodes":[{"content":"This method takes two parameters: the <xref:System.ServiceModel.Description.MetadataExporter> and <xref:System.ServiceModel.Description.PolicyConversionContext> objects. Use the <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, and <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> methods to obtain collections of policy assertions that have already been exported at various scopes. Then use this method to add your own policy assertions to the appropriate collection.","pos":[0,648],"nodes":[{"content":"This method takes two parameters: the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.MetadataExporter&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> objects.","pos":[0,169],"source":"This method takes two parameters: the <xref:System.ServiceModel.Description.MetadataExporter> and <xref:System.ServiceModel.Description.PolicyConversionContext> objects."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;</ph> methods to obtain collections of policy assertions that have already been exported at various scopes.","pos":[170,562],"source":" Use the <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, and <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> methods to obtain collections of policy assertions that have already been exported at various scopes."},{"content":"Then use this method to add your own policy assertions to the appropriate collection.","pos":[563,648]}]}]},{"pos":[920,1386],"content":"The <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> property exposes the <xref:System.ServiceModel.Description.ContractDescription> for the endpoint that is being exported. This enables this method to correctly scope their exported policy assertions. For example, security attributes in code can add behaviors to the <xref:System.ServiceModel.Description.ContractDescription> that indicate where security policy assertions should be added.","nodes":[{"content":"The <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> property exposes the <xref:System.ServiceModel.Description.ContractDescription> for the endpoint that is being exported. This enables this method to correctly scope their exported policy assertions. For example, security attributes in code can add behaviors to the <xref:System.ServiceModel.Description.ContractDescription> that indicate where security policy assertions should be added.","pos":[0,466],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A&gt;</ph> property exposes the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> for the endpoint that is being exported.","pos":[0,199],"source":"The <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> property exposes the <xref:System.ServiceModel.Description.ContractDescription> for the endpoint that is being exported."},{"content":"This enables this method to correctly scope their exported policy assertions.","pos":[200,277]},{"content":"For example, security attributes in code can add behaviors to the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> that indicate where security policy assertions should be added.","pos":[278,466],"source":" For example, security attributes in code can add behaviors to the <xref:System.ServiceModel.Description.ContractDescription> that indicate where security policy assertions should be added."}]}]},{"pos":[1393,1612],"content":"Once custom policy assertions are attached to the WSDL information, clients can detect and import the custom binding assertions by implementing an <xref:System.ServiceModel.Description.IPolicyImportExtension> interface.","nodes":[{"content":"Once custom policy assertions are attached to the WSDL information, clients can detect and import the custom binding assertions by implementing an <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> interface.","pos":[0,219],"source":"Once custom policy assertions are attached to the WSDL information, clients can detect and import the custom binding assertions by implementing an <xref:System.ServiceModel.Description.IPolicyImportExtension> interface."}]}],"pos":[29124,30745],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Description.MetadataExporter\"></xref> that you can use to modify the exporting process.","nodes":[{"pos":[0,123],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.MetadataExporter\"&gt;&lt;/xref&gt;</ph> that you can use to modify the exporting process.","source":"The <xref href=\"System.ServiceModel.Description.MetadataExporter\"></xref> that you can use to modify the exporting process."}],"pos":[31050,31174],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Description.PolicyConversionContext\"></xref> that you can use to insert your custom policy assertion.","nodes":[{"pos":[0,137],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.PolicyConversionContext\"&gt;&lt;/xref&gt;</ph> that you can use to insert your custom policy assertion.","source":"The <xref href=\"System.ServiceModel.Description.PolicyConversionContext\"></xref> that you can use to insert your custom policy assertion."}],"pos":[31279,31417],"yaml":true},{"content":"<code>context</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>context</code> is `null`."}],"pos":[31664,31696],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.OneWayBindingElement\n  commentId: T:System.ServiceModel.Channels.OneWayBindingElement\n  id: OneWayBindingElement\n  children:\n  - System.ServiceModel.Channels.OneWayBindingElement.#ctor\n  - System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings\n  - System.ServiceModel.Channels.OneWayBindingElement.Clone\n  - System.ServiceModel.Channels.OneWayBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels\n  - System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable\n  - System.ServiceModel.Channels.OneWayBindingElement.ShouldSerializeChannelPoolSettings\n  - System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  langs:\n  - csharp\n  name: OneWayBindingElement\n  nameWithType: OneWayBindingElement\n  fullName: System.ServiceModel.Channels.OneWayBindingElement\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Enables packet routing and the use of one-way methods.\n  remarks: \"To enable packet routing a *one-way conversion* layer is required, which this class provides. This class is a binding in the stack of bindings that performs a message-level shape change called `OneWayBindingElement`. This shape change can take a <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or a <xref:System.ServiceModel.Channels.IRequestChannel> and expose it as a <xref:System.ServiceModel.Channels.IInputChannel>, or conversely it can take a <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or a <xref:System.ServiceModel.Channels.IRequestChannel> and expose it as a <xref:System.ServiceModel.Channels.IOutputChannel>. A user can create a custom binding that layers this binding over a session-aware or request-reply transport to make it packet routable.  \\n  \\n This class is also useful when you want to expose one-way methods in a more native fashion. More transformations can be applied over this layer, such as Composite Duplex and Reliable Messaging.\"\n  syntax:\n    content: 'public sealed class OneWayBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Description.IPolicyExportExtension'\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Channels.BindingElement\n  implements:\n  - System.ServiceModel.Description.IPolicyExportExtension\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/OneWayBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.OneWayBindingElement.#ctor\n  commentId: M:System.ServiceModel.Channels.OneWayBindingElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  langs:\n  - csharp\n  name: OneWayBindingElement()\n  nameWithType: OneWayBindingElement.OneWayBindingElement()\n  fullName: OneWayBindingElement.OneWayBindingElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.OneWayBindingElement\"></xref> class.\n  syntax:\n    content: public OneWayBindingElement ();\n    parameters: []\n  overload: System.ServiceModel.Channels.OneWayBindingElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/OneWayBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  langs:\n  - csharp\n  name: BuildChannelFactory<TChannel>(BindingContext)\n  nameWithType: OneWayBindingElement.BuildChannelFactory<TChannel>(BindingContext)\n  fullName: OneWayBindingElement.BuildChannelFactory<TChannel>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a channel factory for producing one-way channels from the binding context.\n  remarks: This method creates a channel factory, which is used to create a channel that processes outgoing messages for this binding.\n  syntax:\n    content: public override System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides context for the binding element.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel that the factory builds.\n    return:\n      type: System.ServiceModel.Channels.IChannelFactory`1\n      description: The <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"></xref> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> initialized from the <code>context</code>.\n  overload: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The type of <code>TChannel</code> is not <xref href=\"System.ServiceModel.Channels.IOutputChannel\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The inner binding element does not support <xref href=\"System.ServiceModel.Channels.IDuplexSessionChannel\"></xref> or <xref href=\"System.ServiceModel.Channels.IRequestChannel\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/OneWayBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  id: BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  langs:\n  - csharp\n  name: BuildChannelListener<TChannel>(BindingContext)\n  nameWithType: OneWayBindingElement.BuildChannelListener<TChannel>(BindingContext)\n  fullName: OneWayBindingElement.BuildChannelListener<TChannel>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a channel listener for accepting one-way channels.\n  remarks: This method creates a channel listener, which is used to create a channel that processes incoming messages for this binding.\n  syntax:\n    content: 'public override System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides context for the binding element.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel that the listener is built to accept.\n    return:\n      type: System.ServiceModel.Channels.IChannelListener`1\n      description: The <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> initialized from the <code>context</code>.\n  overload: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The type of <code>TChannel</code> is not <xref href=\"System.ServiceModel.Channels.IInputChannel\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The inner binding element does not support <xref href=\"System.ServiceModel.Channels.IDuplexSessionChannel\"></xref> or <xref href=\"System.ServiceModel.Channels.IRequestChannel\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/OneWayBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  id: CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  langs:\n  - csharp\n  name: CanBuildChannelFactory<TChannel>(BindingContext)\n  nameWithType: OneWayBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)\n  fullName: OneWayBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets a value that indicates whether a channel factory of the specified type can be built.\n  remarks: \"You should call this method before trying to create a channel factory.  \\n  \\n This method returns `true` when `TChannel` is an <xref:System.ServiceModel.Channels.IOutputChannel>, and the binding below the present one in the binding stack is an <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or <xref:System.ServiceModel.Channels.IRequestChannel>.\"\n  syntax:\n    content: public override bool CanBuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides context for the binding element.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel factory to build.\n    return:\n      type: System.Boolean\n      description: '`true` if a channel factory of the specified type can be built; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/OneWayBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  id: CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  langs:\n  - csharp\n  name: CanBuildChannelListener<TChannel>(BindingContext)\n  nameWithType: OneWayBindingElement.CanBuildChannelListener<TChannel>(BindingContext)\n  fullName: OneWayBindingElement.CanBuildChannelListener<TChannel>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets a value that indicates whether a channel listener of the specified type can be built.\n  remarks: \"You should call this method before trying to create a channel listener.  \\n  \\n This method returns `true` when `TChannel` is an <xref:System.ServiceModel.Channels.IInputChannel>, and the binding below the present one in the binding stack is an <xref:System.ServiceModel.Channels.IDuplexSessionChannel> or <xref:System.ServiceModel.Channels.IReplyChannel>.\"\n  syntax:\n    content: 'public override bool CanBuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides context for the binding element.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel listener to build.\n    return:\n      type: System.Boolean\n      description: '`true` if a channel listener of the specified type can be built; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/OneWayBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings\n  commentId: P:System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings\n  id: ChannelPoolSettings\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  langs:\n  - csharp\n  name: ChannelPoolSettings\n  nameWithType: OneWayBindingElement.ChannelPoolSettings\n  fullName: OneWayBindingElement.ChannelPoolSettings\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the channel pool settings.\n  syntax:\n    content: public System.ServiceModel.Channels.ChannelPoolSettings ChannelPoolSettings { get; set; }\n    return:\n      type: System.ServiceModel.Channels.ChannelPoolSettings\n      description: A <xref href=\"System.ServiceModel.Channels.ChannelPoolSettings\"></xref> object that contains properties of the channel pool associated with this binding element.\n  overload: System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/OneWayBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.OneWayBindingElement.Clone\n  commentId: M:System.ServiceModel.Channels.OneWayBindingElement.Clone\n  id: Clone\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: OneWayBindingElement.Clone()\n  fullName: OneWayBindingElement.Clone()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Clones an instance of this class.\n  syntax:\n    content: public override System.ServiceModel.Channels.BindingElement Clone ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Channels.BindingElement\n      description: A cloned copy of this instance of this class.\n  overload: System.ServiceModel.Channels.OneWayBindingElement.Clone*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/OneWayBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.OneWayBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.OneWayBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  id: GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  langs:\n  - csharp\n  name: GetProperty<T>(BindingContext)\n  nameWithType: OneWayBindingElement.GetProperty<T>(BindingContext)\n  fullName: OneWayBindingElement.GetProperty<T>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets properties from the binding stack, if present.\n  remarks: \"This method receives a binding context as an input parameter, which represents the stack of binding elements.  \\n  \\n Each binding element in the stack can handle the inquiry itself or delegate the inquiry, or a combination of the two. Each binding element can modify the context if it delegates the inquiry. However, a transport binding element handles the inquiry itself.  \\n  \\n This method is implemented by binding elements as well as by the runtime objects, such as <xref:System.ServiceModel.Channels.IChannelFactory>, <xref:System.ServiceModel.Channels.IChannelListener>, and <xref:System.ServiceModel.Channels.IChannel>.\"\n  syntax:\n    content: 'public override T GetProperty<T> (System.ServiceModel.Channels.BindingContext context) where T : class;'\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides context for the binding element.\n    typeParameters:\n    - id: T\n      description: Type of the property.\n    return:\n      type: T\n      description: A <code>T</code> object from the binding stack, if present.\n  overload: System.ServiceModel.Channels.OneWayBindingElement.GetProperty``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/OneWayBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels\n  commentId: P:System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels\n  id: MaxAcceptedChannels\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  langs:\n  - csharp\n  name: MaxAcceptedChannels\n  nameWithType: OneWayBindingElement.MaxAcceptedChannels\n  fullName: OneWayBindingElement.MaxAcceptedChannels\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the maximum number of channels that can be accepted.\n  syntax:\n    content: public int MaxAcceptedChannels { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of channels that can be accepted. The default value is 10.\n  overload: System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/OneWayBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable\n  commentId: P:System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable\n  id: PacketRoutable\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  langs:\n  - csharp\n  name: PacketRoutable\n  nameWithType: OneWayBindingElement.PacketRoutable\n  fullName: OneWayBindingElement.PacketRoutable\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets a value that indicates whether packet routing is enabled.\n  remarks: \"This class can optionally use a message-level protocol that transforms a `DuplexSessionChannel`/`RequestChannel`/`ReplyChannel` to a one-way channel and allows the messages from the transformed channel to be routed. Usage of this protocol is controlled by the <xref:System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable%2A> property.  \\n  \\n When this property is `true`, upon `DuplexSessionChannel` initiation (for example, Buffered TCP and Named Pipes), this class adds a message header (MustUnderstand = `false`, signed if security is enabled) that semantically means \\\"you can packet-route this channel\\\". On the acceptor side, when this property is `true`, this class looks for this header in the first message received on the channel. If this header does not exist, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] faults the channel. If the header exists, then [!INCLUDE[indigo2](~/includes/indigo2-md.md)] funnels the new channel into a shared input channel.  \\n  \\n To transform a Request-Reply channel (for example, TCP Streaming or HTTP) when this property is `true`, this header is added to every request to signal that the request can be packet routed. [!INCLUDE[indigo2](~/includes/indigo2-md.md)] also verifies that `SendRequest` returns `null` and replies with `null` on the server.\"\n  syntax:\n    content: public bool PacketRoutable { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if packet routing is enabled; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/OneWayBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.OneWayBindingElement.ShouldSerializeChannelPoolSettings\n  commentId: M:System.ServiceModel.Channels.OneWayBindingElement.ShouldSerializeChannelPoolSettings\n  id: ShouldSerializeChannelPoolSettings\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  langs:\n  - csharp\n  name: ShouldSerializeChannelPoolSettings()\n  nameWithType: OneWayBindingElement.ShouldSerializeChannelPoolSettings()\n  fullName: OneWayBindingElement.ShouldSerializeChannelPoolSettings()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns whether the properties of the channel pool that are associated with this binding element should be serialized.\n  syntax:\n    content: public bool ShouldSerializeChannelPoolSettings ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the channel pool settings should be serialized; otherwise, `false`.'\n  overload: System.ServiceModel.Channels.OneWayBindingElement.ShouldSerializeChannelPoolSettings*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/OneWayBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  commentId: M:System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  id: System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  isEii: true\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  langs:\n  - csharp\n  name: IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)\n  nameWithType: OneWayBindingElement.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)\n  fullName: OneWayBindingElement.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Exports a custom policy assertion that represents the one-way binding element.\n  remarks: \"This method writes binding-related statements into the WSDL information exposed by a particular contract and is used by [!INCLUDE[indigo2](~/includes/indigo2-md.md)] to communicate to clients the existence of this custom binding element in the binding stack.  \\n  \\n This method takes two parameters: the <xref:System.ServiceModel.Description.MetadataExporter> and <xref:System.ServiceModel.Description.PolicyConversionContext> objects. Use the <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, and <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> methods to obtain collections of policy assertions that have already been exported at various scopes. Then use this method to add your own policy assertions to the appropriate collection.  \\n  \\n The <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> property exposes the <xref:System.ServiceModel.Description.ContractDescription> for the endpoint that is being exported. This enables this method to correctly scope their exported policy assertions. For example, security attributes in code can add behaviors to the <xref:System.ServiceModel.Description.ContractDescription> that indicate where security policy assertions should be added.  \\n  \\n Once custom policy assertions are attached to the WSDL information, clients can detect and import the custom binding assertions by implementing an <xref:System.ServiceModel.Description.IPolicyImportExtension> interface.\"\n  syntax:\n    content: void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);\n    parameters:\n    - id: exporter\n      type: System.ServiceModel.Description.MetadataExporter\n      description: The <xref href=\"System.ServiceModel.Description.MetadataExporter\"></xref> that you can use to modify the exporting process.\n    - id: context\n      type: System.ServiceModel.Description.PolicyConversionContext\n      description: The <xref href=\"System.ServiceModel.Description.PolicyConversionContext\"></xref> that you can use to insert your custom policy assertion.\n  overload: System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/OneWayBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Channels.BindingElement\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: BindingElement\n  nameWithType: BindingElement\n  fullName: System.ServiceModel.Channels.BindingElement\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ServiceModel.Channels.OneWayBindingElement.#ctor\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: OneWayBindingElement()\n  nameWithType: OneWayBindingElement.OneWayBindingElement()\n  fullName: OneWayBindingElement.OneWayBindingElement()\n- uid: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: BuildChannelFactory<TChannel>(BindingContext)\n  nameWithType: OneWayBindingElement.BuildChannelFactory<TChannel>(BindingContext)\n  fullName: OneWayBindingElement.BuildChannelFactory<TChannel>(BindingContext)\n- uid: System.ServiceModel.Channels.IChannelFactory`1\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IChannelFactory<TChannel>\n  nameWithType: IChannelFactory<TChannel>\n  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>\n- uid: System.ServiceModel.Channels.BindingContext\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: BindingContext\n  nameWithType: BindingContext\n  fullName: System.ServiceModel.Channels.BindingContext\n- uid: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: BuildChannelListener<TChannel>(BindingContext)\n  nameWithType: OneWayBindingElement.BuildChannelListener<TChannel>(BindingContext)\n  fullName: OneWayBindingElement.BuildChannelListener<TChannel>(BindingContext)\n- uid: System.ServiceModel.Channels.IChannelListener`1\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IChannelListener<TChannel>\n  nameWithType: IChannelListener<TChannel>\n  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>\n- uid: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: CanBuildChannelFactory<TChannel>(BindingContext)\n  nameWithType: OneWayBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)\n  fullName: OneWayBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: CanBuildChannelListener<TChannel>(BindingContext)\n  nameWithType: OneWayBindingElement.CanBuildChannelListener<TChannel>(BindingContext)\n  fullName: OneWayBindingElement.CanBuildChannelListener<TChannel>(BindingContext)\n- uid: System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: ChannelPoolSettings\n  nameWithType: OneWayBindingElement.ChannelPoolSettings\n  fullName: OneWayBindingElement.ChannelPoolSettings\n- uid: System.ServiceModel.Channels.ChannelPoolSettings\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: ChannelPoolSettings\n  nameWithType: ChannelPoolSettings\n  fullName: System.ServiceModel.Channels.ChannelPoolSettings\n- uid: System.ServiceModel.Channels.OneWayBindingElement.Clone\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: Clone()\n  nameWithType: OneWayBindingElement.Clone()\n  fullName: OneWayBindingElement.Clone()\n- uid: System.ServiceModel.Channels.OneWayBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: GetProperty<T>(BindingContext)\n  nameWithType: OneWayBindingElement.GetProperty<T>(BindingContext)\n  fullName: OneWayBindingElement.GetProperty<T>(BindingContext)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: MaxAcceptedChannels\n  nameWithType: OneWayBindingElement.MaxAcceptedChannels\n  fullName: OneWayBindingElement.MaxAcceptedChannels\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: PacketRoutable\n  nameWithType: OneWayBindingElement.PacketRoutable\n  fullName: OneWayBindingElement.PacketRoutable\n- uid: System.ServiceModel.Channels.OneWayBindingElement.ShouldSerializeChannelPoolSettings\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: ShouldSerializeChannelPoolSettings()\n  nameWithType: OneWayBindingElement.ShouldSerializeChannelPoolSettings()\n  fullName: OneWayBindingElement.ShouldSerializeChannelPoolSettings()\n- uid: System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)\n  nameWithType: OneWayBindingElement.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)\n  fullName: OneWayBindingElement.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)\n- uid: System.ServiceModel.Description.MetadataExporter\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: MetadataExporter\n  nameWithType: MetadataExporter\n  fullName: System.ServiceModel.Description.MetadataExporter\n- uid: System.ServiceModel.Description.PolicyConversionContext\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: PolicyConversionContext\n  nameWithType: PolicyConversionContext\n  fullName: System.ServiceModel.Description.PolicyConversionContext\n- uid: System.ServiceModel.Channels.OneWayBindingElement.#ctor*\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: OneWayBindingElement\n  nameWithType: OneWayBindingElement.OneWayBindingElement\n  fullName: OneWayBindingElement.OneWayBindingElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/OneWayBindingElement.xml\n- uid: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory``1*\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: BuildChannelFactory<TChannel>\n  nameWithType: OneWayBindingElement.BuildChannelFactory<TChannel>\n  fullName: OneWayBindingElement.BuildChannelFactory<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/OneWayBindingElement.xml\n- uid: System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener``1*\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: BuildChannelListener<TChannel>\n  nameWithType: OneWayBindingElement.BuildChannelListener<TChannel>\n  fullName: OneWayBindingElement.BuildChannelListener<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/OneWayBindingElement.xml\n- uid: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory``1*\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: CanBuildChannelFactory<TChannel>\n  nameWithType: OneWayBindingElement.CanBuildChannelFactory<TChannel>\n  fullName: OneWayBindingElement.CanBuildChannelFactory<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/OneWayBindingElement.xml\n- uid: System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener``1*\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: CanBuildChannelListener<TChannel>\n  nameWithType: OneWayBindingElement.CanBuildChannelListener<TChannel>\n  fullName: OneWayBindingElement.CanBuildChannelListener<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/OneWayBindingElement.xml\n- uid: System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings*\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: ChannelPoolSettings\n  nameWithType: OneWayBindingElement.ChannelPoolSettings\n  fullName: OneWayBindingElement.ChannelPoolSettings\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/OneWayBindingElement.xml\n- uid: System.ServiceModel.Channels.OneWayBindingElement.Clone*\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: Clone\n  nameWithType: OneWayBindingElement.Clone\n  fullName: OneWayBindingElement.Clone\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/OneWayBindingElement.xml\n- uid: System.ServiceModel.Channels.OneWayBindingElement.GetProperty``1*\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: GetProperty<T>\n  nameWithType: OneWayBindingElement.GetProperty<T>\n  fullName: OneWayBindingElement.GetProperty<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/OneWayBindingElement.xml\n- uid: System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels*\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: MaxAcceptedChannels\n  nameWithType: OneWayBindingElement.MaxAcceptedChannels\n  fullName: OneWayBindingElement.MaxAcceptedChannels\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/OneWayBindingElement.xml\n- uid: System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable*\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: PacketRoutable\n  nameWithType: OneWayBindingElement.PacketRoutable\n  fullName: OneWayBindingElement.PacketRoutable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/OneWayBindingElement.xml\n- uid: System.ServiceModel.Channels.OneWayBindingElement.ShouldSerializeChannelPoolSettings*\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: ShouldSerializeChannelPoolSettings\n  nameWithType: OneWayBindingElement.ShouldSerializeChannelPoolSettings\n  fullName: OneWayBindingElement.ShouldSerializeChannelPoolSettings\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/OneWayBindingElement.xml\n- uid: System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*\n  parent: System.ServiceModel.Channels.OneWayBindingElement\n  isExternal: false\n  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy\n  nameWithType: OneWayBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy\n  fullName: OneWayBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/OneWayBindingElement.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.Description.IPolicyExportExtension\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: IPolicyExportExtension\n  nameWithType: IPolicyExportExtension\n  fullName: System.ServiceModel.Description.IPolicyExportExtension\n"}