{"nodes":[{"content":"Throws a previously thrown exception from within a <xref href=\"System.Activities.Statements.Catch\"></xref> activity.","nodes":[{"pos":[0,116],"content":"Throws a previously thrown exception from within a <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.Catch\"&gt;&lt;/xref&gt;</ph> activity.","source":"Throws a previously thrown exception from within a <xref href=\"System.Activities.Statements.Catch\"></xref> activity."}],"pos":[604,721],"yaml":true},{"content":"The error is re-thrown retaining the original source of the exception. <xref:System.Activities.Statements.Rethrow> can only be used within a <xref:System.Activities.Statements.Catch> block of a <xref:System.Activities.Statements.TryCatch> activity.","nodes":[{"pos":[0,248],"content":"The error is re-thrown retaining the original source of the exception. <xref:System.Activities.Statements.Rethrow> can only be used within a <xref:System.Activities.Statements.Catch> block of a <xref:System.Activities.Statements.TryCatch> activity.","nodes":[{"content":"The error is re-thrown retaining the original source of the exception. <xref:System.Activities.Statements.Rethrow> can only be used within a <xref:System.Activities.Statements.Catch> block of a <xref:System.Activities.Statements.TryCatch> activity.","pos":[0,248],"nodes":[{"content":"The error is re-thrown retaining the original source of the exception.","pos":[0,70]},{"content":"<ph id=\"ph1\">&lt;xref:System.Activities.Statements.Rethrow&gt;</ph> can only be used within a <ph id=\"ph2\">&lt;xref:System.Activities.Statements.Catch&gt;</ph> block of a <ph id=\"ph3\">&lt;xref:System.Activities.Statements.TryCatch&gt;</ph> activity.","pos":[71,248],"source":" <xref:System.Activities.Statements.Rethrow> can only be used within a <xref:System.Activities.Statements.Catch> block of a <xref:System.Activities.Statements.TryCatch> activity."}]}]}],"pos":[732,981],"yaml":true,"extradata":"MT"},{"content":"Creates a new instance of the <xref href=\"System.Activities.Statements.Rethrow\"></xref> activity.","nodes":[{"pos":[0,97],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.Rethrow\"&gt;&lt;/xref&gt;</ph> activity.","source":"Creates a new instance of the <xref href=\"System.Activities.Statements.Rethrow\"></xref> activity."}],"pos":[3453,3551],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.Rethrow\n  commentId: T:System.Activities.Statements.Rethrow\n  id: Rethrow\n  children:\n  - System.Activities.Statements.Rethrow.#ctor\n  - System.Activities.Statements.Rethrow.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.Activities.Statements.Rethrow.Execute(System.Activities.NativeActivityContext)\n  langs:\n  - csharp\n  name: Rethrow\n  nameWithType: Rethrow\n  fullName: System.Activities.Statements.Rethrow\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Throws a previously thrown exception from within a <xref href=\"System.Activities.Statements.Catch\"></xref> activity.\n  remarks: The error is re-thrown retaining the original source of the exception. <xref:System.Activities.Statements.Rethrow> can only be used within a <xref:System.Activities.Statements.Catch> block of a <xref:System.Activities.Statements.TryCatch> activity.\n  syntax:\n    content: 'public sealed class Rethrow : System.Activities.NativeActivity'\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.NativeActivity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.NativeActivity.CanInduceIdle\n  - System.Activities.NativeActivity.Implementation\n  - System.Activities.NativeActivity.ImplementationVersion\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Rethrow.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.Rethrow.#ctor\n  commentId: M:System.Activities.Statements.Rethrow.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.Rethrow\n  langs:\n  - csharp\n  name: Rethrow()\n  nameWithType: Rethrow.Rethrow()\n  fullName: Rethrow.Rethrow()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.Rethrow\"></xref> activity.\n  syntax:\n    content: public Rethrow ();\n    parameters: []\n  overload: System.Activities.Statements.Rethrow.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Rethrow.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.Rethrow.CacheMetadata(System.Activities.NativeActivityMetadata)\n  commentId: M:System.Activities.Statements.Rethrow.CacheMetadata(System.Activities.NativeActivityMetadata)\n  id: CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.Rethrow\n  langs:\n  - csharp\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: Rethrow.CacheMetadata(NativeActivityMetadata)\n  fullName: Rethrow.CacheMetadata(NativeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.NativeActivityMetadata\n      description: ''\n  overload: System.Activities.Statements.Rethrow.CacheMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Rethrow.xml\n- uid: System.Activities.Statements.Rethrow.Execute(System.Activities.NativeActivityContext)\n  commentId: M:System.Activities.Statements.Rethrow.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Rethrow\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: Rethrow.Execute(NativeActivityContext)\n  fullName: Rethrow.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: ''\n  overload: System.Activities.Statements.Rethrow.Execute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Rethrow.xml\nreferences:\n- uid: System.Activities.NativeActivity\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivity\n  nameWithType: NativeActivity\n  fullName: System.Activities.NativeActivity\n- uid: System.Activities.Statements.Rethrow.#ctor\n  parent: System.Activities.Statements.Rethrow\n  isExternal: false\n  name: Rethrow()\n  nameWithType: Rethrow.Rethrow()\n  fullName: Rethrow.Rethrow()\n- uid: System.Activities.Statements.Rethrow.CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.Rethrow\n  isExternal: false\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: Rethrow.CacheMetadata(NativeActivityMetadata)\n  fullName: Rethrow.CacheMetadata(NativeActivityMetadata)\n- uid: System.Activities.NativeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityMetadata\n  nameWithType: NativeActivityMetadata\n  fullName: System.Activities.NativeActivityMetadata\n- uid: System.Activities.Statements.Rethrow.Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Rethrow\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: Rethrow.Execute(NativeActivityContext)\n  fullName: Rethrow.Execute(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.Statements.Rethrow.#ctor*\n  parent: System.Activities.Statements.Rethrow\n  isExternal: false\n  name: Rethrow\n  nameWithType: Rethrow.Rethrow\n  fullName: Rethrow.Rethrow\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Rethrow.xml\n- uid: System.Activities.Statements.Rethrow.CacheMetadata*\n  parent: System.Activities.Statements.Rethrow\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: Rethrow.CacheMetadata\n  fullName: Rethrow.CacheMetadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Rethrow.xml\n- uid: System.Activities.Statements.Rethrow.Execute*\n  parent: System.Activities.Statements.Rethrow\n  isExternal: false\n  name: Execute\n  nameWithType: Rethrow.Execute\n  fullName: Rethrow.Execute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Rethrow.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Activities.Activity.ToString\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: Activity.ToString()\n- uid: System.Activities.Activity.CacheId\n  parent: System.Activities.Activity\n  isExternal: false\n  name: CacheId\n  nameWithType: Activity.CacheId\n  fullName: Activity.CacheId\n- uid: System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CacheMetadata(ActivityMetadata)\n  nameWithType: NativeActivity.CacheMetadata(ActivityMetadata)\n  fullName: NativeActivity.CacheMetadata(ActivityMetadata)\n- uid: System.Activities.Activity.Constraints\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Constraints\n  nameWithType: Activity.Constraints\n  fullName: Activity.Constraints\n- uid: System.Activities.Activity.DisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: DisplayName\n  nameWithType: Activity.DisplayName\n  fullName: Activity.DisplayName\n- uid: System.Activities.Activity.Id\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Id\n  nameWithType: Activity.Id\n  fullName: Activity.Id\n- uid: System.Activities.NativeActivity.Implementation\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Implementation\n  nameWithType: NativeActivity.Implementation\n  fullName: NativeActivity.Implementation\n- uid: System.Activities.NativeActivity.ImplementationVersion\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: ImplementationVersion\n  nameWithType: NativeActivity.ImplementationVersion\n  fullName: NativeActivity.ImplementationVersion\n- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  fullName: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n- uid: System.Activities.Activity.ShouldSerializeDisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ShouldSerializeDisplayName()\n  nameWithType: Activity.ShouldSerializeDisplayName()\n  fullName: Activity.ShouldSerializeDisplayName()\n- uid: System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Abort(NativeActivityAbortContext)\n  nameWithType: NativeActivity.Abort(NativeActivityAbortContext)\n  fullName: NativeActivity.Abort(NativeActivityAbortContext)\n- uid: System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Cancel(NativeActivityContext)\n  nameWithType: NativeActivity.Cancel(NativeActivityContext)\n  fullName: NativeActivity.Cancel(NativeActivityContext)\n- uid: System.Activities.NativeActivity.CanInduceIdle\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CanInduceIdle\n  nameWithType: NativeActivity.CanInduceIdle\n  fullName: NativeActivity.CanInduceIdle\n- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  fullName: NativeActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n- uid: System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: UpdateInstance(NativeActivityUpdateContext)\n  nameWithType: NativeActivity.UpdateInstance(NativeActivityUpdateContext)\n  fullName: NativeActivity.UpdateInstance(NativeActivityUpdateContext)\n"}