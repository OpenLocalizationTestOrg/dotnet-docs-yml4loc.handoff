{"nodes":[{"content":"Provides an internal interface for accessing the arguments of DynamicExpression tree nodes as well as CallSite and Rewriting functionality.  You should not use this API.  It is only public due to DLL refactoring and exists only for internal performance optimizations.","nodes":[{"pos":[0,267],"content":"Provides an internal interface for accessing the arguments of DynamicExpression tree nodes as well as CallSite and Rewriting functionality.  You should not use this API.  It is only public due to DLL refactoring and exists only for internal performance optimizations.","nodes":[{"content":"Provides an internal interface for accessing the arguments of DynamicExpression tree nodes as well as CallSite and Rewriting functionality.  You should not use this API.  It is only public due to DLL refactoring and exists only for internal performance optimizations.","pos":[0,267],"nodes":[{"content":"Provides an internal interface for accessing the arguments of DynamicExpression tree nodes as well as CallSite and Rewriting functionality.","pos":[0,139]},{"content":"You should not use this API.","pos":[141,169]},{"content":"It is only public due to DLL refactoring and exists only for internal performance optimizations.","pos":[171,267]}]}]}],"pos":[673,941],"yaml":true},{"content":"Optionally creates the CallSite and returns the CallSite for the DynamicExpression’s polymorphic inline cache.  You should not use this type.  It is only public due to assembly refactoring, and it is used internally for performance optimizations.","nodes":[{"pos":[0,246],"content":"Optionally creates the CallSite and returns the CallSite for the DynamicExpression’s polymorphic inline cache.  You should not use this type.  It is only public due to assembly refactoring, and it is used internally for performance optimizations.","nodes":[{"content":"Optionally creates the CallSite and returns the CallSite for the DynamicExpression’s polymorphic inline cache.  You should not use this type.  It is only public due to assembly refactoring, and it is used internally for performance optimizations.","pos":[0,246],"nodes":[{"content":"Optionally creates the CallSite and returns the CallSite for the DynamicExpression’s polymorphic inline cache.","pos":[0,110]},{"content":"You should not use this type.","pos":[112,141]},{"content":"It is only public due to assembly refactoring, and it is used internally for performance optimizations.","pos":[143,246]}]}]}],"pos":[2432,2679],"yaml":true},{"content":"The CallSite for the DynamicExpression’s polymorphic inline cache.","nodes":[{"pos":[0,66],"content":"The CallSite for the DynamicExpression’s polymorphic inline cache.","nodes":[{"content":"The CallSite for the DynamicExpression’s polymorphic inline cache.","pos":[0,66]}]}],"pos":[2811,2878],"yaml":true},{"content":"Gets the delegate type used by the CallSite, which is the type of the rules used in the dynamic expression’s polymorhphic inline cache.","nodes":[{"pos":[0,135],"content":"Gets the delegate type used by the CallSite, which is the type of the rules used in the dynamic expression’s polymorhphic inline cache.","nodes":[{"content":"Gets the delegate type used by the CallSite, which is the type of the rules used in the dynamic expression’s polymorhphic inline cache.","pos":[0,135]}]}],"pos":[4234,4370],"yaml":true},{"content":"The delegate type used by the CallSite.","nodes":[{"pos":[0,39],"content":"The delegate type used by the CallSite.","nodes":[{"content":"The delegate type used by the CallSite.","pos":[0,39]}]}],"pos":[4482,4522],"yaml":true},{"content":"Rewrites this node replacing the dynamic expression’s arguments with the provided values.  The number of <code>args</code> needs to match the number of the current expression.  You should not use this type.  It is only public due to assembly refactoring, and it is used internally for performance optimizations.  This helper method allows re-writing of nodes to be independent of the specific implementation class deriving from DynamicExpression that is being used at the call site.","nodes":[{"pos":[0,482],"content":"Rewrites this node replacing the dynamic expression’s arguments with the provided values.  The number of <code>args</code> needs to match the number of the current expression.  You should not use this type.  It is only public due to assembly refactoring, and it is used internally for performance optimizations.  This helper method allows re-writing of nodes to be independent of the specific implementation class deriving from DynamicExpression that is being used at the call site.","nodes":[{"content":"Rewrites this node replacing the dynamic expression’s arguments with the provided values.","pos":[0,89]},{"content":"The number of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">args</ph><ept id=\"p1\">&lt;/code&gt;</ept> needs to match the number of the current expression.","pos":[91,175],"source":"  The number of <code>args</code> needs to match the number of the current expression."},{"content":"You should not use this type.","pos":[177,206]},{"content":"It is only public due to assembly refactoring, and it is used internally for performance optimizations.","pos":[208,311]},{"content":"This helper method allows re-writing of nodes to be independent of the specific implementation class deriving from DynamicExpression that is being used at the call site.","pos":[313,482]}]}],"pos":[5978,6461],"yaml":true},{"content":"The arguments used to replace this node.","nodes":[{"pos":[0,40],"content":"The arguments used to replace this node.","nodes":[{"content":"The arguments used to replace this node.","pos":[0,40]}]}],"pos":[6678,6719],"yaml":true},{"content":"The rewritten node, but if no changes were made, then returns the same node.","nodes":[{"pos":[0,76],"content":"The rewritten node, but if no changes were made, then returns the same node.","nodes":[{"content":"The rewritten node, but if no changes were made, then returns the same node.","pos":[0,76]}]}],"pos":[6797,6874],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Linq.Expressions.IDynamicExpression\n  commentId: T:System.Linq.Expressions.IDynamicExpression\n  id: IDynamicExpression\n  children:\n  - System.Linq.Expressions.IDynamicExpression.CreateCallSite\n  - System.Linq.Expressions.IDynamicExpression.DelegateType\n  - System.Linq.Expressions.IDynamicExpression.Rewrite(System.Linq.Expressions.Expression[])\n  langs:\n  - csharp\n  name: IDynamicExpression\n  nameWithType: IDynamicExpression\n  fullName: System.Linq.Expressions.IDynamicExpression\n  type: Interface\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Provides an internal interface for accessing the arguments of DynamicExpression tree nodes as well as CallSite and Rewriting functionality.  You should not use this API.  It is only public due to DLL refactoring and exists only for internal performance optimizations.\n  syntax:\n    content: 'public interface IDynamicExpression : System.Linq.Expressions.IArgumentProvider'\n  derivedClasses:\n  - System.Linq.Expressions.DynamicExpression\n  implements:\n  - System.Linq.Expressions.IArgumentProvider\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/IDynamicExpression.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: billchi\n  manager: ghogen\n- uid: System.Linq.Expressions.IDynamicExpression.CreateCallSite\n  commentId: M:System.Linq.Expressions.IDynamicExpression.CreateCallSite\n  id: CreateCallSite\n  parent: System.Linq.Expressions.IDynamicExpression\n  langs:\n  - csharp\n  name: CreateCallSite()\n  nameWithType: IDynamicExpression.CreateCallSite()\n  fullName: IDynamicExpression.CreateCallSite()\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Optionally creates the CallSite and returns the CallSite for the DynamicExpression’s polymorphic inline cache.  You should not use this type.  It is only public due to assembly refactoring, and it is used internally for performance optimizations.\n  syntax:\n    content: public object CreateCallSite ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The CallSite for the DynamicExpression’s polymorphic inline cache.\n  overload: System.Linq.Expressions.IDynamicExpression.CreateCallSite*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/IDynamicExpression.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.IDynamicExpression.DelegateType\n  commentId: P:System.Linq.Expressions.IDynamicExpression.DelegateType\n  id: DelegateType\n  parent: System.Linq.Expressions.IDynamicExpression\n  langs:\n  - csharp\n  name: DelegateType\n  nameWithType: IDynamicExpression.DelegateType\n  fullName: IDynamicExpression.DelegateType\n  type: Property\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Gets the delegate type used by the CallSite, which is the type of the rules used in the dynamic expression’s polymorhphic inline cache.\n  syntax:\n    content: public Type DelegateType { get; }\n    return:\n      type: System.Type\n      description: The delegate type used by the CallSite.\n  overload: System.Linq.Expressions.IDynamicExpression.DelegateType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/IDynamicExpression.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: billchi\n  manager: ghogen\n- uid: System.Linq.Expressions.IDynamicExpression.Rewrite(System.Linq.Expressions.Expression[])\n  commentId: M:System.Linq.Expressions.IDynamicExpression.Rewrite(System.Linq.Expressions.Expression[])\n  id: Rewrite(System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.IDynamicExpression\n  langs:\n  - csharp\n  name: Rewrite(Expression[])\n  nameWithType: IDynamicExpression.Rewrite(Expression[])\n  fullName: IDynamicExpression.Rewrite(Expression[])\n  type: Method\n  assemblies:\n  - System.Linq.Expressions\n  - System.Core\n  - netstandard\n  namespace: System.Linq.Expressions\n  summary: Rewrites this node replacing the dynamic expression’s arguments with the provided values.  The number of <code>args</code> needs to match the number of the current expression.  You should not use this type.  It is only public due to assembly refactoring, and it is used internally for performance optimizations.  This helper method allows re-writing of nodes to be independent of the specific implementation class deriving from DynamicExpression that is being used at the call site.\n  syntax:\n    content: public System.Linq.Expressions.Expression Rewrite (System.Linq.Expressions.Expression[] args);\n    parameters:\n    - id: args\n      type: System.Linq.Expressions.Expression[]\n      description: The arguments used to replace this node.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The rewritten node, but if no changes were made, then returns the same node.\n  overload: System.Linq.Expressions.IDynamicExpression.Rewrite*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/IDynamicExpression.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\nreferences:\n- uid: System.Linq.Expressions.IDynamicExpression.CreateCallSite\n  parent: System.Linq.Expressions.IDynamicExpression\n  isExternal: false\n  name: CreateCallSite()\n  nameWithType: IDynamicExpression.CreateCallSite()\n  fullName: IDynamicExpression.CreateCallSite()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Linq.Expressions.IDynamicExpression.DelegateType\n  parent: System.Linq.Expressions.IDynamicExpression\n  isExternal: false\n  name: DelegateType\n  nameWithType: IDynamicExpression.DelegateType\n  fullName: IDynamicExpression.DelegateType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Linq.Expressions.IDynamicExpression.Rewrite(System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.IDynamicExpression\n  isExternal: false\n  name: Rewrite(Expression[])\n  nameWithType: IDynamicExpression.Rewrite(Expression[])\n  fullName: IDynamicExpression.Rewrite(Expression[])\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.Expression[]\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression[]\n  nameWithType: Expression[]\n  fullName: System.Linq.Expressions.Expression[]\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression\n    name: Expression\n    nameWithType: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Linq.Expressions.IDynamicExpression.CreateCallSite*\n  parent: System.Linq.Expressions.IDynamicExpression\n  isExternal: false\n  name: CreateCallSite\n  nameWithType: IDynamicExpression.CreateCallSite\n  fullName: IDynamicExpression.CreateCallSite\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/IDynamicExpression.xml\n- uid: System.Linq.Expressions.IDynamicExpression.DelegateType*\n  parent: System.Linq.Expressions.IDynamicExpression\n  isExternal: false\n  name: DelegateType\n  nameWithType: IDynamicExpression.DelegateType\n  fullName: IDynamicExpression.DelegateType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/IDynamicExpression.xml\n- uid: System.Linq.Expressions.IDynamicExpression.Rewrite*\n  parent: System.Linq.Expressions.IDynamicExpression\n  isExternal: false\n  name: Rewrite\n  nameWithType: IDynamicExpression.Rewrite\n  fullName: IDynamicExpression.Rewrite\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/IDynamicExpression.xml\n- uid: System.Linq.Expressions.IArgumentProvider\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: IArgumentProvider\n  nameWithType: IArgumentProvider\n  fullName: System.Linq.Expressions.IArgumentProvider\n"}