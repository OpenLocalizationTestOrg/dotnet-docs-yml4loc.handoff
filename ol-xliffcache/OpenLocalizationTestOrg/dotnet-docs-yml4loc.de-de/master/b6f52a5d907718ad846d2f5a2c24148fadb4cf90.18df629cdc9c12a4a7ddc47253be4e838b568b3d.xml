{"nodes":[{"content":"Provides a description of the results of the query and its effect on the database.","nodes":[{"pos":[0,82],"content":"Provides a description of the results of the query and its effect on the database.","nodes":[{"content":"Provides a description of the results of the query and its effect on the database.","pos":[0,82]}]}],"pos":[689,772],"yaml":true},{"content":"The <xref:System.Data.CommandBehavior> values are used by the <xref:System.Data.IDbCommand.ExecuteReader%2A> method of <xref:System.Data.IDbCommand> and any classes derived from it.  \n  \n A bitwise combination of these values may be used.  \n  \n <xref:System.Data.CommandBehavior> is ignored when used to define a <xref:System.Data.Sql.SqlNotificationRequest> or <xref:System.Data.SqlClient.SqlDependency> and should therefore not be used. Use the constructor that does not require a `CommandBehavior` parameter in these two cases.  \n  \n> [!NOTE]\n>  Use SequentialAccess to retrieve large values and binary data. Otherwise, an <xref:System.OutOfMemoryException> might occur and the connection will be closed.","nodes":[{"pos":[0,181],"content":"The <xref:System.Data.CommandBehavior> values are used by the <xref:System.Data.IDbCommand.ExecuteReader%2A> method of <xref:System.Data.IDbCommand> and any classes derived from it.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.CommandBehavior&gt;</ph> values are used by the <ph id=\"ph2\">&lt;xref:System.Data.IDbCommand.ExecuteReader%2A&gt;</ph> method of <ph id=\"ph3\">&lt;xref:System.Data.IDbCommand&gt;</ph> and any classes derived from it.","pos":[0,181],"source":"The <xref:System.Data.CommandBehavior> values are used by the <xref:System.Data.IDbCommand.ExecuteReader%2A> method of <xref:System.Data.IDbCommand> and any classes derived from it."}]},{"pos":[188,238],"content":"A bitwise combination of these values may be used.","nodes":[{"content":"A bitwise combination of these values may be used.","pos":[0,50]}]},{"pos":[245,530],"content":"<xref:System.Data.CommandBehavior> is ignored when used to define a <xref:System.Data.Sql.SqlNotificationRequest> or <xref:System.Data.SqlClient.SqlDependency> and should therefore not be used. Use the constructor that does not require a `CommandBehavior` parameter in these two cases.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.CommandBehavior&gt;</ph> is ignored when used to define a <ph id=\"ph2\">&lt;xref:System.Data.Sql.SqlNotificationRequest&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Data.SqlClient.SqlDependency&gt;</ph> and should therefore not be used.","pos":[0,193],"source":"<xref:System.Data.CommandBehavior> is ignored when used to define a <xref:System.Data.Sql.SqlNotificationRequest> or <xref:System.Data.SqlClient.SqlDependency> and should therefore not be used."},{"content":"Use the constructor that does not require a <ph id=\"ph1\">`CommandBehavior`</ph> parameter in these two cases.","pos":[194,285],"source":" Use the constructor that does not require a `CommandBehavior` parameter in these two cases."}]},{"pos":[538,707],"content":"[!NOTE]\n Use SequentialAccess to retrieve large values and binary data. Otherwise, an <xref:System.OutOfMemoryException> might occur and the connection will be closed.","leadings":["","> "],"nodes":[{"content":" Use SequentialAccess to retrieve large values and binary data. Otherwise, an <xref:System.OutOfMemoryException> might occur and the connection will be closed.","pos":[8,167],"nodes":[{"content":"Use SequentialAccess to retrieve large values and binary data.","pos":[1,63]},{"content":"Otherwise, an <ph id=\"ph1\">&lt;xref:System.OutOfMemoryException&gt;</ph> might occur and the connection will be closed.","pos":[64,159],"source":" Otherwise, an <xref:System.OutOfMemoryException> might occur and the connection will be closed."}]}]}],"pos":[783,1500],"yaml":true,"extradata":"MT"},{"content":"When the command is executed, the associated `Connection` object is closed when the associated `DataReader` object is closed.","nodes":[{"pos":[0,125],"content":"When the command is executed, the associated <ph id=\"ph1\">`Connection`</ph> object is closed when the associated <ph id=\"ph2\">`DataReader`</ph> object is closed.","source":"When the command is executed, the associated `Connection` object is closed when the associated `DataReader` object is closed."}],"pos":[2912,3038],"yaml":true},{"content":"The query may return multiple result sets. Execution of the query may affect the database state. `Default` sets no <xref href=\"System.Data.CommandBehavior\"></xref> flags, so calling `ExecuteReader(CommandBehavior.Default)` is functionally equivalent to calling `ExecuteReader()`.","nodes":[{"pos":[0,279],"content":"The query may return multiple result sets. Execution of the query may affect the database state. `Default` sets no <xref href=\"System.Data.CommandBehavior\"></xref> flags, so calling `ExecuteReader(CommandBehavior.Default)` is functionally equivalent to calling `ExecuteReader()`.","nodes":[{"content":"The query may return multiple result sets.","pos":[0,42]},{"content":"Execution of the query may affect the database state.","pos":[43,96]},{"content":"<ph id=\"ph1\">`Default`</ph> sets no <ph id=\"ph2\">&lt;xref href=\"System.Data.CommandBehavior\"&gt;&lt;/xref&gt;</ph> flags, so calling <ph id=\"ph3\">`ExecuteReader(CommandBehavior.Default)`</ph> is functionally equivalent to calling <ph id=\"ph4\">`ExecuteReader()`</ph>.","pos":[97,279],"source":"`Default` sets no <xref href=\"System.Data.CommandBehavior\"></xref> flags, so calling `ExecuteReader(CommandBehavior.Default)` is functionally equivalent to calling `ExecuteReader()`."}]}],"pos":[4236,4516],"yaml":true},{"content":"The query returns column and primary key information.","nodes":[{"pos":[0,53],"content":"The query returns column and primary key information.","nodes":[{"content":"The query returns column and primary key information.","pos":[0,53]}]}],"pos":[5706,5760],"yaml":true},{"content":"When KeyInfo is used for command execution, the provider will append extra columns to the result set for existing primary key and timestamp columns.  \n  \n When using KeyInfo, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY OFF and SET NO_BROWSETABLE ON. The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements. See SQL Server Books Online for more information.","nodes":[{"pos":[0,148],"content":"When KeyInfo is used for command execution, the provider will append extra columns to the result set for existing primary key and timestamp columns.","nodes":[{"content":"When KeyInfo is used for command execution, the provider will append extra columns to the result set for existing primary key and timestamp columns.","pos":[0,148]}]},{"pos":[155,474],"content":"When using KeyInfo, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY OFF and SET NO_BROWSETABLE ON. The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements. See SQL Server Books Online for more information.","nodes":[{"content":"When using KeyInfo, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY OFF and SET NO_BROWSETABLE ON. The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements. See SQL Server Books Online for more information.","pos":[0,319],"nodes":[{"content":"When using KeyInfo, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY OFF and SET NO_BROWSETABLE ON.","pos":[0,153]},{"content":"The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.","pos":[154,269]},{"content":"See SQL Server Books Online for more information.","pos":[270,319]}]}]}],"pos":[5771,6250],"yaml":true,"extradata":"MT"},{"content":"The query returns column information only. When using <xref href=\"System.Data.CommandBehavior.SchemaOnly\"></xref>, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY ON.","nodes":[{"pos":[0,221],"content":"The query returns column information only. When using <xref href=\"System.Data.CommandBehavior.SchemaOnly\"></xref>, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY ON.","nodes":[{"content":"The query returns column information only.","pos":[0,42]},{"content":"When using <ph id=\"ph1\">&lt;xref href=\"System.Data.CommandBehavior.SchemaOnly\"&gt;&lt;/xref&gt;</ph>, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY ON.","pos":[43,221],"source":" When using <xref href=\"System.Data.CommandBehavior.SchemaOnly\"></xref>, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY ON."}]}],"pos":[7458,7680],"yaml":true},{"content":"Provides a way for the `DataReader` to handle rows that contain columns with large binary values. Rather than loading the entire row, `SequentialAccess` enables the `DataReader` to load data as a stream. You can then use the `GetBytes` or `GetChars` method to specify a byte location to start the read operation, and a limited buffer size for the data being returned.","nodes":[{"pos":[0,367],"content":"Provides a way for the `DataReader` to handle rows that contain columns with large binary values. Rather than loading the entire row, `SequentialAccess` enables the `DataReader` to load data as a stream. You can then use the `GetBytes` or `GetChars` method to specify a byte location to start the read operation, and a limited buffer size for the data being returned.","nodes":[{"content":"Provides a way for the <ph id=\"ph1\">`DataReader`</ph> to handle rows that contain columns with large binary values.","pos":[0,97],"source":"Provides a way for the `DataReader` to handle rows that contain columns with large binary values."},{"content":"Rather than loading the entire row, <ph id=\"ph1\">`SequentialAccess`</ph> enables the <ph id=\"ph2\">`DataReader`</ph> to load data as a stream.","pos":[98,203],"source":" Rather than loading the entire row, `SequentialAccess` enables the `DataReader` to load data as a stream."},{"content":"You can then use the <ph id=\"ph1\">`GetBytes`</ph> or <ph id=\"ph2\">`GetChars`</ph> method to specify a byte location to start the read operation, and a limited buffer size for the data being returned.","pos":[204,367],"source":" You can then use the `GetBytes` or `GetChars` method to specify a byte location to start the read operation, and a limited buffer size for the data being returned."}]}],"pos":[8927,9295],"yaml":true},{"content":"When you specify `SequentialAccess`, you are required to read from the columns in the order they are returned, although you are not required to read each column. Once you have read past a location in the returned stream of data, data at or before that location can no longer be read from the `DataReader`. When using the <xref:System.Data.OleDb.OleDbDataReader>, you can reread the current column value until reading past it. When using the <xref:System.Data.SqlClient.SqlDataReader>, you can read a column value only once.","nodes":[{"pos":[0,523],"content":"When you specify `SequentialAccess`, you are required to read from the columns in the order they are returned, although you are not required to read each column. Once you have read past a location in the returned stream of data, data at or before that location can no longer be read from the `DataReader`. When using the <xref:System.Data.OleDb.OleDbDataReader>, you can reread the current column value until reading past it. When using the <xref:System.Data.SqlClient.SqlDataReader>, you can read a column value only once.","nodes":[{"content":"When you specify <ph id=\"ph1\">`SequentialAccess`</ph>, you are required to read from the columns in the order they are returned, although you are not required to read each column.","pos":[0,161],"source":"When you specify `SequentialAccess`, you are required to read from the columns in the order they are returned, although you are not required to read each column."},{"content":"Once you have read past a location in the returned stream of data, data at or before that location can no longer be read from the <ph id=\"ph1\">`DataReader`</ph>.","pos":[162,305],"source":" Once you have read past a location in the returned stream of data, data at or before that location can no longer be read from the `DataReader`."},{"content":"When using the <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbDataReader&gt;</ph>, you can reread the current column value until reading past it.","pos":[306,425],"source":" When using the <xref:System.Data.OleDb.OleDbDataReader>, you can reread the current column value until reading past it."},{"content":"When using the <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>, you can read a column value only once.","pos":[426,523],"source":" When using the <xref:System.Data.SqlClient.SqlDataReader>, you can read a column value only once."}]}],"pos":[9306,9830],"yaml":true,"extradata":"MT"},{"content":"The query returns a single result set.","nodes":[{"pos":[0,38],"content":"The query returns a single result set.","nodes":[{"content":"The query returns a single result set.","pos":[0,38]}]}],"pos":[11059,11098],"yaml":true},{"content":"The query is expected to return a single row of the first result set. Execution of the query may affect the database state. Some .NET Framework data providers may, but are not required to, use this information to optimize the performance of the command. When you specify <xref href=\"System.Data.CommandBehavior.SingleRow\"></xref> with the <xref href=\"System.Data.OleDb.OleDbCommand.ExecuteReader\"></xref> method of the <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB `IRow` interface if it is available. Otherwise, it uses the `IRowset` interface. If your SQL statement is expected to return only a single row, specifying <xref href=\"System.Data.CommandBehavior.SingleRow\"></xref> can also improve application performance. It is possible to specify `SingleRow` when executing queries that are expected to return multiple result sets.  In that case, where both a multi-result set SQL query and single row are specified, the result returned will contain only the first row of the first result set. The other result sets of the query will not be returned.","nodes":[{"pos":[0,1142],"content":"The query is expected to return a single row of the first result set. Execution of the query may affect the database state. Some .NET Framework data providers may, but are not required to, use this information to optimize the performance of the command. When you specify <xref href=\"System.Data.CommandBehavior.SingleRow\"></xref> with the <xref href=\"System.Data.OleDb.OleDbCommand.ExecuteReader\"></xref> method of the <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB `IRow` interface if it is available. Otherwise, it uses the `IRowset` interface. If your SQL statement is expected to return only a single row, specifying <xref href=\"System.Data.CommandBehavior.SingleRow\"></xref> can also improve application performance. It is possible to specify `SingleRow` when executing queries that are expected to return multiple result sets.  In that case, where both a multi-result set SQL query and single row are specified, the result returned will contain only the first row of the first result set. The other result sets of the query will not be returned.","nodes":[{"content":"The query is expected to return a single row of the first result set.","pos":[0,69]},{"content":"Execution of the query may affect the database state.","pos":[70,123]},{"content":"Some .NET Framework data providers may, but are not required to, use this information to optimize the performance of the command.","pos":[124,253]},{"content":"When you specify <ph id=\"ph1\">&lt;xref href=\"System.Data.CommandBehavior.SingleRow\"&gt;&lt;/xref&gt;</ph> with the <ph id=\"ph2\">&lt;xref href=\"System.Data.OleDb.OleDbCommand.ExecuteReader\"&gt;&lt;/xref&gt;</ph> method of the <ph id=\"ph3\">&lt;xref href=\"System.Data.OleDb.OleDbCommand\"&gt;&lt;/xref&gt;</ph> object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB <ph id=\"ph4\">`IRow`</ph> interface if it is available.","pos":[254,593],"source":" When you specify <xref href=\"System.Data.CommandBehavior.SingleRow\"></xref> with the <xref href=\"System.Data.OleDb.OleDbCommand.ExecuteReader\"></xref> method of the <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB `IRow` interface if it is available."},{"content":"Otherwise, it uses the <ph id=\"ph1\">`IRowset`</ph> interface.","pos":[594,637],"source":" Otherwise, it uses the `IRowset` interface."},{"content":"If your SQL statement is expected to return only a single row, specifying <ph id=\"ph1\">&lt;xref href=\"System.Data.CommandBehavior.SingleRow\"&gt;&lt;/xref&gt;</ph> can also improve application performance.","pos":[638,812],"source":" If your SQL statement is expected to return only a single row, specifying <xref href=\"System.Data.CommandBehavior.SingleRow\"></xref> can also improve application performance."},{"content":"It is possible to specify <ph id=\"ph1\">`SingleRow`</ph> when executing queries that are expected to return multiple result sets.","pos":[813,923],"source":" It is possible to specify `SingleRow` when executing queries that are expected to return multiple result sets."},{"content":"In that case, where both a multi-result set SQL query and single row are specified, the result returned will contain only the first row of the first result set.","pos":[925,1085]},{"content":"The other result sets of the query will not be returned.","pos":[1086,1142]}]}],"pos":[12305,13448],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.CommandBehavior\n  commentId: T:System.Data.CommandBehavior\n  id: CommandBehavior\n  children:\n  - System.Data.CommandBehavior.CloseConnection\n  - System.Data.CommandBehavior.Default\n  - System.Data.CommandBehavior.KeyInfo\n  - System.Data.CommandBehavior.SchemaOnly\n  - System.Data.CommandBehavior.SequentialAccess\n  - System.Data.CommandBehavior.SingleResult\n  - System.Data.CommandBehavior.SingleRow\n  langs:\n  - csharp\n  name: CommandBehavior\n  nameWithType: CommandBehavior\n  fullName: System.Data.CommandBehavior\n  type: Enum\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: Provides a description of the results of the query and its effect on the database.\n  remarks: \"The <xref:System.Data.CommandBehavior> values are used by the <xref:System.Data.IDbCommand.ExecuteReader%2A> method of <xref:System.Data.IDbCommand> and any classes derived from it.  \\n  \\n A bitwise combination of these values may be used.  \\n  \\n <xref:System.Data.CommandBehavior> is ignored when used to define a <xref:System.Data.Sql.SqlNotificationRequest> or <xref:System.Data.SqlClient.SqlDependency> and should therefore not be used. Use the constructor that does not require a `CommandBehavior` parameter in these two cases.  \\n  \\n> [!NOTE]\\n>  Use SequentialAccess to retrieve large values and binary data. Otherwise, an <xref:System.OutOfMemoryException> might occur and the connection will be closed.\"\n  syntax:\n    content: >-\n      [System.Flags]\n\n      public enum CommandBehavior\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  attributes:\n  - type: System.FlagsAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/CommandBehavior.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.CommandBehavior.CloseConnection\n  commentId: F:System.Data.CommandBehavior.CloseConnection\n  id: CloseConnection\n  parent: System.Data.CommandBehavior\n  langs:\n  - csharp\n  name: CloseConnection\n  nameWithType: CommandBehavior.CloseConnection\n  fullName: CommandBehavior.CloseConnection\n  type: Field\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: When the command is executed, the associated `Connection` object is closed when the associated `DataReader` object is closed.\n  syntax:\n    content: CloseConnection\n    return:\n      type: System.Data.CommandBehavior\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/CommandBehavior.xml\n- uid: System.Data.CommandBehavior.Default\n  commentId: F:System.Data.CommandBehavior.Default\n  id: Default\n  parent: System.Data.CommandBehavior\n  langs:\n  - csharp\n  name: Default\n  nameWithType: CommandBehavior.Default\n  fullName: CommandBehavior.Default\n  type: Field\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: The query may return multiple result sets. Execution of the query may affect the database state. `Default` sets no <xref href=\"System.Data.CommandBehavior\"></xref> flags, so calling `ExecuteReader(CommandBehavior.Default)` is functionally equivalent to calling `ExecuteReader()`.\n  syntax:\n    content: Default\n    return:\n      type: System.Data.CommandBehavior\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/CommandBehavior.xml\n- uid: System.Data.CommandBehavior.KeyInfo\n  commentId: F:System.Data.CommandBehavior.KeyInfo\n  id: KeyInfo\n  parent: System.Data.CommandBehavior\n  langs:\n  - csharp\n  name: KeyInfo\n  nameWithType: CommandBehavior.KeyInfo\n  fullName: CommandBehavior.KeyInfo\n  type: Field\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: The query returns column and primary key information.\n  remarks: \"When KeyInfo is used for command execution, the provider will append extra columns to the result set for existing primary key and timestamp columns.  \\n  \\n When using KeyInfo, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY OFF and SET NO_BROWSETABLE ON. The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements. See SQL Server Books Online for more information.\"\n  syntax:\n    content: KeyInfo\n    return:\n      type: System.Data.CommandBehavior\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/CommandBehavior.xml\n- uid: System.Data.CommandBehavior.SchemaOnly\n  commentId: F:System.Data.CommandBehavior.SchemaOnly\n  id: SchemaOnly\n  parent: System.Data.CommandBehavior\n  langs:\n  - csharp\n  name: SchemaOnly\n  nameWithType: CommandBehavior.SchemaOnly\n  fullName: CommandBehavior.SchemaOnly\n  type: Field\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: The query returns column information only. When using <xref href=\"System.Data.CommandBehavior.SchemaOnly\"></xref>, the .NET Framework Data Provider for SQL Server precedes the statement being executed with SET FMTONLY ON.\n  syntax:\n    content: SchemaOnly\n    return:\n      type: System.Data.CommandBehavior\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/CommandBehavior.xml\n- uid: System.Data.CommandBehavior.SequentialAccess\n  commentId: F:System.Data.CommandBehavior.SequentialAccess\n  id: SequentialAccess\n  parent: System.Data.CommandBehavior\n  langs:\n  - csharp\n  name: SequentialAccess\n  nameWithType: CommandBehavior.SequentialAccess\n  fullName: CommandBehavior.SequentialAccess\n  type: Field\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: Provides a way for the `DataReader` to handle rows that contain columns with large binary values. Rather than loading the entire row, `SequentialAccess` enables the `DataReader` to load data as a stream. You can then use the `GetBytes` or `GetChars` method to specify a byte location to start the read operation, and a limited buffer size for the data being returned.\n  remarks: When you specify `SequentialAccess`, you are required to read from the columns in the order they are returned, although you are not required to read each column. Once you have read past a location in the returned stream of data, data at or before that location can no longer be read from the `DataReader`. When using the <xref:System.Data.OleDb.OleDbDataReader>, you can reread the current column value until reading past it. When using the <xref:System.Data.SqlClient.SqlDataReader>, you can read a column value only once.\n  syntax:\n    content: SequentialAccess\n    return:\n      type: System.Data.CommandBehavior\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/CommandBehavior.xml\n- uid: System.Data.CommandBehavior.SingleResult\n  commentId: F:System.Data.CommandBehavior.SingleResult\n  id: SingleResult\n  parent: System.Data.CommandBehavior\n  langs:\n  - csharp\n  name: SingleResult\n  nameWithType: CommandBehavior.SingleResult\n  fullName: CommandBehavior.SingleResult\n  type: Field\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: The query returns a single result set.\n  syntax:\n    content: SingleResult\n    return:\n      type: System.Data.CommandBehavior\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/CommandBehavior.xml\n- uid: System.Data.CommandBehavior.SingleRow\n  commentId: F:System.Data.CommandBehavior.SingleRow\n  id: SingleRow\n  parent: System.Data.CommandBehavior\n  langs:\n  - csharp\n  name: SingleRow\n  nameWithType: CommandBehavior.SingleRow\n  fullName: CommandBehavior.SingleRow\n  type: Field\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: The query is expected to return a single row of the first result set. Execution of the query may affect the database state. Some .NET Framework data providers may, but are not required to, use this information to optimize the performance of the command. When you specify <xref href=\"System.Data.CommandBehavior.SingleRow\"></xref> with the <xref href=\"System.Data.OleDb.OleDbCommand.ExecuteReader\"></xref> method of the <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB `IRow` interface if it is available. Otherwise, it uses the `IRowset` interface. If your SQL statement is expected to return only a single row, specifying <xref href=\"System.Data.CommandBehavior.SingleRow\"></xref> can also improve application performance. It is possible to specify `SingleRow` when executing queries that are expected to return multiple result sets.  In that case, where both a multi-result set SQL query and single row are specified, the result returned will contain only the first row of the first result set. The other result sets of the query will not be returned.\n  syntax:\n    content: SingleRow\n    return:\n      type: System.Data.CommandBehavior\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/CommandBehavior.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Data.CommandBehavior.CloseConnection\n  parent: System.Data.CommandBehavior\n  isExternal: false\n  name: CloseConnection\n  nameWithType: CommandBehavior.CloseConnection\n  fullName: CommandBehavior.CloseConnection\n- uid: System.Data.CommandBehavior\n  parent: System.Data\n  isExternal: false\n  name: CommandBehavior\n  nameWithType: CommandBehavior\n  fullName: System.Data.CommandBehavior\n- uid: System.Data.CommandBehavior.Default\n  parent: System.Data.CommandBehavior\n  isExternal: false\n  name: Default\n  nameWithType: CommandBehavior.Default\n  fullName: CommandBehavior.Default\n- uid: System.Data.CommandBehavior.KeyInfo\n  parent: System.Data.CommandBehavior\n  isExternal: false\n  name: KeyInfo\n  nameWithType: CommandBehavior.KeyInfo\n  fullName: CommandBehavior.KeyInfo\n- uid: System.Data.CommandBehavior.SchemaOnly\n  parent: System.Data.CommandBehavior\n  isExternal: false\n  name: SchemaOnly\n  nameWithType: CommandBehavior.SchemaOnly\n  fullName: CommandBehavior.SchemaOnly\n- uid: System.Data.CommandBehavior.SequentialAccess\n  parent: System.Data.CommandBehavior\n  isExternal: false\n  name: SequentialAccess\n  nameWithType: CommandBehavior.SequentialAccess\n  fullName: CommandBehavior.SequentialAccess\n- uid: System.Data.CommandBehavior.SingleResult\n  parent: System.Data.CommandBehavior\n  isExternal: false\n  name: SingleResult\n  nameWithType: CommandBehavior.SingleResult\n  fullName: CommandBehavior.SingleResult\n- uid: System.Data.CommandBehavior.SingleRow\n  parent: System.Data.CommandBehavior\n  isExternal: false\n  name: SingleRow\n  nameWithType: CommandBehavior.SingleRow\n  fullName: CommandBehavior.SingleRow\n"}