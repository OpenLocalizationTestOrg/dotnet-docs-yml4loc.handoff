{"nodes":[{"content":"Establishes a design-time service that manages the collection of <xref href=\"System.ComponentModel.Design.DesignerActionItem\"></xref> objects for components.","nodes":[{"pos":[0,157],"content":"Establishes a design-time service that manages the collection of <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignerActionItem\"&gt;&lt;/xref&gt;</ph> objects for components.","source":"Establishes a design-time service that manages the collection of <xref href=\"System.ComponentModel.Design.DesignerActionItem\"></xref> objects for components."}],"pos":[2179,2337],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.DesignerActionService> class is responsible for managing the collection of <xref:System.ComponentModel.Design.DesignerActionItem> objects for each instance of a component that exists on a form at design time. This class enables a direct push model of item creation, and is primarily intended for use by design-time tool developers, although it can also be used by component and custom control developers.  \n  \n Design-time tool developers will need to determine the list of items to display for a component and determine when this list changes. They may also create add-ins that operate in conjunction with smart tag panel objects.  \n  \n Advanced component developers may need to dynamically control the items associated with a component, thus replacing or supplementing the standard pull model. For example, panel commands can be altered depending on the context of their use and the design-time state of the component.  \n  \n> [!NOTE]\n>  The <xref:System.ComponentModel.Design.DesignerActionService> is actually the driving service behind both the push and pull models; however, in the latter case it operates implicitly.  \n  \n <xref:System.ComponentModel.Design.DesignerActionService> provides a straightforward interface for accessing and manipulating the items for each component, including the following methods and events:  \n  \n-   The <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A> method determines whether the <xref:System.ComponentModel.Design.DesignerActionService> is currently managing a particular component.  \n  \n-   The <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> method supports the enumeration of the lists of items.  \n  \n-   The <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> method allows adding a <xref:System.ComponentModel.Design.DesignerActionList> or <xref:System.ComponentModel.Design.DesignerActionListCollection> to the set of existing items for a component instance. In contrast, the <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> method removes one or all of the item lists associated with a component.  \n  \n    > [!NOTE]\n    >  The <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> method represents the direct push model of associating panel items with a component. In contrast, the pull model relies on overriding the <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> property of the designer class for that component. The design environment is responsible for adding these items into the current <xref:System.ComponentModel.Design.DesignerActionService> when a component is created on the design surface.  \n  \n    > [!IMPORTANT]\n    >  The <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>, <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>, <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A>, and <xref:System.ComponentModel.Design.DesignerActionService.Clear%2A> methods only consider or affect push-model items.  \n  \n-   The <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event indicates when the collection of items changes for a component.  \n  \n Because it is often desirable to use some of the same panel items in both the component's design-time shortcut menu and its panel, a large degree of interoperability exists between <xref:System.ComponentModel.Design.DesignerActionItem> objects and designer verbs.  \n  \n If a component designer does not explicitly specify a <xref:System.ComponentModel.Design.DesignerActionList> (that is, it does not contain an overridden <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> property), then a list will be created from existing designer verbs. These verbs are specified by the <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> property. In this case, an internal verb list class is used to contain the collection of verb item panel entries.  \n  \n If you want a <xref:System.ComponentModel.Design.DesignerActionMethodItem> to be used both as a panel entry and a design-time shortcut menu entry, then you can set the `includeAsDesignerVerb` parameter in the item's constructor.  \n  \n Use the <xref:System.ComponentModel.Design.DesignerActionUIService> to control the display of your designer's <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>.","nodes":[{"pos":[0,443],"content":"The <xref:System.ComponentModel.Design.DesignerActionService> class is responsible for managing the collection of <xref:System.ComponentModel.Design.DesignerActionItem> objects for each instance of a component that exists on a form at design time. This class enables a direct push model of item creation, and is primarily intended for use by design-time tool developers, although it can also be used by component and custom control developers.","nodes":[{"content":"The <xref:System.ComponentModel.Design.DesignerActionService> class is responsible for managing the collection of <xref:System.ComponentModel.Design.DesignerActionItem> objects for each instance of a component that exists on a form at design time. This class enables a direct push model of item creation, and is primarily intended for use by design-time tool developers, although it can also be used by component and custom control developers.","pos":[0,443],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService&gt;</ph> class is responsible for managing the collection of <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignerActionItem&gt;</ph> objects for each instance of a component that exists on a form at design time.","pos":[0,247],"source":"The <xref:System.ComponentModel.Design.DesignerActionService> class is responsible for managing the collection of <xref:System.ComponentModel.Design.DesignerActionItem> objects for each instance of a component that exists on a form at design time."},{"content":"This class enables a direct push model of item creation, and is primarily intended for use by design-time tool developers, although it can also be used by component and custom control developers.","pos":[248,443]}]}]},{"pos":[450,670],"content":"Design-time tool developers will need to determine the list of items to display for a component and determine when this list changes. They may also create add-ins that operate in conjunction with smart tag panel objects.","nodes":[{"content":"Design-time tool developers will need to determine the list of items to display for a component and determine when this list changes. They may also create add-ins that operate in conjunction with smart tag panel objects.","pos":[0,220],"nodes":[{"content":"Design-time tool developers will need to determine the list of items to display for a component and determine when this list changes.","pos":[0,133]},{"content":"They may also create add-ins that operate in conjunction with smart tag panel objects.","pos":[134,220]}]}]},{"pos":[677,959],"content":"Advanced component developers may need to dynamically control the items associated with a component, thus replacing or supplementing the standard pull model. For example, panel commands can be altered depending on the context of their use and the design-time state of the component.","nodes":[{"content":"Advanced component developers may need to dynamically control the items associated with a component, thus replacing or supplementing the standard pull model. For example, panel commands can be altered depending on the context of their use and the design-time state of the component.","pos":[0,282],"nodes":[{"content":"Advanced component developers may need to dynamically control the items associated with a component, thus replacing or supplementing the standard pull model.","pos":[0,157]},{"content":"For example, panel commands can be altered depending on the context of their use and the design-time state of the component.","pos":[158,282]}]}]},{"pos":[967,1161],"content":"[!NOTE]\n The <xref:System.ComponentModel.Design.DesignerActionService> is actually the driving service behind both the push and pull models; however, in the latter case it operates implicitly.","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService&gt;</ph> is actually the driving service behind both the push and pull models; however, in the latter case it operates implicitly.","pos":[9,192],"source":" The <xref:System.ComponentModel.Design.DesignerActionService> is actually the driving service behind both the push and pull models; however, in the latter case it operates implicitly."}]},{"pos":[1168,1367],"content":"<xref:System.ComponentModel.Design.DesignerActionService> provides a straightforward interface for accessing and manipulating the items for each component, including the following methods and events:","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService&gt;</ph> provides a straightforward interface for accessing and manipulating the items for each component, including the following methods and events:","pos":[0,199],"source":"<xref:System.ComponentModel.Design.DesignerActionService> provides a straightforward interface for accessing and manipulating the items for each component, including the following methods and events:"}]},{"pos":[1377,1584],"content":"The <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A> method determines whether the <xref:System.ComponentModel.Design.DesignerActionService> is currently managing a particular component.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.Contains%2A&gt;</ph> method determines whether the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignerActionService&gt;</ph> is currently managing a particular component.","pos":[0,207],"source":"The <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A> method determines whether the <xref:System.ComponentModel.Design.DesignerActionService> is currently managing a particular component."}]},{"pos":[1594,1733],"content":"The <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> method supports the enumeration of the lists of items.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A&gt;</ph> method supports the enumeration of the lists of items.","pos":[0,139],"source":"The <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> method supports the enumeration of the lists of items."}]},{"pos":[1743,2170],"content":"The <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> method allows adding a <xref:System.ComponentModel.Design.DesignerActionList> or <xref:System.ComponentModel.Design.DesignerActionListCollection> to the set of existing items for a component instance. In contrast, the <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> method removes one or all of the item lists associated with a component.","nodes":[{"content":"The <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> method allows adding a <xref:System.ComponentModel.Design.DesignerActionList> or <xref:System.ComponentModel.Design.DesignerActionListCollection> to the set of existing items for a component instance. In contrast, the <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> method removes one or all of the item lists associated with a component.","pos":[0,427],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.Add%2A&gt;</ph> method allows adding a <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignerActionList&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.DesignerActionListCollection&gt;</ph> to the set of existing items for a component instance.","pos":[0,269],"source":"The <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> method allows adding a <xref:System.ComponentModel.Design.DesignerActionList> or <xref:System.ComponentModel.Design.DesignerActionListCollection> to the set of existing items for a component instance."},{"content":"In contrast, the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.Remove%2A&gt;</ph> method removes one or all of the item lists associated with a component.","pos":[270,427],"source":" In contrast, the <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> method removes one or all of the item lists associated with a component."}]}]},{"pos":[2182,2710],"content":"[!NOTE]\nThe <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> method represents the direct push model of associating panel items with a component. In contrast, the pull model relies on overriding the <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> property of the designer class for that component. The design environment is responsible for adding these items into the current <xref:System.ComponentModel.Design.DesignerActionService> when a component is created on the design surface.","leadings":["","    >  "],"nodes":[{"content":"The <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> method represents the direct push model of associating panel items with a component. In contrast, the pull model relies on overriding the <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> property of the designer class for that component. The design environment is responsible for adding these items into the current <xref:System.ComponentModel.Design.DesignerActionService> when a component is created on the design surface.","pos":[8,521],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.Add%2A&gt;</ph> method represents the direct push model of associating panel items with a component.","pos":[0,153],"source":"The <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> method represents the direct push model of associating panel items with a component."},{"content":"In contrast, the pull model relies on overriding the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A&gt;</ph> property of the designer class for that component.","pos":[154,326],"source":" In contrast, the pull model relies on overriding the <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> property of the designer class for that component."},{"content":"The design environment is responsible for adding these items into the current <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService&gt;</ph> when a component is created on the design surface.","pos":[327,513],"source":" The design environment is responsible for adding these items into the current <xref:System.ComponentModel.Design.DesignerActionService> when a component is created on the design surface."}]}]},{"pos":[2722,3072],"content":"[!IMPORTANT]\nThe <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>, <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>, <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A>, and <xref:System.ComponentModel.Design.DesignerActionService.Clear%2A> methods only consider or affect push-model items.","leadings":["","    >  "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.Add%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignerActionService.Remove%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.DesignerActionService.Contains%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.ComponentModel.Design.DesignerActionService.Clear%2A&gt;</ph> methods only consider or affect push-model items.","pos":[13,343],"source":"The <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>, <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>, <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A>, and <xref:System.ComponentModel.Design.DesignerActionService.Clear%2A> methods only consider or affect push-model items."}]},{"pos":[3082,3240],"content":"The <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event indicates when the collection of items changes for a component.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged&gt;</ph> event indicates when the collection of items changes for a component.","pos":[0,158],"source":"The <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event indicates when the collection of items changes for a component."}]},{"pos":[3247,3510],"content":"Because it is often desirable to use some of the same panel items in both the component's design-time shortcut menu and its panel, a large degree of interoperability exists between <xref:System.ComponentModel.Design.DesignerActionItem> objects and designer verbs.","nodes":[{"content":"Because it is often desirable to use some of the same panel items in both the component's design-time shortcut menu and its panel, a large degree of interoperability exists between <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionItem&gt;</ph> objects and designer verbs.","pos":[0,263],"source":"Because it is often desirable to use some of the same panel items in both the component's design-time shortcut menu and its panel, a large degree of interoperability exists between <xref:System.ComponentModel.Design.DesignerActionItem> objects and designer verbs."}]},{"pos":[3517,4017],"content":"If a component designer does not explicitly specify a <xref:System.ComponentModel.Design.DesignerActionList> (that is, it does not contain an overridden <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> property), then a list will be created from existing designer verbs. These verbs are specified by the <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> property. In this case, an internal verb list class is used to contain the collection of verb item panel entries.","nodes":[{"content":"If a component designer does not explicitly specify a <xref:System.ComponentModel.Design.DesignerActionList> (that is, it does not contain an overridden <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> property), then a list will be created from existing designer verbs. These verbs are specified by the <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> property. In this case, an internal verb list class is used to contain the collection of verb item panel entries.","pos":[0,500],"nodes":[{"content":"If a component designer does not explicitly specify a <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionList&gt;</ph> (that is, it does not contain an overridden <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A&gt;</ph> property), then a list will be created from existing designer verbs.","pos":[0,290],"source":"If a component designer does not explicitly specify a <xref:System.ComponentModel.Design.DesignerActionList> (that is, it does not contain an overridden <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> property), then a list will be created from existing designer verbs."},{"content":"These verbs are specified by the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A&gt;</ph> property.","pos":[291,396],"source":" These verbs are specified by the <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> property."},{"content":"In this case, an internal verb list class is used to contain the collection of verb item panel entries.","pos":[397,500]}]}]},{"pos":[4024,4252],"content":"If you want a <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionMethodItem&gt;</ph> to be used both as a panel entry and a design-time shortcut menu entry, then you can set the <ph id=\"ph2\">`includeAsDesignerVerb`</ph> parameter in the item's constructor.","source":"If you want a <xref:System.ComponentModel.Design.DesignerActionMethodItem> to be used both as a panel entry and a design-time shortcut menu entry, then you can set the `includeAsDesignerVerb` parameter in the item's constructor."},{"pos":[4259,4438],"content":"Use the <xref:System.ComponentModel.Design.DesignerActionUIService> to control the display of your designer's <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionUIService&gt;</ph> to control the display of your designer's <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A&gt;</ph>.","pos":[0,179],"source":"Use the <xref:System.ComponentModel.Design.DesignerActionUIService> to control the display of your designer's <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>."}]}],"pos":[2348,6820],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignerActionService\"></xref> class.","nodes":[{"pos":[0,112],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignerActionService\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignerActionService\"></xref> class."}],"pos":[8492,8605],"yaml":true},{"content":"A service provider is necessary for monitoring selection and component changes. It is expected to support the <xref:System.ComponentModel.Design.IDesignerHost> and <xref:System.ComponentModel.Design.IComponentChangeService> types. The <xref:System.ComponentModel.Design.DesignerActionService> class uses an internal table to manage components and their associated <xref:System.ComponentModel.Design.DesignerActionList> smart tags.  \n  \n Typically, component developers will not need to create an instance of this class; instead, they can acquire an existing instance through a call to the <xref:System.ComponentModel.Component.GetService%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,430],"content":"A service provider is necessary for monitoring selection and component changes. It is expected to support the <xref:System.ComponentModel.Design.IDesignerHost> and <xref:System.ComponentModel.Design.IComponentChangeService> types. The <xref:System.ComponentModel.Design.DesignerActionService> class uses an internal table to manage components and their associated <xref:System.ComponentModel.Design.DesignerActionList> smart tags.","nodes":[{"content":"A service provider is necessary for monitoring selection and component changes. It is expected to support the <xref:System.ComponentModel.Design.IDesignerHost> and <xref:System.ComponentModel.Design.IComponentChangeService> types. The <xref:System.ComponentModel.Design.DesignerActionService> class uses an internal table to manage components and their associated <xref:System.ComponentModel.Design.DesignerActionList> smart tags.","pos":[0,430],"nodes":[{"content":"A service provider is necessary for monitoring selection and component changes.","pos":[0,79]},{"content":"It is expected to support the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph> types.","pos":[80,230],"source":" It is expected to support the <xref:System.ComponentModel.Design.IDesignerHost> and <xref:System.ComponentModel.Design.IComponentChangeService> types."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService&gt;</ph> class uses an internal table to manage components and their associated <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignerActionList&gt;</ph> smart tags.","pos":[231,430],"source":" The <xref:System.ComponentModel.Design.DesignerActionService> class uses an internal table to manage components and their associated <xref:System.ComponentModel.Design.DesignerActionList> smart tags."}]}]},{"pos":[437,674],"content":"Typically, component developers will not need to create an instance of this class; instead, they can acquire an existing instance through a call to the <xref:System.ComponentModel.Component.GetService%2A?displayProperty=fullName> method.","nodes":[{"content":"Typically, component developers will not need to create an instance of this class; instead, they can acquire an existing instance through a call to the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Component.GetService%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,237],"source":"Typically, component developers will not need to create an instance of this class; instead, they can acquire an existing instance through a call to the <xref:System.ComponentModel.Component.GetService%2A?displayProperty=fullName> method."}]}],"pos":[8616,9295],"yaml":true,"extradata":"MT"},{"content":"The service provider for the current design-time environment.","nodes":[{"pos":[0,61],"content":"The service provider for the current design-time environment.","nodes":[{"content":"The service provider for the current design-time environment.","pos":[0,61]}]}],"pos":[9480,9542],"yaml":true},{"content":"Adds a <xref href=\"System.ComponentModel.Design.DesignerActionList\"></xref> to the current collection of managed smart tags.","nodes":[{"pos":[0,124],"content":"Adds a <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignerActionList\"&gt;&lt;/xref&gt;</ph> to the current collection of managed smart tags.","source":"Adds a <xref href=\"System.ComponentModel.Design.DesignerActionList\"></xref> to the current collection of managed smart tags."}],"pos":[10936,11061],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> method represents the push model of adding smart tag items. The alternate pull model relies on overriding the <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> property in the designer for the corresponding component.  \n  \n When this method is called, the lists to be added are scanned for any <xref:System.ComponentModel.Design.DesignerActionMethodItem> with the <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> property set to `true`. These items are added to the list of designer verbs for this component, through a call to the <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName> method.  \n  \n Smart tags are managed on a component instance basis. The managed collection may contain duplicate entries.  \n  \n This method raises the <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event.","nodes":[{"pos":[0,305],"content":"The <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> method represents the push model of adding smart tag items. The alternate pull model relies on overriding the <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> property in the designer for the corresponding component.","nodes":[{"content":"The <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> method represents the push model of adding smart tag items. The alternate pull model relies on overriding the <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> property in the designer for the corresponding component.","pos":[0,305],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.Add%2A&gt;</ph> method represents the push model of adding smart tag items.","pos":[0,128],"source":"The <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> method represents the push model of adding smart tag items."},{"content":"The alternate pull model relies on overriding the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A&gt;</ph> property in the designer for the corresponding component.","pos":[129,305],"source":" The alternate pull model relies on overriding the <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> property in the designer for the corresponding component."}]}]},{"pos":[312,754],"content":"When this method is called, the lists to be added are scanned for any <xref:System.ComponentModel.Design.DesignerActionMethodItem> with the <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> property set to `true`. These items are added to the list of designer verbs for this component, through a call to the <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName> method.","nodes":[{"content":"When this method is called, the lists to be added are scanned for any <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionMethodItem&gt;</ph> with the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A&gt;</ph> property set to <ph id=\"ph3\">`true`</ph>.","pos":[0,249],"source":"When this method is called, the lists to be added are scanned for any <xref:System.ComponentModel.Design.DesignerActionMethodItem> with the <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> property set to `true`."},{"content":"These items are added to the list of designer verbs for this component, through a call to the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName&gt;</ph> method.","pos":[250,442],"source":" These items are added to the list of designer verbs for this component, through a call to the <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName> method."}]},{"pos":[761,868],"content":"Smart tags are managed on a component instance basis. The managed collection may contain duplicate entries.","nodes":[{"content":"Smart tags are managed on a component instance basis. The managed collection may contain duplicate entries.","pos":[0,107],"nodes":[{"content":"Smart tags are managed on a component instance basis.","pos":[0,53]},{"content":"The managed collection may contain duplicate entries.","pos":[54,107]}]}]},{"pos":[875,989],"content":"This method raises the <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event.","nodes":[{"content":"This method raises the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged&gt;</ph> event.","pos":[0,114],"source":"This method raises the <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event."}]}],"pos":[11072,12070],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ComponentModel.IComponent\"></xref> to associate the smart tags with.","nodes":[{"pos":[0,91],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.IComponent\"&gt;&lt;/xref&gt;</ph> to associate the smart tags with.","source":"The <xref href=\"System.ComponentModel.IComponent\"></xref> to associate the smart tags with."}],"pos":[12305,12397],"yaml":true},{"content":"The <xref href=\"System.ComponentModel.Design.DesignerActionList\"></xref> that contains the new smart tag items to be added.","nodes":[{"pos":[0,123],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignerActionList\"&gt;&lt;/xref&gt;</ph> that contains the new smart tag items to be added.","source":"The <xref href=\"System.ComponentModel.Design.DesignerActionList\"></xref> that contains the new smart tag items to be added."}],"pos":[12497,12621],"yaml":true},{"content":"One or both of the parameters are `null`.","nodes":[{"pos":[0,41],"content":"One or both of the parameters are <ph id=\"ph1\">`null`</ph>.","source":"One or both of the parameters are `null`."}],"pos":[12805,12847],"yaml":true},{"content":"Adds a <xref href=\"System.ComponentModel.Design.DesignerActionListCollection\"></xref> to the current collection of managed smart tags.","nodes":[{"pos":[0,134],"content":"Adds a <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignerActionListCollection\"&gt;&lt;/xref&gt;</ph> to the current collection of managed smart tags.","source":"Adds a <xref href=\"System.ComponentModel.Design.DesignerActionListCollection\"></xref> to the current collection of managed smart tags."}],"pos":[14214,14349],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> method represents the push model of adding smart tag items. The alternate pull model relies on overriding the <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> property in the designer for the corresponding component.  \n  \n When this method is called, the lists to be added are scanned for any <xref:System.ComponentModel.Design.DesignerActionMethodItem> with the <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> property set to `true`. These items are added to the list of designer verbs for this component, through a call to the <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName> method.  \n  \n Smart tags are managed on a component instance basis. The managed collection may contain duplicate entries.  \n  \n This method raises the <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event.","nodes":[{"pos":[0,305],"content":"The <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> method represents the push model of adding smart tag items. The alternate pull model relies on overriding the <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> property in the designer for the corresponding component.","nodes":[{"content":"The <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> method represents the push model of adding smart tag items. The alternate pull model relies on overriding the <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> property in the designer for the corresponding component.","pos":[0,305],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.Add%2A&gt;</ph> method represents the push model of adding smart tag items.","pos":[0,128],"source":"The <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> method represents the push model of adding smart tag items."},{"content":"The alternate pull model relies on overriding the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A&gt;</ph> property in the designer for the corresponding component.","pos":[129,305],"source":" The alternate pull model relies on overriding the <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> property in the designer for the corresponding component."}]}]},{"pos":[312,754],"content":"When this method is called, the lists to be added are scanned for any <xref:System.ComponentModel.Design.DesignerActionMethodItem> with the <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> property set to `true`. These items are added to the list of designer verbs for this component, through a call to the <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName> method.","nodes":[{"content":"When this method is called, the lists to be added are scanned for any <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionMethodItem&gt;</ph> with the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A&gt;</ph> property set to <ph id=\"ph3\">`true`</ph>.","pos":[0,249],"source":"When this method is called, the lists to be added are scanned for any <xref:System.ComponentModel.Design.DesignerActionMethodItem> with the <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> property set to `true`."},{"content":"These items are added to the list of designer verbs for this component, through a call to the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName&gt;</ph> method.","pos":[250,442],"source":" These items are added to the list of designer verbs for this component, through a call to the <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName> method."}]},{"pos":[761,868],"content":"Smart tags are managed on a component instance basis. The managed collection may contain duplicate entries.","nodes":[{"content":"Smart tags are managed on a component instance basis. The managed collection may contain duplicate entries.","pos":[0,107],"nodes":[{"content":"Smart tags are managed on a component instance basis.","pos":[0,53]},{"content":"The managed collection may contain duplicate entries.","pos":[54,107]}]}]},{"pos":[875,989],"content":"This method raises the <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event.","nodes":[{"content":"This method raises the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged&gt;</ph> event.","pos":[0,114],"source":"This method raises the <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event."}]}],"pos":[14360,15358],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ComponentModel.IComponent\"></xref> to associate the smart tags with.","nodes":[{"pos":[0,91],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.IComponent\"&gt;&lt;/xref&gt;</ph> to associate the smart tags with.","source":"The <xref href=\"System.ComponentModel.IComponent\"></xref> to associate the smart tags with."}],"pos":[15621,15713],"yaml":true},{"content":"The <xref href=\"System.ComponentModel.Design.DesignerActionListCollection\"></xref> that contains the new smart tag items to be added.","nodes":[{"pos":[0,133],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignerActionListCollection\"&gt;&lt;/xref&gt;</ph> that contains the new smart tag items to be added.","source":"The <xref href=\"System.ComponentModel.Design.DesignerActionListCollection\"></xref> that contains the new smart tag items to be added."}],"pos":[15841,15975],"yaml":true},{"content":"One or both of the parameters are `null`.","nodes":[{"pos":[0,41],"content":"One or both of the parameters are <ph id=\"ph1\">`null`</ph>.","source":"One or both of the parameters are `null`."}],"pos":[16159,16201],"yaml":true},{"content":"Releases all components from management and clears all push-model smart tag lists.","nodes":[{"pos":[0,82],"content":"Releases all components from management and clears all push-model smart tag lists.","nodes":[{"content":"Releases all components from management and clears all push-model smart tag lists.","pos":[0,82]}]}],"pos":[17184,17267],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.DesignerActionService.Clear%2A> method empties the internal table used to store information about components and their push-model smart tag lists.  \n  \n> [!CAUTION]\n>  Because this method affects all components managed by the current service, and not just the current component, this method should be used judiciously. Typically, the design-time tool developer uses it when resetting a design surface. Component developers should use one of the <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> methods instead to remove individual smart tag items or lists.  \n  \n A <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event is raised for each component that was previously managed by the current service.","nodes":[{"pos":[0,185],"content":"The <xref:System.ComponentModel.Design.DesignerActionService.Clear%2A> method empties the internal table used to store information about components and their push-model smart tag lists.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.Clear%2A&gt;</ph> method empties the internal table used to store information about components and their push-model smart tag lists.","pos":[0,185],"source":"The <xref:System.ComponentModel.Design.DesignerActionService.Clear%2A> method empties the internal table used to store information about components and their push-model smart tag lists."}]},{"pos":[193,614],"content":"[!CAUTION]\n Because this method affects all components managed by the current service, and not just the current component, this method should be used judiciously. Typically, the design-time tool developer uses it when resetting a design surface. Component developers should use one of the <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> methods instead to remove individual smart tag items or lists.","leadings":["","> "],"nodes":[{"content":" Because this method affects all components managed by the current service, and not just the current component, this method should be used judiciously. Typically, the design-time tool developer uses it when resetting a design surface. Component developers should use one of the <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> methods instead to remove individual smart tag items or lists.","pos":[11,419],"nodes":[{"content":"Because this method affects all components managed by the current service, and not just the current component, this method should be used judiciously.","pos":[1,151]},{"content":"Typically, the design-time tool developer uses it when resetting a design surface.","pos":[152,234]},{"content":"Component developers should use one of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.Remove%2A&gt;</ph> methods instead to remove individual smart tag items or lists.","pos":[235,408],"source":" Component developers should use one of the <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> methods instead to remove individual smart tag items or lists."}]}]},{"pos":[621,794],"content":"A <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event is raised for each component that was previously managed by the current service.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged&gt;</ph> event is raised for each component that was previously managed by the current service.","pos":[0,173],"source":"A <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event is raised for each component that was previously managed by the current service."}]}],"pos":[17278,18080],"yaml":true,"extradata":"MT"},{"content":"Determines whether the current smart tag service manages the action lists for the specified component.","nodes":[{"pos":[0,102],"content":"Determines whether the current smart tag service manages the action lists for the specified component.","nodes":[{"content":"Determines whether the current smart tag service manages the action lists for the specified component.","pos":[0,102]}]}],"pos":[19364,19467],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A> method only recognizes push-model smart tags, which are associated to a component with the <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> method.  \n  \n Although there is no structural limitation on the number of concurrent <xref:System.ComponentModel.Design.DesignerActionService> instances created by a design-time tool, typically only a single instance of the service is created per design surface.","nodes":[{"pos":[0,237],"content":"The <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A> method only recognizes push-model smart tags, which are associated to a component with the <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.Contains%2A&gt;</ph> method only recognizes push-model smart tags, which are associated to a component with the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignerActionService.Add%2A&gt;</ph> method.","pos":[0,237],"source":"The <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A> method only recognizes push-model smart tags, which are associated to a component with the <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> method."}]},{"pos":[244,492],"content":"Although there is no structural limitation on the number of concurrent <xref:System.ComponentModel.Design.DesignerActionService> instances created by a design-time tool, typically only a single instance of the service is created per design surface.","nodes":[{"content":"Although there is no structural limitation on the number of concurrent <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService&gt;</ph> instances created by a design-time tool, typically only a single instance of the service is created per design surface.","pos":[0,248],"source":"Although there is no structural limitation on the number of concurrent <xref:System.ComponentModel.Design.DesignerActionService> instances created by a design-time tool, typically only a single instance of the service is created per design surface."}]}],"pos":[19478,19975],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ComponentModel.IComponent\"></xref> to search for.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.IComponent\"&gt;&lt;/xref&gt;</ph> to search for.","source":"The <xref href=\"System.ComponentModel.IComponent\"></xref> to search for."}],"pos":[20155,20228],"yaml":true},{"content":"`true` if the component is managed by the current service; otherwise, `false`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`true`</ph> if the component is managed by the current service; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the component is managed by the current service; otherwise, `false`."}],"pos":[20286,20367],"yaml":true},{"content":"<code>comp</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;comp&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>comp</code> is `null`."}],"pos":[20556,20585],"yaml":true},{"content":"Occurs when a <xref href=\"System.ComponentModel.Design.DesignerActionList\"></xref> is removed or added for any component.","nodes":[{"pos":[0,121],"content":"Occurs when a <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignerActionList\"&gt;&lt;/xref&gt;</ph> is removed or added for any component.","source":"Occurs when a <xref href=\"System.ComponentModel.Design.DesignerActionList\"></xref> is removed or added for any component."}],"pos":[21687,21809],"yaml":true},{"content":"The following table shows the set of specialized classes associated with the <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event.  \n  \n|Specialized type|Description|  \n|----------------------|-----------------|  \n|<xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs>|Adds information specific to smart tag list management. This class is specialized from <xref:System.EventArgs>.|  \n|<xref:System.ComponentModel.Design.DesignerActionListsChangedEventHandler>|Connects the <xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs> with its handler.|  \n|<xref:System.ComponentModel.Design.DesignerActionListsChangedType>|Denotes whether a list has been added or removed.|  \n  \n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).","nodes":[{"pos":[0,168],"content":"The following table shows the set of specialized classes associated with the <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event.","nodes":[{"content":"The following table shows the set of specialized classes associated with the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged&gt;</ph> event.","pos":[0,168],"source":"The following table shows the set of specialized classes associated with the <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event."}]},{"pos":[175,191],"content":"Specialized type","nodes":[{"content":"Specialized type","pos":[0,16]}]},{"pos":[192,203],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[253,324],"content":"<xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs>","nodes":[]},{"pos":[325,436],"content":"Adds information specific to smart tag list management. This class is specialized from <xref:System.EventArgs>.","nodes":[{"content":"Adds information specific to smart tag list management. This class is specialized from <xref:System.EventArgs>.","pos":[0,111],"nodes":[{"content":"Adds information specific to smart tag list management.","pos":[0,55]},{"content":"This class is specialized from <ph id=\"ph1\">&lt;xref:System.EventArgs&gt;</ph>.","pos":[56,111],"source":" This class is specialized from <xref:System.EventArgs>."}]}]},{"pos":[441,515],"content":"<xref:System.ComponentModel.Design.DesignerActionListsChangedEventHandler>","nodes":[]},{"pos":[516,618],"content":"Connects the <xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs> with its handler.","nodes":[{"content":"Connects the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs&gt;</ph> with its handler.","pos":[0,102],"source":"Connects the <xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs> with its handler."}]},{"pos":[623,689],"content":"<xref:System.ComponentModel.Design.DesignerActionListsChangedType>","nodes":[]},{"pos":[690,739],"content":"Denotes whether a list has been added or removed.","nodes":[{"content":"Denotes whether a list has been added or removed.","pos":[0,49]}]},{"pos":[747,889],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>NIB: Consuming Events<ept id=\"p1\">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.","source":"For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."}],"pos":[21820,22720],"yaml":true,"extradata":"MT"},{"content":"Releases all resources used by the <xref href=\"System.ComponentModel.Design.DesignerActionService\"></xref> class.","nodes":[{"pos":[0,113],"content":"Releases all resources used by the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignerActionService\"&gt;&lt;/xref&gt;</ph> class.","source":"Releases all resources used by the <xref href=\"System.ComponentModel.Design.DesignerActionService\"></xref> class."}],"pos":[23978,24092],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> method is the implementation of the only method mandated by the <xref:System.IDisposable> interface. Call this method when you are finished using the <xref:System.ComponentModel.Design.DesignerActionService>. It performs two main actions:  \n  \n-   Removes the current service from the list of available services in the design environment through a call to the <xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A> method.  \n  \n-   Unsubscribes to component change events from the associated <xref:System.ComponentModel.Design.IComponentChangeService> interface.  \n  \n Call <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.DesignerActionService>. The <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.DesignerActionService> in an unusable state. After calling <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.DesignerActionService> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.DesignerActionService> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.DesignerActionService>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.DesignerActionService> object's `Finalize` method.","nodes":[{"pos":[0,311],"content":"The <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> method is the implementation of the only method mandated by the <xref:System.IDisposable> interface. Call this method when you are finished using the <xref:System.ComponentModel.Design.DesignerActionService>. It performs two main actions:","nodes":[{"content":"The <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> method is the implementation of the only method mandated by the <xref:System.IDisposable> interface. Call this method when you are finished using the <xref:System.ComponentModel.Design.DesignerActionService>. It performs two main actions:","pos":[0,311],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A&gt;</ph> method is the implementation of the only method mandated by the <ph id=\"ph2\">&lt;xref:System.IDisposable&gt;</ph> interface.","pos":[0,173],"source":"The <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> method is the implementation of the only method mandated by the <xref:System.IDisposable> interface."},{"content":"Call this method when you are finished using the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService&gt;</ph>.","pos":[174,281],"source":" Call this method when you are finished using the <xref:System.ComponentModel.Design.DesignerActionService>."},{"content":"It performs two main actions:","pos":[282,311]}]}]},{"pos":[321,511],"content":"Removes the current service from the list of available services in the design environment through a call to the <xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A> method.","nodes":[{"content":"Removes the current service from the list of available services in the design environment through a call to the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A&gt;</ph> method.","pos":[0,190],"source":"Removes the current service from the list of available services in the design environment through a call to the <xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A> method."}]},{"pos":[521,651],"content":"Unsubscribes to component change events from the associated <xref:System.ComponentModel.Design.IComponentChangeService> interface.","nodes":[{"content":"Unsubscribes to component change events from the associated <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph> interface.","pos":[0,130],"source":"Unsubscribes to component change events from the associated <xref:System.ComponentModel.Design.IComponentChangeService> interface."}]},{"pos":[658,1510],"content":"Call <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.DesignerActionService>. The <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.DesignerActionService> in an unusable state. After calling <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.DesignerActionService> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.DesignerActionService> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A&gt;</ph> when you are finished using the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignerActionService&gt;</ph>.","pos":[0,164],"source":"Call <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.DesignerActionService>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A&gt;</ph> method leaves the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignerActionService&gt;</ph> in an unusable state.","pos":[165,335],"source":" The <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.DesignerActionService> in an unusable state."},{"content":"After calling <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A&gt;</ph>, you must release all references to the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignerActionService&gt;</ph> so the garbage collector can reclaim the memory that the <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.DesignerActionService&gt;</ph> was occupying.","pos":[336,646],"source":" After calling <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.DesignerActionService> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.DesignerActionService> was occupying."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.","pos":[647,852],"source":" For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)."}]},{"pos":[1518,1893],"content":"[!NOTE]\n Always call <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.DesignerActionService>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.DesignerActionService> object's `Finalize` method.","leadings":["","> "],"nodes":[{"content":" Always call <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.DesignerActionService>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.DesignerActionService> object's `Finalize` method.","pos":[8,373],"nodes":[{"content":"Always call <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A&gt;</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignerActionService&gt;</ph>.","pos":[1,186],"source":" Always call <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.DesignerActionService>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService&gt;</ph> object's <ph id=\"ph2\">`Finalize`</ph> method.","pos":[187,365],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.DesignerActionService> object's `Finalize` method."}]}]}],"pos":[24103,26008],"yaml":true,"extradata":"MT"},{"content":"Releases the unmanaged resources used by the <xref href=\"System.ComponentModel.Design.DesignerActionService\"></xref> and optionally releases the managed resources.","nodes":[{"pos":[0,163],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.DesignerActionService\"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.ComponentModel.Design.DesignerActionService\"></xref> and optionally releases the managed resources."}],"pos":[27227,27391],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> method is the implementation of the only method mandated by the <xref:System.IDisposable> interface. Call this method when you are finished using the <xref:System.ComponentModel.Design.DesignerActionService>. It performs two main actions:  \n  \n-   Removes the current service from the list of available services in the design environment through a call to the <xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A> method.  \n  \n-   Unsubscribes to component change events from the associated <xref:System.ComponentModel.Design.IComponentChangeService> interface.  \n  \n This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \n  \n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignerActionService> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"pos":[0,311],"content":"The <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> method is the implementation of the only method mandated by the <xref:System.IDisposable> interface. Call this method when you are finished using the <xref:System.ComponentModel.Design.DesignerActionService>. It performs two main actions:","nodes":[{"content":"The <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> method is the implementation of the only method mandated by the <xref:System.IDisposable> interface. Call this method when you are finished using the <xref:System.ComponentModel.Design.DesignerActionService>. It performs two main actions:","pos":[0,311],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A&gt;</ph> method is the implementation of the only method mandated by the <ph id=\"ph2\">&lt;xref:System.IDisposable&gt;</ph> interface.","pos":[0,173],"source":"The <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> method is the implementation of the only method mandated by the <xref:System.IDisposable> interface."},{"content":"Call this method when you are finished using the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService&gt;</ph>.","pos":[174,281],"source":" Call this method when you are finished using the <xref:System.ComponentModel.Design.DesignerActionService>."},{"content":"It performs two main actions:","pos":[282,311]}]}]},{"pos":[321,511],"content":"Removes the current service from the list of available services in the design environment through a call to the <xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A> method.","nodes":[{"content":"Removes the current service from the list of available services in the design environment through a call to the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A&gt;</ph> method.","pos":[0,190],"source":"Removes the current service from the list of available services in the design environment through a call to the <xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A> method."}]},{"pos":[521,651],"content":"Unsubscribes to component change events from the associated <xref:System.ComponentModel.Design.IComponentChangeService> interface.","nodes":[{"content":"Unsubscribes to component change events from the associated <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph> interface.","pos":[0,130],"source":"Unsubscribes to component change events from the associated <xref:System.ComponentModel.Design.IComponentChangeService> interface."}]},{"pos":[658,951],"content":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.","nodes":[{"content":"This method is called by the public <ph id=\"ph1\">`Dispose()`</ph> method and the <ph id=\"ph2\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.","pos":[0,103],"source":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">`Dispose()`</ph> invokes the protected <ph id=\"ph2\">`Dispose(Boolean)`</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[104,209],"source":"`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id=\"ph2\">`Dispose`</ph> with <ph id=\"ph3\">`disposing`</ph> set to <ph id=\"ph4\">`false`</ph>.","pos":[210,293],"source":" <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`."}]},{"pos":[958,1212],"content":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignerActionService> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is <ph id=\"ph2\">`true`</ph>, this method releases all resources held by any managed objects that this <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.DesignerActionService&gt;</ph> references.","pos":[0,184],"source":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignerActionService> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[185,254],"source":" This method invokes the `Dispose()` method of each referenced object."}]}],"pos":[27402,28625],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[28779,28882],"yaml":true},{"content":"Returns the collection of smart tag item lists associated with a component.","nodes":[{"pos":[0,75],"content":"Returns the collection of smart tag item lists associated with a component.","nodes":[{"content":"Returns the collection of smart tag item lists associated with a component.","pos":[0,75]}]}],"pos":[30170,30246],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> method is equivalent to a call to the <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%28System.ComponentModel.IComponent%2CSystem.ComponentModel.Design.ComponentActionsType%29> method using a `type` parameter of <xref:System.ComponentModel.Design.ComponentActionsType.All>. Therefore, the collection returned will contain both the push and pull lists of smart tags.  \n  \n The returned <xref:System.ComponentModel.Design.DesignerActionListCollection> is the union of item lists added through the <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> methods and also the lists obtained from the <xref:System.ComponentModel.Design.DesignerCommandSet> instance obtained from the component’s site.","nodes":[{"pos":[0,479],"content":"The <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> method is equivalent to a call to the <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%28System.ComponentModel.IComponent%2CSystem.ComponentModel.Design.ComponentActionsType%29> method using a `type` parameter of <xref:System.ComponentModel.Design.ComponentActionsType.All>. Therefore, the collection returned will contain both the push and pull lists of smart tags.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A&gt;</ph> method is equivalent to a call to the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%28System.ComponentModel.IComponent%2CSystem.ComponentModel.Design.ComponentActionsType%29&gt;</ph> method using a <ph id=\"ph3\">`type`</ph> parameter of <ph id=\"ph4\">&lt;xref:System.ComponentModel.Design.ComponentActionsType.All&gt;</ph>.","pos":[0,387],"source":"The <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> method is equivalent to a call to the <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%28System.ComponentModel.IComponent%2CSystem.ComponentModel.Design.ComponentActionsType%29> method using a `type` parameter of <xref:System.ComponentModel.Design.ComponentActionsType.All>."},{"content":"Therefore, the collection returned will contain both the push and pull lists of smart tags.","pos":[388,479]}]},{"pos":[486,818],"content":"The returned <xref:System.ComponentModel.Design.DesignerActionListCollection> is the union of item lists added through the <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> methods and also the lists obtained from the <xref:System.ComponentModel.Design.DesignerCommandSet> instance obtained from the component’s site.","nodes":[{"content":"The returned <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionListCollection&gt;</ph> is the union of item lists added through the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignerActionService.Add%2A&gt;</ph> methods and also the lists obtained from the <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.DesignerCommandSet&gt;</ph> instance obtained from the component’s site.","pos":[0,332],"source":"The returned <xref:System.ComponentModel.Design.DesignerActionListCollection> is the union of item lists added through the <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> methods and also the lists obtained from the <xref:System.ComponentModel.Design.DesignerCommandSet> instance obtained from the component’s site."}]}],"pos":[30257,31080],"yaml":true,"extradata":"MT"},{"content":"The component that the smart tags are associated with.","nodes":[{"pos":[0,54],"content":"The component that the smart tags are associated with.","nodes":[{"content":"The component that the smart tags are associated with.","pos":[0,54]}]}],"pos":[31334,31389],"yaml":true},{"content":"The collection of smart tags for the specified component.","nodes":[{"pos":[0,57],"content":"The collection of smart tags for the specified component.","nodes":[{"content":"The collection of smart tags for the specified component.","pos":[0,57]}]}],"pos":[31490,31548],"yaml":true},{"content":"<code>comp</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;comp&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>comp</code> is `null`."}],"pos":[31748,31777],"yaml":true},{"content":"Returns the collection of smart tag item lists of the specified type associated with a component.","nodes":[{"pos":[0,97],"content":"Returns the collection of smart tag item lists of the specified type associated with a component.","nodes":[{"content":"Returns the collection of smart tag item lists of the specified type associated with a component.","pos":[0,97]}]}],"pos":[33192,33290],"yaml":true},{"content":"This version of the overloaded <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> method filters on the `type` parameter, which can have one of the following values.  \n  \n|Value|Description|  \n|-----------|-----------------|  \n|<xref:System.ComponentModel.Design.ComponentActionsType.All>|All associated smart tags.|  \n|<xref:System.ComponentModel.Design.ComponentActionsType.Component>|Pull-model smart tags only.|  \n|<xref:System.ComponentModel.Design.ComponentActionsType.Service>|Push-model smart tags only.|  \n  \n If the associated designer for a component does not supply a pull-model smart tag list, then the <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> method will instead use the designer's design-time shortcut menu items from the <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> property.","nodes":[{"pos":[0,195],"content":"This version of the overloaded <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A&gt;</ph> method filters on the <ph id=\"ph2\">`type`</ph> parameter, which can have one of the following values.","source":"This version of the overloaded <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> method filters on the `type` parameter, which can have one of the following values."},{"pos":[202,207],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[208,219],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[258,318],"content":"<xref:System.ComponentModel.Design.ComponentActionsType.All>","nodes":[]},{"pos":[319,345],"content":"All associated smart tags.","nodes":[{"content":"All associated smart tags.","pos":[0,26]}]},{"pos":[350,416],"content":"<xref:System.ComponentModel.Design.ComponentActionsType.Component>","nodes":[]},{"pos":[417,444],"content":"Pull-model smart tags only.","nodes":[{"content":"Pull-model smart tags only.","pos":[0,27]}]},{"pos":[449,513],"content":"<xref:System.ComponentModel.Design.ComponentActionsType.Service>","nodes":[]},{"pos":[514,541],"content":"Push-model smart tags only.","nodes":[{"content":"Push-model smart tags only.","pos":[0,27]}]},{"pos":[549,879],"content":"If the associated designer for a component does not supply a pull-model smart tag list, then the <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> method will instead use the designer's design-time shortcut menu items from the <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> property.","nodes":[{"content":"If the associated designer for a component does not supply a pull-model smart tag list, then the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A&gt;</ph> method will instead use the designer's design-time shortcut menu items from the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A&gt;</ph> property.","pos":[0,330],"source":"If the associated designer for a component does not supply a pull-model smart tag list, then the <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> method will instead use the designer's design-time shortcut menu items from the <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> property."}]}],"pos":[33301,34191],"yaml":true,"extradata":"MT"},{"content":"The component that the smart tags are associated with.","nodes":[{"pos":[0,54],"content":"The component that the smart tags are associated with.","nodes":[{"content":"The component that the smart tags are associated with.","pos":[0,54]}]}],"pos":[34509,34564],"yaml":true},{"content":"The <xref href=\"System.ComponentModel.Design.ComponentActionsType\"></xref> to filter the associated smart tags with.","nodes":[{"pos":[0,116],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.ComponentActionsType\"&gt;&lt;/xref&gt;</ph> to filter the associated smart tags with.","source":"The <xref href=\"System.ComponentModel.Design.ComponentActionsType\"></xref> to filter the associated smart tags with."}],"pos":[34660,34777],"yaml":true},{"content":"The collection of smart tags of the specified type for the specified component.","nodes":[{"pos":[0,79],"content":"The collection of smart tags of the specified type for the specified component.","nodes":[{"content":"The collection of smart tags of the specified type for the specified component.","pos":[0,79]}]}],"pos":[34878,34958],"yaml":true},{"content":"<code>comp</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;comp&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>comp</code> is `null`."}],"pos":[35158,35187],"yaml":true},{"content":"Retrieves the pull-model smart tags associated with a component.","nodes":[{"pos":[0,64],"content":"Retrieves the pull-model smart tags associated with a component.","nodes":[{"content":"Retrieves the pull-model smart tags associated with a component.","pos":[0,64]}]}],"pos":[36698,36763],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions%2A> method is a helper method for the <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> methods. <xref:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions%2A> searches for pull-model smart tags of type <xref:System.ComponentModel.Design.ComponentActionsType.Component>, and then adds these to the supplied `actionLists` collection.  \n  \n If the component's developer does not explicitly supply a collection of smart tags through the <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> property of its designer, this method will reuse the design-time shortcut menu entries, which are obtained through the <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> property of the designer.","nodes":[{"pos":[0,478],"content":"The <xref:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions%2A> method is a helper method for the <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> methods. <xref:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions%2A> searches for pull-model smart tags of type <xref:System.ComponentModel.Design.ComponentActionsType.Component>, and then adds these to the supplied `actionLists` collection.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions%2A&gt;</ph> method is a helper method for the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A&gt;</ph> methods.","pos":[0,216],"source":"The <xref:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions%2A> method is a helper method for the <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> methods."},{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions%2A&gt;</ph> searches for pull-model smart tags of type <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.ComponentActionsType.Component&gt;</ph>, and then adds these to the supplied <ph id=\"ph3\">`actionLists`</ph> collection.","pos":[217,478],"source":" <xref:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions%2A> searches for pull-model smart tags of type <xref:System.ComponentModel.Design.ComponentActionsType.Component>, and then adds these to the supplied `actionLists` collection."}]},{"pos":[485,856],"content":"If the component's developer does not explicitly supply a collection of smart tags through the <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> property of its designer, this method will reuse the design-time shortcut menu entries, which are obtained through the <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> property of the designer.","nodes":[{"content":"If the component's developer does not explicitly supply a collection of smart tags through the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A&gt;</ph> property of its designer, this method will reuse the design-time shortcut menu entries, which are obtained through the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A&gt;</ph> property of the designer.","pos":[0,371],"source":"If the component's developer does not explicitly supply a collection of smart tags through the <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> property of its designer, this method will reuse the design-time shortcut menu entries, which are obtained through the <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> property of the designer."}]}],"pos":[36774,37635],"yaml":true,"extradata":"MT"},{"content":"The component that the smart tags are associated with.","nodes":[{"pos":[0,54],"content":"The component that the smart tags are associated with.","nodes":[{"content":"The component that the smart tags are associated with.","pos":[0,54]}]}],"pos":[37926,37981],"yaml":true},{"content":"The collection to add the associated smart tags to.","nodes":[{"pos":[0,51],"content":"The collection to add the associated smart tags to.","nodes":[{"content":"The collection to add the associated smart tags to.","pos":[0,51]}]}],"pos":[38092,38144],"yaml":true},{"content":"One or both of the parameters are `null`.","nodes":[{"pos":[0,41],"content":"One or both of the parameters are <ph id=\"ph1\">`null`</ph>.","source":"One or both of the parameters are `null`."}],"pos":[38352,38394],"yaml":true},{"content":"Retrieves the push-model smart tags associated with a component.","nodes":[{"pos":[0,64],"content":"Retrieves the push-model smart tags associated with a component.","nodes":[{"content":"Retrieves the push-model smart tags associated with a component.","pos":[0,64]}]}],"pos":[39899,39964],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions%2A> method is a helper method for the <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> methods. It searches for push-model smart tags of type <xref:System.ComponentModel.Design.ComponentActionsType.Service>, and then adds these to the supplied `actionLists` collection.","nodes":[{"pos":[0,389],"content":"The <xref:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions%2A> method is a helper method for the <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> methods. It searches for push-model smart tags of type <xref:System.ComponentModel.Design.ComponentActionsType.Service>, and then adds these to the supplied `actionLists` collection.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions%2A&gt;</ph> method is a helper method for the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A&gt;</ph> methods.","pos":[0,215],"source":"The <xref:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions%2A> method is a helper method for the <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> methods."},{"content":"It searches for push-model smart tags of type <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.ComponentActionsType.Service&gt;</ph>, and then adds these to the supplied <ph id=\"ph2\">`actionLists`</ph> collection.","pos":[216,389],"source":" It searches for push-model smart tags of type <xref:System.ComponentModel.Design.ComponentActionsType.Service>, and then adds these to the supplied `actionLists` collection."}]}],"pos":[39975,40365],"yaml":true,"extradata":"MT"},{"content":"The component that the smart tags are associated with.","nodes":[{"pos":[0,54],"content":"The component that the smart tags are associated with.","nodes":[{"content":"The component that the smart tags are associated with.","pos":[0,54]}]}],"pos":[40655,40710],"yaml":true},{"content":"The collection to add the associated smart tags to.","nodes":[{"pos":[0,51],"content":"The collection to add the associated smart tags to.","nodes":[{"content":"The collection to add the associated smart tags to.","pos":[0,51]}]}],"pos":[40821,40873],"yaml":true},{"content":"One or both of the parameters are `null`.","nodes":[{"pos":[0,41],"content":"One or both of the parameters are <ph id=\"ph1\">`null`</ph>.","source":"One or both of the parameters are `null`."}],"pos":[41080,41122],"yaml":true},{"content":"Removes the specified smart tag list from all components managed by the current service.","nodes":[{"pos":[0,88],"content":"Removes the specified smart tag list from all components managed by the current service.","nodes":[{"content":"Removes the specified smart tag list from all components managed by the current service.","pos":[0,88]}]}],"pos":[42312,42401],"yaml":true},{"content":"This version of the <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> method is typically used by design tool developers, because component developers typically do not know what other components exist in the current design space.  \n  \n If successful, this method raises the <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event.","nodes":[{"pos":[0,247],"content":"This version of the <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> method is typically used by design tool developers, because component developers typically do not know what other components exist in the current design space.","nodes":[{"content":"This version of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.Remove%2A&gt;</ph> method is typically used by design tool developers, because component developers typically do not know what other components exist in the current design space.","pos":[0,247],"source":"This version of the <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> method is typically used by design tool developers, because component developers typically do not know what other components exist in the current design space."}]},{"pos":[254,383],"content":"If successful, this method raises the <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event.","nodes":[{"content":"If successful, this method raises the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged&gt;</ph> event.","pos":[0,129],"source":"If successful, this method raises the <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event."}]}],"pos":[42412,42800],"yaml":true,"extradata":"MT"},{"content":"The list of smart tags to be removed.","nodes":[{"pos":[0,37],"content":"The list of smart tags to be removed.","nodes":[{"content":"The list of smart tags to be removed.","pos":[0,37]}]}],"pos":[43020,43058],"yaml":true},{"content":"<code>actionList</code> is `null`.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;actionList&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>actionList</code> is `null`."}],"pos":[43245,43280],"yaml":true},{"content":"Removes all the smart tag lists associated with the specified component.","nodes":[{"pos":[0,72],"content":"Removes all the smart tag lists associated with the specified component.","nodes":[{"content":"Removes all the smart tag lists associated with the specified component.","pos":[0,72]}]}],"pos":[44401,44474],"yaml":true},{"content":"If successful, the <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> method raises the <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event.","nodes":[{"pos":[0,196],"content":"If successful, the <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> method raises the <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event.","nodes":[{"content":"If successful, the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.Remove%2A&gt;</ph> method raises the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged&gt;</ph> event.","pos":[0,196],"source":"If successful, the <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> method raises the <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event."}]}],"pos":[44485,44682],"yaml":true,"extradata":"MT"},{"content":"The component to disassociate the smart tags from.","nodes":[{"pos":[0,50],"content":"The component to disassociate the smart tags from.","nodes":[{"content":"The component to disassociate the smart tags from.","pos":[0,50]}]}],"pos":[44860,44911],"yaml":true},{"content":"<code>comp</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;comp&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>comp</code> is `null`."}],"pos":[45098,45127],"yaml":true},{"content":"Removes the specified smart tag list from the specified component.","nodes":[{"pos":[0,66],"content":"Removes the specified smart tag list from the specified component.","nodes":[{"content":"Removes the specified smart tag list from the specified component.","pos":[0,66]}]}],"pos":[46452,46519],"yaml":true},{"content":"If successful, the <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> method raises the <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event.","nodes":[{"pos":[0,196],"content":"If successful, the <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> method raises the <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event.","nodes":[{"content":"If successful, the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.DesignerActionService.Remove%2A&gt;</ph> method raises the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged&gt;</ph> event.","pos":[0,196],"source":"If successful, the <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> method raises the <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event."}]}],"pos":[46530,46727],"yaml":true,"extradata":"MT"},{"content":"The component to disassociate the smart tags from.","nodes":[{"pos":[0,50],"content":"The component to disassociate the smart tags from.","nodes":[{"content":"The component to disassociate the smart tags from.","pos":[0,50]}]}],"pos":[46965,47016],"yaml":true},{"content":"The smart tag list to remove.","nodes":[{"pos":[0,29],"content":"The smart tag list to remove.","nodes":[{"content":"The smart tag list to remove.","pos":[0,29]}]}],"pos":[47116,47146],"yaml":true},{"content":"One or both of the parameters are `null`.","nodes":[{"pos":[0,41],"content":"One or both of the parameters are <ph id=\"ph1\">`null`</ph>.","source":"One or both of the parameters are `null`."}],"pos":[47333,47375],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.DesignerActionService\n  commentId: T:System.ComponentModel.Design.DesignerActionService\n  id: DesignerActionService\n  children:\n  - System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)\n  - System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)\n  - System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)\n  - System.ComponentModel.Design.DesignerActionService.Clear\n  - System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)\n  - System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged\n  - System.ComponentModel.Design.DesignerActionService.Dispose\n  - System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)\n  - System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)\n  - System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)\n  - System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)\n  - System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)\n  - System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)\n  - System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)\n  - System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)\n  langs:\n  - csharp\n  name: DesignerActionService\n  nameWithType: DesignerActionService\n  fullName: System.ComponentModel.Design.DesignerActionService\n  type: Class\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Establishes a design-time service that manages the collection of <xref href=\"System.ComponentModel.Design.DesignerActionItem\"></xref> objects for components.\n  remarks: \"The <xref:System.ComponentModel.Design.DesignerActionService> class is responsible for managing the collection of <xref:System.ComponentModel.Design.DesignerActionItem> objects for each instance of a component that exists on a form at design time. This class enables a direct push model of item creation, and is primarily intended for use by design-time tool developers, although it can also be used by component and custom control developers.  \\n  \\n Design-time tool developers will need to determine the list of items to display for a component and determine when this list changes. They may also create add-ins that operate in conjunction with smart tag panel objects.  \\n  \\n Advanced component developers may need to dynamically control the items associated with a component, thus replacing or supplementing the standard pull model. For example, panel commands can be altered depending on the context of their use and the design-time state of the component.  \\n  \\n> [!NOTE]\\n>  The <xref:System.ComponentModel.Design.DesignerActionService> is actually the driving service behind both the push and pull models; however, in the latter case it operates implicitly.  \\n  \\n <xref:System.ComponentModel.Design.DesignerActionService> provides a straightforward interface for accessing and manipulating the items for each component, including the following methods and events:  \\n  \\n-   The <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A> method determines whether the <xref:System.ComponentModel.Design.DesignerActionService> is currently managing a particular component.  \\n  \\n-   The <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> method supports the enumeration of the lists of items.  \\n  \\n-   The <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> method allows adding a <xref:System.ComponentModel.Design.DesignerActionList> or <xref:System.ComponentModel.Design.DesignerActionListCollection> to the set of existing items for a component instance. In contrast, the <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> method removes one or all of the item lists associated with a component.  \\n  \\n    > [!NOTE]\\n    >  The <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> method represents the direct push model of associating panel items with a component. In contrast, the pull model relies on overriding the <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> property of the designer class for that component. The design environment is responsible for adding these items into the current <xref:System.ComponentModel.Design.DesignerActionService> when a component is created on the design surface.  \\n  \\n    > [!IMPORTANT]\\n    >  The <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>, <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>, <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A>, and <xref:System.ComponentModel.Design.DesignerActionService.Clear%2A> methods only consider or affect push-model items.  \\n  \\n-   The <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event indicates when the collection of items changes for a component.  \\n  \\n Because it is often desirable to use some of the same panel items in both the component's design-time shortcut menu and its panel, a large degree of interoperability exists between <xref:System.ComponentModel.Design.DesignerActionItem> objects and designer verbs.  \\n  \\n If a component designer does not explicitly specify a <xref:System.ComponentModel.Design.DesignerActionList> (that is, it does not contain an overridden <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> property), then a list will be created from existing designer verbs. These verbs are specified by the <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> property. In this case, an internal verb list class is used to contain the collection of verb item panel entries.  \\n  \\n If you want a <xref:System.ComponentModel.Design.DesignerActionMethodItem> to be used both as a panel entry and a design-time shortcut menu entry, then you can set the `includeAsDesignerVerb` parameter in the item's constructor.  \\n  \\n Use the <xref:System.ComponentModel.Design.DesignerActionUIService> to control the display of your designer's <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>.\"\n  syntax:\n    content: 'public class DesignerActionService : IDisposable'\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Web.UI.Design.WebFormsDesignerActionService\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignerActionService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)\n  commentId: M:System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)\n  id: '#ctor(System.IServiceProvider)'\n  parent: System.ComponentModel.Design.DesignerActionService\n  langs:\n  - csharp\n  name: DesignerActionService(IServiceProvider)\n  nameWithType: DesignerActionService.DesignerActionService(IServiceProvider)\n  fullName: DesignerActionService.DesignerActionService(IServiceProvider)\n  type: Constructor\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.DesignerActionService\"></xref> class.\n  remarks: \"A service provider is necessary for monitoring selection and component changes. It is expected to support the <xref:System.ComponentModel.Design.IDesignerHost> and <xref:System.ComponentModel.Design.IComponentChangeService> types. The <xref:System.ComponentModel.Design.DesignerActionService> class uses an internal table to manage components and their associated <xref:System.ComponentModel.Design.DesignerActionList> smart tags.  \\n  \\n Typically, component developers will not need to create an instance of this class; instead, they can acquire an existing instance through a call to the <xref:System.ComponentModel.Component.GetService%2A?displayProperty=fullName> method.\"\n  syntax:\n    content: public DesignerActionService (IServiceProvider serviceProvider);\n    parameters:\n    - id: serviceProvider\n      type: System.IServiceProvider\n      description: The service provider for the current design-time environment.\n  overload: System.ComponentModel.Design.DesignerActionService.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignerActionService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)\n  commentId: M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)\n  id: Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)\n  parent: System.ComponentModel.Design.DesignerActionService\n  langs:\n  - csharp\n  name: Add(IComponent, DesignerActionList)\n  nameWithType: DesignerActionService.Add(IComponent, DesignerActionList)\n  fullName: DesignerActionService.Add(IComponent, DesignerActionList)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Adds a <xref href=\"System.ComponentModel.Design.DesignerActionList\"></xref> to the current collection of managed smart tags.\n  remarks: \"The <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> method represents the push model of adding smart tag items. The alternate pull model relies on overriding the <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> property in the designer for the corresponding component.  \\n  \\n When this method is called, the lists to be added are scanned for any <xref:System.ComponentModel.Design.DesignerActionMethodItem> with the <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> property set to `true`. These items are added to the list of designer verbs for this component, through a call to the <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName> method.  \\n  \\n Smart tags are managed on a component instance basis. The managed collection may contain duplicate entries.  \\n  \\n This method raises the <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event.\"\n  syntax:\n    content: public void Add (System.ComponentModel.IComponent comp, System.ComponentModel.Design.DesignerActionList actionList);\n    parameters:\n    - id: comp\n      type: System.ComponentModel.IComponent\n      description: The <xref href=\"System.ComponentModel.IComponent\"></xref> to associate the smart tags with.\n    - id: actionList\n      type: System.ComponentModel.Design.DesignerActionList\n      description: The <xref href=\"System.ComponentModel.Design.DesignerActionList\"></xref> that contains the new smart tag items to be added.\n  overload: System.ComponentModel.Design.DesignerActionService.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or both of the parameters are `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignerActionService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)\n  commentId: M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)\n  id: Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)\n  parent: System.ComponentModel.Design.DesignerActionService\n  langs:\n  - csharp\n  name: Add(IComponent, DesignerActionListCollection)\n  nameWithType: DesignerActionService.Add(IComponent, DesignerActionListCollection)\n  fullName: DesignerActionService.Add(IComponent, DesignerActionListCollection)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Adds a <xref href=\"System.ComponentModel.Design.DesignerActionListCollection\"></xref> to the current collection of managed smart tags.\n  remarks: \"The <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> method represents the push model of adding smart tag items. The alternate pull model relies on overriding the <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> property in the designer for the corresponding component.  \\n  \\n When this method is called, the lists to be added are scanned for any <xref:System.ComponentModel.Design.DesignerActionMethodItem> with the <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> property set to `true`. These items are added to the list of designer verbs for this component, through a call to the <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName> method.  \\n  \\n Smart tags are managed on a component instance basis. The managed collection may contain duplicate entries.  \\n  \\n This method raises the <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event.\"\n  syntax:\n    content: public void Add (System.ComponentModel.IComponent comp, System.ComponentModel.Design.DesignerActionListCollection designerActionListCollection);\n    parameters:\n    - id: comp\n      type: System.ComponentModel.IComponent\n      description: The <xref href=\"System.ComponentModel.IComponent\"></xref> to associate the smart tags with.\n    - id: designerActionListCollection\n      type: System.ComponentModel.Design.DesignerActionListCollection\n      description: The <xref href=\"System.ComponentModel.Design.DesignerActionListCollection\"></xref> that contains the new smart tag items to be added.\n  overload: System.ComponentModel.Design.DesignerActionService.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or both of the parameters are `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignerActionService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignerActionService.Clear\n  commentId: M:System.ComponentModel.Design.DesignerActionService.Clear\n  id: Clear\n  parent: System.ComponentModel.Design.DesignerActionService\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: DesignerActionService.Clear()\n  fullName: DesignerActionService.Clear()\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Releases all components from management and clears all push-model smart tag lists.\n  remarks: \"The <xref:System.ComponentModel.Design.DesignerActionService.Clear%2A> method empties the internal table used to store information about components and their push-model smart tag lists.  \\n  \\n> [!CAUTION]\\n>  Because this method affects all components managed by the current service, and not just the current component, this method should be used judiciously. Typically, the design-time tool developer uses it when resetting a design surface. Component developers should use one of the <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> methods instead to remove individual smart tag items or lists.  \\n  \\n A <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event is raised for each component that was previously managed by the current service.\"\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.ComponentModel.Design.DesignerActionService.Clear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignerActionService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)\n  commentId: M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)\n  id: Contains(System.ComponentModel.IComponent)\n  parent: System.ComponentModel.Design.DesignerActionService\n  langs:\n  - csharp\n  name: Contains(IComponent)\n  nameWithType: DesignerActionService.Contains(IComponent)\n  fullName: DesignerActionService.Contains(IComponent)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Determines whether the current smart tag service manages the action lists for the specified component.\n  remarks: \"The <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A> method only recognizes push-model smart tags, which are associated to a component with the <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> method.  \\n  \\n Although there is no structural limitation on the number of concurrent <xref:System.ComponentModel.Design.DesignerActionService> instances created by a design-time tool, typically only a single instance of the service is created per design surface.\"\n  syntax:\n    content: public bool Contains (System.ComponentModel.IComponent comp);\n    parameters:\n    - id: comp\n      type: System.ComponentModel.IComponent\n      description: The <xref href=\"System.ComponentModel.IComponent\"></xref> to search for.\n    return:\n      type: System.Boolean\n      description: '`true` if the component is managed by the current service; otherwise, `false`.'\n  overload: System.ComponentModel.Design.DesignerActionService.Contains*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>comp</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignerActionService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged\n  commentId: E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged\n  id: DesignerActionListsChanged\n  parent: System.ComponentModel.Design.DesignerActionService\n  langs:\n  - csharp\n  name: DesignerActionListsChanged\n  nameWithType: DesignerActionService.DesignerActionListsChanged\n  fullName: DesignerActionService.DesignerActionListsChanged\n  type: Event\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Occurs when a <xref href=\"System.ComponentModel.Design.DesignerActionList\"></xref> is removed or added for any component.\n  remarks: \"The following table shows the set of specialized classes associated with the <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event.  \\n  \\n|Specialized type|Description|  \\n|----------------------|-----------------|  \\n|<xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs>|Adds information specific to smart tag list management. This class is specialized from <xref:System.EventArgs>.|  \\n|<xref:System.ComponentModel.Design.DesignerActionListsChangedEventHandler>|Connects the <xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs> with its handler.|  \\n|<xref:System.ComponentModel.Design.DesignerActionListsChangedType>|Denotes whether a list has been added or removed.|  \\n  \\n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).\"\n  syntax:\n    content: public event System.ComponentModel.Design.DesignerActionListsChangedEventHandler DesignerActionListsChanged;\n    return:\n      type: System.ComponentModel.Design.DesignerActionListsChangedEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignerActionService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignerActionService.Dispose\n  commentId: M:System.ComponentModel.Design.DesignerActionService.Dispose\n  id: Dispose\n  parent: System.ComponentModel.Design.DesignerActionService\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: DesignerActionService.Dispose()\n  fullName: DesignerActionService.Dispose()\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Releases all resources used by the <xref href=\"System.ComponentModel.Design.DesignerActionService\"></xref> class.\n  remarks: \"The <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> method is the implementation of the only method mandated by the <xref:System.IDisposable> interface. Call this method when you are finished using the <xref:System.ComponentModel.Design.DesignerActionService>. It performs two main actions:  \\n  \\n-   Removes the current service from the list of available services in the design environment through a call to the <xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A> method.  \\n  \\n-   Unsubscribes to component change events from the associated <xref:System.ComponentModel.Design.IComponentChangeService> interface.  \\n  \\n Call <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.DesignerActionService>. The <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.DesignerActionService> in an unusable state. After calling <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.DesignerActionService> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.DesignerActionService> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \\n  \\n> [!NOTE]\\n>  Always call <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.DesignerActionService>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.DesignerActionService> object's `Finalize` method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.ComponentModel.Design.DesignerActionService.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignerActionService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)\n  commentId: M:System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.ComponentModel.Design.DesignerActionService\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: DesignerActionService.Dispose(Boolean)\n  fullName: DesignerActionService.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Releases the unmanaged resources used by the <xref href=\"System.ComponentModel.Design.DesignerActionService\"></xref> and optionally releases the managed resources.\n  remarks: \"The <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> method is the implementation of the only method mandated by the <xref:System.IDisposable> interface. Call this method when you are finished using the <xref:System.ComponentModel.Design.DesignerActionService>. It performs two main actions:  \\n  \\n-   Removes the current service from the list of available services in the design environment through a call to the <xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A> method.  \\n  \\n-   Unsubscribes to component change events from the associated <xref:System.ComponentModel.Design.IComponentChangeService> interface.  \\n  \\n This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignerActionService> references. This method invokes the `Dispose()` method of each referenced object.\"\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.ComponentModel.Design.DesignerActionService.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignerActionService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)\n  commentId: M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)\n  id: GetComponentActions(System.ComponentModel.IComponent)\n  parent: System.ComponentModel.Design.DesignerActionService\n  langs:\n  - csharp\n  name: GetComponentActions(IComponent)\n  nameWithType: DesignerActionService.GetComponentActions(IComponent)\n  fullName: DesignerActionService.GetComponentActions(IComponent)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Returns the collection of smart tag item lists associated with a component.\n  remarks: \"The <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> method is equivalent to a call to the <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%28System.ComponentModel.IComponent%2CSystem.ComponentModel.Design.ComponentActionsType%29> method using a `type` parameter of <xref:System.ComponentModel.Design.ComponentActionsType.All>. Therefore, the collection returned will contain both the push and pull lists of smart tags.  \\n  \\n The returned <xref:System.ComponentModel.Design.DesignerActionListCollection> is the union of item lists added through the <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> methods and also the lists obtained from the <xref:System.ComponentModel.Design.DesignerCommandSet> instance obtained from the component’s site.\"\n  syntax:\n    content: public System.ComponentModel.Design.DesignerActionListCollection GetComponentActions (System.ComponentModel.IComponent component);\n    parameters:\n    - id: component\n      type: System.ComponentModel.IComponent\n      description: The component that the smart tags are associated with.\n    return:\n      type: System.ComponentModel.Design.DesignerActionListCollection\n      description: The collection of smart tags for the specified component.\n  overload: System.ComponentModel.Design.DesignerActionService.GetComponentActions*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>comp</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignerActionService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)\n  commentId: M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)\n  id: GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)\n  parent: System.ComponentModel.Design.DesignerActionService\n  langs:\n  - csharp\n  name: GetComponentActions(IComponent, ComponentActionsType)\n  nameWithType: DesignerActionService.GetComponentActions(IComponent, ComponentActionsType)\n  fullName: DesignerActionService.GetComponentActions(IComponent, ComponentActionsType)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Returns the collection of smart tag item lists of the specified type associated with a component.\n  remarks: \"This version of the overloaded <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> method filters on the `type` parameter, which can have one of the following values.  \\n  \\n|Value|Description|  \\n|-----------|-----------------|  \\n|<xref:System.ComponentModel.Design.ComponentActionsType.All>|All associated smart tags.|  \\n|<xref:System.ComponentModel.Design.ComponentActionsType.Component>|Pull-model smart tags only.|  \\n|<xref:System.ComponentModel.Design.ComponentActionsType.Service>|Push-model smart tags only.|  \\n  \\n If the associated designer for a component does not supply a pull-model smart tag list, then the <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> method will instead use the designer's design-time shortcut menu items from the <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> property.\"\n  syntax:\n    content: public virtual System.ComponentModel.Design.DesignerActionListCollection GetComponentActions (System.ComponentModel.IComponent component, System.ComponentModel.Design.ComponentActionsType type);\n    parameters:\n    - id: component\n      type: System.ComponentModel.IComponent\n      description: The component that the smart tags are associated with.\n    - id: type\n      type: System.ComponentModel.Design.ComponentActionsType\n      description: The <xref href=\"System.ComponentModel.Design.ComponentActionsType\"></xref> to filter the associated smart tags with.\n    return:\n      type: System.ComponentModel.Design.DesignerActionListCollection\n      description: The collection of smart tags of the specified type for the specified component.\n  overload: System.ComponentModel.Design.DesignerActionService.GetComponentActions*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>comp</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignerActionService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)\n  commentId: M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)\n  id: GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)\n  parent: System.ComponentModel.Design.DesignerActionService\n  langs:\n  - csharp\n  name: GetComponentDesignerActions(IComponent, DesignerActionListCollection)\n  nameWithType: DesignerActionService.GetComponentDesignerActions(IComponent, DesignerActionListCollection)\n  fullName: DesignerActionService.GetComponentDesignerActions(IComponent, DesignerActionListCollection)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Retrieves the pull-model smart tags associated with a component.\n  remarks: \"The <xref:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions%2A> method is a helper method for the <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> methods. <xref:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions%2A> searches for pull-model smart tags of type <xref:System.ComponentModel.Design.ComponentActionsType.Component>, and then adds these to the supplied `actionLists` collection.  \\n  \\n If the component's developer does not explicitly supply a collection of smart tags through the <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> property of its designer, this method will reuse the design-time shortcut menu entries, which are obtained through the <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> property of the designer.\"\n  syntax:\n    content: protected virtual void GetComponentDesignerActions (System.ComponentModel.IComponent component, System.ComponentModel.Design.DesignerActionListCollection actionLists);\n    parameters:\n    - id: component\n      type: System.ComponentModel.IComponent\n      description: The component that the smart tags are associated with.\n    - id: actionLists\n      type: System.ComponentModel.Design.DesignerActionListCollection\n      description: The collection to add the associated smart tags to.\n  overload: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or both of the parameters are `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignerActionService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)\n  commentId: M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)\n  id: GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)\n  parent: System.ComponentModel.Design.DesignerActionService\n  langs:\n  - csharp\n  name: GetComponentServiceActions(IComponent, DesignerActionListCollection)\n  nameWithType: DesignerActionService.GetComponentServiceActions(IComponent, DesignerActionListCollection)\n  fullName: DesignerActionService.GetComponentServiceActions(IComponent, DesignerActionListCollection)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Retrieves the push-model smart tags associated with a component.\n  remarks: The <xref:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions%2A> method is a helper method for the <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> methods. It searches for push-model smart tags of type <xref:System.ComponentModel.Design.ComponentActionsType.Service>, and then adds these to the supplied `actionLists` collection.\n  syntax:\n    content: protected virtual void GetComponentServiceActions (System.ComponentModel.IComponent component, System.ComponentModel.Design.DesignerActionListCollection actionLists);\n    parameters:\n    - id: component\n      type: System.ComponentModel.IComponent\n      description: The component that the smart tags are associated with.\n    - id: actionLists\n      type: System.ComponentModel.Design.DesignerActionListCollection\n      description: The collection to add the associated smart tags to.\n  overload: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or both of the parameters are `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignerActionService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)\n  commentId: M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)\n  id: Remove(System.ComponentModel.Design.DesignerActionList)\n  parent: System.ComponentModel.Design.DesignerActionService\n  langs:\n  - csharp\n  name: Remove(DesignerActionList)\n  nameWithType: DesignerActionService.Remove(DesignerActionList)\n  fullName: DesignerActionService.Remove(DesignerActionList)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Removes the specified smart tag list from all components managed by the current service.\n  remarks: \"This version of the <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> method is typically used by design tool developers, because component developers typically do not know what other components exist in the current design space.  \\n  \\n If successful, this method raises the <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event.\"\n  syntax:\n    content: public void Remove (System.ComponentModel.Design.DesignerActionList actionList);\n    parameters:\n    - id: actionList\n      type: System.ComponentModel.Design.DesignerActionList\n      description: The list of smart tags to be removed.\n  overload: System.ComponentModel.Design.DesignerActionService.Remove*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>actionList</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignerActionService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)\n  commentId: M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)\n  id: Remove(System.ComponentModel.IComponent)\n  parent: System.ComponentModel.Design.DesignerActionService\n  langs:\n  - csharp\n  name: Remove(IComponent)\n  nameWithType: DesignerActionService.Remove(IComponent)\n  fullName: DesignerActionService.Remove(IComponent)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Removes all the smart tag lists associated with the specified component.\n  remarks: If successful, the <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> method raises the <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event.\n  syntax:\n    content: public void Remove (System.ComponentModel.IComponent comp);\n    parameters:\n    - id: comp\n      type: System.ComponentModel.IComponent\n      description: The component to disassociate the smart tags from.\n  overload: System.ComponentModel.Design.DesignerActionService.Remove*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>comp</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignerActionService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)\n  commentId: M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)\n  id: Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)\n  parent: System.ComponentModel.Design.DesignerActionService\n  langs:\n  - csharp\n  name: Remove(IComponent, DesignerActionList)\n  nameWithType: DesignerActionService.Remove(IComponent, DesignerActionList)\n  fullName: DesignerActionService.Remove(IComponent, DesignerActionList)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Removes the specified smart tag list from the specified component.\n  remarks: If successful, the <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> method raises the <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> event.\n  syntax:\n    content: public void Remove (System.ComponentModel.IComponent comp, System.ComponentModel.Design.DesignerActionList actionList);\n    parameters:\n    - id: comp\n      type: System.ComponentModel.IComponent\n      description: The component to disassociate the smart tags from.\n    - id: actionList\n      type: System.ComponentModel.Design.DesignerActionList\n      description: The smart tag list to remove.\n  overload: System.ComponentModel.Design.DesignerActionService.Remove*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or both of the parameters are `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignerActionService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)\n  parent: System.ComponentModel.Design.DesignerActionService\n  isExternal: false\n  name: DesignerActionService(IServiceProvider)\n  nameWithType: DesignerActionService.DesignerActionService(IServiceProvider)\n  fullName: DesignerActionService.DesignerActionService(IServiceProvider)\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: false\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)\n  parent: System.ComponentModel.Design.DesignerActionService\n  isExternal: false\n  name: Add(IComponent, DesignerActionList)\n  nameWithType: DesignerActionService.Add(IComponent, DesignerActionList)\n  fullName: DesignerActionService.Add(IComponent, DesignerActionList)\n- uid: System.ComponentModel.IComponent\n  parent: System.ComponentModel\n  isExternal: false\n  name: IComponent\n  nameWithType: IComponent\n  fullName: System.ComponentModel.IComponent\n- uid: System.ComponentModel.Design.DesignerActionList\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: DesignerActionList\n  nameWithType: DesignerActionList\n  fullName: System.ComponentModel.Design.DesignerActionList\n- uid: System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)\n  parent: System.ComponentModel.Design.DesignerActionService\n  isExternal: false\n  name: Add(IComponent, DesignerActionListCollection)\n  nameWithType: DesignerActionService.Add(IComponent, DesignerActionListCollection)\n  fullName: DesignerActionService.Add(IComponent, DesignerActionListCollection)\n- uid: System.ComponentModel.Design.DesignerActionListCollection\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: DesignerActionListCollection\n  nameWithType: DesignerActionListCollection\n  fullName: System.ComponentModel.Design.DesignerActionListCollection\n- uid: System.ComponentModel.Design.DesignerActionService.Clear\n  parent: System.ComponentModel.Design.DesignerActionService\n  isExternal: false\n  name: Clear()\n  nameWithType: DesignerActionService.Clear()\n  fullName: DesignerActionService.Clear()\n- uid: System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)\n  parent: System.ComponentModel.Design.DesignerActionService\n  isExternal: false\n  name: Contains(IComponent)\n  nameWithType: DesignerActionService.Contains(IComponent)\n  fullName: DesignerActionService.Contains(IComponent)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged\n  parent: System.ComponentModel.Design.DesignerActionService\n  isExternal: false\n  name: DesignerActionListsChanged\n  nameWithType: DesignerActionService.DesignerActionListsChanged\n  fullName: DesignerActionService.DesignerActionListsChanged\n- uid: System.ComponentModel.Design.DesignerActionListsChangedEventHandler\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: DesignerActionListsChangedEventHandler\n  nameWithType: DesignerActionListsChangedEventHandler\n  fullName: System.ComponentModel.Design.DesignerActionListsChangedEventHandler\n- uid: System.ComponentModel.Design.DesignerActionService.Dispose\n  parent: System.ComponentModel.Design.DesignerActionService\n  isExternal: false\n  name: Dispose()\n  nameWithType: DesignerActionService.Dispose()\n  fullName: DesignerActionService.Dispose()\n- uid: System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)\n  parent: System.ComponentModel.Design.DesignerActionService\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: DesignerActionService.Dispose(Boolean)\n  fullName: DesignerActionService.Dispose(Boolean)\n- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)\n  parent: System.ComponentModel.Design.DesignerActionService\n  isExternal: false\n  name: GetComponentActions(IComponent)\n  nameWithType: DesignerActionService.GetComponentActions(IComponent)\n  fullName: DesignerActionService.GetComponentActions(IComponent)\n- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)\n  parent: System.ComponentModel.Design.DesignerActionService\n  isExternal: false\n  name: GetComponentActions(IComponent, ComponentActionsType)\n  nameWithType: DesignerActionService.GetComponentActions(IComponent, ComponentActionsType)\n  fullName: DesignerActionService.GetComponentActions(IComponent, ComponentActionsType)\n- uid: System.ComponentModel.Design.ComponentActionsType\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: ComponentActionsType\n  nameWithType: ComponentActionsType\n  fullName: System.ComponentModel.Design.ComponentActionsType\n- uid: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)\n  parent: System.ComponentModel.Design.DesignerActionService\n  isExternal: false\n  name: GetComponentDesignerActions(IComponent, DesignerActionListCollection)\n  nameWithType: DesignerActionService.GetComponentDesignerActions(IComponent, DesignerActionListCollection)\n  fullName: DesignerActionService.GetComponentDesignerActions(IComponent, DesignerActionListCollection)\n- uid: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)\n  parent: System.ComponentModel.Design.DesignerActionService\n  isExternal: false\n  name: GetComponentServiceActions(IComponent, DesignerActionListCollection)\n  nameWithType: DesignerActionService.GetComponentServiceActions(IComponent, DesignerActionListCollection)\n  fullName: DesignerActionService.GetComponentServiceActions(IComponent, DesignerActionListCollection)\n- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)\n  parent: System.ComponentModel.Design.DesignerActionService\n  isExternal: false\n  name: Remove(DesignerActionList)\n  nameWithType: DesignerActionService.Remove(DesignerActionList)\n  fullName: DesignerActionService.Remove(DesignerActionList)\n- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)\n  parent: System.ComponentModel.Design.DesignerActionService\n  isExternal: false\n  name: Remove(IComponent)\n  nameWithType: DesignerActionService.Remove(IComponent)\n  fullName: DesignerActionService.Remove(IComponent)\n- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)\n  parent: System.ComponentModel.Design.DesignerActionService\n  isExternal: false\n  name: Remove(IComponent, DesignerActionList)\n  nameWithType: DesignerActionService.Remove(IComponent, DesignerActionList)\n  fullName: DesignerActionService.Remove(IComponent, DesignerActionList)\n- uid: System.ComponentModel.Design.DesignerActionService.#ctor*\n  parent: System.ComponentModel.Design.DesignerActionService\n  isExternal: false\n  name: DesignerActionService\n  nameWithType: DesignerActionService.DesignerActionService\n  fullName: DesignerActionService.DesignerActionService\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignerActionService.xml\n- uid: System.ComponentModel.Design.DesignerActionService.Add*\n  parent: System.ComponentModel.Design.DesignerActionService\n  isExternal: false\n  name: Add\n  nameWithType: DesignerActionService.Add\n  fullName: DesignerActionService.Add\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignerActionService.xml\n- uid: System.ComponentModel.Design.DesignerActionService.Clear*\n  parent: System.ComponentModel.Design.DesignerActionService\n  isExternal: false\n  name: Clear\n  nameWithType: DesignerActionService.Clear\n  fullName: DesignerActionService.Clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignerActionService.xml\n- uid: System.ComponentModel.Design.DesignerActionService.Contains*\n  parent: System.ComponentModel.Design.DesignerActionService\n  isExternal: false\n  name: Contains\n  nameWithType: DesignerActionService.Contains\n  fullName: DesignerActionService.Contains\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignerActionService.xml\n- uid: System.ComponentModel.Design.DesignerActionService.Dispose*\n  parent: System.ComponentModel.Design.DesignerActionService\n  isExternal: false\n  name: Dispose\n  nameWithType: DesignerActionService.Dispose\n  fullName: DesignerActionService.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignerActionService.xml\n- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions*\n  parent: System.ComponentModel.Design.DesignerActionService\n  isExternal: false\n  name: GetComponentActions\n  nameWithType: DesignerActionService.GetComponentActions\n  fullName: DesignerActionService.GetComponentActions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignerActionService.xml\n- uid: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions*\n  parent: System.ComponentModel.Design.DesignerActionService\n  isExternal: false\n  name: GetComponentDesignerActions\n  nameWithType: DesignerActionService.GetComponentDesignerActions\n  fullName: DesignerActionService.GetComponentDesignerActions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignerActionService.xml\n- uid: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions*\n  parent: System.ComponentModel.Design.DesignerActionService\n  isExternal: false\n  name: GetComponentServiceActions\n  nameWithType: DesignerActionService.GetComponentServiceActions\n  fullName: DesignerActionService.GetComponentServiceActions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignerActionService.xml\n- uid: System.ComponentModel.Design.DesignerActionService.Remove*\n  parent: System.ComponentModel.Design.DesignerActionService\n  isExternal: false\n  name: Remove\n  nameWithType: DesignerActionService.Remove\n  fullName: DesignerActionService.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/DesignerActionService.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}