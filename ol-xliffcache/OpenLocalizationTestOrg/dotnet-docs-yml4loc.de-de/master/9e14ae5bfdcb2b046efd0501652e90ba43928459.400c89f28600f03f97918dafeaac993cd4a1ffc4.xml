{"nodes":[{"content":"Returns notification from <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized\"></xref> events.  \n  \n This class supports the .NET Framework infrastructure and is not intended to be used directly from application code.","nodes":[{"pos":[0,209],"content":"Returns notification from <ph id=\"ph1\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized\"&gt;&lt;/xref&gt;</ph> events.","source":"Returns notification from <xref href=\"System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized\"></xref> or <xref href=\"System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized\"></xref> events."},{"pos":[216,332],"content":"This class supports the .NET Framework infrastructure and is not intended to be used directly from application code.","nodes":[{"content":"This class supports the .NET Framework infrastructure and is not intended to be used directly from application code.","pos":[0,116]}]}],"pos":[477,818],"yaml":true},{"content":"A `SpeechHypothesized` event is raised by the <xref:System.Speech.Recognition.SpeechRecognizer> and <xref:System.Speech.Recognition.SpeechRecognitionEngine> classes.  \n  \n You can obtain detailed information about a tentatively recognized phrase by using the <xref:System.Speech.Recognition.RecognitionEventArgs.Result%2A> property.  \n  \n Numerous `SpeechHypothesized` events are generated as a recognition engine attempts to identify an input phrase. Typically, handling these events is useful only for debugging.  \n  \n `SpeechHypothesizedEventArgs` derives from <xref:System.Speech.Recognition.RecognitionEventArgs>.","nodes":[{"pos":[0,165],"content":"A <ph id=\"ph1\">`SpeechHypothesized`</ph> event is raised by the <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.SpeechRecognizer&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Speech.Recognition.SpeechRecognitionEngine&gt;</ph> classes.","source":"A `SpeechHypothesized` event is raised by the <xref:System.Speech.Recognition.SpeechRecognizer> and <xref:System.Speech.Recognition.SpeechRecognitionEngine> classes."},{"pos":[172,332],"content":"You can obtain detailed information about a tentatively recognized phrase by using the <xref:System.Speech.Recognition.RecognitionEventArgs.Result%2A> property.","nodes":[{"content":"You can obtain detailed information about a tentatively recognized phrase by using the <ph id=\"ph1\">&lt;xref:System.Speech.Recognition.RecognitionEventArgs.Result%2A&gt;</ph> property.","pos":[0,160],"source":"You can obtain detailed information about a tentatively recognized phrase by using the <xref:System.Speech.Recognition.RecognitionEventArgs.Result%2A> property."}]},{"pos":[339,514],"content":"Numerous `SpeechHypothesized` events are generated as a recognition engine attempts to identify an input phrase. Typically, handling these events is useful only for debugging.","nodes":[{"content":"Numerous <ph id=\"ph1\">`SpeechHypothesized`</ph> events are generated as a recognition engine attempts to identify an input phrase.","pos":[0,112],"source":"Numerous `SpeechHypothesized` events are generated as a recognition engine attempts to identify an input phrase."},{"content":"Typically, handling these events is useful only for debugging.","pos":[113,175]}]},{"pos":[521,618],"content":"<ph id=\"ph1\">`SpeechHypothesizedEventArgs`</ph> derives from <ph id=\"ph2\">&lt;xref:System.Speech.Recognition.RecognitionEventArgs&gt;</ph>.","source":"`SpeechHypothesizedEventArgs` derives from <xref:System.Speech.Recognition.RecognitionEventArgs>."}],"pos":[829,1456],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Speech.Recognition.SpeechHypothesizedEventArgs\n  commentId: T:System.Speech.Recognition.SpeechHypothesizedEventArgs\n  id: SpeechHypothesizedEventArgs\n  children: []\n  langs:\n  - csharp\n  name: SpeechHypothesizedEventArgs\n  nameWithType: SpeechHypothesizedEventArgs\n  fullName: System.Speech.Recognition.SpeechHypothesizedEventArgs\n  type: Class\n  assemblies:\n  - System.Speech\n  namespace: System.Speech.Recognition\n  summary: \"Returns notification from <xref href=\\\"System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized\\\"></xref> or <xref href=\\\"System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized\\\"></xref> events.  \\n  \\n This class supports the .NET Framework infrastructure and is not intended to be used directly from application code.\"\n  remarks: \"A `SpeechHypothesized` event is raised by the <xref:System.Speech.Recognition.SpeechRecognizer> and <xref:System.Speech.Recognition.SpeechRecognitionEngine> classes.  \\n  \\n You can obtain detailed information about a tentatively recognized phrase by using the <xref:System.Speech.Recognition.RecognitionEventArgs.Result%2A> property.  \\n  \\n Numerous `SpeechHypothesized` events are generated as a recognition engine attempts to identify an input phrase. Typically, handling these events is useful only for debugging.  \\n  \\n `SpeechHypothesizedEventArgs` derives from <xref:System.Speech.Recognition.RecognitionEventArgs>.\"\n  example:\n  - \"The example below creates a handler for <xref:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized?displayProperty=fullName> or <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized?displayProperty=fullName> events. The handler uses an instance of `SpeechHypothesizedEventArgs` to return and display information about a tentatively recognized phrase.  \\n  \\n```  \\n// Create a handler for the SpeechHypothesized event.  \\nrecognizer.SpeechHypothesized += new EventHandler<SpeechHypothesizedEventArgs>(recognizer_SpeechHypothesized);  \\n  \\n// Handle the event and display the hypothesized result.  \\nvoid recognizer_SpeechHypothesized (object sender, SpeechHypothesizedEventArgs e)  \\n  {  \\n    Console.WriteLine(\\\"Hypothesized text: \\\" + e.Result.Text);  \\n  }  \\n  \\n```\"\n  syntax:\n    content: 'public class SpeechHypothesizedEventArgs : System.Speech.Recognition.RecognitionEventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  - System.Speech.Recognition.RecognitionEventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Speech.Recognition.RecognitionEventArgs.Result\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Speech.Recognition/SpeechHypothesizedEventArgs.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: kbridge\n  manager: ghogen\nreferences:\n- uid: System.Speech.Recognition.RecognitionEventArgs\n  parent: System.Speech.Recognition\n  isExternal: false\n  name: RecognitionEventArgs\n  nameWithType: RecognitionEventArgs\n  fullName: System.Speech.Recognition.RecognitionEventArgs\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n- uid: System.Speech.Recognition.RecognitionEventArgs.Result\n  parent: System.Speech.Recognition.RecognitionEventArgs\n  isExternal: false\n  name: Result\n  nameWithType: RecognitionEventArgs.Result\n  fullName: RecognitionEventArgs.Result\n"}