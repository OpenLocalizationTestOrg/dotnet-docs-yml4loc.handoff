### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.EventWaitHandleAuditRule
  commentId: T:System.Security.AccessControl.EventWaitHandleAuditRule
  id: EventWaitHandleAuditRule
  children:
  - System.Security.AccessControl.EventWaitHandleAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights
  langs:
  - csharp
  name: EventWaitHandleAuditRule
  nameWithType: EventWaitHandleAuditRule
  fullName: System.Security.AccessControl.EventWaitHandleAuditRule
  type: Class
  assemblies:
  - System.Threading.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Represents a set of access rights to be audited for a user or group. This class cannot be inherited.
  remarks: "The <xref:System.Security.AccessControl.EventWaitHandleAuditRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on named system events. For an overview of these classes and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.EventWaitHandleSecurity>.  \n  \n> [!NOTE]\n>  Windows access control security is meaningful only for named system events. If an <xref:System.Threading.EventWaitHandle> object represents a local event, access control is irrelevant.  \n  \n To get a list of the audit rules currently applied to a named event, use the <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName> method to get an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.EventWaitHandleAuditRule> objects.  \n  \n <xref:System.Security.AccessControl.EventWaitHandleAuditRule> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL). When you get the set of all audit rules for an event, the set contains the minimum number of rules currently required to express all the access control entries.  \n  \n> [!NOTE]\n>  The underlying access control entries change as you apply and remove rules. The information in rules is merged if possible, to maintain the smallest number of access control entries. Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.  \n  \n Use <xref:System.Security.AccessControl.EventWaitHandleAuditRule> objects to specify access rights to be audited for a user or group. To apply a rule to a named system event, use the <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName> method to get the <xref:System.Security.AccessControl.EventWaitHandleSecurity> object. Modify the <xref:System.Security.AccessControl.EventWaitHandleSecurity> object by using its methods to add the rule, and then use the <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName> method to reattach the security object.  \n  \n> [!IMPORTANT]\n>  Changes you make to an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object do not affect the access levels of the named event until you call the <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName> method to assign the altered security object to the named event.  \n  \n <xref:System.Security.AccessControl.EventWaitHandleAuditRule> objects are immutable. Security for an event is modified using the methods of the <xref:System.Security.AccessControl.EventWaitHandleSecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.  \n  \n> [!NOTE]\n>  Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition."
  syntax:
    content: 'public sealed class EventWaitHandleAuditRule : System.Security.AccessControl.AuditRule'
  inheritance:
  - System.Object
  - System.Security.AccessControl.AuthorizationRule
  - System.Security.AccessControl.AuditRule
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Security.AccessControl.AuditRule.AuditFlags
  - System.Security.AccessControl.AuthorizationRule.AccessMask
  - System.Security.AccessControl.AuthorizationRule.IdentityReference
  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  - System.Security.AccessControl.AuthorizationRule.IsInherited
  - System.Security.AccessControl.AuthorizationRule.PropagationFlags
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/EventWaitHandleAuditRule.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.EventWaitHandleAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AuditFlags)
  commentId: M:System.Security.AccessControl.EventWaitHandleAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.EventWaitHandleAuditRule
  langs:
  - csharp
  name: EventWaitHandleAuditRule(IdentityReference, EventWaitHandleRights, AuditFlags)
  nameWithType: EventWaitHandleAuditRule.EventWaitHandleAuditRule(IdentityReference, EventWaitHandleRights, AuditFlags)
  fullName: EventWaitHandleAuditRule.EventWaitHandleAuditRule(IdentityReference, EventWaitHandleRights, AuditFlags)
  type: Constructor
  assemblies:
  - System.Threading.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the <xref href="System.Security.AccessControl.EventWaitHandleAuditRule"></xref> class, specifying the user or group to audit, the rights to audit, and whether to audit success, failure, or both.
  remarks: To create an <xref:System.Security.Principal.NTAccount> object from a string representing a user or group name, use the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=fullName> constructor.
  syntax:
    content: public EventWaitHandleAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.EventWaitHandleRights eventRights, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: The user or group the rule applies to. Must be of type <xref href="System.Security.Principal.SecurityIdentifier"></xref> or a type such as <xref href="System.Security.Principal.NTAccount"></xref> that can be converted to type <xref href="System.Security.Principal.SecurityIdentifier"></xref>.
    - id: eventRights
      type: System.Security.AccessControl.EventWaitHandleRights
      description: A bitwise combination of <xref href="System.Security.AccessControl.EventWaitHandleRights"></xref> values specifying the kinds of access to audit.
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: A bitwise combination of <xref href="System.Security.AccessControl.AuditFlags"></xref> values specifying whether to audit success, failure, or both.
  overload: System.Security.AccessControl.EventWaitHandleAuditRule.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>eventRights</code> specifies an invalid value.  \n  \n -or-  \n  \n <code>flags</code> specifies an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code> is `null`.  \n  \n -or-  \n  \n <code>eventRights</code> is zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>identity</code> is neither of type <xref href="System.Security.Principal.SecurityIdentifier"></xref> nor of a type such as <xref href="System.Security.Principal.NTAccount"></xref> that can be converted to type <xref href="System.Security.Principal.SecurityIdentifier"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/EventWaitHandleAuditRule.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights
  commentId: P:System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights
  id: EventWaitHandleRights
  parent: System.Security.AccessControl.EventWaitHandleAuditRule
  langs:
  - csharp
  name: EventWaitHandleRights
  nameWithType: EventWaitHandleAuditRule.EventWaitHandleRights
  fullName: EventWaitHandleAuditRule.EventWaitHandleRights
  type: Property
  assemblies:
  - System.Threading.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Gets the access rights affected by the audit rule.
  remarks: <xref:System.Security.AccessControl.EventWaitHandleAuditRule> objects are immutable. You can create a new audit rule representing a different user, different rights, or a different combination of <xref:System.Security.AccessControl.AuditFlags> flags, but you cannot modify an existing audit rule.
  syntax:
    content: public System.Security.AccessControl.EventWaitHandleRights EventWaitHandleRights { get; }
    return:
      type: System.Security.AccessControl.EventWaitHandleRights
      description: A bitwise combination of <xref href="System.Security.AccessControl.EventWaitHandleRights"></xref> values that indicates the rights affected by the audit rule.
  overload: System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/EventWaitHandleAuditRule.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Security.AccessControl.EventWaitHandleAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.EventWaitHandleAuditRule
  isExternal: false
  name: EventWaitHandleAuditRule(IdentityReference, EventWaitHandleRights, AuditFlags)
  nameWithType: EventWaitHandleAuditRule.EventWaitHandleAuditRule(IdentityReference, EventWaitHandleRights, AuditFlags)
  fullName: EventWaitHandleAuditRule.EventWaitHandleAuditRule(IdentityReference, EventWaitHandleRights, AuditFlags)
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.AccessControl.EventWaitHandleRights
  parent: System.Security.AccessControl
  isExternal: false
  name: EventWaitHandleRights
  nameWithType: EventWaitHandleRights
  fullName: System.Security.AccessControl.EventWaitHandleRights
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights
  parent: System.Security.AccessControl.EventWaitHandleAuditRule
  isExternal: false
  name: EventWaitHandleRights
  nameWithType: EventWaitHandleAuditRule.EventWaitHandleRights
  fullName: EventWaitHandleAuditRule.EventWaitHandleRights
- uid: System.Security.AccessControl.EventWaitHandleAuditRule.#ctor*
  parent: System.Security.AccessControl.EventWaitHandleAuditRule
  isExternal: false
  name: EventWaitHandleAuditRule
  nameWithType: EventWaitHandleAuditRule.EventWaitHandleAuditRule
  fullName: EventWaitHandleAuditRule.EventWaitHandleAuditRule
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/EventWaitHandleAuditRule.xml
- uid: System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights*
  parent: System.Security.AccessControl.EventWaitHandleAuditRule
  isExternal: false
  name: EventWaitHandleRights
  nameWithType: EventWaitHandleAuditRule.EventWaitHandleRights
  fullName: EventWaitHandleAuditRule.EventWaitHandleRights
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/EventWaitHandleAuditRule.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Security.AccessControl.AuthorizationRule.AccessMask
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  name: AccessMask
  nameWithType: AuthorizationRule.AccessMask
  fullName: AuthorizationRule.AccessMask
- uid: System.Security.AccessControl.AuthorizationRule.IdentityReference
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  name: IdentityReference
  nameWithType: AuthorizationRule.IdentityReference
  fullName: AuthorizationRule.IdentityReference
- uid: System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  name: InheritanceFlags
  nameWithType: AuthorizationRule.InheritanceFlags
  fullName: AuthorizationRule.InheritanceFlags
- uid: System.Security.AccessControl.AuthorizationRule.IsInherited
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  name: IsInherited
  nameWithType: AuthorizationRule.IsInherited
  fullName: AuthorizationRule.IsInherited
- uid: System.Security.AccessControl.AuthorizationRule.PropagationFlags
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  name: PropagationFlags
  nameWithType: AuthorizationRule.PropagationFlags
  fullName: AuthorizationRule.PropagationFlags
- uid: System.Security.AccessControl.AuditRule.AuditFlags
  parent: System.Security.AccessControl.AuditRule
  isExternal: false
  name: AuditFlags
  nameWithType: AuditRule.AuditFlags
  fullName: AuditRule.AuditFlags
