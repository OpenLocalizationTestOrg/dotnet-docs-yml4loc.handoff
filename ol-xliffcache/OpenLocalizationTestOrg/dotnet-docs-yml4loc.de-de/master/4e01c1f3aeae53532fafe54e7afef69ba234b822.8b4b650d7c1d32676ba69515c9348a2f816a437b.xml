{"nodes":[{"content":"Represents a typed weak reference, which references an object while still allowing that object to be reclaimed by garbage collection.","nodes":[{"pos":[0,133],"content":"Represents a typed weak reference, which references an object while still allowing that object to be reclaimed by garbage collection.","nodes":[{"content":"Represents a typed weak reference, which references an object while still allowing that object to be reclaimed by garbage collection.","pos":[0,133]}]}],"pos":[705,839],"yaml":true},{"content":"A weak reference enables the garbage collector to collect an object while still allowing an application to access the object. If you need the object, you can obtain a strong reference to it and prevent it from being collected.","nodes":[{"pos":[0,226],"content":"A weak reference enables the garbage collector to collect an object while still allowing an application to access the object. If you need the object, you can obtain a strong reference to it and prevent it from being collected.","nodes":[{"content":"A weak reference enables the garbage collector to collect an object while still allowing an application to access the object. If you need the object, you can obtain a strong reference to it and prevent it from being collected.","pos":[0,226],"nodes":[{"content":"A weak reference enables the garbage collector to collect an object while still allowing an application to access the object.","pos":[0,125]},{"content":"If you need the object, you can obtain a strong reference to it and prevent it from being collected.","pos":[126,226]}]}]}],"pos":[850,1077],"yaml":true,"extradata":"MT"},{"content":"The type of the object referenced.","nodes":[{"pos":[0,34],"content":"The type of the object referenced.","nodes":[{"content":"The type of the object referenced.","pos":[0,34]}]}],"pos":[1251,1286],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.WeakReference`1\"></xref> class that references the specified object.","nodes":[{"pos":[0,121],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.WeakReference`1\"&gt;&lt;/xref&gt;</ph> class that references the specified object.","source":"Initializes a new instance of the <xref href=\"System.WeakReference`1\"></xref> class that references the specified object."}],"pos":[3139,3261],"yaml":true},{"content":"The object to reference, or `null`.","nodes":[{"pos":[0,35],"content":"The object to reference, or <ph id=\"ph1\">`null`</ph>.","source":"The object to reference, or `null`."}],"pos":[3383,3419],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.WeakReference`1\"></xref> class that references the specified object and uses the specified resurrection tracking.","nodes":[{"pos":[0,166],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.WeakReference`1\"&gt;&lt;/xref&gt;</ph> class that references the specified object and uses the specified resurrection tracking.","source":"Initializes a new instance of the <xref href=\"System.WeakReference`1\"></xref> class that references the specified object and uses the specified resurrection tracking."}],"pos":[5015,5182],"yaml":true},{"content":"The object to reference, or `null`.","nodes":[{"pos":[0,35],"content":"The object to reference, or <ph id=\"ph1\">`null`</ph>.","source":"The object to reference, or `null`."}],"pos":[5328,5364],"yaml":true},{"content":"`true` to track the object after finalization; `false` to track the object only until finalization.","nodes":[{"pos":[0,99],"content":"<ph id=\"ph1\">`true`</ph> to track the object after finalization; <ph id=\"ph2\">`false`</ph> to track the object only until finalization.","source":"`true` to track the object after finalization; `false` to track the object only until finalization."}],"pos":[5438,5540],"yaml":true},{"content":"Discards the reference to the target that is represented by the current <xref href=\"System.WeakReference`1\"></xref> object.","nodes":[{"pos":[0,123],"content":"Discards the reference to the target that is represented by the current <ph id=\"ph1\">&lt;xref href=\"System.WeakReference`1\"&gt;&lt;/xref&gt;</ph> object.","source":"Discards the reference to the target that is represented by the current <xref href=\"System.WeakReference`1\"></xref> object."}],"pos":[7011,7135],"yaml":true},{"content":"Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with all the data necessary to serialize the current <xref href=\"System.WeakReference`1\"></xref> object.","nodes":[{"pos":[0,191],"content":"Populates a <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> object with all the data necessary to serialize the current <ph id=\"ph2\">&lt;xref href=\"System.WeakReference`1\"&gt;&lt;/xref&gt;</ph> object.","source":"Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with all the data necessary to serialize the current <xref href=\"System.WeakReference`1\"></xref> object."}],"pos":[9065,9257],"yaml":true},{"content":"An object that holds all the data necessary to serialize or deserialize the current <xref href=\"System.WeakReference`1\"></xref> object.","nodes":[{"pos":[0,135],"content":"An object that holds all the data necessary to serialize or deserialize the current <ph id=\"ph1\">&lt;xref href=\"System.WeakReference`1\"&gt;&lt;/xref&gt;</ph> object.","source":"An object that holds all the data necessary to serialize or deserialize the current <xref href=\"System.WeakReference`1\"></xref> object."}],"pos":[9525,9661],"yaml":true},{"content":"The location where serialized data is stored and retrieved.","nodes":[{"pos":[0,59],"content":"The location where serialized data is stored and retrieved.","nodes":[{"content":"The location where serialized data is stored and retrieved.","pos":[0,59]}]}],"pos":[9756,9816],"yaml":true},{"content":"<code>info</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;info&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>info</code> is `null`."}],"pos":[9982,10011],"yaml":true},{"content":"Sets the target object that is referenced by this <xref href=\"System.WeakReference`1\"></xref> object.","nodes":[{"pos":[0,101],"content":"Sets the target object that is referenced by this <ph id=\"ph1\">&lt;xref href=\"System.WeakReference`1\"&gt;&lt;/xref&gt;</ph> object.","source":"Sets the target object that is referenced by this <xref href=\"System.WeakReference`1\"></xref> object."}],"pos":[11116,11218],"yaml":true},{"content":"The new target object.","nodes":[{"pos":[0,22],"content":"The new target object.","nodes":[{"content":"The new target object.","pos":[0,22]}]}],"pos":[11341,11364],"yaml":true},{"content":"Tries to retrieve the target object that is referenced by the current <xref href=\"System.WeakReference`1\"></xref> object.","nodes":[{"pos":[0,121],"content":"Tries to retrieve the target object that is referenced by the current <ph id=\"ph1\">&lt;xref href=\"System.WeakReference`1\"&gt;&lt;/xref&gt;</ph> object.","source":"Tries to retrieve the target object that is referenced by the current <xref href=\"System.WeakReference`1\"></xref> object."}],"pos":[12897,13019],"yaml":true},{"content":"When this method returns, contains the target object, if it is available. This parameter is treated as uninitialized.","nodes":[{"pos":[0,117],"content":"When this method returns, contains the target object, if it is available. This parameter is treated as uninitialized.","nodes":[{"content":"When this method returns, contains the target object, if it is available. This parameter is treated as uninitialized.","pos":[0,117],"nodes":[{"content":"When this method returns, contains the target object, if it is available.","pos":[0,73]},{"content":"This parameter is treated as uninitialized.","pos":[74,117]}]}]}],"pos":[13149,13267],"yaml":true},{"content":"`true` if the target was retrieved; otherwise, `false`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">`true`</ph> if the target was retrieved; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the target was retrieved; otherwise, `false`."}],"pos":[13325,13383],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.WeakReference`1\n  commentId: T:System.WeakReference`1\n  id: WeakReference`1\n  children:\n  - System.WeakReference`1.#ctor(`0)\n  - System.WeakReference`1.#ctor(`0,System.Boolean)\n  - System.WeakReference`1.Finalize\n  - System.WeakReference`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.WeakReference`1.SetTarget(`0)\n  - System.WeakReference`1.TryGetTarget(`0@)\n  langs:\n  - csharp\n  name: WeakReference<T>\n  nameWithType: WeakReference<T>\n  fullName: System.WeakReference<T>\n  type: Class\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents a typed weak reference, which references an object while still allowing that object to be reclaimed by garbage collection.\n  remarks: A weak reference enables the garbage collector to collect an object while still allowing an application to access the object. If you need the object, you can obtain a strong reference to it and prevent it from being collected.\n  syntax:\n    content: 'public sealed class WeakReference<T> : System.Runtime.Serialization.ISerializable where T : class'\n    typeParameters:\n    - id: T\n      description: The type of the object referenced.\n  inheritance:\n  - System.Object\n  implements:\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.WeakReference`1.#ctor(`0)\n  commentId: M:System.WeakReference`1.#ctor(`0)\n  id: '#ctor(`0)'\n  parent: System.WeakReference`1\n  langs:\n  - csharp\n  name: WeakReference<T>(T)\n  nameWithType: WeakReference<T>.WeakReference<T>(T)\n  fullName: WeakReference<T>.WeakReference<T>(T)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.WeakReference`1\"></xref> class that references the specified object.\n  syntax:\n    content: public WeakReference (T target);\n    parameters:\n    - id: target\n      type: T\n      description: The object to reference, or `null`.\n  overload: System.WeakReference`1.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.WeakReference`1.#ctor(`0,System.Boolean)\n  commentId: M:System.WeakReference`1.#ctor(`0,System.Boolean)\n  id: '#ctor(`0,System.Boolean)'\n  parent: System.WeakReference`1\n  langs:\n  - csharp\n  name: WeakReference<T>(T, Boolean)\n  nameWithType: WeakReference<T>.WeakReference<T>(T, Boolean)\n  fullName: WeakReference<T>.WeakReference<T>(T, Boolean)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.WeakReference`1\"></xref> class that references the specified object and uses the specified resurrection tracking.\n  syntax:\n    content: public WeakReference (T target, bool trackResurrection);\n    parameters:\n    - id: target\n      type: T\n      description: The object to reference, or `null`.\n    - id: trackResurrection\n      type: System.Boolean\n      description: '`true` to track the object after finalization; `false` to track the object only until finalization.'\n  overload: System.WeakReference`1.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.WeakReference`1.Finalize\n  commentId: M:System.WeakReference`1.Finalize\n  id: Finalize\n  parent: System.WeakReference`1\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: WeakReference<T>.Finalize()\n  fullName: WeakReference<T>.Finalize()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  namespace: System\n  summary: Discards the reference to the target that is represented by the current <xref href=\"System.WeakReference`1\"></xref> object.\n  syntax:\n    content: ~WeakReference`1 ();\n    parameters: []\n  overload: System.WeakReference`1.Finalize*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.WeakReference`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.WeakReference`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.WeakReference`1\n  langs:\n  - csharp\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: WeakReference<T>.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: WeakReference<T>.GetObjectData(SerializationInfo, StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with all the data necessary to serialize the current <xref href=\"System.WeakReference`1\"></xref> object.\n  syntax:\n    content: public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: An object that holds all the data necessary to serialize or deserialize the current <xref href=\"System.WeakReference`1\"></xref> object.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The location where serialized data is stored and retrieved.\n  overload: System.WeakReference`1.GetObjectData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>info</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.WeakReference`1.SetTarget(`0)\n  commentId: M:System.WeakReference`1.SetTarget(`0)\n  id: SetTarget(`0)\n  parent: System.WeakReference`1\n  langs:\n  - csharp\n  name: SetTarget(T)\n  nameWithType: WeakReference<T>.SetTarget(T)\n  fullName: WeakReference<T>.SetTarget(T)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Sets the target object that is referenced by this <xref href=\"System.WeakReference`1\"></xref> object.\n  syntax:\n    content: public void SetTarget (T target);\n    parameters:\n    - id: target\n      type: T\n      description: The new target object.\n  overload: System.WeakReference`1.SetTarget*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.WeakReference`1.TryGetTarget(`0@)\n  commentId: M:System.WeakReference`1.TryGetTarget(`0@)\n  id: TryGetTarget(`0@)\n  parent: System.WeakReference`1\n  langs:\n  - csharp\n  name: TryGetTarget(T)\n  nameWithType: WeakReference<T>.TryGetTarget(T)\n  fullName: WeakReference<T>.TryGetTarget(T)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Tries to retrieve the target object that is referenced by the current <xref href=\"System.WeakReference`1\"></xref> object.\n  syntax:\n    content: public bool TryGetTarget (out T target);\n    parameters:\n    - id: target\n      type: T\n      description: When this method returns, contains the target object, if it is available. This parameter is treated as uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` if the target was retrieved; otherwise, `false`.'\n  overload: System.WeakReference`1.TryGetTarget*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.WeakReference`1.#ctor(`0)\n  parent: System.WeakReference`1\n  isExternal: false\n  name: WeakReference<T>(T)\n  nameWithType: WeakReference<T>.WeakReference<T>(T)\n  fullName: WeakReference<T>.WeakReference<T>(T)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.WeakReference`1.#ctor(`0,System.Boolean)\n  parent: System.WeakReference`1\n  isExternal: false\n  name: WeakReference<T>(T, Boolean)\n  nameWithType: WeakReference<T>.WeakReference<T>(T, Boolean)\n  fullName: WeakReference<T>.WeakReference<T>(T, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.WeakReference`1.Finalize\n  parent: System.WeakReference`1\n  isExternal: false\n  name: Finalize()\n  nameWithType: WeakReference<T>.Finalize()\n  fullName: WeakReference<T>.Finalize()\n- uid: System.WeakReference`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.WeakReference`1\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: WeakReference<T>.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: WeakReference<T>.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.WeakReference`1.SetTarget(`0)\n  parent: System.WeakReference`1\n  isExternal: false\n  name: SetTarget(T)\n  nameWithType: WeakReference<T>.SetTarget(T)\n  fullName: WeakReference<T>.SetTarget(T)\n- uid: System.WeakReference`1.TryGetTarget(`0@)\n  parent: System.WeakReference`1\n  isExternal: false\n  name: TryGetTarget(T)\n  nameWithType: WeakReference<T>.TryGetTarget(T)\n  fullName: WeakReference<T>.TryGetTarget(T)\n- uid: System.WeakReference`1.#ctor*\n  parent: System.WeakReference`1\n  isExternal: false\n  name: WeakReference<T>\n  nameWithType: WeakReference<T>.WeakReference<T>\n  fullName: WeakReference<T>.WeakReference<T>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference`1.xml\n- uid: System.WeakReference`1.Finalize*\n  parent: System.WeakReference`1\n  isExternal: false\n  name: Finalize\n  nameWithType: WeakReference<T>.Finalize\n  fullName: WeakReference<T>.Finalize\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference`1.xml\n- uid: System.WeakReference`1.GetObjectData*\n  parent: System.WeakReference`1\n  isExternal: false\n  name: GetObjectData\n  nameWithType: WeakReference<T>.GetObjectData\n  fullName: WeakReference<T>.GetObjectData\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference`1.xml\n- uid: System.WeakReference`1.SetTarget*\n  parent: System.WeakReference`1\n  isExternal: false\n  name: SetTarget\n  nameWithType: WeakReference<T>.SetTarget\n  fullName: WeakReference<T>.SetTarget\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference`1.xml\n- uid: System.WeakReference`1.TryGetTarget*\n  parent: System.WeakReference`1\n  isExternal: false\n  name: TryGetTarget\n  nameWithType: WeakReference<T>.TryGetTarget\n  fullName: WeakReference<T>.TryGetTarget\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/WeakReference`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  nameWithType: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n"}