{"nodes":[{"content":"Represents a token resolver that can resolve tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref> against a specified X.509 certificate store.","nodes":[{"pos":[0,171],"content":"Represents a token resolver that can resolve tokens of type <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;&lt;/xref&gt;</ph> against a specified X.509 certificate store.","source":"Represents a token resolver that can resolve tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref> against a specified X.509 certificate store."}],"pos":[1645,1817],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\"></xref> class with a default X.509 certificate store.","nodes":[{"pos":[0,162],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\"&gt;&lt;/xref&gt;</ph> class with a default X.509 certificate store.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\"></xref> class with a default X.509 certificate store."}],"pos":[4679,4842],"yaml":true},{"content":"The default store location is <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. The default store name is <xref:System.Security.Cryptography.X509Certificates.StoreName.My>.","nodes":[{"pos":[0,203],"content":"The default store location is <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. The default store name is <xref:System.Security.Cryptography.X509Certificates.StoreName.My>.","nodes":[{"content":"The default store location is <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. The default store name is <xref:System.Security.Cryptography.X509Certificates.StoreName.My>.","pos":[0,203],"nodes":[{"content":"The default store location is <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine&gt;</ph>.","pos":[0,110],"source":"The default store location is <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>."},{"content":"The default store name is <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.StoreName.My&gt;</ph>.","pos":[111,203],"source":" The default store name is <xref:System.Security.Cryptography.X509Certificates.StoreName.My>."}]}]}],"pos":[4853,5057],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\"></xref> class that uses the X.509 certificate store with the specified location and name to resolve tokens.","nodes":[{"pos":[0,216],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\"&gt;&lt;/xref&gt;</ph> class that uses the X.509 certificate store with the specified location and name to resolve tokens.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\"></xref> class that uses the X.509 certificate store with the specified location and name to resolve tokens."}],"pos":[6795,7012],"yaml":true},{"content":"One of the enumeration values that specify the name of the X.509 certificate store.","nodes":[{"pos":[0,83],"content":"One of the enumeration values that specify the name of the X.509 certificate store.","nodes":[{"content":"One of the enumeration values that specify the name of the X.509 certificate store.","pos":[0,83]}]}],"pos":[7343,7427],"yaml":true},{"content":"One of the enumeration values that specify the location of the X.509 certificate store.","nodes":[{"pos":[0,87],"content":"One of the enumeration values that specify the location of the X.509 certificate store.","nodes":[{"content":"One of the enumeration values that specify the location of the X.509 certificate store.","pos":[0,87]}]}],"pos":[7542,7630],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\"></xref> class that uses the X.509 certificate store with the specified location and name to resolve tokens.","nodes":[{"pos":[0,216],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\"&gt;&lt;/xref&gt;</ph> class that uses the X.509 certificate store with the specified location and name to resolve tokens.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\"></xref> class that uses the X.509 certificate store with the specified location and name to resolve tokens."}],"pos":[9146,9363],"yaml":true},{"content":"The name of the X.509 certificate store.","nodes":[{"pos":[0,40],"content":"The name of the X.509 certificate store.","nodes":[{"content":"The name of the X.509 certificate store.","pos":[0,40]}]}],"pos":[9603,9644],"yaml":true},{"content":"One of the enumeration values that specify the location of an X.509 certificate store.","nodes":[{"pos":[0,86],"content":"One of the enumeration values that specify the location of an X.509 certificate store.","nodes":[{"content":"One of the enumeration values that specify the location of an X.509 certificate store.","pos":[0,86]}]}],"pos":[9759,9846],"yaml":true},{"content":"<code>storeLocation</code> is `null` or an empty string.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">&lt;code&gt;storeLocation&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph> or an empty string.","source":"<code>storeLocation</code> is `null` or an empty string."}],"pos":[10043,10100],"yaml":true},{"content":"Gets the location of the X.509 certificate store that is used by this token resolver.","nodes":[{"pos":[0,85],"content":"Gets the location of the X.509 certificate store that is used by this token resolver.","nodes":[{"content":"Gets the location of the X.509 certificate store that is used by this token resolver.","pos":[0,85]}]}],"pos":[11183,11269],"yaml":true},{"content":"One of the enumeration values that specify the location of an X.509 certificate store.","nodes":[{"pos":[0,86],"content":"One of the enumeration values that specify the location of an X.509 certificate store.","nodes":[{"content":"One of the enumeration values that specify the location of an X.509 certificate store.","pos":[0,86]}]}],"pos":[11485,11572],"yaml":true},{"content":"Gets the name of the X.509 certificate store that is used by this token resolver.","nodes":[{"pos":[0,81],"content":"Gets the name of the X.509 certificate store that is used by this token resolver.","nodes":[{"content":"Gets the name of the X.509 certificate store that is used by this token resolver.","pos":[0,81]}]}],"pos":[12737,12819],"yaml":true},{"content":"The name of the X.509 certificate store that is used by this token resolver.","nodes":[{"pos":[0,76],"content":"The name of the X.509 certificate store that is used by this token resolver.","nodes":[{"content":"The name of the X.509 certificate store that is used by this token resolver.","pos":[0,76]}]}],"pos":[12932,13009],"yaml":true},{"content":"Attempts to resolve the specified key identifier clause to a security key.","nodes":[{"pos":[0,74],"content":"Attempts to resolve the specified key identifier clause to a security key.","nodes":[{"content":"Attempts to resolve the specified key identifier clause to a security key.","pos":[0,74]}]}],"pos":[14684,14759],"yaml":true},{"content":"The key identifier clause from which to resolve the security key.","nodes":[{"pos":[0,65],"content":"The key identifier clause from which to resolve the security key.","nodes":[{"content":"The key identifier clause from which to resolve the security key.","pos":[0,65]}]}],"pos":[15093,15159],"yaml":true},{"content":"When this method returns, contains the security key that was resolved from the key identifier clause. This parameter is treated as uninitialized.","nodes":[{"pos":[0,145],"content":"When this method returns, contains the security key that was resolved from the key identifier clause. This parameter is treated as uninitialized.","nodes":[{"content":"When this method returns, contains the security key that was resolved from the key identifier clause. This parameter is treated as uninitialized.","pos":[0,145],"nodes":[{"content":"When this method returns, contains the security key that was resolved from the key identifier clause.","pos":[0,101]},{"content":"This parameter is treated as uninitialized.","pos":[102,145]}]}]}],"pos":[15244,15390],"yaml":true},{"content":"`true` if the key identifier clause is successfully resolved; otherwise, `false`.","nodes":[{"pos":[0,81],"content":"<ph id=\"ph1\">`true`</ph> if the key identifier clause is successfully resolved; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the key identifier clause is successfully resolved; otherwise, `false`."}],"pos":[15448,15532],"yaml":true},{"content":"<code>keyIdentifierClause</code> is `null`.","nodes":[{"pos":[0,43],"content":"<ph id=\"ph1\">&lt;code&gt;keyIdentifierClause&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>keyIdentifierClause</code> is `null`."}],"pos":[15749,15793],"yaml":true},{"content":"Resolves the specified key identifier to a security token.","nodes":[{"pos":[0,58],"content":"Resolves the specified key identifier to a security token.","nodes":[{"content":"Resolves the specified key identifier to a security token.","pos":[0,58]}]}],"pos":[17306,17365],"yaml":true},{"content":"The key identifier to resolve.","nodes":[{"pos":[0,30],"content":"The key identifier to resolve.","nodes":[{"content":"The key identifier to resolve.","pos":[0,30]}]}],"pos":[17673,17704],"yaml":true},{"content":"When this method returns, contains the security token that was resolved from the key identifier. This parameter is treated as uninitialized.","nodes":[{"pos":[0,140],"content":"When this method returns, contains the security token that was resolved from the key identifier. This parameter is treated as uninitialized.","nodes":[{"content":"When this method returns, contains the security token that was resolved from the key identifier. This parameter is treated as uninitialized.","pos":[0,140],"nodes":[{"content":"When this method returns, contains the security token that was resolved from the key identifier.","pos":[0,96]},{"content":"This parameter is treated as uninitialized.","pos":[97,140]}]}]}],"pos":[17793,17934],"yaml":true},{"content":"`true` if the key identifier is successfully resolved; otherwise, `false`.","nodes":[{"pos":[0,74],"content":"<ph id=\"ph1\">`true`</ph> if the key identifier is successfully resolved; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the key identifier is successfully resolved; otherwise, `false`."}],"pos":[17992,18069],"yaml":true},{"content":"<code>keyIdentifier</code> is `null`.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;keyIdentifier&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>keyIdentifier</code> is `null`."}],"pos":[18280,18318],"yaml":true},{"content":"Resolves the specified key identifier clause to a security token.","nodes":[{"pos":[0,65],"content":"Resolves the specified key identifier clause to a security token.","nodes":[{"content":"Resolves the specified key identifier clause to a security token.","pos":[0,65]}]}],"pos":[19867,19933],"yaml":true},{"content":"The key identifier clause to resolve.","nodes":[{"pos":[0,37],"content":"The key identifier clause to resolve.","nodes":[{"content":"The key identifier clause to resolve.","pos":[0,37]}]}],"pos":[20265,20303],"yaml":true},{"content":"When this method returns, contains the security token that was resolved from the key identifier clause. This parameter is treated as uninitialized.","nodes":[{"pos":[0,147],"content":"When this method returns, contains the security token that was resolved from the key identifier clause. This parameter is treated as uninitialized.","nodes":[{"content":"When this method returns, contains the security token that was resolved from the key identifier clause. This parameter is treated as uninitialized.","pos":[0,147],"nodes":[{"content":"When this method returns, contains the security token that was resolved from the key identifier clause.","pos":[0,103]},{"content":"This parameter is treated as uninitialized.","pos":[104,147]}]}]}],"pos":[20392,20540],"yaml":true},{"content":"`true` if the key identifier clause is successfully resolved; otherwise, `false`.","nodes":[{"pos":[0,81],"content":"<ph id=\"ph1\">`true`</ph> if the key identifier clause is successfully resolved; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the key identifier clause is successfully resolved; otherwise, `false`."}],"pos":[20598,20682],"yaml":true},{"content":"<code>keyIdentifierClause</code> is `null`.","nodes":[{"pos":[0,43],"content":"<ph id=\"ph1\">&lt;code&gt;keyIdentifierClause&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>keyIdentifierClause</code> is `null`."}],"pos":[20893,20937],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  commentId: T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  id: X509CertificateStoreTokenResolver\n  children:\n  - System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor\n  - System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)\n  - System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)\n  - System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreLocation\n  - System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreName\n  - System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  - System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  - System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  langs:\n  - csharp\n  name: X509CertificateStoreTokenResolver\n  nameWithType: X509CertificateStoreTokenResolver\n  fullName: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Represents a token resolver that can resolve tokens of type <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref> against a specified X.509 certificate store.\n  syntax:\n    content: 'public class X509CertificateStoreTokenResolver : System.IdentityModel.Selectors.SecurityTokenResolver'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Selectors.SecurityTokenResolver\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509CertificateStoreTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor\n  commentId: M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  langs:\n  - csharp\n  name: X509CertificateStoreTokenResolver()\n  nameWithType: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver()\n  fullName: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\"></xref> class with a default X.509 certificate store.\n  remarks: The default store location is <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. The default store name is <xref:System.Security.Cryptography.X509Certificates.StoreName.My>.\n  syntax:\n    content: public X509CertificateStoreTokenResolver ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509CertificateStoreTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)\n  commentId: M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)\n  id: '#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)'\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  langs:\n  - csharp\n  name: X509CertificateStoreTokenResolver(StoreName, StoreLocation)\n  nameWithType: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver(StoreName, StoreLocation)\n  fullName: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver(StoreName, StoreLocation)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\"></xref> class that uses the X.509 certificate store with the specified location and name to resolve tokens.\n  syntax:\n    content: public X509CertificateStoreTokenResolver (System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation);\n    parameters:\n    - id: storeName\n      type: System.Security.Cryptography.X509Certificates.StoreName\n      description: One of the enumeration values that specify the name of the X.509 certificate store.\n    - id: storeLocation\n      type: System.Security.Cryptography.X509Certificates.StoreLocation\n      description: One of the enumeration values that specify the location of the X.509 certificate store.\n  overload: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509CertificateStoreTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)\n  commentId: M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)\n  id: '#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)'\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  langs:\n  - csharp\n  name: X509CertificateStoreTokenResolver(String, StoreLocation)\n  nameWithType: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver(String, StoreLocation)\n  fullName: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver(String, StoreLocation)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\"></xref> class that uses the X.509 certificate store with the specified location and name to resolve tokens.\n  syntax:\n    content: public X509CertificateStoreTokenResolver (string storeName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation);\n    parameters:\n    - id: storeName\n      type: System.String\n      description: The name of the X.509 certificate store.\n    - id: storeLocation\n      type: System.Security.Cryptography.X509Certificates.StoreLocation\n      description: One of the enumeration values that specify the location of an X.509 certificate store.\n  overload: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>storeLocation</code> is `null` or an empty string.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509CertificateStoreTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreLocation\n  commentId: P:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreLocation\n  id: StoreLocation\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  langs:\n  - csharp\n  name: StoreLocation\n  nameWithType: X509CertificateStoreTokenResolver.StoreLocation\n  fullName: X509CertificateStoreTokenResolver.StoreLocation\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the location of the X.509 certificate store that is used by this token resolver.\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.StoreLocation StoreLocation { get; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.StoreLocation\n      description: One of the enumeration values that specify the location of an X.509 certificate store.\n  overload: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreLocation*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509CertificateStoreTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreName\n  commentId: P:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreName\n  id: StoreName\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  langs:\n  - csharp\n  name: StoreName\n  nameWithType: X509CertificateStoreTokenResolver.StoreName\n  fullName: X509CertificateStoreTokenResolver.StoreName\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the name of the X.509 certificate store that is used by this token resolver.\n  syntax:\n    content: public string StoreName { get; }\n    return:\n      type: System.String\n      description: The name of the X.509 certificate store that is used by this token resolver.\n  overload: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509CertificateStoreTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  commentId: M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  id: TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  langs:\n  - csharp\n  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n  nameWithType: X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n  fullName: X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Attempts to resolve the specified key identifier clause to a security key.\n  syntax:\n    content: protected override bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The key identifier clause from which to resolve the security key.\n    - id: key\n      type: System.IdentityModel.Tokens.SecurityKey\n      description: When this method returns, contains the security key that was resolved from the key identifier clause. This parameter is treated as uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` if the key identifier clause is successfully resolved; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>keyIdentifierClause</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509CertificateStoreTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  commentId: M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  langs:\n  - csharp\n  name: TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n  nameWithType: X509CertificateStoreTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n  fullName: X509CertificateStoreTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Resolves the specified key identifier to a security token.\n  syntax:\n    content: protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: keyIdentifier\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifier\n      description: The key identifier to resolve.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: When this method returns, contains the security token that was resolved from the key identifier. This parameter is treated as uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` if the key identifier is successfully resolved; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>keyIdentifier</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509CertificateStoreTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  commentId: M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  langs:\n  - csharp\n  name: TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n  nameWithType: X509CertificateStoreTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n  fullName: X509CertificateStoreTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Resolves the specified key identifier clause to a security token.\n  syntax:\n    content: protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: The key identifier clause to resolve.\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: When this method returns, contains the security token that was resolved from the key identifier clause. This parameter is treated as uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` if the key identifier clause is successfully resolved; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>keyIdentifierClause</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509CertificateStoreTokenResolver.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenResolver\n  nameWithType: SecurityTokenResolver\n  fullName: System.IdentityModel.Selectors.SecurityTokenResolver\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  isExternal: false\n  name: X509CertificateStoreTokenResolver()\n  nameWithType: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver()\n  fullName: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver()\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  isExternal: false\n  name: X509CertificateStoreTokenResolver(StoreName, StoreLocation)\n  nameWithType: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver(StoreName, StoreLocation)\n  fullName: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver(StoreName, StoreLocation)\n- uid: System.Security.Cryptography.X509Certificates.StoreName\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: StoreName\n  nameWithType: StoreName\n  fullName: System.Security.Cryptography.X509Certificates.StoreName\n- uid: System.Security.Cryptography.X509Certificates.StoreLocation\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: StoreLocation\n  nameWithType: StoreLocation\n  fullName: System.Security.Cryptography.X509Certificates.StoreLocation\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  isExternal: false\n  name: X509CertificateStoreTokenResolver(String, StoreLocation)\n  nameWithType: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver(String, StoreLocation)\n  fullName: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver(String, StoreLocation)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreLocation\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  isExternal: false\n  name: StoreLocation\n  nameWithType: X509CertificateStoreTokenResolver.StoreLocation\n  fullName: X509CertificateStoreTokenResolver.StoreLocation\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreName\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  isExternal: false\n  name: StoreName\n  nameWithType: X509CertificateStoreTokenResolver.StoreName\n  fullName: X509CertificateStoreTokenResolver.StoreName\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  isExternal: false\n  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n  nameWithType: X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n  fullName: X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause, SecurityKey)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n- uid: System.IdentityModel.Tokens.SecurityKey\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKey\n  nameWithType: SecurityKey\n  fullName: System.IdentityModel.Tokens.SecurityKey\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  isExternal: false\n  name: TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n  nameWithType: X509CertificateStoreTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n  fullName: X509CertificateStoreTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier, SecurityToken)\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifier\n  nameWithType: SecurityKeyIdentifier\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  isExternal: false\n  name: TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n  nameWithType: X509CertificateStoreTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n  fullName: X509CertificateStoreTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause, SecurityToken)\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor*\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  isExternal: false\n  name: X509CertificateStoreTokenResolver\n  nameWithType: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver\n  fullName: X509CertificateStoreTokenResolver.X509CertificateStoreTokenResolver\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509CertificateStoreTokenResolver.xml\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreLocation*\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  isExternal: false\n  name: StoreLocation\n  nameWithType: X509CertificateStoreTokenResolver.StoreLocation\n  fullName: X509CertificateStoreTokenResolver.StoreLocation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509CertificateStoreTokenResolver.xml\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreName*\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  isExternal: false\n  name: StoreName\n  nameWithType: X509CertificateStoreTokenResolver.StoreName\n  fullName: X509CertificateStoreTokenResolver.StoreName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509CertificateStoreTokenResolver.xml\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore*\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  isExternal: false\n  name: TryResolveSecurityKeyCore\n  nameWithType: X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore\n  fullName: X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509CertificateStoreTokenResolver.xml\n- uid: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore*\n  parent: System.IdentityModel.Tokens.X509CertificateStoreTokenResolver\n  isExternal: false\n  name: TryResolveTokenCore\n  nameWithType: X509CertificateStoreTokenResolver.TryResolveTokenCore\n  fullName: X509CertificateStoreTokenResolver.TryResolveTokenCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509CertificateStoreTokenResolver.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>, Boolean)\n  nameWithType: SecurityTokenResolver.CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>, Boolean)\n  fullName: SecurityTokenResolver.CreateDefaultSecurityTokenResolver(ReadOnlyCollection<SecurityToken>, Boolean)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: SecurityTokenResolver.LoadCustomConfiguration(XmlNodeList)\n  fullName: SecurityTokenResolver.LoadCustomConfiguration(XmlNodeList)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: ResolveSecurityKey(SecurityKeyIdentifierClause)\n  nameWithType: SecurityTokenResolver.ResolveSecurityKey(SecurityKeyIdentifierClause)\n  fullName: SecurityTokenResolver.ResolveSecurityKey(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: ResolveToken(SecurityKeyIdentifier)\n  nameWithType: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifier)\n  fullName: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifier)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: ResolveToken(SecurityKeyIdentifierClause)\n  nameWithType: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifierClause)\n  fullName: SecurityTokenResolver.ResolveToken(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: TryResolveSecurityKey(SecurityKeyIdentifierClause, SecurityKey)\n  nameWithType: SecurityTokenResolver.TryResolveSecurityKey(SecurityKeyIdentifierClause, SecurityKey)\n  fullName: SecurityTokenResolver.TryResolveSecurityKey(SecurityKeyIdentifierClause, SecurityKey)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: TryResolveToken(SecurityKeyIdentifier, SecurityToken)\n  nameWithType: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifier, SecurityToken)\n  fullName: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifier, SecurityToken)\n- uid: System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)\n  parent: System.IdentityModel.Selectors.SecurityTokenResolver\n  isExternal: false\n  name: TryResolveToken(SecurityKeyIdentifierClause, SecurityToken)\n  nameWithType: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifierClause, SecurityToken)\n  fullName: SecurityTokenResolver.TryResolveToken(SecurityKeyIdentifierClause, SecurityToken)\n"}