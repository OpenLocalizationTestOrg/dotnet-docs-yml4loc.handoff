{"nodes":[{"content":"Provides extension methods for constructing composition services.","nodes":[{"pos":[0,65],"content":"Provides extension methods for constructing composition services.","nodes":[{"content":"Provides extension methods for constructing composition services.","pos":[0,65]}]}],"pos":[655,721],"yaml":true},{"content":"Creates a new composition service by using the specified catalog as a source for exports.","nodes":[{"pos":[0,89],"content":"Creates a new composition service by using the specified catalog as a source for exports.","nodes":[{"content":"Creates a new composition service by using the specified catalog as a source for exports.","pos":[0,89]}]}],"pos":[2676,2766],"yaml":true},{"content":"The catalog that will provide exports.","nodes":[{"pos":[0,38],"content":"The catalog that will provide exports.","nodes":[{"content":"The catalog that will provide exports.","pos":[0,38]}]}],"pos":[3132,3171],"yaml":true},{"content":"A new composition service.","nodes":[{"pos":[0,26],"content":"A new composition service.","nodes":[{"content":"A new composition service.","pos":[0,26]}]}],"pos":[3275,3302],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Composition.Hosting.CatalogExtensions\n  commentId: T:System.ComponentModel.Composition.Hosting.CatalogExtensions\n  id: CatalogExtensions\n  children:\n  - System.ComponentModel.Composition.Hosting.CatalogExtensions.CreateCompositionService(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)\n  langs:\n  - csharp\n  name: CatalogExtensions\n  nameWithType: CatalogExtensions\n  fullName: System.ComponentModel.Composition.Hosting.CatalogExtensions\n  type: Class\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Provides extension methods for constructing composition services.\n  syntax:\n    content: public static class CatalogExtensions\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/CatalogExtensions.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Hosting.CatalogExtensions.CreateCompositionService(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)\n  commentId: M:System.ComponentModel.Composition.Hosting.CatalogExtensions.CreateCompositionService(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)\n  id: CreateCompositionService(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)\n  parent: System.ComponentModel.Composition.Hosting.CatalogExtensions\n  langs:\n  - csharp\n  name: CreateCompositionService(ComposablePartCatalog)\n  nameWithType: CatalogExtensions.CreateCompositionService(ComposablePartCatalog)\n  fullName: CatalogExtensions.CreateCompositionService(ComposablePartCatalog)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Creates a new composition service by using the specified catalog as a source for exports.\n  syntax:\n    content: public static System.ComponentModel.Composition.Hosting.CompositionService CreateCompositionService (this System.ComponentModel.Composition.Primitives.ComposablePartCatalog composablePartCatalog);\n    parameters:\n    - id: composablePartCatalog\n      type: System.ComponentModel.Composition.Primitives.ComposablePartCatalog\n      description: The catalog that will provide exports.\n    return:\n      type: System.ComponentModel.Composition.Hosting.CompositionService\n      description: A new composition service.\n  overload: System.ComponentModel.Composition.Hosting.CatalogExtensions.CreateCompositionService*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/CatalogExtensions.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.Composition.Hosting.CatalogExtensions.CreateCompositionService(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)\n  parent: System.ComponentModel.Composition.Hosting.CatalogExtensions\n  isExternal: false\n  name: CreateCompositionService(ComposablePartCatalog)\n  nameWithType: CatalogExtensions.CreateCompositionService(ComposablePartCatalog)\n  fullName: CatalogExtensions.CreateCompositionService(ComposablePartCatalog)\n- uid: System.ComponentModel.Composition.Hosting.CompositionService\n  parent: System.ComponentModel.Composition.Hosting\n  isExternal: false\n  name: CompositionService\n  nameWithType: CompositionService\n  fullName: System.ComponentModel.Composition.Hosting.CompositionService\n- uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ComposablePartCatalog\n  nameWithType: ComposablePartCatalog\n  fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog\n- uid: System.ComponentModel.Composition.Hosting.CatalogExtensions.CreateCompositionService*\n  parent: System.ComponentModel.Composition.Hosting.CatalogExtensions\n  isExternal: false\n  name: CreateCompositionService\n  nameWithType: CatalogExtensions.CreateCompositionService\n  fullName: CatalogExtensions.CreateCompositionService\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/CatalogExtensions.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}