{"nodes":[{"content":"Provides data for the <xref href=\"System.Windows.FrameworkElement.RequestBringIntoView\"></xref> routed event.","nodes":[{"pos":[0,109],"content":"Provides data for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkElement.RequestBringIntoView\"&gt;&lt;/xref&gt;</ph> routed event.","source":"Provides data for the <xref href=\"System.Windows.FrameworkElement.RequestBringIntoView\"></xref> routed event."}],"pos":[671,781],"yaml":true},{"content":"The <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> event is raised by elements when you call <xref:System.Windows.FrameworkElement.BringIntoView%2A> from that element. Generally, this routed event is not handled by the source. Intermediate classes that do not implement scrollable regions or similar concepts that clip content should not handle the event.  The event should be permitted to bubble to parent elements that implement a scrollable region or otherwise specify <xref:System.Windows.UIElement.ClipToBounds%2A> `false`. Such parent elements typically provide class handling for the <xref:System.Windows.FrameworkElement.RequestBringIntoView> event, which is where the necessary rendering logic occurs whenever a given element requests that it be made viewable within the clipping region.  \n  \n Content elements can cause the event to be raised by their content hosts (through calling <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> and raising <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> from the content host). Similarly, you can request logical tree elements to be brought into view with the helper method <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName>.  \n  \n A <xref:System.Windows.Controls.ListBox> implements a related but different method <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>.","nodes":[{"pos":[0,834],"content":"The <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> event is raised by elements when you call <xref:System.Windows.FrameworkElement.BringIntoView%2A> from that element. Generally, this routed event is not handled by the source. Intermediate classes that do not implement scrollable regions or similar concepts that clip content should not handle the event.  The event should be permitted to bubble to parent elements that implement a scrollable region or otherwise specify <xref:System.Windows.UIElement.ClipToBounds%2A> `false`. Such parent elements typically provide class handling for the <xref:System.Windows.FrameworkElement.RequestBringIntoView> event, which is where the necessary rendering logic occurs whenever a given element requests that it be made viewable within the clipping region.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName&gt;</ph> event is raised by elements when you call <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement.BringIntoView%2A&gt;</ph> from that element.","pos":[0,205],"source":"The <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> event is raised by elements when you call <xref:System.Windows.FrameworkElement.BringIntoView%2A> from that element."},{"content":"Generally, this routed event is not handled by the source.","pos":[206,264]},{"content":"Intermediate classes that do not implement scrollable regions or similar concepts that clip content should not handle the event.","pos":[265,393]},{"content":"The event should be permitted to bubble to parent elements that implement a scrollable region or otherwise specify <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.ClipToBounds%2A&gt;</ph> <ph id=\"ph2\">`false`</ph>.","pos":[395,566],"source":"  The event should be permitted to bubble to parent elements that implement a scrollable region or otherwise specify <xref:System.Windows.UIElement.ClipToBounds%2A> `false`."},{"content":"Such parent elements typically provide class handling for the <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView&gt;</ph> event, which is where the necessary rendering logic occurs whenever a given element requests that it be made viewable within the clipping region.","pos":[567,834],"source":" Such parent elements typically provide class handling for the <xref:System.Windows.FrameworkElement.RequestBringIntoView> event, which is where the necessary rendering logic occurs whenever a given element requests that it be made viewable within the clipping region."}]},{"pos":[841,1293],"content":"Content elements can cause the event to be raised by their content hosts (through calling <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> and raising <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> from the content host). Similarly, you can request logical tree elements to be brought into view with the helper method <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName>.","nodes":[{"content":"Content elements can cause the event to be raised by their content hosts (through calling <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> and raising <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> from the content host). Similarly, you can request logical tree elements to be brought into view with the helper method <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName>.","pos":[0,452],"nodes":[{"content":"Content elements can cause the event to be raised by their content hosts (through calling <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkContentElement.BringIntoView%2A&gt;</ph> and raising <ph id=\"ph2\">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName&gt;</ph> from the content host).","pos":[0,273],"source":"Content elements can cause the event to be raised by their content hosts (through calling <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> and raising <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> from the content host)."},{"content":"Similarly, you can request logical tree elements to be brought into view with the helper method <ph id=\"ph1\">&lt;xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName&gt;</ph>.","pos":[274,452],"source":" Similarly, you can request logical tree elements to be brought into view with the helper method <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName>."}]}]},{"pos":[1300,1440],"content":"A <xref:System.Windows.Controls.ListBox> implements a related but different method <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> implements a related but different method <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ListBox.ScrollIntoView%2A&gt;</ph>.","pos":[0,140],"source":"A <xref:System.Windows.Controls.ListBox> implements a related but different method <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>."}]}],"pos":[792,2239],"yaml":true,"extradata":"MT"},{"content":"Invokes event handlers in a type-specific way, which can increase event system efficiency.","nodes":[{"pos":[0,90],"content":"Invokes event handlers in a type-specific way, which can increase event system efficiency.","nodes":[{"content":"Invokes event handlers in a type-specific way, which can increase event system efficiency.","pos":[0,90]}]}],"pos":[4194,4285],"yaml":true},{"content":"This implementation casts the generic handler as a <xref:System.Windows.RequestBringIntoViewEventHandler> and then invokes it. For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).","nodes":[{"pos":[0,344],"content":"This implementation casts the generic handler as a <xref:System.Windows.RequestBringIntoViewEventHandler> and then invokes it. For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).","nodes":[{"content":"This implementation casts the generic handler as a <ph id=\"ph1\">&lt;xref:System.Windows.RequestBringIntoViewEventHandler&gt;</ph> and then invokes it.","pos":[0,126],"source":"This implementation casts the generic handler as a <xref:System.Windows.RequestBringIntoViewEventHandler> and then invokes it."},{"content":"For details on this implementation pattern and the reasons for it, see <ph id=\"ph1\">&lt;xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A&gt;</ph> and <bpt id=\"p1\">[</bpt>Routed Events Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/routed-events-overview.md)</ept>.","pos":[127,344],"source":" For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md)."}]}],"pos":[4296,4641],"yaml":true,"extradata":"MT"},{"content":"The generic handler to call in a type-specific way.","nodes":[{"pos":[0,51],"content":"The generic handler to call in a type-specific way.","nodes":[{"content":"The generic handler to call in a type-specific way.","pos":[0,51]}]}],"pos":[4844,4896],"yaml":true},{"content":"The target to call the handler on.","nodes":[{"pos":[0,34],"content":"The target to call the handler on.","nodes":[{"content":"The target to call the handler on.","pos":[0,34]}]}],"pos":[4965,5000],"yaml":true},{"content":"Gets the object that should be made visible in response to the event.","nodes":[{"pos":[0,69],"content":"Gets the object that should be made visible in response to the event.","nodes":[{"content":"Gets the object that should be made visible in response to the event.","pos":[0,69]}]}],"pos":[6096,6166],"yaml":true},{"content":"This object is typically the same object as returned by <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName>.","nodes":[{"pos":[0,129],"content":"This object is typically the same object as returned by <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName>.","nodes":[{"content":"This object is typically the same object as returned by <ph id=\"ph1\">&lt;xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName&gt;</ph>.","pos":[0,129],"source":"This object is typically the same object as returned by <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName>."}]}],"pos":[6177,6307],"yaml":true,"extradata":"MT"},{"content":"The object that called <xref href=\"System.Windows.FrameworkElement.BringIntoView\"></xref>.","nodes":[{"pos":[0,90],"content":"The object that called <ph id=\"ph1\">&lt;xref href=\"System.Windows.FrameworkElement.BringIntoView\"&gt;&lt;/xref&gt;</ph>.","source":"The object that called <xref href=\"System.Windows.FrameworkElement.BringIntoView\"></xref>."}],"pos":[6466,6557],"yaml":true},{"content":"Gets the rectangular region in the object's coordinate space which should be made visible.","nodes":[{"pos":[0,90],"content":"Gets the rectangular region in the object's coordinate space which should be made visible.","nodes":[{"content":"Gets the rectangular region in the object's coordinate space which should be made visible.","pos":[0,90]}]}],"pos":[7635,7726],"yaml":true},{"content":"If the signature of <xref:System.Windows.FrameworkElement.BringIntoView%2A> that was invoked to raise the event didn't specify a target rectangle, this property may be the <xref:System.Windows.Rect.Empty%2A> value of the <xref:System.Windows.Rect> structure.","nodes":[{"pos":[0,258],"content":"If the signature of <xref:System.Windows.FrameworkElement.BringIntoView%2A> that was invoked to raise the event didn't specify a target rectangle, this property may be the <xref:System.Windows.Rect.Empty%2A> value of the <xref:System.Windows.Rect> structure.","nodes":[{"content":"If the signature of <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkElement.BringIntoView%2A&gt;</ph> that was invoked to raise the event didn't specify a target rectangle, this property may be the <ph id=\"ph2\">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> value of the <ph id=\"ph3\">&lt;xref:System.Windows.Rect&gt;</ph> structure.","pos":[0,258],"source":"If the signature of <xref:System.Windows.FrameworkElement.BringIntoView%2A> that was invoked to raise the event didn't specify a target rectangle, this property may be the <xref:System.Windows.Rect.Empty%2A> value of the <xref:System.Windows.Rect> structure."}]}],"pos":[7737,7996],"yaml":true,"extradata":"MT"},{"content":"The requested rectangular space.","nodes":[{"pos":[0,32],"content":"The requested rectangular space.","nodes":[{"content":"The requested rectangular space.","pos":[0,32]}]}],"pos":[8129,8162],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.RequestBringIntoViewEventArgs\n  commentId: T:System.Windows.RequestBringIntoViewEventArgs\n  id: RequestBringIntoViewEventArgs\n  children:\n  - System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  - System.Windows.RequestBringIntoViewEventArgs.TargetObject\n  - System.Windows.RequestBringIntoViewEventArgs.TargetRect\n  langs:\n  - csharp\n  name: RequestBringIntoViewEventArgs\n  nameWithType: RequestBringIntoViewEventArgs\n  fullName: System.Windows.RequestBringIntoViewEventArgs\n  type: Class\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Provides data for the <xref href=\"System.Windows.FrameworkElement.RequestBringIntoView\"></xref> routed event.\n  remarks: \"The <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> event is raised by elements when you call <xref:System.Windows.FrameworkElement.BringIntoView%2A> from that element. Generally, this routed event is not handled by the source. Intermediate classes that do not implement scrollable regions or similar concepts that clip content should not handle the event.  The event should be permitted to bubble to parent elements that implement a scrollable region or otherwise specify <xref:System.Windows.UIElement.ClipToBounds%2A> `false`. Such parent elements typically provide class handling for the <xref:System.Windows.FrameworkElement.RequestBringIntoView> event, which is where the necessary rendering logic occurs whenever a given element requests that it be made viewable within the clipping region.  \\n  \\n Content elements can cause the event to be raised by their content hosts (through calling <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> and raising <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> from the content host). Similarly, you can request logical tree elements to be brought into view with the helper method <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName>.  \\n  \\n A <xref:System.Windows.Controls.ListBox> implements a related but different method <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>.\"\n  syntax:\n    content: 'public class RequestBringIntoViewEventArgs : System.Windows.RoutedEventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  - System.Windows.RoutedEventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.RoutedEventArgs.Handled\n  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)\n  - System.Windows.RoutedEventArgs.OriginalSource\n  - System.Windows.RoutedEventArgs.RoutedEvent\n  - System.Windows.RoutedEventArgs.Source\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/RequestBringIntoViewEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  commentId: M:System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  id: InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.RequestBringIntoViewEventArgs\n  langs:\n  - csharp\n  name: InvokeEventHandler(Delegate, Object)\n  nameWithType: RequestBringIntoViewEventArgs.InvokeEventHandler(Delegate, Object)\n  fullName: RequestBringIntoViewEventArgs.InvokeEventHandler(Delegate, Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Invokes event handlers in a type-specific way, which can increase event system efficiency.\n  remarks: This implementation casts the generic handler as a <xref:System.Windows.RequestBringIntoViewEventHandler> and then invokes it. For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).\n  syntax:\n    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);\n    parameters:\n    - id: genericHandler\n      type: System.Delegate\n      description: The generic handler to call in a type-specific way.\n    - id: genericTarget\n      type: System.Object\n      description: The target to call the handler on.\n  overload: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/RequestBringIntoViewEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.RequestBringIntoViewEventArgs.TargetObject\n  commentId: P:System.Windows.RequestBringIntoViewEventArgs.TargetObject\n  id: TargetObject\n  parent: System.Windows.RequestBringIntoViewEventArgs\n  langs:\n  - csharp\n  name: TargetObject\n  nameWithType: RequestBringIntoViewEventArgs.TargetObject\n  fullName: RequestBringIntoViewEventArgs.TargetObject\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets the object that should be made visible in response to the event.\n  remarks: This object is typically the same object as returned by <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName>.\n  syntax:\n    content: public System.Windows.DependencyObject TargetObject { get; }\n    return:\n      type: System.Windows.DependencyObject\n      description: The object that called <xref href=\"System.Windows.FrameworkElement.BringIntoView\"></xref>.\n  overload: System.Windows.RequestBringIntoViewEventArgs.TargetObject*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/RequestBringIntoViewEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.RequestBringIntoViewEventArgs.TargetRect\n  commentId: P:System.Windows.RequestBringIntoViewEventArgs.TargetRect\n  id: TargetRect\n  parent: System.Windows.RequestBringIntoViewEventArgs\n  langs:\n  - csharp\n  name: TargetRect\n  nameWithType: RequestBringIntoViewEventArgs.TargetRect\n  fullName: RequestBringIntoViewEventArgs.TargetRect\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets the rectangular region in the object's coordinate space which should be made visible.\n  remarks: If the signature of <xref:System.Windows.FrameworkElement.BringIntoView%2A> that was invoked to raise the event didn't specify a target rectangle, this property may be the <xref:System.Windows.Rect.Empty%2A> value of the <xref:System.Windows.Rect> structure.\n  syntax:\n    content: public System.Windows.Rect TargetRect { get; }\n    return:\n      type: System.Windows.Rect\n      description: The requested rectangular space.\n  overload: System.Windows.RequestBringIntoViewEventArgs.TargetRect*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/RequestBringIntoViewEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.RoutedEventArgs\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEventArgs\n  nameWithType: RoutedEventArgs\n  fullName: System.Windows.RoutedEventArgs\n- uid: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.RequestBringIntoViewEventArgs\n  isExternal: false\n  name: InvokeEventHandler(Delegate, Object)\n  nameWithType: RequestBringIntoViewEventArgs.InvokeEventHandler(Delegate, Object)\n  fullName: RequestBringIntoViewEventArgs.InvokeEventHandler(Delegate, Object)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.RequestBringIntoViewEventArgs.TargetObject\n  parent: System.Windows.RequestBringIntoViewEventArgs\n  isExternal: false\n  name: TargetObject\n  nameWithType: RequestBringIntoViewEventArgs.TargetObject\n  fullName: RequestBringIntoViewEventArgs.TargetObject\n- uid: System.Windows.DependencyObject\n  parent: System.Windows\n  isExternal: false\n  name: DependencyObject\n  nameWithType: DependencyObject\n  fullName: System.Windows.DependencyObject\n- uid: System.Windows.RequestBringIntoViewEventArgs.TargetRect\n  parent: System.Windows.RequestBringIntoViewEventArgs\n  isExternal: false\n  name: TargetRect\n  nameWithType: RequestBringIntoViewEventArgs.TargetRect\n  fullName: RequestBringIntoViewEventArgs.TargetRect\n- uid: System.Windows.Rect\n  parent: System.Windows\n  isExternal: false\n  name: Rect\n  nameWithType: Rect\n  fullName: System.Windows.Rect\n- uid: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler*\n  parent: System.Windows.RequestBringIntoViewEventArgs\n  isExternal: false\n  name: InvokeEventHandler\n  nameWithType: RequestBringIntoViewEventArgs.InvokeEventHandler\n  fullName: RequestBringIntoViewEventArgs.InvokeEventHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/RequestBringIntoViewEventArgs.xml\n- uid: System.Windows.RequestBringIntoViewEventArgs.TargetObject*\n  parent: System.Windows.RequestBringIntoViewEventArgs\n  isExternal: false\n  name: TargetObject\n  nameWithType: RequestBringIntoViewEventArgs.TargetObject\n  fullName: RequestBringIntoViewEventArgs.TargetObject\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/RequestBringIntoViewEventArgs.xml\n- uid: System.Windows.RequestBringIntoViewEventArgs.TargetRect*\n  parent: System.Windows.RequestBringIntoViewEventArgs\n  isExternal: false\n  name: TargetRect\n  nameWithType: RequestBringIntoViewEventArgs.TargetRect\n  fullName: RequestBringIntoViewEventArgs.TargetRect\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/RequestBringIntoViewEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n- uid: System.Windows.RoutedEventArgs.Handled\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: Handled\n  nameWithType: RoutedEventArgs.Handled\n  fullName: RoutedEventArgs.Handled\n- uid: System.Windows.RoutedEventArgs.OnSetSource(System.Object)\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: OnSetSource(Object)\n  nameWithType: RoutedEventArgs.OnSetSource(Object)\n  fullName: RoutedEventArgs.OnSetSource(Object)\n- uid: System.Windows.RoutedEventArgs.OriginalSource\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: OriginalSource\n  nameWithType: RoutedEventArgs.OriginalSource\n  fullName: RoutedEventArgs.OriginalSource\n- uid: System.Windows.RoutedEventArgs.RoutedEvent\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: RoutedEvent\n  nameWithType: RoutedEventArgs.RoutedEvent\n  fullName: RoutedEventArgs.RoutedEvent\n- uid: System.Windows.RoutedEventArgs.Source\n  parent: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: Source\n  nameWithType: RoutedEventArgs.Source\n  fullName: RoutedEventArgs.Source\n"}