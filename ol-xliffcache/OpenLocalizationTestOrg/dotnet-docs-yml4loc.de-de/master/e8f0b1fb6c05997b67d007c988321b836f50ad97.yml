### YamlMime:ManagedReference
items:
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties
  commentId: T:System.Net.NetworkInformation.IPv4InterfaceProperties
  id: IPv4InterfaceProperties
  children:
  - System.Net.NetworkInformation.IPv4InterfaceProperties.#ctor
  - System.Net.NetworkInformation.IPv4InterfaceProperties.Index
  - System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive
  - System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled
  - System.Net.NetworkInformation.IPv4InterfaceProperties.IsDhcpEnabled
  - System.Net.NetworkInformation.IPv4InterfaceProperties.IsForwardingEnabled
  - System.Net.NetworkInformation.IPv4InterfaceProperties.Mtu
  - System.Net.NetworkInformation.IPv4InterfaceProperties.UsesWins
  langs:
  - csharp
  name: IPv4InterfaceProperties
  nameWithType: IPv4InterfaceProperties
  fullName: System.Net.NetworkInformation.IPv4InterfaceProperties
  type: Class
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Provides information about network interfaces that support Internet Protocol version 4 (IPv4).
  remarks: "This class provides access to configuration and address information for network interfaces that support IPv4. You do not create instances of this class; they are returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> method.  \n  \n For IPV6 properties, see <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A>."
  example:
  - "The following code example gets an <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> object and displays its data.  \n  \n [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]\n [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]\n [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]"
  syntax:
    content: public abstract class IPv4InterfaceProperties
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.#ctor
  commentId: M:System.Net.NetworkInformation.IPv4InterfaceProperties.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  langs:
  - csharp
  name: IPv4InterfaceProperties()
  nameWithType: IPv4InterfaceProperties.IPv4InterfaceProperties()
  fullName: IPv4InterfaceProperties.IPv4InterfaceProperties()
  type: Constructor
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Initializes a new instance of the <xref href="System.Net.NetworkInformation.IPv4InterfaceProperties"></xref> class.
  remarks: This constructor can be called only by classes that derive from <xref:System.Net.NetworkInformation.IPv4InterfaceProperties>.
  syntax:
    content: protected IPv4InterfaceProperties ();
    parameters: []
  overload: System.Net.NetworkInformation.IPv4InterfaceProperties.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.Index
  commentId: P:System.Net.NetworkInformation.IPv4InterfaceProperties.Index
  id: Index
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  langs:
  - csharp
  name: Index
  nameWithType: IPv4InterfaceProperties.Index
  fullName: IPv4InterfaceProperties.Index
  type: Property
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Gets the index of the network interface associated with the Internet Protocol version 4 (IPv4) address.
  remarks: If the value of this property is zero, IPv4 is not supported by this interface.
  example:
  - "The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.  \n  \n [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]\n [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]\n [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]"
  syntax:
    content: public abstract int Index { get; }
    return:
      type: System.Int32
      description: An <xref href="System.Int32"></xref> that contains the index of the IPv4 interface.
  overload: System.Net.NetworkInformation.IPv4InterfaceProperties.Index*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive
  commentId: P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive
  id: IsAutomaticPrivateAddressingActive
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  langs:
  - csharp
  name: IsAutomaticPrivateAddressingActive
  nameWithType: IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive
  fullName: IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive
  type: Property
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Gets a <xref href="System.Boolean"></xref> value that indicates whether this interface has an automatic private IP addressing (APIPA) address.
  remarks: Automatic private IP addressing allows computers that do not have access to a Dynamic Host Configuration Protocol (DHCP) server to be automatically assigned an IP address that does not conflict with public addresses. These addresses are in the range 169.254.0.0 to 169.254.255.255.
  example:
  - "The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.  \n  \n [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]\n [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]\n [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]"
  syntax:
    content: public abstract bool IsAutomaticPrivateAddressingActive { get; }
    return:
      type: System.Boolean
      description: '`true` if the interface uses an APIPA address; otherwise, `false`.'
  overload: System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled
  commentId: P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled
  id: IsAutomaticPrivateAddressingEnabled
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  langs:
  - csharp
  name: IsAutomaticPrivateAddressingEnabled
  nameWithType: IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled
  fullName: IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled
  type: Property
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Gets a <xref href="System.Boolean"></xref> value that indicates whether this interface has automatic private IP addressing (APIPA) enabled.
  remarks: Automatic private IP addressing allows computers that do not have access to a Dynamic Host Configuration Protocol (DHCP) server to be automatically assigned an IP address that does not conflict with public addresses. These addresses are in the range 169.254.0.0 to 169.254.255.255.
  example:
  - "The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.  \n  \n [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]\n [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]\n [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]"
  syntax:
    content: public abstract bool IsAutomaticPrivateAddressingEnabled { get; }
    return:
      type: System.Boolean
      description: '`true` if the interface uses APIPA; otherwise, `false`.'
  overload: System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsDhcpEnabled
  commentId: P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsDhcpEnabled
  id: IsDhcpEnabled
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  langs:
  - csharp
  name: IsDhcpEnabled
  nameWithType: IPv4InterfaceProperties.IsDhcpEnabled
  fullName: IPv4InterfaceProperties.IsDhcpEnabled
  type: Property
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Gets a <xref href="System.Boolean"></xref> value that indicates whether the interface is configured to use a Dynamic Host Configuration Protocol (DHCP) server to obtain an IP address.
  remarks: When this property is `true`, a DHCP server assigns the IP address to the interface when the computer establishes its network connections.
  example:
  - "The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.  \n  \n [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]\n [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]\n [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]"
  syntax:
    content: public abstract bool IsDhcpEnabled { get; }
    return:
      type: System.Boolean
      description: '`true` if the interface is configured to obtain an IP address from a DHCP server; otherwise, `false`.'
  overload: System.Net.NetworkInformation.IPv4InterfaceProperties.IsDhcpEnabled*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsForwardingEnabled
  commentId: P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsForwardingEnabled
  id: IsForwardingEnabled
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  langs:
  - csharp
  name: IsForwardingEnabled
  nameWithType: IPv4InterfaceProperties.IsForwardingEnabled
  fullName: IPv4InterfaceProperties.IsForwardingEnabled
  type: Property
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Gets a <xref href="System.Boolean"></xref> value that indicates whether this interface can forward (route) packets.
  remarks: If routing is disabled, packets that are received by the interface with a destination address that is not held by the interface are discarded.
  example:
  - "The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.  \n  \n [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]\n [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]\n [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]"
  syntax:
    content: public abstract bool IsForwardingEnabled { get; }
    return:
      type: System.Boolean
      description: '`true` if this interface routes packets; otherwise `false`.'
  overload: System.Net.NetworkInformation.IPv4InterfaceProperties.IsForwardingEnabled*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.Mtu
  commentId: P:System.Net.NetworkInformation.IPv4InterfaceProperties.Mtu
  id: Mtu
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  langs:
  - csharp
  name: Mtu
  nameWithType: IPv4InterfaceProperties.Mtu
  fullName: IPv4InterfaceProperties.Mtu
  type: Property
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Gets the maximum transmission unit (MTU) for this network interface.
  remarks: The MTU of a network interface is the largest packet that can be transmitted. It is measured in octets (8-bit bytes).
  example:
  - "The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.  \n  \n [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]\n [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]\n [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]"
  syntax:
    content: public abstract int Mtu { get; }
    return:
      type: System.Int32
      description: An <xref href="System.Int64"></xref> value that specifies the MTU.
  overload: System.Net.NetworkInformation.IPv4InterfaceProperties.Mtu*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.UsesWins
  commentId: P:System.Net.NetworkInformation.IPv4InterfaceProperties.UsesWins
  id: UsesWins
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  langs:
  - csharp
  name: UsesWins
  nameWithType: IPv4InterfaceProperties.UsesWins
  fullName: IPv4InterfaceProperties.UsesWins
  type: Property
  assemblies:
  - System.Net.NetworkInformation
  - System
  - netstandard
  namespace: System.Net.NetworkInformation
  summary: Gets a <xref href="System.Boolean"></xref> value that indicates whether an interface uses Windows Internet Name Service (WINS).
  remarks: WINS provides a distributed database for registering and querying dynamic NetBIOS names to IPv4 address mappings.
  example:
  - "The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.  \n  \n [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]\n [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]\n [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]"
  syntax:
    content: public abstract bool UsesWins { get; }
    return:
      type: System.Boolean
      description: '`true` if the interface uses WINS; otherwise, `false`.'
  overload: System.Net.NetworkInformation.IPv4InterfaceProperties.UsesWins*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml
  ms.author: bobdel
  manager: markl
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.#ctor
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  isExternal: false
  name: IPv4InterfaceProperties()
  nameWithType: IPv4InterfaceProperties.IPv4InterfaceProperties()
  fullName: IPv4InterfaceProperties.IPv4InterfaceProperties()
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.Index
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  isExternal: false
  name: Index
  nameWithType: IPv4InterfaceProperties.Index
  fullName: IPv4InterfaceProperties.Index
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  isExternal: false
  name: IsAutomaticPrivateAddressingActive
  nameWithType: IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive
  fullName: IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  isExternal: false
  name: IsAutomaticPrivateAddressingEnabled
  nameWithType: IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled
  fullName: IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsDhcpEnabled
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  isExternal: false
  name: IsDhcpEnabled
  nameWithType: IPv4InterfaceProperties.IsDhcpEnabled
  fullName: IPv4InterfaceProperties.IsDhcpEnabled
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsForwardingEnabled
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  isExternal: false
  name: IsForwardingEnabled
  nameWithType: IPv4InterfaceProperties.IsForwardingEnabled
  fullName: IPv4InterfaceProperties.IsForwardingEnabled
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.Mtu
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  isExternal: false
  name: Mtu
  nameWithType: IPv4InterfaceProperties.Mtu
  fullName: IPv4InterfaceProperties.Mtu
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.UsesWins
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  isExternal: false
  name: UsesWins
  nameWithType: IPv4InterfaceProperties.UsesWins
  fullName: IPv4InterfaceProperties.UsesWins
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.#ctor*
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  isExternal: false
  name: IPv4InterfaceProperties
  nameWithType: IPv4InterfaceProperties.IPv4InterfaceProperties
  fullName: IPv4InterfaceProperties.IPv4InterfaceProperties
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.Index*
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  isExternal: false
  name: Index
  nameWithType: IPv4InterfaceProperties.Index
  fullName: IPv4InterfaceProperties.Index
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive*
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  isExternal: false
  name: IsAutomaticPrivateAddressingActive
  nameWithType: IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive
  fullName: IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled*
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  isExternal: false
  name: IsAutomaticPrivateAddressingEnabled
  nameWithType: IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled
  fullName: IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsDhcpEnabled*
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  isExternal: false
  name: IsDhcpEnabled
  nameWithType: IPv4InterfaceProperties.IsDhcpEnabled
  fullName: IPv4InterfaceProperties.IsDhcpEnabled
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsForwardingEnabled*
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  isExternal: false
  name: IsForwardingEnabled
  nameWithType: IPv4InterfaceProperties.IsForwardingEnabled
  fullName: IPv4InterfaceProperties.IsForwardingEnabled
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.Mtu*
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  isExternal: false
  name: Mtu
  nameWithType: IPv4InterfaceProperties.Mtu
  fullName: IPv4InterfaceProperties.Mtu
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.UsesWins*
  parent: System.Net.NetworkInformation.IPv4InterfaceProperties
  isExternal: false
  name: UsesWins
  nameWithType: IPv4InterfaceProperties.UsesWins
  fullName: IPv4InterfaceProperties.UsesWins
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
