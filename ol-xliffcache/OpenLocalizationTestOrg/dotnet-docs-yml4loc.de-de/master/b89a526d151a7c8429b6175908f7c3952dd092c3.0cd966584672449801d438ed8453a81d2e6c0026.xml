{"nodes":[{"content":"Provides the base class for a generic read-only collection.","nodes":[{"pos":[0,59],"content":"Provides the base class for a generic read-only collection.","nodes":[{"content":"Provides the base class for a generic read-only collection.","pos":[0,59]}]}],"pos":[3267,3327],"yaml":true},{"content":"An instance of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> generic class is always read-only.  A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.  See <xref:System.Collections.ObjectModel.Collection%601> for a modifiable version of this class.","nodes":[{"pos":[0,432],"content":"An instance of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> generic class is always read-only.  A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.  See <xref:System.Collections.ObjectModel.Collection%601> for a modifiable version of this class.","nodes":[{"content":"An instance of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> generic class is always read-only.  A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.  See <xref:System.Collections.ObjectModel.Collection%601> for a modifiable version of this class.","pos":[0,432],"nodes":[{"content":"An instance of the <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> generic class is always read-only.","pos":[0,114],"source":"An instance of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> generic class is always read-only."},{"content":"A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.","pos":[116,334]},{"content":"See <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> for a modifiable version of this class.","pos":[336,432],"source":"  See <xref:System.Collections.ObjectModel.Collection%601> for a modifiable version of this class."}]}]}],"pos":[3338,3771],"yaml":true,"extradata":"MT"},{"content":"The type of elements in the collection.","nodes":[{"pos":[0,39],"content":"The type of elements in the collection.","nodes":[{"content":"The type of elements in the collection.","pos":[0,39]}]}],"pos":[5903,5943],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> class that is a read-only wrapper around the specified list.","nodes":[{"pos":[0,167],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph> class that is a read-only wrapper around the specified list.","source":"Initializes a new instance of the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> class that is a read-only wrapper around the specified list."}],"pos":[35610,35778],"yaml":true},{"content":"To prevent any modifications to `list`, expose `list` only through this wrapper.  \n  \n A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.  \n  \n This constructor is an O(1) operation.","nodes":[{"pos":[0,80],"content":"To prevent any modifications to <ph id=\"ph1\">`list`</ph>, expose <ph id=\"ph2\">`list`</ph> only through this wrapper.","source":"To prevent any modifications to `list`, expose `list` only through this wrapper."},{"pos":[87,305],"content":"A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.","nodes":[{"content":"A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.","pos":[0,218]}]},{"pos":[312,350],"content":"This constructor is an O(1) operation.","nodes":[{"content":"This constructor is an O(1) operation.","pos":[0,38]}]}],"pos":[35789,36146],"yaml":true,"extradata":"MT"},{"content":"The list to wrap.","nodes":[{"pos":[0,17],"content":"The list to wrap.","nodes":[{"content":"The list to wrap.","pos":[0,17]}]}],"pos":[38108,38126],"yaml":true},{"content":"<code>list</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;list&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>list</code> is `null`."}],"pos":[38313,38342],"yaml":true},{"content":"Determines whether an element is in the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>.","nodes":[{"pos":[0,113],"content":"Determines whether an element is in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"Determines whether an element is in the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>."}],"pos":[39932,40046],"yaml":true},{"content":"This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=fullName>.  \n  \n This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>.","nodes":[{"pos":[0,159],"content":"This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=fullName>.","nodes":[{"content":"This method determines equality using the default equality comparer <ph id=\"ph1\">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=fullName&gt;</ph>.","pos":[0,159],"source":"This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=fullName>."}]},{"pos":[166,334],"content":"This method performs a linear search; therefore, this method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>.","source":"This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>."}],"pos":[40057,40396],"yaml":true,"extradata":"MT"},{"content":"The object to locate in the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>. The value can be `null` for reference types.","nodes":[{"pos":[0,146],"content":"The object to locate in the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>. The value can be `null` for reference types.","nodes":[{"content":"The object to locate in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph>.","pos":[0,101],"source":"The object to locate in the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>."},{"content":"The value can be <ph id=\"ph1\">`null`</ph> for reference types.","pos":[102,146],"source":" The value can be `null` for reference types."}]}],"pos":[42226,42373],"yaml":true},{"content":"`true` if <code>value</code> is found in the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,138],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is found in the <ph id=\"ph3\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>value</code> is found in the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>; otherwise, `false`."}],"pos":[42431,42572],"yaml":true},{"content":"Copies the entire <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> to a compatible one-dimensional <xref href=\"System.Array\"></xref>, starting at the specified index of the target array.","nodes":[{"pos":[0,210],"content":"Copies the entire <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph> to a compatible one-dimensional <ph id=\"ph2\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph>, starting at the specified index of the target array.","source":"Copies the entire <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> to a compatible one-dimensional <xref href=\"System.Array\"></xref>, starting at the specified index of the target array."}],"pos":[44313,44524],"yaml":true},{"content":"This method uses <xref:System.Array.Copy%2A?displayProperty=fullName> to copy the elements.  \n  \n The elements are copied to the <xref:System.Array> in the same order that the enumerator iterates through the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.  \n  \n This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>.","nodes":[{"pos":[0,91],"content":"This method uses <xref:System.Array.Copy%2A?displayProperty=fullName> to copy the elements.","nodes":[{"content":"This method uses <ph id=\"ph1\">&lt;xref:System.Array.Copy%2A?displayProperty=fullName&gt;</ph> to copy the elements.","pos":[0,91],"source":"This method uses <xref:System.Array.Copy%2A?displayProperty=fullName> to copy the elements."}]},{"pos":[98,269],"content":"The elements are copied to the <xref:System.Array> in the same order that the enumerator iterates through the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.","nodes":[{"content":"The elements are copied to the <ph id=\"ph1\">&lt;xref:System.Array&gt;</ph> in the same order that the enumerator iterates through the <ph id=\"ph2\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph>.","pos":[0,171],"source":"The elements are copied to the <xref:System.Array> in the same order that the enumerator iterates through the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>."}]},{"pos":[276,395],"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>.","source":"This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>."}],"pos":[44535,44937],"yaml":true,"extradata":"MT"},{"content":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>. The <xref href=\"System.Array\"></xref> must have zero-based indexing.","nodes":[{"pos":[0,248],"content":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>. The <xref href=\"System.Array\"></xref> must have zero-based indexing.","nodes":[{"content":"The one-dimensional <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> that is the destination of the elements copied from <ph id=\"ph2\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph>.","pos":[0,179],"source":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> must have zero-based indexing.","pos":[180,248],"source":" The <xref href=\"System.Array\"></xref> must have zero-based indexing."}]}],"pos":[46780,47029],"yaml":true},{"content":"The zero-based index in <code>array</code> at which copying begins.","nodes":[{"pos":[0,67],"content":"The zero-based index in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which copying begins.","source":"The zero-based index in <code>array</code> at which copying begins."}],"pos":[47089,47157],"yaml":true},{"content":"<code>array</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>array</code> is `null`."}],"pos":[47345,47375],"yaml":true},{"content":"<code>index</code> is less than zero.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."}],"pos":[47489,47527],"yaml":true},{"content":"The number of elements in the source <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>.","nodes":[{"pos":[0,219],"content":"The number of elements in the source <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph> is greater than the available space from <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> to the end of the destination <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">array</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The number of elements in the source <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>."}],"pos":[47621,47841],"yaml":true},{"content":"Gets the number of elements contained in the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> instance.","nodes":[{"pos":[0,127],"content":"Gets the number of elements contained in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph> instance.","source":"Gets the number of elements contained in the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> instance."}],"pos":[49394,49522],"yaml":true},{"content":"Retrieving the value of this property is an O(1) operation.","nodes":[{"pos":[0,59],"content":"Retrieving the value of this property is an O(1) operation.","nodes":[{"content":"Retrieving the value of this property is an O(1) operation.","pos":[0,59]}]}],"pos":[49533,49593],"yaml":true,"extradata":"MT"},{"content":"The number of elements contained in the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> instance.","nodes":[{"pos":[0,122],"content":"The number of elements contained in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph> instance.","source":"The number of elements contained in the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> instance."}],"pos":[51408,51531],"yaml":true},{"content":"Returns an enumerator that iterates through the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>.","nodes":[{"pos":[0,121],"content":"Returns an enumerator that iterates through the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"Returns an enumerator that iterates through the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>."}],"pos":[53224,53346],"yaml":true},{"content":"The `foreach` statement of the C# language (`for each` in Visual C++, `For Each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.  \n  \n Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  \n  \n Initially, the enumerator is positioned before the first element in the collection. At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.  \n  \n <xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.  \n  \n If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined. You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.  \n  \n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.  \n  \n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  \n  \n Default implementations of collections in <xref:System.Collections.Generic?displayProperty=fullName> are not synchronized.  \n  \n This method is an O(1) operation.","nodes":[{"pos":[0,231],"content":"The `foreach` statement of the C# language (`for each` in Visual C++, `For Each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.","nodes":[{"content":"The <ph id=\"ph1\">`foreach`</ph> statement of the C# language (<ph id=\"ph2\">`for each`</ph> in Visual C++, <ph id=\"ph3\">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.","pos":[0,138],"source":"The `foreach` statement of the C# language (`for each` in Visual C++, `For Each` in Visual Basic) hides the complexity of the enumerators."},{"content":"Therefore, using <ph id=\"ph1\">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.","pos":[140,231],"source":"  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator."}]},{"pos":[238,358],"content":"Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.","nodes":[{"content":"Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.","pos":[0,120]}]},{"pos":[365,771],"content":"Initially, the enumerator is positioned before the first element in the collection. At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.","nodes":[{"content":"Initially, the enumerator is positioned before the first element in the collection. At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.","pos":[0,406],"nodes":[{"content":"Initially, the enumerator is positioned before the first element in the collection.","pos":[0,83]},{"content":"At this position, <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> is undefined.","pos":[84,176],"source":" At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined."},{"content":"Therefore, you must call <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>.","pos":[177,406],"source":" Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>."}]}]},{"pos":[778,1066],"content":"<xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.","nodes":[{"content":"<xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.","pos":[0,288],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> returns the same object until <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> is called.","pos":[0,151],"source":"<xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called."},{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the next element.","pos":[152,288],"source":" <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element."}]}]},{"pos":[1073,1768],"content":"If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined. You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id=\"ph3\">`false`</ph>.","pos":[0,227],"source":"If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`."},{"content":"When the enumerator is at this position, subsequent calls to <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id=\"ph2\">`false`</ph>.","pos":[228,359],"source":" When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`."},{"content":"If the last call to <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id=\"ph2\">`false`</ph>, <ph id=\"ph3\">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> is undefined.","pos":[360,522],"source":" If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined."},{"content":"You cannot set <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator instance instead.","pos":[523,695],"source":" You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead."}]},{"pos":[1775,2010],"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","nodes":[{"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","pos":[0,235],"nodes":[{"content":"An enumerator remains valid as long as the collection remains unchanged.","pos":[0,72]},{"content":"If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","pos":[73,235]}]}]},{"pos":[2017,2407],"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","nodes":[{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","pos":[0,390],"nodes":[{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.","pos":[0,154]},{"content":"To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.","pos":[155,260]},{"content":"To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","pos":[262,390]}]}]},{"pos":[2414,2536],"content":"Default implementations of collections in <xref:System.Collections.Generic?displayProperty=fullName> are not synchronized.","nodes":[{"content":"Default implementations of collections in <ph id=\"ph1\">&lt;xref:System.Collections.Generic?displayProperty=fullName&gt;</ph> are not synchronized.","pos":[0,122],"source":"Default implementations of collections in <xref:System.Collections.Generic?displayProperty=fullName> are not synchronized."}]},{"pos":[2543,2576],"content":"This method is an O(1) operation.","nodes":[{"content":"This method is an O(1) operation.","pos":[0,33]}]}],"pos":[53357,55952],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref> for the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>.","nodes":[{"pos":[0,146],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerator`1\"&gt;&lt;/xref&gt;</ph> for the <ph id=\"ph2\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref> for the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>."}],"pos":[56859,57006],"yaml":true},{"content":"Searches for the specified object and returns the zero-based index of the first occurrence within the entire <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>.","nodes":[{"pos":[0,182],"content":"Searches for the specified object and returns the zero-based index of the first occurrence within the entire <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"Searches for the specified object and returns the zero-based index of the first occurrence within the entire <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>."}],"pos":[58686,58869],"yaml":true},{"content":"The <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> is searched forward starting at the first element and ending at the last element.  \n  \n This method determines equality using the default comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=fullName>.  \n  \n This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>.","nodes":[{"pos":[0,146],"content":"The <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> is searched forward starting at the first element and ending at the last element.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> is searched forward starting at the first element and ending at the last element.","pos":[0,146],"source":"The <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> is searched forward starting at the first element and ending at the last element."}]},{"pos":[153,303],"content":"This method determines equality using the default comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=fullName>.","nodes":[{"content":"This method determines equality using the default comparer <ph id=\"ph1\">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=fullName&gt;</ph>.","pos":[0,150],"source":"This method determines equality using the default comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=fullName>."}]},{"pos":[310,478],"content":"This method performs a linear search; therefore, this method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>.","source":"This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>."}],"pos":[58880,59365],"yaml":true,"extradata":"MT"},{"content":"The object to locate in the <xref href=\"System.Collections.Generic.List`1\"></xref>. The value can be `null` for reference types.","nodes":[{"pos":[0,128],"content":"The object to locate in the <xref href=\"System.Collections.Generic.List`1\"></xref>. The value can be `null` for reference types.","nodes":[{"content":"The object to locate in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.List`1\"&gt;&lt;/xref&gt;</ph>.","pos":[0,83],"source":"The object to locate in the <xref href=\"System.Collections.Generic.List`1\"></xref>."},{"content":"The value can be <ph id=\"ph1\">`null`</ph> for reference types.","pos":[84,128],"source":" The value can be `null` for reference types."}]}],"pos":[59483,59612],"yaml":true},{"content":"The zero-based index of the first occurrence of <code>item</code> within the entire <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>, if found; otherwise, -1.","nodes":[{"pos":[0,182],"content":"The zero-based index of the first occurrence of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">item</ph><ept id=\"p1\">&lt;/code&gt;</ept> within the entire <ph id=\"ph2\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph>, if found; otherwise, -1.","source":"The zero-based index of the first occurrence of <code>item</code> within the entire <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>, if found; otherwise, -1."}],"pos":[59668,59851],"yaml":true},{"content":"Gets the element at the specified index.","nodes":[{"pos":[0,40],"content":"Gets the element at the specified index.","nodes":[{"content":"Gets the element at the specified index.","pos":[0,40]}]}],"pos":[61551,61592],"yaml":true},{"content":"This property provides the ability to access a specific element in the collection by using the following C# syntax: `myCollection[index]` (`myCollection(index)` in Visual Basic).  \n  \n The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A> property. Visual Basic implements <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A> as a default property, which provides the same indexing functionality.  \n  \n Retrieving the value of this property is an O(1) operation.","nodes":[{"pos":[0,178],"content":"This property provides the ability to access a specific element in the collection by using the following C# syntax: <ph id=\"ph1\">`myCollection[index]`</ph> (<ph id=\"ph2\">`myCollection(index)`</ph> in Visual Basic).","source":"This property provides the ability to access a specific element in the collection by using the following C# syntax: `myCollection[index]` (`myCollection(index)` in Visual Basic)."},{"pos":[185,512],"content":"The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A> property. Visual Basic implements <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A> as a default property, which provides the same indexing functionality.","nodes":[{"content":"The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A> property. Visual Basic implements <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A> as a default property, which provides the same indexing functionality.","pos":[0,327],"nodes":[{"content":"The C# language uses the  keyword to define the indexers instead of implementing the <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A&gt;</ph> property.","pos":[0,163],"source":"The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A> property."},{"content":"Visual Basic implements <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.","pos":[164,327],"source":" Visual Basic implements <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A> as a default property, which provides the same indexing functionality."}]}]},{"pos":[519,578],"content":"Retrieving the value of this property is an O(1) operation.","nodes":[{"content":"Retrieving the value of this property is an O(1) operation.","pos":[0,59]}]}],"pos":[61603,62188],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the element to get.","nodes":[{"pos":[0,43],"content":"The zero-based index of the element to get.","nodes":[{"content":"The zero-based index of the element to get.","pos":[0,43]}]}],"pos":[64031,64075],"yaml":true},{"content":"The element at the specified index.","nodes":[{"pos":[0,35],"content":"The element at the specified index.","nodes":[{"content":"The element at the specified index.","pos":[0,35]}]}],"pos":[64120,64156],"yaml":true},{"content":"<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1.Count\"></xref>.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."},{"pos":[44,48],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[55,181],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than <ph id=\"ph2\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1.Count\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is equal to or greater than <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1.Count\"></xref>."}],"pos":[64354,64544],"yaml":true},{"content":"Returns the <xref href=\"System.Collections.Generic.IList`1\"></xref> that the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> wraps.","nodes":[{"pos":[0,156],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IList`1\"&gt;&lt;/xref&gt;</ph> that the <ph id=\"ph2\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph> wraps.","source":"Returns the <xref href=\"System.Collections.Generic.IList`1\"></xref> that the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> wraps."}],"pos":[66097,66254],"yaml":true},{"content":"Retrieving the value of this property is an O(1) operation.","nodes":[{"pos":[0,59],"content":"Retrieving the value of this property is an O(1) operation.","nodes":[{"content":"Retrieving the value of this property is an O(1) operation.","pos":[0,59]}]}],"pos":[66265,66325],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Collections.Generic.IList`1\"></xref> that the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> wraps.","nodes":[{"pos":[0,148],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IList`1\"&gt;&lt;/xref&gt;</ph> that the <ph id=\"ph2\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph> wraps.","source":"The <xref href=\"System.Collections.Generic.IList`1\"></xref> that the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> wraps."}],"pos":[68197,68346],"yaml":true},{"content":"Adds an item to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,168],"content":"Adds an item to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"content":"Adds an item to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph>.","pos":[0,82],"source":"Adds an item to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>."},{"content":"This implementation always throws <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","pos":[84,168],"source":"  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>."}]}],"pos":[70179,70348],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.","nodes":[{"pos":[0,233],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.","pos":[0,233],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.","pos":[60,233],"source":" It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface."}]}]}],"pos":[70359,70593],"yaml":true,"extradata":"MT"},{"content":"The object to add to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.","nodes":[{"pos":[0,87],"content":"The object to add to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"The object to add to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>."}],"pos":[70716,70804],"yaml":true},{"content":"Always thrown.","nodes":[{"pos":[0,14],"content":"Always thrown.","nodes":[{"content":"Always thrown.","pos":[0,14]}]}],"pos":[71031,71046],"yaml":true},{"content":"Removes all items from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,175],"content":"Removes all items from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"content":"Removes all items from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph>.","pos":[0,89],"source":"Removes all items from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>."},{"content":"This implementation always throws <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","pos":[91,175],"source":"  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>."}]}],"pos":[72788,72964],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.","nodes":[{"pos":[0,233],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.","pos":[0,233],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.","pos":[60,233],"source":" It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface."}]}]}],"pos":[72975,73209],"yaml":true,"extradata":"MT"},{"content":"Always thrown.","nodes":[{"pos":[0,14],"content":"Always thrown.","nodes":[{"content":"Always thrown.","pos":[0,14]}]}],"pos":[73510,73525],"yaml":true},{"content":"Gets a value indicating whether the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is read-only.","nodes":[{"pos":[0,111],"content":"Gets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"Gets a value indicating whether the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is read-only."}],"pos":[75293,75405],"yaml":true},{"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.  \n  \n A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.  \n  \n Retrieving the value of this property is an O(1) operation.  \n  \n This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.","nodes":[{"pos":[0,129],"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.","nodes":[{"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.","pos":[0,129]}]},{"pos":[136,354],"content":"A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.","nodes":[{"content":"A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.","pos":[0,218]}]},{"pos":[361,420],"content":"Retrieving the value of this property is an O(1) operation.","nodes":[{"content":"Retrieving the value of this property is an O(1) operation.","pos":[0,59]}]},{"pos":[427,636],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.","pos":[0,209],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IDisposable&gt;</ph> interface.","pos":[60,209],"source":" It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface."}]}]}],"pos":[75416,76061],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is read-only; otherwise, `false`.  In the default implementation of <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>, this property always returns `true`.","nodes":[{"pos":[0,254],"content":"`true` if the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is read-only; otherwise, `false`.  In the default implementation of <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>, this property always returns `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> is read-only; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,109],"source":"`true` if the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is read-only; otherwise, `false`."},{"content":"In the default implementation of <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph>, this property always returns <ph id=\"ph2\">`true`</ph>.","pos":[111,254],"source":"  In the default implementation of <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>, this property always returns `true`."}]}],"pos":[76209,76466],"yaml":true},{"content":"Removes the first occurrence of a specific object from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,207],"content":"Removes the first occurrence of a specific object from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"content":"Removes the first occurrence of a specific object from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph>.","pos":[0,121],"source":"Removes the first occurrence of a specific object from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>."},{"content":"This implementation always throws <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","pos":[123,207],"source":"  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>."}]}],"pos":[78327,78535],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.","nodes":[{"pos":[0,233],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.","pos":[0,233],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.","pos":[60,233],"source":" It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface."}]}]}],"pos":[78546,78780],"yaml":true,"extradata":"MT"},{"content":"The object to remove from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.","nodes":[{"pos":[0,92],"content":"The object to remove from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"The object to remove from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>."}],"pos":[78906,78999],"yaml":true},{"content":"`true` if <code>value</code> was successfully removed from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,145],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> was successfully removed from the <ph id=\"ph3\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>value</code> was successfully removed from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>; otherwise, `false`."}],"pos":[79057,79205],"yaml":true},{"content":"Always thrown.","nodes":[{"pos":[0,14],"content":"Always thrown.","nodes":[{"content":"Always thrown.","pos":[0,14]}]}],"pos":[79435,79450],"yaml":true},{"content":"Inserts an item to the <xref href=\"System.Collections.Generic.IList`1\"></xref> at the specified index.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,188],"content":"Inserts an item to the <xref href=\"System.Collections.Generic.IList`1\"></xref> at the specified index.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"content":"Inserts an item to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IList`1\"&gt;&lt;/xref&gt;</ph> at the specified index.","pos":[0,102],"source":"Inserts an item to the <xref href=\"System.Collections.Generic.IList`1\"></xref> at the specified index."},{"content":"This implementation always throws <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","pos":[104,188],"source":"  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>."}]}],"pos":[81237,81426],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.IList%601> interface.","nodes":[{"pos":[0,227],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.IList%601> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.IList%601> interface.","pos":[0,227],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> interface.","pos":[60,227],"source":" It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.IList%601> interface."}]}]}],"pos":[81437,81665],"yaml":true,"extradata":"MT"},{"content":"The zero-based index at which <code>value</code> should be inserted.","nodes":[{"pos":[0,68],"content":"The zero-based index at which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> should be inserted.","source":"The zero-based index at which <code>value</code> should be inserted."}],"pos":[81807,81876],"yaml":true},{"content":"The object to insert into the <xref href=\"System.Collections.Generic.IList`1\"></xref>.","nodes":[{"pos":[0,86],"content":"The object to insert into the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IList`1\"&gt;&lt;/xref&gt;</ph>.","source":"The object to insert into the <xref href=\"System.Collections.Generic.IList`1\"></xref>."}],"pos":[81925,82012],"yaml":true},{"content":"Always thrown.","nodes":[{"pos":[0,14],"content":"Always thrown.","nodes":[{"content":"Always thrown.","pos":[0,14]}]}],"pos":[82236,82251],"yaml":true},{"content":"Gets the element at the specified index. An <xref href=\"System.NotSupportedException\"></xref> occurs if you try to set the item at the specified index.","nodes":[{"pos":[0,151],"content":"Gets the element at the specified index. An <xref href=\"System.NotSupportedException\"></xref> occurs if you try to set the item at the specified index.","nodes":[{"content":"Gets the element at the specified index.","pos":[0,40]},{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph> occurs if you try to set the item at the specified index.","pos":[41,151],"source":" An <xref href=\"System.NotSupportedException\"></xref> occurs if you try to set the item at the specified index."}]}],"pos":[84010,84162],"yaml":true},{"content":"Because the collection is read-only, you can only get this item at the specified index. An exception will occur if you try to set the item. This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.IList%601> interface.","nodes":[{"pos":[0,367],"content":"Because the collection is read-only, you can only get this item at the specified index. An exception will occur if you try to set the item. This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.IList%601> interface.","nodes":[{"content":"Because the collection is read-only, you can only get this item at the specified index. An exception will occur if you try to set the item. This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.IList%601> interface.","pos":[0,367],"nodes":[{"content":"Because the collection is read-only, you can only get this item at the specified index.","pos":[0,87]},{"content":"An exception will occur if you try to set the item.","pos":[88,139]},{"content":"This member is an explicit interface member implementation.","pos":[140,199]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> interface.","pos":[200,367],"source":" It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.IList%601> interface."}]}]}],"pos":[84173,84541],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the element to get.","nodes":[{"pos":[0,43],"content":"The zero-based index of the element to get.","nodes":[{"content":"The zero-based index of the element to get.","pos":[0,43]}]}],"pos":[84708,84752],"yaml":true},{"content":"The element at the specified index.","nodes":[{"pos":[0,35],"content":"The element at the specified index.","nodes":[{"content":"The element at the specified index.","pos":[0,35]}]}],"pos":[84797,84833],"yaml":true},{"content":"Always thrown if the property is set.","nodes":[{"pos":[0,37],"content":"Always thrown if the property is set.","nodes":[{"content":"Always thrown if the property is set.","pos":[0,37]}]}],"pos":[85055,85093],"yaml":true},{"content":"Removes the <xref href=\"System.Collections.Generic.IList`1\"></xref> item at the specified index.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,182],"content":"Removes the <xref href=\"System.Collections.Generic.IList`1\"></xref> item at the specified index.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"content":"Removes the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IList`1\"&gt;&lt;/xref&gt;</ph> item at the specified index.","pos":[0,96],"source":"Removes the <xref href=\"System.Collections.Generic.IList`1\"></xref> item at the specified index."},{"content":"This implementation always throws <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","pos":[98,182],"source":"  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>."}]}],"pos":[86837,87020],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.IList%601> interface.","nodes":[{"pos":[0,227],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.IList%601> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.IList%601> interface.","pos":[0,227],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> interface.","pos":[60,227],"source":" It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.IList%601> interface."}]}]}],"pos":[87031,87259],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the item to remove.","nodes":[{"pos":[0,43],"content":"The zero-based index of the item to remove.","nodes":[{"content":"The zero-based index of the item to remove.","pos":[0,43]}]}],"pos":[87394,87438],"yaml":true},{"content":"Always thrown.","nodes":[{"pos":[0,14],"content":"Always thrown.","nodes":[{"content":"Always thrown.","pos":[0,14]}]}],"pos":[87664,87679],"yaml":true},{"content":"Copies the elements of the <xref href=\"System.Collections.ICollection\"></xref> to an <xref href=\"System.Array\"></xref>, starting at a particular <xref href=\"System.Array\"></xref> index.","nodes":[{"pos":[0,185],"content":"Copies the elements of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> to an <ph id=\"ph2\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph>, starting at a particular <ph id=\"ph3\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> index.","source":"Copies the elements of the <xref href=\"System.Collections.ICollection\"></xref> to an <xref href=\"System.Array\"></xref>, starting at a particular <xref href=\"System.Array\"></xref> index."}],"pos":[89502,89688],"yaml":true},{"content":"> [!NOTE]\n>  If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the non-generic implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=fullName> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.  \n  \n This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>.  \n  \n This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.","nodes":[{"pos":[2,370],"content":"[!NOTE]\n If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the non-generic implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=fullName> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.","leadings":["","> "],"nodes":[{"content":"If the type of the source <ph id=\"ph1\">&lt;xref:System.Collections.ICollection&gt;</ph> cannot be cast automatically to the type of the destination <ph id=\"ph2\">`array`</ph>, the non-generic implementations of <ph id=\"ph3\">&lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=fullName&gt;</ph> throw <ph id=\"ph4\">&lt;xref:System.InvalidCastException&gt;</ph>, whereas the generic implementations throw <ph id=\"ph5\">&lt;xref:System.ArgumentException&gt;</ph>.","pos":[9,366],"source":" If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the non-generic implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=fullName> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>."}]},{"pos":[377,496],"content":"This method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>.","source":"This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>."},{"pos":[503,724],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.","pos":[0,221],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.ICollection&gt;</ph> interface.","pos":[60,221],"source":" It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface."}]}]}],"pos":[89699,90431],"yaml":true,"extradata":"MT"},{"content":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from <xref href=\"System.Collections.ICollection\"></xref>. The <xref href=\"System.Array\"></xref> must have zero-based indexing.","nodes":[{"pos":[0,227],"content":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from <xref href=\"System.Collections.ICollection\"></xref>. The <xref href=\"System.Array\"></xref> must have zero-based indexing.","nodes":[{"content":"The one-dimensional <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> that is the destination of the elements copied from <ph id=\"ph2\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>.","pos":[0,158],"source":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from <xref href=\"System.Collections.ICollection\"></xref>."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> must have zero-based indexing.","pos":[159,227],"source":" The <xref href=\"System.Array\"></xref> must have zero-based indexing."}]}],"pos":[90580,90808],"yaml":true},{"content":"The zero-based index in <code>array</code> at which copying begins.","nodes":[{"pos":[0,67],"content":"The zero-based index in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which copying begins.","source":"The zero-based index in <code>array</code> at which copying begins."}],"pos":[90868,90936],"yaml":true},{"content":"<code>array</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>array</code> is `null`."}],"pos":[91155,91185],"yaml":true},{"content":"<code>index</code> is less than zero.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."}],"pos":[91299,91337],"yaml":true},{"content":"<code>array</code> is multidimensional.  \n  \n -or-  \n  \n <code>array</code> does not have zero-based indexing.  \n  \n -or-  \n  \n The number of elements in the source <xref href=\"System.Collections.ICollection\"></xref> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>.  \n  \n -or-  \n  \n The type of the source <xref href=\"System.Collections.ICollection\"></xref> cannot be cast automatically to the type of the destination <code>array</code>.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.","source":"<code>array</code> is multidimensional."},{"pos":[46,50],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[57,110],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> does not have zero-based indexing.","source":"<code>array</code> does not have zero-based indexing."},{"pos":[117,121],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[128,326],"content":"The number of elements in the source <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> is greater than the available space from <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> to the end of the destination <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">array</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The number of elements in the source <xref href=\"System.Collections.ICollection\"></xref> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>."},{"pos":[333,337],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[344,498],"content":"The type of the source <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> cannot be cast automatically to the type of the destination <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The type of the source <xref href=\"System.Collections.ICollection\"></xref> cannot be cast automatically to the type of the destination <code>array</code>."}],"pos":[91431,91948],"yaml":true},{"content":"Gets a value indicating whether access to the <xref href=\"System.Collections.ICollection\"></xref> is synchronized (thread safe).","nodes":[{"pos":[0,128],"content":"Gets a value indicating whether access to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> is synchronized (thread safe).","source":"Gets a value indicating whether access to the <xref href=\"System.Collections.ICollection\"></xref> is synchronized (thread safe)."}],"pos":[93698,93827],"yaml":true},{"content":"Default implementations of collections in <xref:System.Collections.Generic?displayProperty=fullName> are not synchronized.  \n  \n Enumerating through a collection is intrinsically not a thread-safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  \n  \n <xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.  \n  \n Retrieving the value of this property is an O(1) operation.  \n  \n This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.","nodes":[{"pos":[0,122],"content":"Default implementations of collections in <xref:System.Collections.Generic?displayProperty=fullName> are not synchronized.","nodes":[{"content":"Default implementations of collections in <ph id=\"ph1\">&lt;xref:System.Collections.Generic?displayProperty=fullName&gt;</ph> are not synchronized.","pos":[0,122],"source":"Default implementations of collections in <xref:System.Collections.Generic?displayProperty=fullName> are not synchronized."}]},{"pos":[129,444],"content":"Enumerating through a collection is intrinsically not a thread-safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","nodes":[{"content":"Enumerating through a collection is intrinsically not a thread-safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","pos":[0,315],"nodes":[{"content":"Enumerating through a collection is intrinsically not a thread-safe procedure.","pos":[0,78]},{"content":"To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.","pos":[80,185]},{"content":"To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","pos":[187,315]}]}]},{"pos":[451,603],"content":"<xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> returns an object that can be used to synchronize access to the <ph id=\"ph2\">&lt;xref:System.Collections.ICollection&gt;</ph>.","pos":[0,152],"source":"<xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>."}]},{"pos":[610,669],"content":"Retrieving the value of this property is an O(1) operation.","nodes":[{"content":"Retrieving the value of this property is an O(1) operation.","pos":[0,59]}]},{"pos":[676,885],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.","pos":[0,209],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IDisposable&gt;</ph> interface.","pos":[60,209],"source":" It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface."}]}]}],"pos":[93838,94734],"yaml":true,"extradata":"MT"},{"content":"`true` if access to the <xref href=\"System.Collections.ICollection\"></xref> is synchronized (thread safe); otherwise, `false`.  In the default implementation of <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>, this property always returns `false`.","nodes":[{"pos":[0,272],"content":"`true` if access to the <xref href=\"System.Collections.ICollection\"></xref> is synchronized (thread safe); otherwise, `false`.  In the default implementation of <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>, this property always returns `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if access to the <ph id=\"ph2\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> is synchronized (thread safe); otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,126],"source":"`true` if access to the <xref href=\"System.Collections.ICollection\"></xref> is synchronized (thread safe); otherwise, `false`."},{"content":"In the default implementation of <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph>, this property always returns <ph id=\"ph2\">`false`</ph>.","pos":[128,272],"source":"  In the default implementation of <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>, this property always returns `false`."}]}],"pos":[94875,95150],"yaml":true},{"content":"Gets an object that can be used to synchronize access to the <xref href=\"System.Collections.ICollection\"></xref>.","nodes":[{"pos":[0,113],"content":"Gets an object that can be used to synchronize access to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>.","source":"Gets an object that can be used to synchronize access to the <xref href=\"System.Collections.ICollection\"></xref>."}],"pos":[96955,97069],"yaml":true},{"content":"Default implementations of collections in <xref:System.Collections.Generic?displayProperty=fullName> are not synchronized.  \n  \n Enumerating through a collection is intrinsically not a thread-safe procedure. To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  \n  \n <xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>. Synchronization is effective only if all threads lock this object before accessing the collection. The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, Visual C++, and Visual Basic.  \n  \n```csharp  \nICollection ic = ...;  \nlock (ic.SyncRoot) {  \n   // Access the collection.  \n}  \n```  \n  \n```vb  \nDim ic As ICollection = ...  \nSyncLock ic.SyncRoot  \n   ' Access the collection.  \nEnd SyncLock  \n```  \n  \n```cpp#  \nICollection^ ic = ...;  \ntry {  \n   Monitor::Enter(ic->SyncRoot);  \n   // Access the collection.  \n}  \nfinally {  \n   Monitor::Exit(ic->SyncRoot);  \n}  \n```  \n  \n Retrieving the value of this property is an O(1) operation.  \n  \n This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.","nodes":[{"pos":[0,122],"content":"Default implementations of collections in <xref:System.Collections.Generic?displayProperty=fullName> are not synchronized.","nodes":[{"content":"Default implementations of collections in <ph id=\"ph1\">&lt;xref:System.Collections.Generic?displayProperty=fullName&gt;</ph> are not synchronized.","pos":[0,122],"source":"Default implementations of collections in <xref:System.Collections.Generic?displayProperty=fullName> are not synchronized."}]},{"pos":[129,443],"content":"Enumerating through a collection is intrinsically not a thread-safe procedure. To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","nodes":[{"content":"Enumerating through a collection is intrinsically not a thread-safe procedure. To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","pos":[0,314],"nodes":[{"content":"Enumerating through a collection is intrinsically not a thread-safe procedure.","pos":[0,78]},{"content":"To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.","pos":[79,184]},{"content":"To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","pos":[186,314]}]}]},{"pos":[450,838],"content":"<xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>. Synchronization is effective only if all threads lock this object before accessing the collection. The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, Visual C++, and Visual Basic.","nodes":[{"content":"<xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>. Synchronization is effective only if all threads lock this object before accessing the collection. The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, Visual C++, and Visual Basic.","pos":[0,388],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> returns an object that can be used to synchronize access to the <ph id=\"ph2\">&lt;xref:System.Collections.ICollection&gt;</ph>.","pos":[0,152],"source":"<xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>."},{"content":"Synchronization is effective only if all threads lock this object before accessing the collection.","pos":[153,251]},{"content":"The following code shows the use of the <ph id=\"ph1\">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property for C#, Visual C++, and Visual Basic.","pos":[252,388],"source":" The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, Visual C++, and Visual Basic."}]}]},{"pos":[1235,1294],"content":"Retrieving the value of this property is an O(1) operation.","nodes":[{"content":"Retrieving the value of this property is an O(1) operation.","pos":[0,59]}]},{"pos":[1301,1510],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.","pos":[0,209],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IDisposable&gt;</ph> interface.","pos":[60,209],"source":" It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface."}]}]}],"pos":[97080,98626],"yaml":true,"extradata":"MT"},{"content":"An object that can be used to synchronize access to the <xref href=\"System.Collections.ICollection\"></xref>.  In the default implementation of <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>, this property always returns the current instance.","nodes":[{"pos":[0,267],"content":"An object that can be used to synchronize access to the <xref href=\"System.Collections.ICollection\"></xref>.  In the default implementation of <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>, this property always returns the current instance.","nodes":[{"content":"An object that can be used to synchronize access to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>.","pos":[0,108],"source":"An object that can be used to synchronize access to the <xref href=\"System.Collections.ICollection\"></xref>."},{"content":"In the default implementation of <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph>, this property always returns the current instance.","pos":[110,267],"source":"  In the default implementation of <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>, this property always returns the current instance."}]}],"pos":[98762,99030],"yaml":true},{"content":"Returns an enumerator that iterates through a collection.","nodes":[{"pos":[0,57],"content":"Returns an enumerator that iterates through a collection.","nodes":[{"content":"Returns an enumerator that iterates through a collection.","pos":[0,57]}]}],"pos":[100863,100921],"yaml":true},{"content":"The `foreach` statement of the C# language (`for each` in Visual C++, `For Each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.  \n  \n Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  \n  \n Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.  At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.  \n  \n <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.  \n  \n If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined. To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.  \n  \n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.  \n  \n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  \n  \n Default implementations of collections in <xref:System.Collections.Generic?displayProperty=fullName> are not synchronized.  \n  \n This method is an O(1) operation.  \n  \n This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IEnumerable> interface.","nodes":[{"pos":[0,231],"content":"The `foreach` statement of the C# language (`for each` in Visual C++, `For Each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.","nodes":[{"content":"The <ph id=\"ph1\">`foreach`</ph> statement of the C# language (<ph id=\"ph2\">`for each`</ph> in Visual C++, <ph id=\"ph3\">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.","pos":[0,138],"source":"The `foreach` statement of the C# language (`for each` in Visual C++, `For Each` in Visual Basic) hides the complexity of the enumerators."},{"content":"Therefore, using <ph id=\"ph1\">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.","pos":[140,231],"source":"  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator."}]},{"pos":[238,358],"content":"Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.","nodes":[{"content":"Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.","pos":[0,120]}]},{"pos":[365,845],"content":"Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.  At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.","nodes":[{"content":"Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.  At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.","pos":[0,480],"nodes":[{"content":"Initially, the enumerator is positioned before the first element in the collection.","pos":[0,83]},{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.","pos":[84,180],"source":" <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position."},{"content":"At this position, <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.","pos":[182,262],"source":"  At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined."},{"content":"Therefore, you must call <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.","pos":[263,480],"source":" Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>."}]}]},{"pos":[852,1173],"content":"<xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.","nodes":[{"content":"<xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.","pos":[0,321],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.","pos":[0,196],"source":"<xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called."},{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.","pos":[197,321],"source":" <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element."}]}]},{"pos":[1180,1915],"content":"If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined. To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id=\"ph3\">`false`</ph>.","pos":[0,227],"source":"If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`."},{"content":"When the enumerator is at this position, subsequent calls to <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id=\"ph2\">`false`</ph>.","pos":[228,359],"source":" When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`."},{"content":"If the last call to <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id=\"ph2\">`false`</ph>, <ph id=\"ph3\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.","pos":[360,510],"source":" If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined."},{"content":"To set <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id=\"ph3\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.","pos":[511,735],"source":" To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>."}]},{"pos":[1922,2157],"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","nodes":[{"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","pos":[0,235],"nodes":[{"content":"An enumerator remains valid as long as the collection remains unchanged.","pos":[0,72]},{"content":"If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","pos":[73,235]}]}]},{"pos":[2164,2555],"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","nodes":[{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","pos":[0,391],"nodes":[{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.","pos":[0,154]},{"content":"To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.","pos":[156,261]},{"content":"To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","pos":[263,391]}]}]},{"pos":[2562,2684],"content":"Default implementations of collections in <xref:System.Collections.Generic?displayProperty=fullName> are not synchronized.","nodes":[{"content":"Default implementations of collections in <ph id=\"ph1\">&lt;xref:System.Collections.Generic?displayProperty=fullName&gt;</ph> are not synchronized.","pos":[0,122],"source":"Default implementations of collections in <xref:System.Collections.Generic?displayProperty=fullName> are not synchronized."}]},{"pos":[2691,2724],"content":"This method is an O(1) operation.","nodes":[{"content":"This method is an O(1) operation.","pos":[0,33]}]},{"pos":[2731,2952],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IEnumerable> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IEnumerable> interface.","pos":[0,221],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.","pos":[60,221],"source":" It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IEnumerable> interface."}]}]}],"pos":[100932,103905],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.IEnumerator\"></xref> that can be used to iterate through the collection.","nodes":[{"pos":[0,106],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph> that can be used to iterate through the collection.","source":"An <xref href=\"System.Collections.IEnumerator\"></xref> that can be used to iterate through the collection."}],"pos":[104082,104189],"yaml":true},{"content":"Adds an item to the <xref href=\"System.Collections.IList\"></xref>.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,152],"content":"Adds an item to the <xref href=\"System.Collections.IList\"></xref>.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"content":"Adds an item to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","pos":[0,66],"source":"Adds an item to the <xref href=\"System.Collections.IList\"></xref>."},{"content":"This implementation always throws <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","pos":[68,152],"source":"  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>."}]}],"pos":[106031,106184],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"pos":[0,215],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","pos":[0,215],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IList&gt;</ph> interface.","pos":[60,215],"source":" It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface."}]}]}],"pos":[106195,106411],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> to add to the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,99],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to add to the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Object\"></xref> to add to the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[106541,106641],"yaml":true},{"content":"The position into which the new element was inserted.","nodes":[{"pos":[0,53],"content":"The position into which the new element was inserted.","nodes":[{"content":"The position into which the new element was inserted.","pos":[0,53]}]}],"pos":[106697,106751],"yaml":true},{"content":"Always thrown.","nodes":[{"pos":[0,14],"content":"Always thrown.","nodes":[{"content":"Always thrown.","pos":[0,14]}]}],"pos":[106961,106976],"yaml":true},{"content":"Removes all items from the <xref href=\"System.Collections.IList\"></xref>.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,159],"content":"Removes all items from the <xref href=\"System.Collections.IList\"></xref>.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"content":"Removes all items from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","pos":[0,73],"source":"Removes all items from the <xref href=\"System.Collections.IList\"></xref>."},{"content":"This implementation always throws <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","pos":[75,159],"source":"  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>."}]}],"pos":[108640,108800],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"pos":[0,215],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","pos":[0,215],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IList&gt;</ph> interface.","pos":[60,215],"source":" It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface."}]}]}],"pos":[108811,109027],"yaml":true,"extradata":"MT"},{"content":"Always thrown.","nodes":[{"pos":[0,14],"content":"Always thrown.","nodes":[{"content":"Always thrown.","pos":[0,14]}]}],"pos":[109302,109317],"yaml":true},{"content":"Determines whether the <xref href=\"System.Collections.IList\"></xref> contains a specific value.","nodes":[{"pos":[0,95],"content":"Determines whether the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> contains a specific value.","source":"Determines whether the <xref href=\"System.Collections.IList\"></xref> contains a specific value."}],"pos":[111062,111158],"yaml":true},{"content":"This method determines equality using the default comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=fullName>.  \n  \n This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>.  \n  \n This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"pos":[0,150],"content":"This method determines equality using the default comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=fullName>.","nodes":[{"content":"This method determines equality using the default comparer <ph id=\"ph1\">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=fullName&gt;</ph>.","pos":[0,150],"source":"This method determines equality using the default comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=fullName>."}]},{"pos":[157,325],"content":"This method performs a linear search; therefore, this method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>.","source":"This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>."},{"pos":[332,547],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","pos":[0,215],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IList&gt;</ph> interface.","pos":[60,215],"source":" It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface."}]}]}],"pos":[111169,111723],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,102],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to locate in the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[111859,111962],"yaml":true},{"content":"`true` if the <xref href=\"System.Object\"></xref> is found in the <xref href=\"System.Collections.IList\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,131],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> is found in the <ph id=\"ph3\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <xref href=\"System.Object\"></xref> is found in the <xref href=\"System.Collections.IList\"></xref>; otherwise, `false`."}],"pos":[112020,112154],"yaml":true},{"content":"<code>value</code> is not of the type specified for the generic type parameter <code>T</code>.","nodes":[{"pos":[0,94],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is not of the type specified for the generic type parameter <ph id=\"ph2\">&lt;code&gt;T&lt;/code&gt;</ph>.","source":"<code>value</code> is not of the type specified for the generic type parameter <code>T</code>."}],"pos":[112361,112456],"yaml":true},{"content":"Determines the index of a specific item in the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,93],"content":"Determines the index of a specific item in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"Determines the index of a specific item in the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[114195,114289],"yaml":true},{"content":"This method determines equality using the default comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=fullName>.  \n  \n This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>.  \n  \n This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"pos":[0,150],"content":"This method determines equality using the default comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=fullName>.","nodes":[{"content":"This method determines equality using the default comparer <ph id=\"ph1\">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=fullName&gt;</ph>.","pos":[0,150],"source":"This method determines equality using the default comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=fullName>."}]},{"pos":[157,325],"content":"This method performs a linear search; therefore, this method is an O(<ph id=\"ph1\">`n`</ph>) operation, where <ph id=\"ph2\">`n`</ph> is <ph id=\"ph3\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A&gt;</ph>.","source":"This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>."},{"pos":[332,547],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","pos":[0,215],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IList&gt;</ph> interface.","pos":[60,215],"source":" It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface."}]}]}],"pos":[114300,114854],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,102],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to locate in the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[114988,115091],"yaml":true},{"content":"The index of <code>value</code> if found in the list; otherwise, -1.","nodes":[{"pos":[0,68],"content":"The index of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> if found in the list; otherwise, -1.","source":"The index of <code>value</code> if found in the list; otherwise, -1."}],"pos":[115147,115216],"yaml":true},{"content":"<code>value</code> is not of the type specified for the generic type parameter <code>T</code>.","nodes":[{"pos":[0,94],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is not of the type specified for the generic type parameter <ph id=\"ph2\">&lt;code&gt;T&lt;/code&gt;</ph>.","source":"<code>value</code> is not of the type specified for the generic type parameter <code>T</code>."}],"pos":[115422,115517],"yaml":true},{"content":"Inserts an item to the <xref href=\"System.Collections.IList\"></xref> at the specified index.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,178],"content":"Inserts an item to the <xref href=\"System.Collections.IList\"></xref> at the specified index.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"content":"Inserts an item to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> at the specified index.","pos":[0,92],"source":"Inserts an item to the <xref href=\"System.Collections.IList\"></xref> at the specified index."},{"content":"This implementation always throws <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","pos":[94,178],"source":"  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>."}]}],"pos":[117310,117489],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"pos":[0,215],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","pos":[0,215],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IList&gt;</ph> interface.","pos":[60,215],"source":" It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface."}]}]}],"pos":[117500,117716],"yaml":true,"extradata":"MT"},{"content":"The zero-based index at which <code>value</code> should be inserted.","nodes":[{"pos":[0,68],"content":"The zero-based index at which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> should be inserted.","source":"The zero-based index at which <code>value</code> should be inserted."}],"pos":[117860,117929],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> to insert into the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,104],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to insert into the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Object\"></xref> to insert into the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[117990,118095],"yaml":true},{"content":"Always thrown.","nodes":[{"pos":[0,14],"content":"Always thrown.","nodes":[{"content":"Always thrown.","pos":[0,14]}]}],"pos":[118308,118323],"yaml":true},{"content":"Gets a value indicating whether the <xref href=\"System.Collections.IList\"></xref> has a fixed size.","nodes":[{"pos":[0,99],"content":"Gets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> has a fixed size.","source":"Gets a value indicating whether the <xref href=\"System.Collections.IList\"></xref> has a fixed size."}],"pos":[120019,120119],"yaml":true},{"content":"A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.  \n  \n A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.  \n  \n Retrieving the value of this property is an O(1) operation.  \n  \n This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.","nodes":[{"pos":[0,167],"content":"A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.","nodes":[{"content":"A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.","pos":[0,167]}]},{"pos":[174,444],"content":"A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.","nodes":[{"content":"A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.","pos":[0,270]}]},{"pos":[451,510],"content":"Retrieving the value of this property is an O(1) operation.","nodes":[{"content":"Retrieving the value of this property is an O(1) operation.","pos":[0,59]}]},{"pos":[517,726],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.","pos":[0,209],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IDisposable&gt;</ph> interface.","pos":[60,209],"source":" It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface."}]}]}],"pos":[120130,120865],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Collections.IList\"></xref> has a fixed size; otherwise, `false`.  In the default implementation of <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>, this property always returns `true`.","nodes":[{"pos":[0,242],"content":"`true` if the <xref href=\"System.Collections.IList\"></xref> has a fixed size; otherwise, `false`.  In the default implementation of <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>, this property always returns `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> has a fixed size; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,97],"source":"`true` if the <xref href=\"System.Collections.IList\"></xref> has a fixed size; otherwise, `false`."},{"content":"In the default implementation of <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph>, this property always returns <ph id=\"ph2\">`true`</ph>.","pos":[99,242],"source":"  In the default implementation of <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>, this property always returns `true`."}]}],"pos":[120997,121242],"yaml":true},{"content":"Gets a value indicating whether the <xref href=\"System.Collections.IList\"></xref> is read-only.","nodes":[{"pos":[0,95],"content":"Gets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"Gets a value indicating whether the <xref href=\"System.Collections.IList\"></xref> is read-only."}],"pos":[123014,123110],"yaml":true},{"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.  \n  \n A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.  \n  \n Retrieving the value of this property is an O(1) operation.  \n  \n This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.","nodes":[{"pos":[0,129],"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.","nodes":[{"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.","pos":[0,129]}]},{"pos":[136,354],"content":"A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.","nodes":[{"content":"A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.","pos":[0,218]}]},{"pos":[361,420],"content":"Retrieving the value of this property is an O(1) operation.","nodes":[{"content":"Retrieving the value of this property is an O(1) operation.","pos":[0,59]}]},{"pos":[427,636],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.","pos":[0,209],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IDisposable&gt;</ph> interface.","pos":[60,209],"source":" It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface."}]}]}],"pos":[123121,123766],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Collections.IList\"></xref> is read-only; otherwise, `false`.  In the default implementation of <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>, this property always returns `true`.","nodes":[{"pos":[0,238],"content":"`true` if the <xref href=\"System.Collections.IList\"></xref> is read-only; otherwise, `false`.  In the default implementation of <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>, this property always returns `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> is read-only; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,93],"source":"`true` if the <xref href=\"System.Collections.IList\"></xref> is read-only; otherwise, `false`."},{"content":"In the default implementation of <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph>, this property always returns <ph id=\"ph2\">`true`</ph>.","pos":[95,238],"source":"  In the default implementation of <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>, this property always returns `true`."}]}],"pos":[123897,124138],"yaml":true},{"content":"Gets the element at the specified index. A <xref href=\"System.NotSupportedException\"></xref> occurs if you try to set the item at the specified index.","nodes":[{"pos":[0,150],"content":"Gets the element at the specified index. A <xref href=\"System.NotSupportedException\"></xref> occurs if you try to set the item at the specified index.","nodes":[{"content":"Gets the element at the specified index.","pos":[0,40]},{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph> occurs if you try to set the item at the specified index.","pos":[41,150],"source":" A <xref href=\"System.NotSupportedException\"></xref> occurs if you try to set the item at the specified index."}]}],"pos":[125936,126087],"yaml":true},{"content":"This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.  \n  \n The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23Item%2A> property. Visual Basic implements <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23Item%2A> as a default property, which provides the same indexing functionality.  \n  \n Retrieving the value of this property is an O(1) operation.  \n  \n This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.","nodes":[{"pos":[0,135],"content":"This property provides the ability to access a specific element in the collection by using the following syntax: <ph id=\"ph1\">`myCollection[index]`</ph>.","source":"This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`."},{"pos":[142,588],"content":"The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23Item%2A> property. Visual Basic implements <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23Item%2A> as a default property, which provides the same indexing functionality.","nodes":[{"content":"The C# language uses the <bpt id=\"p1\">[</bpt>this<ept id=\"p1\">](~/docs/csharp/language-reference/keywords/this.md)</ept> keyword to define the indexers instead of implementing the <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23Item%2A&gt;</ph> property.","pos":[0,251],"source":"The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23Item%2A> property."},{"content":"Visual Basic implements <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.","pos":[252,446],"source":" Visual Basic implements <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23Item%2A> as a default property, which provides the same indexing functionality."}]},{"pos":[595,654],"content":"Retrieving the value of this property is an O(1) operation.","nodes":[{"content":"Retrieving the value of this property is an O(1) operation.","pos":[0,59]}]},{"pos":[661,870],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.","pos":[0,209],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IDisposable&gt;</ph> interface.","pos":[60,209],"source":" It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface."}]}]}],"pos":[126098,126977],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the element to get.","nodes":[{"pos":[0,43],"content":"The zero-based index of the element to get.","nodes":[{"content":"The zero-based index of the element to get.","pos":[0,43]}]}],"pos":[127138,127182],"yaml":true},{"content":"The element at the specified index.","nodes":[{"pos":[0,35],"content":"The element at the specified index.","nodes":[{"content":"The element at the specified index.","pos":[0,35]}]}],"pos":[127239,127275],"yaml":true},{"content":"<code>index</code> is not a valid index in the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is not a valid index in the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is not a valid index in the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[127498,127592],"yaml":true},{"content":"Always thrown if the property is set.","nodes":[{"pos":[0,37],"content":"Always thrown if the property is set.","nodes":[{"content":"Always thrown if the property is set.","pos":[0,37]}]}],"pos":[127694,127732],"yaml":true},{"content":"Removes the first occurrence of a specific object from the <xref href=\"System.Collections.IList\"></xref>.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,191],"content":"Removes the first occurrence of a specific object from the <xref href=\"System.Collections.IList\"></xref>.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"content":"Removes the first occurrence of a specific object from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","pos":[0,105],"source":"Removes the first occurrence of a specific object from the <xref href=\"System.Collections.IList\"></xref>."},{"content":"This implementation always throws <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","pos":[107,191],"source":"  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>."}]}],"pos":[129428,129620],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"pos":[0,215],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","pos":[0,215],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IList&gt;</ph> interface.","pos":[60,215],"source":" It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface."}]}]}],"pos":[129631,129847],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> to remove from the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,104],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to remove from the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Object\"></xref> to remove from the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[129981,130086],"yaml":true},{"content":"Always thrown.","nodes":[{"pos":[0,14],"content":"Always thrown.","nodes":[{"content":"Always thrown.","pos":[0,14]}]}],"pos":[130299,130314],"yaml":true},{"content":"Removes the <xref href=\"System.Collections.IList\"></xref> item at the specified index.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,172],"content":"Removes the <xref href=\"System.Collections.IList\"></xref> item at the specified index.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"content":"Removes the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> item at the specified index.","pos":[0,86],"source":"Removes the <xref href=\"System.Collections.IList\"></xref> item at the specified index."},{"content":"This implementation always throws <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","pos":[88,172],"source":"  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>."}]}],"pos":[132053,132226],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"pos":[0,215],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","pos":[0,215],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IList&gt;</ph> interface.","pos":[60,215],"source":" It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface."}]}]}],"pos":[132237,132453],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the item to remove.","nodes":[{"pos":[0,43],"content":"The zero-based index of the item to remove.","nodes":[{"content":"The zero-based index of the item to remove.","pos":[0,43]}]}],"pos":[132585,132629],"yaml":true},{"content":"Always thrown.","nodes":[{"pos":[0,14],"content":"Always thrown.","nodes":[{"content":"Always thrown.","pos":[0,14]}]}],"pos":[132844,132859],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1\n  id: ReadOnlyCollection`1\n  children:\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IList{`0})\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.Count\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.Items\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)\n  langs:\n  - csharp\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n  type: Class\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Provides the base class for a generic read-only collection.\n  remarks: An instance of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> generic class is always read-only.  A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.  See <xref:System.Collections.ObjectModel.Collection%601> for a modifiable version of this class.\n  example:\n  - \"The following code example demonstrates several members of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> class. The code example creates a <xref:System.Collections.Generic.List%601> of strings and adds four dinosaur names to it. The code example then wraps the list in a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.  \\n  \\n After demonstrating the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A>, and <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A> members, the code example shows that the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> is just a wrapper for the original <xref:System.Collections.Generic.List%601> by adding a new item to the <xref:System.Collections.Generic.List%601> and displaying the contents of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.  \\n  \\n Finally, the code example creates an array larger than the collection and uses the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A> method to insert the elements of the collection into the middle of the array.  \\n  \\n [!code-cpp[generic.ReadOnlyCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/generic.ReadOnlyCollection/cpp/source.cpp#1)]\\n [!code-csharp[generic.ReadOnlyCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/generic.ReadOnlyCollection/cs/source.cs#1)]\\n [!code-vb[generic.ReadOnlyCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/generic.ReadOnlyCollection/vb/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public class ReadOnlyCollection<T> : System.Collections.Generic.ICollection<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IList<T>, System.Collections.Generic.IReadOnlyCollection<T>, System.Collections.Generic.IReadOnlyList<T>, System.Collections.IList\n    typeParameters:\n    - id: T\n      description: The type of elements in the collection.\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Collections.ObjectModel.ReadOnlyObservableCollection`1\n  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1\n  - System.Security.Cryptography.ManifestSignatureInformationCollection\n  - System.ServiceModel.Channels.AddressHeaderCollection\n  - System.Windows.Input.StylusButtonCollection\n  - System.Windows.Input.StylusDeviceCollection\n  implements:\n  - System.Collections.Generic.ICollection{T}\n  - System.Collections.Generic.IEnumerable{T}\n  - System.Collections.Generic.IList{T}\n  - System.Collections.Generic.IReadOnlyCollection{T}\n  - System.Collections.Generic.IReadOnlyList{T}\n  - System.Collections.IList\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  - System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  - System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  - System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  - System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  - System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IList{`0})\n  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IList{`0})\n  id: '#ctor(System.Collections.Generic.IList{`0})'\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: ReadOnlyCollection<T>(IList<T>)\n  nameWithType: ReadOnlyCollection<T>.ReadOnlyCollection<T>(IList<T>)\n  fullName: ReadOnlyCollection<T>.ReadOnlyCollection<T>(IList<T>)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Initializes a new instance of the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> class that is a read-only wrapper around the specified list.\n  remarks: \"To prevent any modifications to `list`, expose `list` only through this wrapper.  \\n  \\n A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.  \\n  \\n This constructor is an O(1) operation.\"\n  example:\n  - \"The following code example demonstrates this constructor and several members of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> class.  \\n  \\n The code example creates a <xref:System.Collections.Generic.List%601> of strings and adds four dinosaur names to it. The code example then wraps the list in a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> by passing it to the constructor.  \\n  \\n After demonstrating the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A>, and <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A> members, the code example shows that the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> is just a wrapper for the original <xref:System.Collections.Generic.List%601> by adding a new item to the <xref:System.Collections.Generic.List%601> and displaying the contents of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.  \\n  \\n Finally, the code example creates an array larger than the collection and uses the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A> method to insert the elements of the collection into the middle of the array.  \\n  \\n [!code-cpp[generic.ReadOnlyCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/generic.ReadOnlyCollection/cpp/source.cpp#1)]\\n [!code-csharp[generic.ReadOnlyCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/generic.ReadOnlyCollection/cs/source.cs#1)]\\n [!code-vb[generic.ReadOnlyCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/generic.ReadOnlyCollection/vb/source.vb#1)]\"\n  syntax:\n    content: public ReadOnlyCollection (System.Collections.Generic.IList<T> list);\n    parameters:\n    - id: list\n      type: System.Collections.Generic.IList`1\n      description: The list to wrap.\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>list</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)\n  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)\n  id: Contains(`0)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: Contains(T)\n  nameWithType: ReadOnlyCollection<T>.Contains(T)\n  fullName: ReadOnlyCollection<T>.Contains(T)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Determines whether an element is in the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>.\n  remarks: \"This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=fullName>.  \\n  \\n This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>.\"\n  example:\n  - \"The following code example demonstrates several members of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> class. The code example creates a <xref:System.Collections.Generic.List%601> of strings and adds four dinosaur names to it. The code example then wraps the list in a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.  \\n  \\n After demonstrating the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A>, and <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A> members, the code example shows that the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> is just a wrapper for the original <xref:System.Collections.Generic.List%601> by adding a new item to the <xref:System.Collections.Generic.List%601> and displaying the contents of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.  \\n  \\n Finally, the code example creates an array larger than the collection and uses the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A> method to insert the elements of the collection into the middle of the array.  \\n  \\n [!code-cpp[generic.ReadOnlyCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/generic.ReadOnlyCollection/cpp/source.cpp#1)]\\n [!code-csharp[generic.ReadOnlyCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/generic.ReadOnlyCollection/cs/source.cs#1)]\\n [!code-vb[generic.ReadOnlyCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/generic.ReadOnlyCollection/vb/source.vb#1)]\"\n  syntax:\n    content: public bool Contains (T value);\n    parameters:\n    - id: value\n      type: T\n      description: The object to locate in the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>. The value can be `null` for reference types.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>value</code> is found in the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>; otherwise, `false`.'\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.Contains*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)\n  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)\n  id: CopyTo(`0[],System.Int32)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: CopyTo(T[], Int32)\n  nameWithType: ReadOnlyCollection<T>.CopyTo(T[], Int32)\n  fullName: ReadOnlyCollection<T>.CopyTo(T[], Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Copies the entire <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> to a compatible one-dimensional <xref href=\"System.Array\"></xref>, starting at the specified index of the target array.\n  remarks: \"This method uses <xref:System.Array.Copy%2A?displayProperty=fullName> to copy the elements.  \\n  \\n The elements are copied to the <xref:System.Array> in the same order that the enumerator iterates through the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.  \\n  \\n This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>.\"\n  example:\n  - \"The following code example demonstrates several members of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> class. The code example creates a <xref:System.Collections.Generic.List%601> of strings and adds four dinosaur names to it. The code example then wraps the list in a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.  \\n  \\n After demonstrating the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A>, and <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A> members, the code example shows that the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> is just a wrapper for the original <xref:System.Collections.Generic.List%601> by adding a new item to the <xref:System.Collections.Generic.List%601> and displaying the contents of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.  \\n  \\n Finally, the code example creates an array larger than the collection and uses the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A> method to insert the elements of the collection into the middle of the array.  \\n  \\n [!code-cpp[generic.ReadOnlyCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/generic.ReadOnlyCollection/cpp/source.cpp#1)]\\n [!code-csharp[generic.ReadOnlyCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/generic.ReadOnlyCollection/cs/source.cs#1)]\\n [!code-vb[generic.ReadOnlyCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/generic.ReadOnlyCollection/vb/source.vb#1)]\"\n  syntax:\n    content: public void CopyTo (T[] array, int index);\n    parameters:\n    - id: array\n      type: T[]\n      description: The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>. The <xref href=\"System.Array\"></xref> must have zero-based indexing.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in <code>array</code> at which copying begins.\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>array</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The number of elements in the source <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Count\n  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count\n  id: Count\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: Count\n  nameWithType: ReadOnlyCollection<T>.Count\n  fullName: ReadOnlyCollection<T>.Count\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Gets the number of elements contained in the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> instance.\n  remarks: Retrieving the value of this property is an O(1) operation.\n  example:\n  - \"The following code example demonstrates several members of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> class. The code example creates a <xref:System.Collections.Generic.List%601> of strings and adds four dinosaur names to it. The code example then wraps the list in a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.  \\n  \\n After demonstrating the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A>, and <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A> members, the code example shows that the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> is just a wrapper for the original <xref:System.Collections.Generic.List%601> by adding a new item to the <xref:System.Collections.Generic.List%601> and displaying the contents of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.  \\n  \\n Finally, the code example creates an array larger than the collection and uses the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A> method to insert the elements of the collection into the middle of the array.  \\n  \\n [!code-cpp[generic.ReadOnlyCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/generic.ReadOnlyCollection/cpp/source.cpp#1)]\\n [!code-csharp[generic.ReadOnlyCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/generic.ReadOnlyCollection/cs/source.cs#1)]\\n [!code-vb[generic.ReadOnlyCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/generic.ReadOnlyCollection/vb/source.vb#1)]\"\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of elements contained in the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> instance.\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.Count*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator\n  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator\n  id: GetEnumerator\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: ReadOnlyCollection<T>.GetEnumerator()\n  fullName: ReadOnlyCollection<T>.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Returns an enumerator that iterates through the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>.\n  remarks: \"The `foreach` statement of the C# language (`for each` in Visual C++, `For Each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.  \\n  \\n Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  \\n  \\n Initially, the enumerator is positioned before the first element in the collection. At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.  \\n  \\n <xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.  \\n  \\n If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined. You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.  \\n  \\n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.  \\n  \\n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  \\n  \\n Default implementations of collections in <xref:System.Collections.Generic?displayProperty=fullName> are not synchronized.  \\n  \\n This method is an O(1) operation.\"\n  example:\n  - \"The following code example uses the enumerator to display the contents of a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> that wraps a <xref:System.Collections.Generic.List%601>. The enumerator is concealed by the `foreach` statement (`For Each` in Visual Basic, `for each` in C++).  \\n  \\n [!code-cpp[generic.ReadOnlyCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/generic.ReadOnlyCollection/cpp/source.cpp#1)]\\n [!code-csharp[generic.ReadOnlyCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/generic.ReadOnlyCollection/cs/source.cs#1)]\\n [!code-vb[generic.ReadOnlyCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/generic.ReadOnlyCollection/vb/source.vb#1)]\"\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<T> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator`1\n      description: An <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref> for the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>.\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)\n  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)\n  id: IndexOf(`0)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: IndexOf(T)\n  nameWithType: ReadOnlyCollection<T>.IndexOf(T)\n  fullName: ReadOnlyCollection<T>.IndexOf(T)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Searches for the specified object and returns the zero-based index of the first occurrence within the entire <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>.\n  remarks: \"The <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> is searched forward starting at the first element and ending at the last element.  \\n  \\n This method determines equality using the default comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=fullName>.  \\n  \\n This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>.\"\n  syntax:\n    content: public int IndexOf (T value);\n    parameters:\n    - id: value\n      type: T\n      description: The object to locate in the <xref href=\"System.Collections.Generic.List`1\"></xref>. The value can be `null` for reference types.\n    return:\n      type: System.Int32\n      description: The zero-based index of the first occurrence of <code>item</code> within the entire <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>, if found; otherwise, -1.\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)\n  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: ReadOnlyCollection<T>.Item(Int32)\n  fullName: ReadOnlyCollection<T>.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Gets the element at the specified index.\n  remarks: \"This property provides the ability to access a specific element in the collection by using the following C# syntax: `myCollection[index]` (`myCollection(index)` in Visual Basic).  \\n  \\n The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A> property. Visual Basic implements <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A> as a default property, which provides the same indexing functionality.  \\n  \\n Retrieving the value of this property is an O(1) operation.\"\n  example:\n  - \"The following code example demonstrates several members of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> class. The code example creates a <xref:System.Collections.Generic.List%601> of strings and adds four dinosaur names to it. The code example then wraps the list in a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.  \\n  \\n After demonstrating the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A>, and <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A> members, the code example shows that the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> is just a wrapper for the original <xref:System.Collections.Generic.List%601> by adding a new item to the <xref:System.Collections.Generic.List%601> and displaying the contents of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.  \\n  \\n Finally, the code example creates an array larger than the collection and uses the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A> method to insert the elements of the collection into the middle of the array.  \\n  \\n [!code-cpp[generic.ReadOnlyCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/generic.ReadOnlyCollection/cpp/source.cpp#1)]\\n [!code-csharp[generic.ReadOnlyCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/generic.ReadOnlyCollection/cs/source.cs#1)]\\n [!code-vb[generic.ReadOnlyCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/generic.ReadOnlyCollection/vb/source.vb#1)]\"\n  syntax:\n    content: public T this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the element to get.\n    return:\n      type: T\n      description: The element at the specified index.\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.Item*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>index</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>index</code> is equal to or greater than <xref href=\\\"System.Collections.ObjectModel.ReadOnlyCollection`1.Count\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Items\n  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.Items\n  id: Items\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: Items\n  nameWithType: ReadOnlyCollection<T>.Items\n  fullName: ReadOnlyCollection<T>.Items\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Returns the <xref href=\"System.Collections.Generic.IList`1\"></xref> that the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> wraps.\n  remarks: Retrieving the value of this property is an O(1) operation.\n  example:\n  - \"The following code example demonstrates several members of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> class. The code example creates a <xref:System.Collections.Generic.List%601> of strings and adds four dinosaur names to it. The code example then wraps the list in a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.  \\n  \\n After demonstrating the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Contains%2A>, <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Item%2A>, and <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23IndexOf%2A> members, the code example shows that the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> is just a wrapper for the original <xref:System.Collections.Generic.List%601> by adding a new item to the <xref:System.Collections.Generic.List%601> and displaying the contents of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.  \\n  \\n Finally, the code example creates an array larger than the collection and uses the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.CopyTo%2A> method to insert the elements of the collection into the middle of the array.  \\n  \\n [!code-cpp[generic.ReadOnlyCollection#1](~/samples/snippets/cpp/VS_Snippets_CLR/generic.ReadOnlyCollection/cpp/source.cpp#1)]\\n [!code-csharp[generic.ReadOnlyCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR/generic.ReadOnlyCollection/cs/source.cs#1)]\\n [!code-vb[generic.ReadOnlyCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/generic.ReadOnlyCollection/vb/source.vb#1)]\"\n  syntax:\n    content: protected System.Collections.Generic.IList<T> Items { get; }\n    return:\n      type: System.Collections.Generic.IList`1\n      description: The <xref href=\"System.Collections.Generic.IList`1\"></xref> that the <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> wraps.\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.Items*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)\n  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection<T>#Add(`0)\n  id: System#Collections#Generic#ICollection{T}#Add(`0)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: ICollection<T>.Add(T)\n  nameWithType: ReadOnlyCollection<T>.ICollection<T>.Add(T)\n  fullName: ReadOnlyCollection<T>.ICollection<T>.Add(T)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Adds an item to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.\n  syntax:\n    content: void ICollection<T>.Add (T value);\n    parameters:\n    - id: value\n      type: T\n      description: The object to add to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Always thrown.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear\n  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection<T>#Clear\n  id: System#Collections#Generic#ICollection{T}#Clear\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: ICollection<T>.Clear()\n  nameWithType: ReadOnlyCollection<T>.ICollection<T>.Clear()\n  fullName: ReadOnlyCollection<T>.ICollection<T>.Clear()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Removes all items from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.\n  syntax:\n    content: void ICollection<T>.Clear ();\n    parameters: []\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Always thrown.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection<T>#IsReadOnly\n  id: System#Collections#Generic#ICollection{T}#IsReadOnly\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: ICollection<T>.IsReadOnly\n  nameWithType: ReadOnlyCollection<T>.ICollection<T>.IsReadOnly\n  fullName: ReadOnlyCollection<T>.ICollection<T>.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Gets a value indicating whether the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is read-only.\n  remarks: \"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.  \\n  \\n A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.  \\n  \\n Retrieving the value of this property is an O(1) operation.  \\n  \\n This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.\"\n  syntax:\n    content: bool System.Collections.Generic.ICollection<T>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is read-only; otherwise, `false`.  In the default implementation of <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>, this property always returns `true`.'\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)\n  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection<T>#Remove(`0)\n  id: System#Collections#Generic#ICollection{T}#Remove(`0)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: ICollection<T>.Remove(T)\n  nameWithType: ReadOnlyCollection<T>.ICollection<T>.Remove(T)\n  fullName: ReadOnlyCollection<T>.ICollection<T>.Remove(T)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Removes the first occurrence of a specific object from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.\n  syntax:\n    content: bool ICollection<T>.Remove (T value);\n    parameters:\n    - id: value\n      type: T\n      description: The object to remove from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>value</code> was successfully removed from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>; otherwise, `false`.'\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Always thrown.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)\n  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList<T>#Insert(System.Int32,`0)\n  id: System#Collections#Generic#IList{T}#Insert(System.Int32,`0)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: IList<T>.Insert(Int32, T)\n  nameWithType: ReadOnlyCollection<T>.IList<T>.Insert(Int32, T)\n  fullName: ReadOnlyCollection<T>.IList<T>.Insert(Int32, T)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Inserts an item to the <xref href=\"System.Collections.Generic.IList`1\"></xref> at the specified index.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.IList%601> interface.\n  syntax:\n    content: void IList<T>.Insert (int index, T value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which <code>value</code> should be inserted.\n    - id: value\n      type: T\n      description: The object to insert into the <xref href=\"System.Collections.Generic.IList`1\"></xref>.\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Always thrown.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)\n  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList<T>#Item(System.Int32)\n  id: System#Collections#Generic#IList{T}#Item(System.Int32)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: IList<T>.Item(Int32)\n  nameWithType: ReadOnlyCollection<T>.IList<T>.Item(Int32)\n  fullName: ReadOnlyCollection<T>.IList<T>.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Gets the element at the specified index. An <xref href=\"System.NotSupportedException\"></xref> occurs if you try to set the item at the specified index.\n  remarks: Because the collection is read-only, you can only get this item at the specified index. An exception will occur if you try to set the item. This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.IList%601> interface.\n  syntax:\n    content: T System.Collections.Generic.IList<T>.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the element to get.\n    return:\n      type: T\n      description: The element at the specified index.\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Always thrown if the property is set.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)\n  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList<T>#RemoveAt(System.Int32)\n  id: System#Collections#Generic#IList{T}#RemoveAt(System.Int32)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: IList<T>.RemoveAt(Int32)\n  nameWithType: ReadOnlyCollection<T>.IList<T>.RemoveAt(Int32)\n  fullName: ReadOnlyCollection<T>.IList<T>.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Removes the <xref href=\"System.Collections.Generic.IList`1\"></xref> item at the specified index.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.Generic.IList%601> interface.\n  syntax:\n    content: void IList<T>.RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the item to remove.\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Always thrown.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: ReadOnlyCollection<T>.ICollection.CopyTo(Array, Int32)\n  fullName: ReadOnlyCollection<T>.ICollection.CopyTo(Array, Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Copies the elements of the <xref href=\"System.Collections.ICollection\"></xref> to an <xref href=\"System.Array\"></xref>, starting at a particular <xref href=\"System.Array\"></xref> index.\n  remarks: \"> [!NOTE]\\n>  If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the non-generic implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=fullName> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.  \\n  \\n This method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>.  \\n  \\n This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.\"\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from <xref href=\"System.Collections.ICollection\"></xref>. The <xref href=\"System.Array\"></xref> must have zero-based indexing.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in <code>array</code> at which copying begins.\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>array</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>array</code> is multidimensional.  \\n  \\n -or-  \\n  \\n <code>array</code> does not have zero-based indexing.  \\n  \\n -or-  \\n  \\n The number of elements in the source <xref href=\\\"System.Collections.ICollection\\\"></xref> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>.  \\n  \\n -or-  \\n  \\n The type of the source <xref href=\\\"System.Collections.ICollection\\\"></xref> cannot be cast automatically to the type of the destination <code>array</code>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized\n  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: ICollection.IsSynchronized\n  nameWithType: ReadOnlyCollection<T>.ICollection.IsSynchronized\n  fullName: ReadOnlyCollection<T>.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Gets a value indicating whether access to the <xref href=\"System.Collections.ICollection\"></xref> is synchronized (thread safe).\n  remarks: \"Default implementations of collections in <xref:System.Collections.Generic?displayProperty=fullName> are not synchronized.  \\n  \\n Enumerating through a collection is intrinsically not a thread-safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  \\n  \\n <xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.  \\n  \\n Retrieving the value of this property is an O(1) operation.  \\n  \\n This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.\"\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if access to the <xref href=\"System.Collections.ICollection\"></xref> is synchronized (thread safe); otherwise, `false`.  In the default implementation of <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>, this property always returns `false`.'\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot\n  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: ICollection.SyncRoot\n  nameWithType: ReadOnlyCollection<T>.ICollection.SyncRoot\n  fullName: ReadOnlyCollection<T>.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Gets an object that can be used to synchronize access to the <xref href=\"System.Collections.ICollection\"></xref>.\n  remarks: \"Default implementations of collections in <xref:System.Collections.Generic?displayProperty=fullName> are not synchronized.  \\n  \\n Enumerating through a collection is intrinsically not a thread-safe procedure. To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  \\n  \\n <xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>. Synchronization is effective only if all threads lock this object before accessing the collection. The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, Visual C++, and Visual Basic.  \\n  \\n```csharp  \\nICollection ic = ...;  \\nlock (ic.SyncRoot) {  \\n   // Access the collection.  \\n}  \\n```  \\n  \\n```vb  \\nDim ic As ICollection = ...  \\nSyncLock ic.SyncRoot  \\n   ' Access the collection.  \\nEnd SyncLock  \\n```  \\n  \\n```cpp#  \\nICollection^ ic = ...;  \\ntry {  \\n   Monitor::Enter(ic->SyncRoot);  \\n   // Access the collection.  \\n}  \\nfinally {  \\n   Monitor::Exit(ic->SyncRoot);  \\n}  \\n```  \\n  \\n Retrieving the value of this property is an O(1) operation.  \\n  \\n This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.\"\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: An object that can be used to synchronize access to the <xref href=\"System.Collections.ICollection\"></xref>.  In the default implementation of <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>, this property always returns the current instance.\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator\n  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: IEnumerable.GetEnumerator()\n  nameWithType: ReadOnlyCollection<T>.IEnumerable.GetEnumerator()\n  fullName: ReadOnlyCollection<T>.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Returns an enumerator that iterates through a collection.\n  remarks: \"The `foreach` statement of the C# language (`for each` in Visual C++, `For Each` in Visual Basic) hides the complexity of the enumerators.  Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.  \\n  \\n Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  \\n  \\n Initially, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.  At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.  \\n  \\n <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.  \\n  \\n If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined. To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.  \\n  \\n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.  \\n  \\n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  \\n  \\n Default implementations of collections in <xref:System.Collections.Generic?displayProperty=fullName> are not synchronized.  \\n  \\n This method is an O(1) operation.  \\n  \\n This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IEnumerable> interface.\"\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref href=\"System.Collections.IEnumerator\"></xref> that can be used to iterate through the collection.\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)\n  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: IList.Add(Object)\n  nameWithType: ReadOnlyCollection<T>.IList.Add(Object)\n  fullName: ReadOnlyCollection<T>.IList.Add(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Adds an item to the <xref href=\"System.Collections.IList\"></xref>.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to add to the <xref href=\"System.Collections.IList\"></xref>.\n    return:\n      type: System.Int32\n      description: The position into which the new element was inserted.\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Always thrown.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear\n  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear\n  id: System#Collections#IList#Clear\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: IList.Clear()\n  nameWithType: ReadOnlyCollection<T>.IList.Clear()\n  fullName: ReadOnlyCollection<T>.IList.Clear()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Removes all items from the <xref href=\"System.Collections.IList\"></xref>.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.\n  syntax:\n    content: void IList.Clear ();\n    parameters: []\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Always thrown.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)\n  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: IList.Contains(Object)\n  nameWithType: ReadOnlyCollection<T>.IList.Contains(Object)\n  fullName: ReadOnlyCollection<T>.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Determines whether the <xref href=\"System.Collections.IList\"></xref> contains a specific value.\n  remarks: \"This method determines equality using the default comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=fullName>.  \\n  \\n This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>.  \\n  \\n This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.\"\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"System.Collections.IList\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Object\"></xref> is found in the <xref href=\"System.Collections.IList\"></xref>; otherwise, `false`.'\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>value</code> is not of the type specified for the generic type parameter <code>T</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)\n  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: IList.IndexOf(Object)\n  nameWithType: ReadOnlyCollection<T>.IList.IndexOf(Object)\n  fullName: ReadOnlyCollection<T>.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Determines the index of a specific item in the <xref href=\"System.Collections.IList\"></xref>.\n  remarks: \"This method determines equality using the default comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=fullName>.  \\n  \\n This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.Count%2A>.  \\n  \\n This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.\"\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"System.Collections.IList\"></xref>.\n    return:\n      type: System.Int32\n      description: The index of <code>value</code> if found in the list; otherwise, -1.\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>value</code> is not of the type specified for the generic type parameter <code>T</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: IList.Insert(Int32, Object)\n  nameWithType: ReadOnlyCollection<T>.IList.Insert(Int32, Object)\n  fullName: ReadOnlyCollection<T>.IList.Insert(Int32, Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Inserts an item to the <xref href=\"System.Collections.IList\"></xref> at the specified index.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which <code>value</code> should be inserted.\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to insert into the <xref href=\"System.Collections.IList\"></xref>.\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Always thrown.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize\n  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: IList.IsFixedSize\n  nameWithType: ReadOnlyCollection<T>.IList.IsFixedSize\n  fullName: ReadOnlyCollection<T>.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Gets a value indicating whether the <xref href=\"System.Collections.IList\"></xref> has a fixed size.\n  remarks: \"A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.  \\n  \\n A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.  \\n  \\n Retrieving the value of this property is an O(1) operation.  \\n  \\n This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.\"\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Collections.IList\"></xref> has a fixed size; otherwise, `false`.  In the default implementation of <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>, this property always returns `true`.'\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly\n  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: IList.IsReadOnly\n  nameWithType: ReadOnlyCollection<T>.IList.IsReadOnly\n  fullName: ReadOnlyCollection<T>.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Gets a value indicating whether the <xref href=\"System.Collections.IList\"></xref> is read-only.\n  remarks: \"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.  \\n  \\n A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.  \\n  \\n Retrieving the value of this property is an O(1) operation.  \\n  \\n This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.\"\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Collections.IList\"></xref> is read-only; otherwise, `false`.  In the default implementation of <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref>, this property always returns `true`.'\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)\n  commentId: P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: IList.Item(Int32)\n  nameWithType: ReadOnlyCollection<T>.IList.Item(Int32)\n  fullName: ReadOnlyCollection<T>.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Gets the element at the specified index. A <xref href=\"System.NotSupportedException\"></xref> occurs if you try to set the item at the specified index.\n  remarks: \"This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.  \\n  \\n The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23Item%2A> property. Visual Basic implements <xref:System.Collections.ObjectModel.ReadOnlyCollection%601.System%23Collections%23IList%23Item%2A> as a default property, which provides the same indexing functionality.  \\n  \\n Retrieving the value of this property is an O(1) operation.  \\n  \\n This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.IDisposable> interface.\"\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the element to get.\n    return:\n      type: System.Object\n      description: The element at the specified index.\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is not a valid index in the <xref href=\"System.Collections.IList\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Always thrown if the property is set.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)\n  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: IList.Remove(Object)\n  nameWithType: ReadOnlyCollection<T>.IList.Remove(Object)\n  fullName: ReadOnlyCollection<T>.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Removes the first occurrence of a specific object from the <xref href=\"System.Collections.IList\"></xref>.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to remove from the <xref href=\"System.Collections.IList\"></xref>.\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Always thrown.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)\n  commentId: M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)\n  id: System#Collections#IList#RemoveAt(System.Int32)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: IList.RemoveAt(Int32)\n  nameWithType: ReadOnlyCollection<T>.IList.RemoveAt(Int32)\n  fullName: ReadOnlyCollection<T>.IList.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Collections.ObjectModel\n  summary: Removes the <xref href=\"System.Collections.IList\"></xref> item at the specified index.  This implementation always throws <xref href=\"System.NotSupportedException\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> instance is cast to an <xref:System.Collections.IList> interface.\n  syntax:\n    content: void IList.RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the item to remove.\n  overload: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Always thrown.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IList{`0})\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: ReadOnlyCollection<T>(IList<T>)\n  nameWithType: ReadOnlyCollection<T>.ReadOnlyCollection<T>(IList<T>)\n  fullName: ReadOnlyCollection<T>.ReadOnlyCollection<T>(IList<T>)\n- uid: System.Collections.Generic.IList`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<T>\n  nameWithType: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: Contains(T)\n  nameWithType: ReadOnlyCollection<T>.Contains(T)\n  fullName: ReadOnlyCollection<T>.Contains(T)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: CopyTo(T[], Int32)\n  nameWithType: ReadOnlyCollection<T>.CopyTo(T[], Int32)\n  fullName: ReadOnlyCollection<T>.CopyTo(T[], Int32)\n- uid: T[]\n  isExternal: true\n  name: T[]\n  nameWithType: T[]\n  fullName: T[]\n  spec.csharp:\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Count\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: Count\n  nameWithType: ReadOnlyCollection<T>.Count\n  fullName: ReadOnlyCollection<T>.Count\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: ReadOnlyCollection<T>.GetEnumerator()\n  fullName: ReadOnlyCollection<T>.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: IndexOf(T)\n  nameWithType: ReadOnlyCollection<T>.IndexOf(T)\n  fullName: ReadOnlyCollection<T>.IndexOf(T)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: ReadOnlyCollection<T>.Item(Int32)\n  fullName: ReadOnlyCollection<T>.Item(Int32)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Items\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: Items\n  nameWithType: ReadOnlyCollection<T>.Items\n  fullName: ReadOnlyCollection<T>.Items\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: ICollection<T>.Add(T)\n  nameWithType: ReadOnlyCollection<T>.ICollection<T>.Add(T)\n  fullName: ReadOnlyCollection<T>.ICollection<T>.Add(T)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: ICollection<T>.Clear()\n  nameWithType: ReadOnlyCollection<T>.ICollection<T>.Clear()\n  fullName: ReadOnlyCollection<T>.ICollection<T>.Clear()\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: ICollection<T>.IsReadOnly\n  nameWithType: ReadOnlyCollection<T>.ICollection<T>.IsReadOnly\n  fullName: ReadOnlyCollection<T>.ICollection<T>.IsReadOnly\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: ICollection<T>.Remove(T)\n  nameWithType: ReadOnlyCollection<T>.ICollection<T>.Remove(T)\n  fullName: ReadOnlyCollection<T>.ICollection<T>.Remove(T)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: IList<T>.Insert(Int32, T)\n  nameWithType: ReadOnlyCollection<T>.IList<T>.Insert(Int32, T)\n  fullName: ReadOnlyCollection<T>.IList<T>.Insert(Int32, T)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: IList<T>.Item(Int32)\n  nameWithType: ReadOnlyCollection<T>.IList<T>.Item(Int32)\n  fullName: ReadOnlyCollection<T>.IList<T>.Item(Int32)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: IList<T>.RemoveAt(Int32)\n  nameWithType: ReadOnlyCollection<T>.IList<T>.RemoveAt(Int32)\n  fullName: ReadOnlyCollection<T>.IList<T>.RemoveAt(Int32)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: ReadOnlyCollection<T>.ICollection.CopyTo(Array, Int32)\n  fullName: ReadOnlyCollection<T>.ICollection.CopyTo(Array, Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: ICollection.IsSynchronized\n  nameWithType: ReadOnlyCollection<T>.ICollection.IsSynchronized\n  fullName: ReadOnlyCollection<T>.ICollection.IsSynchronized\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: ICollection.SyncRoot\n  nameWithType: ReadOnlyCollection<T>.ICollection.SyncRoot\n  fullName: ReadOnlyCollection<T>.ICollection.SyncRoot\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  nameWithType: ReadOnlyCollection<T>.IEnumerable.GetEnumerator()\n  fullName: ReadOnlyCollection<T>.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: IList.Add(Object)\n  nameWithType: ReadOnlyCollection<T>.IList.Add(Object)\n  fullName: ReadOnlyCollection<T>.IList.Add(Object)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: IList.Clear()\n  nameWithType: ReadOnlyCollection<T>.IList.Clear()\n  fullName: ReadOnlyCollection<T>.IList.Clear()\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: IList.Contains(Object)\n  nameWithType: ReadOnlyCollection<T>.IList.Contains(Object)\n  fullName: ReadOnlyCollection<T>.IList.Contains(Object)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: IList.IndexOf(Object)\n  nameWithType: ReadOnlyCollection<T>.IList.IndexOf(Object)\n  fullName: ReadOnlyCollection<T>.IList.IndexOf(Object)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: IList.Insert(Int32, Object)\n  nameWithType: ReadOnlyCollection<T>.IList.Insert(Int32, Object)\n  fullName: ReadOnlyCollection<T>.IList.Insert(Int32, Object)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: IList.IsFixedSize\n  nameWithType: ReadOnlyCollection<T>.IList.IsFixedSize\n  fullName: ReadOnlyCollection<T>.IList.IsFixedSize\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: IList.IsReadOnly\n  nameWithType: ReadOnlyCollection<T>.IList.IsReadOnly\n  fullName: ReadOnlyCollection<T>.IList.IsReadOnly\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: IList.Item(Int32)\n  nameWithType: ReadOnlyCollection<T>.IList.Item(Int32)\n  fullName: ReadOnlyCollection<T>.IList.Item(Int32)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: IList.Remove(Object)\n  nameWithType: ReadOnlyCollection<T>.IList.Remove(Object)\n  fullName: ReadOnlyCollection<T>.IList.Remove(Object)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: IList.RemoveAt(Int32)\n  nameWithType: ReadOnlyCollection<T>.IList.RemoveAt(Int32)\n  fullName: ReadOnlyCollection<T>.IList.RemoveAt(Int32)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>.ReadOnlyCollection<T>\n  fullName: ReadOnlyCollection<T>.ReadOnlyCollection<T>\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Contains*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: Contains\n  nameWithType: ReadOnlyCollection<T>.Contains\n  fullName: ReadOnlyCollection<T>.Contains\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: CopyTo\n  nameWithType: ReadOnlyCollection<T>.CopyTo\n  fullName: ReadOnlyCollection<T>.CopyTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Count*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: Count\n  nameWithType: ReadOnlyCollection<T>.Count\n  fullName: ReadOnlyCollection<T>.Count\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: ReadOnlyCollection<T>.GetEnumerator\n  fullName: ReadOnlyCollection<T>.GetEnumerator\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: IndexOf\n  nameWithType: ReadOnlyCollection<T>.IndexOf\n  fullName: ReadOnlyCollection<T>.IndexOf\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Item*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: Item\n  nameWithType: ReadOnlyCollection<T>.Item\n  fullName: ReadOnlyCollection<T>.Item\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Items*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: Items\n  nameWithType: ReadOnlyCollection<T>.Items\n  fullName: ReadOnlyCollection<T>.Items\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.Generic.ICollection<T>.Add\n  nameWithType: ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Add\n  fullName: ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Add\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.Generic.ICollection<T>.Clear\n  nameWithType: ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Clear\n  fullName: ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Clear\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.Generic.ICollection<T>.IsReadOnly\n  nameWithType: ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.IsReadOnly\n  fullName: ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.IsReadOnly\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.Generic.ICollection<T>.Remove\n  nameWithType: ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Remove\n  fullName: ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Remove\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.Generic.IList<T>.Insert\n  nameWithType: ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.Insert\n  fullName: ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.Insert\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.Generic.IList<T>.Item\n  nameWithType: ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.Item\n  fullName: ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.Item\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.Generic.IList<T>.RemoveAt\n  nameWithType: ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.RemoveAt\n  fullName: ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.RemoveAt\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: ReadOnlyCollection<T>.System.Collections.ICollection.CopyTo\n  fullName: ReadOnlyCollection<T>.System.Collections.ICollection.CopyTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: ReadOnlyCollection<T>.System.Collections.ICollection.IsSynchronized\n  fullName: ReadOnlyCollection<T>.System.Collections.ICollection.IsSynchronized\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: ReadOnlyCollection<T>.System.Collections.ICollection.SyncRoot\n  fullName: ReadOnlyCollection<T>.System.Collections.ICollection.SyncRoot\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator\n  fullName: ReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.IList.Add\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.Add\n  fullName: ReadOnlyCollection<T>.System.Collections.IList.Add\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.IList.Clear\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.Clear\n  fullName: ReadOnlyCollection<T>.System.Collections.IList.Clear\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.IList.Contains\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.Contains\n  fullName: ReadOnlyCollection<T>.System.Collections.IList.Contains\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.IList.IndexOf\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.IndexOf\n  fullName: ReadOnlyCollection<T>.System.Collections.IList.IndexOf\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.IList.Insert\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.Insert\n  fullName: ReadOnlyCollection<T>.System.Collections.IList.Insert\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.IsFixedSize\n  fullName: ReadOnlyCollection<T>.System.Collections.IList.IsFixedSize\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.IsReadOnly\n  fullName: ReadOnlyCollection<T>.System.Collections.IList.IsReadOnly\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.IList.Item\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.Item\n  fullName: ReadOnlyCollection<T>.System.Collections.IList.Item\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.IList.Remove\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.Remove\n  fullName: ReadOnlyCollection<T>.System.Collections.IList.Remove\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt*\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.IList.RemoveAt\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.RemoveAt\n  fullName: ReadOnlyCollection<T>.System.Collections.IList.RemoveAt\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableArray\n  isExternal: false\n  name: ToImmutableArray<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableList\n  isExternal: false\n  name: ToImmutableList<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  fullName: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Append<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: AsEnumerable<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Average(IEnumerable<Decimal>)\n  fullName: Enumerable.Average(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Double>)\n  nameWithType: Enumerable.Average(IEnumerable<Double>)\n  fullName: Enumerable.Average(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int32>)\n  nameWithType: Enumerable.Average(IEnumerable<Int32>)\n  fullName: Enumerable.Average(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int64>)\n  nameWithType: Enumerable.Average(IEnumerable<Int64>)\n  fullName: Enumerable.Average(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Single>)\n  nameWithType: Enumerable.Average(IEnumerable<Single>)\n  fullName: Enumerable.Average(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Max(IEnumerable<Decimal>)\n  fullName: Enumerable.Max(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Double>)\n  nameWithType: Enumerable.Max(IEnumerable<Double>)\n  fullName: Enumerable.Max(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int32>)\n  nameWithType: Enumerable.Max(IEnumerable<Int32>)\n  fullName: Enumerable.Max(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int64>)\n  nameWithType: Enumerable.Max(IEnumerable<Int64>)\n  fullName: Enumerable.Max(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Single>)\n  nameWithType: Enumerable.Max(IEnumerable<Single>)\n  fullName: Enumerable.Max(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Min(IEnumerable<Decimal>)\n  fullName: Enumerable.Min(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Double>)\n  nameWithType: Enumerable.Min(IEnumerable<Double>)\n  fullName: Enumerable.Min(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int32>)\n  nameWithType: Enumerable.Min(IEnumerable<Int32>)\n  fullName: Enumerable.Min(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int64>)\n  nameWithType: Enumerable.Min(IEnumerable<Int64>)\n  fullName: Enumerable.Min(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Single>)\n  nameWithType: Enumerable.Min(IEnumerable<Single>)\n  fullName: Enumerable.Min(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Prepend<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Reverse<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Skip<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Sum(IEnumerable<Decimal>)\n  fullName: Enumerable.Sum(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Double>)\n  nameWithType: Enumerable.Sum(IEnumerable<Double>)\n  fullName: Enumerable.Sum(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int32>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int32>)\n  fullName: Enumerable.Sum(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int64>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int64>)\n  fullName: Enumerable.Sum(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Single>)\n  nameWithType: Enumerable.Sum(IEnumerable<Single>)\n  fullName: Enumerable.Sum(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Take<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToArray<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToList<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  nameWithType: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  fullName: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel<TSource>(IEnumerable<TSource>)\n  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n  fullName: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable<TElement>(IEnumerable<TElement>)\n  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n  fullName: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>)\n  fullName: Extensions.Attributes(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>, XName)\n  fullName: Extensions.Attributes(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.DescendantNodes<T>(IEnumerable<T>)\n  fullName: Extensions.DescendantNodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodesAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>)\n  fullName: Extensions.Elements<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Elements<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: InDocumentOrder<T>(IEnumerable<T>)\n  nameWithType: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n  fullName: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Nodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.Nodes<T>(IEnumerable<T>)\n  fullName: Extensions.Nodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove(IEnumerable<XAttribute>)\n  nameWithType: Extensions.Remove(IEnumerable<XAttribute>)\n  fullName: Extensions.Remove(IEnumerable<XAttribute>)\n- uid: System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove<T>(IEnumerable<T>)\n  nameWithType: Extensions.Remove<T>(IEnumerable<T>)\n  fullName: Extensions.Remove<T>(IEnumerable<T>)\n- uid: System.Collections.Generic.ICollection`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<T>\n  nameWithType: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n- uid: System.Collections.Generic.IEnumerable`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IReadOnlyCollection`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IReadOnlyCollection<T>\n  nameWithType: IReadOnlyCollection<T>\n  fullName: System.Collections.Generic.IReadOnlyCollection<T>\n- uid: System.Collections.Generic.IReadOnlyList`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IReadOnlyList<T>\n  nameWithType: IReadOnlyList<T>\n  fullName: System.Collections.Generic.IReadOnlyList<T>\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: false\n  name: IList\n  nameWithType: IList\n  fullName: System.Collections.IList\n"}