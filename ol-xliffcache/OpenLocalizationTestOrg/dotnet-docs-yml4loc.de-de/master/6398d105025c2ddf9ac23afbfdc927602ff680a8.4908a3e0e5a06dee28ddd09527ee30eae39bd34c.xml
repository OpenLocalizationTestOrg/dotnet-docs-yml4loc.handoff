{"nodes":[{"content":"Represents the binding element that is used when the client must expose an endpoint for the service to send messages back to the client.","nodes":[{"pos":[0,136],"content":"Represents the binding element that is used when the client must expose an endpoint for the service to send messages back to the client.","nodes":[{"content":"Represents the binding element that is used when the client must expose an endpoint for the service to send messages back to the client.","pos":[0,136]}]}],"pos":[1615,1752],"yaml":true},{"content":"This is commonly used with transports, such as HTTP, that do not allow duplex communications natively. TCP, by contrast, does allow duplex communications natively and so does not require the use of this binding element for the service to send messages back to a client.  \n  \n The client must expose an address at which the service can contact it to establish a connection from the service to the client. This client address is provided by the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> property. Note that [!INCLUDE[indigo1](~/includes/indigo1-md.md)] auto-generates a <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> if one is not explicitly set by the user.","nodes":[{"pos":[0,269],"content":"This is commonly used with transports, such as HTTP, that do not allow duplex communications natively. TCP, by contrast, does allow duplex communications natively and so does not require the use of this binding element for the service to send messages back to a client.","nodes":[{"content":"This is commonly used with transports, such as HTTP, that do not allow duplex communications natively. TCP, by contrast, does allow duplex communications natively and so does not require the use of this binding element for the service to send messages back to a client.","pos":[0,269],"nodes":[{"content":"This is commonly used with transports, such as HTTP, that do not allow duplex communications natively.","pos":[0,102]},{"content":"TCP, by contrast, does allow duplex communications natively and so does not require the use of this binding element for the service to send messages back to a client.","pos":[103,269]}]}]},{"pos":[276,741],"content":"The client must expose an address at which the service can contact it to establish a connection from the service to the client. This client address is provided by the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> property. Note that [!INCLUDE[indigo1](~/includes/indigo1-md.md)] auto-generates a <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> if one is not explicitly set by the user.","nodes":[{"content":"The client must expose an address at which the service can contact it to establish a connection from the service to the client.","pos":[0,127]},{"content":"This client address is provided by the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph> property.","pos":[128,263],"source":" This client address is provided by the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> property."},{"content":"Note that <ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> auto-generates a <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph> if one is not explicitly set by the user.","pos":[264,465],"source":" Note that [!INCLUDE[indigo1](~/includes/indigo1-md.md)] auto-generates a <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> if one is not explicitly set by the user."}]}],"pos":[1763,2509],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.CompositeDuplexBindingElement\"></xref> class.","nodes":[{"pos":[0,120],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.CompositeDuplexBindingElement\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.CompositeDuplexBindingElement\"></xref> class."}],"pos":[4246,4367],"yaml":true},{"content":"Returns a channel factory that can create a composite duplex channel.","nodes":[{"pos":[0,69],"content":"Returns a channel factory that can create a composite duplex channel.","nodes":[{"content":"Returns a channel factory that can create a composite duplex channel.","pos":[0,69]}]}],"pos":[5878,5948],"yaml":true},{"content":"The build context requires an <xref:System.ServiceModel.Channels.IOutputChannel> for the `TChannel`.","nodes":[{"pos":[0,100],"content":"The build context requires an <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph> for the <ph id=\"ph2\">`TChannel`</ph>.","source":"The build context requires an <xref:System.ServiceModel.Channels.IOutputChannel> for the `TChannel`."}],"pos":[5959,6060],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides the context required to build the channel factory.","nodes":[{"pos":[0,133],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph> that provides the context required to build the channel factory.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides the context required to build the channel factory."}],"pos":[6348,6482],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> that the factory produces.","nodes":[{"pos":[0,89],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannel\"&gt;&lt;/xref&gt;</ph> that the factory produces.","source":"The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> that the factory produces."}],"pos":[6540,6630],"yaml":true},{"content":"A <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"></xref> that creates a composite duplex channel of type <code>TChannel</code>.","nodes":[{"pos":[0,140],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"&gt;&lt;/xref&gt;</ph> that creates a composite duplex channel of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"></xref> that creates a composite duplex channel of type <code>TChannel</code>."}],"pos":[6720,6861],"yaml":true},{"content":"<code>context</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>context</code> is `null`."}],"pos":[7072,7104],"yaml":true},{"content":"The <code>TChannel</code> is not of type <xref href=\"System.ServiceModel.Channels.IOutputChannel\"></xref> and is not supported.","nodes":[{"pos":[0,127],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not of type <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.IOutputChannel\"&gt;&lt;/xref&gt;</ph> and is not supported.","source":"The <code>TChannel</code> is not of type <xref href=\"System.ServiceModel.Channels.IOutputChannel\"></xref> and is not supported."}],"pos":[7198,7326],"yaml":true},{"content":"Returns a channel listener that can accept a composite duplex channel.","nodes":[{"pos":[0,70],"content":"Returns a channel listener that can accept a composite duplex channel.","nodes":[{"content":"Returns a channel listener that can accept a composite duplex channel.","pos":[0,70]}]}],"pos":[8665,8736],"yaml":true},{"content":"The build context requires an <xref:System.ServiceModel.Channels.IInputChannel> for the `TChannel`.","nodes":[{"pos":[0,99],"content":"The build context requires an <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> for the <ph id=\"ph2\">`TChannel`</ph>.","source":"The build context requires an <xref:System.ServiceModel.Channels.IInputChannel> for the `TChannel`."}],"pos":[8747,8847],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides the context required to build the channel listener.","nodes":[{"pos":[0,134],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph> that provides the context required to build the channel listener.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides the context required to build the channel listener."}],"pos":[9201,9336],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> that the listener accepts.","nodes":[{"pos":[0,89],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannel\"&gt;&lt;/xref&gt;</ph> that the listener accepts.","source":"The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> that the listener accepts."}],"pos":[9394,9484],"yaml":true},{"content":"An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> that accepts a composite duplex channel of type <code>TChannel</code>.","nodes":[{"pos":[0,142],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelListener`1\"&gt;&lt;/xref&gt;</ph> that accepts a composite duplex channel of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> that accepts a composite duplex channel of type <code>TChannel</code>."}],"pos":[9575,9718],"yaml":true},{"content":"<code>context</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>context</code> is `null`."}],"pos":[9930,9962],"yaml":true},{"content":"The <code>TChannel</code> is not of type <xref href=\"System.ServiceModel.Channels.IInputChannel\"></xref> and is not supported.","nodes":[{"pos":[0,126],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not of type <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.IInputChannel\"&gt;&lt;/xref&gt;</ph> and is not supported.","source":"The <code>TChannel</code> is not of type <xref href=\"System.ServiceModel.Channels.IInputChannel\"></xref> and is not supported."}],"pos":[10056,10183],"yaml":true},{"content":"Returns a value that indicates whether the binding can build the channel factory that produces a specific type of channel that satisfies the context requirements.","nodes":[{"pos":[0,162],"content":"Returns a value that indicates whether the binding can build the channel factory that produces a specific type of channel that satisfies the context requirements.","nodes":[{"content":"Returns a value that indicates whether the binding can build the channel factory that produces a specific type of channel that satisfies the context requirements.","pos":[0,162]}]}],"pos":[11534,11697],"yaml":true},{"content":"`true` if `TChannel` == <xref:System.ServiceModel.Channels.IOutputChannel> and the inner binding can also build <xref:System.ServiceModel.Channels.IOutputChannel>; otherwise, `false`.","nodes":[{"pos":[0,183],"content":"<ph id=\"ph1\">`true`</ph> if <ph id=\"ph2\">`TChannel`</ph><ph id=\"ph3\"> == </ph><ph id=\"ph4\">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph> and the inner binding can also build <ph id=\"ph5\">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph>; otherwise, <ph id=\"ph6\">`false`</ph>.","source":"`true` if `TChannel` == <xref:System.ServiceModel.Channels.IOutputChannel> and the inner binding can also build <xref:System.ServiceModel.Channels.IOutputChannel>; otherwise, `false`."}],"pos":[11708,11894],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides the context required to build the channel listener.","nodes":[{"pos":[0,134],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph> that provides the context required to build the channel listener.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides the context required to build the channel listener."}],"pos":[12135,12270],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> that the channel factory produces.","nodes":[{"pos":[0,97],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannel\"&gt;&lt;/xref&gt;</ph> that the channel factory produces.","source":"The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> that the channel factory produces."}],"pos":[12328,12426],"yaml":true},{"content":"`true` if the binding can build the channel factory; otherwise, `false`.","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">`true`</ph> if the binding can build the channel factory; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the binding can build the channel factory; otherwise, `false`."}],"pos":[12484,12559],"yaml":true},{"content":"<code>context</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>context</code> is `null`."}],"pos":[12773,12805],"yaml":true},{"content":"Returns a value that indicates whether the binding can build the channel listener that accepts a specific type of channel that satisfies the context requirements.","nodes":[{"pos":[0,162],"content":"Returns a value that indicates whether the binding can build the channel listener that accepts a specific type of channel that satisfies the context requirements.","nodes":[{"content":"Returns a value that indicates whether the binding can build the channel listener that accepts a specific type of channel that satisfies the context requirements.","pos":[0,162]}]}],"pos":[14162,14325],"yaml":true},{"content":"`true` if `TChannel` == <xref:System.ServiceModel.Channels.IInputChannel> and the inner binding can also build <xref:System.ServiceModel.Channels.IInputChannel>; otherwise, `false`.","nodes":[{"pos":[0,181],"content":"<ph id=\"ph1\">`true`</ph> if <ph id=\"ph2\">`TChannel`</ph><ph id=\"ph3\"> == </ph><ph id=\"ph4\">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> and the inner binding can also build <ph id=\"ph5\">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph>; otherwise, <ph id=\"ph6\">`false`</ph>.","source":"`true` if `TChannel` == <xref:System.ServiceModel.Channels.IInputChannel> and the inner binding can also build <xref:System.ServiceModel.Channels.IInputChannel>; otherwise, `false`."}],"pos":[14336,14520],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides the context required to build the channel listener.","nodes":[{"pos":[0,134],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph> that provides the context required to build the channel listener.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides the context required to build the channel listener."}],"pos":[14826,14961],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> that the listener accepts.","nodes":[{"pos":[0,89],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannel\"&gt;&lt;/xref&gt;</ph> that the listener accepts.","source":"The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> that the listener accepts."}],"pos":[15019,15109],"yaml":true},{"content":"`true` if the channel listener can be built for the build required to accept the specified type of channel; otherwise, `false`.","nodes":[{"pos":[0,127],"content":"<ph id=\"ph1\">`true`</ph> if the channel listener can be built for the build required to accept the specified type of channel; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the channel listener can be built for the build required to accept the specified type of channel; otherwise, `false`."}],"pos":[15167,15297],"yaml":true},{"content":"<code>context</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>context</code> is `null`."}],"pos":[15512,15544],"yaml":true},{"content":"Gets or sets the base address for the client.","nodes":[{"pos":[0,45],"content":"Gets or sets the base address for the client.","nodes":[{"content":"Gets or sets the base address for the client.","pos":[0,45]}]}],"pos":[16645,16691],"yaml":true},{"content":"This property provides an address at which the service can contact the client. A `null` value causes the system to automatically generate a client base address.  \n  \n This is a base address, not an absolute address. A GUID is appended to the base address when generating client endpoints from this binding.","nodes":[{"pos":[0,160],"content":"This property provides an address at which the service can contact the client. A `null` value causes the system to automatically generate a client base address.","nodes":[{"content":"This property provides an address at which the service can contact the client.","pos":[0,78]},{"content":"A <ph id=\"ph1\">`null`</ph> value causes the system to automatically generate a client base address.","pos":[79,160],"source":" A `null` value causes the system to automatically generate a client base address."}]},{"pos":[167,306],"content":"This is a base address, not an absolute address. A GUID is appended to the base address when generating client endpoints from this binding.","nodes":[{"content":"This is a base address, not an absolute address. A GUID is appended to the base address when generating client endpoints from this binding.","pos":[0,139],"nodes":[{"content":"This is a base address, not an absolute address.","pos":[0,48]},{"content":"A GUID is appended to the base address when generating client endpoints from this binding.","pos":[49,139]}]}]}],"pos":[16702,17013],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Uri\"></xref> that contains the base address for the client.","nodes":[{"pos":[0,80],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the base address for the client.","source":"A <xref href=\"System.Uri\"></xref> that contains the base address for the client."}],"pos":[17133,17214],"yaml":true},{"content":"Returns a deep clone of the current binding element.","nodes":[{"pos":[0,52],"content":"Returns a deep clone of the current binding element.","nodes":[{"content":"Returns a deep clone of the current binding element.","pos":[0,52]}]}],"pos":[18371,18424],"yaml":true},{"content":"Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element. If a clone is not returned, the run-time behavior is undefined.  \n  \n A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object. (This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only. If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects. In particular, a deep copy of <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement> copies over the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> value.","nodes":[{"pos":[0,187],"content":"Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element. If a clone is not returned, the run-time behavior is undefined.","nodes":[{"content":"Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element. If a clone is not returned, the run-time behavior is undefined.","pos":[0,187],"nodes":[{"content":"Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.","pos":[0,123]},{"content":"If a clone is not returned, the run-time behavior is undefined.","pos":[124,187]}]}]},{"pos":[194,838],"content":"A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object. (This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only. If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects. In particular, a deep copy of <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement> copies over the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> value.","nodes":[{"content":"A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object. (This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only. If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects. In particular, a deep copy of <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement> copies over the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> value.","pos":[0,644],"nodes":[{"content":"A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.","pos":[0,129]},{"content":"(This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only.","pos":[130,257]},{"content":"If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.","pos":[258,438]},{"content":"In particular, a deep copy of <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement&gt;</ph> copies over the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph> value.","pos":[439,644],"source":" In particular, a deep copy of <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement> copies over the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> value."}]}]}],"pos":[18435,19278],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.ServiceModel.Channels.CompositeDuplexBindingElement\"></xref> that is a deep clone of the current binding element.","nodes":[{"pos":[0,134],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.CompositeDuplexBindingElement\"&gt;&lt;/xref&gt;</ph> that is a deep clone of the current binding element.","source":"A <xref href=\"System.ServiceModel.Channels.CompositeDuplexBindingElement\"></xref> that is a deep clone of the current binding element."}],"pos":[19477,19612],"yaml":true},{"content":"Returns a typed object requested from the appropriate layer in one of the channel stacks.","nodes":[{"pos":[0,89],"content":"Returns a typed object requested from the appropriate layer in one of the channel stacks.","nodes":[{"content":"Returns a typed object requested from the appropriate layer in one of the channel stacks.","pos":[0,89]}]}],"pos":[20971,21061],"yaml":true},{"content":"Use this to request a typed object, such as an interface for setting properties or getting status, from the appropriate layer in the stacked binding. If a layer supports returning the requested object, it returns it. If not, it delegates the call down to the next layer in the stack. If it gets to the bottom of the stack and no layer supports getting the requested object then the caller is returned a `null` value.","nodes":[{"pos":[0,416],"content":"Use this to request a typed object, such as an interface for setting properties or getting status, from the appropriate layer in the stacked binding. If a layer supports returning the requested object, it returns it. If not, it delegates the call down to the next layer in the stack. If it gets to the bottom of the stack and no layer supports getting the requested object then the caller is returned a `null` value.","nodes":[{"content":"Use this to request a typed object, such as an interface for setting properties or getting status, from the appropriate layer in the stacked binding.","pos":[0,149]},{"content":"If a layer supports returning the requested object, it returns it.","pos":[150,216]},{"content":"If not, it delegates the call down to the next layer in the stack.","pos":[217,283]},{"content":"If it gets to the bottom of the stack and no layer supports getting the requested object then the caller is returned a <ph id=\"ph1\">`null`</ph> value.","pos":[284,416],"source":" If it gets to the bottom of the stack and no layer supports getting the requested object then the caller is returned a `null` value."}]}],"pos":[21072,21489],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides the context required to build the channel.","nodes":[{"pos":[0,125],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph> that provides the context required to build the channel.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides the context required to build the channel."}],"pos":[21727,21853],"yaml":true},{"content":"The typed object whose support is being tested.","nodes":[{"pos":[0,47],"content":"The typed object whose support is being tested.","nodes":[{"content":"The typed object whose support is being tested.","pos":[0,47]}]}],"pos":[21904,21952],"yaml":true},{"content":"The typed object <code>T</code> requested if it is supported; or `null` if it is not.","nodes":[{"pos":[0,85],"content":"The typed object <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> requested if it is supported; or <ph id=\"ph2\">`null`</ph> if it is not.","source":"The typed object <code>T</code> requested if it is supported; or `null` if it is not."}],"pos":[21997,22083],"yaml":true},{"content":"<code>context</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>context</code> is `null`."}],"pos":[22286,22318],"yaml":true},{"content":"Exports custom policy assertions about bindings that represent the presence of composite duplex in the binding.","nodes":[{"pos":[0,111],"content":"Exports custom policy assertions about bindings that represent the presence of composite duplex in the binding.","nodes":[{"content":"Exports custom policy assertions about bindings that represent the presence of composite duplex in the binding.","pos":[0,111]}]}],"pos":[24082,24194],"yaml":true},{"content":"[!INCLUDE[crdefault](~/includes/crdefault-md.md)] <xref:System.ServiceModel.Description.IPolicyExportExtension>.","nodes":[{"pos":[0,112],"content":"<ph id=\"ph1\">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph>.","source":"[!INCLUDE[crdefault](~/includes/crdefault-md.md)] <xref:System.ServiceModel.Description.IPolicyExportExtension>."}],"pos":[24205,24320],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Description.MetadataExporter\"></xref> that you can use to modify the exporting process.","nodes":[{"pos":[0,123],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.MetadataExporter\"&gt;&lt;/xref&gt;</ph> that you can use to modify the exporting process.","source":"The <xref href=\"System.ServiceModel.Description.MetadataExporter\"></xref> that you can use to modify the exporting process."}],"pos":[24625,24749],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Description.PolicyConversionContext\"></xref> that you can use to insert your custom policy assertion.","nodes":[{"pos":[0,137],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.PolicyConversionContext\"&gt;&lt;/xref&gt;</ph> that you can use to insert your custom policy assertion.","source":"The <xref href=\"System.ServiceModel.Description.PolicyConversionContext\"></xref> that you can use to insert your custom policy assertion."}],"pos":[24854,24992],"yaml":true},{"content":"<code>context</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>context</code> is `null`."}],"pos":[25248,25280],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  commentId: T:System.ServiceModel.Channels.CompositeDuplexBindingElement\n  id: CompositeDuplexBindingElement\n  children:\n  - System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor\n  - System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress\n  - System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone\n  - System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  langs:\n  - csharp\n  name: CompositeDuplexBindingElement\n  nameWithType: CompositeDuplexBindingElement\n  fullName: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Represents the binding element that is used when the client must expose an endpoint for the service to send messages back to the client.\n  remarks: \"This is commonly used with transports, such as HTTP, that do not allow duplex communications natively. TCP, by contrast, does allow duplex communications natively and so does not require the use of this binding element for the service to send messages back to a client.  \\n  \\n The client must expose an address at which the service can contact it to establish a connection from the service to the client. This client address is provided by the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> property. Note that [!INCLUDE[indigo1](~/includes/indigo1-md.md)] auto-generates a <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> if one is not explicitly set by the user.\"\n  syntax:\n    content: 'public sealed class CompositeDuplexBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Description.IPolicyExportExtension'\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Channels.BindingElement\n  implements:\n  - System.ServiceModel.Description.IPolicyExportExtension\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/CompositeDuplexBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor\n  commentId: M:System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  langs:\n  - csharp\n  name: CompositeDuplexBindingElement()\n  nameWithType: CompositeDuplexBindingElement.CompositeDuplexBindingElement()\n  fullName: CompositeDuplexBindingElement.CompositeDuplexBindingElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.CompositeDuplexBindingElement\"></xref> class.\n  syntax:\n    content: public CompositeDuplexBindingElement ();\n    parameters: []\n  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/CompositeDuplexBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  langs:\n  - csharp\n  name: BuildChannelFactory<TChannel>(BindingContext)\n  nameWithType: CompositeDuplexBindingElement.BuildChannelFactory<TChannel>(BindingContext)\n  fullName: CompositeDuplexBindingElement.BuildChannelFactory<TChannel>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns a channel factory that can create a composite duplex channel.\n  remarks: The build context requires an <xref:System.ServiceModel.Channels.IOutputChannel> for the `TChannel`.\n  syntax:\n    content: public override System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides the context required to build the channel factory.\n    typeParameters:\n    - id: TChannel\n      description: The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> that the factory produces.\n    return:\n      type: System.ServiceModel.Channels.IChannelFactory`1\n      description: A <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"></xref> that creates a composite duplex channel of type <code>TChannel</code>.\n  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>TChannel</code> is not of type <xref href=\"System.ServiceModel.Channels.IOutputChannel\"></xref> and is not supported.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/CompositeDuplexBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  id: BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  langs:\n  - csharp\n  name: BuildChannelListener<TChannel>(BindingContext)\n  nameWithType: CompositeDuplexBindingElement.BuildChannelListener<TChannel>(BindingContext)\n  fullName: CompositeDuplexBindingElement.BuildChannelListener<TChannel>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns a channel listener that can accept a composite duplex channel.\n  remarks: The build context requires an <xref:System.ServiceModel.Channels.IInputChannel> for the `TChannel`.\n  syntax:\n    content: 'public override System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides the context required to build the channel listener.\n    typeParameters:\n    - id: TChannel\n      description: The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> that the listener accepts.\n    return:\n      type: System.ServiceModel.Channels.IChannelListener`1\n      description: An <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> that accepts a composite duplex channel of type <code>TChannel</code>.\n  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>TChannel</code> is not of type <xref href=\"System.ServiceModel.Channels.IInputChannel\"></xref> and is not supported.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/CompositeDuplexBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  id: CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  langs:\n  - csharp\n  name: CanBuildChannelFactory<TChannel>(BindingContext)\n  nameWithType: CompositeDuplexBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)\n  fullName: CompositeDuplexBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns a value that indicates whether the binding can build the channel factory that produces a specific type of channel that satisfies the context requirements.\n  remarks: '`true` if `TChannel` == <xref:System.ServiceModel.Channels.IOutputChannel> and the inner binding can also build <xref:System.ServiceModel.Channels.IOutputChannel>; otherwise, `false`.'\n  syntax:\n    content: public override bool CanBuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides the context required to build the channel listener.\n    typeParameters:\n    - id: TChannel\n      description: The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> that the channel factory produces.\n    return:\n      type: System.Boolean\n      description: '`true` if the binding can build the channel factory; otherwise, `false`.'\n  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/CompositeDuplexBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  id: CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  langs:\n  - csharp\n  name: CanBuildChannelListener<TChannel>(BindingContext)\n  nameWithType: CompositeDuplexBindingElement.CanBuildChannelListener<TChannel>(BindingContext)\n  fullName: CompositeDuplexBindingElement.CanBuildChannelListener<TChannel>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns a value that indicates whether the binding can build the channel listener that accepts a specific type of channel that satisfies the context requirements.\n  remarks: '`true` if `TChannel` == <xref:System.ServiceModel.Channels.IInputChannel> and the inner binding can also build <xref:System.ServiceModel.Channels.IInputChannel>; otherwise, `false`.'\n  syntax:\n    content: 'public override bool CanBuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides the context required to build the channel listener.\n    typeParameters:\n    - id: TChannel\n      description: The <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> that the listener accepts.\n    return:\n      type: System.Boolean\n      description: '`true` if the channel listener can be built for the build required to accept the specified type of channel; otherwise, `false`.'\n  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/CompositeDuplexBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress\n  commentId: P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress\n  id: ClientBaseAddress\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  langs:\n  - csharp\n  name: ClientBaseAddress\n  nameWithType: CompositeDuplexBindingElement.ClientBaseAddress\n  fullName: CompositeDuplexBindingElement.ClientBaseAddress\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets or sets the base address for the client.\n  remarks: \"This property provides an address at which the service can contact the client. A `null` value causes the system to automatically generate a client base address.  \\n  \\n This is a base address, not an absolute address. A GUID is appended to the base address when generating client endpoints from this binding.\"\n  syntax:\n    content: public Uri ClientBaseAddress { get; set; }\n    return:\n      type: System.Uri\n      description: A <xref href=\"System.Uri\"></xref> that contains the base address for the client.\n  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/CompositeDuplexBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone\n  commentId: M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone\n  id: Clone\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: CompositeDuplexBindingElement.Clone()\n  fullName: CompositeDuplexBindingElement.Clone()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns a deep clone of the current binding element.\n  remarks: \"Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element. If a clone is not returned, the run-time behavior is undefined.  \\n  \\n A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object. (This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only. If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects. In particular, a deep copy of <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement> copies over the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> value.\"\n  syntax:\n    content: public override System.ServiceModel.Channels.BindingElement Clone ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Channels.BindingElement\n      description: A <xref href=\"System.ServiceModel.Channels.CompositeDuplexBindingElement\"></xref> that is a deep clone of the current binding element.\n  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/CompositeDuplexBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  id: GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  langs:\n  - csharp\n  name: GetProperty<T>(BindingContext)\n  nameWithType: CompositeDuplexBindingElement.GetProperty<T>(BindingContext)\n  fullName: CompositeDuplexBindingElement.GetProperty<T>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns a typed object requested from the appropriate layer in one of the channel stacks.\n  remarks: Use this to request a typed object, such as an interface for setting properties or getting status, from the appropriate layer in the stacked binding. If a layer supports returning the requested object, it returns it. If not, it delegates the call down to the next layer in the stack. If it gets to the bottom of the stack and no layer supports getting the requested object then the caller is returned a `null` value.\n  syntax:\n    content: 'public override T GetProperty<T> (System.ServiceModel.Channels.BindingContext context) where T : class;'\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides the context required to build the channel.\n    typeParameters:\n    - id: T\n      description: The typed object whose support is being tested.\n    return:\n      type: T\n      description: The typed object <code>T</code> requested if it is supported; or `null` if it is not.\n  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/CompositeDuplexBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  commentId: M:System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  id: System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  isEii: true\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  langs:\n  - csharp\n  name: IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)\n  nameWithType: CompositeDuplexBindingElement.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)\n  fullName: CompositeDuplexBindingElement.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Exports custom policy assertions about bindings that represent the presence of composite duplex in the binding.\n  remarks: '[!INCLUDE[crdefault](~/includes/crdefault-md.md)] <xref:System.ServiceModel.Description.IPolicyExportExtension>.'\n  syntax:\n    content: void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);\n    parameters:\n    - id: exporter\n      type: System.ServiceModel.Description.MetadataExporter\n      description: The <xref href=\"System.ServiceModel.Description.MetadataExporter\"></xref> that you can use to modify the exporting process.\n    - id: context\n      type: System.ServiceModel.Description.PolicyConversionContext\n      description: The <xref href=\"System.ServiceModel.Description.PolicyConversionContext\"></xref> that you can use to insert your custom policy assertion.\n  overload: System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/CompositeDuplexBindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Channels.BindingElement\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: BindingElement\n  nameWithType: BindingElement\n  fullName: System.ServiceModel.Channels.BindingElement\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: CompositeDuplexBindingElement()\n  nameWithType: CompositeDuplexBindingElement.CompositeDuplexBindingElement()\n  fullName: CompositeDuplexBindingElement.CompositeDuplexBindingElement()\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: BuildChannelFactory<TChannel>(BindingContext)\n  nameWithType: CompositeDuplexBindingElement.BuildChannelFactory<TChannel>(BindingContext)\n  fullName: CompositeDuplexBindingElement.BuildChannelFactory<TChannel>(BindingContext)\n- uid: System.ServiceModel.Channels.IChannelFactory`1\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IChannelFactory<TChannel>\n  nameWithType: IChannelFactory<TChannel>\n  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>\n- uid: System.ServiceModel.Channels.BindingContext\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: BindingContext\n  nameWithType: BindingContext\n  fullName: System.ServiceModel.Channels.BindingContext\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: BuildChannelListener<TChannel>(BindingContext)\n  nameWithType: CompositeDuplexBindingElement.BuildChannelListener<TChannel>(BindingContext)\n  fullName: CompositeDuplexBindingElement.BuildChannelListener<TChannel>(BindingContext)\n- uid: System.ServiceModel.Channels.IChannelListener`1\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IChannelListener<TChannel>\n  nameWithType: IChannelListener<TChannel>\n  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: CanBuildChannelFactory<TChannel>(BindingContext)\n  nameWithType: CompositeDuplexBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)\n  fullName: CompositeDuplexBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: CanBuildChannelListener<TChannel>(BindingContext)\n  nameWithType: CompositeDuplexBindingElement.CanBuildChannelListener<TChannel>(BindingContext)\n  fullName: CompositeDuplexBindingElement.CanBuildChannelListener<TChannel>(BindingContext)\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: ClientBaseAddress\n  nameWithType: CompositeDuplexBindingElement.ClientBaseAddress\n  fullName: CompositeDuplexBindingElement.ClientBaseAddress\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: Clone()\n  nameWithType: CompositeDuplexBindingElement.Clone()\n  fullName: CompositeDuplexBindingElement.Clone()\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: GetProperty<T>(BindingContext)\n  nameWithType: CompositeDuplexBindingElement.GetProperty<T>(BindingContext)\n  fullName: CompositeDuplexBindingElement.GetProperty<T>(BindingContext)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)\n  nameWithType: CompositeDuplexBindingElement.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)\n  fullName: CompositeDuplexBindingElement.IPolicyExportExtension.ExportPolicy(MetadataExporter, PolicyConversionContext)\n- uid: System.ServiceModel.Description.MetadataExporter\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: MetadataExporter\n  nameWithType: MetadataExporter\n  fullName: System.ServiceModel.Description.MetadataExporter\n- uid: System.ServiceModel.Description.PolicyConversionContext\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: PolicyConversionContext\n  nameWithType: PolicyConversionContext\n  fullName: System.ServiceModel.Description.PolicyConversionContext\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor*\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: CompositeDuplexBindingElement\n  nameWithType: CompositeDuplexBindingElement.CompositeDuplexBindingElement\n  fullName: CompositeDuplexBindingElement.CompositeDuplexBindingElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/CompositeDuplexBindingElement.xml\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1*\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: BuildChannelFactory<TChannel>\n  nameWithType: CompositeDuplexBindingElement.BuildChannelFactory<TChannel>\n  fullName: CompositeDuplexBindingElement.BuildChannelFactory<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/CompositeDuplexBindingElement.xml\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1*\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: BuildChannelListener<TChannel>\n  nameWithType: CompositeDuplexBindingElement.BuildChannelListener<TChannel>\n  fullName: CompositeDuplexBindingElement.BuildChannelListener<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/CompositeDuplexBindingElement.xml\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1*\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: CanBuildChannelFactory<TChannel>\n  nameWithType: CompositeDuplexBindingElement.CanBuildChannelFactory<TChannel>\n  fullName: CompositeDuplexBindingElement.CanBuildChannelFactory<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/CompositeDuplexBindingElement.xml\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1*\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: CanBuildChannelListener<TChannel>\n  nameWithType: CompositeDuplexBindingElement.CanBuildChannelListener<TChannel>\n  fullName: CompositeDuplexBindingElement.CanBuildChannelListener<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/CompositeDuplexBindingElement.xml\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress*\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: ClientBaseAddress\n  nameWithType: CompositeDuplexBindingElement.ClientBaseAddress\n  fullName: CompositeDuplexBindingElement.ClientBaseAddress\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/CompositeDuplexBindingElement.xml\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone*\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: Clone\n  nameWithType: CompositeDuplexBindingElement.Clone\n  fullName: CompositeDuplexBindingElement.Clone\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/CompositeDuplexBindingElement.xml\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1*\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: GetProperty<T>\n  nameWithType: CompositeDuplexBindingElement.GetProperty<T>\n  fullName: CompositeDuplexBindingElement.GetProperty<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/CompositeDuplexBindingElement.xml\n- uid: System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*\n  parent: System.ServiceModel.Channels.CompositeDuplexBindingElement\n  isExternal: false\n  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy\n  nameWithType: CompositeDuplexBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy\n  fullName: CompositeDuplexBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/CompositeDuplexBindingElement.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.Description.IPolicyExportExtension\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: IPolicyExportExtension\n  nameWithType: IPolicyExportExtension\n  fullName: System.ServiceModel.Description.IPolicyExportExtension\n"}