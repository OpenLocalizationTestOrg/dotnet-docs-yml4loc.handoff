<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf418f65f0eaef88758d506bff91e8c5aa0e732d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">32bb3e1ebf5a7e491e5194a2146b7f44190ab2d0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">27403ce594c0be4ea49561b295d3ee8b599f2c37</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Used to mark a type definition in an assembly as a user-defined type (UDT) in SQL Server.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The properties on the attribute reflect the physical characteristics used when the type is registered with SQL Server.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>SQL Server creates a user-defined type that is bound to the type definition that has the <ph id="ph1">&lt;xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute&gt;</ph> custom attribute.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Every UDT must be annotated with this attribute.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>See <bpt id="p1">[</bpt>CLR User-Defined Types<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=128028)</ept> for more information about UDTs, including an example of a UDT.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A required attribute on a user-defined type (UDT), used to confirm that the given type is a UDT and to indicate the storage format of the UDT.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example specifies that the <ph id="ph1">`Format`</ph> of the user-defined type is <ph id="ph2">`SerializedDataWithMetadata`</ph> and the <ph id="ph3">`MaxByteSize`</ph> is 8000 bytes.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="Microsoft.SqlServer.Server.Format"&gt;&lt;/xref&gt;</ph> values representing the serialization format of the type.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The serialization format as a <ph id="ph1">&lt;xref href="Microsoft.SqlServer.Server.Format"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="Microsoft.SqlServer.Server.Format"&gt;&lt;/xref&gt;</ph> value representing the serialization format.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Indicates whether the user-defined type is byte ordered.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>When set to <ph id="ph1">`true`</ph>, the <ph id="ph2">&lt;xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A&gt;</ph> property in effect guarantees that the serialized binary data can be used for semantic ordering of the information.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Thus, each instance of a byte-ordered UDT object can only have one serialized representation.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a comparison operation is performed in SQL Server on the serialized bytes, its results should be the same as if the same comparison operation had taken place in managed code..</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following features are supported when <ph id="ph1">&lt;xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ability to create indexes on columns of this type.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ability to create primary and foreign keys as well as CHECK and UNIQUE constraints on columns of this type.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ability to use Transact-SQL ORDER BY, GROUP BY, and PARTITION BY clauses.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>In these cases, the binary representation of the type is used to determine the order.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ability to use comparison operators in Transact-SQL statements.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ability to persist computed columns of this type.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that both the <ph id="ph1">`Native`</ph> and <ph id="ph2">`UserDefined`</ph> serialization formats support the following comparison operators when <ph id="ph3">&lt;xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A&gt;</ph> is set to <ph id="ph4">`true`</ph>:</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Equal to (=)</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Not equal to (!=)</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Greater than (&gt;)</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Less than (<ph id="ph1">\&lt;</ph>)</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Greater than or equal to (&gt;=)</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Less than or equal to (&lt;=)</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the user-defined type is byte ordered; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Indicates whether all instances of this user-defined type are the same length.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If set to <ph id="ph1">`true`</ph>, all instances of UDTs corresponding to this common language runtime (CLR) type must have a length in bytes exactly equal to <ph id="ph2">&lt;xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>This attribute is only relevant for UDTs with <ph id="ph1">`UserDefined`</ph> serialization <ph id="ph2">&lt;xref:Microsoft.SqlServer.Server.Format&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if all instances of this type are the same length; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The maximum size of the instance, in bytes.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must specify the <ph id="ph1">&lt;xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A&gt;</ph> property with the <ph id="ph2">`UserDefined`</ph> serialization <ph id="ph3">&lt;xref:Microsoft.SqlServer.Server.Format&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>When connecting to SQL Server 2005 or earlier, <ph id="ph1">&lt;xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A&gt;</ph> must be between 1 and 8000.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>When connecting to SQL Server 2008 or later, set <ph id="ph1">&lt;xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A&gt;</ph> between 1 and 8000, for a type whose instances are always 8,000 bytes or less.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>For types that can have instances larger than 8000, specify -1.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a UDT with user-defined serialization specified, <ph id="ph1">&lt;xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A&gt;</ph> refers to the total size of the UDT in its serialized form as defined by the user.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consider a UDT with a property of a string of 10 characters (<ph id="ph1">&lt;xref:System.Char&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the UDT is serialized using a <ph id="ph1">&lt;xref:System.IO.BinaryWriter&gt;</ph>, the total size of the serialized string is 22 bytes: 2 bytes per Unicode UTF-16 character, multiplied by the maximum number of characters, plus 2 control bytes of overhead incurred from serializing a binary stream.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>So, when determining the value of <ph id="ph1">&lt;xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A&gt;</ph>, the total size of the serialized UDT must be considered: the size of the data serialized in binary form plus the overhead incurred by serialization.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property should not be used with <ph id="ph1">`Native`</ph> serialization <ph id="ph2">&lt;xref:Microsoft.SqlServer.Server.Format&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> value representing the maximum size of the instance.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The SQL Server name of the user-defined type.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name%2A&gt;</ph> property is not used within SQL Server, but is used by the Microsoft Visual Studio .NET Integrated Development Environment (IDE).</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> value representing the SQL Server name of the user-defined type.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The name of the method used to validate instances of the user-defined type.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method specified by this attribute validates instances of the UDT when the UDT has been deserialized from a binary value that is not trusted.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> representing the name of the method used to validate instances of the user-defined type.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>