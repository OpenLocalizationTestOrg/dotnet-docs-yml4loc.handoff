{"nodes":[{"content":"Provides the base implementation for custom channels.","nodes":[{"pos":[0,53],"content":"Provides the base implementation for custom channels.","nodes":[{"content":"Provides the base implementation for custom channels.","pos":[0,53]}]}],"pos":[1355,1409],"yaml":true},{"content":"The <xref:System.ServiceModel.Channels.ChannelBase> class provides an abstract base class implementation of the <xref:System.ServiceModel.Channels.IChannel> interface. It also requires that each channel be associated with a channel manager. Note that the only constructor available for creating instances of <xref:System.ServiceModel.Channels.ChannelBase> requires a `channelManager` input parameter.  \n  \n State changes are managed by inheriting from the <xref:System.ServiceModel.Channels.CommunicationObject> implementation of the state machine.  \n  \n The <xref:System.ServiceModel.Channels.ChannelBase> gets its default communication timeouts for the open, close, send and receive operations from the <xref:System.ServiceModel.Channels.ChannelManagerBase> associated with it.  \n  \n The <xref:System.ServiceModel.Channels.ChannelBase> also manages the manager for you. In addition to exposing a reference to the manager, the base class also notifies the manager when channels are created and destroyed. But the reference to the manager is only good until the channel is destroyed.  \n  \n Even if you do use the base class, you must still provide behaviors for opening and closing the channel. The default implementations of these methods do not provide useful information.  \n  \n You must also make sure to override <xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A> whenever you implement a channel. <xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A> is an excellent way to communicate information along the channel stack without having to know what channels are below you, or what channels above you may perform queries. Define interfaces that can be queried for available information. Whenever you do not recognize the type argument for <xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A>, delegate down to the next channel in the stack or return `null` if you are creating a new transport channel at the bottom of the stack.","nodes":[{"pos":[0,400],"content":"The <xref:System.ServiceModel.Channels.ChannelBase> class provides an abstract base class implementation of the <xref:System.ServiceModel.Channels.IChannel> interface. It also requires that each channel be associated with a channel manager. Note that the only constructor available for creating instances of <xref:System.ServiceModel.Channels.ChannelBase> requires a `channelManager` input parameter.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelBase&gt;</ph> class provides an abstract base class implementation of the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.IChannel&gt;</ph> interface.","pos":[0,167],"source":"The <xref:System.ServiceModel.Channels.ChannelBase> class provides an abstract base class implementation of the <xref:System.ServiceModel.Channels.IChannel> interface."},{"content":"It also requires that each channel be associated with a channel manager.","pos":[168,240]},{"content":"Note that the only constructor available for creating instances of <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelBase&gt;</ph> requires a <ph id=\"ph2\">`channelManager`</ph> input parameter.","pos":[241,400],"source":" Note that the only constructor available for creating instances of <xref:System.ServiceModel.Channels.ChannelBase> requires a `channelManager` input parameter."}]},{"pos":[407,548],"content":"State changes are managed by inheriting from the <xref:System.ServiceModel.Channels.CommunicationObject> implementation of the state machine.","nodes":[{"content":"State changes are managed by inheriting from the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> implementation of the state machine.","pos":[0,141],"source":"State changes are managed by inheriting from the <xref:System.ServiceModel.Channels.CommunicationObject> implementation of the state machine."}]},{"pos":[555,779],"content":"The <xref:System.ServiceModel.Channels.ChannelBase> gets its default communication timeouts for the open, close, send and receive operations from the <xref:System.ServiceModel.Channels.ChannelManagerBase> associated with it.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelBase&gt;</ph> gets its default communication timeouts for the open, close, send and receive operations from the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.ChannelManagerBase&gt;</ph> associated with it.","pos":[0,224],"source":"The <xref:System.ServiceModel.Channels.ChannelBase> gets its default communication timeouts for the open, close, send and receive operations from the <xref:System.ServiceModel.Channels.ChannelManagerBase> associated with it."}]},{"pos":[786,1083],"content":"The <xref:System.ServiceModel.Channels.ChannelBase> also manages the manager for you. In addition to exposing a reference to the manager, the base class also notifies the manager when channels are created and destroyed. But the reference to the manager is only good until the channel is destroyed.","nodes":[{"content":"The <xref:System.ServiceModel.Channels.ChannelBase> also manages the manager for you. In addition to exposing a reference to the manager, the base class also notifies the manager when channels are created and destroyed. But the reference to the manager is only good until the channel is destroyed.","pos":[0,297],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelBase&gt;</ph> also manages the manager for you.","pos":[0,85],"source":"The <xref:System.ServiceModel.Channels.ChannelBase> also manages the manager for you."},{"content":"In addition to exposing a reference to the manager, the base class also notifies the manager when channels are created and destroyed.","pos":[86,219]},{"content":"But the reference to the manager is only good until the channel is destroyed.","pos":[220,297]}]}]},{"pos":[1090,1274],"content":"Even if you do use the base class, you must still provide behaviors for opening and closing the channel. The default implementations of these methods do not provide useful information.","nodes":[{"content":"Even if you do use the base class, you must still provide behaviors for opening and closing the channel. The default implementations of these methods do not provide useful information.","pos":[0,184],"nodes":[{"content":"Even if you do use the base class, you must still provide behaviors for opening and closing the channel.","pos":[0,104]},{"content":"The default implementations of these methods do not provide useful information.","pos":[105,184]}]}]},{"pos":[1281,1964],"content":"You must also make sure to override <xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A> whenever you implement a channel. <xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A> is an excellent way to communicate information along the channel stack without having to know what channels are below you, or what channels above you may perform queries. Define interfaces that can be queried for available information. Whenever you do not recognize the type argument for <xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A>, delegate down to the next channel in the stack or return `null` if you are creating a new transport channel at the bottom of the stack.","nodes":[{"content":"You must also make sure to override <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A&gt;</ph> whenever you implement a channel.","pos":[0,132],"source":"You must also make sure to override <xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A> whenever you implement a channel."},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A&gt;</ph> is an excellent way to communicate information along the channel stack without having to know what channels are below you, or what channels above you may perform queries.","pos":[133,366],"source":" <xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A> is an excellent way to communicate information along the channel stack without having to know what channels are below you, or what channels above you may perform queries."},{"content":"Define interfaces that can be queried for available information.","pos":[367,431]},{"content":"Whenever you do not recognize the type argument for <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A&gt;</ph>, delegate down to the next channel in the stack or return <ph id=\"ph2\">`null`</ph> if you are creating a new transport channel at the bottom of the stack.","pos":[432,683],"source":" Whenever you do not recognize the type argument for <xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A>, delegate down to the next channel in the stack or return `null` if you are creating a new transport channel at the bottom of the stack."}]}],"pos":[1420,3397],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelBase\"></xref> class.","nodes":[{"pos":[0,102],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.ChannelBase\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelBase\"></xref> class."}],"pos":[8009,8112],"yaml":true},{"content":"Note that the only constructor available for creating instances of <xref:System.ServiceModel.Channels.ChannelBase> requires a `channelManager` input parameter.","nodes":[{"pos":[0,159],"content":"Note that the only constructor available for creating instances of <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelBase&gt;</ph> requires a <ph id=\"ph2\">`channelManager`</ph> input parameter.","source":"Note that the only constructor available for creating instances of <xref:System.ServiceModel.Channels.ChannelBase> requires a `channelManager` input parameter."}],"pos":[8123,8283],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.ChannelManagerBase\"></xref> that provides default timeouts for the channel operations (send, receive, open, and close).","nodes":[{"pos":[0,164],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.ChannelManagerBase\"&gt;&lt;/xref&gt;</ph> that provides default timeouts for the channel operations (send, receive, open, and close).","source":"The <xref href=\"System.ServiceModel.Channels.ChannelManagerBase\"></xref> that provides default timeouts for the channel operations (send, receive, open, and close)."}],"pos":[8514,8679],"yaml":true},{"content":"<code>channelManager</code> is `null`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;channelManager&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>channelManager</code> is `null`."}],"pos":[8855,8894],"yaml":true},{"content":"Gets the default interval of time provided for a close operation to complete.","nodes":[{"pos":[0,77],"content":"Gets the default interval of time provided for a close operation to complete.","nodes":[{"content":"Gets the default interval of time provided for a close operation to complete.","pos":[0,77]}]}],"pos":[10023,10101],"yaml":true},{"content":"Gets the <xref:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout%2A> associated with <xref:System.ServiceModel.Channels.ChannelBase.Manager%2A> for the channel.  \n  \n All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to those methods with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","nodes":[{"pos":[0,173],"content":"Gets the <xref:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout%2A> associated with <xref:System.ServiceModel.Channels.ChannelBase.Manager%2A> for the channel.","nodes":[{"content":"Gets the <ph id=\"ph1\">&lt;xref:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout%2A&gt;</ph> associated with <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.ChannelBase.Manager%2A&gt;</ph> for the channel.","pos":[0,173],"source":"Gets the <xref:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout%2A> associated with <xref:System.ServiceModel.Channels.ChannelBase.Manager%2A> for the channel."}]},{"pos":[180,547],"content":"All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to those methods with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","nodes":[{"content":"All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to those methods with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","pos":[0,367],"nodes":[{"content":"All operations that are potentially lengthy must have a timeout.","pos":[0,64]},{"content":"Methods that do not take explicit timeouts, must delegate to those methods with default timeouts or must not do any work that blocks.","pos":[65,198]},{"content":"Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","pos":[199,367]}]}]}],"pos":[10112,10664],"yaml":true,"extradata":"MT"},{"content":"The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the close operation has to complete before timing out.","nodes":[{"pos":[0,127],"content":"The default <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the close operation has to complete before timing out.","source":"The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the close operation has to complete before timing out."}],"pos":[10803,10931],"yaml":true},{"content":"Gets the default interval of time provided for an open operation to complete.","nodes":[{"pos":[0,77],"content":"Gets the default interval of time provided for an open operation to complete.","nodes":[{"content":"Gets the default interval of time provided for an open operation to complete.","pos":[0,77]}]}],"pos":[12145,12223],"yaml":true},{"content":"Gets the <xref:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout%2A> associated with <xref:System.ServiceModel.Channels.ChannelBase.Manager%2A> for the channel.  \n  \n All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to those methods with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","nodes":[{"pos":[0,172],"content":"Gets the <xref:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout%2A> associated with <xref:System.ServiceModel.Channels.ChannelBase.Manager%2A> for the channel.","nodes":[{"content":"Gets the <ph id=\"ph1\">&lt;xref:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout%2A&gt;</ph> associated with <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.ChannelBase.Manager%2A&gt;</ph> for the channel.","pos":[0,172],"source":"Gets the <xref:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout%2A> associated with <xref:System.ServiceModel.Channels.ChannelBase.Manager%2A> for the channel."}]},{"pos":[179,546],"content":"All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to those methods with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","nodes":[{"content":"All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to those methods with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","pos":[0,367],"nodes":[{"content":"All operations that are potentially lengthy must have a timeout.","pos":[0,64]},{"content":"Methods that do not take explicit timeouts, must delegate to those methods with default timeouts or must not do any work that blocks.","pos":[65,198]},{"content":"Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","pos":[199,367]}]}]}],"pos":[12234,12785],"yaml":true,"extradata":"MT"},{"content":"The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the open operation has to complete before timing out.","nodes":[{"pos":[0,126],"content":"The default <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the open operation has to complete before timing out.","source":"The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the open operation has to complete before timing out."}],"pos":[12923,13050],"yaml":true},{"content":"Gets the default interval of time provided for a receive operation to complete.","nodes":[{"pos":[0,79],"content":"Gets the default interval of time provided for a receive operation to complete.","nodes":[{"content":"Gets the default interval of time provided for a receive operation to complete.","pos":[0,79]}]}],"pos":[14281,14361],"yaml":true},{"content":"Gets the <xref:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout%2A> associated with <xref:System.ServiceModel.Channels.ChannelBase.Manager%2A> for the channel.  \n  \n All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to those methods with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","nodes":[{"pos":[0,175],"content":"Gets the <xref:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout%2A> associated with <xref:System.ServiceModel.Channels.ChannelBase.Manager%2A> for the channel.","nodes":[{"content":"Gets the <ph id=\"ph1\">&lt;xref:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout%2A&gt;</ph> associated with <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.ChannelBase.Manager%2A&gt;</ph> for the channel.","pos":[0,175],"source":"Gets the <xref:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout%2A> associated with <xref:System.ServiceModel.Channels.ChannelBase.Manager%2A> for the channel."}]},{"pos":[182,549],"content":"All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to those methods with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","nodes":[{"content":"All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to those methods with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","pos":[0,367],"nodes":[{"content":"All operations that are potentially lengthy must have a timeout.","pos":[0,64]},{"content":"Methods that do not take explicit timeouts, must delegate to those methods with default timeouts or must not do any work that blocks.","pos":[65,198]},{"content":"Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","pos":[199,367]}]}]}],"pos":[14372,14926],"yaml":true,"extradata":"MT"},{"content":"The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the receive operation has to complete before timing out.","nodes":[{"pos":[0,129],"content":"The default <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the receive operation has to complete before timing out.","source":"The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the receive operation has to complete before timing out."}],"pos":[15058,15188],"yaml":true},{"content":"Gets the default interval of time provided for a send operation to complete.","nodes":[{"pos":[0,76],"content":"Gets the default interval of time provided for a send operation to complete.","nodes":[{"content":"Gets the default interval of time provided for a send operation to complete.","pos":[0,76]}]}],"pos":[16404,16481],"yaml":true},{"content":"Gets the <xref:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout%2A> associated with <xref:System.ServiceModel.Channels.ChannelBase.Manager%2A> for the channel.  \n  \n All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to those methods with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","nodes":[{"pos":[0,172],"content":"Gets the <xref:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout%2A> associated with <xref:System.ServiceModel.Channels.ChannelBase.Manager%2A> for the channel.","nodes":[{"content":"Gets the <ph id=\"ph1\">&lt;xref:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout%2A&gt;</ph> associated with <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.ChannelBase.Manager%2A&gt;</ph> for the channel.","pos":[0,172],"source":"Gets the <xref:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout%2A> associated with <xref:System.ServiceModel.Channels.ChannelBase.Manager%2A> for the channel."}]},{"pos":[179,546],"content":"All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to those methods with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","nodes":[{"content":"All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to those methods with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","pos":[0,367],"nodes":[{"content":"All operations that are potentially lengthy must have a timeout.","pos":[0,64]},{"content":"Methods that do not take explicit timeouts, must delegate to those methods with default timeouts or must not do any work that blocks.","pos":[65,198]},{"content":"Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","pos":[199,367]}]}]}],"pos":[16492,17043],"yaml":true,"extradata":"MT"},{"content":"The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the send operation has to complete before timing out.","nodes":[{"pos":[0,126],"content":"The default <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the send operation has to complete before timing out.","source":"The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the send operation has to complete before timing out."}],"pos":[17172,17299],"yaml":true},{"content":"Returns the typed object requested, if present, from the appropriate layer in the channel stack.","nodes":[{"pos":[0,96],"content":"Returns the typed object requested, if present, from the appropriate layer in the channel stack.","nodes":[{"content":"Returns the typed object requested, if present, from the appropriate layer in the channel stack.","pos":[0,96]}]}],"pos":[18492,18589],"yaml":true},{"content":"Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack. If a layer supports returning the requested object, it returns it. If not, it delegates the call down to the next layer in the stack. If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns `null`.  \n  \n You must also make sure to override <xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A> whenever you implement a channel. <xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A> is an excellent way to communicate information along the channel stack without having to know what channels are below you, or what channels above you may perform queries. Define interfaces that can be queried for available information. Whenever you do not recognize the type argument for <xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A>, delegate down to the next channel in the stack or return `null` if you are creating a new transport channel at the bottom of the stack.","nodes":[{"pos":[0,402],"content":"Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack. If a layer supports returning the requested object, it returns it. If not, it delegates the call down to the next layer in the stack. If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns `null`.","nodes":[{"content":"Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack.","pos":[0,145]},{"content":"If a layer supports returning the requested object, it returns it.","pos":[146,212]},{"content":"If not, it delegates the call down to the next layer in the stack.","pos":[213,279]},{"content":"If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns <ph id=\"ph1\">`null`</ph>.","pos":[280,402],"source":" If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns `null`."}]},{"pos":[409,1092],"content":"You must also make sure to override <xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A> whenever you implement a channel. <xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A> is an excellent way to communicate information along the channel stack without having to know what channels are below you, or what channels above you may perform queries. Define interfaces that can be queried for available information. Whenever you do not recognize the type argument for <xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A>, delegate down to the next channel in the stack or return `null` if you are creating a new transport channel at the bottom of the stack.","nodes":[{"content":"You must also make sure to override <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A&gt;</ph> whenever you implement a channel.","pos":[0,132],"source":"You must also make sure to override <xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A> whenever you implement a channel."},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A&gt;</ph> is an excellent way to communicate information along the channel stack without having to know what channels are below you, or what channels above you may perform queries.","pos":[133,366],"source":" <xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A> is an excellent way to communicate information along the channel stack without having to know what channels are below you, or what channels above you may perform queries."},{"content":"Define interfaces that can be queried for available information.","pos":[367,431]},{"content":"Whenever you do not recognize the type argument for <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A&gt;</ph>, delegate down to the next channel in the stack or return <ph id=\"ph2\">`null`</ph> if you are creating a new transport channel at the bottom of the stack.","pos":[432,683],"source":" Whenever you do not recognize the type argument for <xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A>, delegate down to the next channel in the stack or return `null` if you are creating a new transport channel at the bottom of the stack."}]}],"pos":[18600,19697],"yaml":true,"extradata":"MT"},{"content":"The typed object for which the method is querying.","nodes":[{"pos":[0,50],"content":"The typed object for which the method is querying.","nodes":[{"content":"The typed object for which the method is querying.","pos":[0,50]}]}],"pos":[19844,19895],"yaml":true},{"content":"The typed object <code>T</code> requested, if it is present, or `null`, if it is not.","nodes":[{"pos":[0,85],"content":"The typed object <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> requested, if it is present, or <ph id=\"ph2\">`null`</ph>, if it is not.","source":"The typed object <code>T</code> requested, if it is present, or `null`, if it is not."}],"pos":[19940,20026],"yaml":true},{"content":"Gets the channel manager that is associated with the current channel.","nodes":[{"pos":[0,69],"content":"Gets the channel manager that is associated with the current channel.","nodes":[{"content":"Gets the channel manager that is associated with the current channel.","pos":[0,69]}]}],"pos":[21169,21239],"yaml":true},{"content":"Every <xref:System.ServiceModel.Channels.ChannelBase> must have a <xref:System.ServiceModel.Channels.ChannelManagerBase> associated with it.","nodes":[{"pos":[0,140],"content":"Every <xref:System.ServiceModel.Channels.ChannelBase> must have a <xref:System.ServiceModel.Channels.ChannelManagerBase> associated with it.","nodes":[{"content":"Every <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelBase&gt;</ph> must have a <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.ChannelManagerBase&gt;</ph> associated with it.","pos":[0,140],"source":"Every <xref:System.ServiceModel.Channels.ChannelBase> must have a <xref:System.ServiceModel.Channels.ChannelManagerBase> associated with it."}]}],"pos":[21250,21391],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.ChannelManagerBase\"></xref> that is associated with the current channel.","nodes":[{"pos":[0,117],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.ChannelManagerBase\"&gt;&lt;/xref&gt;</ph> that is associated with the current channel.","source":"The <xref href=\"System.ServiceModel.Channels.ChannelManagerBase\"></xref> that is associated with the current channel."}],"pos":[21580,21698],"yaml":true},{"content":"Uses diagnostic tracing during the transition into the closing state.","nodes":[{"pos":[0,69],"content":"Uses diagnostic tracing during the transition into the closing state.","nodes":[{"content":"Uses diagnostic tracing during the transition into the closing state.","pos":[0,69]}]}],"pos":[22844,22914],"yaml":true},{"content":"This method is reserved for system use and is not expected to be called by the user.","nodes":[{"pos":[0,84],"content":"This method is reserved for system use and is not expected to be called by the user.","nodes":[{"content":"This method is reserved for system use and is not expected to be called by the user.","pos":[0,84]}]}],"pos":[22925,23010],"yaml":true,"extradata":"MT"},{"content":"Gets the interval of time after which the close method, invoked by a communication object, times out.","nodes":[{"pos":[0,101],"content":"Gets the interval of time after which the close method, invoked by a communication object, times out.","nodes":[{"content":"Gets the interval of time after which the close method, invoked by a communication object, times out.","pos":[0,101]}]}],"pos":[24510,24612],"yaml":true},{"content":"<xref:System.ServiceModel.Channels.ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout%2A> calls <xref:System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout%2A>.","nodes":[{"pos":[0,191],"content":"<xref:System.ServiceModel.Channels.ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout%2A> calls <xref:System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout%2A>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout%2A&gt;</ph> calls <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout%2A&gt;</ph>.","pos":[0,191],"source":"<xref:System.ServiceModel.Channels.ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout%2A> calls <xref:System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout%2A>."}]}],"pos":[24623,24815],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Timespan\"></xref> that specifies the interval of time to wait for the close method to time out.","nodes":[{"pos":[0,118],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Timespan\"&gt;&lt;/xref&gt;</ph> that specifies the interval of time to wait for the close method to time out.","source":"The <xref href=\"System.Timespan\"></xref> that specifies the interval of time to wait for the close method to time out."}],"pos":[24978,25097],"yaml":true},{"content":"Gets the interval of time after which the open method, invoked by a communication object, times out.","nodes":[{"pos":[0,100],"content":"Gets the interval of time after which the open method, invoked by a communication object, times out.","nodes":[{"content":"Gets the interval of time after which the open method, invoked by a communication object, times out.","pos":[0,100]}]}],"pos":[26529,26630],"yaml":true},{"content":"<xref:System.ServiceModel.Channels.ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout%2A> calls <xref:System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout%2A>.","nodes":[{"pos":[0,189],"content":"<xref:System.ServiceModel.Channels.ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout%2A> calls <xref:System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout%2A>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout%2A&gt;</ph> calls <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout%2A&gt;</ph>.","pos":[0,189],"source":"<xref:System.ServiceModel.Channels.ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout%2A> calls <xref:System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout%2A>."}]}],"pos":[26641,26831],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Timespan\"></xref> that specifies the interval of time to wait for the open method to time out.","nodes":[{"pos":[0,117],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Timespan\"&gt;&lt;/xref&gt;</ph> that specifies the interval of time to wait for the open method to time out.","source":"The <xref href=\"System.Timespan\"></xref> that specifies the interval of time to wait for the open method to time out."}],"pos":[26993,27111],"yaml":true},{"content":"Gets the interval of time after which the receive method, invoked by a communication object, times out.","nodes":[{"pos":[0,103],"content":"Gets the interval of time after which the receive method, invoked by a communication object, times out.","nodes":[{"content":"Gets the interval of time after which the receive method, invoked by a communication object, times out.","pos":[0,103]}]}],"pos":[28560,28664],"yaml":true},{"content":"<xref:System.ServiceModel.Channels.ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout%2A> calls <xref:System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout%2A>.","nodes":[{"pos":[0,195],"content":"<xref:System.ServiceModel.Channels.ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout%2A> calls <xref:System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout%2A>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout%2A&gt;</ph> calls <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout%2A&gt;</ph>.","pos":[0,195],"source":"<xref:System.ServiceModel.Channels.ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout%2A> calls <xref:System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout%2A>."}]}],"pos":[28675,28871],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Timespan\"></xref> that specifies the interval of time to wait for the receive method to time out.","nodes":[{"pos":[0,120],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Timespan\"&gt;&lt;/xref&gt;</ph> that specifies the interval of time to wait for the receive method to time out.","source":"The <xref href=\"System.Timespan\"></xref> that specifies the interval of time to wait for the receive method to time out."}],"pos":[29036,29157],"yaml":true},{"content":"Gets the interval of time after which the send method, invoked by a communication object, times out.","nodes":[{"pos":[0,100],"content":"Gets the interval of time after which the send method, invoked by a communication object, times out.","nodes":[{"content":"Gets the interval of time after which the send method, invoked by a communication object, times out.","pos":[0,100]}]}],"pos":[30591,30692],"yaml":true},{"content":"<xref:System.ServiceModel.Channels.ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout%2A> calls <xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A>.","nodes":[{"pos":[0,189],"content":"<xref:System.ServiceModel.Channels.ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout%2A> calls <xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout%2A&gt;</ph> calls <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A&gt;</ph>.","pos":[0,189],"source":"<xref:System.ServiceModel.Channels.ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout%2A> calls <xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A>."}]}],"pos":[30703,30893],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Timespan\"></xref> that specifies the interval of time to wait for the send method to time out.","nodes":[{"pos":[0,117],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Timespan\"&gt;&lt;/xref&gt;</ph> that specifies the interval of time to wait for the send method to time out.","source":"The <xref href=\"System.Timespan\"></xref> that specifies the interval of time to wait for the send method to time out."}],"pos":[31055,31173],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.ChannelBase\n  commentId: T:System.ServiceModel.Channels.ChannelBase\n  id: ChannelBase\n  children:\n  - System.ServiceModel.Channels.ChannelBase.#ctor(System.ServiceModel.Channels.ChannelManagerBase)\n  - System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout\n  - System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout\n  - System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout\n  - System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout\n  - System.ServiceModel.Channels.ChannelBase.GetProperty``1\n  - System.ServiceModel.Channels.ChannelBase.Manager\n  - System.ServiceModel.Channels.ChannelBase.OnClosed\n  - System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout\n  - System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout\n  - System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout\n  - System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout\n  langs:\n  - csharp\n  name: ChannelBase\n  nameWithType: ChannelBase\n  fullName: System.ServiceModel.Channels.ChannelBase\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Provides the base implementation for custom channels.\n  remarks: \"The <xref:System.ServiceModel.Channels.ChannelBase> class provides an abstract base class implementation of the <xref:System.ServiceModel.Channels.IChannel> interface. It also requires that each channel be associated with a channel manager. Note that the only constructor available for creating instances of <xref:System.ServiceModel.Channels.ChannelBase> requires a `channelManager` input parameter.  \\n  \\n State changes are managed by inheriting from the <xref:System.ServiceModel.Channels.CommunicationObject> implementation of the state machine.  \\n  \\n The <xref:System.ServiceModel.Channels.ChannelBase> gets its default communication timeouts for the open, close, send and receive operations from the <xref:System.ServiceModel.Channels.ChannelManagerBase> associated with it.  \\n  \\n The <xref:System.ServiceModel.Channels.ChannelBase> also manages the manager for you. In addition to exposing a reference to the manager, the base class also notifies the manager when channels are created and destroyed. But the reference to the manager is only good until the channel is destroyed.  \\n  \\n Even if you do use the base class, you must still provide behaviors for opening and closing the channel. The default implementations of these methods do not provide useful information.  \\n  \\n You must also make sure to override <xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A> whenever you implement a channel. <xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A> is an excellent way to communicate information along the channel stack without having to know what channels are below you, or what channels above you may perform queries. Define interfaces that can be queried for available information. Whenever you do not recognize the type argument for <xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A>, delegate down to the next channel in the stack or return `null` if you are creating a new transport channel at the bottom of the stack.\"\n  syntax:\n    content: 'public abstract class ChannelBase : System.ServiceModel.Channels.CommunicationObject, System.ServiceModel.Channels.IChannel, System.ServiceModel.IDefaultCommunicationTimeouts'\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Channels.CommunicationObject\n  implements:\n  - System.ServiceModel.Channels.IChannel\n  - System.ServiceModel.IDefaultCommunicationTimeouts\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.Channels.CommunicationObject.Abort\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.Close\n  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Closed\n  - System.ServiceModel.Channels.CommunicationObject.Closing\n  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.Fault\n  - System.ServiceModel.Channels.CommunicationObject.Faulted\n  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  - System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  - System.ServiceModel.Channels.CommunicationObject.OnAbort\n  - System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.OnClosing\n  - System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  - System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.OnOpened\n  - System.ServiceModel.Channels.CommunicationObject.OnOpening\n  - System.ServiceModel.Channels.CommunicationObject.Open\n  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Opened\n  - System.ServiceModel.Channels.CommunicationObject.Opening\n  - System.ServiceModel.Channels.CommunicationObject.State\n  - System.ServiceModel.Channels.CommunicationObject.ThisLock\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelBase.#ctor(System.ServiceModel.Channels.ChannelManagerBase)\n  commentId: M:System.ServiceModel.Channels.ChannelBase.#ctor(System.ServiceModel.Channels.ChannelManagerBase)\n  id: '#ctor(System.ServiceModel.Channels.ChannelManagerBase)'\n  parent: System.ServiceModel.Channels.ChannelBase\n  langs:\n  - csharp\n  name: ChannelBase(ChannelManagerBase)\n  nameWithType: ChannelBase.ChannelBase(ChannelManagerBase)\n  fullName: ChannelBase.ChannelBase(ChannelManagerBase)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelBase\"></xref> class.\n  remarks: Note that the only constructor available for creating instances of <xref:System.ServiceModel.Channels.ChannelBase> requires a `channelManager` input parameter.\n  syntax:\n    content: protected ChannelBase (System.ServiceModel.Channels.ChannelManagerBase channelManager);\n    parameters:\n    - id: channelManager\n      type: System.ServiceModel.Channels.ChannelManagerBase\n      description: The <xref href=\"System.ServiceModel.Channels.ChannelManagerBase\"></xref> that provides default timeouts for the channel operations (send, receive, open, and close).\n  overload: System.ServiceModel.Channels.ChannelBase.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>channelManager</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout\n  commentId: P:System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout\n  id: DefaultCloseTimeout\n  parent: System.ServiceModel.Channels.ChannelBase\n  langs:\n  - csharp\n  name: DefaultCloseTimeout\n  nameWithType: ChannelBase.DefaultCloseTimeout\n  fullName: ChannelBase.DefaultCloseTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the default interval of time provided for a close operation to complete.\n  remarks: \"Gets the <xref:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout%2A> associated with <xref:System.ServiceModel.Channels.ChannelBase.Manager%2A> for the channel.  \\n  \\n All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to those methods with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.\"\n  syntax:\n    content: protected override TimeSpan DefaultCloseTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the close operation has to complete before timing out.\n  overload: System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout\n  commentId: P:System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout\n  id: DefaultOpenTimeout\n  parent: System.ServiceModel.Channels.ChannelBase\n  langs:\n  - csharp\n  name: DefaultOpenTimeout\n  nameWithType: ChannelBase.DefaultOpenTimeout\n  fullName: ChannelBase.DefaultOpenTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the default interval of time provided for an open operation to complete.\n  remarks: \"Gets the <xref:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout%2A> associated with <xref:System.ServiceModel.Channels.ChannelBase.Manager%2A> for the channel.  \\n  \\n All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to those methods with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.\"\n  syntax:\n    content: protected override TimeSpan DefaultOpenTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the open operation has to complete before timing out.\n  overload: System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout\n  commentId: P:System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout\n  id: DefaultReceiveTimeout\n  parent: System.ServiceModel.Channels.ChannelBase\n  langs:\n  - csharp\n  name: DefaultReceiveTimeout\n  nameWithType: ChannelBase.DefaultReceiveTimeout\n  fullName: ChannelBase.DefaultReceiveTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the default interval of time provided for a receive operation to complete.\n  remarks: \"Gets the <xref:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout%2A> associated with <xref:System.ServiceModel.Channels.ChannelBase.Manager%2A> for the channel.  \\n  \\n All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to those methods with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.\"\n  syntax:\n    content: protected TimeSpan DefaultReceiveTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the receive operation has to complete before timing out.\n  overload: System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout\n  commentId: P:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout\n  id: DefaultSendTimeout\n  parent: System.ServiceModel.Channels.ChannelBase\n  langs:\n  - csharp\n  name: DefaultSendTimeout\n  nameWithType: ChannelBase.DefaultSendTimeout\n  fullName: ChannelBase.DefaultSendTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the default interval of time provided for a send operation to complete.\n  remarks: \"Gets the <xref:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout%2A> associated with <xref:System.ServiceModel.Channels.ChannelBase.Manager%2A> for the channel.  \\n  \\n All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to those methods with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.\"\n  syntax:\n    content: protected TimeSpan DefaultSendTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the send operation has to complete before timing out.\n  overload: System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelBase.GetProperty``1\n  commentId: M:System.ServiceModel.Channels.ChannelBase.GetProperty``1\n  id: GetProperty``1\n  parent: System.ServiceModel.Channels.ChannelBase\n  langs:\n  - csharp\n  name: GetProperty<T>()\n  nameWithType: ChannelBase.GetProperty<T>()\n  fullName: ChannelBase.GetProperty<T>()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns the typed object requested, if present, from the appropriate layer in the channel stack.\n  remarks: \"Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack. If a layer supports returning the requested object, it returns it. If not, it delegates the call down to the next layer in the stack. If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns `null`.  \\n  \\n You must also make sure to override <xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A> whenever you implement a channel. <xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A> is an excellent way to communicate information along the channel stack without having to know what channels are below you, or what channels above you may perform queries. Define interfaces that can be queried for available information. Whenever you do not recognize the type argument for <xref:System.ServiceModel.Channels.ChannelBase.GetProperty%2A>, delegate down to the next channel in the stack or return `null` if you are creating a new transport channel at the bottom of the stack.\"\n  syntax:\n    content: 'public virtual T GetProperty<T> () where T : class;'\n    parameters: []\n    typeParameters:\n    - id: T\n      description: The typed object for which the method is querying.\n    return:\n      type: T\n      description: The typed object <code>T</code> requested, if it is present, or `null`, if it is not.\n  overload: System.ServiceModel.Channels.ChannelBase.GetProperty``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelBase.Manager\n  commentId: P:System.ServiceModel.Channels.ChannelBase.Manager\n  id: Manager\n  parent: System.ServiceModel.Channels.ChannelBase\n  langs:\n  - csharp\n  name: Manager\n  nameWithType: ChannelBase.Manager\n  fullName: ChannelBase.Manager\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the channel manager that is associated with the current channel.\n  remarks: Every <xref:System.ServiceModel.Channels.ChannelBase> must have a <xref:System.ServiceModel.Channels.ChannelManagerBase> associated with it.\n  syntax:\n    content: protected System.ServiceModel.Channels.ChannelManagerBase Manager { get; }\n    return:\n      type: System.ServiceModel.Channels.ChannelManagerBase\n      description: The <xref href=\"System.ServiceModel.Channels.ChannelManagerBase\"></xref> that is associated with the current channel.\n  overload: System.ServiceModel.Channels.ChannelBase.Manager*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelBase.OnClosed\n  commentId: M:System.ServiceModel.Channels.ChannelBase.OnClosed\n  id: OnClosed\n  parent: System.ServiceModel.Channels.ChannelBase\n  langs:\n  - csharp\n  name: OnClosed()\n  nameWithType: ChannelBase.OnClosed()\n  fullName: ChannelBase.OnClosed()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Uses diagnostic tracing during the transition into the closing state.\n  remarks: This method is reserved for system use and is not expected to be called by the user.\n  syntax:\n    content: protected override void OnClosed ();\n    parameters: []\n  overload: System.ServiceModel.Channels.ChannelBase.OnClosed*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout\n  commentId: P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout\n  id: System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout\n  isEii: true\n  parent: System.ServiceModel.Channels.ChannelBase\n  langs:\n  - csharp\n  name: IDefaultCommunicationTimeouts.CloseTimeout\n  nameWithType: ChannelBase.IDefaultCommunicationTimeouts.CloseTimeout\n  fullName: ChannelBase.IDefaultCommunicationTimeouts.CloseTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the interval of time after which the close method, invoked by a communication object, times out.\n  remarks: <xref:System.ServiceModel.Channels.ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout%2A> calls <xref:System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout%2A>.\n  syntax:\n    content: TimeSpan System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The <xref href=\"System.Timespan\"></xref> that specifies the interval of time to wait for the close method to time out.\n  overload: System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelBase.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout\n  commentId: P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout\n  id: System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout\n  isEii: true\n  parent: System.ServiceModel.Channels.ChannelBase\n  langs:\n  - csharp\n  name: IDefaultCommunicationTimeouts.OpenTimeout\n  nameWithType: ChannelBase.IDefaultCommunicationTimeouts.OpenTimeout\n  fullName: ChannelBase.IDefaultCommunicationTimeouts.OpenTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the interval of time after which the open method, invoked by a communication object, times out.\n  remarks: <xref:System.ServiceModel.Channels.ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout%2A> calls <xref:System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout%2A>.\n  syntax:\n    content: TimeSpan System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The <xref href=\"System.Timespan\"></xref> that specifies the interval of time to wait for the open method to time out.\n  overload: System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelBase.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout\n  commentId: P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout\n  id: System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout\n  isEii: true\n  parent: System.ServiceModel.Channels.ChannelBase\n  langs:\n  - csharp\n  name: IDefaultCommunicationTimeouts.ReceiveTimeout\n  nameWithType: ChannelBase.IDefaultCommunicationTimeouts.ReceiveTimeout\n  fullName: ChannelBase.IDefaultCommunicationTimeouts.ReceiveTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the interval of time after which the receive method, invoked by a communication object, times out.\n  remarks: <xref:System.ServiceModel.Channels.ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout%2A> calls <xref:System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout%2A>.\n  syntax:\n    content: TimeSpan System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The <xref href=\"System.Timespan\"></xref> that specifies the interval of time to wait for the receive method to time out.\n  overload: System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelBase.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout\n  commentId: P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout\n  id: System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout\n  isEii: true\n  parent: System.ServiceModel.Channels.ChannelBase\n  langs:\n  - csharp\n  name: IDefaultCommunicationTimeouts.SendTimeout\n  nameWithType: ChannelBase.IDefaultCommunicationTimeouts.SendTimeout\n  fullName: ChannelBase.IDefaultCommunicationTimeouts.SendTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the interval of time after which the send method, invoked by a communication object, times out.\n  remarks: <xref:System.ServiceModel.Channels.ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout%2A> calls <xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A>.\n  syntax:\n    content: TimeSpan System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The <xref href=\"System.Timespan\"></xref> that specifies the interval of time to wait for the send method to time out.\n  overload: System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelBase.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Channels.CommunicationObject\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: CommunicationObject\n  nameWithType: CommunicationObject\n  fullName: System.ServiceModel.Channels.CommunicationObject\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ServiceModel.Channels.ChannelBase.#ctor(System.ServiceModel.Channels.ChannelManagerBase)\n  parent: System.ServiceModel.Channels.ChannelBase\n  isExternal: false\n  name: ChannelBase(ChannelManagerBase)\n  nameWithType: ChannelBase.ChannelBase(ChannelManagerBase)\n  fullName: ChannelBase.ChannelBase(ChannelManagerBase)\n- uid: System.ServiceModel.Channels.ChannelManagerBase\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: ChannelManagerBase\n  nameWithType: ChannelManagerBase\n  fullName: System.ServiceModel.Channels.ChannelManagerBase\n- uid: System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout\n  parent: System.ServiceModel.Channels.ChannelBase\n  isExternal: false\n  name: DefaultCloseTimeout\n  nameWithType: ChannelBase.DefaultCloseTimeout\n  fullName: ChannelBase.DefaultCloseTimeout\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout\n  parent: System.ServiceModel.Channels.ChannelBase\n  isExternal: false\n  name: DefaultOpenTimeout\n  nameWithType: ChannelBase.DefaultOpenTimeout\n  fullName: ChannelBase.DefaultOpenTimeout\n- uid: System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout\n  parent: System.ServiceModel.Channels.ChannelBase\n  isExternal: false\n  name: DefaultReceiveTimeout\n  nameWithType: ChannelBase.DefaultReceiveTimeout\n  fullName: ChannelBase.DefaultReceiveTimeout\n- uid: System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout\n  parent: System.ServiceModel.Channels.ChannelBase\n  isExternal: false\n  name: DefaultSendTimeout\n  nameWithType: ChannelBase.DefaultSendTimeout\n  fullName: ChannelBase.DefaultSendTimeout\n- uid: System.ServiceModel.Channels.ChannelBase.GetProperty``1\n  parent: System.ServiceModel.Channels.ChannelBase\n  isExternal: false\n  name: GetProperty<T>()\n  nameWithType: ChannelBase.GetProperty<T>()\n  fullName: ChannelBase.GetProperty<T>()\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.ServiceModel.Channels.ChannelBase.Manager\n  parent: System.ServiceModel.Channels.ChannelBase\n  isExternal: false\n  name: Manager\n  nameWithType: ChannelBase.Manager\n  fullName: ChannelBase.Manager\n- uid: System.ServiceModel.Channels.ChannelBase.OnClosed\n  parent: System.ServiceModel.Channels.ChannelBase\n  isExternal: false\n  name: OnClosed()\n  nameWithType: ChannelBase.OnClosed()\n  fullName: ChannelBase.OnClosed()\n- uid: System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout\n  parent: System.ServiceModel.Channels.ChannelBase\n  isExternal: false\n  name: IDefaultCommunicationTimeouts.CloseTimeout\n  nameWithType: ChannelBase.IDefaultCommunicationTimeouts.CloseTimeout\n  fullName: ChannelBase.IDefaultCommunicationTimeouts.CloseTimeout\n- uid: System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout\n  parent: System.ServiceModel.Channels.ChannelBase\n  isExternal: false\n  name: IDefaultCommunicationTimeouts.OpenTimeout\n  nameWithType: ChannelBase.IDefaultCommunicationTimeouts.OpenTimeout\n  fullName: ChannelBase.IDefaultCommunicationTimeouts.OpenTimeout\n- uid: System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout\n  parent: System.ServiceModel.Channels.ChannelBase\n  isExternal: false\n  name: IDefaultCommunicationTimeouts.ReceiveTimeout\n  nameWithType: ChannelBase.IDefaultCommunicationTimeouts.ReceiveTimeout\n  fullName: ChannelBase.IDefaultCommunicationTimeouts.ReceiveTimeout\n- uid: System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout\n  parent: System.ServiceModel.Channels.ChannelBase\n  isExternal: false\n  name: IDefaultCommunicationTimeouts.SendTimeout\n  nameWithType: ChannelBase.IDefaultCommunicationTimeouts.SendTimeout\n  fullName: ChannelBase.IDefaultCommunicationTimeouts.SendTimeout\n- uid: System.ServiceModel.Channels.ChannelBase.#ctor*\n  parent: System.ServiceModel.Channels.ChannelBase\n  isExternal: false\n  name: ChannelBase\n  nameWithType: ChannelBase.ChannelBase\n  fullName: ChannelBase.ChannelBase\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelBase.xml\n- uid: System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout*\n  parent: System.ServiceModel.Channels.ChannelBase\n  isExternal: false\n  name: DefaultCloseTimeout\n  nameWithType: ChannelBase.DefaultCloseTimeout\n  fullName: ChannelBase.DefaultCloseTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelBase.xml\n- uid: System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout*\n  parent: System.ServiceModel.Channels.ChannelBase\n  isExternal: false\n  name: DefaultOpenTimeout\n  nameWithType: ChannelBase.DefaultOpenTimeout\n  fullName: ChannelBase.DefaultOpenTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelBase.xml\n- uid: System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout*\n  parent: System.ServiceModel.Channels.ChannelBase\n  isExternal: false\n  name: DefaultReceiveTimeout\n  nameWithType: ChannelBase.DefaultReceiveTimeout\n  fullName: ChannelBase.DefaultReceiveTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelBase.xml\n- uid: System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout*\n  parent: System.ServiceModel.Channels.ChannelBase\n  isExternal: false\n  name: DefaultSendTimeout\n  nameWithType: ChannelBase.DefaultSendTimeout\n  fullName: ChannelBase.DefaultSendTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelBase.xml\n- uid: System.ServiceModel.Channels.ChannelBase.GetProperty``1*\n  parent: System.ServiceModel.Channels.ChannelBase\n  isExternal: false\n  name: GetProperty<T>\n  nameWithType: ChannelBase.GetProperty<T>\n  fullName: ChannelBase.GetProperty<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelBase.xml\n- uid: System.ServiceModel.Channels.ChannelBase.Manager*\n  parent: System.ServiceModel.Channels.ChannelBase\n  isExternal: false\n  name: Manager\n  nameWithType: ChannelBase.Manager\n  fullName: ChannelBase.Manager\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelBase.xml\n- uid: System.ServiceModel.Channels.ChannelBase.OnClosed*\n  parent: System.ServiceModel.Channels.ChannelBase\n  isExternal: false\n  name: OnClosed\n  nameWithType: ChannelBase.OnClosed\n  fullName: ChannelBase.OnClosed\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelBase.xml\n- uid: System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout*\n  parent: System.ServiceModel.Channels.ChannelBase\n  isExternal: false\n  name: System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout\n  nameWithType: ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout\n  fullName: ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelBase.xml\n- uid: System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout*\n  parent: System.ServiceModel.Channels.ChannelBase\n  isExternal: false\n  name: System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout\n  nameWithType: ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout\n  fullName: ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelBase.xml\n- uid: System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout*\n  parent: System.ServiceModel.Channels.ChannelBase\n  isExternal: false\n  name: System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout\n  nameWithType: ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout\n  fullName: ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelBase.xml\n- uid: System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout*\n  parent: System.ServiceModel.Channels.ChannelBase\n  isExternal: false\n  name: System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout\n  nameWithType: ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout\n  fullName: ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelBase.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.Channels.CommunicationObject.Abort\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Abort()\n  nameWithType: CommunicationObject.Abort()\n  fullName: CommunicationObject.Abort()\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.Close\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close()\n  nameWithType: CommunicationObject.Close()\n  fullName: CommunicationObject.Close()\n- uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close(TimeSpan)\n  nameWithType: CommunicationObject.Close(TimeSpan)\n  fullName: CommunicationObject.Close(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Closed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closed\n  nameWithType: CommunicationObject.Closed\n  fullName: CommunicationObject.Closed\n- uid: System.ServiceModel.Channels.CommunicationObject.Closing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closing\n  nameWithType: CommunicationObject.Closing\n  fullName: CommunicationObject.Closing\n- uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndClose(IAsyncResult)\n  nameWithType: CommunicationObject.EndClose(IAsyncResult)\n  fullName: CommunicationObject.EndClose(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndOpen(IAsyncResult)\n  nameWithType: CommunicationObject.EndOpen(IAsyncResult)\n  fullName: CommunicationObject.EndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.Fault\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Fault()\n  nameWithType: CommunicationObject.Fault()\n  fullName: CommunicationObject.Fault()\n- uid: System.ServiceModel.Channels.CommunicationObject.Faulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Faulted\n  nameWithType: CommunicationObject.Faulted\n  fullName: CommunicationObject.Faulted\n- uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: GetCommunicationObjectType()\n  nameWithType: CommunicationObject.GetCommunicationObjectType()\n  fullName: CommunicationObject.GetCommunicationObjectType()\n- uid: System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: IsDisposed\n  nameWithType: CommunicationObject.IsDisposed\n  fullName: CommunicationObject.IsDisposed\n- uid: System.ServiceModel.Channels.CommunicationObject.OnAbort\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnAbort()\n  nameWithType: CommunicationObject.OnAbort()\n  fullName: CommunicationObject.OnAbort()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnBeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.OnBeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.OnBeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClose(TimeSpan)\n  nameWithType: CommunicationObject.OnClose(TimeSpan)\n  fullName: CommunicationObject.OnClose(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosing()\n  nameWithType: CommunicationObject.OnClosing()\n  fullName: CommunicationObject.OnClosing()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnEndClose(IAsyncResult)\n  nameWithType: CommunicationObject.OnEndClose(IAsyncResult)\n  fullName: CommunicationObject.OnEndClose(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnEndOpen(IAsyncResult)\n  nameWithType: CommunicationObject.OnEndOpen(IAsyncResult)\n  fullName: CommunicationObject.OnEndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnFaulted()\n  nameWithType: CommunicationObject.OnFaulted()\n  fullName: CommunicationObject.OnFaulted()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpen(TimeSpan)\n  nameWithType: CommunicationObject.OnOpen(TimeSpan)\n  fullName: CommunicationObject.OnOpen(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpened\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpened()\n  nameWithType: CommunicationObject.OnOpened()\n  fullName: CommunicationObject.OnOpened()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpening()\n  nameWithType: CommunicationObject.OnOpening()\n  fullName: CommunicationObject.OnOpening()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open()\n  nameWithType: CommunicationObject.Open()\n  fullName: CommunicationObject.Open()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open(TimeSpan)\n  nameWithType: CommunicationObject.Open(TimeSpan)\n  fullName: CommunicationObject.Open(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Opened\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opened\n  nameWithType: CommunicationObject.Opened\n  fullName: CommunicationObject.Opened\n- uid: System.ServiceModel.Channels.CommunicationObject.Opening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opening\n  nameWithType: CommunicationObject.Opening\n  fullName: CommunicationObject.Opening\n- uid: System.ServiceModel.Channels.CommunicationObject.State\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: State\n  nameWithType: CommunicationObject.State\n  fullName: CommunicationObject.State\n- uid: System.ServiceModel.Channels.CommunicationObject.ThisLock\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThisLock\n  nameWithType: CommunicationObject.ThisLock\n  fullName: CommunicationObject.ThisLock\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposed()\n  nameWithType: CommunicationObject.ThrowIfDisposed()\n  fullName: CommunicationObject.ThrowIfDisposed()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrImmutable()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrImmutable()\n  fullName: CommunicationObject.ThrowIfDisposedOrImmutable()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrNotOpen()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrNotOpen()\n  fullName: CommunicationObject.ThrowIfDisposedOrNotOpen()\n- uid: System.ServiceModel.Channels.IChannel\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IChannel\n  nameWithType: IChannel\n  fullName: System.ServiceModel.Channels.IChannel\n- uid: System.ServiceModel.IDefaultCommunicationTimeouts\n  parent: System.ServiceModel\n  isExternal: false\n  name: IDefaultCommunicationTimeouts\n  nameWithType: IDefaultCommunicationTimeouts\n  fullName: System.ServiceModel.IDefaultCommunicationTimeouts\n"}