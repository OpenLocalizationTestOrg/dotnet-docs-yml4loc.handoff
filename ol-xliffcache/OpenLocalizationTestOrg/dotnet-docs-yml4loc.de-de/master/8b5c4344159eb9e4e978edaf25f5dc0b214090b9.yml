### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.LayoutKind
  commentId: T:System.Runtime.InteropServices.LayoutKind
  id: LayoutKind
  children:
  - System.Runtime.InteropServices.LayoutKind.Auto
  - System.Runtime.InteropServices.LayoutKind.Explicit
  - System.Runtime.InteropServices.LayoutKind.Sequential
  langs:
  - csharp
  name: LayoutKind
  nameWithType: LayoutKind
  fullName: System.Runtime.InteropServices.LayoutKind
  type: Enum
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System.Runtime.InteropServices
  summary: Controls the layout of an object when exported to unmanaged code.
  remarks: "This enumeration is used with <xref:System.Runtime.InteropServices.StructLayoutAttribute>. The common language runtime uses the `Auto` layout value by default. To reduce layout-related problems associated with the `Auto` value, C#, Visual Basic, and C++ compilers specify `Sequential` layout for value types.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack?displayProperty=fullName> field controls the alignment of data fields, and thus affects the layout regardless of the <xref:System.Runtime.InteropServices.LayoutKind> value you specify. By default, the value of <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> is 0, which indicates the default packing size for the current platform. For example, when you use the `Explicit` layout value and specify field alignments on byte boundaries, you must set <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> to 1 to get the desired result."
  example:
  - "The following example shows the managed declaration of the `PtInRect` function, which checks whether a point lies within a rectangle, and defines a `Point` structure with Sequential layout and a `Rect` structure with Explicit layout.  \n  \n [!code-cpp[LayoutKind#1](~/samples/snippets/cpp/VS_Snippets_CLR/LayoutKind/CPP/layoutkind.cpp#1)]\n [!code-csharp[LayoutKind#1](~/samples/snippets/csharp/VS_Snippets_CLR/LayoutKind/CS/layoutkind.cs#1)]\n [!code-vb[LayoutKind#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/LayoutKind/VB/layoutkind.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public enum LayoutKind
  inheritance:
  - System.Object
  - System.ValueType
  - System.Enum
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/LayoutKind.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices.LayoutKind.Auto
  commentId: F:System.Runtime.InteropServices.LayoutKind.Auto
  id: Auto
  parent: System.Runtime.InteropServices.LayoutKind
  langs:
  - csharp
  name: Auto
  nameWithType: LayoutKind.Auto
  fullName: LayoutKind.Auto
  type: Field
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System.Runtime.InteropServices
  summary: The runtime automatically chooses an appropriate layout for the members of an object in unmanaged memory. Objects defined with this enumeration member cannot be exposed outside of managed code. Attempting to do so generates an exception.
  syntax:
    content: Auto
    return:
      type: System.Runtime.InteropServices.LayoutKind
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/LayoutKind.xml
- uid: System.Runtime.InteropServices.LayoutKind.Explicit
  commentId: F:System.Runtime.InteropServices.LayoutKind.Explicit
  id: Explicit
  parent: System.Runtime.InteropServices.LayoutKind
  langs:
  - csharp
  name: Explicit
  nameWithType: LayoutKind.Explicit
  fullName: LayoutKind.Explicit
  type: Field
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System.Runtime.InteropServices
  summary: The precise position of each member of an object in unmanaged memory is explicitly controlled, subject to the setting of the <xref href="System.Runtime.InteropServices.StructLayoutAttribute.Pack"></xref> field. Each member must use the <xref href="System.Runtime.InteropServices.FieldOffsetAttribute"></xref> to indicate the position of that field within the type.
  syntax:
    content: Explicit
    return:
      type: System.Runtime.InteropServices.LayoutKind
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/LayoutKind.xml
- uid: System.Runtime.InteropServices.LayoutKind.Sequential
  commentId: F:System.Runtime.InteropServices.LayoutKind.Sequential
  id: Sequential
  parent: System.Runtime.InteropServices.LayoutKind
  langs:
  - csharp
  name: Sequential
  nameWithType: LayoutKind.Sequential
  fullName: LayoutKind.Sequential
  type: Field
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System.Runtime.InteropServices
  summary: The members of the object are laid out sequentially, in the order in which they appear when exported to unmanaged memory. The members are laid out according to the packing specified in <xref href="System.Runtime.InteropServices.StructLayoutAttribute.Pack"></xref>, and can be noncontiguous.
  syntax:
    content: Sequential
    return:
      type: System.Runtime.InteropServices.LayoutKind
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/LayoutKind.xml
references:
- uid: System.Enum
  parent: System
  isExternal: false
  name: Enum
  nameWithType: Enum
  fullName: System.Enum
- uid: System.Runtime.InteropServices.LayoutKind.Auto
  parent: System.Runtime.InteropServices.LayoutKind
  isExternal: false
  name: Auto
  nameWithType: LayoutKind.Auto
  fullName: LayoutKind.Auto
- uid: System.Runtime.InteropServices.LayoutKind
  parent: System.Runtime.InteropServices
  isExternal: false
  name: LayoutKind
  nameWithType: LayoutKind
  fullName: System.Runtime.InteropServices.LayoutKind
- uid: System.Runtime.InteropServices.LayoutKind.Explicit
  parent: System.Runtime.InteropServices.LayoutKind
  isExternal: false
  name: Explicit
  nameWithType: LayoutKind.Explicit
  fullName: LayoutKind.Explicit
- uid: System.Runtime.InteropServices.LayoutKind.Sequential
  parent: System.Runtime.InteropServices.LayoutKind
  isExternal: false
  name: Sequential
  nameWithType: LayoutKind.Sequential
  fullName: LayoutKind.Sequential
