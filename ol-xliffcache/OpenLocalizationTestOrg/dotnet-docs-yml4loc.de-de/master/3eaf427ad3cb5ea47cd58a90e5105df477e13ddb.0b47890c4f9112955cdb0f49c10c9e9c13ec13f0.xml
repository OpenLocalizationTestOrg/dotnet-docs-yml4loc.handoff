{"nodes":[{"content":"Represents deferrable content that is held within BAML as a stream.","nodes":[{"pos":[0,67],"content":"Represents deferrable content that is held within BAML as a stream.","nodes":[{"content":"Represents deferrable content that is held within BAML as a stream.","pos":[0,67]}]}],"pos":[381,449],"yaml":true},{"content":"Deferrable content is precompiled or processed XAML that has not yet been parsed. Deferrable content is exposed as an object for advanced scenarios.  \n  \n <xref:System.Windows.DeferrableContent> has an internal constructor. There is an instantiation  pathway through <xref:System.Windows.DeferrableContentConverter>, where you pass in a stream. You would only use <xref:System.Windows.DeferrableContent> if you are using <xref:System.Windows.Baml2006.Baml2006Reader> for stream processing. This is an advanced scenario where you may have to implement many of the supporting XAML services yourself.","nodes":[{"pos":[0,148],"content":"Deferrable content is precompiled or processed XAML that has not yet been parsed. Deferrable content is exposed as an object for advanced scenarios.","nodes":[{"content":"Deferrable content is precompiled or processed XAML that has not yet been parsed. Deferrable content is exposed as an object for advanced scenarios.","pos":[0,148],"nodes":[{"content":"Deferrable content is precompiled or processed XAML that has not yet been parsed.","pos":[0,81]},{"content":"Deferrable content is exposed as an object for advanced scenarios.","pos":[82,148]}]}]},{"pos":[155,597],"content":"<xref:System.Windows.DeferrableContent> has an internal constructor. There is an instantiation  pathway through <xref:System.Windows.DeferrableContentConverter>, where you pass in a stream. You would only use <xref:System.Windows.DeferrableContent> if you are using <xref:System.Windows.Baml2006.Baml2006Reader> for stream processing. This is an advanced scenario where you may have to implement many of the supporting XAML services yourself.","nodes":[{"content":"<xref:System.Windows.DeferrableContent> has an internal constructor. There is an instantiation  pathway through <xref:System.Windows.DeferrableContentConverter>, where you pass in a stream. You would only use <xref:System.Windows.DeferrableContent> if you are using <xref:System.Windows.Baml2006.Baml2006Reader> for stream processing. This is an advanced scenario where you may have to implement many of the supporting XAML services yourself.","pos":[0,442],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.DeferrableContent&gt;</ph> has an internal constructor.","pos":[0,68],"source":"<xref:System.Windows.DeferrableContent> has an internal constructor."},{"content":"There is an instantiation  pathway through <ph id=\"ph1\">&lt;xref:System.Windows.DeferrableContentConverter&gt;</ph>, where you pass in a stream.","pos":[69,189],"source":" There is an instantiation  pathway through <xref:System.Windows.DeferrableContentConverter>, where you pass in a stream."},{"content":"You would only use <ph id=\"ph1\">&lt;xref:System.Windows.DeferrableContent&gt;</ph> if you are using <ph id=\"ph2\">&lt;xref:System.Windows.Baml2006.Baml2006Reader&gt;</ph> for stream processing.","pos":[190,334],"source":" You would only use <xref:System.Windows.DeferrableContent> if you are using <xref:System.Windows.Baml2006.Baml2006Reader> for stream processing."},{"content":"This is an advanced scenario where you may have to implement many of the supporting XAML services yourself.","pos":[335,442]}]}]}],"pos":[460,1062],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.DeferrableContent\n  commentId: T:System.Windows.DeferrableContent\n  id: DeferrableContent\n  children: []\n  langs:\n  - csharp\n  name: DeferrableContent\n  nameWithType: DeferrableContent\n  fullName: System.Windows.DeferrableContent\n  type: Class\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Represents deferrable content that is held within BAML as a stream.\n  remarks: \"Deferrable content is precompiled or processed XAML that has not yet been parsed. Deferrable content is exposed as an object for advanced scenarios.  \\n  \\n <xref:System.Windows.DeferrableContent> has an internal constructor. There is an instantiation  pathway through <xref:System.Windows.DeferrableContentConverter>, where you pass in a stream. You would only use <xref:System.Windows.DeferrableContent> if you are using <xref:System.Windows.Baml2006.Baml2006Reader> for stream processing. This is an advanced scenario where you may have to implement many of the supporting XAML services yourself.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.DeferrableContentConverter))]\n\n      public class DeferrableContent\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/DeferrableContent.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}