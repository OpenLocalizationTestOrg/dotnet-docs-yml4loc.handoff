{"nodes":[{"content":"Represents a configuration element that specifies additional connection pool settings for a Named Pipe transport. This class cannot be inherited.","nodes":[{"pos":[0,145],"content":"Represents a configuration element that specifies additional connection pool settings for a Named Pipe transport. This class cannot be inherited.","nodes":[{"content":"Represents a configuration element that specifies additional connection pool settings for a Named Pipe transport. This class cannot be inherited.","pos":[0,145],"nodes":[{"content":"Represents a configuration element that specifies additional connection pool settings for a Named Pipe transport.","pos":[0,113]},{"content":"This class cannot be inherited.","pos":[114,145]}]}]}],"pos":[1036,1182],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement\"></xref> class.","nodes":[{"pos":[0,134],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement\"></xref> class."}],"pos":[5767,5902],"yaml":true},{"content":"Gets or sets a string that defines the name of the connection pool used for outgoing channels","nodes":[{"pos":[0,93],"content":"Gets or sets a string that defines the name of the connection pool used for outgoing channels","nodes":[{"content":"Gets or sets a string that defines the name of the connection pool used for outgoing channels","pos":[0,93]}]}],"pos":[7235,7329],"yaml":true},{"content":"In streamed mode, connections are not shared, meaning that connection pooling is disabled. The default is a \"default\" string. You can modify this value to isolate the connections for a particular client into separate groups.","nodes":[{"pos":[0,224],"content":"In streamed mode, connections are not shared, meaning that connection pooling is disabled. The default is a \"default\" string. You can modify this value to isolate the connections for a particular client into separate groups.","nodes":[{"content":"In streamed mode, connections are not shared, meaning that connection pooling is disabled. The default is a \"default\" string. You can modify this value to isolate the connections for a particular client into separate groups.","pos":[0,224],"nodes":[{"content":"In streamed mode, connections are not shared, meaning that connection pooling is disabled.","pos":[0,90]},{"content":"The default is a \"default\" string.","pos":[91,125]},{"content":"You can modify this value to isolate the connections for a particular client into separate groups.","pos":[126,224]}]}]}],"pos":[7340,7565],"yaml":true,"extradata":"MT"},{"content":"A string that defines the name of the connection pool used for outgoing channels","nodes":[{"pos":[0,80],"content":"A string that defines the name of the connection pool used for outgoing channels","nodes":[{"content":"A string that defines the name of the connection pool used for outgoing channels","pos":[0,80]}]}],"pos":[7865,7946],"yaml":true},{"content":"Gets or sets the maximum time the connection can be idle before being disconnected.","nodes":[{"pos":[0,83],"content":"Gets or sets the maximum time the connection can be idle before being disconnected.","nodes":[{"content":"Gets or sets the maximum time the connection can be idle before being disconnected.","pos":[0,83]}]}],"pos":[9335,9419],"yaml":true},{"content":"A positive <xref href=\"System.TimeSpan\"></xref> that specifies the maximum time the connection can be idle before being disconnected. The default is 00:02:00.","nodes":[{"pos":[0,158],"content":"A positive <xref href=\"System.TimeSpan\"></xref> that specifies the maximum time the connection can be idle before being disconnected. The default is 00:02:00.","nodes":[{"content":"A positive <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the maximum time the connection can be idle before being disconnected.","pos":[0,133],"source":"A positive <xref href=\"System.TimeSpan\"></xref> that specifies the maximum time the connection can be idle before being disconnected."},{"content":"The default is 00:02:00.","pos":[134,158]}]}],"pos":[9784,9943],"yaml":true},{"content":"Gets or sets the maximum number of connections to a remote endpoint initiated by the service.","nodes":[{"pos":[0,93],"content":"Gets or sets the maximum number of connections to a remote endpoint initiated by the service.","nodes":[{"content":"Gets or sets the maximum number of connections to a remote endpoint initiated by the service.","pos":[0,93]}]}],"pos":[11465,11559],"yaml":true},{"content":"Connections in excess of the limit are queued until a space below the limit becomes available. This property limits the duration in which connections remain queued before an exception is thrown.  \n  \n This property limits the number of simultaneous active connections from the client to a particular service endpoint. If this value is exceeded by having more active client connections, the service may appear unresponsive to the client. In this case, this value should be adjusted to exceed the maximum number of expected simultaneous client connections to a specific endpoint.","nodes":[{"pos":[0,194],"content":"Connections in excess of the limit are queued until a space below the limit becomes available. This property limits the duration in which connections remain queued before an exception is thrown.","nodes":[{"content":"Connections in excess of the limit are queued until a space below the limit becomes available. This property limits the duration in which connections remain queued before an exception is thrown.","pos":[0,194],"nodes":[{"content":"Connections in excess of the limit are queued until a space below the limit becomes available.","pos":[0,94]},{"content":"This property limits the duration in which connections remain queued before an exception is thrown.","pos":[95,194]}]}]},{"pos":[201,577],"content":"This property limits the number of simultaneous active connections from the client to a particular service endpoint. If this value is exceeded by having more active client connections, the service may appear unresponsive to the client. In this case, this value should be adjusted to exceed the maximum number of expected simultaneous client connections to a specific endpoint.","nodes":[{"content":"This property limits the number of simultaneous active connections from the client to a particular service endpoint. If this value is exceeded by having more active client connections, the service may appear unresponsive to the client. In this case, this value should be adjusted to exceed the maximum number of expected simultaneous client connections to a specific endpoint.","pos":[0,376],"nodes":[{"content":"This property limits the number of simultaneous active connections from the client to a particular service endpoint.","pos":[0,116]},{"content":"If this value is exceeded by having more active client connections, the service may appear unresponsive to the client.","pos":[117,235]},{"content":"In this case, this value should be adjusted to exceed the maximum number of expected simultaneous client connections to a specific endpoint.","pos":[236,376]}]}]}],"pos":[11570,12152],"yaml":true,"extradata":"MT"},{"content":"A positive integer that specifies the maximum number of connections to a remote endpoint initiated by the service. The default is 10.","nodes":[{"pos":[0,133],"content":"A positive integer that specifies the maximum number of connections to a remote endpoint initiated by the service. The default is 10.","nodes":[{"content":"A positive integer that specifies the maximum number of connections to a remote endpoint initiated by the service. The default is 10.","pos":[0,133],"nodes":[{"content":"A positive integer that specifies the maximum number of connections to a remote endpoint initiated by the service.","pos":[0,114]},{"content":"The default is 10.","pos":[115,133]}]}]}],"pos":[12496,12630],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement\n  commentId: T:System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement\n  id: NamedPipeConnectionPoolSettingsElement\n  children:\n  - System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.#ctor\n  - System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.GroupName\n  - System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.IdleTimeout\n  - System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.MaxOutboundConnectionsPerEndpoint\n  - System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.Properties\n  langs:\n  - csharp\n  name: NamedPipeConnectionPoolSettingsElement\n  nameWithType: NamedPipeConnectionPoolSettingsElement\n  fullName: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Represents a configuration element that specifies additional connection pool settings for a Named Pipe transport. This class cannot be inherited.\n  syntax:\n    content: 'public sealed class NamedPipeConnectionPoolSettingsElement : System.ServiceModel.Configuration.ServiceModelConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NamedPipeConnectionPoolSettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.#ctor\n  commentId: M:System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement\n  langs:\n  - csharp\n  name: NamedPipeConnectionPoolSettingsElement()\n  nameWithType: NamedPipeConnectionPoolSettingsElement.NamedPipeConnectionPoolSettingsElement()\n  fullName: NamedPipeConnectionPoolSettingsElement.NamedPipeConnectionPoolSettingsElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement\"></xref> class.\n  syntax:\n    content: public NamedPipeConnectionPoolSettingsElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NamedPipeConnectionPoolSettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.GroupName\n  commentId: P:System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.GroupName\n  id: GroupName\n  parent: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement\n  langs:\n  - csharp\n  name: GroupName\n  nameWithType: NamedPipeConnectionPoolSettingsElement.GroupName\n  fullName: NamedPipeConnectionPoolSettingsElement.GroupName\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a string that defines the name of the connection pool used for outgoing channels\n  remarks: In streamed mode, connections are not shared, meaning that connection pooling is disabled. The default is a \"default\" string. You can modify this value to isolate the connections for a particular client into separate groups.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"groupName\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.StringValidator(MinLength=0)]\n\n      public string GroupName { get; set; }\n    return:\n      type: System.String\n      description: A string that defines the name of the connection pool used for outgoing channels\n  overload: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.GroupName*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.StringValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NamedPipeConnectionPoolSettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.IdleTimeout\n  commentId: P:System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.IdleTimeout\n  id: IdleTimeout\n  parent: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement\n  langs:\n  - csharp\n  name: IdleTimeout\n  nameWithType: NamedPipeConnectionPoolSettingsElement.IdleTimeout\n  fullName: NamedPipeConnectionPoolSettingsElement.IdleTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the maximum time the connection can be idle before being disconnected.\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"idleTimeout\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public TimeSpan IdleTimeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A positive <xref href=\"System.TimeSpan\"></xref> that specifies the maximum time the connection can be idle before being disconnected. The default is 00:02:00.\n  overload: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.IdleTimeout*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NamedPipeConnectionPoolSettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.MaxOutboundConnectionsPerEndpoint\n  commentId: P:System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.MaxOutboundConnectionsPerEndpoint\n  id: MaxOutboundConnectionsPerEndpoint\n  parent: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement\n  langs:\n  - csharp\n  name: MaxOutboundConnectionsPerEndpoint\n  nameWithType: NamedPipeConnectionPoolSettingsElement.MaxOutboundConnectionsPerEndpoint\n  fullName: NamedPipeConnectionPoolSettingsElement.MaxOutboundConnectionsPerEndpoint\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the maximum number of connections to a remote endpoint initiated by the service.\n  remarks: \"Connections in excess of the limit are queued until a space below the limit becomes available. This property limits the duration in which connections remain queued before an exception is thrown.  \\n  \\n This property limits the number of simultaneous active connections from the client to a particular service endpoint. If this value is exceeded by having more active client connections, the service may appear unresponsive to the client. In this case, this value should be adjusted to exceed the maximum number of expected simultaneous client connections to a specific endpoint.\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"maxOutboundConnectionsPerEndpoint\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.IntegerValidator(MinValue=0)]\n\n      public int MaxOutboundConnectionsPerEndpoint { get; set; }\n    return:\n      type: System.Int32\n      description: A positive integer that specifies the maximum number of connections to a remote endpoint initiated by the service. The default is 10.\n  overload: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.MaxOutboundConnectionsPerEndpoint*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.IntegerValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NamedPipeConnectionPoolSettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.Properties\n  commentId: P:System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: NamedPipeConnectionPoolSettingsElement.Properties\n  fullName: NamedPipeConnectionPoolSettingsElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: ''\n  overload: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.Properties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NamedPipeConnectionPoolSettingsElement.xml\nreferences:\n- uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: ServiceModelConfigurationElement\n  nameWithType: ServiceModelConfigurationElement\n  fullName: System.ServiceModel.Configuration.ServiceModelConfigurationElement\n- uid: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.#ctor\n  parent: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement\n  isExternal: false\n  name: NamedPipeConnectionPoolSettingsElement()\n  nameWithType: NamedPipeConnectionPoolSettingsElement.NamedPipeConnectionPoolSettingsElement()\n  fullName: NamedPipeConnectionPoolSettingsElement.NamedPipeConnectionPoolSettingsElement()\n- uid: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.GroupName\n  parent: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement\n  isExternal: false\n  name: GroupName\n  nameWithType: NamedPipeConnectionPoolSettingsElement.GroupName\n  fullName: NamedPipeConnectionPoolSettingsElement.GroupName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.IdleTimeout\n  parent: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement\n  isExternal: false\n  name: IdleTimeout\n  nameWithType: NamedPipeConnectionPoolSettingsElement.IdleTimeout\n  fullName: NamedPipeConnectionPoolSettingsElement.IdleTimeout\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.MaxOutboundConnectionsPerEndpoint\n  parent: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement\n  isExternal: false\n  name: MaxOutboundConnectionsPerEndpoint\n  nameWithType: NamedPipeConnectionPoolSettingsElement.MaxOutboundConnectionsPerEndpoint\n  fullName: NamedPipeConnectionPoolSettingsElement.MaxOutboundConnectionsPerEndpoint\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.Properties\n  parent: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement\n  isExternal: false\n  name: Properties\n  nameWithType: NamedPipeConnectionPoolSettingsElement.Properties\n  fullName: NamedPipeConnectionPoolSettingsElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.#ctor*\n  parent: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement\n  isExternal: false\n  name: NamedPipeConnectionPoolSettingsElement\n  nameWithType: NamedPipeConnectionPoolSettingsElement.NamedPipeConnectionPoolSettingsElement\n  fullName: NamedPipeConnectionPoolSettingsElement.NamedPipeConnectionPoolSettingsElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NamedPipeConnectionPoolSettingsElement.xml\n- uid: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.GroupName*\n  parent: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement\n  isExternal: false\n  name: GroupName\n  nameWithType: NamedPipeConnectionPoolSettingsElement.GroupName\n  fullName: NamedPipeConnectionPoolSettingsElement.GroupName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NamedPipeConnectionPoolSettingsElement.xml\n- uid: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.IdleTimeout*\n  parent: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement\n  isExternal: false\n  name: IdleTimeout\n  nameWithType: NamedPipeConnectionPoolSettingsElement.IdleTimeout\n  fullName: NamedPipeConnectionPoolSettingsElement.IdleTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NamedPipeConnectionPoolSettingsElement.xml\n- uid: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.MaxOutboundConnectionsPerEndpoint*\n  parent: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement\n  isExternal: false\n  name: MaxOutboundConnectionsPerEndpoint\n  nameWithType: NamedPipeConnectionPoolSettingsElement.MaxOutboundConnectionsPerEndpoint\n  fullName: NamedPipeConnectionPoolSettingsElement.MaxOutboundConnectionsPerEndpoint\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NamedPipeConnectionPoolSettingsElement.xml\n- uid: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement.Properties*\n  parent: System.ServiceModel.Configuration.NamedPipeConnectionPoolSettingsElement\n  isExternal: false\n  name: Properties\n  nameWithType: NamedPipeConnectionPoolSettingsElement.Properties\n  fullName: NamedPipeConnectionPoolSettingsElement.Properties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/NamedPipeConnectionPoolSettingsElement.xml\n- uid: System.Configuration.ConfigurationElement.Equals(System.Object)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ConfigurationElement.Equals(Object)\n  fullName: ConfigurationElement.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Configuration.ConfigurationElement.GetHashCode\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ConfigurationElement.GetHashCode()\n  fullName: ConfigurationElement.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.ConfigurationElement.CurrentConfiguration\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: CurrentConfiguration\n  nameWithType: ConfigurationElement.CurrentConfiguration\n  fullName: ConfigurationElement.CurrentConfiguration\n- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: DeserializeElement(XmlReader, Boolean)\n  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n  fullName: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n- uid: System.Configuration.ConfigurationElement.ElementInformation\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementInformation\n  nameWithType: ConfigurationElement.ElementInformation\n  fullName: ConfigurationElement.ElementInformation\n- uid: System.Configuration.ConfigurationElement.ElementProperty\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementProperty\n  nameWithType: ConfigurationElement.ElementProperty\n  fullName: ConfigurationElement.ElementProperty\n- uid: System.Configuration.ConfigurationElement.EvaluationContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: EvaluationContext\n  nameWithType: ConfigurationElement.EvaluationContext\n  fullName: ConfigurationElement.EvaluationContext\n- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedAssemblyString(String)\n  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)\n  fullName: ConfigurationElement.GetTransformedAssemblyString(String)\n- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedTypeString(String)\n  nameWithType: ConfigurationElement.GetTransformedTypeString(String)\n  fullName: ConfigurationElement.GetTransformedTypeString(String)\n- uid: System.Configuration.ConfigurationElement.HasContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: HasContext\n  nameWithType: ConfigurationElement.HasContext\n  fullName: ConfigurationElement.HasContext\n- uid: System.Configuration.ConfigurationElement.Init\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Init()\n  nameWithType: ConfigurationElement.Init()\n  fullName: ConfigurationElement.Init()\n- uid: System.Configuration.ConfigurationElement.InitializeDefault\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: InitializeDefault()\n  nameWithType: ConfigurationElement.InitializeDefault()\n  fullName: ConfigurationElement.InitializeDefault()\n- uid: System.Configuration.ConfigurationElement.IsModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsModified()\n  nameWithType: ConfigurationElement.IsModified()\n  fullName: ConfigurationElement.IsModified()\n- uid: System.Configuration.ConfigurationElement.IsReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsReadOnly()\n  nameWithType: ConfigurationElement.IsReadOnly()\n  fullName: ConfigurationElement.IsReadOnly()\n- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(ConfigurationProperty)\n  nameWithType: ConfigurationElement.Item(ConfigurationProperty)\n  fullName: ConfigurationElement.Item(ConfigurationProperty)\n- uid: System.Configuration.ConfigurationElement.Item(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(String)\n  nameWithType: ConfigurationElement.Item(String)\n  fullName: ConfigurationElement.Item(String)\n- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ListErrors(IList)\n  nameWithType: ConfigurationElement.ListErrors(IList)\n  fullName: ConfigurationElement.ListErrors(IList)\n- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllAttributesExcept\n  nameWithType: ConfigurationElement.LockAllAttributesExcept\n  fullName: ConfigurationElement.LockAllAttributesExcept\n- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllElementsExcept\n  nameWithType: ConfigurationElement.LockAllElementsExcept\n  fullName: ConfigurationElement.LockAllElementsExcept\n- uid: System.Configuration.ConfigurationElement.LockAttributes\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAttributes\n  nameWithType: ConfigurationElement.LockAttributes\n  fullName: ConfigurationElement.LockAttributes\n- uid: System.Configuration.ConfigurationElement.LockElements\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockElements\n  nameWithType: ConfigurationElement.LockElements\n  fullName: ConfigurationElement.LockElements\n- uid: System.Configuration.ConfigurationElement.LockItem\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockItem\n  nameWithType: ConfigurationElement.LockItem\n  fullName: ConfigurationElement.LockItem\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedAttribute(String, String)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedElement(String, XmlReader)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnRequiredPropertyNotFound(String)\n  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)\n  fullName: ConfigurationElement.OnRequiredPropertyNotFound(String)\n- uid: System.Configuration.ConfigurationElement.PostDeserialize\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PostDeserialize()\n  nameWithType: ConfigurationElement.PostDeserialize()\n  fullName: ConfigurationElement.PostDeserialize()\n- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PreSerialize(XmlWriter)\n  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)\n  fullName: ConfigurationElement.PreSerialize(XmlWriter)\n- uid: System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: ConfigurationElement.Reset(ConfigurationElement)\n  fullName: ConfigurationElement.Reset(ConfigurationElement)\n- uid: System.Configuration.ConfigurationElement.ResetModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ResetModified()\n  nameWithType: ConfigurationElement.ResetModified()\n  fullName: ConfigurationElement.ResetModified()\n- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeElement(XmlWriter, Boolean)\n  nameWithType: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n  fullName: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeToXmlElement(XmlWriter, String)\n  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n  fullName: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  fullName: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n- uid: System.Configuration.ConfigurationElement.SetReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetReadOnly()\n  nameWithType: ConfigurationElement.SetReadOnly()\n  fullName: ConfigurationElement.SetReadOnly()\n- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  fullName: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n- uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)\n  parent: System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  isExternal: false\n  name: SetPropertyValueIfNotDefaultValue<T>(String, T)\n  nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)\n  fullName: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)\n"}