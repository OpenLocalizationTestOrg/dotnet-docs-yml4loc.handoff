<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e4aaaad67050b833909859c06ea6d62a712cf7e4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Media.Matrix.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f4be115db0621800cef255f2001d9cbeff70eff9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1dfea6fe766708e325220c422131e7d76527360a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a 3x3 affine transformation matrix used for transformations in 2-D space.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A 3x3 matrix is used for transformations in a <ph id="ph1">[!INCLUDE[TLA2#tla_2d](~/includes/tla2sharptla-2d-md.md)]</ph> x-y plane.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Affine transformation matrices can be multiplied to form any number of linear transformations, such as rotation and skew (shear), followed by translation.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>An affine transformation matrix has its final column equal to (0, 0, 1), so only the members in the first two columns need to be specified.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that vectors are expressed as row-vectors, not column vectors.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> <ph id="ph2">&lt;xref:System.Windows.Media.Matrix&gt;</ph> is stored using row-major order and has the following structure:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The members in the last row, <ph id="ph1">&lt;xref:System.Windows.Media.Matrix.OffsetX%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Matrix.OffsetY%2A&gt;</ph>, represent translation values.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>In methods and properties, the transformation matrix is usually specified as a vector with only six members, as follows:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>(<ph id="ph1">&lt;xref:System.Windows.Media.Matrix.M11%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Matrix.M12%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Media.Matrix.M21%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Media.Matrix.M22%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Media.Matrix.OffsetX%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Media.Matrix.OffsetY%2A&gt;</ph>)</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you can use a <ph id="ph1">&lt;xref:System.Windows.Media.Matrix&gt;</ph> structure directly to translate individual points, or with a <ph id="ph2">&lt;xref:System.Windows.Media.MatrixTransform&gt;</ph> to transform objects, <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> also provides a set of classes that enable you to transform objects without working directly with matrices: <ph id="ph4">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Media.ScaleTransform&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Media.SkewTransform&gt;</ph>, and <ph id="ph7">&lt;xref:System.Windows.Media.TranslateTransform&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Attribute Usage</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Values</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>m11<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Double?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value in the first row and first column of this <ph id="ph1">&lt;xref:System.Windows.Media.Matrix&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Media.Matrix.M11%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>m12<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Double?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value in the first row and second column.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Media.Matrix.M12%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>m21<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Double?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value in the second row and first column.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Media.Matrix.M21%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>m22<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Double?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value in the second row and second column.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Media.Matrix.M22%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>offsetX<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Double?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value in the third row and third column.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Media.Matrix.OffsetX%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>offsetY<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Double?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value in the third row and second column.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Media.Matrix.OffsetY%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure's <ph id="ph2">&lt;xref href="System.Windows.Media.Matrix.M11"&gt;&lt;/xref&gt;</ph> coefficient.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure's <ph id="ph2">&lt;xref href="System.Windows.Media.Matrix.M12"&gt;&lt;/xref&gt;</ph> coefficient.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure's <ph id="ph2">&lt;xref href="System.Windows.Media.Matrix.M21"&gt;&lt;/xref&gt;</ph> coefficient.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure's <ph id="ph2">&lt;xref href="System.Windows.Media.Matrix.M22"&gt;&lt;/xref&gt;</ph> coefficient.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure's <ph id="ph2">&lt;xref href="System.Windows.Media.Matrix.OffsetX"&gt;&lt;/xref&gt;</ph> coefficient.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure's <ph id="ph2">&lt;xref href="System.Windows.Media.Matrix.OffsetY"&gt;&lt;/xref&gt;</ph> coefficient.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Appends the specified <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure to this <ph id="ph2">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation is the same as multiplying this <ph id="ph1">&lt;xref:System.Windows.Media.Matrix&gt;</ph> structure by the parameter <ph id="ph2">`matrix`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Matrix multiplication is not commutative, though, so this operation is not the same as multiplying the parameter <ph id="ph1">`matrix`</ph> by this <ph id="ph2">&lt;xref:System.Windows.Media.Matrix&gt;</ph> structure; that is, (this * <ph id="ph3">`matrix`</ph>) is not the same as (<ph id="ph4">`matrix`</ph> * this).</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure to append to this <ph id="ph2">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets the determinant of this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The determinant of this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Determines whether the specified <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> is a <ph id="ph2">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure that is identical to this <ph id="ph3">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.Matrix&gt;</ph> stores its values as doubles.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the value of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> can lose precision when arithmetic operations are performed on it, a comparison between two <ph id="ph2">&lt;xref:System.Double&gt;</ph> structures that are logically equal might fail.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> to compare.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">o</ph><ept id="p1">&lt;/code&gt;</ept> is a <ph id="ph3">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure that is identical to this <ph id="ph4">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure; otherwise, <ph id="ph5">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Determines whether the specified <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure is identical to this instance.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.Matrix&gt;</ph> stores its values as doubles.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the value of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> can lose precision when arithmetic operations are performed on it, a comparison between two <ph id="ph2">&lt;xref:System.Double&gt;</ph> structures that are logically equal might fail.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The instance of <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> to compare to this instance.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if instances are equal; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Determines whether the two specified <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structures are identical.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.Matrix&gt;</ph> stores its values as doubles.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the value of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> can lose precision when arithmetic operations are performed on it, a comparison between two <ph id="ph2">&lt;xref:System.Double&gt;</ph> structures that are logically equal might fail.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure to compare.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The second <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure to compare.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">matrix1</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">matrix2</ph><ept id="p2">&lt;/code&gt;</ept> are identical; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Returns the hash code for this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The hash code for this instance.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure is invertible.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> has an inverse; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets an identity <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>An identity matrix has a value of 1 in coefficients [1,1],[2,2],[3,3] and a value of 0 in the rest of the coefficients.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>This correlates to setting <ph id="ph1">&lt;xref:System.Windows.Media.Matrix.M11%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Matrix.M22%2A&gt;</ph> to 1 and <ph id="ph3">&lt;xref:System.Windows.Media.Matrix.M12%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Media.Matrix.M21%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Media.Matrix.OffsetX%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Media.Matrix.OffsetY%2A&gt;</ph> to 0.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>In an affine matrix, which is the implementation that <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> uses for the <ph id="ph2">&lt;xref:System.Windows.Media.Matrix&gt;</ph>, structure, coefficients [3,1],[3,2],[3.3] are implied to always have the values 0,0,1 respectively.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an identity matrix, the <ph id="ph1">&lt;xref:System.Windows.Media.Matrix.ToString%2A&gt;</ph> method returns the string "Identity" instead of the coefficients of the <ph id="ph2">&lt;xref:System.Windows.Media.Matrix&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>An identity matrix.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Inverts this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure is not invertible.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure is an identity matrix.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>An identity matrix has a value of 1 in coefficients [1,1],[2,2],[3,3] and a value of 0 in the rest of the coefficients.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>This correlates to setting <ph id="ph1">&lt;xref:System.Windows.Media.Matrix.M11%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Matrix.M22%2A&gt;</ph> to 1 and <ph id="ph3">&lt;xref:System.Windows.Media.Matrix.M12%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Media.Matrix.M21%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Media.Matrix.OffsetX%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Media.Matrix.OffsetY%2A&gt;</ph> to 0.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>In an affine matrix, which is the implementation that <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> uses for the <ph id="ph2">&lt;xref:System.Windows.Media.Matrix&gt;</ph> structure, coefficients [3,1],[3,2],[3.3] are implied to always have the values 0,0,1 respectively.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an identity matrix, the <ph id="ph1">&lt;xref:System.Windows.Media.Matrix.ToString%2A&gt;</ph> method returns the string "Identity", instead of the coefficients of the <ph id="ph2">&lt;xref:System.Windows.Media.Matrix&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure is an identity matrix; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Gets or sets the value of the first row and first column of this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The value of the first row and first column of this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The default value is 1.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Gets or sets the value of the first row and second column of this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the layout of a <ph id="ph1">&lt;xref:System.Windows.Media.Matrix&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The value of the first row and second column of this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The default value is 0.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Gets or sets the value of the second row and first column of this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the layout of a <ph id="ph1">&lt;xref:System.Windows.Media.Matrix&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The value of the second row and first column of this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The default value is 0.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Gets or sets the value of the second row and second column of this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the layout of a <ph id="ph1">&lt;xref:System.Windows.Media.Matrix&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The value of the second row and second column of this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The default value is 1.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Multiplies a <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure by another <ph id="ph2">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>Matrix multiplication is not commutative.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiplying <ph id="ph1">`trans1`</ph> by <ph id="ph2">`trans2`</ph> is not the same as multiplying <ph id="ph3">`trans2`</ph> by <ph id="ph4">`trans1`</ph>.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure to multiply.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The second <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure to multiply.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The result of multiplying <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">trans1</ph><ept id="p1">&lt;/code&gt;</ept> by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">trans2</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Gets or sets the value of the third row and first column of this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Matrix.OffsetX%2A&gt;</ph> property is so named because it specifies the amount to translate the coordinate space along the x-axis.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the layout of a <ph id="ph1">&lt;xref:System.Windows.Media.Matrix&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The value of the third row and first column of this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The default value is 0.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Gets or sets the value of the third row and second column of this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Matrix.OffsetY%2A&gt;</ph> property is so named because it specifies the amount to translate the coordinate space along the y-axis.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the layout of a <ph id="ph1">&lt;xref:System.Windows.Media.Matrix&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The value of the third row and second column of this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The default value is 0.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Determines whether the two specified <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structures are identical.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.Matrix&gt;</ph> stores its values as doubles.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the value of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> can lose precision when arithmetic operations are performed on it, a comparison between two <ph id="ph2">&lt;xref:System.Double&gt;</ph> structures that are logically equal might fail.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure to compare.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The second <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure to compare.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">matrix1</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">matrix2</ph><ept id="p2">&lt;/code&gt;</ept> are identical; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Determines whether the two specified <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structures are not identical.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.Matrix&gt;</ph> stores its values as doubles.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the value of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> can lose precision when arithmetic operations are performed on it, a comparison between two <ph id="ph2">&lt;xref:System.Double&gt;</ph> structures that are logically equal might fail.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure to compare.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The second <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure to compare.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">matrix1</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">matrix2</ph><ept id="p2">&lt;/code&gt;</ept> are not identical; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Multiplies a <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure by another <ph id="ph2">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>Matrix multiplication is not commutative.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiplying <ph id="ph1">`trans1`</ph> by <ph id="ph2">`trans2`</ph> is not the same as multiplying <ph id="ph3">`trans2`</ph> by <ph id="ph4">`trans1`</ph>.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure to multiply.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The second <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure to multiply.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The result of multiplying <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">trans1</ph><ept id="p1">&lt;/code&gt;</ept> by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">trans2</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Converts a <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> representation of a matrix into the equivalent <ph id="ph2">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> representation of the matrix.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The equivalent <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Prepends the specified <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure onto this <ph id="ph2">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation is the same as multiplying the parameter <ph id="ph1">`matrix`</ph> by this <ph id="ph2">&lt;xref:System.Windows.Media.Matrix&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>Matrix multiplication is not commutative, however, so this operation is not the same as multiplying this <ph id="ph1">&lt;xref:System.Windows.Media.Matrix&gt;</ph> structure by the parameter <ph id="ph2">`matrix`</ph>; that is, <ph id="ph3">`matrix`</ph> * this is not the same as this * <ph id="ph4">`matrix`</ph>.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a composite transformation, the order of individual transformations is important.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure to prepend to this <ph id="ph2">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Applies a rotation of the specified angle about the origin of this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The angle of rotation.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Rotates this matrix about the specified point.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The angle, in degrees, by which to rotate this matrix.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The x-coordinate of the point about which to rotate this matrix.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The y-coordinate of the point about which to rotate this matrix.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Prepends a rotation of the specified angle at the specified point to this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a composite transformation, the order of individual transformations is important.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The rotation angle, in degrees.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The x-coordinate of the rotation center.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The y-coordinate of the rotation center.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Prepends a rotation of the specified angle to this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a composite transformation, the order of individual transformations is important.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The angle of rotation to prepend.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Appends the specified scale vector to this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The value by which to scale this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> along the x-axis.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The value by which to scale this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> along the y-axis.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Scales this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> by the specified amount about the specified point.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The amount by which to scale this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> along the x-axis.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The amount by which to scale this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> along the y-axis.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The x-coordinate of the scale operation's center point.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The y-coordinate of the scale operation's center point.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Prepends the specified scale about the specified point of this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a composite transformation, the order of individual transformations is important.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The x-axis scale factor.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The y-axis scale factor.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The x-coordinate of the point about which the scale operation is performed.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The y-coordinate of the point about which the scale operation is performed.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Prepends the specified scale vector to this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a composite transformation, the order of individual transformations is important.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The value by which to scale this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure along the x-axis.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The value by which to scale this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure along the y-axis.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Changes this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure into an identity matrix.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>An identity matrix has a value of 1 in coefficients [1,1],[2,2],[3,3] and a value of 0 in the rest of the coefficients.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>This correlates to setting <ph id="ph1">&lt;xref:System.Windows.Media.Matrix.M11%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Matrix.M22%2A&gt;</ph> to 1 and <ph id="ph3">&lt;xref:System.Windows.Media.Matrix.M12%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Media.Matrix.M21%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Media.Matrix.OffsetX%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Media.Matrix.OffsetY%2A&gt;</ph> to 0.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>In an affine matrix, which is the implementation that <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> uses for the <ph id="ph2">&lt;xref:System.Windows.Media.Matrix&gt;</ph> structure, coefficients [3,1],[3,2],[3.3] are implied to always have the values 0,0,1 respectively.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an identity matrix, the <ph id="ph1">&lt;xref:System.Windows.Media.Matrix.ToString%2A&gt;</ph> method returns the string "Identity", instead of the coefficients of the <ph id="ph2">&lt;xref:System.Windows.Media.Matrix&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Appends a skew of the specified degrees in the x and y dimensions to this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The angle in the x dimension by which to skew this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The angle in the y dimension by which to skew this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Prepends a skew of the specified degrees in the x and y dimensions to this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a composite transformation, the order of individual transformations is important.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The angle in the x dimension by which to skew this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The angle in the y dimension by which to skew this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> representation of this <ph id="ph2">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this <ph id="ph1">&lt;xref:System.Windows.Media.Matrix&gt;</ph> is an <ph id="ph2">&lt;xref:System.Windows.Media.Matrix.Identity%2A&gt;</ph> matrix, the string "Identity" is returned.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing the <ph id="ph2">&lt;xref href="System.Windows.Media.Matrix.M11"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Windows.Media.Matrix.M12"&gt;&lt;/xref&gt;</ph>, <ph id="ph4">&lt;xref href="System.Windows.Media.Matrix.M21"&gt;&lt;/xref&gt;</ph>, <ph id="ph5">&lt;xref href="System.Windows.Media.Matrix.M22"&gt;&lt;/xref&gt;</ph>, <ph id="ph6">&lt;xref href="System.Windows.Media.Matrix.OffsetX"&gt;&lt;/xref&gt;</ph>, and <ph id="ph7">&lt;xref href="System.Windows.Media.Matrix.OffsetY"&gt;&lt;/xref&gt;</ph> values of this <ph id="ph8">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> representation of this <ph id="ph2">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure with culture-specific formatting information.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this <ph id="ph1">&lt;xref:System.Windows.Media.Matrix&gt;</ph> structure is an identity matrix, the string "Identity" is returned.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The culture-specific formatting information.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing the <ph id="ph2">&lt;xref href="System.Windows.Media.Matrix.M11"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Windows.Media.Matrix.M12"&gt;&lt;/xref&gt;</ph>, <ph id="ph4">&lt;xref href="System.Windows.Media.Matrix.M21"&gt;&lt;/xref&gt;</ph>, <ph id="ph5">&lt;xref href="System.Windows.Media.Matrix.M22"&gt;&lt;/xref&gt;</ph>, <ph id="ph6">&lt;xref href="System.Windows.Media.Matrix.OffsetX"&gt;&lt;/xref&gt;</ph>, and <ph id="ph7">&lt;xref href="System.Windows.Media.Matrix.OffsetY"&gt;&lt;/xref&gt;</ph> values of this <ph id="ph8">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Transforms the specified point by the <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> and returns the result.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The point to transform.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The result of transforming <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">point</ph><ept id="p1">&lt;/code&gt;</ept> by this <ph id="ph2">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Transforms the specified points by this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The points to transform.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The original points in the array are replaced by their transformed values.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Transforms the specified vector by this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The vector to transform.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>The result of transforming <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">vector</ph><ept id="p1">&lt;/code&gt;</ept> by this <ph id="ph2">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Transforms the specified vectors by this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The vectors to transform.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>The original vectors in the array are replaced by their transformed values.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Appends a translation of the specified offsets to this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>The amount to offset this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> along the x-axis.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The amount to offset this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> along the y-axis.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Prepends a translation of the specified offsets to this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a composite transformation, the order of individual transformations is important.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>The amount to offset this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> along the x-axis.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The amount to offset this <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> along the y-axis.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Formats the value of the current instance using the specified format.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>The format to use.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic) to use the default format defined for the type of the <ph id="ph2">&lt;xref href="System.IFormattable"&gt;&lt;/xref&gt;</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>The provider to use to format the value.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>The value of the current instance in the specified format.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>