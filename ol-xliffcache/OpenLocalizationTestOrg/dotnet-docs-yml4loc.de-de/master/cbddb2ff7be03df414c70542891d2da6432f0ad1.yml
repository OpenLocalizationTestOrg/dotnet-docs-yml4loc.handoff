### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices._PropertyInfo
  commentId: T:System.Runtime.InteropServices._PropertyInfo
  id: _PropertyInfo
  children:
  - System.Runtime.InteropServices._PropertyInfo.Attributes
  - System.Runtime.InteropServices._PropertyInfo.CanRead
  - System.Runtime.InteropServices._PropertyInfo.CanWrite
  - System.Runtime.InteropServices._PropertyInfo.DeclaringType
  - System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)
  - System.Runtime.InteropServices._PropertyInfo.GetAccessors
  - System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetGetMethod
  - System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetHashCode
  - System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._PropertyInfo.GetIndexParameters
  - System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.GetSetMethod
  - System.Runtime.InteropServices._PropertyInfo.GetType
  - System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)
  - System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])
  - System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)
  - System.Runtime.InteropServices._PropertyInfo.IsSpecialName
  - System.Runtime.InteropServices._PropertyInfo.MemberType
  - System.Runtime.InteropServices._PropertyInfo.Name
  - System.Runtime.InteropServices._PropertyInfo.PropertyType
  - System.Runtime.InteropServices._PropertyInfo.ReflectedType
  - System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])
  - System.Runtime.InteropServices._PropertyInfo.ToString
  langs:
  - csharp
  name: _PropertyInfo
  nameWithType: _PropertyInfo
  fullName: System.Runtime.InteropServices._PropertyInfo
  type: Interface
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Exposes the public members of the <xref href="System.Reflection.PropertyInfo"></xref> class to unmanaged code.
  remarks: "This interface is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n This interface preserves the vtable order of the <xref:System.Reflection.PropertyInfo?displayProperty=fullName> class members that can be accessed by unmanaged COM objects."
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("F59ED4E4-E68F-3218-BD77-061AA82824BF")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface _PropertyInfo
  derivedClasses:
  - System.Reflection.PropertyInfo
  implements: []
  attributes:
  - type: System.CLSCompliantAttribute
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  - type: System.Runtime.InteropServices.GuidAttribute
  - type: System.Runtime.InteropServices.InterfaceTypeAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.Attributes
  commentId: P:System.Runtime.InteropServices._PropertyInfo.Attributes
  id: Attributes
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: Attributes
  nameWithType: _PropertyInfo.Attributes
  fullName: _PropertyInfo.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides COM objects with version-independent access to the <xref href="System.Reflection.PropertyInfo.Attributes"></xref> property.
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.Attributes%2A> property gets the attributes of this property."
  syntax:
    content: public System.Reflection.PropertyAttributes Attributes { get; }
    return:
      type: System.Reflection.PropertyAttributes
      description: The attributes of this property.
  overload: System.Runtime.InteropServices._PropertyInfo.Attributes*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.CanRead
  commentId: P:System.Runtime.InteropServices._PropertyInfo.CanRead
  id: CanRead
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: CanRead
  nameWithType: _PropertyInfo.CanRead
  fullName: _PropertyInfo.CanRead
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides COM objects with version-independent access to the <xref href="System.Reflection.PropertyInfo.CanRead"></xref> property.
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.CanRead%2A> property gets a value indicating whether the property can be read."
  syntax:
    content: public bool CanRead { get; }
    return:
      type: System.Boolean
      description: '`true` if this property can be read; otherwise, `false`.'
  overload: System.Runtime.InteropServices._PropertyInfo.CanRead*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.CanWrite
  commentId: P:System.Runtime.InteropServices._PropertyInfo.CanWrite
  id: CanWrite
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: CanWrite
  nameWithType: _PropertyInfo.CanWrite
  fullName: _PropertyInfo.CanWrite
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides COM objects with version-independent access to the <xref href="System.Reflection.PropertyInfo.CanWrite"></xref> property.
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.CanWrite%2A> property gets a value indicating whether the property can be written to."
  syntax:
    content: public bool CanWrite { get; }
    return:
      type: System.Boolean
      description: '`true` if this property can be written to; otherwise, `false`.'
  overload: System.Runtime.InteropServices._PropertyInfo.CanWrite*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.DeclaringType
  commentId: P:System.Runtime.InteropServices._PropertyInfo.DeclaringType
  id: DeclaringType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: DeclaringType
  nameWithType: _PropertyInfo.DeclaringType
  fullName: _PropertyInfo.DeclaringType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides COM objects with version-independent access to the <xref href="System.Reflection.MemberInfo.DeclaringType"></xref> property.
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member."
  syntax:
    content: public Type DeclaringType { get; }
    return:
      type: System.Type
      description: The `Type` object for the class that declares this member.
  overload: System.Runtime.InteropServices._PropertyInfo.DeclaringType*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)
  commentId: M:System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: _PropertyInfo.Equals(Object)
  fullName: _PropertyInfo.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides COM objects with version-independent access to the <xref href="System.Object.Equals(System.Object)"></xref> method.
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>."
  syntax:
    content: public bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: The <xref href="System.Object"></xref> to compare with the current <xref href="System.Object"></xref>.
    return:
      type: System.Boolean
      description: '`true` if the specified <xref href="System.Object"></xref> is equal to the current <xref href="System.Object"></xref>; otherwise, `false`.'
  overload: System.Runtime.InteropServices._PropertyInfo.Equals*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors
  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetAccessors
  id: GetAccessors
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetAccessors()
  nameWithType: _PropertyInfo.GetAccessors()
  fullName: _PropertyInfo.GetAccessors()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides COM objects with version-independent access to the <xref href="System.Reflection.PropertyInfo.GetAccessors"></xref> method.
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method returns an array whose elements reflect the public `get`, `set`, and other accessors of the property reflected by the current instance."
  syntax:
    content: public System.Reflection.MethodInfo[] GetAccessors ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo[]
      description: An array of <xref href="System.Reflection.MethodInfo"></xref> objects that reflect the public `get`, `set`, and other accessors of the property reflected by the current instance, if accessors are found; otherwise, this method returns an array with zero (0) elements.
  overload: System.Runtime.InteropServices._PropertyInfo.GetAccessors*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)
  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)
  id: GetAccessors(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetAccessors(Boolean)
  nameWithType: _PropertyInfo.GetAccessors(Boolean)
  fullName: _PropertyInfo.GetAccessors(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides COM objects with version-independent access to the <xref href="System.Reflection.PropertyInfo.GetAccessors(System.Boolean)"></xref> method.
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method returns an array whose elements reflect the public and, if specified, non-public `get`, `set`, and other accessors of the property reflected by the current instance."
  syntax:
    content: public System.Reflection.MethodInfo[] GetAccessors (bool nonPublic);
    parameters:
    - id: nonPublic
      type: System.Boolean
      description: '`true` to include non-public methods in the returned `MethodInfo` array; otherwise, `false`.'
    return:
      type: System.Reflection.MethodInfo[]
      description: An array of <xref href="System.Reflection.MethodInfo"></xref> objects whose elements reflect the `get`, `set`, and other accessors of the property reflected by the current instance. If the <code>nonPublic</code> parameter is `true`, this array contains public and non-public `get`, `set`, and other accessors. If <code>nonPublic</code> is `false`, this array contains only public `get`, `set`, and other accessors. If no accessors with the specified visibility are found, this method returns an array with zero (0) elements.
  overload: System.Runtime.InteropServices._PropertyInfo.GetAccessors*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)
  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: _PropertyInfo.GetCustomAttributes(Boolean)
  fullName: _PropertyInfo.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides COM objects with version-independent access to the <xref href="System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)"></xref> method.
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes."
  syntax:
    content: public object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: true to search this member's inheritance chain to find the attributes; otherwise false.
    return:
      type: System.Object[]
      description: An array that contains all the custom attributes, or an array with zero elements if no attributes are defined.
  overload: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)
  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetCustomAttributes(Type, Boolean)
  nameWithType: _PropertyInfo.GetCustomAttributes(Type, Boolean)
  fullName: _PropertyInfo.GetCustomAttributes(Type, Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides COM objects with version-independent access to the <xref href="System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)"></xref> method.
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>."
  syntax:
    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: The type of attribute to search for. Only attributes that are assignable to this type are returned.
    - id: inherit
      type: System.Boolean
      description: true to search this member's inheritance chain to find the attributes; otherwise false.
    return:
      type: System.Object[]
      description: An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.
  overload: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod
  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetGetMethod
  id: GetGetMethod
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetGetMethod()
  nameWithType: _PropertyInfo.GetGetMethod()
  fullName: _PropertyInfo.GetGetMethod()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides COM objects with version-independent access to the <xref href="System.Reflection.PropertyInfo.GetGetMethod"></xref> method.
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> method returns the public `get` accessor for this property."
  syntax:
    content: public System.Reflection.MethodInfo GetGetMethod ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: A <xref href="System.Reflection.MethodInfo"></xref> object representing the public `get` accessor for this property, or `null` if the `get` accessor is non-public or does not exist.
  overload: System.Runtime.InteropServices._PropertyInfo.GetGetMethod*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)
  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)
  id: GetGetMethod(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetGetMethod(Boolean)
  nameWithType: _PropertyInfo.GetGetMethod(Boolean)
  fullName: _PropertyInfo.GetGetMethod(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides COM objects with version-independent access to the <xref href="System.Reflection.PropertyInfo.GetGetMethod(System.Boolean)"></xref> method.
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> method returns the public or non-public `get` accessor for this property."
  syntax:
    content: public System.Reflection.MethodInfo GetGetMethod (bool nonPublic);
    parameters:
    - id: nonPublic
      type: System.Boolean
      description: '`true` to return a non-public `get` accessor; otherwise, `false`.'
    return:
      type: System.Reflection.MethodInfo
      description: A <xref href="System.Reflection.MethodInfo"></xref> object representing the `get` accessor for this property, if the <code>nonPublic</code> parameter is `true`. Or `null` if <code>nonPublic</code> is `false` and the `get` accessor is non-public, or if <code>nonPublic</code> is `true` but no `get` accessors exist.
  overload: System.Runtime.InteropServices._PropertyInfo.GetGetMethod*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.GetHashCode
  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetHashCode
  id: GetHashCode
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: _PropertyInfo.GetHashCode()
  fullName: _PropertyInfo.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides COM objects with version-independent access to the <xref href="System.Object.GetHashCode"></xref> method.
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type. <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table."
  syntax:
    content: public int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: The hash code for the current instance.
  overload: System.Runtime.InteropServices._PropertyInfo.GetHashCode*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: _PropertyInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: _PropertyInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Maps a set of names to a corresponding set of dispatch identifiers.
  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.
  syntax:
    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: Reserved for future use. Must be IID_NULL.
    - id: rgszNames
      type: System.IntPtr
      description: An array of names to be mapped.
    - id: cNames
      type: System.UInt32
      description: The count of the names to be mapped.
    - id: lcid
      type: System.UInt32
      description: The locale context in which to interpret the names.
    - id: rgDispId
      type: System.IntPtr
      description: An array allocated by the caller that receives the identifiers corresponding to the names.
  overload: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters
  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetIndexParameters
  id: GetIndexParameters
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetIndexParameters()
  nameWithType: _PropertyInfo.GetIndexParameters()
  fullName: _PropertyInfo.GetIndexParameters()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides COM objects with version-independent access to the <xref href="System.Reflection.PropertyInfo.GetIndexParameters"></xref> method.
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method returns an array of all the index parameters for the property"
  syntax:
    content: public System.Reflection.ParameterInfo[] GetIndexParameters ();
    parameters: []
    return:
      type: System.Reflection.ParameterInfo[]
      description: An array of type <xref href="System.Reflection.ParameterInfo"></xref> containing the parameters for the indexes.
  overload: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)
  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)
  id: GetSetMethod(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetSetMethod(Boolean)
  nameWithType: _PropertyInfo.GetSetMethod(Boolean)
  fullName: _PropertyInfo.GetSetMethod(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides COM objects with version-independent access to the <xref href="System.Reflection.PropertyInfo.GetSetMethod(System.Boolean)"></xref> method.
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method returns the `set` accessor for this property."
  syntax:
    content: public System.Reflection.MethodInfo GetSetMethod (bool nonPublic);
    parameters:
    - id: nonPublic
      type: System.Boolean
      description: '`true` to return a non-public accessor; otherwise, `false`.'
    return:
      type: System.Reflection.MethodInfo
      description: "One of the values in the following table.  \n  \n <table><thead><tr><th> Value  \n  \n </th><th> Meaning  \n  \n </th></tr></thead><tbody><tr><td> A <xref href=\"System.Reflection.MethodInfo\"></xref> object representing the `Set` method for this property.  \n  \n </td><td> The `set` accessor is public.  \n  \n -or-  \n  \n The <code>nonPublic</code> parameter is `true` and the `set` accessor is non-public.  \n  \n </td></tr><tr><td>`null`</td><td> The <code>nonPublic</code> parameter is `true`, but the property is read-only.  \n  \n -or-  \n  \n The <code>nonPublic</code> parameter is `false` and the `set` accessor is non-public.  \n  \n -or-  \n  \n There is no `set` accessor.  \n  \n </td></tr></tbody></table>"
  overload: System.Runtime.InteropServices._PropertyInfo.GetSetMethod*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod
  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetSetMethod
  id: GetSetMethod
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetSetMethod()
  nameWithType: _PropertyInfo.GetSetMethod()
  fullName: _PropertyInfo.GetSetMethod()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides COM objects with version-independent access to the <xref href="System.Reflection.PropertyInfo.GetSetMethod"></xref> method.
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method returns the public `set` accessor for this property."
  syntax:
    content: public System.Reflection.MethodInfo GetSetMethod ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: The <xref href="System.Reflection.MethodInfo"></xref> object representing the `Set` method for this property if the `set` accessor is public, or `null` if the `set` accessor is not public.
  overload: System.Runtime.InteropServices._PropertyInfo.GetSetMethod*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.GetType
  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetType
  id: GetType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetType()
  nameWithType: _PropertyInfo.GetType()
  fullName: _PropertyInfo.GetType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides COM objects with version-independent access to the <xref href="System.Object.GetType"></xref> method.
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Object.GetType%2A> method gets the type of the current instance."
  syntax:
    content: public Type GetType ();
    parameters: []
    return:
      type: System.Type
      description: A <xref href="System.Type"></xref> object.
  overload: System.Runtime.InteropServices._PropertyInfo.GetType*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: _PropertyInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: _PropertyInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Retrieves the type information for an object, which can be used to get the type information for an interface.
  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.
  syntax:
    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: The type information to return.
    - id: lcid
      type: System.UInt32
      description: The locale identifier for the type information.
    - id: ppTInfo
      type: System.IntPtr
      description: A pointer to the requested type information object.
  overload: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)
  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)
  id: GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetTypeInfoCount(UInt32)
  nameWithType: _PropertyInfo.GetTypeInfoCount(UInt32)
  fullName: _PropertyInfo.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Retrieves the number of type information interfaces that an object provides (either 0 or 1).
  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.
  syntax:
    content: public void GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object. This parameter is passed uninitialized.
  overload: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])
  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])
  id: GetValue(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetValue(Object, Object[])
  nameWithType: _PropertyInfo.GetValue(Object, Object[])
  fullName: _PropertyInfo.GetValue(Object, Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides COM objects with version-independent access to the <xref href="System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])"></xref> method.
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns a literal value associated with the property by a compiler."
  syntax:
    content: public object GetValue (object obj, object[] index);
    parameters:
    - id: obj
      type: System.Object
      description: The object whose property value will be returned.
    - id: index
      type: System.Object[]
      description: Optional index values for indexed properties. This value should be `null` for non-indexed properties.
    return:
      type: System.Object
      description: The property value for the <code>obj</code> parameter.
  overload: System.Runtime.InteropServices._PropertyInfo.GetValue*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  commentId: M:System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: GetValue(Object, BindingFlags, Binder, Object[], CultureInfo)
  nameWithType: _PropertyInfo.GetValue(Object, BindingFlags, Binder, Object[], CultureInfo)
  fullName: _PropertyInfo.GetValue(Object, BindingFlags, Binder, Object[], CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides COM objects with version-independent access to the <xref href="System.Reflection.PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)"></xref> method.
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns the value of a property having the specified binding, index, and <xref:System.Globalization.CultureInfo>."
  syntax:
    content: public object GetValue (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: The object whose property value will be returned.
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: 'The invocation attribute. This must be a bit flag from `BindingFlags`: `InvokeMethod`, `CreateInstance`, `Static`, `GetField`, `SetField`, `GetProperty`, or `SetProperty`. A suitable invocation attribute must be specified. If a static member will be invoked, the `Static` flag of `BindingFlags` must be set.'
    - id: binder
      type: System.Reflection.Binder
      description: An object that enables the binding, coercion of argument types, invocation of members, and retrieval of `MemberInfo` objects through reflection. If <code>binder</code> is `null`, the default binder is used.
    - id: index
      type: System.Object[]
      description: Optional index values for indexed properties. This value should be `null` for non-indexed properties.
    - id: culture
      type: System.Globalization.CultureInfo
      description: The `CultureInfo` object that represents the culture for which the resource will be localized. Note that if the resource is not localized for this culture, the `CultureInfo.Parent` method will be called successively in search of a match. If this value is `null`, the `CultureInfo` is obtained from the `CultureInfo.CurrentUICulture` property.
    return:
      type: System.Object
      description: The property value for the <code>obj</code> parameter.
  overload: System.Runtime.InteropServices._PropertyInfo.GetValue*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  commentId: M:System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: _PropertyInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: _PropertyInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides access to properties and methods exposed by an object.
  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.
  syntax:
    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: An identifier of a member.
    - id: riid
      type: System.Guid
      description: Reserved for future use. Must be IID_NULL.
    - id: lcid
      type: System.UInt32
      description: The locale context in which to interpret arguments.
    - id: wFlags
      type: System.Int16
      description: Flags describing the context of the call.
    - id: pDispParams
      type: System.IntPtr
      description: A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.
    - id: pVarResult
      type: System.IntPtr
      description: A pointer to the location where the result will be stored.
    - id: pExcepInfo
      type: System.IntPtr
      description: A pointer to a structure that contains exception information.
    - id: puArgErr
      type: System.IntPtr
      description: The index of the first argument that has an error.
  overload: System.Runtime.InteropServices._PropertyInfo.Invoke*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)
  commentId: M:System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: IsDefined(Type, Boolean)
  nameWithType: _PropertyInfo.IsDefined(Type, Boolean)
  fullName: _PropertyInfo.IsDefined(Type, Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides COM objects with version-independent access to the <xref href="System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)"></xref> method.
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MemberInfo.IsDefined%2A> method indicates whether one or more instance of the `attributeType` parameter is applied to this member."
  syntax:
    content: public bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: The <xref href="System.Type"></xref> object to which the custom attributes are applied.
    - id: inherit
      type: System.Boolean
      description: true to search this member's inheritance chain to find the attributes; otherwise false.
    return:
      type: System.Boolean
      description: '`true` if one or more instances of the <code>attributeType</code> parameter are applied to this member; otherwise, `false`.'
  overload: System.Runtime.InteropServices._PropertyInfo.IsDefined*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.IsSpecialName
  commentId: P:System.Runtime.InteropServices._PropertyInfo.IsSpecialName
  id: IsSpecialName
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: IsSpecialName
  nameWithType: _PropertyInfo.IsSpecialName
  fullName: _PropertyInfo.IsSpecialName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides COM objects with version-independent access to the <xref href="System.Reflection.PropertyInfo.IsSpecialName"></xref> property.
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.IsSpecialName%2A> property sets a value indicating whether the property is the special name."
  syntax:
    content: public bool IsSpecialName { get; }
    return:
      type: System.Boolean
      description: '`true` if this property is the special name; otherwise, `false`.'
  overload: System.Runtime.InteropServices._PropertyInfo.IsSpecialName*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.MemberType
  commentId: P:System.Runtime.InteropServices._PropertyInfo.MemberType
  id: MemberType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: MemberType
  nameWithType: _PropertyInfo.MemberType
  fullName: _PropertyInfo.MemberType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides COM objects with version-independent access to the <xref href="System.Reflection.PropertyInfo.MemberType"></xref> property.
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a property."
  syntax:
    content: public System.Reflection.MemberTypes MemberType { get; }
    return:
      type: System.Reflection.MemberTypes
      description: One of the <xref href="System.Reflection.MemberTypes"></xref> values indicating that this member is a property.
  overload: System.Runtime.InteropServices._PropertyInfo.MemberType*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.Name
  commentId: P:System.Runtime.InteropServices._PropertyInfo.Name
  id: Name
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: Name
  nameWithType: _PropertyInfo.Name
  fullName: _PropertyInfo.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides COM objects with version-independent access to the <xref href="System.Reflection.MemberInfo.Name"></xref> property.
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> object containing the name of this member.
  overload: System.Runtime.InteropServices._PropertyInfo.Name*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.PropertyType
  commentId: P:System.Runtime.InteropServices._PropertyInfo.PropertyType
  id: PropertyType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: PropertyType
  nameWithType: _PropertyInfo.PropertyType
  fullName: _PropertyInfo.PropertyType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides COM objects with version-independent access to the <xref href="System.Reflection.PropertyInfo.PropertyType"></xref> property.
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.PropertyType%2A> property gets the type of this property."
  syntax:
    content: public Type PropertyType { get; }
    return:
      type: System.Type
      description: The type of this property.
  overload: System.Runtime.InteropServices._PropertyInfo.PropertyType*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.ReflectedType
  commentId: P:System.Runtime.InteropServices._PropertyInfo.ReflectedType
  id: ReflectedType
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: ReflectedType
  nameWithType: _PropertyInfo.ReflectedType
  fullName: _PropertyInfo.ReflectedType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides COM objects with version-independent access to the <xref href="System.Reflection.MemberInfo.ReflectedType"></xref> property.
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this <xref:System.Reflection.MemberInfo> object."
  syntax:
    content: public Type ReflectedType { get; }
    return:
      type: System.Type
      description: The <xref href="System.Type"></xref> object through which this <xref href="System.Reflection.MemberInfo"></xref> object was obtained.
  overload: System.Runtime.InteropServices._PropertyInfo.ReflectedType*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  commentId: M:System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: SetValue(Object, Object, BindingFlags, Binder, Object[], CultureInfo)
  nameWithType: _PropertyInfo.SetValue(Object, Object, BindingFlags, Binder, Object[], CultureInfo)
  fullName: _PropertyInfo.SetValue(Object, Object, BindingFlags, Binder, Object[], CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides COM objects with version-independent access to the <xref href="System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)"></xref> method.
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.FieldInfo.SetValue%2A> method sets the property value for the given object to the given value."
  syntax:
    content: public void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: The object whose property value will be returned.
    - id: value
      type: System.Object
      description: The new value for this property.
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: 'The invocation attribute. This must be a bit flag from <xref href="System.Reflection.BindingFlags"></xref>: `InvokeMethod`, `CreateInstance`, `Static`, `GetField`, `SetField`, `GetProperty`, or `SetProperty`. A suitable invocation attribute must be specified. If a static member will be invoked, the `Static` flag of `BindingFlags` must be set.'
    - id: binder
      type: System.Reflection.Binder
      description: An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <xref href="System.Reflection.MemberInfo"></xref> objects through reflection. If <code>binder</code> is `null`, the default binder is used.
    - id: index
      type: System.Object[]
      description: Optional index values for indexed properties. This value should be `null` for non-indexed properties.
    - id: culture
      type: System.Globalization.CultureInfo
      description: The <xref href="System.Globalization.CultureInfo"></xref> object that represents the culture for which the resource will be localized. Note that if the resource is not localized for this culture, the `CultureInfo.Parent` method will be called successively in search of a match. If this value is `null`, the `CultureInfo` is obtained from the `CultureInfo.CurrentUICulture` property.
  overload: System.Runtime.InteropServices._PropertyInfo.SetValue*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])
  commentId: M:System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])
  id: SetValue(System.Object,System.Object,System.Object[])
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: SetValue(Object, Object, Object[])
  nameWithType: _PropertyInfo.SetValue(Object, Object, Object[])
  fullName: _PropertyInfo.SetValue(Object, Object, Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides COM objects with version-independent access to the <xref href="System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Object[])"></xref> method.
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code.  \n  \n The <xref:System.Reflection.PropertyInfo.SetValue%2A> method sets the value of the property with optional index values for index properties."
  syntax:
    content: public void SetValue (object obj, object value, object[] index);
    parameters:
    - id: obj
      type: System.Object
      description: The object whose property value will be set.
    - id: value
      type: System.Object
      description: The new value for this property.
    - id: index
      type: System.Object[]
      description: Optional index values for indexed properties. This value should be `null` for non-indexed properties.
  overload: System.Runtime.InteropServices._PropertyInfo.SetValue*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices._PropertyInfo.ToString
  commentId: M:System.Runtime.InteropServices._PropertyInfo.ToString
  id: ToString
  parent: System.Runtime.InteropServices._PropertyInfo
  langs:
  - csharp
  name: ToString()
  nameWithType: _PropertyInfo.ToString()
  fullName: _PropertyInfo.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides COM objects with version-independent access to the <xref href="System.Object.ToString"></xref> method.
  remarks: This method is for access to managed classes from unmanaged code and should not be called from managed code.
  syntax:
    content: public string ToString ();
    parameters: []
    return:
      type: System.String
      description: A string that represents the current <xref href="System.Object"></xref>.
  overload: System.Runtime.InteropServices._PropertyInfo.ToString*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Runtime.InteropServices._PropertyInfo.Attributes
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Attributes
  nameWithType: _PropertyInfo.Attributes
  fullName: _PropertyInfo.Attributes
- uid: System.Reflection.PropertyAttributes
  parent: System.Reflection
  isExternal: false
  name: PropertyAttributes
  nameWithType: PropertyAttributes
  fullName: System.Reflection.PropertyAttributes
- uid: System.Runtime.InteropServices._PropertyInfo.CanRead
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: CanRead
  nameWithType: _PropertyInfo.CanRead
  fullName: _PropertyInfo.CanRead
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.InteropServices._PropertyInfo.CanWrite
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: CanWrite
  nameWithType: _PropertyInfo.CanWrite
  fullName: _PropertyInfo.CanWrite
- uid: System.Runtime.InteropServices._PropertyInfo.DeclaringType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: DeclaringType
  nameWithType: _PropertyInfo.DeclaringType
  fullName: _PropertyInfo.DeclaringType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: _PropertyInfo.Equals(Object)
  fullName: _PropertyInfo.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetAccessors()
  nameWithType: _PropertyInfo.GetAccessors()
  fullName: _PropertyInfo.GetAccessors()
- uid: System.Reflection.MethodInfo
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection.MethodInfo[]
  parent: System.Reflection
  isExternal: false
  name: MethodInfo[]
  nameWithType: MethodInfo[]
  fullName: System.Reflection.MethodInfo[]
  spec.csharp:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: System.Reflection.MethodInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetAccessors(Boolean)
  nameWithType: _PropertyInfo.GetAccessors(Boolean)
  fullName: _PropertyInfo.GetAccessors(Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: _PropertyInfo.GetCustomAttributes(Boolean)
  fullName: _PropertyInfo.GetCustomAttributes(Boolean)
- uid: System.Object[]
  parent: System
  isExternal: false
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetCustomAttributes(Type, Boolean)
  nameWithType: _PropertyInfo.GetCustomAttributes(Type, Boolean)
  fullName: _PropertyInfo.GetCustomAttributes(Type, Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetGetMethod()
  nameWithType: _PropertyInfo.GetGetMethod()
  fullName: _PropertyInfo.GetGetMethod()
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetGetMethod(Boolean)
  nameWithType: _PropertyInfo.GetGetMethod(Boolean)
  fullName: _PropertyInfo.GetGetMethod(Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.GetHashCode
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: _PropertyInfo.GetHashCode()
  fullName: _PropertyInfo.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: _PropertyInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: _PropertyInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetIndexParameters()
  nameWithType: _PropertyInfo.GetIndexParameters()
  fullName: _PropertyInfo.GetIndexParameters()
- uid: System.Reflection.ParameterInfo
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo
- uid: System.Reflection.ParameterInfo[]
  parent: System.Reflection
  isExternal: false
  name: ParameterInfo[]
  nameWithType: ParameterInfo[]
  fullName: System.Reflection.ParameterInfo[]
  spec.csharp:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetSetMethod(Boolean)
  nameWithType: _PropertyInfo.GetSetMethod(Boolean)
  fullName: _PropertyInfo.GetSetMethod(Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetSetMethod()
  nameWithType: _PropertyInfo.GetSetMethod()
  fullName: _PropertyInfo.GetSetMethod()
- uid: System.Runtime.InteropServices._PropertyInfo.GetType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetType()
  nameWithType: _PropertyInfo.GetType()
  fullName: _PropertyInfo.GetType()
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: _PropertyInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: _PropertyInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetTypeInfoCount(UInt32)
  nameWithType: _PropertyInfo.GetTypeInfoCount(UInt32)
  fullName: _PropertyInfo.GetTypeInfoCount(UInt32)
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetValue(Object, Object[])
  nameWithType: _PropertyInfo.GetValue(Object, Object[])
  fullName: _PropertyInfo.GetValue(Object, Object[])
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetValue(Object, BindingFlags, Binder, Object[], CultureInfo)
  nameWithType: _PropertyInfo.GetValue(Object, BindingFlags, Binder, Object[], CultureInfo)
  fullName: _PropertyInfo.GetValue(Object, BindingFlags, Binder, Object[], CultureInfo)
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: _PropertyInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: _PropertyInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: IsDefined(Type, Boolean)
  nameWithType: _PropertyInfo.IsDefined(Type, Boolean)
  fullName: _PropertyInfo.IsDefined(Type, Boolean)
- uid: System.Runtime.InteropServices._PropertyInfo.IsSpecialName
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: IsSpecialName
  nameWithType: _PropertyInfo.IsSpecialName
  fullName: _PropertyInfo.IsSpecialName
- uid: System.Runtime.InteropServices._PropertyInfo.MemberType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: MemberType
  nameWithType: _PropertyInfo.MemberType
  fullName: _PropertyInfo.MemberType
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Runtime.InteropServices._PropertyInfo.Name
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Name
  nameWithType: _PropertyInfo.Name
  fullName: _PropertyInfo.Name
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices._PropertyInfo.PropertyType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: PropertyType
  nameWithType: _PropertyInfo.PropertyType
  fullName: _PropertyInfo.PropertyType
- uid: System.Runtime.InteropServices._PropertyInfo.ReflectedType
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: ReflectedType
  nameWithType: _PropertyInfo.ReflectedType
  fullName: _PropertyInfo.ReflectedType
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: SetValue(Object, Object, BindingFlags, Binder, Object[], CultureInfo)
  nameWithType: _PropertyInfo.SetValue(Object, Object, BindingFlags, Binder, Object[], CultureInfo)
  fullName: _PropertyInfo.SetValue(Object, Object, BindingFlags, Binder, Object[], CultureInfo)
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: SetValue(Object, Object, Object[])
  nameWithType: _PropertyInfo.SetValue(Object, Object, Object[])
  fullName: _PropertyInfo.SetValue(Object, Object, Object[])
- uid: System.Runtime.InteropServices._PropertyInfo.ToString
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: ToString()
  nameWithType: _PropertyInfo.ToString()
  fullName: _PropertyInfo.ToString()
- uid: System.Runtime.InteropServices._PropertyInfo.GetAccessors*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetAccessors
  nameWithType: _PropertyInfo.GetAccessors
  fullName: _PropertyInfo.GetAccessors
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
- uid: System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetCustomAttributes
  nameWithType: _PropertyInfo.GetCustomAttributes
  fullName: _PropertyInfo.GetCustomAttributes
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
- uid: System.Runtime.InteropServices._PropertyInfo.GetGetMethod*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetGetMethod
  nameWithType: _PropertyInfo.GetGetMethod
  fullName: _PropertyInfo.GetGetMethod
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
- uid: System.Runtime.InteropServices._PropertyInfo.GetSetMethod*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetSetMethod
  nameWithType: _PropertyInfo.GetSetMethod
  fullName: _PropertyInfo.GetSetMethod
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
- uid: System.Runtime.InteropServices._PropertyInfo.GetValue*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetValue
  nameWithType: _PropertyInfo.GetValue
  fullName: _PropertyInfo.GetValue
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
- uid: System.Runtime.InteropServices._PropertyInfo.SetValue*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: SetValue
  nameWithType: _PropertyInfo.SetValue
  fullName: _PropertyInfo.SetValue
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
- uid: System.Runtime.InteropServices._PropertyInfo.Attributes*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Attributes
  nameWithType: _PropertyInfo.Attributes
  fullName: _PropertyInfo.Attributes
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
- uid: System.Runtime.InteropServices._PropertyInfo.CanRead*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: CanRead
  nameWithType: _PropertyInfo.CanRead
  fullName: _PropertyInfo.CanRead
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
- uid: System.Runtime.InteropServices._PropertyInfo.CanWrite*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: CanWrite
  nameWithType: _PropertyInfo.CanWrite
  fullName: _PropertyInfo.CanWrite
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
- uid: System.Runtime.InteropServices._PropertyInfo.DeclaringType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: DeclaringType
  nameWithType: _PropertyInfo.DeclaringType
  fullName: _PropertyInfo.DeclaringType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
- uid: System.Runtime.InteropServices._PropertyInfo.Equals*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Equals
  nameWithType: _PropertyInfo.Equals
  fullName: _PropertyInfo.Equals
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
- uid: System.Runtime.InteropServices._PropertyInfo.GetHashCode*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetHashCode
  nameWithType: _PropertyInfo.GetHashCode
  fullName: _PropertyInfo.GetHashCode
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
- uid: System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetIDsOfNames
  nameWithType: _PropertyInfo.GetIDsOfNames
  fullName: _PropertyInfo.GetIDsOfNames
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
- uid: System.Runtime.InteropServices._PropertyInfo.GetIndexParameters*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetIndexParameters
  nameWithType: _PropertyInfo.GetIndexParameters
  fullName: _PropertyInfo.GetIndexParameters
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
- uid: System.Runtime.InteropServices._PropertyInfo.GetType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetType
  nameWithType: _PropertyInfo.GetType
  fullName: _PropertyInfo.GetType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfo*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetTypeInfo
  nameWithType: _PropertyInfo.GetTypeInfo
  fullName: _PropertyInfo.GetTypeInfo
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
- uid: System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: GetTypeInfoCount
  nameWithType: _PropertyInfo.GetTypeInfoCount
  fullName: _PropertyInfo.GetTypeInfoCount
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
- uid: System.Runtime.InteropServices._PropertyInfo.Invoke*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Invoke
  nameWithType: _PropertyInfo.Invoke
  fullName: _PropertyInfo.Invoke
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
- uid: System.Runtime.InteropServices._PropertyInfo.IsDefined*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: IsDefined
  nameWithType: _PropertyInfo.IsDefined
  fullName: _PropertyInfo.IsDefined
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
- uid: System.Runtime.InteropServices._PropertyInfo.IsSpecialName*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: IsSpecialName
  nameWithType: _PropertyInfo.IsSpecialName
  fullName: _PropertyInfo.IsSpecialName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
- uid: System.Runtime.InteropServices._PropertyInfo.MemberType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: MemberType
  nameWithType: _PropertyInfo.MemberType
  fullName: _PropertyInfo.MemberType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
- uid: System.Runtime.InteropServices._PropertyInfo.Name*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: Name
  nameWithType: _PropertyInfo.Name
  fullName: _PropertyInfo.Name
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
- uid: System.Runtime.InteropServices._PropertyInfo.PropertyType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: PropertyType
  nameWithType: _PropertyInfo.PropertyType
  fullName: _PropertyInfo.PropertyType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
- uid: System.Runtime.InteropServices._PropertyInfo.ReflectedType*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: ReflectedType
  nameWithType: _PropertyInfo.ReflectedType
  fullName: _PropertyInfo.ReflectedType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
- uid: System.Runtime.InteropServices._PropertyInfo.ToString*
  parent: System.Runtime.InteropServices._PropertyInfo
  isExternal: false
  name: ToString
  nameWithType: _PropertyInfo.ToString
  fullName: _PropertyInfo.ToString
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/_PropertyInfo.xml
