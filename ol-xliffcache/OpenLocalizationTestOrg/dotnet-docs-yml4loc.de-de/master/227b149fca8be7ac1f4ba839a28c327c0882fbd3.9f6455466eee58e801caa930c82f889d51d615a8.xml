{"nodes":[{"content":"An enumeration used with the <xref href=\"System.LoaderOptimizationAttribute\"></xref> class to specify loader optimizations for an executable.","nodes":[{"pos":[0,141],"content":"An enumeration used with the <ph id=\"ph1\">&lt;xref href=\"System.LoaderOptimizationAttribute\"&gt;&lt;/xref&gt;</ph> class to specify loader optimizations for an executable.","source":"An enumeration used with the <xref href=\"System.LoaderOptimizationAttribute\"></xref> class to specify loader optimizations for an executable."}],"pos":[646,788],"yaml":true},{"content":"The meaning of MultiDomainHost changed in the .NET Framework version 2.0. The loader now shares resources across application domains only for assemblies that have been added to the global assembly cache.  \n  \n> [!NOTE]\n>  If custom code access security policy is set for the <xref:System.AppDomain>, by using the <xref:System.AppDomain.SetAppDomainPolicy%2A> property, and the <xref:System.AppDomain.SetAppDomainPolicy%2A> is created using the MultiDomain flag, the effect is the same as specifying the MultiDomainHost flag; that is, only assemblies in the GAC are shared. When this occurs, the loader does not throw an exception and the application does not experience the performance gains associated with the MultiDomain flag.  \n  \n For more information on assembly sharing and domain-neutral assembly loading, see [Application Domains and Assemblies](http://msdn.microsoft.com/en-us/433b04ae-4ba8-4849-9dbd-79194f240346).","nodes":[{"pos":[0,203],"content":"The meaning of MultiDomainHost changed in the .NET Framework version 2.0. The loader now shares resources across application domains only for assemblies that have been added to the global assembly cache.","nodes":[{"content":"The meaning of MultiDomainHost changed in the .NET Framework version 2.0. The loader now shares resources across application domains only for assemblies that have been added to the global assembly cache.","pos":[0,203],"nodes":[{"content":"The meaning of MultiDomainHost changed in the .NET Framework version 2.0.","pos":[0,73]},{"content":"The loader now shares resources across application domains only for assemblies that have been added to the global assembly cache.","pos":[74,203]}]}]},{"pos":[211,729],"content":"[!NOTE]\n If custom code access security policy is set for the <xref:System.AppDomain>, by using the <xref:System.AppDomain.SetAppDomainPolicy%2A> property, and the <xref:System.AppDomain.SetAppDomainPolicy%2A> is created using the MultiDomain flag, the effect is the same as specifying the MultiDomainHost flag; that is, only assemblies in the GAC are shared. When this occurs, the loader does not throw an exception and the application does not experience the performance gains associated with the MultiDomain flag.","leadings":["","> "],"nodes":[{"content":" If custom code access security policy is set for the <xref:System.AppDomain>, by using the <xref:System.AppDomain.SetAppDomainPolicy%2A> property, and the <xref:System.AppDomain.SetAppDomainPolicy%2A> is created using the MultiDomain flag, the effect is the same as specifying the MultiDomainHost flag; that is, only assemblies in the GAC are shared. When this occurs, the loader does not throw an exception and the application does not experience the performance gains associated with the MultiDomain flag.","pos":[8,516],"nodes":[{"content":"If custom code access security policy is set for the <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph>, by using the <ph id=\"ph2\">&lt;xref:System.AppDomain.SetAppDomainPolicy%2A&gt;</ph> property, and the <ph id=\"ph3\">&lt;xref:System.AppDomain.SetAppDomainPolicy%2A&gt;</ph> is created using the MultiDomain flag, the effect is the same as specifying the MultiDomainHost flag; that is, only assemblies in the GAC are shared.","pos":[1,351],"source":" If custom code access security policy is set for the <xref:System.AppDomain>, by using the <xref:System.AppDomain.SetAppDomainPolicy%2A> property, and the <xref:System.AppDomain.SetAppDomainPolicy%2A> is created using the MultiDomain flag, the effect is the same as specifying the MultiDomainHost flag; that is, only assemblies in the GAC are shared."},{"content":"When this occurs, the loader does not throw an exception and the application does not experience the performance gains associated with the MultiDomain flag.","pos":[352,508]}]}]},{"pos":[736,925],"content":"For more information on assembly sharing and domain-neutral assembly loading, see <bpt id=\"p1\">[</bpt>Application Domains and Assemblies<ept id=\"p1\">](http://msdn.microsoft.com/en-us/433b04ae-4ba8-4849-9dbd-79194f240346)</ept>.","source":"For more information on assembly sharing and domain-neutral assembly loading, see [Application Domains and Assemblies](http://msdn.microsoft.com/en-us/433b04ae-4ba8-4849-9dbd-79194f240346)."}],"pos":[799,1732],"yaml":true,"extradata":"MT"},{"content":"Ignored by the common language runtime.","nodes":[{"pos":[0,39],"content":"Ignored by the common language runtime.","nodes":[{"content":"Ignored by the common language runtime.","pos":[0,39]}]}],"pos":[3149,3189],"yaml":true},{"content":"Do not use. This mask selects the domain-related values, screening out the unused <xref href=\"System.LoaderOptimization.DisallowBindings\"></xref> flag.","nodes":[{"pos":[0,151],"content":"Do not use. This mask selects the domain-related values, screening out the unused <xref href=\"System.LoaderOptimization.DisallowBindings\"></xref> flag.","nodes":[{"content":"Do not use.","pos":[0,11]},{"content":"This mask selects the domain-related values, screening out the unused <ph id=\"ph1\">&lt;xref href=\"System.LoaderOptimization.DisallowBindings\"&gt;&lt;/xref&gt;</ph> flag.","pos":[12,151],"source":" This mask selects the domain-related values, screening out the unused <xref href=\"System.LoaderOptimization.DisallowBindings\"></xref> flag."}]}],"pos":[4537,4689],"yaml":true},{"content":"Indicates that the application will probably have many domains that use the same code, and the loader must share maximal internal resources across application domains.","nodes":[{"pos":[0,167],"content":"Indicates that the application will probably have many domains that use the same code, and the loader must share maximal internal resources across application domains.","nodes":[{"content":"Indicates that the application will probably have many domains that use the same code, and the loader must share maximal internal resources across application domains.","pos":[0,167]}]}],"pos":[6037,6205],"yaml":true},{"content":"Indicates that the application will probably host unique code in multiple domains, and the loader must share resources across application domains only for globally available (strong-named) assemblies that have been added to the global assembly cache.","nodes":[{"pos":[0,250],"content":"Indicates that the application will probably host unique code in multiple domains, and the loader must share resources across application domains only for globally available (strong-named) assemblies that have been added to the global assembly cache.","nodes":[{"content":"Indicates that the application will probably host unique code in multiple domains, and the loader must share resources across application domains only for globally available (strong-named) assemblies that have been added to the global assembly cache.","pos":[0,250]}]}],"pos":[7378,7629],"yaml":true},{"content":"Indicates that no optimizations for sharing internal resources are specified. If the default domain or hosting interface specified an optimization, then the loader uses that; otherwise, the loader uses <xref href=\"System.LoaderOptimization.SingleDomain\"></xref>.","nodes":[{"pos":[0,262],"content":"Indicates that no optimizations for sharing internal resources are specified. If the default domain or hosting interface specified an optimization, then the loader uses that; otherwise, the loader uses <xref href=\"System.LoaderOptimization.SingleDomain\"></xref>.","nodes":[{"content":"Indicates that no optimizations for sharing internal resources are specified.","pos":[0,77]},{"content":"If the default domain or hosting interface specified an optimization, then the loader uses that; otherwise, the loader uses <ph id=\"ph1\">&lt;xref href=\"System.LoaderOptimization.SingleDomain\"&gt;&lt;/xref&gt;</ph>.","pos":[78,262],"source":" If the default domain or hosting interface specified an optimization, then the loader uses that; otherwise, the loader uses <xref href=\"System.LoaderOptimization.SingleDomain\"></xref>."}]}],"pos":[8788,9051],"yaml":true},{"content":"Indicates that the application will probably have a single domain, and loader must not share internal resources across application domains.","nodes":[{"pos":[0,139],"content":"Indicates that the application will probably have a single domain, and loader must not share internal resources across application domains.","nodes":[{"content":"Indicates that the application will probably have a single domain, and loader must not share internal resources across application domains.","pos":[0,139]}]}],"pos":[10207,10347],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.LoaderOptimization\n  commentId: T:System.LoaderOptimization\n  id: LoaderOptimization\n  children:\n  - System.LoaderOptimization.DisallowBindings\n  - System.LoaderOptimization.DomainMask\n  - System.LoaderOptimization.MultiDomain\n  - System.LoaderOptimization.MultiDomainHost\n  - System.LoaderOptimization.NotSpecified\n  - System.LoaderOptimization.SingleDomain\n  langs:\n  - csharp\n  name: LoaderOptimization\n  nameWithType: LoaderOptimization\n  fullName: System.LoaderOptimization\n  type: Enum\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System\n  summary: An enumeration used with the <xref href=\"System.LoaderOptimizationAttribute\"></xref> class to specify loader optimizations for an executable.\n  remarks: \"The meaning of MultiDomainHost changed in the .NET Framework version 2.0. The loader now shares resources across application domains only for assemblies that have been added to the global assembly cache.  \\n  \\n> [!NOTE]\\n>  If custom code access security policy is set for the <xref:System.AppDomain>, by using the <xref:System.AppDomain.SetAppDomainPolicy%2A> property, and the <xref:System.AppDomain.SetAppDomainPolicy%2A> is created using the MultiDomain flag, the effect is the same as specifying the MultiDomainHost flag; that is, only assemblies in the GAC are shared. When this occurs, the loader does not throw an exception and the application does not experience the performance gains associated with the MultiDomain flag.  \\n  \\n For more information on assembly sharing and domain-neutral assembly loading, see [Application Domains and Assemblies](http://msdn.microsoft.com/en-us/433b04ae-4ba8-4849-9dbd-79194f240346).\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public enum LoaderOptimization\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/LoaderOptimization.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.LoaderOptimization.DisallowBindings\n  commentId: F:System.LoaderOptimization.DisallowBindings\n  id: DisallowBindings\n  parent: System.LoaderOptimization\n  langs:\n  - csharp\n  name: DisallowBindings\n  nameWithType: LoaderOptimization.DisallowBindings\n  fullName: LoaderOptimization.DisallowBindings\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System\n  summary: Ignored by the common language runtime.\n  syntax:\n    content: >-\n      [System.Obsolete(\"This method has been deprecated. Please use Assembly.Load() instead. http://go.microsoft.com/fwlink/?linkid=14202\")]\n\n      DisallowBindings\n    return:\n      type: System.LoaderOptimization\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/LoaderOptimization.xml\n- uid: System.LoaderOptimization.DomainMask\n  commentId: F:System.LoaderOptimization.DomainMask\n  id: DomainMask\n  parent: System.LoaderOptimization\n  langs:\n  - csharp\n  name: DomainMask\n  nameWithType: LoaderOptimization.DomainMask\n  fullName: LoaderOptimization.DomainMask\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System\n  summary: Do not use. This mask selects the domain-related values, screening out the unused <xref href=\"System.LoaderOptimization.DisallowBindings\"></xref> flag.\n  syntax:\n    content: >-\n      [System.Obsolete(\"This method has been deprecated. Please use Assembly.Load() instead. http://go.microsoft.com/fwlink/?linkid=14202\")]\n\n      DomainMask\n    return:\n      type: System.LoaderOptimization\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/LoaderOptimization.xml\n- uid: System.LoaderOptimization.MultiDomain\n  commentId: F:System.LoaderOptimization.MultiDomain\n  id: MultiDomain\n  parent: System.LoaderOptimization\n  langs:\n  - csharp\n  name: MultiDomain\n  nameWithType: LoaderOptimization.MultiDomain\n  fullName: LoaderOptimization.MultiDomain\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System\n  summary: Indicates that the application will probably have many domains that use the same code, and the loader must share maximal internal resources across application domains.\n  syntax:\n    content: MultiDomain\n    return:\n      type: System.LoaderOptimization\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/LoaderOptimization.xml\n- uid: System.LoaderOptimization.MultiDomainHost\n  commentId: F:System.LoaderOptimization.MultiDomainHost\n  id: MultiDomainHost\n  parent: System.LoaderOptimization\n  langs:\n  - csharp\n  name: MultiDomainHost\n  nameWithType: LoaderOptimization.MultiDomainHost\n  fullName: LoaderOptimization.MultiDomainHost\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System\n  summary: Indicates that the application will probably host unique code in multiple domains, and the loader must share resources across application domains only for globally available (strong-named) assemblies that have been added to the global assembly cache.\n  syntax:\n    content: MultiDomainHost\n    return:\n      type: System.LoaderOptimization\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/LoaderOptimization.xml\n- uid: System.LoaderOptimization.NotSpecified\n  commentId: F:System.LoaderOptimization.NotSpecified\n  id: NotSpecified\n  parent: System.LoaderOptimization\n  langs:\n  - csharp\n  name: NotSpecified\n  nameWithType: LoaderOptimization.NotSpecified\n  fullName: LoaderOptimization.NotSpecified\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System\n  summary: Indicates that no optimizations for sharing internal resources are specified. If the default domain or hosting interface specified an optimization, then the loader uses that; otherwise, the loader uses <xref href=\"System.LoaderOptimization.SingleDomain\"></xref>.\n  syntax:\n    content: NotSpecified\n    return:\n      type: System.LoaderOptimization\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/LoaderOptimization.xml\n- uid: System.LoaderOptimization.SingleDomain\n  commentId: F:System.LoaderOptimization.SingleDomain\n  id: SingleDomain\n  parent: System.LoaderOptimization\n  langs:\n  - csharp\n  name: SingleDomain\n  nameWithType: LoaderOptimization.SingleDomain\n  fullName: LoaderOptimization.SingleDomain\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System\n  summary: Indicates that the application will probably have a single domain, and loader must not share internal resources across application domains.\n  syntax:\n    content: SingleDomain\n    return:\n      type: System.LoaderOptimization\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/LoaderOptimization.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.LoaderOptimization.DisallowBindings\n  parent: System.LoaderOptimization\n  isExternal: false\n  name: DisallowBindings\n  nameWithType: LoaderOptimization.DisallowBindings\n  fullName: LoaderOptimization.DisallowBindings\n- uid: System.LoaderOptimization\n  parent: System\n  isExternal: false\n  name: LoaderOptimization\n  nameWithType: LoaderOptimization\n  fullName: System.LoaderOptimization\n- uid: System.LoaderOptimization.DomainMask\n  parent: System.LoaderOptimization\n  isExternal: false\n  name: DomainMask\n  nameWithType: LoaderOptimization.DomainMask\n  fullName: LoaderOptimization.DomainMask\n- uid: System.LoaderOptimization.MultiDomain\n  parent: System.LoaderOptimization\n  isExternal: false\n  name: MultiDomain\n  nameWithType: LoaderOptimization.MultiDomain\n  fullName: LoaderOptimization.MultiDomain\n- uid: System.LoaderOptimization.MultiDomainHost\n  parent: System.LoaderOptimization\n  isExternal: false\n  name: MultiDomainHost\n  nameWithType: LoaderOptimization.MultiDomainHost\n  fullName: LoaderOptimization.MultiDomainHost\n- uid: System.LoaderOptimization.NotSpecified\n  parent: System.LoaderOptimization\n  isExternal: false\n  name: NotSpecified\n  nameWithType: LoaderOptimization.NotSpecified\n  fullName: LoaderOptimization.NotSpecified\n- uid: System.LoaderOptimization.SingleDomain\n  parent: System.LoaderOptimization\n  isExternal: false\n  name: SingleDomain\n  nameWithType: LoaderOptimization.SingleDomain\n  fullName: LoaderOptimization.SingleDomain\n"}