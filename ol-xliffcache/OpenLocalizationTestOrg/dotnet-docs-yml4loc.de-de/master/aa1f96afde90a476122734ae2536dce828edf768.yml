### YamlMime:ManagedReference
items:
- uid: System.Attribute
  commentId: T:System.Attribute
  id: Attribute
  children:
  - System.Attribute.#ctor
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.Match(System.Object)
  - System.Attribute.TypeId
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  langs:
  - csharp
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute
  type: Class
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Represents the base class for custom attributes.
  remarks: "The <xref:System.Attribute> class associates predefined system information or user-defined custom information with a target element. A target element can be an assembly, class, constructor, delegate, enum, event, field, interface, method, portable executable file module, parameter, property, return value, struct, or another attribute.  \n  \n Information provided by an attribute is also known as metadata. Metadata can be examined at run time by your application to control how your program processes data, or before run time by external tools to control how your application itself is processed or maintained. For example, the .NET Framework predefines and uses attribute types to control run-time behavior, and some programming languages use attribute types to represent language features not directly supported by the .NET Framework common type system.  \n  \n All attribute types derive directly or indirectly from the <xref:System.Attribute> class. Attributes can be applied to any target element; multiple attributes can be applied to the same target element; and attributes can be inherited by an element derived from a target element. Use the <xref:System.AttributeTargets> class to specify the target element to which the attribute is applied.  \n  \n The <xref:System.Attribute> class provides convenient methods to retrieve and test custom attributes. For more information about using attributes, see [Applying Attributes](~/docs/standard/attributes/applying-attributes.md) and [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)."
  example:
  - "The following code example demonstrates the usage of <xref:System.Attribute>.  \n  \n [!code-cpp[AnimalAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/AnimalAttributes/CPP/customattribute.cpp#1)]\n [!code-csharp[AnimalAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/AnimalAttributes/CS/customattribute.cs#1)]\n [!code-vb[AnimalAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AnimalAttributes/VB/customattribute.vb#1)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.All, AllowMultiple=false, Inherited=true)]

      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class Attribute : System.Runtime.InteropServices._Attribute
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.Build.Framework.LoadInSeparateAppDomainAttribute
  - Microsoft.Build.Framework.OutputAttribute
  - Microsoft.Build.Framework.RequiredAttribute
  - Microsoft.Build.Framework.RequiredRuntimeAttribute
  - Microsoft.Build.Framework.RunInMTAAttribute
  - Microsoft.Build.Framework.RunInSTAAttribute
  - Microsoft.FSharp.Core.AbstractClassAttribute
  - Microsoft.FSharp.Core.AllowNullLiteralAttribute
  - Microsoft.FSharp.Core.AutoOpenAttribute
  - Microsoft.FSharp.Core.AutoSerializableAttribute
  - Microsoft.FSharp.Core.ClassAttribute
  - Microsoft.FSharp.Core.CLIEventAttribute
  - Microsoft.FSharp.Core.CLIMutableAttribute
  - Microsoft.FSharp.Core.ComparisonConditionalOnAttribute
  - Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - Microsoft.FSharp.Core.CompilationMappingAttribute
  - Microsoft.FSharp.Core.CompilationRepresentationAttribute
  - Microsoft.FSharp.Core.CompilationSourceNameAttribute
  - Microsoft.FSharp.Core.CompiledNameAttribute
  - Microsoft.FSharp.Core.CompilerMessageAttribute
  - Microsoft.FSharp.Core.CustomComparisonAttribute
  - Microsoft.FSharp.Core.CustomEqualityAttribute
  - Microsoft.FSharp.Core.CustomOperationAttribute
  - Microsoft.FSharp.Core.DefaultAugmentationAttribute
  - Microsoft.FSharp.Core.DefaultValueAttribute
  - Microsoft.FSharp.Core.EntryPointAttribute
  - Microsoft.FSharp.Core.EqualityConditionalOnAttribute
  - Microsoft.FSharp.Core.ExperimentalAttribute
  - Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute
  - Microsoft.FSharp.Core.GeneralizableValueAttribute
  - Microsoft.FSharp.Core.InterfaceAttribute
  - Microsoft.FSharp.Core.LiteralAttribute
  - Microsoft.FSharp.Core.MeasureAnnotatedAbbreviationAttribute
  - Microsoft.FSharp.Core.MeasureAttribute
  - Microsoft.FSharp.Core.NoComparisonAttribute
  - Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  - Microsoft.FSharp.Core.NoEqualityAttribute
  - Microsoft.FSharp.Core.OptionalArgumentAttribute
  - Microsoft.FSharp.Core.ProjectionParameterAttribute
  - Microsoft.FSharp.Core.ReferenceEqualityAttribute
  - Microsoft.FSharp.Core.ReflectedDefinitionAttribute
  - Microsoft.FSharp.Core.RequireQualifiedAccessAttribute
  - Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute
  - Microsoft.FSharp.Core.SealedAttribute
  - Microsoft.FSharp.Core.StructAttribute
  - Microsoft.FSharp.Core.StructuralComparisonAttribute
  - Microsoft.FSharp.Core.StructuralEqualityAttribute
  - Microsoft.FSharp.Core.StructuredFormatDisplayAttribute
  - Microsoft.FSharp.Core.UnverifiableAttribute
  - Microsoft.FSharp.Core.VolatileFieldAttribute
  - Microsoft.FSharp.Core.CompilerServices.TypeProviderAssemblyAttribute
  - Microsoft.FSharp.Core.CompilerServices.TypeProviderAttribute
  - Microsoft.FSharp.Core.CompilerServices.TypeProviderDefinitionLocationAttribute
  - Microsoft.FSharp.Core.CompilerServices.TypeProviderEditorHideMethodsAttribute
  - Microsoft.FSharp.Core.CompilerServices.TypeProviderXmlDocAttribute
  - Microsoft.JScript.Expando
  - Microsoft.JScript.Hide
  - Microsoft.JScript.JSFunctionAttribute
  - Microsoft.JScript.NotRecommended
  - Microsoft.JScript.Override
  - Microsoft.JScript.ReferenceAttribute
  - Microsoft.SqlServer.Server.SqlFacetAttribute
  - Microsoft.SqlServer.Server.SqlFunctionAttribute
  - Microsoft.SqlServer.Server.SqlProcedureAttribute
  - Microsoft.SqlServer.Server.SqlTriggerAttribute
  - Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  - Microsoft.VisualBasic.ComClassAttribute
  - Microsoft.VisualBasic.HideModuleNameAttribute
  - Microsoft.VisualBasic.MyGroupCollectionAttribute
  - Microsoft.VisualBasic.VBFixedArrayAttribute
  - Microsoft.VisualBasic.VBFixedStringAttribute
  - Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute
  - Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute
  - Microsoft.VisualBasic.CompilerServices.OptionTextAttribute
  - Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute
  - Microsoft.VisualC.DebugInfoInPDBAttribute
  - Microsoft.VisualC.DecoratedNameAttribute
  - Microsoft.VisualC.MiscellaneousBitsAttribute
  - System.AttributeUsageAttribute
  - System.CLSCompliantAttribute
  - System.ContextStaticAttribute
  - System.FlagsAttribute
  - System.LoaderOptimizationAttribute
  - System.MTAThreadAttribute
  - System.NonSerializedAttribute
  - System.ObsoleteAttribute
  - System.ParamArrayAttribute
  - System.SerializableAttribute
  - System.STAThreadAttribute
  - System.ThreadStaticAttribute
  - System.Activities.OverloadGroupAttribute
  - System.Activities.RequiredArgumentAttribute
  - System.Activities.Presentation.ActivityDesignerOptionsAttribute
  - System.Activities.Presentation.DefaultTypeArgumentAttribute
  - System.Activities.Presentation.TypeResolvingOptionsAttribute
  - System.Activities.Presentation.Expressions.ExpressionMorphHelperAttribute
  - System.Activities.Presentation.PropertyEditing.EditorOptionAttribute
  - System.Activities.Presentation.PropertyEditing.EditorReuseAttribute
  - System.Activities.Presentation.View.OutlineView.HidePropertyInOutlineViewAttribute
  - System.Activities.Presentation.View.OutlineView.ShowInOutlineViewAttribute
  - System.Activities.Presentation.View.OutlineView.ShowPropertyInOutlineViewAsSiblingAttribute
  - System.Activities.Presentation.View.OutlineView.ShowPropertyInOutlineViewAttribute
  - System.AddIn.AddInAttribute
  - System.AddIn.Pipeline.AddInAdapterAttribute
  - System.AddIn.Pipeline.AddInBaseAttribute
  - System.AddIn.Pipeline.AddInContractAttribute
  - System.AddIn.Pipeline.HostAdapterAttribute
  - System.AddIn.Pipeline.QualificationDataAttribute
  - System.CodeDom.Compiler.GeneratedCodeAttribute
  - System.ComponentModel.AmbientValueAttribute
  - System.ComponentModel.AttributeProviderAttribute
  - System.ComponentModel.BindableAttribute
  - System.ComponentModel.BrowsableAttribute
  - System.ComponentModel.CategoryAttribute
  - System.ComponentModel.ComplexBindingPropertiesAttribute
  - System.ComponentModel.DataObjectAttribute
  - System.ComponentModel.DataObjectFieldAttribute
  - System.ComponentModel.DataObjectMethodAttribute
  - System.ComponentModel.DefaultBindingPropertyAttribute
  - System.ComponentModel.DefaultEventAttribute
  - System.ComponentModel.DefaultPropertyAttribute
  - System.ComponentModel.DefaultValueAttribute
  - System.ComponentModel.DescriptionAttribute
  - System.ComponentModel.DesignerAttribute
  - System.ComponentModel.DesignerCategoryAttribute
  - System.ComponentModel.DesignerSerializationVisibilityAttribute
  - System.ComponentModel.DesignOnlyAttribute
  - System.ComponentModel.DesignTimeVisibleAttribute
  - System.ComponentModel.DisplayNameAttribute
  - System.ComponentModel.EditorAttribute
  - System.ComponentModel.EditorBrowsableAttribute
  - System.ComponentModel.ExtenderProvidedPropertyAttribute
  - System.ComponentModel.ImmutableObjectAttribute
  - System.ComponentModel.InheritanceAttribute
  - System.ComponentModel.InitializationEventAttribute
  - System.ComponentModel.InstallerTypeAttribute
  - System.ComponentModel.LicenseProviderAttribute
  - System.ComponentModel.ListBindableAttribute
  - System.ComponentModel.LocalizableAttribute
  - System.ComponentModel.LookupBindingPropertiesAttribute
  - System.ComponentModel.MergablePropertyAttribute
  - System.ComponentModel.NotifyParentPropertyAttribute
  - System.ComponentModel.ParenthesizePropertyNameAttribute
  - System.ComponentModel.PasswordPropertyTextAttribute
  - System.ComponentModel.PropertyFilterAttribute
  - System.ComponentModel.PropertyTabAttribute
  - System.ComponentModel.ProvidePropertyAttribute
  - System.ComponentModel.ReadOnlyAttribute
  - System.ComponentModel.RecommendedAsConfigurableAttribute
  - System.ComponentModel.RefreshPropertiesAttribute
  - System.ComponentModel.RunInstallerAttribute
  - System.ComponentModel.SettingsBindableAttribute
  - System.ComponentModel.ToolboxItemAttribute
  - System.ComponentModel.ToolboxItemFilterAttribute
  - System.ComponentModel.TypeConverterAttribute
  - System.ComponentModel.TypeDescriptionProviderAttribute
  - System.ComponentModel.Composition.CatalogReflectionContextAttribute
  - System.ComponentModel.Composition.ExportAttribute
  - System.ComponentModel.Composition.ExportMetadataAttribute
  - System.ComponentModel.Composition.ImportAttribute
  - System.ComponentModel.Composition.ImportingConstructorAttribute
  - System.ComponentModel.Composition.ImportManyAttribute
  - System.ComponentModel.Composition.MetadataAttributeAttribute
  - System.ComponentModel.Composition.MetadataViewImplementationAttribute
  - System.ComponentModel.Composition.PartCreationPolicyAttribute
  - System.ComponentModel.Composition.PartMetadataAttribute
  - System.ComponentModel.Composition.PartNotDiscoverableAttribute
  - System.ComponentModel.DataAnnotations.AssociationAttribute
  - System.ComponentModel.DataAnnotations.BindableTypeAttribute
  - System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute
  - System.ComponentModel.DataAnnotations.DisplayAttribute
  - System.ComponentModel.DataAnnotations.DisplayColumnAttribute
  - System.ComponentModel.DataAnnotations.DisplayFormatAttribute
  - System.ComponentModel.DataAnnotations.EditableAttribute
  - System.ComponentModel.DataAnnotations.FilterUIHintAttribute
  - System.ComponentModel.DataAnnotations.KeyAttribute
  - System.ComponentModel.DataAnnotations.MetadataTypeAttribute
  - System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute
  - System.ComponentModel.DataAnnotations.ScaffoldTableAttribute
  - System.ComponentModel.DataAnnotations.TimestampAttribute
  - System.ComponentModel.DataAnnotations.UIHintAttribute
  - System.ComponentModel.DataAnnotations.ValidationAttribute
  - System.ComponentModel.DataAnnotations.Schema.ColumnAttribute
  - System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute
  - System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute
  - System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute
  - System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute
  - System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute
  - System.ComponentModel.DataAnnotations.Schema.TableAttribute
  - System.ComponentModel.Design.HelpKeywordAttribute
  - System.ComponentModel.Design.ProjectTargetFrameworkAttribute
  - System.ComponentModel.Design.Serialization.DefaultSerializationProviderAttribute
  - System.ComponentModel.Design.Serialization.DesignerSerializerAttribute
  - System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute
  - System.Composition.ExportAttribute
  - System.Composition.ExportMetadataAttribute
  - System.Composition.ImportAttribute
  - System.Composition.ImportingConstructorAttribute
  - System.Composition.ImportManyAttribute
  - System.Composition.ImportMetadataConstraintAttribute
  - System.Composition.MetadataAttributeAttribute
  - System.Composition.OnImportsSatisfiedAttribute
  - System.Composition.PartMetadataAttribute
  - System.Composition.PartNotDiscoverableAttribute
  - System.Composition.SharingBoundaryAttribute
  - System.Configuration.ConfigurationCollectionAttribute
  - System.Configuration.ConfigurationPropertyAttribute
  - System.Configuration.ConfigurationValidatorAttribute
  - System.Configuration.DefaultSettingValueAttribute
  - System.Configuration.NoSettingsVersionUpgradeAttribute
  - System.Configuration.SettingAttribute
  - System.Configuration.SettingsDescriptionAttribute
  - System.Configuration.SettingsGroupDescriptionAttribute
  - System.Configuration.SettingsGroupNameAttribute
  - System.Configuration.SettingsManageabilityAttribute
  - System.Configuration.SettingsProviderAttribute
  - System.Configuration.SettingsSerializeAsAttribute
  - System.Configuration.SpecialSettingAttribute
  - System.Data.Common.DbProviderSpecificTypePropertyAttribute
  - System.Data.Linq.Mapping.DataAttribute
  - System.Data.Linq.Mapping.DatabaseAttribute
  - System.Data.Linq.Mapping.FunctionAttribute
  - System.Data.Linq.Mapping.InheritanceMappingAttribute
  - System.Data.Linq.Mapping.ParameterAttribute
  - System.Data.Linq.Mapping.ProviderAttribute
  - System.Data.Linq.Mapping.ResultTypeAttribute
  - System.Data.Linq.Mapping.TableAttribute
  - System.Data.Mapping.EntityViewGenerationAttribute
  - System.Data.Objects.DataClasses.EdmFunctionAttribute
  - System.Data.Objects.DataClasses.EdmPropertyAttribute
  - System.Data.Objects.DataClasses.EdmRelationshipAttribute
  - System.Data.Objects.DataClasses.EdmSchemaAttribute
  - System.Data.Objects.DataClasses.EdmTypeAttribute
  - System.Data.Services.ChangeInterceptorAttribute
  - System.Data.Services.ETagAttribute
  - System.Data.Services.IgnorePropertiesAttribute
  - System.Data.Services.MimeTypeAttribute
  - System.Data.Services.QueryInterceptorAttribute
  - System.Data.Services.SingleResultAttribute
  - System.Data.Services.Client.MediaEntryAttribute
  - System.Data.Services.Client.MimeTypePropertyAttribute
  - System.Data.Services.Common.DataServiceEntityAttribute
  - System.Data.Services.Common.DataServiceKeyAttribute
  - System.Data.Services.Common.EntityPropertyMappingAttribute
  - System.Data.Services.Common.EntitySetAttribute
  - System.Data.Services.Common.HasStreamAttribute
  - System.Diagnostics.ConditionalAttribute
  - System.Diagnostics.DebuggableAttribute
  - System.Diagnostics.DebuggerBrowsableAttribute
  - System.Diagnostics.DebuggerDisplayAttribute
  - System.Diagnostics.DebuggerHiddenAttribute
  - System.Diagnostics.DebuggerNonUserCodeAttribute
  - System.Diagnostics.DebuggerStepperBoundaryAttribute
  - System.Diagnostics.DebuggerStepThroughAttribute
  - System.Diagnostics.DebuggerTypeProxyAttribute
  - System.Diagnostics.DebuggerVisualizerAttribute
  - System.Diagnostics.SwitchAttribute
  - System.Diagnostics.SwitchLevelAttribute
  - System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute
  - System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
  - System.Diagnostics.Contracts.ContractAbbreviatorAttribute
  - System.Diagnostics.Contracts.ContractArgumentValidatorAttribute
  - System.Diagnostics.Contracts.ContractClassAttribute
  - System.Diagnostics.Contracts.ContractClassForAttribute
  - System.Diagnostics.Contracts.ContractInvariantMethodAttribute
  - System.Diagnostics.Contracts.ContractOptionAttribute
  - System.Diagnostics.Contracts.ContractPublicPropertyNameAttribute
  - System.Diagnostics.Contracts.ContractReferenceAssemblyAttribute
  - System.Diagnostics.Contracts.ContractRuntimeIgnoredAttribute
  - System.Diagnostics.Contracts.ContractVerificationAttribute
  - System.Diagnostics.Contracts.PureAttribute
  - System.Diagnostics.Tracing.EventAttribute
  - System.Diagnostics.Tracing.EventDataAttribute
  - System.Diagnostics.Tracing.EventFieldAttribute
  - System.Diagnostics.Tracing.EventIgnoreAttribute
  - System.Diagnostics.Tracing.EventSourceAttribute
  - System.Diagnostics.Tracing.NonEventAttribute
  - System.DirectoryServices.AccountManagement.DirectoryObjectClassAttribute
  - System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute
  - System.DirectoryServices.AccountManagement.DirectoryRdnPrefixAttribute
  - System.Drawing.BitmapSuffixInSameAssemblyAttribute
  - System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute
  - System.Drawing.ToolboxBitmapAttribute
  - System.Management.Instrumentation.IgnoreMemberAttribute
  - System.Management.Instrumentation.InstrumentationClassAttribute
  - System.Management.Instrumentation.InstrumentedAttribute
  - System.Management.Instrumentation.ManagedNameAttribute
  - System.Management.Instrumentation.ManagementEntityAttribute
  - System.Management.Instrumentation.ManagementMemberAttribute
  - System.Management.Instrumentation.ManagementNameAttribute
  - System.Management.Instrumentation.ManagementQualifierAttribute
  - System.Management.Instrumentation.ManagementReferenceAttribute
  - System.Management.Instrumentation.WmiConfigurationAttribute
  - System.Reflection.AssemblyAlgorithmIdAttribute
  - System.Reflection.AssemblyCompanyAttribute
  - System.Reflection.AssemblyConfigurationAttribute
  - System.Reflection.AssemblyCopyrightAttribute
  - System.Reflection.AssemblyCultureAttribute
  - System.Reflection.AssemblyDefaultAliasAttribute
  - System.Reflection.AssemblyDelaySignAttribute
  - System.Reflection.AssemblyDescriptionAttribute
  - System.Reflection.AssemblyFileVersionAttribute
  - System.Reflection.AssemblyFlagsAttribute
  - System.Reflection.AssemblyInformationalVersionAttribute
  - System.Reflection.AssemblyKeyFileAttribute
  - System.Reflection.AssemblyKeyNameAttribute
  - System.Reflection.AssemblyMetadataAttribute
  - System.Reflection.AssemblyProductAttribute
  - System.Reflection.AssemblySignatureKeyAttribute
  - System.Reflection.AssemblyTitleAttribute
  - System.Reflection.AssemblyTrademarkAttribute
  - System.Reflection.AssemblyVersionAttribute
  - System.Reflection.DefaultMemberAttribute
  - System.Reflection.ObfuscateAssemblyAttribute
  - System.Reflection.ObfuscationAttribute
  - System.Resources.NeutralResourcesLanguageAttribute
  - System.Resources.SatelliteContractVersionAttribute
  - System.Runtime.AssemblyTargetedPatchBandAttribute
  - System.Runtime.TargetedPatchingOptOutAttribute
  - System.Runtime.CompilerServices.AccessedThroughPropertyAttribute
  - System.Runtime.CompilerServices.AsyncMethodBuilderAttribute
  - System.Runtime.CompilerServices.CallerFilePathAttribute
  - System.Runtime.CompilerServices.CallerLineNumberAttribute
  - System.Runtime.CompilerServices.CallerMemberNameAttribute
  - System.Runtime.CompilerServices.CompilationRelaxationsAttribute
  - System.Runtime.CompilerServices.CompilerGeneratedAttribute
  - System.Runtime.CompilerServices.CompilerGlobalScopeAttribute
  - System.Runtime.CompilerServices.CustomConstantAttribute
  - System.Runtime.CompilerServices.DecimalConstantAttribute
  - System.Runtime.CompilerServices.DefaultDependencyAttribute
  - System.Runtime.CompilerServices.DependencyAttribute
  - System.Runtime.CompilerServices.DisablePrivateReflectionAttribute
  - System.Runtime.CompilerServices.DiscardableAttribute
  - System.Runtime.CompilerServices.DynamicAttribute
  - System.Runtime.CompilerServices.ExtensionAttribute
  - System.Runtime.CompilerServices.FixedAddressValueTypeAttribute
  - System.Runtime.CompilerServices.FixedBufferAttribute
  - System.Runtime.CompilerServices.HasCopySemanticsAttribute
  - System.Runtime.CompilerServices.IndexerNameAttribute
  - System.Runtime.CompilerServices.InternalsVisibleToAttribute
  - System.Runtime.CompilerServices.IsByRefLikeAttribute
  - System.Runtime.CompilerServices.IsReadOnlyAttribute
  - System.Runtime.CompilerServices.MethodImplAttribute
  - System.Runtime.CompilerServices.NativeCppClassAttribute
  - System.Runtime.CompilerServices.ReferenceAssemblyAttribute
  - System.Runtime.CompilerServices.RequiredAttributeAttribute
  - System.Runtime.CompilerServices.RuntimeCompatibilityAttribute
  - System.Runtime.CompilerServices.ScopelessEnumAttribute
  - System.Runtime.CompilerServices.SpecialNameAttribute
  - System.Runtime.CompilerServices.StateMachineAttribute
  - System.Runtime.CompilerServices.StringFreezingAttribute
  - System.Runtime.CompilerServices.SuppressIldasmAttribute
  - System.Runtime.CompilerServices.TupleElementNamesAttribute
  - System.Runtime.CompilerServices.TypeForwardedFromAttribute
  - System.Runtime.CompilerServices.TypeForwardedToAttribute
  - System.Runtime.CompilerServices.UnsafeValueTypeAttribute
  - System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute
  - System.Runtime.ConstrainedExecution.ReliabilityContractAttribute
  - System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute
  - System.Runtime.InteropServices.AllowReversePInvokeCallsAttribute
  - System.Runtime.InteropServices.AutomationProxyAttribute
  - System.Runtime.InteropServices.BestFitMappingAttribute
  - System.Runtime.InteropServices.ClassInterfaceAttribute
  - System.Runtime.InteropServices.CoClassAttribute
  - System.Runtime.InteropServices.ComAliasNameAttribute
  - System.Runtime.InteropServices.ComCompatibleVersionAttribute
  - System.Runtime.InteropServices.ComConversionLossAttribute
  - System.Runtime.InteropServices.ComDefaultInterfaceAttribute
  - System.Runtime.InteropServices.ComEventInterfaceAttribute
  - System.Runtime.InteropServices.ComImportAttribute
  - System.Runtime.InteropServices.ComRegisterFunctionAttribute
  - System.Runtime.InteropServices.ComSourceInterfacesAttribute
  - System.Runtime.InteropServices.ComUnregisterFunctionAttribute
  - System.Runtime.InteropServices.ComVisibleAttribute
  - System.Runtime.InteropServices.DefaultCharSetAttribute
  - System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute
  - System.Runtime.InteropServices.DefaultParameterValueAttribute
  - System.Runtime.InteropServices.DispIdAttribute
  - System.Runtime.InteropServices.DllImportAttribute
  - System.Runtime.InteropServices.FieldOffsetAttribute
  - System.Runtime.InteropServices.GuidAttribute
  - System.Runtime.InteropServices.IDispatchImplAttribute
  - System.Runtime.InteropServices.ImportedFromTypeLibAttribute
  - System.Runtime.InteropServices.InAttribute
  - System.Runtime.InteropServices.InterfaceTypeAttribute
  - System.Runtime.InteropServices.LCIDConversionAttribute
  - System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute
  - System.Runtime.InteropServices.MarshalAsAttribute
  - System.Runtime.InteropServices.OptionalAttribute
  - System.Runtime.InteropServices.OutAttribute
  - System.Runtime.InteropServices.PreserveSigAttribute
  - System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute
  - System.Runtime.InteropServices.ProgIdAttribute
  - System.Runtime.InteropServices.SetWin32ContextInIDispatchAttribute
  - System.Runtime.InteropServices.StructLayoutAttribute
  - System.Runtime.InteropServices.TypeIdentifierAttribute
  - System.Runtime.InteropServices.TypeLibFuncAttribute
  - System.Runtime.InteropServices.TypeLibImportClassAttribute
  - System.Runtime.InteropServices.TypeLibTypeAttribute
  - System.Runtime.InteropServices.TypeLibVarAttribute
  - System.Runtime.InteropServices.TypeLibVersionAttribute
  - System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute
  - System.Runtime.InteropServices.WindowsRuntime.DefaultInterfaceAttribute
  - System.Runtime.InteropServices.WindowsRuntime.InterfaceImplementedInVersionAttribute
  - System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute
  - System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute
  - System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute
  - System.Runtime.Remoting.Contexts.ContextAttribute
  - System.Runtime.Remoting.Messaging.OneWayAttribute
  - System.Runtime.Remoting.Metadata.SoapAttribute
  - System.Runtime.Remoting.Proxies.ProxyAttribute
  - System.Runtime.Serialization.CollectionDataContractAttribute
  - System.Runtime.Serialization.ContractNamespaceAttribute
  - System.Runtime.Serialization.DataContractAttribute
  - System.Runtime.Serialization.DataMemberAttribute
  - System.Runtime.Serialization.EnumMemberAttribute
  - System.Runtime.Serialization.IgnoreDataMemberAttribute
  - System.Runtime.Serialization.KnownTypeAttribute
  - System.Runtime.Serialization.OnDeserializedAttribute
  - System.Runtime.Serialization.OnDeserializingAttribute
  - System.Runtime.Serialization.OnSerializedAttribute
  - System.Runtime.Serialization.OnSerializingAttribute
  - System.Runtime.Serialization.OptionalFieldAttribute
  - System.Runtime.Versioning.ComponentGuaranteesAttribute
  - System.Runtime.Versioning.ResourceConsumptionAttribute
  - System.Runtime.Versioning.ResourceExposureAttribute
  - System.Runtime.Versioning.TargetFrameworkAttribute
  - System.Security.AllowPartiallyTrustedCallersAttribute
  - System.Security.SecurityCriticalAttribute
  - System.Security.SecurityRulesAttribute
  - System.Security.SecuritySafeCriticalAttribute
  - System.Security.SecurityTransparentAttribute
  - System.Security.SecurityTreatAsSafeAttribute
  - System.Security.SuppressUnmanagedCodeSecurityAttribute
  - System.Security.UnverifiableCodeAttribute
  - System.Security.Permissions.SecurityAttribute
  - System.ServiceModel.CallbackBehaviorAttribute
  - System.ServiceModel.DataContractFormatAttribute
  - System.ServiceModel.DeliveryRequirementsAttribute
  - System.ServiceModel.FaultContractAttribute
  - System.ServiceModel.MessageContractAttribute
  - System.ServiceModel.MessageContractMemberAttribute
  - System.ServiceModel.MessageParameterAttribute
  - System.ServiceModel.MessagePropertyAttribute
  - System.ServiceModel.OperationBehaviorAttribute
  - System.ServiceModel.OperationContractAttribute
  - System.ServiceModel.ReceiveContextEnabledAttribute
  - System.ServiceModel.ServiceBehaviorAttribute
  - System.ServiceModel.ServiceContractAttribute
  - System.ServiceModel.ServiceKnownTypeAttribute
  - System.ServiceModel.TransactionFlowAttribute
  - System.ServiceModel.XmlSerializerFormatAttribute
  - System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute
  - System.ServiceModel.Activation.ServiceActivationBuildProviderAttribute
  - System.ServiceModel.Activities.Description.WorkflowContractBehaviorAttribute
  - System.ServiceModel.Description.DurableOperationAttribute
  - System.ServiceModel.Description.DurableServiceAttribute
  - System.ServiceModel.Web.AspNetCacheProfileAttribute
  - System.ServiceModel.Web.JavascriptCallbackBehaviorAttribute
  - System.ServiceModel.Web.WebGetAttribute
  - System.ServiceModel.Web.WebInvokeAttribute
  - System.Web.PreApplicationStartMethodAttribute
  - System.Web.Compilation.BuildProviderAppliesToAttribute
  - System.Web.Compilation.DesignTimeResourceProviderFactoryAttribute
  - System.Web.Compilation.ExpressionEditorAttribute
  - System.Web.Compilation.ExpressionPrefixAttribute
  - System.Web.Compilation.FolderLevelBuildProviderAppliesToAttribute
  - System.Web.DynamicData.TableNameAttribute
  - System.Web.Hosting.CustomLoaderAttribute
  - System.Web.ModelBinding.BindingBehaviorAttribute
  - System.Web.ModelBinding.ExtensibleModelBinderAttribute
  - System.Web.ModelBinding.ModelBinderProviderOptionsAttribute
  - System.Web.ModelBinding.UserProfileAttribute
  - System.Web.ModelBinding.ValueProviderSourceAttribute
  - System.Web.Profile.CustomProviderDataAttribute
  - System.Web.Profile.ProfileProviderAttribute
  - System.Web.Profile.SettingsAllowAnonymousAttribute
  - System.Web.Script.AjaxFrameworkAssemblyAttribute
  - System.Web.Script.Serialization.ScriptIgnoreAttribute
  - System.Web.Script.Services.GenerateScriptTypeAttribute
  - System.Web.Script.Services.ScriptMethodAttribute
  - System.Web.Script.Services.ScriptServiceAttribute
  - System.Web.Services.WebMethodAttribute
  - System.Web.Services.WebServiceAttribute
  - System.Web.Services.WebServiceBindingAttribute
  - System.Web.Services.Configuration.XmlFormatExtensionAttribute
  - System.Web.Services.Configuration.XmlFormatExtensionPointAttribute
  - System.Web.Services.Configuration.XmlFormatExtensionPrefixAttribute
  - System.Web.Services.Protocols.HttpMethodAttribute
  - System.Web.Services.Protocols.MatchAttribute
  - System.Web.Services.Protocols.SoapDocumentMethodAttribute
  - System.Web.Services.Protocols.SoapDocumentServiceAttribute
  - System.Web.Services.Protocols.SoapExtensionAttribute
  - System.Web.Services.Protocols.SoapHeaderAttribute
  - System.Web.Services.Protocols.SoapRpcMethodAttribute
  - System.Web.Services.Protocols.SoapRpcServiceAttribute
  - System.Web.UI.ConstructorNeedsTagAttribute
  - System.Web.UI.ControlBuilderAttribute
  - System.Web.UI.ControlValuePropertyAttribute
  - System.Web.UI.CssClassPropertyAttribute
  - System.Web.UI.DataBindingHandlerAttribute
  - System.Web.UI.DataKeyPropertyAttribute
  - System.Web.UI.FileLevelControlBuilderAttribute
  - System.Web.UI.FilterableAttribute
  - System.Web.UI.IDReferencePropertyAttribute
  - System.Web.UI.NonVisualControlAttribute
  - System.Web.UI.ParseChildrenAttribute
  - System.Web.UI.PartialCachingAttribute
  - System.Web.UI.PersistChildrenAttribute
  - System.Web.UI.PersistenceModeAttribute
  - System.Web.UI.ScriptResourceAttribute
  - System.Web.UI.SupportsEventValidationAttribute
  - System.Web.UI.TagPrefixAttribute
  - System.Web.UI.TargetControlTypeAttribute
  - System.Web.UI.TemplateContainerAttribute
  - System.Web.UI.TemplateInstanceAttribute
  - System.Web.UI.ThemeableAttribute
  - System.Web.UI.ToolboxDataAttribute
  - System.Web.UI.UrlPropertyAttribute
  - System.Web.UI.ValidationPropertyAttribute
  - System.Web.UI.VerificationAttribute
  - System.Web.UI.ViewStateModeByIdAttribute
  - System.Web.UI.WebResourceAttribute
  - System.Web.UI.Design.SupportsPreviewControlAttribute
  - System.Web.UI.Design.Directives.DirectiveAttribute
  - System.Web.UI.Design.Directives.SchemaElementNameAttribute
  - System.Web.UI.MobileControls.DesignerAdapterAttribute
  - System.Web.UI.MobileControls.DeviceOverridableAttribute
  - System.Web.UI.MobileControls.ObjectListTitleAttribute
  - System.Web.UI.MobileControls.PersistNameAttribute
  - System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute
  - System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute
  - System.Web.UI.WebControls.WebParts.PersonalizableAttribute
  - System.Web.UI.WebControls.WebParts.WebBrowsableAttribute
  - System.Web.UI.WebControls.WebParts.WebDescriptionAttribute
  - System.Web.UI.WebControls.WebParts.WebDisplayNameAttribute
  - System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute
  - System.Windows.AttachedPropertyBrowsableAttribute
  - System.Windows.LocalizabilityAttribute
  - System.Windows.StyleTypedPropertyAttribute
  - System.Windows.TemplatePartAttribute
  - System.Windows.TemplateVisualStateAttribute
  - System.Windows.ThemeInfoAttribute
  - System.Windows.Data.ValueConversionAttribute
  - System.Windows.Documents.TextElementEditingBehaviorAttribute
  - System.Windows.Forms.AxHost.ClsidAttribute
  - System.Windows.Forms.AxHost.TypeLibraryTimeStampAttribute
  - System.Windows.Forms.DataGridViewColumnDesignTimeVisibleAttribute
  - System.Windows.Forms.DockingAttribute
  - System.Windows.Forms.RelatedImageListAttribute
  - System.Windows.Forms.Design.ToolStripItemDesignerAvailabilityAttribute
  - System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute
  - System.Windows.Markup.AmbientAttribute
  - System.Windows.Markup.ConstructorArgumentAttribute
  - System.Windows.Markup.ContentPropertyAttribute
  - System.Windows.Markup.ContentWrapperAttribute
  - System.Windows.Markup.DependsOnAttribute
  - System.Windows.Markup.DesignerSerializationOptionsAttribute
  - System.Windows.Markup.DictionaryKeyPropertyAttribute
  - System.Windows.Markup.MarkupExtensionBracketCharactersAttribute
  - System.Windows.Markup.MarkupExtensionReturnTypeAttribute
  - System.Windows.Markup.NameScopePropertyAttribute
  - System.Windows.Markup.RootNamespaceAttribute
  - System.Windows.Markup.RuntimeNamePropertyAttribute
  - System.Windows.Markup.TrimSurroundingWhitespaceAttribute
  - System.Windows.Markup.UidPropertyAttribute
  - System.Windows.Markup.UsableDuringInitializationAttribute
  - System.Windows.Markup.ValueSerializerAttribute
  - System.Windows.Markup.WhitespaceSignificantCollectionAttribute
  - System.Windows.Markup.XamlDeferLoadAttribute
  - System.Windows.Markup.XamlSetMarkupExtensionAttribute
  - System.Windows.Markup.XamlSetTypeConverterAttribute
  - System.Windows.Markup.XmlLangPropertyAttribute
  - System.Windows.Markup.XmlnsCompatibleWithAttribute
  - System.Windows.Markup.XmlnsDefinitionAttribute
  - System.Windows.Markup.XmlnsPrefixAttribute
  - System.Windows.Media.DisableDpiAwarenessAttribute
  - System.Windows.Resources.AssemblyAssociatedContentFileAttribute
  - System.Workflow.Activities.CorrelationAliasAttribute
  - System.Workflow.Activities.CorrelationInitializerAttribute
  - System.Workflow.Activities.CorrelationParameterAttribute
  - System.Workflow.Activities.ExternalDataExchangeAttribute
  - System.Workflow.Activities.Rules.RuleAttribute
  - System.Workflow.ComponentModel.AlternateFlowActivityAttribute
  - System.Workflow.ComponentModel.PersistOnCloseAttribute
  - System.Workflow.ComponentModel.Compiler.ActivityCodeGeneratorAttribute
  - System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute
  - System.Workflow.ComponentModel.Compiler.AttributeInfoAttribute
  - System.Workflow.ComponentModel.Compiler.ValidationOptionAttribute
  - System.Workflow.ComponentModel.Compiler.WorkflowMarkupSourceAttribute
  - System.Workflow.ComponentModel.Design.ActivityDesignerThemeAttribute
  - System.Workflow.ComponentModel.Design.TypeFilterProviderAttribute
  - System.Workflow.ComponentModel.Serialization.ConstructorArgumentAttribute
  - System.Workflow.ComponentModel.Serialization.ContentPropertyAttribute
  - System.Workflow.ComponentModel.Serialization.RuntimeNamePropertyAttribute
  - System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute
  - System.Workflow.ComponentModel.Serialization.XmlnsPrefixAttribute
  - System.Workflow.Runtime.DebugEngine.WorkflowDebuggerSteppingAttribute
  - System.Workflow.Runtime.Tracking.PreviousTrackingServiceAttribute
  - System.Xml.Serialization.SoapAttributeAttribute
  - System.Xml.Serialization.SoapElementAttribute
  - System.Xml.Serialization.SoapEnumAttribute
  - System.Xml.Serialization.SoapIgnoreAttribute
  - System.Xml.Serialization.SoapIncludeAttribute
  - System.Xml.Serialization.SoapTypeAttribute
  - System.Xml.Serialization.XmlAnyAttributeAttribute
  - System.Xml.Serialization.XmlAnyElementAttribute
  - System.Xml.Serialization.XmlArrayAttribute
  - System.Xml.Serialization.XmlArrayItemAttribute
  - System.Xml.Serialization.XmlAttributeAttribute
  - System.Xml.Serialization.XmlChoiceIdentifierAttribute
  - System.Xml.Serialization.XmlElementAttribute
  - System.Xml.Serialization.XmlEnumAttribute
  - System.Xml.Serialization.XmlIgnoreAttribute
  - System.Xml.Serialization.XmlIncludeAttribute
  - System.Xml.Serialization.XmlNamespaceDeclarationsAttribute
  - System.Xml.Serialization.XmlRootAttribute
  - System.Xml.Serialization.XmlSchemaProviderAttribute
  - System.Xml.Serialization.XmlSerializerAssemblyAttribute
  - System.Xml.Serialization.XmlSerializerVersionAttribute
  - System.Xml.Serialization.XmlTextAttribute
  - System.Xml.Serialization.XmlTypeAttribute
  implements:
  - System.Runtime.InteropServices._Attribute
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.AttributeUsageAttribute
  - type: System.Runtime.InteropServices.ClassInterfaceAttribute
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.#ctor
  commentId: M:System.Attribute.#ctor
  id: '#ctor'
  parent: System.Attribute
  langs:
  - csharp
  name: Attribute()
  nameWithType: Attribute.Attribute()
  fullName: Attribute.Attribute()
  type: Constructor
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Initializes a new instance of the <xref href="System.Attribute"></xref> class.
  remarks: This constructor is only called by classes that derive from <xref:System.Attribute>.
  example:
  - "The following code example shows the definition of a custom parameter <xref:System.Attribute> class with its constructor.  \n  \n [!code-cpp[System.Attribute.GetCustomAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CPP/getcustattrparam.cpp#2)]\n [!code-csharp[System.Attribute.GetCustomAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CS/getcustattrparam.cs#2)]\n [!code-vb[System.Attribute.GetCustomAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/VB/getcustattrparam.vb#2)]"
  syntax:
    content: protected Attribute ();
    parameters: []
  overload: System.Attribute.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.Equals(System.Object)
  commentId: M:System.Attribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Attribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Attribute.Equals(Object)
  fullName: Attribute.Equals(Object)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns a value that indicates whether this instance is equal to a specified object.
  remarks: ''
  example:
  - "The following code example defines two custom parameter <xref:System.Attribute> classes, then creates several objects of each class and shows the use of the <xref:System.Attribute.Equals%2A> method to compare them.  \n  \n [!code-cpp[System.Attribute.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.Equals/CPP/equals.cpp#1)]\n [!code-csharp[System.Attribute.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.Equals/CS/equals.cs#1)]\n [!code-vb[System.Attribute.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.Equals/VB/equals.vb#1)]"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: An <xref href="System.Object"></xref> to compare with this instance or `null`.
    return:
      type: System.Boolean
      description: '`true` if <code>obj</code> equals the type and value of this instance; otherwise, `false`.'
  overload: System.Attribute.Equals*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  id: GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  langs:
  - csharp
  name: GetCustomAttribute(ParameterInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Retrieves a custom attribute applied to a method parameter. Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.
  remarks: If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.
  example:
  - "The following code example defines a custom parameter <xref:System.Attribute> class and applies the custom attribute to a method in a derived class and the base of the derived class. The example shows the use of the <xref:System.Attribute.GetCustomAttribute%2A> method to return the attributes.  \n  \n [!code-cpp[System.Attribute.GetCustomAttribute#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CPP/getcustattrprminh.cpp#3)]\n [!code-csharp[System.Attribute.GetCustomAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CS/getcustattrprminh.cs#3)]\n [!code-vb[System.Attribute.GetCustomAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/VB/getcustattrprminh.vb#3)]"
  syntax:
    content: public static Attribute GetCustomAttribute (System.Reflection.ParameterInfo element, Type attributeType, bool inherit);
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: An object derived from the <xref href="System.Reflection.ParameterInfo"></xref> class that describes a parameter of a member of a class.
    - id: attributeType
      type: System.Type
      description: The type, or a base type, of the custom attribute to search for.
    - id: inherit
      type: System.Boolean
      description: If `true`, specifies to also search the ancestors of <code>element</code> for custom attributes.
    return:
      type: System.Attribute
      description: A reference to the single custom attribute of type <code>attributeType</code> that is applied to <code>element</code>, or `null` if there is no such attribute.
  overload: System.Attribute.GetCustomAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  id: GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  langs:
  - csharp
  name: GetCustomAttribute(MemberInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Retrieves a custom attribute applied to a member of a type. Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.
  remarks: >-
    > [!NOTE]

    >  Starting with the .NET Framework version 2.0, this method returns security attributes on types, methods, and constructors if the attributes are stored in the new metadata format. Assemblies compiled with version 2.0 or later use the new format. Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format. See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/en-us/9eeddee8-ca89-4440-b84b-fd613f590cd5).
  example:
  - "The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking a <xref:System.Reflection.MemberInfo> as a parameter.  \n  \n [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]\n [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]\n [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]"
  syntax:
    content: public static Attribute GetCustomAttribute (System.Reflection.MemberInfo element, Type attributeType, bool inherit);
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: An object derived from the <xref href="System.Reflection.MemberInfo"></xref> class that describes a constructor, event, field, method, or property member of a class.
    - id: attributeType
      type: System.Type
      description: The type, or a base type, of the custom attribute to search for.
    - id: inherit
      type: System.Boolean
      description: If `true`, specifies to also search the ancestors of <code>element</code> for custom attributes.
    return:
      type: System.Attribute
      description: A reference to the single custom attribute of type <code>attributeType</code> that is applied to <code>element</code>, or `null` if there is no such attribute.
  overload: System.Attribute.GetCustomAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  id: GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  langs:
  - csharp
  name: GetCustomAttribute(Assembly, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Retrieves a custom attribute applied to an assembly. Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.
  remarks: >-
    > [!NOTE]

    >  Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format. Assemblies compiled with version 2.0 or later use the new format. Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format. See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/en-us/9eeddee8-ca89-4440-b84b-fd613f590cd5).
  example:
  - "The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking an <xref:System.Reflection.Assembly> as a parameter.  \n  \n [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]\n [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]\n [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]"
  syntax:
    content: public static Attribute GetCustomAttribute (System.Reflection.Assembly element, Type attributeType, bool inherit);
    parameters:
    - id: element
      type: System.Reflection.Assembly
      description: An object derived from the <xref href="System.Reflection.Assembly"></xref> class that describes a reusable collection of modules.
    - id: attributeType
      type: System.Type
      description: The type, or a base type, of the custom attribute to search for.
    - id: inherit
      type: System.Boolean
      description: This parameter is ignored, and does not affect the operation of this method.
    return:
      type: System.Attribute
      description: A reference to the single custom attribute of type <code>attributeType</code> that is applied to <code>element</code>, or `null` if there is no such attribute.
  overload: System.Attribute.GetCustomAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  id: GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  langs:
  - csharp
  name: GetCustomAttribute(Module, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Retrieves a custom attribute applied to a module. Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.
  remarks: ''
  example:
  - "The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking a <xref:System.Reflection.Module> as a parameter.  \n  \n [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]\n [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]\n [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]"
  syntax:
    content: public static Attribute GetCustomAttribute (System.Reflection.Module element, Type attributeType, bool inherit);
    parameters:
    - id: element
      type: System.Reflection.Module
      description: An object derived from the <xref href="System.Reflection.Module"></xref> class that describes a portable executable file.
    - id: attributeType
      type: System.Type
      description: The type, or a base type, of the custom attribute to search for.
    - id: inherit
      type: System.Boolean
      description: This parameter is ignored, and does not affect the operation of this method.
    return:
      type: System.Attribute
      description: A reference to the single custom attribute of type <code>attributeType</code> that is applied to <code>element</code>, or `null` if there is no such attribute.
  overload: System.Attribute.GetCustomAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  id: GetCustomAttribute(System.Reflection.Module,System.Type)
  parent: System.Attribute
  langs:
  - csharp
  name: GetCustomAttribute(Module, Type)
  nameWithType: Attribute.GetCustomAttribute(Module, Type)
  fullName: Attribute.GetCustomAttribute(Module, Type)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Retrieves a custom attribute applied to a module. Parameters specify the module, and the type of the custom attribute to search for.
  remarks: ''
  example:
  - "The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking a <xref:System.Reflection.Module> as a parameter.  \n  \n [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]\n [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]\n [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]"
  syntax:
    content: public static Attribute GetCustomAttribute (System.Reflection.Module element, Type attributeType);
    parameters:
    - id: element
      type: System.Reflection.Module
      description: An object derived from the <xref href="System.Reflection.Module"></xref> class that describes a portable executable file.
    - id: attributeType
      type: System.Type
      description: The type, or a base type, of the custom attribute to search for.
    return:
      type: System.Attribute
      description: A reference to the single custom attribute of type <code>attributeType</code> that is applied to <code>element</code>, or `null` if there is no such attribute.
  overload: System.Attribute.GetCustomAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  id: GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  langs:
  - csharp
  name: GetCustomAttribute(MemberInfo, Type)
  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)
  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Retrieves a custom attribute applied to a member of a type. Parameters specify the member, and the type of the custom attribute to search for.
  remarks: "A match is determined in the same way described in the Return Value section of <xref:System.Type.IsAssignableFrom%2A?displayProperty=fullName>.  \n  \n> [!NOTE]\n>  Starting with the .NET Framework version 2.0, this method returns security attributes on types, methods, and constructors if the attributes are stored in the new metadata format. Assemblies compiled with version 2.0 or later use the new format. Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format. See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/en-us/9eeddee8-ca89-4440-b84b-fd613f590cd5)."
  example:
  - "The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking a <xref:System.Reflection.MemberInfo> as a parameter.  \n  \n [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]\n [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]\n [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]"
  syntax:
    content: public static Attribute GetCustomAttribute (System.Reflection.MemberInfo element, Type attributeType);
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: An object derived from the <xref href="System.Reflection.MemberInfo"></xref> class that describes a constructor, event, field, method, or property member of a class.
    - id: attributeType
      type: System.Type
      description: The type, or a base type, of the custom attribute to search for.
    return:
      type: System.Attribute
      description: A reference to the single custom attribute of type <code>attributeType</code> that is applied to <code>element</code>, or `null` if there is no such attribute.
  overload: System.Attribute.GetCustomAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  id: GetCustomAttribute(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  langs:
  - csharp
  name: GetCustomAttribute(Assembly, Type)
  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)
  fullName: Attribute.GetCustomAttribute(Assembly, Type)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Retrieves a custom attribute applied to a specified assembly. Parameters specify the assembly and the type of the custom attribute to search for.
  remarks: "Use the <xref:System.Attribute.GetCustomAttributes%2A> method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.  \n  \n> [!NOTE]\n>  Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format. Assemblies compiled with version 2.0 or later use the new format. Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format. See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/en-us/9eeddee8-ca89-4440-b84b-fd613f590cd5)."
  example:
  - "The following code example illustrates the use of the <xref:System.Attribute.GetCustomAttribute%2A> method taking an <xref:System.Reflection.Assembly> as a parameter.  \n  \n [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]\n [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]\n [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]"
  syntax:
    content: public static Attribute GetCustomAttribute (System.Reflection.Assembly element, Type attributeType);
    parameters:
    - id: element
      type: System.Reflection.Assembly
      description: An object derived from the <xref href="System.Reflection.Assembly"></xref> class that describes a reusable collection of modules.
    - id: attributeType
      type: System.Type
      description: The type, or a base type, of the custom attribute to search for.
    return:
      type: System.Attribute
      description: A reference to the single custom attribute of type <code>attributeType</code> that is applied to <code>element</code>, or `null` if there is no such attribute.
  overload: System.Attribute.GetCustomAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  commentId: M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  id: GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  langs:
  - csharp
  name: GetCustomAttribute(ParameterInfo, Type)
  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)
  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Retrieves a custom attribute applied to a method parameter. Parameters specify the method parameter, and the type of the custom attribute to search for.
  remarks: If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.
  example:
  - "The following code example defines a custom parameter <xref:System.Attribute> class and applies the custom attribute to a method in a derived class and the base of the derived class. The example shows the use of the <xref:System.Attribute.GetCustomAttribute%2A> method to return the attributes.  \n  \n [!code-cpp[System.Attribute.GetCustomAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CPP/getcustattrparam.cpp#1)]\n [!code-csharp[System.Attribute.GetCustomAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CS/getcustattrparam.cs#1)]\n [!code-vb[System.Attribute.GetCustomAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/VB/getcustattrparam.vb#1)]"
  syntax:
    content: public static Attribute GetCustomAttribute (System.Reflection.ParameterInfo element, Type attributeType);
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: An object derived from the <xref href="System.Reflection.ParameterInfo"></xref> class that describes a parameter of a member of a class.
    - id: attributeType
      type: System.Type
      description: The type, or a base type, of the custom attribute to search for.
    return:
      type: System.Attribute
      description: A reference to the single custom attribute of type <code>attributeType</code> that is applied to <code>element</code>, or `null` if there is no such attribute.
  overload: System.Attribute.GetCustomAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  - type: System.Reflection.AmbiguousMatchException
    commentId: T:System.Reflection.AmbiguousMatchException
    description: More than one of the requested attributes was found.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  id: GetCustomAttributes(System.Reflection.Module,System.Type)
  parent: System.Attribute
  langs:
  - csharp
  name: GetCustomAttributes(Module, Type)
  nameWithType: Attribute.GetCustomAttributes(Module, Type)
  fullName: Attribute.GetCustomAttributes(Module, Type)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Retrieves an array of the custom attributes applied to a module. Parameters specify the module, and the type of the custom attribute to search for.
  remarks: ''
  example:
  - "The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.Module> as a parameter.  \n  \n [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]\n [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]\n [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]"
  syntax:
    content: public static Attribute[] GetCustomAttributes (System.Reflection.Module element, Type attributeType);
    parameters:
    - id: element
      type: System.Reflection.Module
      description: An object derived from the <xref href="System.Reflection.Module"></xref> class that describes a portable executable file.
    - id: attributeType
      type: System.Type
      description: The type, or a base type, of the custom attribute to search for.
    return:
      type: System.Attribute[]
      description: An <xref href="System.Attribute"></xref> array that contains the custom attributes of type <code>attributeType</code> applied to <code>element</code>, or an empty array if no such custom attributes exist.
  overload: System.Attribute.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  id: GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  langs:
  - csharp
  name: GetCustomAttributes(ParameterInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Retrieves an array of the custom attributes applied to a method parameter. Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.
  remarks: If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.
  example:
  - "The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.  \n  \n [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]\n [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]\n [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]"
  syntax:
    content: public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element, Type attributeType, bool inherit);
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: An object derived from the <xref href="System.Reflection.ParameterInfo"></xref> class that describes a parameter of a member of a class.
    - id: attributeType
      type: System.Type
      description: The type, or a base type, of the custom attribute to search for.
    - id: inherit
      type: System.Boolean
      description: If `true`, specifies to also search the ancestors of <code>element</code> for custom attributes.
    return:
      type: System.Attribute[]
      description: An <xref href="System.Attribute"></xref> array that contains the custom attributes of type <code>attributeType</code> applied to <code>element</code>, or an empty array if no such custom attributes exist.
  overload: System.Attribute.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  id: GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  langs:
  - csharp
  name: GetCustomAttributes(Module, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Retrieves an array of the custom attributes applied to a module. Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.
  remarks: The return value contains the custom attributes for ancestors of `element` if `inherit` is `true`.
  example:
  - "The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.Module> as a parameter.  \n  \n [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]\n [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]\n [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]"
  syntax:
    content: public static Attribute[] GetCustomAttributes (System.Reflection.Module element, Type attributeType, bool inherit);
    parameters:
    - id: element
      type: System.Reflection.Module
      description: An object derived from the <xref href="System.Reflection.Module"></xref> class that describes a portable executable file.
    - id: attributeType
      type: System.Type
      description: The type, or a base type, of the custom attribute to search for.
    - id: inherit
      type: System.Boolean
      description: This parameter is ignored, and does not affect the operation of this method.
    return:
      type: System.Attribute[]
      description: An <xref href="System.Attribute"></xref> array that contains the custom attributes of type <code>attributeType</code> applied to <code>element</code>, or an empty array if no such custom attributes exist.
  overload: System.Attribute.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  id: GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  langs:
  - csharp
  name: GetCustomAttributes(MemberInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Retrieves an array of the custom attributes applied to a member of a type. Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.
  remarks: "The return value contains the custom attributes for ancestors of `element` if `inherit` is `true`.  \n  \n> [!NOTE]\n>  Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format. Assemblies compiled with version 2.0 or later use the new format. Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format. See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/en-us/9eeddee8-ca89-4440-b84b-fd613f590cd5)."
  example:
  - "The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.  \n  \n [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]\n [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]\n [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]"
  syntax:
    content: public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element, Type type, bool inherit);
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: An object derived from the <xref href="System.Reflection.MemberInfo"></xref> class that describes a constructor, event, field, method, or property member of a class.
    - id: type
      type: System.Type
      description: The type, or a base type, of the custom attribute to search for.
    - id: inherit
      type: System.Boolean
      description: If `true`, specifies to also search the ancestors of <code>element</code> for custom attributes.
    return:
      type: System.Attribute[]
      description: An <xref href="System.Attribute"></xref> array that contains the custom attributes of type <code>type</code> applied to <code>element</code>, or an empty array if no such custom attributes exist.
  overload: System.Attribute.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>type</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>type</code> is not derived from <xref href="System.Attribute"></xref>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  id: GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  langs:
  - csharp
  name: GetCustomAttributes(Assembly, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Retrieves an array of the custom attributes applied to an assembly. Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.
  remarks: >-
    > [!NOTE]

    >  Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format. Assemblies compiled with version 2.0 or later use the new format. Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format. See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/en-us/9eeddee8-ca89-4440-b84b-fd613f590cd5).
  example:
  - "The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.  \n  \n [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]\n [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]\n [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]"
  syntax:
    content: public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element, Type attributeType, bool inherit);
    parameters:
    - id: element
      type: System.Reflection.Assembly
      description: An object derived from the <xref href="System.Reflection.Assembly"></xref> class that describes a reusable collection of modules.
    - id: attributeType
      type: System.Type
      description: The type, or a base type, of the custom attribute to search for.
    - id: inherit
      type: System.Boolean
      description: This parameter is ignored, and does not affect the operation of this method.
    return:
      type: System.Attribute[]
      description: An <xref href="System.Attribute"></xref> array that contains the custom attributes of type <code>attributeType</code> applied to <code>element</code>, or an empty array if no such custom attributes exist.
  overload: System.Attribute.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  id: GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  langs:
  - csharp
  name: GetCustomAttributes(ParameterInfo, Type)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)
  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Retrieves an array of the custom attributes applied to a method parameter. Parameters specify the method parameter, and the type of the custom attribute to search for.
  remarks: If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.
  example:
  - "The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.  \n  \n [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]\n [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]\n [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]"
  syntax:
    content: public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element, Type attributeType);
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: An object derived from the <xref href="System.Reflection.ParameterInfo"></xref> class that describes a parameter of a member of a class.
    - id: attributeType
      type: System.Type
      description: The type, or a base type, of the custom attribute to search for.
    return:
      type: System.Attribute[]
      description: An <xref href="System.Attribute"></xref> array that contains the custom attributes of type <code>attributeType</code> applied to <code>element</code>, or an empty array if no such custom attributes exist.
  overload: System.Attribute.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  id: GetCustomAttributes(System.Reflection.Module,System.Boolean)
  parent: System.Attribute
  langs:
  - csharp
  name: GetCustomAttributes(Module, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)
  fullName: Attribute.GetCustomAttributes(Module, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Retrieves an array of the custom attributes applied to a module. Parameters specify the module, and an ignored search option.
  remarks: The return value contains the custom attributes for ancestors of `element` if `inherit` is `true`.
  example:
  - "The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.Module> as a parameter.  \n  \n [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]\n [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]\n [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]"
  syntax:
    content: public static Attribute[] GetCustomAttributes (System.Reflection.Module element, bool inherit);
    parameters:
    - id: element
      type: System.Reflection.Module
      description: An object derived from the <xref href="System.Reflection.Module"></xref> class that describes a portable executable file.
    - id: inherit
      type: System.Boolean
      description: This parameter is ignored, and does not affect the operation of this method.
    return:
      type: System.Attribute[]
      description: An <xref href="System.Attribute"></xref> array that contains the custom attributes applied to <code>element</code>, or an empty array if no such custom attributes exist.
  overload: System.Attribute.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  id: GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  parent: System.Attribute
  langs:
  - csharp
  name: GetCustomAttributes(ParameterInfo, Boolean)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)
  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Retrieves an array of the custom attributes applied to a method parameter. Parameters specify the method parameter, and whether to search ancestors of the method parameter.
  remarks: If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.
  example:
  - "The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.  \n  \n [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]\n [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]\n [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]"
  syntax:
    content: public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element, bool inherit);
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: An object derived from the <xref href="System.Reflection.ParameterInfo"></xref> class that describes a parameter of a member of a class.
    - id: inherit
      type: System.Boolean
      description: If `true`, specifies to also search the ancestors of <code>element</code> for custom attributes.
    return:
      type: System.Attribute[]
      description: An <xref href="System.Attribute"></xref> array that contains the custom attributes applied to <code>element</code>, or an empty array if no such custom attributes exist.
  overload: System.Attribute.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <xref href="System.Reflection.ParameterInfo.Member"></xref> property of <code>element</code> is `null.```
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> is `null`.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  id: GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Attribute
  langs:
  - csharp
  name: GetCustomAttributes(MemberInfo, Boolean)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)
  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Retrieves an array of the custom attributes applied to a member of a type. Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.
  remarks: "The return value contains the custom attributes for ancestors of `element` if `inherit` is `true`.  \n  \n> [!NOTE]\n>  Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format. Assemblies compiled with version 2.0 or later use the new format. Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format. See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/en-us/9eeddee8-ca89-4440-b84b-fd613f590cd5)."
  example:
  - "The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.  \n  \n [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]\n [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]\n [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]"
  syntax:
    content: public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element, bool inherit);
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: An object derived from the <xref href="System.Reflection.MemberInfo"></xref> class that describes a constructor, event, field, method, or property member of a class.
    - id: inherit
      type: System.Boolean
      description: If `true`, specifies to also search the ancestors of <code>element</code> for custom attributes.
    return:
      type: System.Attribute[]
      description: An <xref href="System.Attribute"></xref> array that contains the custom attributes applied to <code>element</code>, or an empty array if no such custom attributes exist.
  overload: System.Attribute.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> is `null`.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  id: GetCustomAttributes(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  langs:
  - csharp
  name: GetCustomAttributes(Assembly, Type)
  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)
  fullName: Attribute.GetCustomAttributes(Assembly, Type)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Retrieves an array of the custom attributes applied to an assembly. Parameters specify the assembly, and the type of the custom attribute to search for.
  remarks: >-
    > [!NOTE]

    >  Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format. Assemblies compiled with version 2.0 or later use the new format. Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format. See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/en-us/9eeddee8-ca89-4440-b84b-fd613f590cd5).
  example:
  - "The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.  \n  \n [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]\n [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]\n [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]"
  syntax:
    content: public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element, Type attributeType);
    parameters:
    - id: element
      type: System.Reflection.Assembly
      description: An object derived from the <xref href="System.Reflection.Assembly"></xref> class that describes a reusable collection of modules.
    - id: attributeType
      type: System.Type
      description: The type, or a base type, of the custom attribute to search for.
    return:
      type: System.Attribute[]
      description: An <xref href="System.Attribute"></xref> array that contains the custom attributes of type <code>attributeType</code> applied to <code>element</code>, or an empty array if no such custom attributes exist.
  overload: System.Attribute.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  id: GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  parent: System.Attribute
  langs:
  - csharp
  name: GetCustomAttributes(Assembly, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)
  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Retrieves an array of the custom attributes applied to an assembly. Parameters specify the assembly, and an ignored search option.
  remarks: >-
    > [!NOTE]

    >  Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format. Assemblies compiled with version 2.0 or later use the new format. Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format. See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/en-us/9eeddee8-ca89-4440-b84b-fd613f590cd5).
  example:
  - "The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.  \n  \n [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]\n [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]\n [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]"
  syntax:
    content: public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element, bool inherit);
    parameters:
    - id: element
      type: System.Reflection.Assembly
      description: An object derived from the <xref href="System.Reflection.Assembly"></xref> class that describes a reusable collection of modules.
    - id: inherit
      type: System.Boolean
      description: This parameter is ignored, and does not affect the operation of this method.
    return:
      type: System.Attribute[]
      description: An <xref href="System.Attribute"></xref> array that contains the custom attributes applied to <code>element</code>, or an empty array if no such custom attributes exist.
  overload: System.Attribute.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  id: GetCustomAttributes(System.Reflection.ParameterInfo)
  parent: System.Attribute
  langs:
  - csharp
  name: GetCustomAttributes(ParameterInfo)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)
  fullName: Attribute.GetCustomAttributes(ParameterInfo)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Retrieves an array of the custom attributes applied to a method parameter. A parameter specifies the method parameter.
  remarks: If `element` represents a parameter in a method of a derived type, the return value includes the inheritable custom attributes applied to the same parameter in the overridden base methods.
  example:
  - "The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.  \n  \n [!code-cpp[GetCustomAttributes#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]\n [!code-csharp[GetCustomAttributes#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]\n [!code-vb[GetCustomAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]"
  syntax:
    content: public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element);
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: An object derived from the <xref href="System.Reflection.ParameterInfo"></xref> class that describes a parameter of a member of a class.
    return:
      type: System.Attribute[]
      description: An <xref href="System.Attribute"></xref> array that contains the custom attributes applied to <code>element</code>, or an empty array if no such custom attributes exist.
  overload: System.Attribute.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> is `null`.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Module)
  id: GetCustomAttributes(System.Reflection.Module)
  parent: System.Attribute
  langs:
  - csharp
  name: GetCustomAttributes(Module)
  nameWithType: Attribute.GetCustomAttributes(Module)
  fullName: Attribute.GetCustomAttributes(Module)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Retrieves an array of the custom attributes applied to a module. A parameter specifies the module.
  remarks: ''
  example:
  - "The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttributes%2A>, taking a <xref:System.Reflection.Module> as a parameter.  \n  \n [!code-cpp[GetCustomAttributes#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]\n [!code-csharp[GetCustomAttributes#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]\n [!code-vb[GetCustomAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]"
  syntax:
    content: public static Attribute[] GetCustomAttributes (System.Reflection.Module element);
    parameters:
    - id: element
      type: System.Reflection.Module
      description: An object derived from the <xref href="System.Reflection.Module"></xref> class that describes a portable executable file.
    return:
      type: System.Attribute[]
      description: An <xref href="System.Attribute"></xref> array that contains the custom attributes applied to <code>element</code>, or an empty array if no such custom attributes exist.
  overload: System.Attribute.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  id: GetCustomAttributes(System.Reflection.MemberInfo)
  parent: System.Attribute
  langs:
  - csharp
  name: GetCustomAttributes(MemberInfo)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo)
  fullName: Attribute.GetCustomAttributes(MemberInfo)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Retrieves an array of the custom attributes applied to a member of a type. A parameter specifies the member.
  remarks: "The return value contains the custom attributes for ancestors of `element`.  \n  \n> [!NOTE]\n>  Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format. Assemblies compiled with version 2.0 or later use the new format. Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format. See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/en-us/9eeddee8-ca89-4440-b84b-fd613f590cd5)."
  example:
  - "The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttribute%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.  \n  \n [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]\n [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]\n [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]"
  syntax:
    content: public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element);
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: An object derived from the <xref href="System.Reflection.MemberInfo"></xref> class that describes a constructor, event, field, method, or property member of a class.
    return:
      type: System.Attribute[]
      description: An <xref href="System.Attribute"></xref> array that contains the custom attributes applied to <code>element</code>, or an empty array if no such custom attributes exist.
  overload: System.Attribute.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> is `null`.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  id: GetCustomAttributes(System.Reflection.Assembly)
  parent: System.Attribute
  langs:
  - csharp
  name: GetCustomAttributes(Assembly)
  nameWithType: Attribute.GetCustomAttributes(Assembly)
  fullName: Attribute.GetCustomAttributes(Assembly)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Retrieves an array of the custom attributes applied to an assembly. A parameter specifies the assembly.
  remarks: >-
    > [!NOTE]

    >  Starting with the .NET Framework version 2.0, this method returns security attributes if the attributes are stored in the new metadata format. Assemblies compiled with version 2.0 or later use the new format. Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format. See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/en-us/9eeddee8-ca89-4440-b84b-fd613f590cd5).
  example:
  - "The following example retrieves the custom attributes found in the current assembly.  \n  \n [!code-cpp[GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]\n [!code-csharp[GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]\n [!code-vb[GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]"
  syntax:
    content: public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element);
    parameters:
    - id: element
      type: System.Reflection.Assembly
      description: An object derived from the <xref href="System.Reflection.Assembly"></xref> class that describes a reusable collection of modules.
    return:
      type: System.Attribute[]
      description: An <xref href="System.Attribute"></xref> array that contains the custom attributes applied to <code>element</code>, or an empty array if no such custom attributes exist.
  overload: System.Attribute.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  commentId: M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  id: GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  langs:
  - csharp
  name: GetCustomAttributes(MemberInfo, Type)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)
  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Retrieves an array of the custom attributes applied to a member of a type. Parameters specify the member, and the type of the custom attribute to search for.
  remarks: "The return value contains the custom attributes for ancestors of `element`.  \n  \n> [!NOTE]\n>  Starting with the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format. Assemblies compiled with version 2.0 or later use the new format. Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format. See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/en-us/9eeddee8-ca89-4440-b84b-fd613f590cd5)."
  example:
  - "The following code example demonstrates the use of <xref:System.Attribute.GetCustomAttribute%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.  \n  \n [!code-cpp[GetCustomAttributes#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]\n [!code-csharp[GetCustomAttributes#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]\n [!code-vb[GetCustomAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]"
  syntax:
    content: public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element, Type type);
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: An object derived from the <xref href="System.Reflection.MemberInfo"></xref> class that describes a constructor, event, field, method, or property member of a class.
    - id: type
      type: System.Type
      description: The type, or a base type, of the custom attribute to search for.
    return:
      type: System.Attribute[]
      description: An <xref href="System.Attribute"></xref> array that contains the custom attributes of type <code>type</code> applied to <code>element</code>, or an empty array if no such custom attributes exist.
  overload: System.Attribute.GetCustomAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>type</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>type</code> is not derived from <xref href="System.Attribute"></xref>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: A custom attribute type cannot be loaded.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.GetHashCode
  commentId: M:System.Attribute.GetHashCode
  id: GetHashCode
  parent: System.Attribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Attribute.GetHashCode()
  fullName: Attribute.GetHashCode()
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns the hash code for this instance.
  remarks: ''
  example:
  - "The following code example illustrates the use of <xref:System.Attribute.GetHashCode%2A> in the context of <xref:System.Attribute>.  \n  \n [!code-csharp[GetHashCode#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetHashCode/CS/hashcode.cs#1)]\n [!code-vb[GetHashCode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetHashCode/VB/hashcode.vb#1)]"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
  overload: System.Attribute.GetHashCode*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.IsDefaultAttribute
  commentId: M:System.Attribute.IsDefaultAttribute
  id: IsDefaultAttribute
  parent: System.Attribute
  langs:
  - csharp
  name: IsDefaultAttribute()
  nameWithType: Attribute.IsDefaultAttribute()
  fullName: Attribute.IsDefaultAttribute()
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: When overridden in a derived class, indicates whether the value of this instance is the default value for the derived class.
  remarks: "The default implementation of this class returns `false`, and must be implemented in the derived class to be useful to that class.  \n  \n The implementation of this method in a derived class compares the value of this instance to a standard default value, then returns a Boolean value that indicates whether the value of this instance is equal to the standard value. The standard value is typically coded as a constant in the implementation, or stored programmatically in a field used by the implementation."
  example:
  - "The following code example illustrates the use of <xref:System.Attribute.IsDefaultAttribute%2A>.  \n  \n [!code-cpp[IsDefaultAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefaultAttribute/CPP/defattr.cpp#1)]\n [!code-csharp[IsDefaultAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefaultAttribute/CS/defattr.cs#1)]\n [!code-vb[IsDefaultAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefaultAttribute/VB/defattr.vb#1)]"
  syntax:
    content: public virtual bool IsDefaultAttribute ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if this instance is the default attribute for the class; otherwise, `false`.'
  overload: System.Attribute.IsDefaultAttribute*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  commentId: M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  id: IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  langs:
  - csharp
  name: IsDefined(ParameterInfo, Type, Boolean)
  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)
  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Determines whether any custom attributes are applied to a method parameter. Parameters specify the method parameter, the type of the custom attribute to search for, and whether to search ancestors of the method parameter.
  remarks: ''
  example:
  - "The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.  \n  \n [!code-cpp[IsDefined#5](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#5)]\n [!code-csharp[IsDefined#5](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id5.cs#5)]\n [!code-vb[IsDefined#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id5.vb#5)]"
  syntax:
    content: public static bool IsDefined (System.Reflection.ParameterInfo element, Type attributeType, bool inherit);
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: An object derived from the <xref href="System.Reflection.ParameterInfo"></xref> class that describes a parameter of a member of a class.
    - id: attributeType
      type: System.Type
      description: The type, or a base type, of the custom attribute to search for.
    - id: inherit
      type: System.Boolean
      description: If `true`, specifies to also search the ancestors of <code>element</code> for custom attributes.
    return:
      type: System.Boolean
      description: '`true` if a custom attribute of type <code>attributeType</code> is applied to <code>element</code>; otherwise, `false`.'
  overload: System.Attribute.IsDefined*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  - type: System.ExecutionEngineException
    commentId: T:System.ExecutionEngineException
    description: <code>element</code> is not a method, constructor, or type.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  commentId: M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  id: IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  langs:
  - csharp
  name: IsDefined(Module, Type, Boolean)
  nameWithType: Attribute.IsDefined(Module, Type, Boolean)
  fullName: Attribute.IsDefined(Module, Type, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Determines whether any custom attributes are applied to a module. Parameters specify the module, the type of the custom attribute to search for, and an ignored search option.
  remarks: This method ignores the `inherit` parameter and does not search the ancestors of `element` for custom attributes.
  example:
  - "The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.Module> as a parameter.  \n  \n [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]\n [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]\n [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]"
  syntax:
    content: public static bool IsDefined (System.Reflection.Module element, Type attributeType, bool inherit);
    parameters:
    - id: element
      type: System.Reflection.Module
      description: An object derived from the <xref href="System.Reflection.Module"></xref> class that describes a portable executable file.
    - id: attributeType
      type: System.Type
      description: The type, or a base type, of the custom attribute to search for.
    - id: inherit
      type: System.Boolean
      description: This parameter is ignored, and does not affect the operation of this method.
    return:
      type: System.Boolean
      description: '`true` if a custom attribute of type <code>attributeType</code> is applied to <code>element</code>; otherwise, `false`.'
  overload: System.Attribute.IsDefined*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  commentId: M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  id: IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  langs:
  - csharp
  name: IsDefined(MemberInfo, Type, Boolean)
  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)
  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Determines whether any custom attributes are applied to a member of a type. Parameters specify the member, the type of the custom attribute to search for, and whether to search ancestors of the member.
  remarks: >-
    > [!NOTE]

    >  Starting with the .NET Framework version 2.0, this method returns `true` if a type, method, or constructor has security attributes stored in the new metadata format. Assemblies compiled with version 2.0 or later use the new format. Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format. See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/en-us/9eeddee8-ca89-4440-b84b-fd613f590cd5).
  example:
  - "The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.  \n  \n [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]\n [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]\n [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]"
  syntax:
    content: public static bool IsDefined (System.Reflection.MemberInfo element, Type attributeType, bool inherit);
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: An object derived from the <xref href="System.Reflection.MemberInfo"></xref> class that describes a constructor, event, field, method, type, or property member of a class.
    - id: attributeType
      type: System.Type
      description: The type, or a base type, of the custom attribute to search for.
    - id: inherit
      type: System.Boolean
      description: If `true`, specifies to also search the ancestors of <code>element</code> for custom attributes.
    return:
      type: System.Boolean
      description: '`true` if a custom attribute of type <code>attributeType</code> is applied to <code>element</code>; otherwise, `false`.'
  overload: System.Attribute.IsDefined*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  commentId: M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  id: IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  langs:
  - csharp
  name: IsDefined(Assembly, Type, Boolean)
  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)
  fullName: Attribute.IsDefined(Assembly, Type, Boolean)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Determines whether any custom attributes are applied to an assembly. Parameters specify the assembly, the type of the custom attribute to search for, and an ignored search option.
  remarks: >-
    > [!NOTE]

    >  Starting with the .NET Framework version 2.0, this method returns `true` if the assembly has security attributes stored in the new metadata format. Assemblies compiled with version 2.0 or later use the new format. Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format. See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/en-us/9eeddee8-ca89-4440-b84b-fd613f590cd5).
  example:
  - "The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.  \n  \n [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]\n [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]\n [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]"
  syntax:
    content: public static bool IsDefined (System.Reflection.Assembly element, Type attributeType, bool inherit);
    parameters:
    - id: element
      type: System.Reflection.Assembly
      description: An object derived from the <xref href="System.Reflection.Assembly"></xref> class that describes a reusable collection of modules.
    - id: attributeType
      type: System.Type
      description: The type, or a base type, of the custom attribute to search for.
    - id: inherit
      type: System.Boolean
      description: This parameter is ignored, and does not affect the operation of this method.
    return:
      type: System.Boolean
      description: '`true` if a custom attribute of type <code>attributeType</code> is applied to <code>element</code>; otherwise, `false`.'
  overload: System.Attribute.IsDefined*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  commentId: M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  id: IsDefined(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  langs:
  - csharp
  name: IsDefined(MemberInfo, Type)
  nameWithType: Attribute.IsDefined(MemberInfo, Type)
  fullName: Attribute.IsDefined(MemberInfo, Type)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Determines whether any custom attributes are applied to a member of a type. Parameters specify the member, and the type of the custom attribute to search for.
  remarks: "The ancestors of `element` are searched for custom attributes.  \n  \n> [!NOTE]\n>  Starting with the .NET Framework version 2.0, this method returns `true` if a type, method, or constructor has security attributes stored in the new metadata format. Assemblies compiled with version 2.0 or later use the new format. Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format. See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/en-us/9eeddee8-ca89-4440-b84b-fd613f590cd5)."
  example:
  - "The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.MemberInfo> as a parameter.  \n  \n [!code-cpp[IsDefined#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]\n [!code-csharp[IsDefined#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]\n [!code-vb[IsDefined#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]"
  syntax:
    content: public static bool IsDefined (System.Reflection.MemberInfo element, Type attributeType);
    parameters:
    - id: element
      type: System.Reflection.MemberInfo
      description: An object derived from the <xref href="System.Reflection.MemberInfo"></xref> class that describes a constructor, event, field, method, type, or property member of a class.
    - id: attributeType
      type: System.Type
      description: The type, or a base type, of the custom attribute to search for.
    return:
      type: System.Boolean
      description: '`true` if a custom attribute of type <code>attributeType</code> is applied to <code>element</code>; otherwise, `false`.'
  overload: System.Attribute.IsDefined*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>element</code> is not a constructor, method, property, event, type, or field.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  commentId: M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  id: IsDefined(System.Reflection.Module,System.Type)
  parent: System.Attribute
  langs:
  - csharp
  name: IsDefined(Module, Type)
  nameWithType: Attribute.IsDefined(Module, Type)
  fullName: Attribute.IsDefined(Module, Type)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Determines whether any custom attributes of a specified type are applied to a module. Parameters specify the module, and the type of the custom attribute to search for.
  remarks: The ancestors of `element` are not searched for custom attributes.
  example:
  - "The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.Module> as a parameter.  \n  \n [!code-cpp[IsDefined#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]\n [!code-csharp[IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]\n [!code-vb[IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]"
  syntax:
    content: public static bool IsDefined (System.Reflection.Module element, Type attributeType);
    parameters:
    - id: element
      type: System.Reflection.Module
      description: An object derived from the <xref href="System.Reflection.Module"></xref> class that describes a portable executable file.
    - id: attributeType
      type: System.Type
      description: The type, or a base type, of the custom attribute to search for.
    return:
      type: System.Boolean
      description: '`true` if a custom attribute of type <code>attributeType</code> is applied to <code>element</code>; otherwise, `false`.'
  overload: System.Attribute.IsDefined*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  commentId: M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  id: IsDefined(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  langs:
  - csharp
  name: IsDefined(Assembly, Type)
  nameWithType: Attribute.IsDefined(Assembly, Type)
  fullName: Attribute.IsDefined(Assembly, Type)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Determines whether any custom attributes are applied to an assembly. Parameters specify the assembly, and the type of the custom attribute to search for.
  remarks: >-
    > [!NOTE]

    >  Starting with the .NET Framework version 2.0, this method returns `true` if the assembly has security attributes stored in the new metadata format. Assemblies compiled with version 2.0 or later use the new format. Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format. See [Emitting Declarative Security Attributes](http://msdn.microsoft.com/en-us/9eeddee8-ca89-4440-b84b-fd613f590cd5).
  example:
  - "The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking an <xref:System.Reflection.Assembly> as a parameter.  \n  \n [!code-cpp[IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]\n [!code-csharp[IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]\n [!code-vb[IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]"
  syntax:
    content: public static bool IsDefined (System.Reflection.Assembly element, Type attributeType);
    parameters:
    - id: element
      type: System.Reflection.Assembly
      description: An object derived from the <xref href="System.Reflection.Assembly"></xref> class that describes a reusable collection of modules.
    - id: attributeType
      type: System.Type
      description: The type, or a base type, of the custom attribute to search for.
    return:
      type: System.Boolean
      description: '`true` if a custom attribute of type <code>attributeType</code> is applied to <code>element</code>; otherwise, `false`.'
  overload: System.Attribute.IsDefined*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  commentId: M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  id: IsDefined(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  langs:
  - csharp
  name: IsDefined(ParameterInfo, Type)
  nameWithType: Attribute.IsDefined(ParameterInfo, Type)
  fullName: Attribute.IsDefined(ParameterInfo, Type)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Determines whether any custom attributes are applied to a method parameter. Parameters specify the method parameter, and the type of the custom attribute to search for.
  remarks: The ancestors of `element` are searched for custom attributes.
  example:
  - "The following code example illustrates the use of <xref:System.Attribute.IsDefined%2A>, taking a <xref:System.Reflection.ParameterInfo> as a parameter.  \n  \n [!code-cpp[IsDefined#5](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#5)]\n [!code-csharp[IsDefined#5](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id5.cs#5)]\n [!code-vb[IsDefined#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id5.vb#5)]"
  syntax:
    content: public static bool IsDefined (System.Reflection.ParameterInfo element, Type attributeType);
    parameters:
    - id: element
      type: System.Reflection.ParameterInfo
      description: An object derived from the <xref href="System.Reflection.ParameterInfo"></xref> class that describes a parameter of a member of a class.
    - id: attributeType
      type: System.Type
      description: The type, or a base type, of the custom attribute to search for.
    return:
      type: System.Boolean
      description: '`true` if a custom attribute of type <code>attributeType</code> is applied to <code>element</code>; otherwise, `false`.'
  overload: System.Attribute.IsDefined*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>element</code> or <code>attributeType</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>attributeType</code> is not derived from <xref href="System.Attribute"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.Match(System.Object)
  commentId: M:System.Attribute.Match(System.Object)
  id: Match(System.Object)
  parent: System.Attribute
  langs:
  - csharp
  name: Match(Object)
  nameWithType: Attribute.Match(Object)
  fullName: Attribute.Match(Object)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: When overridden in a derived class, returns a value that indicates whether this instance equals a specified object.
  remarks: "This method determines if one <xref:System.Attribute> equals another. Its default implementation is the same as <xref:System.Attribute.Equals%2A>, which performs a value and reference comparison. Override this method to implement support for attribute values, such as flags or bit fields, that consist of components that are meaningful in themselves.  \n  \n For example, consider an attribute whose value is a binary field divided into a bit field of flags. Two instances of this attribute have one flag in set in common while all the other flags differ. The <xref:System.Attribute.Equals%2A> method cannot determine that the two instances have the same flag set, but the <xref:System.Attribute.Match%2A> method can."
  example:
  - "The following code example illustrates the use of <xref:System.Attribute.Match%2A> in the context of <xref:System.Attribute>.  \n  \n [!code-csharp[Match#1](~/samples/snippets/csharp/VS_Snippets_CLR/Match/CS/match.cs#1)]\n [!code-vb[Match#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Match/VB/match.vb#1)]"
  syntax:
    content: public virtual bool Match (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: An <xref href="System.Object"></xref> to compare with this instance of <xref href="System.Attribute"></xref>.
    return:
      type: System.Boolean
      description: '`true` if this instance equals <code>obj</code>; otherwise, `false`.'
  overload: System.Attribute.Match*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.TypeId
  commentId: P:System.Attribute.TypeId
  id: TypeId
  parent: System.Attribute
  langs:
  - csharp
  name: TypeId
  nameWithType: Attribute.TypeId
  fullName: Attribute.TypeId
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: When implemented in a derived class, gets a unique identifier for this <xref href="System.Attribute"></xref>.
  remarks: As implemented, this identifier is merely the <xref:System.Type> of the attribute. However, it is intended that the unique identifier be used to identify two attributes of the same type.
  example:
  - "The following code example implements the <xref:System.Attribute.TypeId%2A> property in a custom parameter <xref:System.Attribute> class and shows its use.  \n  \n [!code-cpp[System.Attribute.TypeId#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.TypeId/CPP/typeid.cpp#1)]\n [!code-csharp[System.Attribute.TypeId#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.TypeId/CS/typeid.cs#1)]\n [!code-vb[System.Attribute.TypeId#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.TypeId/VB/typeid.vb#1)]"
  syntax:
    content: public virtual object TypeId { get; }
    return:
      type: System.Object
      description: An <xref href="System.Object"></xref> that is a unique identifier for the attribute.
  overload: System.Attribute.TypeId*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  commentId: M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Attribute
  langs:
  - csharp
  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Maps a set of names to a corresponding set of dispatch identifiers.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.
  syntax:
    content: void _Attribute.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: Reserved for future use. Must be IID_NULL.
    - id: rgszNames
      type: System.IntPtr
      description: Passed-in array of names to be mapped.
    - id: cNames
      type: System.UInt32
      description: Count of the names to be mapped.
    - id: lcid
      type: System.UInt32
      description: The locale context in which to interpret the names.
    - id: rgDispId
      type: System.IntPtr
      description: Caller-allocated array that receives the IDs corresponding to the names.
  overload: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  commentId: M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Attribute
  langs:
  - csharp
  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Retrieves the type information for an object, which can be used to get the type information for an interface.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.
  syntax:
    content: void _Attribute.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: The type information to return.
    - id: lcid
      type: System.UInt32
      description: The locale identifier for the type information.
    - id: ppTInfo
      type: System.IntPtr
      description: Receives a pointer to the requested type information object.
  overload: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  commentId: M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  id: System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  isEii: true
  parent: System.Attribute
  langs:
  - csharp
  name: _Attribute.GetTypeInfoCount(UInt32)
  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)
  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Retrieves the number of type information interfaces that an object provides (either 0 or 1).
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.
  syntax:
    content: void _Attribute.GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: Points to a location that receives the number of type information interfaces provided by the object.
  overload: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  commentId: M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  isEii: true
  parent: System.Attribute
  langs:
  - csharp
  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides access to properties and methods exposed by an object.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.
  syntax:
    content: void _Attribute.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: Identifies the member.
    - id: riid
      type: System.Guid
      description: Reserved for future use. Must be IID_NULL.
    - id: lcid
      type: System.UInt32
      description: The locale context in which to interpret arguments.
    - id: wFlags
      type: System.Int16
      description: Flags describing the context of the call.
    - id: pDispParams
      type: System.IntPtr
      description: Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.
    - id: pVarResult
      type: System.IntPtr
      description: Pointer to the location where the result is to be stored.
    - id: pExcepInfo
      type: System.IntPtr
      description: Pointer to a structure that contains exception information.
    - id: puArgErr
      type: System.IntPtr
      description: The index of the first argument that has an error.
  overload: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: Late-bound access using the COM <code>IDispatch</code> interface is not supported.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Reflection.AmbiguousMatchException
  parent: System.Reflection
  isExternal: false
  name: AmbiguousMatchException
  nameWithType: AmbiguousMatchException
  fullName: System.Reflection.AmbiguousMatchException
- uid: System.TypeLoadException
  parent: System
  isExternal: false
  name: TypeLoadException
  nameWithType: TypeLoadException
  fullName: System.TypeLoadException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.ExecutionEngineException
  parent: System
  isExternal: false
  name: ExecutionEngineException
  nameWithType: ExecutionEngineException
  fullName: System.ExecutionEngineException
- uid: System.NotImplementedException
  parent: System
  isExternal: false
  name: NotImplementedException
  nameWithType: NotImplementedException
  fullName: System.NotImplementedException
- uid: System.Attribute.#ctor
  parent: System.Attribute
  isExternal: false
  name: Attribute()
  nameWithType: Attribute.Attribute()
  fullName: Attribute.Attribute()
- uid: System.Attribute.Equals(System.Object)
  parent: System.Attribute
  isExternal: false
  name: Equals(Object)
  nameWithType: Attribute.Equals(Object)
  fullName: Attribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(ParameterInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)
- uid: System.Attribute
  parent: System
  isExternal: false
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute
- uid: System.Reflection.ParameterInfo
  parent: System.Reflection
  isExternal: false
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(MemberInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(Assembly, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(Module, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: false
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(Module, Type)
  nameWithType: Attribute.GetCustomAttribute(Module, Type)
  fullName: Attribute.GetCustomAttribute(Module, Type)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(MemberInfo, Type)
  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)
  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(Assembly, Type)
  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)
  fullName: Attribute.GetCustomAttribute(Assembly, Type)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(ParameterInfo, Type)
  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)
  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Module, Type)
  nameWithType: Attribute.GetCustomAttributes(Module, Type)
  fullName: Attribute.GetCustomAttributes(Module, Type)
- uid: System.Attribute[]
  parent: System
  isExternal: false
  name: Attribute[]
  nameWithType: Attribute[]
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: System.Attribute
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(ParameterInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Module, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Assembly, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(ParameterInfo, Type)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)
  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Module, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)
  fullName: Attribute.GetCustomAttributes(Module, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(ParameterInfo, Boolean)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)
  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Boolean)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)
  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Assembly, Type)
  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)
  fullName: Attribute.GetCustomAttributes(Assembly, Type)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Assembly, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)
  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(ParameterInfo)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)
  fullName: Attribute.GetCustomAttributes(ParameterInfo)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Module)
  nameWithType: Attribute.GetCustomAttributes(Module)
  fullName: Attribute.GetCustomAttributes(Module)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(MemberInfo)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo)
  fullName: Attribute.GetCustomAttributes(MemberInfo)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Assembly)
  nameWithType: Attribute.GetCustomAttributes(Assembly)
  fullName: Attribute.GetCustomAttributes(Assembly)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Type)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)
  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)
- uid: System.Attribute.GetHashCode
  parent: System.Attribute
  isExternal: false
  name: GetHashCode()
  nameWithType: Attribute.GetHashCode()
  fullName: Attribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Attribute.IsDefaultAttribute
  parent: System.Attribute
  isExternal: false
  name: IsDefaultAttribute()
  nameWithType: Attribute.IsDefaultAttribute()
  fullName: Attribute.IsDefaultAttribute()
- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(ParameterInfo, Type, Boolean)
  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)
  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(Module, Type, Boolean)
  nameWithType: Attribute.IsDefined(Module, Type, Boolean)
  fullName: Attribute.IsDefined(Module, Type, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(MemberInfo, Type, Boolean)
  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)
  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(Assembly, Type, Boolean)
  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)
  fullName: Attribute.IsDefined(Assembly, Type, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(MemberInfo, Type)
  nameWithType: Attribute.IsDefined(MemberInfo, Type)
  fullName: Attribute.IsDefined(MemberInfo, Type)
- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(Module, Type)
  nameWithType: Attribute.IsDefined(Module, Type)
  fullName: Attribute.IsDefined(Module, Type)
- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(Assembly, Type)
  nameWithType: Attribute.IsDefined(Assembly, Type)
  fullName: Attribute.IsDefined(Assembly, Type)
- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(ParameterInfo, Type)
  nameWithType: Attribute.IsDefined(ParameterInfo, Type)
  fullName: Attribute.IsDefined(ParameterInfo, Type)
- uid: System.Attribute.Match(System.Object)
  parent: System.Attribute
  isExternal: false
  name: Match(Object)
  nameWithType: Attribute.Match(Object)
  fullName: Attribute.Match(Object)
- uid: System.Attribute.TypeId
  parent: System.Attribute
  isExternal: false
  name: TypeId
  nameWithType: Attribute.TypeId
  fullName: Attribute.TypeId
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Attribute
  isExternal: false
  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Attribute
  isExternal: false
  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  parent: System.Attribute
  isExternal: false
  name: _Attribute.GetTypeInfoCount(UInt32)
  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)
  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Attribute
  isExternal: false
  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Attribute.#ctor*
  parent: System.Attribute
  isExternal: false
  name: Attribute
  nameWithType: Attribute.Attribute
  fullName: Attribute.Attribute
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
- uid: System.Attribute.Equals*
  parent: System.Attribute
  isExternal: false
  name: Equals
  nameWithType: Attribute.Equals
  fullName: Attribute.Equals
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
- uid: System.Attribute.GetCustomAttribute*
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute
  nameWithType: Attribute.GetCustomAttribute
  fullName: Attribute.GetCustomAttribute
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
- uid: System.Attribute.GetCustomAttributes*
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes
  nameWithType: Attribute.GetCustomAttributes
  fullName: Attribute.GetCustomAttributes
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
- uid: System.Attribute.GetHashCode*
  parent: System.Attribute
  isExternal: false
  name: GetHashCode
  nameWithType: Attribute.GetHashCode
  fullName: Attribute.GetHashCode
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
- uid: System.Attribute.IsDefaultAttribute*
  parent: System.Attribute
  isExternal: false
  name: IsDefaultAttribute
  nameWithType: Attribute.IsDefaultAttribute
  fullName: Attribute.IsDefaultAttribute
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
- uid: System.Attribute.IsDefined*
  parent: System.Attribute
  isExternal: false
  name: IsDefined
  nameWithType: Attribute.IsDefined
  fullName: Attribute.IsDefined
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
- uid: System.Attribute.Match*
  parent: System.Attribute
  isExternal: false
  name: Match
  nameWithType: Attribute.Match
  fullName: Attribute.Match
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
- uid: System.Attribute.TypeId*
  parent: System.Attribute
  isExternal: false
  name: TypeId
  nameWithType: Attribute.TypeId
  fullName: Attribute.TypeId
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames*
  parent: System.Attribute
  isExternal: false
  name: System.Runtime.InteropServices._Attribute.GetIDsOfNames
  nameWithType: Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames
  fullName: Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo*
  parent: System.Attribute
  isExternal: false
  name: System.Runtime.InteropServices._Attribute.GetTypeInfo
  nameWithType: Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo
  fullName: Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount*
  parent: System.Attribute
  isExternal: false
  name: System.Runtime.InteropServices._Attribute.GetTypeInfoCount
  nameWithType: Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount
  fullName: Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke*
  parent: System.Attribute
  isExternal: false
  name: System.Runtime.InteropServices._Attribute.Invoke
  nameWithType: Attribute.System.Runtime.InteropServices._Attribute.Invoke
  fullName: Attribute.System.Runtime.InteropServices._Attribute.Invoke
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Attribute.xml
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Runtime.InteropServices._Attribute
  parent: System.Runtime.InteropServices
  isExternal: false
  name: _Attribute
  nameWithType: _Attribute
  fullName: System.Runtime.InteropServices._Attribute
