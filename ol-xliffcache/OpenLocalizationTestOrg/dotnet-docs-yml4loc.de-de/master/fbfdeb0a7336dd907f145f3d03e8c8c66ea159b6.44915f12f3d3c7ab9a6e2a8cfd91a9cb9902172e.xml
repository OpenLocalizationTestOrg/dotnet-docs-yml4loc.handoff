{"nodes":[{"content":"Indicates that the use of a value tuple on a member is meant to be treated as a tuple with element names.","nodes":[{"pos":[0,105],"content":"Indicates that the use of a value tuple on a member is meant to be treated as a tuple with element names.","nodes":[{"content":"Indicates that the use of a value tuple on a member is meant to be treated as a tuple with element names.","pos":[0,105]}]}],"pos":[777,883],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.CompilerServices.TupleElementNamesAttribute\"></xref> class.","nodes":[{"pos":[0,120],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.CompilerServices.TupleElementNamesAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Runtime.CompilerServices.TupleElementNamesAttribute\"></xref> class."}],"pos":[7069,7190],"yaml":true},{"content":"This constructor is used on types that contain a value tuple instance with element names.  For example, if `C` is a generic type with          two type parameters, then the use of the constructed type `C(`<xref:System.ValueTuple%602>`,` <xref:System.ValueTuple%603>`)` might be intended to          treat the first type argument as a tuple with element names and the          second as a tuple without element names. In this case, the          appropriate attribute specification should use a          `transformNames` value of `{ \"name1\", \"name2\", null, null,          null}`.","nodes":[{"pos":[0,577],"content":"This constructor is used on types that contain a value tuple instance with element names.  For example, if `C` is a generic type with          two type parameters, then the use of the constructed type `C(`<xref:System.ValueTuple%602>`,` <xref:System.ValueTuple%603>`)` might be intended to          treat the first type argument as a tuple with element names and the          second as a tuple without element names. In this case, the          appropriate attribute specification should use a          `transformNames` value of `{ \"name1\", \"name2\", null, null,          null}`.","nodes":[{"content":"This constructor is used on types that contain a value tuple instance with element names.","pos":[0,89]},{"content":"For example, if <ph id=\"ph1\">`C`</ph> is a generic type with          two type parameters, then the use of the constructed type <ph id=\"ph2\">`C(`</ph><ph id=\"ph3\">&lt;xref:System.ValueTuple%602&gt;</ph><ph id=\"ph4\">`,`</ph> <ph id=\"ph5\">&lt;xref:System.ValueTuple%603&gt;</ph><ph id=\"ph6\">`)`</ph> might be intended to          treat the first type argument as a tuple with element names and the          second as a tuple without element names.","pos":[91,416],"source":"  For example, if `C` is a generic type with          two type parameters, then the use of the constructed type `C(`<xref:System.ValueTuple%602>`,` <xref:System.ValueTuple%603>`)` might be intended to          treat the first type argument as a tuple with element names and the          second as a tuple without element names."},{"content":"In this case, the          appropriate attribute specification should use a          <ph id=\"ph1\">`transformNames`</ph> value of <ph id=\"ph2\">`{ \"name1\", \"name2\", null, null,          null}`</ph>.","pos":[417,577],"source":" In this case, the          appropriate attribute specification should use a          `transformNames` value of `{ \"name1\", \"name2\", null, null,          null}`."}]}],"pos":[7201,7779],"yaml":true,"extradata":"MT"},{"content":"A string array that specifies, in a pre-order depth-first traversal of a type's construction, which value tuple occurrences are meant to carry element names.","nodes":[{"pos":[0,157],"content":"A string array that specifies, in a pre-order depth-first traversal of a type's construction, which value tuple occurrences are meant to carry element names.","nodes":[{"content":"A string array that specifies, in a pre-order depth-first traversal of a type's construction, which value tuple occurrences are meant to carry element names.","pos":[0,157]}]}],"pos":[7951,8109],"yaml":true},{"content":"Specifies, in a pre-order depth-first traversal of a type's construction, which value tuple elements are meant to carry element names.","nodes":[{"pos":[0,134],"content":"Specifies, in a pre-order depth-first traversal of a type's construction, which value tuple elements are meant to carry element names.","nodes":[{"content":"Specifies, in a pre-order depth-first traversal of a type's construction, which value tuple elements are meant to carry element names.","pos":[0,134]}]}],"pos":[9203,9338],"yaml":true},{"content":"An array that indicates which value tuple elements are meant to carry element names.","nodes":[{"pos":[0,84],"content":"An array that indicates which value tuple elements are meant to carry element names.","nodes":[{"content":"An array that indicates which value tuple elements are meant to carry element names.","pos":[0,84]}]}],"pos":[9524,9609],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.CompilerServices.TupleElementNamesAttribute\n  commentId: T:System.Runtime.CompilerServices.TupleElementNamesAttribute\n  id: TupleElementNamesAttribute\n  children:\n  - System.Runtime.CompilerServices.TupleElementNamesAttribute.#ctor\n  - System.Runtime.CompilerServices.TupleElementNamesAttribute.#ctor(System.String[])\n  - System.Runtime.CompilerServices.TupleElementNamesAttribute.TransformNames\n  langs:\n  - csharp\n  name: TupleElementNamesAttribute\n  nameWithType: TupleElementNamesAttribute\n  fullName: System.Runtime.CompilerServices.TupleElementNamesAttribute\n  type: Class\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: Indicates that the use of a value tuple on a member is meant to be treated as a tuple with element names.\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Event | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue | System.AttributeTargets.Struct)]\n\n      [System.CLSCompliant(false)]\n\n      public sealed class TupleElementNamesAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/TupleElementNamesAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.CompilerServices.TupleElementNamesAttribute.#ctor\n  commentId: M:System.Runtime.CompilerServices.TupleElementNamesAttribute.#ctor\n  id: '#ctor'\n  parent: System.Runtime.CompilerServices.TupleElementNamesAttribute\n  langs:\n  - csharp\n  name: TupleElementNamesAttribute()\n  nameWithType: TupleElementNamesAttribute.TupleElementNamesAttribute()\n  fullName: TupleElementNamesAttribute.TupleElementNamesAttribute()\n  type: Constructor\n  assemblies:\n  - System.ValueTuple\n  namespace: System.Runtime.CompilerServices\n  syntax:\n    content: public TupleElementNamesAttribute ();\n    parameters: []\n  overload: System.Runtime.CompilerServices.TupleElementNamesAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  monikers:\n  - netcore-1.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/TupleElementNamesAttribute.xml\n- uid: System.Runtime.CompilerServices.TupleElementNamesAttribute.#ctor(System.String[])\n  commentId: M:System.Runtime.CompilerServices.TupleElementNamesAttribute.#ctor(System.String[])\n  id: '#ctor(System.String[])'\n  parent: System.Runtime.CompilerServices.TupleElementNamesAttribute\n  langs:\n  - csharp\n  name: TupleElementNamesAttribute(String[])\n  nameWithType: TupleElementNamesAttribute.TupleElementNamesAttribute(String[])\n  fullName: TupleElementNamesAttribute.TupleElementNamesAttribute(String[])\n  type: Constructor\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.CompilerServices.TupleElementNamesAttribute\"></xref> class.\n  remarks: This constructor is used on types that contain a value tuple instance with element names.  For example, if `C` is a generic type with          two type parameters, then the use of the constructed type `C(`<xref:System.ValueTuple%602>`,` <xref:System.ValueTuple%603>`)` might be intended to          treat the first type argument as a tuple with element names and the          second as a tuple without element names. In this case, the          appropriate attribute specification should use a          `transformNames` value of `{ \"name1\", \"name2\", null, null,          null}`.\n  syntax:\n    content: public TupleElementNamesAttribute (string[] transformNames);\n    parameters:\n    - id: transformNames\n      type: System.String[]\n      description: A string array that specifies, in a pre-order depth-first traversal of a type's construction, which value tuple occurrences are meant to carry element names.\n  overload: System.Runtime.CompilerServices.TupleElementNamesAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/TupleElementNamesAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.CompilerServices.TupleElementNamesAttribute.TransformNames\n  commentId: P:System.Runtime.CompilerServices.TupleElementNamesAttribute.TransformNames\n  id: TransformNames\n  parent: System.Runtime.CompilerServices.TupleElementNamesAttribute\n  langs:\n  - csharp\n  name: TransformNames\n  nameWithType: TupleElementNamesAttribute.TransformNames\n  fullName: TupleElementNamesAttribute.TransformNames\n  type: Property\n  assemblies:\n  - System.ValueTuple\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Runtime.CompilerServices\n  summary: Specifies, in a pre-order depth-first traversal of a type's construction, which value tuple elements are meant to carry element names.\n  syntax:\n    content: public System.Collections.Generic.IList<string> TransformNames { get; }\n    return:\n      type: System.Collections.Generic.IList{System.String}\n      description: An array that indicates which value tuple elements are meant to carry element names.\n  overload: System.Runtime.CompilerServices.TupleElementNamesAttribute.TransformNames*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/TupleElementNamesAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Runtime.CompilerServices.TupleElementNamesAttribute.#ctor\n  parent: System.Runtime.CompilerServices.TupleElementNamesAttribute\n  isExternal: false\n  name: TupleElementNamesAttribute()\n  nameWithType: TupleElementNamesAttribute.TupleElementNamesAttribute()\n  fullName: TupleElementNamesAttribute.TupleElementNamesAttribute()\n- uid: System.Runtime.CompilerServices.TupleElementNamesAttribute.#ctor(System.String[])\n  parent: System.Runtime.CompilerServices.TupleElementNamesAttribute\n  isExternal: false\n  name: TupleElementNamesAttribute(String[])\n  nameWithType: TupleElementNamesAttribute.TupleElementNamesAttribute(String[])\n  fullName: TupleElementNamesAttribute.TupleElementNamesAttribute(String[])\n- uid: System.String\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.CompilerServices.TupleElementNamesAttribute.TransformNames\n  parent: System.Runtime.CompilerServices.TupleElementNamesAttribute\n  isExternal: false\n  name: TransformNames\n  nameWithType: TupleElementNamesAttribute.TransformNames\n  fullName: TupleElementNamesAttribute.TransformNames\n- uid: System.Collections.Generic.IList`1\n  name: IList<T>\n  nameWithType: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n- uid: System.Collections.Generic.IList{System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<String>\n  nameWithType: IList<String>\n  fullName: System.Collections.Generic.IList<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Runtime.CompilerServices.TupleElementNamesAttribute.#ctor*\n  parent: System.Runtime.CompilerServices.TupleElementNamesAttribute\n  isExternal: false\n  name: TupleElementNamesAttribute\n  nameWithType: TupleElementNamesAttribute.TupleElementNamesAttribute\n  fullName: TupleElementNamesAttribute.TupleElementNamesAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/TupleElementNamesAttribute.xml\n- uid: System.Runtime.CompilerServices.TupleElementNamesAttribute.TransformNames*\n  parent: System.Runtime.CompilerServices.TupleElementNamesAttribute\n  isExternal: false\n  name: TransformNames\n  nameWithType: TupleElementNamesAttribute.TransformNames\n  fullName: TupleElementNamesAttribute.TransformNames\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - netstandard-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/TupleElementNamesAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}