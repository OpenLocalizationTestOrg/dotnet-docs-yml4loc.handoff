### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ProfileServiceManager
  commentId: T:System.Web.UI.ProfileServiceManager
  id: ProfileServiceManager
  children:
  - System.Web.UI.ProfileServiceManager.#ctor
  - System.Web.UI.ProfileServiceManager.LoadProperties
  - System.Web.UI.ProfileServiceManager.Path
  langs:
  - csharp
  name: ProfileServiceManager
  nameWithType: ProfileServiceManager
  fullName: System.Web.UI.ProfileServiceManager
  type: Class
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: Configures a set of preloaded profile properties and the location of a custom implementation of the profile service.
  remarks: "The <xref:System.Web.UI.ProfileServiceManager> class corresponds to the <xref:System.Web.UI.ScriptManager.ProfileService%2A> property that can be added to the <xref:System.Web.UI.ScriptManager> or <xref:System.Web.UI.ScriptManagerProxy> control.  \n  \n You can use <xref:System.Web.UI.ProfileServiceManager> to specify a set of profile properties that will be preloaded when the page is rendered and will be available to client script. Also, instead of using the built-in profile Web service provided by AJAX features of ASP.NET, you can use this class to provide the path of an alternative implementation of the Web service that will be used for loading or saving profile properties from script.  \n  \n To use the profile service in your application, you must enable it in the configuration file. If you use the built-in profile Web service and do not have to preload properties, you do not have to explicitly declare the profile service manager on the page.  \n  \n To declaratively specify a set of preloaded properties, or a custom profile Web service, include a `<ProfileService>` element inside the `<asp:ScriptManager>` element on the page, as shown in the following example.  \n  \n```  \n<asp:ScriptManager ID=\"SM1\" runat=\"server\">  \n  <ProfileService LoadProperties=\"propertyA,propertyB\" Path=\"MyProfileService.asmx\" />  \n</asp:ScriptManager>  \n```  \n  \n You can also programmatically configure the profile service to preload properties or to use a custom profile Web service.  \n  \n The following example shows the basic class structure that must be implemented in a custom profile Web service."
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))]

      public class ProfileServiceManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ProfileServiceManager.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.UI.ProfileServiceManager.#ctor
  commentId: M:System.Web.UI.ProfileServiceManager.#ctor
  id: '#ctor'
  parent: System.Web.UI.ProfileServiceManager
  langs:
  - csharp
  name: ProfileServiceManager()
  nameWithType: ProfileServiceManager.ProfileServiceManager()
  fullName: ProfileServiceManager.ProfileServiceManager()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: Initializes a new instance of the <xref href="System.Web.UI.ProfileServiceManager"></xref> class.
  syntax:
    content: public ProfileServiceManager ();
    parameters: []
  overload: System.Web.UI.ProfileServiceManager.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ProfileServiceManager.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.UI.ProfileServiceManager.LoadProperties
  commentId: P:System.Web.UI.ProfileServiceManager.LoadProperties
  id: LoadProperties
  parent: System.Web.UI.ProfileServiceManager
  langs:
  - csharp
  name: LoadProperties
  nameWithType: ProfileServiceManager.LoadProperties
  fullName: ProfileServiceManager.LoadProperties
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: Gets or sets an array that contains the profile properties that will be made available to client script.
  remarks: "If <xref:System.Web.UI.ProfileServiceManager.LoadProperties%2A> contains at least one string that corresponds to the name of a profile property, then the built-in profile service in the Web application retrieves the current user's profile data for each of the specified profile properties. The profile property values are serialized and then made available to client script through the [properties Field](http://msdn.microsoft.com/library/ebce3c40-7017-482b-94df-91f7448fda05) collection.  \n  \n> [!NOTE]\n>  To set this property declaratively, use a comma-separated list of property names. For grouped property values, use the syntax *GroupName*.*PropertyName*.  \n  \n When <xref:System.Web.UI.ProfileServiceManager.LoadProperties%2A> is an empty array, no profile data is preloaded.  \n  \n The <xref:System.Web.UI.ProfileServiceManager.LoadProperties%2A> property can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control. When <xref:System.Web.UI.ProfileServiceManager.LoadProperties%2A> is set on both the <xref:System.Web.UI.ScriptManager> control and on one or more <xref:System.Web.UI.ScriptManagerProxy> controls, the set of properties is determined by merging all the specified properties. Duplicate properties are ignored."
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))]

      public string[] LoadProperties { get; set; }
    return:
      type: System.String[]
      description: A string array that contains the names of the profile properties that will be preloaded and made available to client script. The default is an empty array.
  overload: System.Web.UI.ProfileServiceManager.LoadProperties*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <xref href="System.Web.UI.ProfileServiceManager.LoadProperties"></xref> property includes property names that are not in the current applicationâ€™s profile schema.
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ProfileServiceManager.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.UI.ProfileServiceManager.Path
  commentId: P:System.Web.UI.ProfileServiceManager.Path
  id: Path
  parent: System.Web.UI.ProfileServiceManager
  langs:
  - csharp
  name: Path
  nameWithType: ProfileServiceManager.Path
  fullName: ProfileServiceManager.Path
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: Gets or sets the path of a custom implementation of the profile Web service.
  remarks: "Relative virtual paths, absolute virtual paths, and fully-qualified paths are allowed.  \n  \n If the <xref:System.Web.UI.ProfileServiceManager.Path%2A> property is not set, the return value is <xref:System.String.Empty>. In this case, the AJAX features of ASP.NET will then use the built-in profile Web service that corresponds to the following internal default path: ~/ScriptServices_ProfileService.asmx. The same behavior occurs if you set <xref:System.Web.UI.ProfileServiceManager.Path%2A> to be an empty value or `null`.  \n  \n <xref:System.Web.UI.ProfileServiceManager.Path%2A> can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control. When <xref:System.Web.UI.ProfileServiceManager.Path%2A> is set at the <xref:System.Web.UI.ScriptManagerProxy> level, the following caveats apply:  \n  \n-   If there are multiple proxies in the control hierarchy, <xref:System.Web.UI.ProfileServiceManager.Path%2A> does not have to be set on each proxy instance.  \n  \n-   If <xref:System.Web.UI.ProfileServiceManager.Path%2A> is explicitly set on a proxy instance, the value must be the same for all other proxies on which this property is explicitly set."
  syntax:
    content: public string Path { get; set; }
    return:
      type: System.String
      description: The path of a custom implementation of the profile Web service.
  overload: System.Web.UI.ProfileServiceManager.Path*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: More than one unique path was set in the control hierarchy.
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ProfileServiceManager.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Web.UI.ProfileServiceManager.#ctor
  parent: System.Web.UI.ProfileServiceManager
  isExternal: false
  name: ProfileServiceManager()
  nameWithType: ProfileServiceManager.ProfileServiceManager()
  fullName: ProfileServiceManager.ProfileServiceManager()
- uid: System.Web.UI.ProfileServiceManager.LoadProperties
  parent: System.Web.UI.ProfileServiceManager
  isExternal: false
  name: LoadProperties
  nameWithType: ProfileServiceManager.LoadProperties
  fullName: ProfileServiceManager.LoadProperties
- uid: System.String
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  parent: System
  isExternal: false
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.ProfileServiceManager.Path
  parent: System.Web.UI.ProfileServiceManager
  isExternal: false
  name: Path
  nameWithType: ProfileServiceManager.Path
  fullName: ProfileServiceManager.Path
- uid: System.Web.UI.ProfileServiceManager.#ctor*
  parent: System.Web.UI.ProfileServiceManager
  isExternal: false
  name: ProfileServiceManager
  nameWithType: ProfileServiceManager.ProfileServiceManager
  fullName: ProfileServiceManager.ProfileServiceManager
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ProfileServiceManager.xml
- uid: System.Web.UI.ProfileServiceManager.LoadProperties*
  parent: System.Web.UI.ProfileServiceManager
  isExternal: false
  name: LoadProperties
  nameWithType: ProfileServiceManager.LoadProperties
  fullName: ProfileServiceManager.LoadProperties
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ProfileServiceManager.xml
- uid: System.Web.UI.ProfileServiceManager.Path*
  parent: System.Web.UI.ProfileServiceManager
  isExternal: false
  name: Path
  nameWithType: ProfileServiceManager.Path
  fullName: ProfileServiceManager.Path
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ProfileServiceManager.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
