### YamlMime:ManagedReference
items:
- uid: System.Windows.Trigger
  commentId: T:System.Windows.Trigger
  id: Trigger
  children:
  - System.Windows.Trigger.#ctor
  - System.Windows.Trigger.Property
  - System.Windows.Trigger.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  - System.Windows.Trigger.Setters
  - System.Windows.Trigger.SourceName
  - System.Windows.Trigger.Value
  - System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit
  - System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit
  - System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  - System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText(System.String)
  langs:
  - csharp
  name: Trigger
  nameWithType: Trigger
  fullName: System.Windows.Trigger
  type: Class
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Represents a trigger that applies property values or performs actions conditionally.
  remarks: "[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] defines properties that correspond to end-user actions, such as the <xref:System.Windows.UIElement.IsMouseOver%2A> property that is set to `true` when the user hovers the cursor over a <xref:System.Windows.UIElement> or the corresponding <xref:System.Windows.ContentElement.IsMouseOver%2A> property of a <xref:System.Windows.ContentElement>. Representing end-user actions in property values, along with the <xref:System.Windows.Trigger> element, allows [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] styles to change property values based on those end-user actions, all from within markup.  \n  \n The properties changed by triggers are automatically reset to their previous value when the triggered condition is no longer satisfied. Triggers are optimized for transient states which are expected to change and return to original state, such as <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> on <xref:System.Windows.Controls.Button> and <xref:System.Windows.Controls.ListBoxItem.IsSelected%2A> on <xref:System.Windows.Controls.ListBoxItem>. The <xref:System.Windows.Trigger.Property%2A> of interest must be a dependency property.  \n  \n Note that you must specify both the <xref:System.Windows.Trigger.Property%2A> and <xref:System.Windows.Trigger.Value%2A> properties on a <xref:System.Windows.Trigger> for the trigger to be meaningful. If one or both of the properties are not set, an exception is thrown.  \n  \n The <xref:System.Windows.Trigger.Setters%2A> property of a <xref:System.Windows.Trigger> object can only consist of <xref:System.Windows.Setter> objects. Adding a <xref:System.Windows.Setter> child to a <xref:System.Windows.Trigger> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Trigger> object. <xref:System.Windows.EventSetter> objects are not supported; only <xref:System.Windows.Style.Setters%2A?displayProperty=fullName> supports <xref:System.Windows.EventSetter> objects.  \n  \n There are other types of triggers. <xref:System.Windows.MultiTrigger> allows you to apply changes based on the state of multiple properties. <xref:System.Windows.EventTrigger> allows you to apply changes when an event occurs. <xref:System.Windows.DataTrigger> and <xref:System.Windows.MultiDataTrigger> are for data-bound properties."
  example:
  - "The following example shows a named <xref:System.Windows.Style> available to <xref:System.Windows.Controls.Button> controls. The <xref:System.Windows.Style> defines a <xref:System.Windows.Trigger> element that changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is `true`.  \n  \n [!code-xml[BtnStyles#2](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnStyles/CS/app.xaml#2)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Setters")]

      [System.Windows.Markup.XamlSetTypeConverter("ReceiveTypeConverter")]

      public class Trigger : System.Windows.TriggerBase, System.ComponentModel.ISupportInitialize, System.Windows.Markup.IAddChild
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.TriggerBase
  implements:
  - System.ComponentModel.ISupportInitialize
  - System.Windows.Markup.IAddChild
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  - System.Windows.TriggerBase.EnterActions
  - System.Windows.TriggerBase.ExitActions
  attributes:
  - type: System.Windows.Markup.ContentPropertyAttribute
  - type: System.Windows.Markup.XamlSetTypeConverterAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Trigger.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Trigger.#ctor
  commentId: M:System.Windows.Trigger.#ctor
  id: '#ctor'
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: Trigger()
  nameWithType: Trigger.Trigger()
  fullName: Trigger.Trigger()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Initializes a new instance of the <xref href="System.Windows.Trigger"></xref> class.
  syntax:
    content: public Trigger ();
    parameters: []
  overload: System.Windows.Trigger.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Trigger.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Trigger.Property
  commentId: P:System.Windows.Trigger.Property
  id: Property
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: Property
  nameWithType: Trigger.Property
  fullName: Trigger.Property
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Gets or sets the property that returns the value that is compared with the <xref href="System.Windows.Trigger.Value"></xref> property of the trigger. The comparison is a reference equality check.
  remarks: "The value returned by this property is compared with the value specified by the <xref:System.Windows.Trigger.Value%2A> property. The comparison that is performed is a reference equality check. If the two values match, then the associated <xref:System.Windows.Setter>s apply the specified property values.  \n  \n Use the `ClassName.PropertyName` syntax to qualify the property you are specifying if the style or template that contains this trigger does not have the `TargetType` property set.  \n  \n Note that you must specify both the <xref:System.Windows.Trigger.Property%2A> and <xref:System.Windows.Trigger.Value%2A> properties on a <xref:System.Windows.Trigger> for the trigger to be meaningful. If one or both of the properties are not set, an exception is thrown."
  example:
  - "The following example contains two triggers. The first changes the <xref:System.Windows.Controls.Control.Background%2A> property of a <xref:System.Windows.Controls.Button> when the <xref:System.Windows.UIElement.IsMouseOver%2A> property is **true**. The second changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is **true**. The <xref:System.Windows.Style.TargetType%2A> of the <xref:System.Windows.Style> is set to <xref:System.Windows.Controls.Button> and therefore there is no need to qualify the `Property` properties with the class name.  \n  \n [!code-xml[BtnStyles#2](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnStyles/CS/app.xaml#2)]"
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable, Readability=System.Windows.Readability.Unreadable)]

      [System.Windows.Markup.Ambient]

      public System.Windows.DependencyProperty Property { get; set; }
    return:
      type: System.Windows.DependencyProperty
      description: A <xref href="System.Windows.DependencyProperty"></xref> that returns the property value of the element. The default value is `null`.
  overload: System.Windows.Trigger.Property*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: A <xref href="System.Windows.Style"></xref> cannot contain a <xref href="System.Windows.Trigger"></xref> that refers to the <xref href="System.Windows.Style"></xref> property.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: After a <xref href="System.Windows.Trigger"></xref> is in use, it cannot be modified.
  attributes:
  - type: System.Windows.LocalizabilityAttribute
  - type: System.Windows.Markup.AmbientAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Trigger.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Trigger.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  commentId: M:System.Windows.Trigger.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  id: ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: ReceiveTypeConverter(Object, XamlSetTypeConverterEventArgs)
  nameWithType: Trigger.ReceiveTypeConverter(Object, XamlSetTypeConverterEventArgs)
  fullName: Trigger.ReceiveTypeConverter(Object, XamlSetTypeConverterEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Handles cases where a type converter provides a value for a property of a <xref href="System.Windows.Trigger"></xref> object.
  remarks: This is the method referenced by an applied <xref:System.Windows.Markup.XamlSetTypeConverterAttribute> attribute at the class level, which means that this method processes all attempts to set values of <xref:System.Windows.Trigger> with a type converter. You do not typically call this method directly.
  syntax:
    content: public static void ReceiveTypeConverter (object targetObject, System.Windows.Markup.XamlSetTypeConverterEventArgs eventArgs);
    parameters:
    - id: targetObject
      type: System.Object
      description: The object where the type converter sets the value.
    - id: eventArgs
      type: System.Windows.Markup.XamlSetTypeConverterEventArgs
      description: Data that is relevant for type converter processing.
  overload: System.Windows.Trigger.ReceiveTypeConverter*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Trigger.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Trigger.Setters
  commentId: P:System.Windows.Trigger.Setters
  id: Setters
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: Setters
  nameWithType: Trigger.Setters
  fullName: Trigger.Setters
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Gets a collection of <xref href="System.Windows.Setter"></xref> objects, which describe the property values to apply when the specified condition has been met.
  remarks: "<a name=\"xamlPropertyElementUsage_Setters\"></a>   \n## XAML Property Element Usage  \n  \n```  \n<object>  \n  <object.Setters>  \n    ZeroOrMoreSetters  \n  </object.Setters>  \n</object>  \n```  \n  \n<a name=\"xamlValues_Setters\"></a>   \n## XAML Values  \n *ZeroOrMoreSetters*  \n Zero or more <xref:System.Windows.Setter> objects. This does not support <xref:System.Windows.EventSetter> object.  \n  \n A <xref:System.Windows.Trigger> allows you to use <xref:System.Windows.Setter>s to apply property values when the element meets a specified condition. For example, you may want to change the background color of an element when it is in focus.  \n  \n If the same property is set more than once, the last property value will be applied.  \n  \n The <xref:System.Windows.Trigger.Setters%2A> property of a <xref:System.Windows.Trigger> object can only consist of <xref:System.Windows.Setter> objects. Adding a <xref:System.Windows.Setter> child to a <xref:System.Windows.Trigger> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Trigger> object. <xref:System.Windows.EventSetter> objects are not supported; only <xref:System.Windows.Style.Setters%2A?displayProperty=fullName> supports <xref:System.Windows.EventSetter> objects."
  example:
  - "As mentioned above, adding a <xref:System.Windows.Setter> child to a <xref:System.Windows.Trigger> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Trigger> object. In the following example, `<Trigger.Setters>` is implicit.  \n  \n [!code-xml[PhotoStoreDemoStyled#TriggerSettersRef](~/samples/snippets/csharp/VS_Snippets_Wpf/PhotoStoreDemoStyled/CS/window1.xaml#triggersettersref)]"
  syntax:
    content: public System.Windows.SetterBaseCollection Setters { get; }
    return:
      type: System.Windows.SetterBaseCollection
      description: The default value is `null`.
  overload: System.Windows.Trigger.Setters*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Trigger.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Trigger.SourceName
  commentId: P:System.Windows.Trigger.SourceName
  id: SourceName
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: SourceName
  nameWithType: Trigger.SourceName
  fullName: Trigger.SourceName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Gets or sets the name of the object with the property that causes the associated setters to be applied.
  remarks: "You can set this property to the name of any element within the scope of where the trigger collection (the collection that this <xref:System.Windows.Trigger> is part of) is applied. This is typically a named element that is within the template that contains this <xref:System.Windows.Trigger>.  \n  \n You can name an object using the [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md) syntax."
  example:
  - "One scenario when you would use the <xref:System.Windows.Trigger.SourceName%2A> property is when the property of interest is not a property of the templated parent, as in the following example:  \n  \n [!code-xml[ControlTemplateExamples#TriggerSourceName](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/menu.xaml#triggersourcename)]"
  syntax:
    content: >-
      [System.Windows.Markup.Ambient]

      public string SourceName { get; set; }
    return:
      type: System.String
      description: The default property is `null`. If this property is `null`, then the <xref href="System.Windows.Trigger.Property"></xref> property is evaluated with respect to the element this style or template is being applied to (the styled parent or the templated parent).
  overload: System.Windows.Trigger.SourceName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: After a <xref href="System.Windows.Trigger"></xref> is in use, it cannot be modified.
  attributes:
  - type: System.Windows.Markup.AmbientAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Trigger.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Trigger.Value
  commentId: P:System.Windows.Trigger.Value
  id: Value
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: Value
  nameWithType: Trigger.Value
  fullName: Trigger.Value
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Gets or sets the value to be compared with the property value of the element. The comparison is a reference equality check.
  remarks: "This value is compared with the property value returned by the <xref:System.Windows.Trigger.Property%2A> property of the <xref:System.Windows.Trigger>. The comparison that is performed is a reference quality check. If the two values are equal, then the associated <xref:System.Windows.Setter>s apply the specified property values.  \n  \n Note that you must specify both the <xref:System.Windows.Trigger.Property%2A> and <xref:System.Windows.Trigger.Value%2A> properties on a <xref:System.Windows.Trigger> for the trigger to be meaningful. Therefore, if one or both of the properties are not specified, then an exception is thrown.  \n  \n<a name=\"xamlPropertyElementUsage_Value\"></a>   \n## XAML Property Element Usage  \n  \n```  \n<object>  \n  <object.Value>  \n    Value  \n  </object.Value>  \n</object>  \n```"
  example:
  - "The following example changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is **true**.  \n  \n [!code-xml[BtnStyles#2](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnStyles/CS/app.xaml#2)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.SetterTriggerConditionValueConverter))]

      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]

      [System.Windows.Markup.DependsOn("Property")]

      [System.Windows.Markup.DependsOn("SourceName")]

      public object Value { get; set; }
    return:
      type: System.Object
      description: The default value is `null`. See also the Exceptions section.
  overload: System.Windows.Trigger.Value*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Expressions such as bindings are not supported.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: After a <xref href="System.Windows.Trigger"></xref> is in use, it cannot be modified.
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
  - type: System.Windows.LocalizabilityAttribute
  - type: System.Windows.Markup.DependsOnAttribute
  - type: System.Windows.Markup.DependsOnAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Trigger.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit
  commentId: M:System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit
  id: System#ComponentModel#ISupportInitialize#BeginInit
  isEii: true
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: ISupportInitialize.BeginInit()
  nameWithType: Trigger.ISupportInitialize.BeginInit()
  fullName: Trigger.ISupportInitialize.BeginInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Signals the object that initialization is starting.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Setter> instance is cast to an <xref:System.ComponentModel.ISupportInitialize> interface.
  syntax:
    content: void ISupportInitialize.BeginInit ();
    parameters: []
  overload: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Trigger.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit
  commentId: M:System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit
  id: System#ComponentModel#ISupportInitialize#EndInit
  isEii: true
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: ISupportInitialize.EndInit()
  nameWithType: Trigger.ISupportInitialize.EndInit()
  fullName: Trigger.ISupportInitialize.EndInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Signals the object that initialization is complete.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Setter> instance is cast to an <xref:System.ComponentModel.ISupportInitialize> interface.
  syntax:
    content: void ISupportInitialize.EndInit ();
    parameters: []
  overload: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Trigger.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  commentId: M:System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  id: System#Windows#Markup#IAddChild#AddChild(System.Object)
  isEii: true
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: IAddChild.AddChild(Object)
  nameWithType: Trigger.IAddChild.AddChild(Object)
  fullName: Trigger.IAddChild.AddChild(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Adds a child object.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Trigger> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.
  syntax:
    content: void IAddChild.AddChild (object value);
    parameters:
    - id: value
      type: System.Object
      description: The child object to add.
  overload: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Trigger.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText(System.String)
  commentId: M:System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText(System.String)
  id: System#Windows#Markup#IAddChild#AddText(System.String)
  isEii: true
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: IAddChild.AddText(String)
  nameWithType: Trigger.IAddChild.AddText(String)
  fullName: Trigger.IAddChild.AddText(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Adds the text content of a node to the object.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Trigger> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.
  syntax:
    content: void IAddChild.AddText (string text);
    parameters:
    - id: text
      type: System.String
      description: The text to add to the object.
  overload: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Trigger.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Windows.TriggerBase
  parent: System.Windows
  isExternal: false
  name: TriggerBase
  nameWithType: TriggerBase
  fullName: System.Windows.TriggerBase
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Windows.Trigger.#ctor
  parent: System.Windows.Trigger
  isExternal: false
  name: Trigger()
  nameWithType: Trigger.Trigger()
  fullName: Trigger.Trigger()
- uid: System.Windows.Trigger.Property
  parent: System.Windows.Trigger
  isExternal: false
  name: Property
  nameWithType: Trigger.Property
  fullName: Trigger.Property
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Trigger.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  parent: System.Windows.Trigger
  isExternal: false
  name: ReceiveTypeConverter(Object, XamlSetTypeConverterEventArgs)
  nameWithType: Trigger.ReceiveTypeConverter(Object, XamlSetTypeConverterEventArgs)
  fullName: Trigger.ReceiveTypeConverter(Object, XamlSetTypeConverterEventArgs)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Markup.XamlSetTypeConverterEventArgs
  parent: System.Windows.Markup
  isExternal: false
  name: XamlSetTypeConverterEventArgs
  nameWithType: XamlSetTypeConverterEventArgs
  fullName: System.Windows.Markup.XamlSetTypeConverterEventArgs
- uid: System.Windows.Trigger.Setters
  parent: System.Windows.Trigger
  isExternal: false
  name: Setters
  nameWithType: Trigger.Setters
  fullName: Trigger.Setters
- uid: System.Windows.SetterBaseCollection
  parent: System.Windows
  isExternal: false
  name: SetterBaseCollection
  nameWithType: SetterBaseCollection
  fullName: System.Windows.SetterBaseCollection
- uid: System.Windows.Trigger.SourceName
  parent: System.Windows.Trigger
  isExternal: false
  name: SourceName
  nameWithType: Trigger.SourceName
  fullName: Trigger.SourceName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Trigger.Value
  parent: System.Windows.Trigger
  isExternal: false
  name: Value
  nameWithType: Trigger.Value
  fullName: Trigger.Value
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit
  parent: System.Windows.Trigger
  isExternal: false
  name: ISupportInitialize.BeginInit()
  nameWithType: Trigger.ISupportInitialize.BeginInit()
  fullName: Trigger.ISupportInitialize.BeginInit()
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit
  parent: System.Windows.Trigger
  isExternal: false
  name: ISupportInitialize.EndInit()
  nameWithType: Trigger.ISupportInitialize.EndInit()
  fullName: Trigger.ISupportInitialize.EndInit()
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  parent: System.Windows.Trigger
  isExternal: false
  name: IAddChild.AddChild(Object)
  nameWithType: Trigger.IAddChild.AddChild(Object)
  fullName: Trigger.IAddChild.AddChild(Object)
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText(System.String)
  parent: System.Windows.Trigger
  isExternal: false
  name: IAddChild.AddText(String)
  nameWithType: Trigger.IAddChild.AddText(String)
  fullName: Trigger.IAddChild.AddText(String)
- uid: System.Windows.Trigger.#ctor*
  parent: System.Windows.Trigger
  isExternal: false
  name: Trigger
  nameWithType: Trigger.Trigger
  fullName: Trigger.Trigger
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Trigger.xml
- uid: System.Windows.Trigger.Property*
  parent: System.Windows.Trigger
  isExternal: false
  name: Property
  nameWithType: Trigger.Property
  fullName: Trigger.Property
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Trigger.xml
- uid: System.Windows.Trigger.ReceiveTypeConverter*
  parent: System.Windows.Trigger
  isExternal: false
  name: ReceiveTypeConverter
  nameWithType: Trigger.ReceiveTypeConverter
  fullName: Trigger.ReceiveTypeConverter
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Trigger.xml
- uid: System.Windows.Trigger.Setters*
  parent: System.Windows.Trigger
  isExternal: false
  name: Setters
  nameWithType: Trigger.Setters
  fullName: Trigger.Setters
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Trigger.xml
- uid: System.Windows.Trigger.SourceName*
  parent: System.Windows.Trigger
  isExternal: false
  name: SourceName
  nameWithType: Trigger.SourceName
  fullName: Trigger.SourceName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Trigger.xml
- uid: System.Windows.Trigger.Value*
  parent: System.Windows.Trigger
  isExternal: false
  name: Value
  nameWithType: Trigger.Value
  fullName: Trigger.Value
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Trigger.xml
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit*
  parent: System.Windows.Trigger
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.BeginInit
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.BeginInit
  fullName: Trigger.System.ComponentModel.ISupportInitialize.BeginInit
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Trigger.xml
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit*
  parent: System.Windows.Trigger
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.EndInit
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.EndInit
  fullName: Trigger.System.ComponentModel.ISupportInitialize.EndInit
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Trigger.xml
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild*
  parent: System.Windows.Trigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddChild
  fullName: Trigger.System.Windows.Markup.IAddChild.AddChild
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Trigger.xml
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText*
  parent: System.Windows.Trigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddText
  fullName: Trigger.System.Windows.Markup.IAddChild.AddText
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/Trigger.xml
- uid: System.Windows.DependencyObject.Equals(System.Object)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: Equals(Object)
  nameWithType: DependencyObject.Equals(Object)
  fullName: DependencyObject.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Windows.DependencyObject.GetHashCode
  parent: System.Windows.DependencyObject
  isExternal: false
  name: GetHashCode()
  nameWithType: DependencyObject.GetHashCode()
  fullName: DependencyObject.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Windows.Threading.DispatcherObject.CheckAccess
  parent: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: CheckAccess()
  nameWithType: DispatcherObject.CheckAccess()
  fullName: DispatcherObject.CheckAccess()
- uid: System.Windows.Threading.DispatcherObject.Dispatcher
  parent: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: Dispatcher
  nameWithType: DispatcherObject.Dispatcher
  fullName: DispatcherObject.Dispatcher
- uid: System.Windows.Threading.DispatcherObject.VerifyAccess
  parent: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: VerifyAccess()
  nameWithType: DispatcherObject.VerifyAccess()
  fullName: DispatcherObject.VerifyAccess()
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: ClearValue(DependencyProperty)
  nameWithType: DependencyObject.ClearValue(DependencyProperty)
  fullName: DependencyObject.ClearValue(DependencyProperty)
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: ClearValue(DependencyPropertyKey)
  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)
  fullName: DependencyObject.ClearValue(DependencyPropertyKey)
- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: CoerceValue(DependencyProperty)
  nameWithType: DependencyObject.CoerceValue(DependencyProperty)
  fullName: DependencyObject.CoerceValue(DependencyProperty)
- uid: System.Windows.DependencyObject.DependencyObjectType
  parent: System.Windows.DependencyObject
  isExternal: false
  name: DependencyObjectType
  nameWithType: DependencyObject.DependencyObjectType
  fullName: DependencyObject.DependencyObjectType
- uid: System.Windows.DependencyObject.GetLocalValueEnumerator
  parent: System.Windows.DependencyObject
  isExternal: false
  name: GetLocalValueEnumerator()
  nameWithType: DependencyObject.GetLocalValueEnumerator()
  fullName: DependencyObject.GetLocalValueEnumerator()
- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: DependencyObject.GetValue(DependencyProperty)
- uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: InvalidateProperty(DependencyProperty)
  nameWithType: DependencyObject.InvalidateProperty(DependencyProperty)
  fullName: DependencyObject.InvalidateProperty(DependencyProperty)
- uid: System.Windows.DependencyObject.IsSealed
  parent: System.Windows.DependencyObject
  isExternal: false
  name: IsSealed
  nameWithType: DependencyObject.IsSealed
  fullName: DependencyObject.IsSealed
- uid: System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)
  nameWithType: DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs)
  fullName: DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: ReadLocalValue(DependencyProperty)
  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)
  fullName: DependencyObject.ReadLocalValue(DependencyProperty)
- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: SetCurrentValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)
  fullName: DependencyObject.SetCurrentValue(DependencyProperty, Object)
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: SetValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)
  fullName: DependencyObject.SetValue(DependencyProperty, Object)
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: SetValue(DependencyPropertyKey, Object)
  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)
  fullName: DependencyObject.SetValue(DependencyPropertyKey, Object)
- uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: ShouldSerializeProperty(DependencyProperty)
  nameWithType: DependencyObject.ShouldSerializeProperty(DependencyProperty)
  fullName: DependencyObject.ShouldSerializeProperty(DependencyProperty)
- uid: System.Windows.TriggerBase.EnterActions
  parent: System.Windows.TriggerBase
  isExternal: false
  name: EnterActions
  nameWithType: TriggerBase.EnterActions
  fullName: TriggerBase.EnterActions
- uid: System.Windows.TriggerBase.ExitActions
  parent: System.Windows.TriggerBase
  isExternal: false
  name: ExitActions
  nameWithType: TriggerBase.ExitActions
  fullName: TriggerBase.ExitActions
- uid: System.ComponentModel.ISupportInitialize
  parent: System.ComponentModel
  isExternal: false
  name: ISupportInitialize
  nameWithType: ISupportInitialize
  fullName: System.ComponentModel.ISupportInitialize
- uid: System.Windows.Markup.IAddChild
  parent: System.Windows.Markup
  isExternal: false
  name: IAddChild
  nameWithType: IAddChild
  fullName: System.Windows.Markup.IAddChild
