### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.ContextBindingElement
  commentId: T:System.ServiceModel.Channels.ContextBindingElement
  id: ContextBindingElement
  children:
  - System.ServiceModel.Channels.ContextBindingElement.#ctor
  - System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel)
  - System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism)
  - System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri)
  - System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri,System.Boolean)
  - System.ServiceModel.Channels.ContextBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ContextBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ContextBindingElement.ClientCallbackAddress
  - System.ServiceModel.Channels.ContextBindingElement.Clone
  - System.ServiceModel.Channels.ContextBindingElement.ContextExchangeMechanism
  - System.ServiceModel.Channels.ContextBindingElement.ContextManagementEnabled
  - System.ServiceModel.Channels.ContextBindingElement.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  - System.ServiceModel.Channels.ContextBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ContextBindingElement.ProtectionLevel
  langs:
  - csharp
  name: ContextBindingElement
  nameWithType: ContextBindingElement
  fullName: System.ServiceModel.Channels.ContextBindingElement
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Provides a protection level and an exchange mechanism as part of the context of a binding element and the functionality to build the channel listeners and factories.
  remarks: "The <xref:System.ServiceModel.Channels.ContextBindingElement> allows the user to add an element to the binding of a service for managing its context exchange protocol. The <xref:System.ServiceModel.Channels.ContextBindingElement> is typically stacked on top of reliability, security, and transport binding elements. A <xref:System.ServiceModel.Channels.ContextBindingElement> does not require any configuration options and can create channel factories for <xref:System.ServiceModel.Channels.IRequestChannel>, <xref:System.ServiceModel.Channels.IRequestSessionChannel>, and <xref:System.ServiceModel.Channels.IDuplexSessionChannel>. It can also create channel listeners for <xref:System.ServiceModel.Channels.IReplyChannel>, <xref:System.ServiceModel.Channels.IReplySessionChannel>, and <xref:System.ServiceModel.Channels.IDuplexSessionChannel>. A context channel does not change the channel interface â€“ the underlying channel stack must support the requested channel shape and session capability.  \n  \n The channel listeners and factories are used to construct the part of the channel stacks used to process incoming and outgoing messages.  \n  \n> [!NOTE]\n>  If a session-based binding is created with a <xref:System.ServiceModel.Channels.ContextBindingElement> and used with a contract that specifies <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> = <xref:System.ServiceModel.SessionMode.NotAllowed>, an <xref:System.InvalidOperationException> is thrown when the channel is created with the following text: \"Channel context management cannot be enabled or disabled after the channel is opened.\" You must set <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> to <xref:System.ServiceModel.SessionMode.Allowed> or <xref:System.ServiceModel.SessionMode.Required> or not use a session-based channel.  \n  \n When creating a custom binding, it is recommended that you add the <xref:System.ServiceModel.Channels.ContextBindingElement> to the <xref:System.ServiceModel.Channels.BindingElementCollection> of the custom binding before adding any reliability and security binding elements, if present. If you do not, your service may throw a <xref:System.ServiceModel.ProtocolException> with the following message:  \n  \n \"Context channel received a message with context which does not match the current context cached at the channel. Ensure service does not change context after it was originally set or disable context management by setting channel property 'IContextManager.Enabled' to false.\""
  syntax:
    content: 'public class ContextBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Channels.IContextBindingElement, System.ServiceModel.Description.IPolicyExportExtension'
  inheritance:
  - System.Object
  - System.ServiceModel.Channels.BindingElement
  implements:
  - System.ServiceModel.Channels.IContextBindingElement
  - System.ServiceModel.Description.IPolicyExportExtension
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.ContextBindingElement.#ctor
  commentId: M:System.ServiceModel.Channels.ContextBindingElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.ContextBindingElement
  langs:
  - csharp
  name: ContextBindingElement()
  nameWithType: ContextBindingElement.ContextBindingElement()
  fullName: ContextBindingElement.ContextBindingElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Channels.ContextBindingElement"></xref> class.
  remarks: Sets the default values of <xref:System.Net.Security.ProtectionLevel.Sign> for <xref:System.Net.Security.ProtectionLevel> and <xref:System.ServiceModel.Channels.ContextExchangeMechanism.ContextSoapHeader> for <xref:System.ServiceModel.Channels.ContextExchangeMechanism>.
  syntax:
    content: public ContextBindingElement ();
    parameters: []
  overload: System.ServiceModel.Channels.ContextBindingElement.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel)
  commentId: M:System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel)
  id: '#ctor(System.Net.Security.ProtectionLevel)'
  parent: System.ServiceModel.Channels.ContextBindingElement
  langs:
  - csharp
  name: ContextBindingElement(ProtectionLevel)
  nameWithType: ContextBindingElement.ContextBindingElement(ProtectionLevel)
  fullName: ContextBindingElement.ContextBindingElement(ProtectionLevel)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Channels.ContextBindingElement"></xref> class with a specified level of protection.
  remarks: Sets the default value of <xref:System.ServiceModel.Channels.ContextExchangeMechanism.ContextSoapHeader> for <xref:System.ServiceModel.Channels.ContextExchangeMechanism>.
  syntax:
    content: public ContextBindingElement (System.Net.Security.ProtectionLevel protectionLevel);
    parameters:
    - id: protectionLevel
      type: System.Net.Security.ProtectionLevel
      description: The <xref href="System.Net.Security.ProtectionLevel"></xref> for the binding element.
  overload: System.ServiceModel.Channels.ContextBindingElement.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The <code>protectionLevel</code> is not valid.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism)
  commentId: M:System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism)
  id: '#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism)'
  parent: System.ServiceModel.Channels.ContextBindingElement
  langs:
  - csharp
  name: ContextBindingElement(ProtectionLevel, ContextExchangeMechanism)
  nameWithType: ContextBindingElement.ContextBindingElement(ProtectionLevel, ContextExchangeMechanism)
  fullName: ContextBindingElement.ContextBindingElement(ProtectionLevel, ContextExchangeMechanism)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Channels.ContextBindingElement"></xref> class with a specified level of protection and exchange mechanism.
  syntax:
    content: public ContextBindingElement (System.Net.Security.ProtectionLevel protectionLevel, System.ServiceModel.Channels.ContextExchangeMechanism contextExchangeMechanism);
    parameters:
    - id: protectionLevel
      type: System.Net.Security.ProtectionLevel
      description: The <xref href="System.Net.Security.ProtectionLevel"></xref> for the binding element.
    - id: contextExchangeMechanism
      type: System.ServiceModel.Channels.ContextExchangeMechanism
      description: The <xref href="System.ServiceModel.Channels.ContextExchangeMechanism"></xref> that specifies the mechanism used to exchange context for the binding element.
  overload: System.ServiceModel.Channels.ContextBindingElement.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>protectionLevel</code> or <code>contextExchangeMechanism</code> is not valid.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri)
  commentId: M:System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri)
  id: '#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri)'
  parent: System.ServiceModel.Channels.ContextBindingElement
  langs:
  - csharp
  name: ContextBindingElement(ProtectionLevel, ContextExchangeMechanism, Uri)
  nameWithType: ContextBindingElement.ContextBindingElement(ProtectionLevel, ContextExchangeMechanism, Uri)
  fullName: ContextBindingElement.ContextBindingElement(ProtectionLevel, ContextExchangeMechanism, Uri)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Channels.ContextBindingElement"></xref> class with the specified protection level, context exchange mechanism, and client callback address.
  syntax:
    content: public ContextBindingElement (System.Net.Security.ProtectionLevel protectionLevel, System.ServiceModel.Channels.ContextExchangeMechanism contextExchangeMechanism, Uri clientCallbackAddress);
    parameters:
    - id: protectionLevel
      type: System.Net.Security.ProtectionLevel
      description: The protection level form the binding element.
    - id: contextExchangeMechanism
      type: System.ServiceModel.Channels.ContextExchangeMechanism
      description: The mechanism used to exchange context for the binding element.
    - id: clientCallbackAddress
      type: System.Uri
      description: The client callback address.
  overload: System.ServiceModel.Channels.ContextBindingElement.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri,System.Boolean)
  commentId: M:System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri,System.Boolean)
  id: '#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri,System.Boolean)'
  parent: System.ServiceModel.Channels.ContextBindingElement
  langs:
  - csharp
  name: ContextBindingElement(ProtectionLevel, ContextExchangeMechanism, Uri, Boolean)
  nameWithType: ContextBindingElement.ContextBindingElement(ProtectionLevel, ContextExchangeMechanism, Uri, Boolean)
  fullName: ContextBindingElement.ContextBindingElement(ProtectionLevel, ContextExchangeMechanism, Uri, Boolean)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Channels.ContextBindingElement"></xref> class with the specified protection level, context exchange mechanism, client callback address, and a value that specifies whether context management is enabled.
  syntax:
    content: public ContextBindingElement (System.Net.Security.ProtectionLevel protectionLevel, System.ServiceModel.Channels.ContextExchangeMechanism contextExchangeMechanism, Uri clientCallbackAddress, bool contextManagementEnabled);
    parameters:
    - id: protectionLevel
      type: System.Net.Security.ProtectionLevel
      description: The protection level for the binding element.
    - id: contextExchangeMechanism
      type: System.ServiceModel.Channels.ContextExchangeMechanism
      description: The mechanism used to exchange context for the binding element.
    - id: clientCallbackAddress
      type: System.Uri
      description: The client callback address.
    - id: contextManagementEnabled
      type: System.Boolean
      description: '`true` if the context management is enabled; otherwise `false`.'
  overload: System.ServiceModel.Channels.ContextBindingElement.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.ContextBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.ContextBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ContextBindingElement
  langs:
  - csharp
  name: BuildChannelFactory<TChannel>(BindingContext)
  nameWithType: ContextBindingElement.BuildChannelFactory<TChannel>(BindingContext)
  fullName: ContextBindingElement.BuildChannelFactory<TChannel>(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Builds the channel factory stack on the client that creates a specified type of channel for a specified context.
  syntax:
    content: public override System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: The <xref href="System.ServiceModel.Channels.BindingContext"></xref> for the channel.
    typeParameters:
    - id: TChannel
      description: The type of channel the channel factory produces.
    return:
      type: System.ServiceModel.Channels.IChannelFactory`1
      description: An <xref href="System.ServiceModel.Channels.IChannelFactory`1"></xref> of type <code>TChannel</code> for the specified context.
  overload: System.ServiceModel.Channels.ContextBindingElement.BuildChannelFactory``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>context</code> set is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.ContextBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.ContextBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ContextBindingElement
  langs:
  - csharp
  name: BuildChannelListener<TChannel>(BindingContext)
  nameWithType: ContextBindingElement.BuildChannelListener<TChannel>(BindingContext)
  fullName: ContextBindingElement.BuildChannelListener<TChannel>(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Builds the channel listener stack on the client that accepts a specified type of channel for a specified context.
  syntax:
    content: 'public override System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: The <xref href="System.ServiceModel.Channels.BindingContext"></xref> for the listener.
    typeParameters:
    - id: TChannel
      description: The type of channel the channel listener accepts.
    return:
      type: System.ServiceModel.Channels.IChannelListener`1
      description: An <xref href="System.ServiceModel.Channels.IChannelListener`1"></xref> of type <code>TChannel</code> for the specified context.
  overload: System.ServiceModel.Channels.ContextBindingElement.BuildChannelListener``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>context</code> set is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  id: CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ContextBindingElement
  langs:
  - csharp
  name: CanBuildChannelFactory<TChannel>(BindingContext)
  nameWithType: ContextBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)
  fullName: ContextBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Returns a value that indicates whether the current binding element can build a factory for a specified type of channel and context.
  syntax:
    content: public override bool CanBuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: The <xref href="System.ServiceModel.Channels.BindingContext"></xref> for the factory.
    typeParameters:
    - id: TChannel
      description: The type of channel the channel factory produces. Only <xref href="System.ServiceModel.Channels.IRequestChannel"></xref>, <xref href="System.ServiceModel.Channels.IRequestSessionChannel"></xref>, and <xref href="System.ServiceModel.Channels.IDuplexSessionChannel"></xref> are allowed by default.
    return:
      type: System.Boolean
      description: '`true` if the specified channel factory stack can be built on the client; otherwise, `false`.'
  overload: System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelFactory``1*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  id: CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ContextBindingElement
  langs:
  - csharp
  name: CanBuildChannelListener<TChannel>(BindingContext)
  nameWithType: ContextBindingElement.CanBuildChannelListener<TChannel>(BindingContext)
  fullName: ContextBindingElement.CanBuildChannelListener<TChannel>(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Returns a value that indicates whether the current binding can build a listener for a specified type of channel and context.
  syntax:
    content: 'public override bool CanBuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: The <xref href="System.ServiceModel.Channels.BindingContext"></xref> for the listener.
    typeParameters:
    - id: TChannel
      description: The type of channel the channel listener accepts. Only <xref href="System.ServiceModel.Channels.IReplyChannel"></xref>, <xref href="System.ServiceModel.Channels.IReplySessionChannel"></xref>, and <xref href="System.ServiceModel.Channels.IDuplexSessionChannel"></xref> are allowed by default.
    return:
      type: System.Boolean
      description: '`true` if the specified channel listener stack can be built on the service; otherwise, `false`.'
  overload: System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelListener``1*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.ContextBindingElement.ClientCallbackAddress
  commentId: P:System.ServiceModel.Channels.ContextBindingElement.ClientCallbackAddress
  id: ClientCallbackAddress
  parent: System.ServiceModel.Channels.ContextBindingElement
  langs:
  - csharp
  name: ClientCallbackAddress
  nameWithType: ContextBindingElement.ClientCallbackAddress
  fullName: ContextBindingElement.ClientCallbackAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets or sets the client callback address for the binding element.
  syntax:
    content: public Uri ClientCallbackAddress { get; set; }
    return:
      type: System.Uri
      description: The client callback address.
  overload: System.ServiceModel.Channels.ContextBindingElement.ClientCallbackAddress*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.ContextBindingElement.Clone
  commentId: M:System.ServiceModel.Channels.ContextBindingElement.Clone
  id: Clone
  parent: System.ServiceModel.Channels.ContextBindingElement
  langs:
  - csharp
  name: Clone()
  nameWithType: ContextBindingElement.Clone()
  fullName: ContextBindingElement.Clone()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Creates a new <xref href="System.ServiceModel.Channels.ContextBindingElement"></xref> object initialized from the current one.
  remarks: "The cloned <xref:System.ServiceModel.Channels.ContextBindingElement> object has the same <xref:System.ServiceModel.Channels.ContextBindingElement.ProtectionLevel%2A> and <xref:System.ServiceModel.Channels.ContextExchangeMechanism> values of the current <xref:System.ServiceModel.Channels.ContextBindingElement> object.  \n  \n This creates a complete copy of the current binding element object tree, also called a deep clone. A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object. This is called copying the entire object graph. Returning a deep clone enables the runtime to support the case in which multiple custom bindings share a custom binding element. If a deep clone is not returned, the run-time behavior is undefined. A shallow clone of an object is a copy of the object only. If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects."
  syntax:
    content: public override System.ServiceModel.Channels.BindingElement Clone ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElement
      description: A <xref href="System.ServiceModel.Channels.ContextBindingElement"></xref> object initialized from the current one.
  overload: System.ServiceModel.Channels.ContextBindingElement.Clone*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.ContextBindingElement.ContextExchangeMechanism
  commentId: P:System.ServiceModel.Channels.ContextBindingElement.ContextExchangeMechanism
  id: ContextExchangeMechanism
  parent: System.ServiceModel.Channels.ContextBindingElement
  langs:
  - csharp
  name: ContextExchangeMechanism
  nameWithType: ContextBindingElement.ContextExchangeMechanism
  fullName: ContextBindingElement.ContextExchangeMechanism
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets or sets the exchange mechanism used to communicate context for the binding element.
  syntax:
    content: public System.ServiceModel.Channels.ContextExchangeMechanism ContextExchangeMechanism { get; set; }
    return:
      type: System.ServiceModel.Channels.ContextExchangeMechanism
      description: The <xref href="System.ServiceModel.Channels.ContextExchangeMechanism"></xref> that specifies the mechanism used to exchange context for the binding element.
  overload: System.ServiceModel.Channels.ContextBindingElement.ContextExchangeMechanism*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value set is not valid.
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.ContextBindingElement.ContextManagementEnabled
  commentId: P:System.ServiceModel.Channels.ContextBindingElement.ContextManagementEnabled
  id: ContextManagementEnabled
  parent: System.ServiceModel.Channels.ContextBindingElement
  langs:
  - csharp
  name: ContextManagementEnabled
  nameWithType: ContextBindingElement.ContextManagementEnabled
  fullName: ContextBindingElement.ContextManagementEnabled
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets or sets a value that specifies whether context management is enabled.
  syntax:
    content: public bool ContextManagementEnabled { get; set; }
    return:
      type: System.Boolean
      description: '`true` if context management is enabled; otherwise, `false`.'
  overload: System.ServiceModel.Channels.ContextBindingElement.ContextManagementEnabled*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.ContextBindingElement.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  commentId: M:System.ServiceModel.Channels.ContextBindingElement.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  id: ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  parent: System.ServiceModel.Channels.ContextBindingElement
  langs:
  - csharp
  name: ExportPolicy(MetadataExporter, PolicyConversionContext)
  nameWithType: ContextBindingElement.ExportPolicy(MetadataExporter, PolicyConversionContext)
  fullName: ContextBindingElement.ExportPolicy(MetadataExporter, PolicyConversionContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Writes custom policy assertions into the context of the binding element.
  syntax:
    content: public virtual void ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);
    parameters:
    - id: exporter
      type: System.ServiceModel.Description.MetadataExporter
      description: The <xref href="System.ServiceModel.Description.MetadataExporter"></xref> that exports the metadata information.
    - id: context
      type: System.ServiceModel.Description.PolicyConversionContext
      description: A <xref href="System.ServiceModel.Description.WsdlContractConversionContext"></xref> object that provides mappings from exported WSDL elements to the contract description.
  overload: System.ServiceModel.Channels.ContextBindingElement.ExportPolicy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>context</code> is `null` or the policy assertion in the binding is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.ContextBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.ContextBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  id: GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ContextBindingElement
  langs:
  - csharp
  name: GetProperty<T>(BindingContext)
  nameWithType: ContextBindingElement.GetProperty<T>(BindingContext)
  fullName: ContextBindingElement.GetProperty<T>(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Returns the typed object with the specified context from the appropriate layer in the channel stack.
  syntax:
    content: 'public override T GetProperty<T> (System.ServiceModel.Channels.BindingContext context) where T : class;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: The <xref href="System.ServiceModel.Channels.BindingContext"></xref> specified.
    typeParameters:
    - id: T
      description: The typed object for which the method is querying.
    return:
      type: T
      description: The typed object <code>T</code> requested if it is present.
  overload: System.ServiceModel.Channels.ContextBindingElement.GetProperty``1*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>context</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.ContextBindingElement.ProtectionLevel
  commentId: P:System.ServiceModel.Channels.ContextBindingElement.ProtectionLevel
  id: ProtectionLevel
  parent: System.ServiceModel.Channels.ContextBindingElement
  langs:
  - csharp
  name: ProtectionLevel
  nameWithType: ContextBindingElement.ProtectionLevel
  fullName: ContextBindingElement.ProtectionLevel
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets or sets the level of protection for the binding element from the context.
  syntax:
    content: public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }
    return:
      type: System.Net.Security.ProtectionLevel
      description: The <xref href="System.Net.Security.ProtectionLevel"></xref> for the binding element.
  overload: System.ServiceModel.Channels.ContextBindingElement.ProtectionLevel*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value set is not valid.
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.ServiceModel.Channels.BindingElement
  parent: System.ServiceModel.Channels
  isExternal: false
  name: BindingElement
  nameWithType: BindingElement
  fullName: System.ServiceModel.Channels.BindingElement
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ServiceModel.Channels.ContextBindingElement.#ctor
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: ContextBindingElement()
  nameWithType: ContextBindingElement.ContextBindingElement()
  fullName: ContextBindingElement.ContextBindingElement()
- uid: System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel)
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: ContextBindingElement(ProtectionLevel)
  nameWithType: ContextBindingElement.ContextBindingElement(ProtectionLevel)
  fullName: ContextBindingElement.ContextBindingElement(ProtectionLevel)
- uid: System.Net.Security.ProtectionLevel
  parent: System.Net.Security
  isExternal: false
  name: ProtectionLevel
  nameWithType: ProtectionLevel
  fullName: System.Net.Security.ProtectionLevel
- uid: System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism)
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: ContextBindingElement(ProtectionLevel, ContextExchangeMechanism)
  nameWithType: ContextBindingElement.ContextBindingElement(ProtectionLevel, ContextExchangeMechanism)
  fullName: ContextBindingElement.ContextBindingElement(ProtectionLevel, ContextExchangeMechanism)
- uid: System.ServiceModel.Channels.ContextExchangeMechanism
  parent: System.ServiceModel.Channels
  isExternal: false
  name: ContextExchangeMechanism
  nameWithType: ContextExchangeMechanism
  fullName: System.ServiceModel.Channels.ContextExchangeMechanism
- uid: System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri)
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: ContextBindingElement(ProtectionLevel, ContextExchangeMechanism, Uri)
  nameWithType: ContextBindingElement.ContextBindingElement(ProtectionLevel, ContextExchangeMechanism, Uri)
  fullName: ContextBindingElement.ContextBindingElement(ProtectionLevel, ContextExchangeMechanism, Uri)
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri,System.Boolean)
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: ContextBindingElement(ProtectionLevel, ContextExchangeMechanism, Uri, Boolean)
  nameWithType: ContextBindingElement.ContextBindingElement(ProtectionLevel, ContextExchangeMechanism, Uri, Boolean)
  fullName: ContextBindingElement.ContextBindingElement(ProtectionLevel, ContextExchangeMechanism, Uri, Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.ContextBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: BuildChannelFactory<TChannel>(BindingContext)
  nameWithType: ContextBindingElement.BuildChannelFactory<TChannel>(BindingContext)
  fullName: ContextBindingElement.BuildChannelFactory<TChannel>(BindingContext)
- uid: System.ServiceModel.Channels.IChannelFactory`1
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
- uid: System.ServiceModel.Channels.BindingContext
  parent: System.ServiceModel.Channels
  isExternal: false
  name: BindingContext
  nameWithType: BindingContext
  fullName: System.ServiceModel.Channels.BindingContext
- uid: System.ServiceModel.Channels.ContextBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: BuildChannelListener<TChannel>(BindingContext)
  nameWithType: ContextBindingElement.BuildChannelListener<TChannel>(BindingContext)
  fullName: ContextBindingElement.BuildChannelListener<TChannel>(BindingContext)
- uid: System.ServiceModel.Channels.IChannelListener`1
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelListener<TChannel>
  nameWithType: IChannelListener<TChannel>
  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>
- uid: System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: CanBuildChannelFactory<TChannel>(BindingContext)
  nameWithType: ContextBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)
  fullName: ContextBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)
- uid: System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: CanBuildChannelListener<TChannel>(BindingContext)
  nameWithType: ContextBindingElement.CanBuildChannelListener<TChannel>(BindingContext)
  fullName: ContextBindingElement.CanBuildChannelListener<TChannel>(BindingContext)
- uid: System.ServiceModel.Channels.ContextBindingElement.ClientCallbackAddress
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: ClientCallbackAddress
  nameWithType: ContextBindingElement.ClientCallbackAddress
  fullName: ContextBindingElement.ClientCallbackAddress
- uid: System.ServiceModel.Channels.ContextBindingElement.Clone
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: Clone()
  nameWithType: ContextBindingElement.Clone()
  fullName: ContextBindingElement.Clone()
- uid: System.ServiceModel.Channels.ContextBindingElement.ContextExchangeMechanism
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: ContextExchangeMechanism
  nameWithType: ContextBindingElement.ContextExchangeMechanism
  fullName: ContextBindingElement.ContextExchangeMechanism
- uid: System.ServiceModel.Channels.ContextBindingElement.ContextManagementEnabled
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: ContextManagementEnabled
  nameWithType: ContextBindingElement.ContextManagementEnabled
  fullName: ContextBindingElement.ContextManagementEnabled
- uid: System.ServiceModel.Channels.ContextBindingElement.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: ExportPolicy(MetadataExporter, PolicyConversionContext)
  nameWithType: ContextBindingElement.ExportPolicy(MetadataExporter, PolicyConversionContext)
  fullName: ContextBindingElement.ExportPolicy(MetadataExporter, PolicyConversionContext)
- uid: System.ServiceModel.Description.MetadataExporter
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataExporter
  nameWithType: MetadataExporter
  fullName: System.ServiceModel.Description.MetadataExporter
- uid: System.ServiceModel.Description.PolicyConversionContext
  parent: System.ServiceModel.Description
  isExternal: false
  name: PolicyConversionContext
  nameWithType: PolicyConversionContext
  fullName: System.ServiceModel.Description.PolicyConversionContext
- uid: System.ServiceModel.Channels.ContextBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: GetProperty<T>(BindingContext)
  nameWithType: ContextBindingElement.GetProperty<T>(BindingContext)
  fullName: ContextBindingElement.GetProperty<T>(BindingContext)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.Channels.ContextBindingElement.ProtectionLevel
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: ProtectionLevel
  nameWithType: ContextBindingElement.ProtectionLevel
  fullName: ContextBindingElement.ProtectionLevel
- uid: System.ServiceModel.Channels.ContextBindingElement.#ctor*
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: ContextBindingElement
  nameWithType: ContextBindingElement.ContextBindingElement
  fullName: ContextBindingElement.ContextBindingElement
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
- uid: System.ServiceModel.Channels.ContextBindingElement.BuildChannelFactory``1*
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: BuildChannelFactory<TChannel>
  nameWithType: ContextBindingElement.BuildChannelFactory<TChannel>
  fullName: ContextBindingElement.BuildChannelFactory<TChannel>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
- uid: System.ServiceModel.Channels.ContextBindingElement.BuildChannelListener``1*
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: BuildChannelListener<TChannel>
  nameWithType: ContextBindingElement.BuildChannelListener<TChannel>
  fullName: ContextBindingElement.BuildChannelListener<TChannel>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
- uid: System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelFactory``1*
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: CanBuildChannelFactory<TChannel>
  nameWithType: ContextBindingElement.CanBuildChannelFactory<TChannel>
  fullName: ContextBindingElement.CanBuildChannelFactory<TChannel>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
- uid: System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelListener``1*
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: CanBuildChannelListener<TChannel>
  nameWithType: ContextBindingElement.CanBuildChannelListener<TChannel>
  fullName: ContextBindingElement.CanBuildChannelListener<TChannel>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
- uid: System.ServiceModel.Channels.ContextBindingElement.ClientCallbackAddress*
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: ClientCallbackAddress
  nameWithType: ContextBindingElement.ClientCallbackAddress
  fullName: ContextBindingElement.ClientCallbackAddress
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
- uid: System.ServiceModel.Channels.ContextBindingElement.Clone*
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: Clone
  nameWithType: ContextBindingElement.Clone
  fullName: ContextBindingElement.Clone
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
- uid: System.ServiceModel.Channels.ContextBindingElement.ContextExchangeMechanism*
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: ContextExchangeMechanism
  nameWithType: ContextBindingElement.ContextExchangeMechanism
  fullName: ContextBindingElement.ContextExchangeMechanism
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
- uid: System.ServiceModel.Channels.ContextBindingElement.ContextManagementEnabled*
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: ContextManagementEnabled
  nameWithType: ContextBindingElement.ContextManagementEnabled
  fullName: ContextBindingElement.ContextManagementEnabled
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
- uid: System.ServiceModel.Channels.ContextBindingElement.ExportPolicy*
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: ExportPolicy
  nameWithType: ContextBindingElement.ExportPolicy
  fullName: ContextBindingElement.ExportPolicy
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
- uid: System.ServiceModel.Channels.ContextBindingElement.GetProperty``1*
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: GetProperty<T>
  nameWithType: ContextBindingElement.GetProperty<T>
  fullName: ContextBindingElement.GetProperty<T>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
- uid: System.ServiceModel.Channels.ContextBindingElement.ProtectionLevel*
  parent: System.ServiceModel.Channels.ContextBindingElement
  isExternal: false
  name: ProtectionLevel
  nameWithType: ContextBindingElement.ProtectionLevel
  fullName: ContextBindingElement.ProtectionLevel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ContextBindingElement.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.ServiceModel.Channels.IContextBindingElement
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IContextBindingElement
  nameWithType: IContextBindingElement
  fullName: System.ServiceModel.Channels.IContextBindingElement
- uid: System.ServiceModel.Description.IPolicyExportExtension
  parent: System.ServiceModel.Description
  isExternal: false
  name: IPolicyExportExtension
  nameWithType: IPolicyExportExtension
  fullName: System.ServiceModel.Description.IPolicyExportExtension
