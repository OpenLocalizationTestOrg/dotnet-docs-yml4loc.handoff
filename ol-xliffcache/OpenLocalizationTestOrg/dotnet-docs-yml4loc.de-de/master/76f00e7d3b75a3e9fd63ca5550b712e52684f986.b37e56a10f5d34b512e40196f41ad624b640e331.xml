{"nodes":[{"content":"Specifies the template or user control that Dynamic Data uses to display a data field.","nodes":[{"pos":[0,86],"content":"Specifies the template or user control that Dynamic Data uses to display a data field.","nodes":[{"content":"Specifies the template or user control that Dynamic Data uses to display a data field.","pos":[0,86]}]}],"pos":[1225,1312],"yaml":true},{"content":"A Visual Studio project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?linkid=158686).  \n  \n MVC uses the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> class to associate a model with a data field. Dynamic Data uses the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> class to associate a user control with a data field. Dynamic Data uses the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A>property to determine which user control to use in order to display a data field.  \n  \n For more information about how to use attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).","nodes":[{"pos":[0,137],"content":"A Visual Studio project with source code is available to accompany this topic: <bpt id=\"p1\">[</bpt>Download<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=158686)</ept>.","source":"A Visual Studio project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?linkid=158686)."},{"pos":[144,573],"content":"MVC uses the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> class to associate a model with a data field. Dynamic Data uses the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> class to associate a user control with a data field. Dynamic Data uses the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A>property to determine which user control to use in order to display a data field.","nodes":[{"content":"MVC uses the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> class to associate a model with a data field. Dynamic Data uses the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> class to associate a user control with a data field. Dynamic Data uses the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A>property to determine which user control to use in order to display a data field.","pos":[0,429],"nodes":[{"content":"MVC uses the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute&gt;</ph> class to associate a model with a data field.","pos":[0,119],"source":"MVC uses the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> class to associate a model with a data field."},{"content":"Dynamic Data uses the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute&gt;</ph> class to associate a user control with a data field.","pos":[120,255],"source":" Dynamic Data uses the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> class to associate a user control with a data field."},{"content":"Dynamic Data uses the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A&gt;</ph>property to determine which user control to use in order to display a data field.","pos":[256,429],"source":" Dynamic Data uses the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A>property to determine which user control to use in order to display a data field."}]}]},{"pos":[580,719],"content":"For more information about how to use attributes, see <bpt id=\"p1\">[</bpt>Attributes<ept id=\"p1\">](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)</ept>.","source":"For more information about how to use attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)."}],"pos":[1323,2049],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.UIHintAttribute\"></xref> class by using a specified user control.","nodes":[{"pos":[0,149],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.DataAnnotations.UIHintAttribute\"&gt;&lt;/xref&gt;</ph> class by using a specified user control.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.UIHintAttribute\"></xref> class by using a specified user control."}],"pos":[7958,8108],"yaml":true},{"content":"A <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> object that is created with this constructor is initialized using the specified `uiHint`, which specifies the user control (field template) to use in order to display the data field.  \n  \n ASP.NET Dynamic Data provides field templates, page templates, and data controls to render data fields in a data model. You can modify these templates and controls to customize them, or you can create a custom user control. If you create a custom user control, you use the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> property to specify the user control to use to display a data field.","nodes":[{"pos":[0,245],"content":"A <ph id=\"ph1\">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute&gt;</ph> object that is created with this constructor is initialized using the specified <ph id=\"ph2\">`uiHint`</ph>, which specifies the user control (field template) to use in order to display the data field.","source":"A <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> object that is created with this constructor is initialized using the specified `uiHint`, which specifies the user control (field template) to use in order to display the data field."},{"pos":[252,664],"content":"ASP.NET Dynamic Data provides field templates, page templates, and data controls to render data fields in a data model. You can modify these templates and controls to customize them, or you can create a custom user control. If you create a custom user control, you use the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> property to specify the user control to use to display a data field.","nodes":[{"content":"ASP.NET Dynamic Data provides field templates, page templates, and data controls to render data fields in a data model. You can modify these templates and controls to customize them, or you can create a custom user control. If you create a custom user control, you use the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> property to specify the user control to use to display a data field.","pos":[0,412],"nodes":[{"content":"ASP.NET Dynamic Data provides field templates, page templates, and data controls to render data fields in a data model.","pos":[0,119]},{"content":"You can modify these templates and controls to customize them, or you can create a custom user control.","pos":[120,223]},{"content":"If you create a custom user control, you use the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A&gt;</ph> property to specify the user control to use to display a data field.","pos":[224,412],"source":" If you create a custom user control, you use the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> property to specify the user control to use to display a data field."}]}]}],"pos":[8119,8788],"yaml":true,"extradata":"MT"},{"content":"The user control to use to display the data field.","nodes":[{"pos":[0,50],"content":"The user control to use to display the data field.","nodes":[{"content":"The user control to use to display the data field.","pos":[0,50]}]}],"pos":[8929,8980],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.UIHintAttribute\"></xref> class using the specified user control and specified presentation layer.","nodes":[{"pos":[0,181],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.DataAnnotations.UIHintAttribute\"&gt;&lt;/xref&gt;</ph> class using the specified user control and specified presentation layer.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.UIHintAttribute\"></xref> class using the specified user control and specified presentation layer."}],"pos":[10491,10673],"yaml":true},{"content":"The user control (field template) to use to display the data field.","nodes":[{"pos":[0,67],"content":"The user control (field template) to use to display the data field.","nodes":[{"content":"The user control (field template) to use to display the data field.","pos":[0,67]}]}],"pos":[10840,10908],"yaml":true},{"content":"The presentation layer that uses the class. Can be set to \"HTML\", \"Silverlight\", \"WPF\", or \"WinForms\".","nodes":[{"pos":[0,102],"content":"The presentation layer that uses the class. Can be set to \"HTML\", \"Silverlight\", \"WPF\", or \"WinForms\".","nodes":[{"content":"The presentation layer that uses the class. Can be set to \"HTML\", \"Silverlight\", \"WPF\", or \"WinForms\".","pos":[0,102],"nodes":[{"content":"The presentation layer that uses the class.","pos":[0,43]},{"content":"Can be set to \"HTML\", \"Silverlight\", \"WPF\", or \"WinForms\".","pos":[44,102]}]}]}],"pos":[10981,11084],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.UIHintAttribute\"></xref> class by using the specified user control, presentation layer, and control parameters.","nodes":[{"pos":[0,195],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.DataAnnotations.UIHintAttribute\"&gt;&lt;/xref&gt;</ph> class by using the specified user control, presentation layer, and control parameters.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.UIHintAttribute\"></xref> class by using the specified user control, presentation layer, and control parameters."}],"pos":[12673,12869],"yaml":true},{"content":"The user control (field template) to use to display the data field.","nodes":[{"pos":[0,67],"content":"The user control (field template) to use to display the data field.","nodes":[{"content":"The user control (field template) to use to display the data field.","pos":[0,67]}]}],"pos":[13064,13132],"yaml":true},{"content":"The presentation layer that uses the class. Can be set to \"HTML\", \"Silverlight\", \"WPF\", or \"WinForms\".","nodes":[{"pos":[0,102],"content":"The presentation layer that uses the class. Can be set to \"HTML\", \"Silverlight\", \"WPF\", or \"WinForms\".","nodes":[{"content":"The presentation layer that uses the class. Can be set to \"HTML\", \"Silverlight\", \"WPF\", or \"WinForms\".","pos":[0,102],"nodes":[{"content":"The presentation layer that uses the class.","pos":[0,43]},{"content":"Can be set to \"HTML\", \"Silverlight\", \"WPF\", or \"WinForms\".","pos":[44,102]}]}]}],"pos":[13205,13308],"yaml":true},{"content":"The object to use to retrieve values from any data sources.","nodes":[{"pos":[0,59],"content":"The object to use to retrieve values from any data sources.","nodes":[{"content":"The object to use to retrieve values from any data sources.","pos":[0,59]}]}],"pos":[13383,13443],"yaml":true},{"content":"<xref href=\"System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters\"></xref> is `null` or it is a constraint key.  \n  \n -or-  \n  \n The value of <xref href=\"System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters\"></xref> is not a string.","nodes":[{"pos":[0,129],"content":"<ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`null`</ph> or it is a constraint key.","source":"<xref href=\"System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters\"></xref> is `null` or it is a constraint key."},{"pos":[136,140],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[147,269],"content":"The value of <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters\"&gt;&lt;/xref&gt;</ph> is not a string.","source":"The value of <xref href=\"System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters\"></xref> is not a string."}],"pos":[13624,13904],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Web.DynamicData.DynamicControlParameter\"></xref> object to use to retrieve values from any data source.","nodes":[{"pos":[0,139],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.DynamicControlParameter\"&gt;&lt;/xref&gt;</ph> object to use to retrieve values from any data source.","source":"Gets or sets the <xref href=\"System.Web.DynamicData.DynamicControlParameter\"></xref> object to use to retrieve values from any data source."}],"pos":[15227,15367],"yaml":true},{"content":"The <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters%2A> property lets you retrieve data from a data model, tracks updates to the data model, and notifies the model of any changes.","nodes":[{"pos":[0,209],"content":"The <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters%2A> property lets you retrieve data from a data model, tracks updates to the data model, and notifies the model of any changes.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters%2A&gt;</ph> property lets you retrieve data from a data model, tracks updates to the data model, and notifies the model of any changes.","pos":[0,209],"source":"The <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters%2A> property lets you retrieve data from a data model, tracks updates to the data model, and notifies the model of any changes."}]}],"pos":[15378,15588],"yaml":true,"extradata":"MT"},{"content":"A collection of key/value pairs.","nodes":[{"pos":[0,32],"content":"A collection of key/value pairs.","nodes":[{"content":"A collection of key/value pairs.","pos":[0,32]}]}],"pos":[15810,15843],"yaml":true},{"content":"Gets a value that indicates whether this instance is equal to the specified object.","nodes":[{"pos":[0,83],"content":"Gets a value that indicates whether this instance is equal to the specified object.","nodes":[{"content":"Gets a value that indicates whether this instance is equal to the specified object.","pos":[0,83]}]}],"pos":[17269,17353],"yaml":true},{"content":"The object to compare with this instance, or a `null` reference.","nodes":[{"pos":[0,64],"content":"The object to compare with this instance, or a <ph id=\"ph1\">`null`</ph> reference.","source":"The object to compare with this instance, or a `null` reference."}],"pos":[17493,17558],"yaml":true},{"content":"`true` if the specified object is equal to this instance; otherwise, `false`.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">`true`</ph> if the specified object is equal to this instance; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified object is equal to this instance; otherwise, `false`."}],"pos":[17616,17696],"yaml":true},{"content":"Gets the hash code for the current instance of the attribute.","nodes":[{"pos":[0,61],"content":"Gets the hash code for the current instance of the attribute.","nodes":[{"content":"Gets the hash code for the current instance of the attribute.","pos":[0,61]}]}],"pos":[19078,19140],"yaml":true},{"content":"The attribute instance hash code.","nodes":[{"pos":[0,33],"content":"The attribute instance hash code.","nodes":[{"content":"The attribute instance hash code.","pos":[0,33]}]}],"pos":[19274,19308],"yaml":true},{"content":"Gets or sets the presentation layer that uses the <xref href=\"System.ComponentModel.DataAnnotations.UIHintAttribute\"></xref> class.","nodes":[{"pos":[0,131],"content":"Gets or sets the presentation layer that uses the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.DataAnnotations.UIHintAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Gets or sets the presentation layer that uses the <xref href=\"System.ComponentModel.DataAnnotations.UIHintAttribute\"></xref> class."}],"pos":[20727,20859],"yaml":true},{"content":"This property represents the presentation layer that uses the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> class. This property can be set to \"HTML\", \"Silverlight\", \"WPF\", or \"WinForms\".","nodes":[{"pos":[0,202],"content":"This property represents the presentation layer that uses the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> class. This property can be set to \"HTML\", \"Silverlight\", \"WPF\", or \"WinForms\".","nodes":[{"content":"This property represents the presentation layer that uses the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> class. This property can be set to \"HTML\", \"Silverlight\", \"WPF\", or \"WinForms\".","pos":[0,202],"nodes":[{"content":"This property represents the presentation layer that uses the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute&gt;</ph> class.","pos":[0,129],"source":"This property represents the presentation layer that uses the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> class."},{"content":"This property can be set to \"HTML\", \"Silverlight\", \"WPF\", or \"WinForms\".","pos":[130,202]}]}]}],"pos":[20870,21073],"yaml":true,"extradata":"MT"},{"content":"The presentation layer that is used by this class.","nodes":[{"pos":[0,50],"content":"The presentation layer that is used by this class.","nodes":[{"content":"The presentation layer that is used by this class.","pos":[0,50]}]}],"pos":[21194,21245],"yaml":true},{"content":"Gets the unique identifier for the attribute.","nodes":[{"pos":[0,45],"content":"Gets the unique identifier for the attribute.","nodes":[{"content":"Gets the unique identifier for the attribute.","pos":[0,45]}]}],"pos":[22566,22612],"yaml":true},{"content":"The unique identifier for the attribute.","nodes":[{"pos":[0,40],"content":"The unique identifier for the attribute.","nodes":[{"content":"The unique identifier for the attribute.","pos":[0,40]}]}],"pos":[22731,22772],"yaml":true},{"content":"Gets or sets the name of the field template to use to display the data field.","nodes":[{"pos":[0,77],"content":"Gets or sets the name of the field template to use to display the data field.","nodes":[{"content":"Gets or sets the name of the field template to use to display the data field.","pos":[0,77]}]}],"pos":[24024,24102],"yaml":true},{"content":"ASP.NET Dynamic Data provides field templates and page templates for rendering data fields in a data model. Field templates are user controls (.ascx files) that are mapped to data fields in the model. You can modify the default user controls that Dynamic Data provides, or you can create a custom user controls to use as field template. If you create a custom user control, you use the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> property on a property so that the property is rendered using the custom user control. The <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> property specifies which field template to use when a specific column is rendered. The <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> property can point to one of the templates provided in Dynamic Data or to a custom template. For example, you can create a custom field template named RedText_Edit.ascx, and then use the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> property to specify that the RedText_Edit.ascx control should be used to render a specified data field instead of the default Text_Edit.ascx template that is provided in Dynamic Data.  \n  \n The following example shows how to specify that the UnitsInStock column in a database will be rendered by using the specified custom field template.  \n  \n [!code-csharp[DynamicData.CustomFieldTemplate#5](~/samples/snippets/csharp/VS_Snippets_WebNet/DynamicData.CustomFieldTemplate/CS/Product.cs#5)]\n [!code-vb[DynamicData.CustomFieldTemplate#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DynamicData.CustomFieldTemplate/VB/Products.vb#5)]","nodes":[{"pos":[0,1218],"content":"ASP.NET Dynamic Data provides field templates and page templates for rendering data fields in a data model. Field templates are user controls (.ascx files) that are mapped to data fields in the model. You can modify the default user controls that Dynamic Data provides, or you can create a custom user controls to use as field template. If you create a custom user control, you use the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> property on a property so that the property is rendered using the custom user control. The <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> property specifies which field template to use when a specific column is rendered. The <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> property can point to one of the templates provided in Dynamic Data or to a custom template. For example, you can create a custom field template named RedText_Edit.ascx, and then use the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> property to specify that the RedText_Edit.ascx control should be used to render a specified data field instead of the default Text_Edit.ascx template that is provided in Dynamic Data.","nodes":[{"content":"ASP.NET Dynamic Data provides field templates and page templates for rendering data fields in a data model. Field templates are user controls (.ascx files) that are mapped to data fields in the model. You can modify the default user controls that Dynamic Data provides, or you can create a custom user controls to use as field template. If you create a custom user control, you use the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> property on a property so that the property is rendered using the custom user control. The <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> property specifies which field template to use when a specific column is rendered. The <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> property can point to one of the templates provided in Dynamic Data or to a custom template. For example, you can create a custom field template named RedText_Edit.ascx, and then use the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> property to specify that the RedText_Edit.ascx control should be used to render a specified data field instead of the default Text_Edit.ascx template that is provided in Dynamic Data.","pos":[0,1218],"nodes":[{"content":"ASP.NET Dynamic Data provides field templates and page templates for rendering data fields in a data model.","pos":[0,107]},{"content":"Field templates are user controls (.ascx files) that are mapped to data fields in the model.","pos":[108,200]},{"content":"You can modify the default user controls that Dynamic Data provides, or you can create a custom user controls to use as field template.","pos":[201,336]},{"content":"If you create a custom user control, you use the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A&gt;</ph> property on a property so that the property is rendered using the custom user control.","pos":[337,543],"source":" If you create a custom user control, you use the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> property on a property so that the property is rendered using the custom user control."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A&gt;</ph> property specifies which field template to use when a specific column is rendered.","pos":[544,701],"source":" The <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> property specifies which field template to use when a specific column is rendered."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A&gt;</ph> property can point to one of the templates provided in Dynamic Data or to a custom template.","pos":[702,869],"source":" The <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> property can point to one of the templates provided in Dynamic Data or to a custom template."},{"content":"For example, you can create a custom field template named RedText_Edit.ascx, and then use the <ph id=\"ph1\">&lt;xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A&gt;</ph> property to specify that the RedText_Edit.ascx control should be used to render a specified data field instead of the default Text_Edit.ascx template that is provided in Dynamic Data.","pos":[870,1218],"source":" For example, you can create a custom field template named RedText_Edit.ascx, and then use the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> property to specify that the RedText_Edit.ascx control should be used to render a specified data field instead of the default Text_Edit.ascx template that is provided in Dynamic Data."}]}]},{"pos":[1225,1373],"content":"The following example shows how to specify that the UnitsInStock column in a database will be rendered by using the specified custom field template.","nodes":[{"content":"The following example shows how to specify that the UnitsInStock column in a database will be rendered by using the specified custom field template.","pos":[0,148]}]},{"pos":[1380,1670],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>DynamicData.CustomFieldTemplate#5<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_WebNet/DynamicData.CustomFieldTemplate/CS/Product.cs#5)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>DynamicData.CustomFieldTemplate#5<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DynamicData.CustomFieldTemplate/VB/Products.vb#5)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[DynamicData.CustomFieldTemplate#5](~/samples/snippets/csharp/VS_Snippets_WebNet/DynamicData.CustomFieldTemplate/CS/Product.cs#5)]\n [!code-vb[DynamicData.CustomFieldTemplate#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DynamicData.CustomFieldTemplate/VB/Products.vb#5)]"}],"pos":[24113,25791],"yaml":true,"extradata":"MT"},{"content":"The name of the field template that displays the data field.","nodes":[{"pos":[0,60],"content":"The name of the field template that displays the data field.","nodes":[{"content":"The name of the field template that displays the data field.","pos":[0,60]}]}],"pos":[25901,25962],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.DataAnnotations.UIHintAttribute\n  commentId: T:System.ComponentModel.DataAnnotations.UIHintAttribute\n  id: UIHintAttribute\n  children:\n  - System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String)\n  - System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String)\n  - System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])\n  - System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters\n  - System.ComponentModel.DataAnnotations.UIHintAttribute.Equals(System.Object)\n  - System.ComponentModel.DataAnnotations.UIHintAttribute.GetHashCode\n  - System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer\n  - System.ComponentModel.DataAnnotations.UIHintAttribute.TypeId\n  - System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint\n  langs:\n  - csharp\n  name: UIHintAttribute\n  nameWithType: UIHintAttribute\n  fullName: System.ComponentModel.DataAnnotations.UIHintAttribute\n  type: Class\n  assemblies:\n  - System.ComponentModel.Annotations\n  - System.ComponentModel.DataAnnotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: Specifies the template or user control that Dynamic Data uses to display a data field.\n  remarks: \"A Visual Studio project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?linkid=158686).  \\n  \\n MVC uses the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> class to associate a model with a data field. Dynamic Data uses the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> class to associate a user control with a data field. Dynamic Data uses the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A>property to determine which user control to use in order to display a data field.  \\n  \\n For more information about how to use attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).\"\n  example:\n  - \"The following example shows how to use the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute to specify the name of a custom field template that will handle the display and editing of a data field.  \\n  \\n For a complete example, see [How to: Customize Data Field Display in the Data Model](http://msdn.microsoft.com/library/33c2e908-bb52-4656-ba7a-ba55fb04beb2).  \\n  \\n [!code-csharp[DynamicData.CustomFieldTemplate#5](~/samples/snippets/csharp/VS_Snippets_WebNet/DynamicData.CustomFieldTemplate/CS/Product.cs#5)]\\n [!code-vb[DynamicData.CustomFieldTemplate#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DynamicData.CustomFieldTemplate/VB/Products.vb#5)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=true)]\n\n      public class UIHintAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/UIHintAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: wpickett\n- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String)\n  commentId: M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ComponentModel.DataAnnotations.UIHintAttribute\n  langs:\n  - csharp\n  name: UIHintAttribute(String)\n  nameWithType: UIHintAttribute.UIHintAttribute(String)\n  fullName: UIHintAttribute.UIHintAttribute(String)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Annotations\n  - System.ComponentModel.DataAnnotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.UIHintAttribute\"></xref> class by using a specified user control.\n  remarks: \"A <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> object that is created with this constructor is initialized using the specified `uiHint`, which specifies the user control (field template) to use in order to display the data field.  \\n  \\n ASP.NET Dynamic Data provides field templates, page templates, and data controls to render data fields in a data model. You can modify these templates and controls to customize them, or you can create a custom user control. If you create a custom user control, you use the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> property to specify the user control to use to display a data field.\"\n  syntax:\n    content: public UIHintAttribute (string uiHint);\n    parameters:\n    - id: uiHint\n      type: System.String\n      description: The user control to use to display the data field.\n  overload: System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/UIHintAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String)\n  commentId: M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.ComponentModel.DataAnnotations.UIHintAttribute\n  langs:\n  - csharp\n  name: UIHintAttribute(String, String)\n  nameWithType: UIHintAttribute.UIHintAttribute(String, String)\n  fullName: UIHintAttribute.UIHintAttribute(String, String)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Annotations\n  - System.ComponentModel.DataAnnotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.UIHintAttribute\"></xref> class using the specified user control and specified presentation layer.\n  syntax:\n    content: public UIHintAttribute (string uiHint, string presentationLayer);\n    parameters:\n    - id: uiHint\n      type: System.String\n      description: The user control (field template) to use to display the data field.\n    - id: presentationLayer\n      type: System.String\n      description: The presentation layer that uses the class. Can be set to \"HTML\", \"Silverlight\", \"WPF\", or \"WinForms\".\n  overload: System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/UIHintAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])\n  commentId: M:System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])\n  id: '#ctor(System.String,System.String,System.Object[])'\n  parent: System.ComponentModel.DataAnnotations.UIHintAttribute\n  langs:\n  - csharp\n  name: UIHintAttribute(String, String, Object[])\n  nameWithType: UIHintAttribute.UIHintAttribute(String, String, Object[])\n  fullName: UIHintAttribute.UIHintAttribute(String, String, Object[])\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Annotations\n  - System.ComponentModel.DataAnnotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.UIHintAttribute\"></xref> class by using the specified user control, presentation layer, and control parameters.\n  syntax:\n    content: public UIHintAttribute (string uiHint, string presentationLayer, object[] controlParameters);\n    parameters:\n    - id: uiHint\n      type: System.String\n      description: The user control (field template) to use to display the data field.\n    - id: presentationLayer\n      type: System.String\n      description: The presentation layer that uses the class. Can be set to \"HTML\", \"Silverlight\", \"WPF\", or \"WinForms\".\n    - id: controlParameters\n      type: System.Object[]\n      description: The object to use to retrieve values from any data sources.\n  overload: System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<xref href=\\\"System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters\\\"></xref> is `null` or it is a constraint key.  \\n  \\n -or-  \\n  \\n The value of <xref href=\\\"System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters\\\"></xref> is not a string.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/UIHintAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters\n  commentId: P:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters\n  id: ControlParameters\n  parent: System.ComponentModel.DataAnnotations.UIHintAttribute\n  langs:\n  - csharp\n  name: ControlParameters\n  nameWithType: UIHintAttribute.ControlParameters\n  fullName: UIHintAttribute.ControlParameters\n  type: Property\n  assemblies:\n  - System.ComponentModel.Annotations\n  - System.ComponentModel.DataAnnotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: Gets or sets the <xref href=\"System.Web.DynamicData.DynamicControlParameter\"></xref> object to use to retrieve values from any data source.\n  remarks: The <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters%2A> property lets you retrieve data from a data model, tracks updates to the data model, and notifies the model of any changes.\n  syntax:\n    content: public System.Collections.Generic.IDictionary<string,object> ControlParameters { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: A collection of key/value pairs.\n  overload: System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/UIHintAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.Equals(System.Object)\n  commentId: M:System.ComponentModel.DataAnnotations.UIHintAttribute.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ComponentModel.DataAnnotations.UIHintAttribute\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: UIHintAttribute.Equals(Object)\n  fullName: UIHintAttribute.Equals(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Annotations\n  - System.ComponentModel.DataAnnotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: Gets a value that indicates whether this instance is equal to the specified object.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare with this instance, or a `null` reference.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified object is equal to this instance; otherwise, `false`.'\n  overload: System.ComponentModel.DataAnnotations.UIHintAttribute.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/UIHintAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.GetHashCode\n  commentId: M:System.ComponentModel.DataAnnotations.UIHintAttribute.GetHashCode\n  id: GetHashCode\n  parent: System.ComponentModel.DataAnnotations.UIHintAttribute\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: UIHintAttribute.GetHashCode()\n  fullName: UIHintAttribute.GetHashCode()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Annotations\n  - System.ComponentModel.DataAnnotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: Gets the hash code for the current instance of the attribute.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The attribute instance hash code.\n  overload: System.ComponentModel.DataAnnotations.UIHintAttribute.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/UIHintAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer\n  commentId: P:System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer\n  id: PresentationLayer\n  parent: System.ComponentModel.DataAnnotations.UIHintAttribute\n  langs:\n  - csharp\n  name: PresentationLayer\n  nameWithType: UIHintAttribute.PresentationLayer\n  fullName: UIHintAttribute.PresentationLayer\n  type: Property\n  assemblies:\n  - System.ComponentModel.Annotations\n  - System.ComponentModel.DataAnnotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: Gets or sets the presentation layer that uses the <xref href=\"System.ComponentModel.DataAnnotations.UIHintAttribute\"></xref> class.\n  remarks: This property represents the presentation layer that uses the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> class. This property can be set to \"HTML\", \"Silverlight\", \"WPF\", or \"WinForms\".\n  syntax:\n    content: public string PresentationLayer { get; }\n    return:\n      type: System.String\n      description: The presentation layer that is used by this class.\n  overload: System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/UIHintAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.TypeId\n  commentId: P:System.ComponentModel.DataAnnotations.UIHintAttribute.TypeId\n  id: TypeId\n  parent: System.ComponentModel.DataAnnotations.UIHintAttribute\n  langs:\n  - csharp\n  name: TypeId\n  nameWithType: UIHintAttribute.TypeId\n  fullName: UIHintAttribute.TypeId\n  type: Property\n  assemblies:\n  - System.ComponentModel.DataAnnotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: Gets the unique identifier for the attribute.\n  syntax:\n    content: public override object TypeId { get; }\n    return:\n      type: System.Object\n      description: The unique identifier for the attribute.\n  overload: System.ComponentModel.DataAnnotations.UIHintAttribute.TypeId*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/UIHintAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint\n  commentId: P:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint\n  id: UIHint\n  parent: System.ComponentModel.DataAnnotations.UIHintAttribute\n  langs:\n  - csharp\n  name: UIHint\n  nameWithType: UIHintAttribute.UIHint\n  fullName: UIHintAttribute.UIHint\n  type: Property\n  assemblies:\n  - System.ComponentModel.Annotations\n  - System.ComponentModel.DataAnnotations\n  namespace: System.ComponentModel.DataAnnotations\n  summary: Gets or sets the name of the field template to use to display the data field.\n  remarks: \"ASP.NET Dynamic Data provides field templates and page templates for rendering data fields in a data model. Field templates are user controls (.ascx files) that are mapped to data fields in the model. You can modify the default user controls that Dynamic Data provides, or you can create a custom user controls to use as field template. If you create a custom user control, you use the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> property on a property so that the property is rendered using the custom user control. The <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> property specifies which field template to use when a specific column is rendered. The <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> property can point to one of the templates provided in Dynamic Data or to a custom template. For example, you can create a custom field template named RedText_Edit.ascx, and then use the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A> property to specify that the RedText_Edit.ascx control should be used to render a specified data field instead of the default Text_Edit.ascx template that is provided in Dynamic Data.  \\n  \\n The following example shows how to specify that the UnitsInStock column in a database will be rendered by using the specified custom field template.  \\n  \\n [!code-csharp[DynamicData.CustomFieldTemplate#5](~/samples/snippets/csharp/VS_Snippets_WebNet/DynamicData.CustomFieldTemplate/CS/Product.cs#5)]\\n [!code-vb[DynamicData.CustomFieldTemplate#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DynamicData.CustomFieldTemplate/VB/Products.vb#5)]\"\n  syntax:\n    content: public string UIHint { get; }\n    return:\n      type: System.String\n      description: The name of the field template that displays the data field.\n  overload: System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/UIHintAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String)\n  parent: System.ComponentModel.DataAnnotations.UIHintAttribute\n  isExternal: false\n  name: UIHintAttribute(String)\n  nameWithType: UIHintAttribute.UIHintAttribute(String)\n  fullName: UIHintAttribute.UIHintAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String)\n  parent: System.ComponentModel.DataAnnotations.UIHintAttribute\n  isExternal: false\n  name: UIHintAttribute(String, String)\n  nameWithType: UIHintAttribute.UIHintAttribute(String, String)\n  fullName: UIHintAttribute.UIHintAttribute(String, String)\n- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor(System.String,System.String,System.Object[])\n  parent: System.ComponentModel.DataAnnotations.UIHintAttribute\n  isExternal: false\n  name: UIHintAttribute(String, String, Object[])\n  nameWithType: UIHintAttribute.UIHintAttribute(String, String, Object[])\n  fullName: UIHintAttribute.UIHintAttribute(String, String, Object[])\n- uid: System.Object\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters\n  parent: System.ComponentModel.DataAnnotations.UIHintAttribute\n  isExternal: false\n  name: ControlParameters\n  nameWithType: UIHintAttribute.ControlParameters\n  fullName: UIHintAttribute.ControlParameters\n- uid: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.Collections.Generic.IDictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,Object>\n  nameWithType: IDictionary<String,Object>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.Equals(System.Object)\n  parent: System.ComponentModel.DataAnnotations.UIHintAttribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: UIHintAttribute.Equals(Object)\n  fullName: UIHintAttribute.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.GetHashCode\n  parent: System.ComponentModel.DataAnnotations.UIHintAttribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: UIHintAttribute.GetHashCode()\n  fullName: UIHintAttribute.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer\n  parent: System.ComponentModel.DataAnnotations.UIHintAttribute\n  isExternal: false\n  name: PresentationLayer\n  nameWithType: UIHintAttribute.PresentationLayer\n  fullName: UIHintAttribute.PresentationLayer\n- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.TypeId\n  parent: System.ComponentModel.DataAnnotations.UIHintAttribute\n  isExternal: false\n  name: TypeId\n  nameWithType: UIHintAttribute.TypeId\n  fullName: UIHintAttribute.TypeId\n- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint\n  parent: System.ComponentModel.DataAnnotations.UIHintAttribute\n  isExternal: false\n  name: UIHint\n  nameWithType: UIHintAttribute.UIHint\n  fullName: UIHintAttribute.UIHint\n- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.#ctor*\n  parent: System.ComponentModel.DataAnnotations.UIHintAttribute\n  isExternal: false\n  name: UIHintAttribute\n  nameWithType: UIHintAttribute.UIHintAttribute\n  fullName: UIHintAttribute.UIHintAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/UIHintAttribute.xml\n- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.ControlParameters*\n  parent: System.ComponentModel.DataAnnotations.UIHintAttribute\n  isExternal: false\n  name: ControlParameters\n  nameWithType: UIHintAttribute.ControlParameters\n  fullName: UIHintAttribute.ControlParameters\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/UIHintAttribute.xml\n- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.Equals*\n  parent: System.ComponentModel.DataAnnotations.UIHintAttribute\n  isExternal: false\n  name: Equals\n  nameWithType: UIHintAttribute.Equals\n  fullName: UIHintAttribute.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/UIHintAttribute.xml\n- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.GetHashCode*\n  parent: System.ComponentModel.DataAnnotations.UIHintAttribute\n  isExternal: false\n  name: GetHashCode\n  nameWithType: UIHintAttribute.GetHashCode\n  fullName: UIHintAttribute.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/UIHintAttribute.xml\n- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.PresentationLayer*\n  parent: System.ComponentModel.DataAnnotations.UIHintAttribute\n  isExternal: false\n  name: PresentationLayer\n  nameWithType: UIHintAttribute.PresentationLayer\n  fullName: UIHintAttribute.PresentationLayer\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/UIHintAttribute.xml\n- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.TypeId*\n  parent: System.ComponentModel.DataAnnotations.UIHintAttribute\n  isExternal: false\n  name: TypeId\n  nameWithType: UIHintAttribute.TypeId\n  fullName: UIHintAttribute.TypeId\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/UIHintAttribute.xml\n- uid: System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint*\n  parent: System.ComponentModel.DataAnnotations.UIHintAttribute\n  isExternal: false\n  name: UIHint\n  nameWithType: UIHintAttribute.UIHint\n  fullName: UIHintAttribute.UIHint\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.DataAnnotations/UIHintAttribute.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}