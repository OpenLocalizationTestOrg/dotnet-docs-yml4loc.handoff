{"nodes":[{"content":"Provides a <xref href=\"System.Windows.WeakEventManager\"></xref> implementation so that you can use the weak event listener pattern to attach listeners for the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event.","nodes":[{"pos":[0,243],"content":"Provides a <ph id=\"ph1\">&lt;xref href=\"System.Windows.WeakEventManager\"&gt;&lt;/xref&gt;</ph> implementation so that you can use the weak event listener pattern to attach listeners for the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Provides a <xref href=\"System.Windows.WeakEventManager\"></xref> implementation so that you can use the weak event listener pattern to attach listeners for the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event."}],"pos":[1032,1276],"yaml":true},{"content":"Adds the specified event handler, which is called when specified source raises the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event.","nodes":[{"pos":[0,167],"content":"Adds the specified event handler, which is called when specified source raises the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Adds the specified event handler, which is called when specified source raises the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event."}],"pos":[4616,4784],"yaml":true},{"content":"The source object that raises the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event.","nodes":[{"pos":[0,118],"content":"The source object that raises the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"The source object that raises the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event."}],"pos":[5069,5188],"yaml":true},{"content":"The delegate that handles the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event.","nodes":[{"pos":[0,114],"content":"The delegate that handles the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"The delegate that handles the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event."}],"pos":[5307,5422],"yaml":true},{"content":"<code>handler</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;handler&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>handler</code> is `null`."}],"pos":[5610,5642],"yaml":true},{"content":"Returns a new object to contain listeners to the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event.","nodes":[{"pos":[0,133],"content":"Returns a new object to contain listeners to the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Returns a new object to contain listeners to the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event."}],"pos":[6672,6806],"yaml":true},{"content":"A new object to contain listeners to the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event.","nodes":[{"pos":[0,125],"content":"A new object to contain listeners to the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"A new object to contain listeners to the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event."}],"pos":[7020,7146],"yaml":true},{"content":"Removes the specified event handler from the specified source.","nodes":[{"pos":[0,62],"content":"Removes the specified event handler from the specified source.","nodes":[{"content":"Removes the specified event handler from the specified source.","pos":[0,62]}]}],"pos":[8786,8849],"yaml":true},{"content":"The source object that raises the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event.","nodes":[{"pos":[0,118],"content":"The source object that raises the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"The source object that raises the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event."}],"pos":[9137,9256],"yaml":true},{"content":"The delegate that handles the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event.","nodes":[{"pos":[0,114],"content":"The delegate that handles the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"The delegate that handles the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event."}],"pos":[9375,9490],"yaml":true},{"content":"<code>handler</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;handler&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>handler</code> is `null`."}],"pos":[9681,9713],"yaml":true},{"content":"Begins listening for the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event on the specified source.","nodes":[{"pos":[0,133],"content":"Begins listening for the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"&gt;&lt;/xref&gt;</ph> event on the specified source.","source":"Begins listening for the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event on the specified source."}],"pos":[10800,10934],"yaml":true},{"content":"The source object that raises the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event.","nodes":[{"pos":[0,118],"content":"The source object that raises the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"The source object that raises the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event."}],"pos":[11091,11210],"yaml":true},{"content":"Stops listening for the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event on the specified source.","nodes":[{"pos":[0,132],"content":"Stops listening for the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"&gt;&lt;/xref&gt;</ph> event on the specified source.","source":"Stops listening for the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event on the specified source."}],"pos":[12384,12517],"yaml":true},{"content":"The source object that raises the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event.","nodes":[{"pos":[0,118],"content":"The source object that raises the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"The source object that raises the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event."}],"pos":[12673,12792],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.ErrorsChangedEventManager\n  commentId: T:System.ComponentModel.ErrorsChangedEventManager\n  id: ErrorsChangedEventManager\n  children:\n  - System.ComponentModel.ErrorsChangedEventManager.AddHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})\n  - System.ComponentModel.ErrorsChangedEventManager.NewListenerList\n  - System.ComponentModel.ErrorsChangedEventManager.RemoveHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})\n  - System.ComponentModel.ErrorsChangedEventManager.StartListening(System.Object)\n  - System.ComponentModel.ErrorsChangedEventManager.StopListening(System.Object)\n  langs:\n  - csharp\n  name: ErrorsChangedEventManager\n  nameWithType: ErrorsChangedEventManager\n  fullName: System.ComponentModel.ErrorsChangedEventManager\n  type: Class\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Provides a <xref href=\"System.Windows.WeakEventManager\"></xref> implementation so that you can use the weak event listener pattern to attach listeners for the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event.\n  syntax:\n    content: 'public class ErrorsChangedEventManager : System.Windows.WeakEventManager'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.WeakEventManager\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  - System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)\n  - System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)\n  - System.Windows.WeakEventManager.GetCurrentManager(System.Type)\n  - System.Windows.WeakEventManager.Item(System.Object)\n  - System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)\n  - System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)\n  - System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)\n  - System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)\n  - System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)\n  - System.Windows.WeakEventManager.ReadLock\n  - System.Windows.WeakEventManager.Remove(System.Object)\n  - System.Windows.WeakEventManager.ScheduleCleanup\n  - System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)\n  - System.Windows.WeakEventManager.WriteLock\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ErrorsChangedEventManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ErrorsChangedEventManager.AddHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})\n  commentId: M:System.ComponentModel.ErrorsChangedEventManager.AddHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})\n  id: AddHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})\n  parent: System.ComponentModel.ErrorsChangedEventManager\n  langs:\n  - csharp\n  name: AddHandler(INotifyDataErrorInfo, EventHandler<DataErrorsChangedEventArgs>)\n  nameWithType: ErrorsChangedEventManager.AddHandler(INotifyDataErrorInfo, EventHandler<DataErrorsChangedEventArgs>)\n  fullName: ErrorsChangedEventManager.AddHandler(INotifyDataErrorInfo, EventHandler<DataErrorsChangedEventArgs>)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Adds the specified event handler, which is called when specified source raises the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event.\n  syntax:\n    content: public static void AddHandler (System.ComponentModel.INotifyDataErrorInfo source, EventHandler<System.ComponentModel.DataErrorsChangedEventArgs> handler);\n    parameters:\n    - id: source\n      type: System.ComponentModel.INotifyDataErrorInfo\n      description: The source object that raises the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event.\n    - id: handler\n      type: System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs}\n      description: The delegate that handles the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event.\n  overload: System.ComponentModel.ErrorsChangedEventManager.AddHandler*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>handler</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ErrorsChangedEventManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ErrorsChangedEventManager.NewListenerList\n  commentId: M:System.ComponentModel.ErrorsChangedEventManager.NewListenerList\n  id: NewListenerList\n  parent: System.ComponentModel.ErrorsChangedEventManager\n  langs:\n  - csharp\n  name: NewListenerList()\n  nameWithType: ErrorsChangedEventManager.NewListenerList()\n  fullName: ErrorsChangedEventManager.NewListenerList()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Returns a new object to contain listeners to the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event.\n  syntax:\n    content: protected override System.Windows.WeakEventManager.ListenerList NewListenerList ();\n    parameters: []\n    return:\n      type: System.Windows.WeakEventManager+ListenerList\n      description: A new object to contain listeners to the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event.\n  overload: System.ComponentModel.ErrorsChangedEventManager.NewListenerList*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ErrorsChangedEventManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ErrorsChangedEventManager.RemoveHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})\n  commentId: M:System.ComponentModel.ErrorsChangedEventManager.RemoveHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})\n  id: RemoveHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})\n  parent: System.ComponentModel.ErrorsChangedEventManager\n  langs:\n  - csharp\n  name: RemoveHandler(INotifyDataErrorInfo, EventHandler<DataErrorsChangedEventArgs>)\n  nameWithType: ErrorsChangedEventManager.RemoveHandler(INotifyDataErrorInfo, EventHandler<DataErrorsChangedEventArgs>)\n  fullName: ErrorsChangedEventManager.RemoveHandler(INotifyDataErrorInfo, EventHandler<DataErrorsChangedEventArgs>)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Removes the specified event handler from the specified source.\n  syntax:\n    content: public static void RemoveHandler (System.ComponentModel.INotifyDataErrorInfo source, EventHandler<System.ComponentModel.DataErrorsChangedEventArgs> handler);\n    parameters:\n    - id: source\n      type: System.ComponentModel.INotifyDataErrorInfo\n      description: The source object that raises the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event.\n    - id: handler\n      type: System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs}\n      description: The delegate that handles the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event.\n  overload: System.ComponentModel.ErrorsChangedEventManager.RemoveHandler*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>handler</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ErrorsChangedEventManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ErrorsChangedEventManager.StartListening(System.Object)\n  commentId: M:System.ComponentModel.ErrorsChangedEventManager.StartListening(System.Object)\n  id: StartListening(System.Object)\n  parent: System.ComponentModel.ErrorsChangedEventManager\n  langs:\n  - csharp\n  name: StartListening(Object)\n  nameWithType: ErrorsChangedEventManager.StartListening(Object)\n  fullName: ErrorsChangedEventManager.StartListening(Object)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Begins listening for the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event on the specified source.\n  syntax:\n    content: protected override void StartListening (object source);\n    parameters:\n    - id: source\n      type: System.Object\n      description: The source object that raises the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event.\n  overload: System.ComponentModel.ErrorsChangedEventManager.StartListening*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ErrorsChangedEventManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ErrorsChangedEventManager.StopListening(System.Object)\n  commentId: M:System.ComponentModel.ErrorsChangedEventManager.StopListening(System.Object)\n  id: StopListening(System.Object)\n  parent: System.ComponentModel.ErrorsChangedEventManager\n  langs:\n  - csharp\n  name: StopListening(Object)\n  nameWithType: ErrorsChangedEventManager.StopListening(Object)\n  fullName: ErrorsChangedEventManager.StopListening(Object)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.ComponentModel\n  summary: Stops listening for the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event on the specified source.\n  syntax:\n    content: protected override void StopListening (object source);\n    parameters:\n    - id: source\n      type: System.Object\n      description: The source object that raises the <xref href=\"System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged\"></xref> event.\n  overload: System.ComponentModel.ErrorsChangedEventManager.StopListening*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ErrorsChangedEventManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.WeakEventManager\n  parent: System.Windows\n  isExternal: false\n  name: WeakEventManager\n  nameWithType: WeakEventManager\n  fullName: System.Windows.WeakEventManager\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ComponentModel.ErrorsChangedEventManager.AddHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})\n  parent: System.ComponentModel.ErrorsChangedEventManager\n  isExternal: false\n  name: AddHandler(INotifyDataErrorInfo, EventHandler<DataErrorsChangedEventArgs>)\n  nameWithType: ErrorsChangedEventManager.AddHandler(INotifyDataErrorInfo, EventHandler<DataErrorsChangedEventArgs>)\n  fullName: ErrorsChangedEventManager.AddHandler(INotifyDataErrorInfo, EventHandler<DataErrorsChangedEventArgs>)\n- uid: System.ComponentModel.INotifyDataErrorInfo\n  parent: System.ComponentModel\n  isExternal: false\n  name: INotifyDataErrorInfo\n  nameWithType: INotifyDataErrorInfo\n  fullName: System.ComponentModel.INotifyDataErrorInfo\n- uid: System.EventHandler`1\n  name: EventHandler<TEventArgs>\n  nameWithType: EventHandler<TEventArgs>\n  fullName: System.EventHandler<TEventArgs>\n- uid: System.ComponentModel.DataErrorsChangedEventArgs\n  name: DataErrorsChangedEventArgs\n  nameWithType: DataErrorsChangedEventArgs\n  fullName: System.ComponentModel.DataErrorsChangedEventArgs\n- uid: System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<DataErrorsChangedEventArgs>\n  nameWithType: EventHandler<DataErrorsChangedEventArgs>\n  fullName: System.EventHandler<System.ComponentModel.DataErrorsChangedEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.DataErrorsChangedEventArgs\n    name: DataErrorsChangedEventArgs\n    nameWithType: DataErrorsChangedEventArgs\n    fullName: System.ComponentModel.DataErrorsChangedEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.ErrorsChangedEventManager.NewListenerList\n  parent: System.ComponentModel.ErrorsChangedEventManager\n  isExternal: false\n  name: NewListenerList()\n  nameWithType: ErrorsChangedEventManager.NewListenerList()\n  fullName: ErrorsChangedEventManager.NewListenerList()\n- uid: System.ComponentModel.ErrorsChangedEventManager.RemoveHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})\n  parent: System.ComponentModel.ErrorsChangedEventManager\n  isExternal: false\n  name: RemoveHandler(INotifyDataErrorInfo, EventHandler<DataErrorsChangedEventArgs>)\n  nameWithType: ErrorsChangedEventManager.RemoveHandler(INotifyDataErrorInfo, EventHandler<DataErrorsChangedEventArgs>)\n  fullName: ErrorsChangedEventManager.RemoveHandler(INotifyDataErrorInfo, EventHandler<DataErrorsChangedEventArgs>)\n- uid: System.ComponentModel.ErrorsChangedEventManager.StartListening(System.Object)\n  parent: System.ComponentModel.ErrorsChangedEventManager\n  isExternal: false\n  name: StartListening(Object)\n  nameWithType: ErrorsChangedEventManager.StartListening(Object)\n  fullName: ErrorsChangedEventManager.StartListening(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.ErrorsChangedEventManager.StopListening(System.Object)\n  parent: System.ComponentModel.ErrorsChangedEventManager\n  isExternal: false\n  name: StopListening(Object)\n  nameWithType: ErrorsChangedEventManager.StopListening(Object)\n  fullName: ErrorsChangedEventManager.StopListening(Object)\n- uid: System.ComponentModel.ErrorsChangedEventManager.AddHandler*\n  parent: System.ComponentModel.ErrorsChangedEventManager\n  isExternal: false\n  name: AddHandler\n  nameWithType: ErrorsChangedEventManager.AddHandler\n  fullName: ErrorsChangedEventManager.AddHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ErrorsChangedEventManager.xml\n- uid: System.ComponentModel.ErrorsChangedEventManager.NewListenerList*\n  parent: System.ComponentModel.ErrorsChangedEventManager\n  isExternal: false\n  name: NewListenerList\n  nameWithType: ErrorsChangedEventManager.NewListenerList\n  fullName: ErrorsChangedEventManager.NewListenerList\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ErrorsChangedEventManager.xml\n- uid: System.ComponentModel.ErrorsChangedEventManager.RemoveHandler*\n  parent: System.ComponentModel.ErrorsChangedEventManager\n  isExternal: false\n  name: RemoveHandler\n  nameWithType: ErrorsChangedEventManager.RemoveHandler\n  fullName: ErrorsChangedEventManager.RemoveHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ErrorsChangedEventManager.xml\n- uid: System.ComponentModel.ErrorsChangedEventManager.StartListening*\n  parent: System.ComponentModel.ErrorsChangedEventManager\n  isExternal: false\n  name: StartListening\n  nameWithType: ErrorsChangedEventManager.StartListening\n  fullName: ErrorsChangedEventManager.StartListening\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ErrorsChangedEventManager.xml\n- uid: System.ComponentModel.ErrorsChangedEventManager.StopListening*\n  parent: System.ComponentModel.ErrorsChangedEventManager\n  isExternal: false\n  name: StopListening\n  nameWithType: ErrorsChangedEventManager.StopListening\n  fullName: ErrorsChangedEventManager.StopListening\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ErrorsChangedEventManager.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n- uid: System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: DeliverEvent(Object, EventArgs)\n  nameWithType: WeakEventManager.DeliverEvent(Object, EventArgs)\n  fullName: WeakEventManager.DeliverEvent(Object, EventArgs)\n- uid: System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: DeliverEventToList(Object, EventArgs, WeakEventManager+ListenerList)\n  nameWithType: WeakEventManager.DeliverEventToList(Object, EventArgs, WeakEventManager+ListenerList)\n  fullName: WeakEventManager.DeliverEventToList(Object, EventArgs, WeakEventManager+ListenerList)\n- uid: System.Windows.WeakEventManager.GetCurrentManager(System.Type)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: GetCurrentManager(Type)\n  nameWithType: WeakEventManager.GetCurrentManager(Type)\n  fullName: WeakEventManager.GetCurrentManager(Type)\n- uid: System.Windows.WeakEventManager.Item(System.Object)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: Item(Object)\n  nameWithType: WeakEventManager.Item(Object)\n  fullName: WeakEventManager.Item(Object)\n- uid: System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: ProtectedAddHandler(Object, Delegate)\n  nameWithType: WeakEventManager.ProtectedAddHandler(Object, Delegate)\n  fullName: WeakEventManager.ProtectedAddHandler(Object, Delegate)\n- uid: System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: ProtectedAddListener(Object, IWeakEventListener)\n  nameWithType: WeakEventManager.ProtectedAddListener(Object, IWeakEventListener)\n  fullName: WeakEventManager.ProtectedAddListener(Object, IWeakEventListener)\n- uid: System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: ProtectedRemoveHandler(Object, Delegate)\n  nameWithType: WeakEventManager.ProtectedRemoveHandler(Object, Delegate)\n  fullName: WeakEventManager.ProtectedRemoveHandler(Object, Delegate)\n- uid: System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: ProtectedRemoveListener(Object, IWeakEventListener)\n  nameWithType: WeakEventManager.ProtectedRemoveListener(Object, IWeakEventListener)\n  fullName: WeakEventManager.ProtectedRemoveListener(Object, IWeakEventListener)\n- uid: System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: Purge(Object, Object, Boolean)\n  nameWithType: WeakEventManager.Purge(Object, Object, Boolean)\n  fullName: WeakEventManager.Purge(Object, Object, Boolean)\n- uid: System.Windows.WeakEventManager.ReadLock\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: ReadLock\n  nameWithType: WeakEventManager.ReadLock\n  fullName: WeakEventManager.ReadLock\n- uid: System.Windows.WeakEventManager.Remove(System.Object)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: Remove(Object)\n  nameWithType: WeakEventManager.Remove(Object)\n  fullName: WeakEventManager.Remove(Object)\n- uid: System.Windows.WeakEventManager.ScheduleCleanup\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: ScheduleCleanup()\n  nameWithType: WeakEventManager.ScheduleCleanup()\n  fullName: WeakEventManager.ScheduleCleanup()\n- uid: System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: SetCurrentManager(Type, WeakEventManager)\n  nameWithType: WeakEventManager.SetCurrentManager(Type, WeakEventManager)\n  fullName: WeakEventManager.SetCurrentManager(Type, WeakEventManager)\n- uid: System.Windows.WeakEventManager.WriteLock\n  parent: System.Windows.WeakEventManager\n  isExternal: false\n  name: WriteLock\n  nameWithType: WeakEventManager.WriteLock\n  fullName: WeakEventManager.WriteLock\n"}