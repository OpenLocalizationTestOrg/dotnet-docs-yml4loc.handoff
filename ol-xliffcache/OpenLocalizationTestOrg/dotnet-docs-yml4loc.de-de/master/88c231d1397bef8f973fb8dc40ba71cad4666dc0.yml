### YamlMime:ManagedReference
items:
- uid: System._AppDomain
  commentId: T:System._AppDomain
  id: _AppDomain
  children:
  - System._AppDomain.AppendPrivatePath(System.String)
  - System._AppDomain.AssemblyLoad
  - System._AppDomain.AssemblyResolve
  - System._AppDomain.BaseDirectory
  - System._AppDomain.ClearPrivatePath
  - System._AppDomain.ClearShadowCopyPath
  - System._AppDomain.CreateInstance(System.String,System.String)
  - System._AppDomain.CreateInstance(System.String,System.String,System.Object[])
  - System._AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  - System._AppDomain.CreateInstanceFrom(System.String,System.String)
  - System._AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])
  - System._AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  - System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)
  - System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  - System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  - System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  - System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)
  - System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)
  - System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)
  - System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)
  - System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  - System._AppDomain.DoCallBack(System.CrossAppDomainDelegate)
  - System._AppDomain.DomainUnload
  - System._AppDomain.DynamicDirectory
  - System._AppDomain.Equals(System.Object)
  - System._AppDomain.Evidence
  - System._AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence)
  - System._AppDomain.ExecuteAssembly(System.String)
  - System._AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])
  - System._AppDomain.FriendlyName
  - System._AppDomain.GetAssemblies
  - System._AppDomain.GetData(System.String)
  - System._AppDomain.GetHashCode
  - System._AppDomain.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System._AppDomain.GetLifetimeService
  - System._AppDomain.GetType
  - System._AppDomain.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System._AppDomain.GetTypeInfoCount(System.UInt32@)
  - System._AppDomain.InitializeLifetimeService
  - System._AppDomain.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System._AppDomain.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)
  - System._AppDomain.Load(System.String,System.Security.Policy.Evidence)
  - System._AppDomain.Load(System.Byte[],System.Byte[])
  - System._AppDomain.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)
  - System._AppDomain.Load(System.Reflection.AssemblyName)
  - System._AppDomain.Load(System.Byte[])
  - System._AppDomain.Load(System.String)
  - System._AppDomain.ProcessExit
  - System._AppDomain.RelativeSearchPath
  - System._AppDomain.ResourceResolve
  - System._AppDomain.SetAppDomainPolicy(System.Security.Policy.PolicyLevel)
  - System._AppDomain.SetCachePath(System.String)
  - System._AppDomain.SetData(System.String,System.Object)
  - System._AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)
  - System._AppDomain.SetShadowCopyPath(System.String)
  - System._AppDomain.SetThreadPrincipal(System.Security.Principal.IPrincipal)
  - System._AppDomain.ShadowCopyFiles
  - System._AppDomain.ToString
  - System._AppDomain.TypeResolve
  - System._AppDomain.UnhandledException
  langs:
  - csharp
  name: _AppDomain
  nameWithType: _AppDomain
  fullName: System._AppDomain
  type: Interface
  assemblies:
  - mscorlib
  namespace: System
  summary: Exposes the public members of the <xref href="System.AppDomain"></xref> class to unmanaged code.
  remarks: This interface preserves the vtable order of the <xref:System.AppDomain?displayProperty=fullName> class members that can be accessed by unmanaged COM objects.
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("05F696DC-2B29-3663-AD8B-C4389CF2A713")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface _AppDomain
  derivedClasses:
  - System.AppDomain
  implements: []
  attributes:
  - type: System.CLSCompliantAttribute
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  - type: System.Runtime.InteropServices.GuidAttribute
  - type: System.Runtime.InteropServices.InterfaceTypeAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.AppendPrivatePath(System.String)
  commentId: M:System._AppDomain.AppendPrivatePath(System.String)
  id: AppendPrivatePath(System.String)
  parent: System._AppDomain
  langs:
  - csharp
  name: AppendPrivatePath(String)
  nameWithType: _AppDomain.AppendPrivatePath(String)
  fullName: _AppDomain.AppendPrivatePath(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.AppendPrivatePath(System.String)"></xref> method.
  remarks: See the <xref:System.AppDomain.AppendPrivatePath%2A?displayProperty=fullName> method.
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public void AppendPrivatePath (string path);
    parameters:
    - id: path
      type: System.String
      description: The name of the directory to be appended to the private path.
  overload: System._AppDomain.AppendPrivatePath*
  exceptions: []
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.AssemblyLoad
  commentId: E:System._AppDomain.AssemblyLoad
  id: AssemblyLoad
  parent: System._AppDomain
  langs:
  - csharp
  name: AssemblyLoad
  nameWithType: _AppDomain.AssemblyLoad
  fullName: _AppDomain.AssemblyLoad
  type: Event
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.AssemblyLoad"></xref> event.
  remarks: See the <xref:System.AppDomain.AssemblyLoad?displayProperty=fullName> event.
  syntax:
    content: >-
      [add: System.Security.SecurityCritical]

      [remove: System.Security.SecurityCritical]

      public event AssemblyLoadEventHandler AssemblyLoad;
    return:
      type: System.AssemblyLoadEventHandler
      description: ''
  exceptions: []
  attributes:
  - type: 'add: System.Security.SecurityCritical'
  - type: 'remove: System.Security.SecurityCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.AssemblyResolve
  commentId: E:System._AppDomain.AssemblyResolve
  id: AssemblyResolve
  parent: System._AppDomain
  langs:
  - csharp
  name: AssemblyResolve
  nameWithType: _AppDomain.AssemblyResolve
  fullName: _AppDomain.AssemblyResolve
  type: Event
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.AssemblyResolve"></xref> event.
  remarks: See the <xref:System.AppDomain.AssemblyResolve?displayProperty=fullName> event.
  syntax:
    content: >-
      [add: System.Security.SecurityCritical]

      [remove: System.Security.SecurityCritical]

      public event ResolveEventHandler AssemblyResolve;
    return:
      type: System.ResolveEventHandler
      description: ''
  exceptions: []
  attributes:
  - type: 'add: System.Security.SecurityCritical'
  - type: 'remove: System.Security.SecurityCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.BaseDirectory
  commentId: P:System._AppDomain.BaseDirectory
  id: BaseDirectory
  parent: System._AppDomain
  langs:
  - csharp
  name: BaseDirectory
  nameWithType: _AppDomain.BaseDirectory
  fullName: _AppDomain.BaseDirectory
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.BaseDirectory"></xref> property.
  remarks: See the <xref:System.AppDomain.BaseDirectory%2A?displayProperty=fullName> property.
  syntax:
    content: public string BaseDirectory { get; }
    return:
      type: System.String
      description: The base directory that the assembly resolver uses to probe for assemblies.
  overload: System._AppDomain.BaseDirectory*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.ClearPrivatePath
  commentId: M:System._AppDomain.ClearPrivatePath
  id: ClearPrivatePath
  parent: System._AppDomain
  langs:
  - csharp
  name: ClearPrivatePath()
  nameWithType: _AppDomain.ClearPrivatePath()
  fullName: _AppDomain.ClearPrivatePath()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.ClearPrivatePath"></xref> method.
  remarks: See the <xref:System.AppDomain.ClearPrivatePath%2A?displayProperty=fullName> method.
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public void ClearPrivatePath ();
    parameters: []
  overload: System._AppDomain.ClearPrivatePath*
  exceptions: []
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.ClearShadowCopyPath
  commentId: M:System._AppDomain.ClearShadowCopyPath
  id: ClearShadowCopyPath
  parent: System._AppDomain
  langs:
  - csharp
  name: ClearShadowCopyPath()
  nameWithType: _AppDomain.ClearShadowCopyPath()
  fullName: _AppDomain.ClearShadowCopyPath()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.ClearShadowCopyPath"></xref> method.
  remarks: See the <xref:System.AppDomain.ClearShadowCopyPath%2A?displayProperty=fullName> method.
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public void ClearShadowCopyPath ();
    parameters: []
  overload: System._AppDomain.ClearShadowCopyPath*
  exceptions: []
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.CreateInstance(System.String,System.String)
  commentId: M:System._AppDomain.CreateInstance(System.String,System.String)
  id: CreateInstance(System.String,System.String)
  parent: System._AppDomain
  langs:
  - csharp
  name: CreateInstance(String, String)
  nameWithType: _AppDomain.CreateInstance(String, String)
  fullName: _AppDomain.CreateInstance(String, String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.CreateInstance(System.String,System.String)"></xref> method.
  remarks: See the <xref:System.AppDomain.CreateInstance%2A?displayProperty=fullName> method.
  syntax:
    content: public System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName);
    parameters:
    - id: assemblyName
      type: System.String
      description: The display name of the assembly. See <xref href="System.Reflection.Assembly.FullName"></xref>.
    - id: typeName
      type: System.String
      description: The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <xref href="System.Type.FullName"></xref> property.
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: An object that is a wrapper for the new instance specified by <code>typeName</code>. The return value needs to be unwrapped to access the real object.
  overload: System._AppDomain.CreateInstance*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.CreateInstance(System.String,System.String,System.Object[])
  commentId: M:System._AppDomain.CreateInstance(System.String,System.String,System.Object[])
  id: CreateInstance(System.String,System.String,System.Object[])
  parent: System._AppDomain
  langs:
  - csharp
  name: CreateInstance(String, String, Object[])
  nameWithType: _AppDomain.CreateInstance(String, String, Object[])
  fullName: _AppDomain.CreateInstance(String, String, Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.CreateInstance(System.String,System.String,System.Object[])"></xref> method overload.
  remarks: "See the <xref:System.AppDomain.CreateInstance%28System.String%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> method overload.  \n  \n The `activationAttributes` parameter is related to client-activated objects, a legacy technology."
  syntax:
    content: public System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, object[] activationAttributes);
    parameters:
    - id: assemblyName
      type: System.String
      description: The display name of the assembly. See <xref href="System.Reflection.Assembly.FullName"></xref>.
    - id: typeName
      type: System.String
      description: The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <xref href="System.Type.FullName"></xref> property.
    - id: activationAttributes
      type: System.Object[]
      description: An array of one or more attributes that can participate in activation. Typically, an array that contains a single <xref href="System.Runtime.Remoting.Activation.UrlAttribute"></xref> object. The <xref href="System.Runtime.Remoting.Activation.UrlAttribute"></xref> specifies the URL that is required to activate a remote object.
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: An object that is a wrapper for the new instance specified by <code>typeName</code>. The return value needs to be unwrapped to access the real object.
  overload: System._AppDomain.CreateInstance*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  commentId: M:System._AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  id: CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  parent: System._AppDomain
  langs:
  - csharp
  name: CreateInstance(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence)
  nameWithType: _AppDomain.CreateInstance(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence)
  fullName: _AppDomain.CreateInstance(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)"></xref> method overload.
  remarks: "See the <xref:System.AppDomain.CreateInstance%28System.String%2CSystem.String%2CSystem.Boolean%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%2CSystem.Object%5B%5D%2CSystem.Security.Policy.Evidence%29?displayProperty=fullName> method overload.  \n  \n The `activationAttributes` parameter is related to client-activated objects, a legacy technology."
  syntax:
    content: public System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);
    parameters:
    - id: assemblyName
      type: System.String
      description: The display name of the assembly. See <xref href="System.Reflection.Assembly.FullName"></xref>.
    - id: typeName
      type: System.String
      description: The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <xref href="System.Type.FullName"></xref> property.
    - id: ignoreCase
      type: System.Boolean
      description: A Boolean value specifying whether to perform a case-sensitive search or not.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: A combination of zero or more bit flags that affect the search for the <code>typeName</code> constructor. If <code>bindingAttr</code> is zero, a case-sensitive search for public constructors is conducted.
    - id: binder
      type: System.Reflection.Binder
      description: An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <xref href="System.Reflection.MemberInfo"></xref> objects using reflection. If <code>binder</code> is null, the default binder is used.
    - id: args
      type: System.Object[]
      description: The arguments to pass to the constructor. This array of arguments must match in number, order, and type the parameters of the constructor to invoke. If the default constructor is preferred, <code>args</code> must be an empty array or null.
    - id: culture
      type: System.Globalization.CultureInfo
      description: Culture-specific information that governs the coercion of <code>args</code> to the formal types declared for the <code>typeName</code> constructor. If <code>culture</code> is `null`, the <xref href="System.Globalization.CultureInfo"></xref> for the current thread is used.
    - id: activationAttributes
      type: System.Object[]
      description: An array of one or more attributes that can participate in activation. Typically, an array that contains a single <xref href="System.Runtime.Remoting.Activation.UrlAttribute"></xref> object. The <xref href="System.Runtime.Remoting.Activation.UrlAttribute"></xref> specifies the URL that is required to activate a remote object.
    - id: securityAttributes
      type: System.Security.Policy.Evidence
      description: Information used to authorize creation of <code>typeName</code>.
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: An object that is a wrapper for the new instance specified by <code>typeName</code>. The return value needs to be unwrapped to access the real object.
  overload: System._AppDomain.CreateInstance*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.CreateInstanceFrom(System.String,System.String)
  commentId: M:System._AppDomain.CreateInstanceFrom(System.String,System.String)
  id: CreateInstanceFrom(System.String,System.String)
  parent: System._AppDomain
  langs:
  - csharp
  name: CreateInstanceFrom(String, String)
  nameWithType: _AppDomain.CreateInstanceFrom(String, String)
  fullName: _AppDomain.CreateInstanceFrom(String, String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.CreateInstanceFrom(System.String,System.String)"></xref> method overload.
  remarks: See the <xref:System.AppDomain.CreateInstanceFrom%28System.String%2CSystem.String%29?displayProperty=fullName> method overload.
  syntax:
    content: public System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName);
    parameters:
    - id: assemblyFile
      type: System.String
      description: The name, including the path, of a file that contains an assembly that defines the requested type. The assembly is loaded using the <xref href="System.Reflection.Assembly.LoadFrom(System.String)"></xref> method.
    - id: typeName
      type: System.String
      description: The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <xref href="System.Type.FullName"></xref> property.
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: An object that is a wrapper for the new instance, or `null` if <code>typeName</code> is not found. The return value needs to be unwrapped to access the real object.
  overload: System._AppDomain.CreateInstanceFrom*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])
  commentId: M:System._AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])
  id: CreateInstanceFrom(System.String,System.String,System.Object[])
  parent: System._AppDomain
  langs:
  - csharp
  name: CreateInstanceFrom(String, String, Object[])
  nameWithType: _AppDomain.CreateInstanceFrom(String, String, Object[])
  fullName: _AppDomain.CreateInstanceFrom(String, String, Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])"></xref> method overload.
  remarks: "See the <xref:System.AppDomain.CreateInstanceFrom%28System.String%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> method overload.  \n  \n The `activationAttributes` parameter is related to client-activated objects, a legacy technology."
  syntax:
    content: public System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, object[] activationAttributes);
    parameters:
    - id: assemblyFile
      type: System.String
      description: The name, including the path, of a file that contains an assembly that defines the requested type. The assembly is loaded using the <xref href="System.Reflection.Assembly.LoadFrom(System.String)"></xref> method.
    - id: typeName
      type: System.String
      description: The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <xref href="System.Type.FullName"></xref> property.
    - id: activationAttributes
      type: System.Object[]
      description: An array of one or more attributes that can participate in activation. Typically, an array that contains a single <xref href="System.Runtime.Remoting.Activation.UrlAttribute"></xref> object. The <xref href="System.Runtime.Remoting.Activation.UrlAttribute"></xref> specifies the URL that is required to activate a remote object.
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: An object that is a wrapper for the new instance, or `null` if <code>typeName</code> is not found. The return value needs to be unwrapped to access the real object.
  overload: System._AppDomain.CreateInstanceFrom*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  commentId: M:System._AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  id: CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  parent: System._AppDomain
  langs:
  - csharp
  name: CreateInstanceFrom(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence)
  nameWithType: _AppDomain.CreateInstanceFrom(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence)
  fullName: _AppDomain.CreateInstanceFrom(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)"></xref> method overload.
  remarks: "See the <xref:System.AppDomain.CreateInstanceFrom%28System.String%2CSystem.String%2CSystem.Boolean%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%2CSystem.Object%5B%5D%2CSystem.Security.Policy.Evidence%29?displayProperty=fullName> method overload.  \n  \n The `activationAttributes` parameter is related to client-activated objects, a legacy technology."
  syntax:
    content: public System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);
    parameters:
    - id: assemblyFile
      type: System.String
      description: The name, including the path, of a file that contains an assembly that defines the requested type. The assembly is loaded using the <xref href="System.Reflection.Assembly.LoadFrom(System.String)"></xref> method.
    - id: typeName
      type: System.String
      description: The fully qualified name of the requested type, including the namespace but not the assembly, as returned by the <xref href="System.Type.FullName"></xref> property.
    - id: ignoreCase
      type: System.Boolean
      description: A Boolean value specifying whether to perform a case-sensitive search or not.
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: A combination of zero or more bit flags that affect the search for the <code>typeName</code> constructor. If <code>bindingAttr</code> is zero, a case-sensitive search for public constructors is conducted.
    - id: binder
      type: System.Reflection.Binder
      description: An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <xref href="System.Reflection.MemberInfo"></xref> objects through reflection. If <code>binder</code> is null, the default binder is used.
    - id: args
      type: System.Object[]
      description: The arguments to pass to the constructor. This array of arguments must match in number, order, and type the parameters of the constructor to invoke. If the default constructor is preferred, <code>args</code> must be an empty array or null.
    - id: culture
      type: System.Globalization.CultureInfo
      description: Culture-specific information that governs the coercion of <code>args</code> to the formal types declared for the <code>typeName</code> constructor. If <code>culture</code> is `null`, the <xref href="System.Globalization.CultureInfo"></xref> for the current thread is used.
    - id: activationAttributes
      type: System.Object[]
      description: An array of one or more attributes that can participate in activation. Typically, an array that contains a single <xref href="System.Runtime.Remoting.Activation.UrlAttribute"></xref> object. The <xref href="System.Runtime.Remoting.Activation.UrlAttribute"></xref> specifies the URL that is required to activate a remote object.
    - id: securityAttributes
      type: System.Security.Policy.Evidence
      description: Information used to authorize creation of <code>typeName</code>.
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: An object that is a wrapper for the new instance, or `null` if <code>typeName</code> is not found. The return value needs to be unwrapped to access the real object.
  overload: System._AppDomain.CreateInstanceFrom*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)
  commentId: M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)
  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)
  parent: System._AppDomain
  langs:
  - csharp
  name: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, Evidence, PermissionSet, PermissionSet, PermissionSet, Boolean)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, Evidence, PermissionSet, PermissionSet, PermissionSet, Boolean)
  fullName: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, Evidence, PermissionSet, PermissionSet, PermissionSet, Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)"></xref> method overload.
  remarks: See the <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.String%2CSystem.Security.Policy.Evidence%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Boolean%29?displayProperty=fullName> method overload.
  syntax:
    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.Policy.Evidence evidence, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions, bool isSynchronized);
    parameters:
    - id: name
      type: System.Reflection.AssemblyName
      description: The unique identity of the dynamic assembly.
    - id: access
      type: System.Reflection.Emit.AssemblyBuilderAccess
      description: The mode in which the dynamic assembly will be accessed.
    - id: dir
      type: System.String
      description: The name of the directory where the dynamic assembly will be saved. If <code>dir</code> is `null`, the directory defaults to the current directory.
    - id: evidence
      type: System.Security.Policy.Evidence
      description: The evidence supplied for the dynamic assembly. The evidence is used unaltered as the final set of evidence used for policy resolution.
    - id: requiredPermissions
      type: System.Security.PermissionSet
      description: The required permissions request.
    - id: optionalPermissions
      type: System.Security.PermissionSet
      description: The optional permissions request.
    - id: refusedPermissions
      type: System.Security.PermissionSet
      description: The refused permissions request.
    - id: isSynchronized
      type: System.Boolean
      description: '`true` to synchronize the creation of modules, types, and members in the dynamic assembly; otherwise, `false`.'
    return:
      type: System.Reflection.Emit.AssemblyBuilder
      description: Represents the dynamic assembly created.
  overload: System._AppDomain.DefineDynamicAssembly*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  commentId: M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  parent: System._AppDomain
  langs:
  - csharp
  name: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, Evidence, PermissionSet, PermissionSet, PermissionSet)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, Evidence, PermissionSet, PermissionSet, PermissionSet)
  fullName: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, Evidence, PermissionSet, PermissionSet, PermissionSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)"></xref> method overload.
  remarks: See the <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.String%2CSystem.Security.Policy.Evidence%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%29?displayProperty=fullName> method overload.
  syntax:
    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.Policy.Evidence evidence, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);
    parameters:
    - id: name
      type: System.Reflection.AssemblyName
      description: The unique identity of the dynamic assembly.
    - id: access
      type: System.Reflection.Emit.AssemblyBuilderAccess
      description: The mode in which the dynamic assembly will be accessed.
    - id: dir
      type: System.String
      description: The name of the directory where the assembly will be saved. If <code>dir</code> is `null`, the directory defaults to the current directory.
    - id: evidence
      type: System.Security.Policy.Evidence
      description: The evidence supplied for the dynamic assembly. The evidence is used unaltered as the final set of evidence used for policy resolution.
    - id: requiredPermissions
      type: System.Security.PermissionSet
      description: The required permissions request.
    - id: optionalPermissions
      type: System.Security.PermissionSet
      description: The optional permissions request.
    - id: refusedPermissions
      type: System.Security.PermissionSet
      description: The refused permissions request.
    return:
      type: System.Reflection.Emit.AssemblyBuilder
      description: Represents the dynamic assembly created.
  overload: System._AppDomain.DefineDynamicAssembly*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  commentId: M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  parent: System._AppDomain
  langs:
  - csharp
  name: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, PermissionSet, PermissionSet, PermissionSet)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, PermissionSet, PermissionSet, PermissionSet)
  fullName: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, PermissionSet, PermissionSet, PermissionSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)"></xref> method overload.
  remarks: See the <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.String%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%29?displayProperty=fullName> method overload.
  syntax:
    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);
    parameters:
    - id: name
      type: System.Reflection.AssemblyName
      description: The unique identity of the dynamic assembly.
    - id: access
      type: System.Reflection.Emit.AssemblyBuilderAccess
      description: The mode in which the dynamic assembly will be accessed.
    - id: dir
      type: System.String
      description: The name of the directory where the assembly will be saved. If <code>dir</code> is `null`, the directory defaults to the current directory.
    - id: requiredPermissions
      type: System.Security.PermissionSet
      description: The required permissions request.
    - id: optionalPermissions
      type: System.Security.PermissionSet
      description: The optional permissions request.
    - id: refusedPermissions
      type: System.Security.PermissionSet
      description: The refused permissions request.
    return:
      type: System.Reflection.Emit.AssemblyBuilder
      description: Represents the dynamic assembly created.
  overload: System._AppDomain.DefineDynamicAssembly*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  commentId: M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  parent: System._AppDomain
  langs:
  - csharp
  name: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, Evidence, PermissionSet, PermissionSet, PermissionSet)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, Evidence, PermissionSet, PermissionSet, PermissionSet)
  fullName: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, Evidence, PermissionSet, PermissionSet, PermissionSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)"></xref> method overload.
  remarks: See the <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.Security.Policy.Evidence%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%29?displayProperty=fullName> method overload.
  syntax:
    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Security.Policy.Evidence evidence, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);
    parameters:
    - id: name
      type: System.Reflection.AssemblyName
      description: The unique identity of the dynamic assembly.
    - id: access
      type: System.Reflection.Emit.AssemblyBuilderAccess
      description: The mode in which the dynamic assembly will be accessed.
    - id: evidence
      type: System.Security.Policy.Evidence
      description: The evidence supplied for the dynamic assembly. The evidence is used unaltered as the final set of evidence used for policy resolution.
    - id: requiredPermissions
      type: System.Security.PermissionSet
      description: The required permissions request.
    - id: optionalPermissions
      type: System.Security.PermissionSet
      description: The optional permissions request.
    - id: refusedPermissions
      type: System.Security.PermissionSet
      description: The refused permissions request.
    return:
      type: System.Reflection.Emit.AssemblyBuilder
      description: Represents the dynamic assembly created.
  overload: System._AppDomain.DefineDynamicAssembly*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)
  commentId: M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)
  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)
  parent: System._AppDomain
  langs:
  - csharp
  name: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String)
  fullName: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)"></xref> method overload.
  remarks: See the <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.String%29?displayProperty=fullName> method overload.
  syntax:
    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir);
    parameters:
    - id: name
      type: System.Reflection.AssemblyName
      description: The unique identity of the dynamic assembly.
    - id: access
      type: System.Reflection.Emit.AssemblyBuilderAccess
      description: The mode in which the dynamic assembly will be accessed.
    - id: dir
      type: System.String
      description: The name of the directory where the assembly will be saved. If <code>dir</code> is `null`, the directory defaults to the current directory.
    return:
      type: System.Reflection.Emit.AssemblyBuilder
      description: Represents the dynamic assembly created.
  overload: System._AppDomain.DefineDynamicAssembly*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)
  commentId: M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)
  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)
  parent: System._AppDomain
  langs:
  - csharp
  name: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, Evidence)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, Evidence)
  fullName: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)"></xref> method overload.
  remarks: See the <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.String%2CSystem.Security.Policy.Evidence%29?displayProperty=fullName> method overload.
  syntax:
    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.Policy.Evidence evidence);
    parameters:
    - id: name
      type: System.Reflection.AssemblyName
      description: The unique identity of the dynamic assembly.
    - id: access
      type: System.Reflection.Emit.AssemblyBuilderAccess
      description: The mode in which the dynamic assembly will be accessed.
    - id: dir
      type: System.String
      description: The name of the directory where the assembly will be saved. If <code>dir</code> is `null`, the directory defaults to the current directory.
    - id: evidence
      type: System.Security.Policy.Evidence
      description: The evidence supplied for the dynamic assembly. The evidence is used unaltered as the final set of evidence used for policy resolution.
    return:
      type: System.Reflection.Emit.AssemblyBuilder
      description: Represents the dynamic assembly created.
  overload: System._AppDomain.DefineDynamicAssembly*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)
  commentId: M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)
  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)
  parent: System._AppDomain
  langs:
  - csharp
  name: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, Evidence)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, Evidence)
  fullName: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)"></xref> method overload.
  remarks: See the <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.Security.Policy.Evidence%29?displayProperty=fullName> method overload.
  syntax:
    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Security.Policy.Evidence evidence);
    parameters:
    - id: name
      type: System.Reflection.AssemblyName
      description: The unique identity of the dynamic assembly.
    - id: access
      type: System.Reflection.Emit.AssemblyBuilderAccess
      description: The mode in which the dynamic assembly will be accessed.
    - id: evidence
      type: System.Security.Policy.Evidence
      description: The evidence supplied for the dynamic assembly. The evidence is used unaltered as the final set of evidence used for policy resolution.
    return:
      type: System.Reflection.Emit.AssemblyBuilder
      description: Represents the dynamic assembly created.
  overload: System._AppDomain.DefineDynamicAssembly*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)
  commentId: M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)
  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)
  parent: System._AppDomain
  langs:
  - csharp
  name: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess)
  fullName: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)"></xref> method overload.
  remarks: See the <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%29?displayProperty=fullName> method overload.
  syntax:
    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access);
    parameters:
    - id: name
      type: System.Reflection.AssemblyName
      description: The unique identity of the dynamic assembly.
    - id: access
      type: System.Reflection.Emit.AssemblyBuilderAccess
      description: The access mode for the dynamic assembly.
    return:
      type: System.Reflection.Emit.AssemblyBuilder
      description: Represents the dynamic assembly created.
  overload: System._AppDomain.DefineDynamicAssembly*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  commentId: M:System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  parent: System._AppDomain
  langs:
  - csharp
  name: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, PermissionSet, PermissionSet, PermissionSet)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, PermissionSet, PermissionSet, PermissionSet)
  fullName: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, PermissionSet, PermissionSet, PermissionSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)"></xref> method overload.
  remarks: See the <xref:System.AppDomain.DefineDynamicAssembly%28System.Reflection.AssemblyName%2CSystem.Reflection.Emit.AssemblyBuilderAccess%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%2CSystem.Security.PermissionSet%29?displayProperty=fullName> method overload.
  syntax:
    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);
    parameters:
    - id: name
      type: System.Reflection.AssemblyName
      description: The unique identity of the dynamic assembly.
    - id: access
      type: System.Reflection.Emit.AssemblyBuilderAccess
      description: The mode in which the dynamic assembly will be accessed.
    - id: requiredPermissions
      type: System.Security.PermissionSet
      description: The required permissions request.
    - id: optionalPermissions
      type: System.Security.PermissionSet
      description: The optional permissions request.
    - id: refusedPermissions
      type: System.Security.PermissionSet
      description: The refused permissions request.
    return:
      type: System.Reflection.Emit.AssemblyBuilder
      description: Represents the dynamic assembly created.
  overload: System._AppDomain.DefineDynamicAssembly*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.DoCallBack(System.CrossAppDomainDelegate)
  commentId: M:System._AppDomain.DoCallBack(System.CrossAppDomainDelegate)
  id: DoCallBack(System.CrossAppDomainDelegate)
  parent: System._AppDomain
  langs:
  - csharp
  name: DoCallBack(CrossAppDomainDelegate)
  nameWithType: _AppDomain.DoCallBack(CrossAppDomainDelegate)
  fullName: _AppDomain.DoCallBack(CrossAppDomainDelegate)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.DoCallBack(System.CrossAppDomainDelegate)"></xref> method.
  remarks: See the <xref:System.AppDomain.DoCallBack%2A?displayProperty=fullName> method.
  syntax:
    content: public void DoCallBack (CrossAppDomainDelegate theDelegate);
    parameters:
    - id: theDelegate
      type: System.CrossAppDomainDelegate
      description: A delegate that specifies a method to call.
  overload: System._AppDomain.DoCallBack*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.DomainUnload
  commentId: E:System._AppDomain.DomainUnload
  id: DomainUnload
  parent: System._AppDomain
  langs:
  - csharp
  name: DomainUnload
  nameWithType: _AppDomain.DomainUnload
  fullName: _AppDomain.DomainUnload
  type: Event
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.DomainUnload"></xref> event.
  remarks: See the <xref:System.AppDomain.DomainUnload?displayProperty=fullName> event.
  syntax:
    content: public event EventHandler DomainUnload;
    return:
      type: System.EventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.DynamicDirectory
  commentId: P:System._AppDomain.DynamicDirectory
  id: DynamicDirectory
  parent: System._AppDomain
  langs:
  - csharp
  name: DynamicDirectory
  nameWithType: _AppDomain.DynamicDirectory
  fullName: _AppDomain.DynamicDirectory
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.DynamicDirectory"></xref> property.
  remarks: See the <xref:System.AppDomain.DynamicDirectory%2A?displayProperty=fullName> property.
  syntax:
    content: public string DynamicDirectory { get; }
    return:
      type: System.String
      description: Get the directory that the assembly resolver uses to probe for dynamically-created assemblies.
  overload: System._AppDomain.DynamicDirectory*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.Equals(System.Object)
  commentId: M:System._AppDomain.Equals(System.Object)
  id: Equals(System.Object)
  parent: System._AppDomain
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: _AppDomain.Equals(Object)
  fullName: _AppDomain.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the inherited <xref href="System.Object.Equals(System.Object)"></xref> method.
  remarks: See the <xref:System.Object.Equals%2A?displayProperty=fullName> method.
  syntax:
    content: public bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: The <xref href="System.Object"></xref> to compare to the current <xref href="System.Object"></xref>.
    return:
      type: System.Boolean
      description: '`true` if the specified <xref href="System.Object"></xref> is equal to the current <xref href="System.Object"></xref>; otherwise, `false`.'
  overload: System._AppDomain.Equals*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.Evidence
  commentId: P:System._AppDomain.Evidence
  id: Evidence
  parent: System._AppDomain
  langs:
  - csharp
  name: Evidence
  nameWithType: _AppDomain.Evidence
  fullName: _AppDomain.Evidence
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.Evidence"></xref> property.
  remarks: See the <xref:System.AppDomain.Evidence%2A?displayProperty=fullName> property.
  syntax:
    content: public System.Security.Policy.Evidence Evidence { get; }
    return:
      type: System.Security.Policy.Evidence
      description: Gets the <xref href="System.Security.Policy.Evidence"></xref> associated with this application domain that is used as input to the security policy.
  overload: System._AppDomain.Evidence*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence)
  commentId: M:System._AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence)
  id: ExecuteAssembly(System.String,System.Security.Policy.Evidence)
  parent: System._AppDomain
  langs:
  - csharp
  name: ExecuteAssembly(String, Evidence)
  nameWithType: _AppDomain.ExecuteAssembly(String, Evidence)
  fullName: _AppDomain.ExecuteAssembly(String, Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence)"></xref> method overload.
  remarks: See the <xref:System.AppDomain.ExecuteAssembly%28System.String%2CSystem.Security.Policy.Evidence%29?displayProperty=fullName> method overload.
  syntax:
    content: public int ExecuteAssembly (string assemblyFile, System.Security.Policy.Evidence assemblySecurity);
    parameters:
    - id: assemblyFile
      type: System.String
      description: The name of the file that contains the assembly to execute.
    - id: assemblySecurity
      type: System.Security.Policy.Evidence
      description: Evidence for loading the assembly.
    return:
      type: System.Int32
      description: The value returned by the entry point of the assembly.
  overload: System._AppDomain.ExecuteAssembly*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.ExecuteAssembly(System.String)
  commentId: M:System._AppDomain.ExecuteAssembly(System.String)
  id: ExecuteAssembly(System.String)
  parent: System._AppDomain
  langs:
  - csharp
  name: ExecuteAssembly(String)
  nameWithType: _AppDomain.ExecuteAssembly(String)
  fullName: _AppDomain.ExecuteAssembly(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.ExecuteAssembly(System.String)"></xref> method overload.
  remarks: See the <xref:System.AppDomain.ExecuteAssembly%28System.String%29?displayProperty=fullName> method overload.
  syntax:
    content: public int ExecuteAssembly (string assemblyFile);
    parameters:
    - id: assemblyFile
      type: System.String
      description: The name of the file that contains the assembly to execute.
    return:
      type: System.Int32
      description: The value returned by the entry point of the assembly.
  overload: System._AppDomain.ExecuteAssembly*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])
  commentId: M:System._AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])
  id: ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])
  parent: System._AppDomain
  langs:
  - csharp
  name: ExecuteAssembly(String, Evidence, String[])
  nameWithType: _AppDomain.ExecuteAssembly(String, Evidence, String[])
  fullName: _AppDomain.ExecuteAssembly(String, Evidence, String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])"></xref> method overload.
  remarks: See the <xref:System.AppDomain.ExecuteAssembly%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.String%5B%5D%29?displayProperty=fullName> method overload.
  syntax:
    content: public int ExecuteAssembly (string assemblyFile, System.Security.Policy.Evidence assemblySecurity, string[] args);
    parameters:
    - id: assemblyFile
      type: System.String
      description: The name of the file that contains the assembly to execute.
    - id: assemblySecurity
      type: System.Security.Policy.Evidence
      description: The supplied evidence for the assembly.
    - id: args
      type: System.String[]
      description: The arguments to the entry point of the assembly.
    return:
      type: System.Int32
      description: The value returned by the entry point of the assembly.
  overload: System._AppDomain.ExecuteAssembly*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.FriendlyName
  commentId: P:System._AppDomain.FriendlyName
  id: FriendlyName
  parent: System._AppDomain
  langs:
  - csharp
  name: FriendlyName
  nameWithType: _AppDomain.FriendlyName
  fullName: _AppDomain.FriendlyName
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.FriendlyName"></xref> property.
  remarks: See the <xref:System.AppDomain.FriendlyName%2A?displayProperty=fullName> property.
  syntax:
    content: public string FriendlyName { get; }
    return:
      type: System.String
      description: The friendly name of this application domain.
  overload: System._AppDomain.FriendlyName*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.GetAssemblies
  commentId: M:System._AppDomain.GetAssemblies
  id: GetAssemblies
  parent: System._AppDomain
  langs:
  - csharp
  name: GetAssemblies()
  nameWithType: _AppDomain.GetAssemblies()
  fullName: _AppDomain.GetAssemblies()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.GetAssemblies"></xref> method.
  remarks: See the <xref:System.AppDomain.GetAssemblies%2A?displayProperty=fullName> method.
  syntax:
    content: public System.Reflection.Assembly[] GetAssemblies ();
    parameters: []
    return:
      type: System.Reflection.Assembly[]
      description: An array of assemblies in this application domain.
  overload: System._AppDomain.GetAssemblies*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.GetData(System.String)
  commentId: M:System._AppDomain.GetData(System.String)
  id: GetData(System.String)
  parent: System._AppDomain
  langs:
  - csharp
  name: GetData(String)
  nameWithType: _AppDomain.GetData(String)
  fullName: _AppDomain.GetData(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.GetData(System.String)"></xref> method.
  remarks: See the <xref:System.AppDomain.GetData%2A?displayProperty=fullName> method.
  syntax:
    content: public object GetData (string name);
    parameters:
    - id: name
      type: System.String
      description: The name of a predefined application domain property, or the name of an application domain property you have defined.
    return:
      type: System.Object
      description: The value of the <code>name</code> property.
  overload: System._AppDomain.GetData*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.GetHashCode
  commentId: M:System._AppDomain.GetHashCode
  id: GetHashCode
  parent: System._AppDomain
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: _AppDomain.GetHashCode()
  fullName: _AppDomain.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the inherited <xref href="System.Object.GetHashCode"></xref> method.
  remarks: See the <xref:System.Object.GetHashCode%2A?displayProperty=fullName> method.
  syntax:
    content: public int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: A hash code for the current <xref href="System.Object"></xref>.
  overload: System._AppDomain.GetHashCode*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  commentId: M:System._AppDomain.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System._AppDomain
  langs:
  - csharp
  name: GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: _AppDomain.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: _AppDomain.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Maps a set of names to a corresponding set of dispatch identifiers.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.
  syntax:
    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: Reserved for future use. Must be IID_NULL.
    - id: rgszNames
      type: System.IntPtr
      description: Passed-in array of names to be mapped.
    - id: cNames
      type: System.UInt32
      description: Count of the names to be mapped.
    - id: lcid
      type: System.UInt32
      description: The locale context in which to interpret the names.
    - id: rgDispId
      type: System.IntPtr
      description: Caller-allocated array which receives the IDs corresponding to the names.
  overload: System._AppDomain.GetIDsOfNames*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: The method is called late-bound using the COM <code>IDispatch</code> interface.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.GetLifetimeService
  commentId: M:System._AppDomain.GetLifetimeService
  id: GetLifetimeService
  parent: System._AppDomain
  langs:
  - csharp
  name: GetLifetimeService()
  nameWithType: _AppDomain.GetLifetimeService()
  fullName: _AppDomain.GetLifetimeService()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the inherited <xref href="System.MarshalByRefObject.GetLifetimeService"></xref> method.
  remarks: See the <xref:System.MarshalByRefObject.GetLifetimeService%2A?displayProperty=fullName> method.
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public object GetLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: An object of type <xref href="System.Runtime.Remoting.Lifetime.ILease"></xref> used to control the lifetime policy for this instance.
  overload: System._AppDomain.GetLifetimeService*
  exceptions: []
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.GetType
  commentId: M:System._AppDomain.GetType
  id: GetType
  parent: System._AppDomain
  langs:
  - csharp
  name: GetType()
  nameWithType: _AppDomain.GetType()
  fullName: _AppDomain.GetType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.GetType"></xref> method.
  remarks: See the <xref:System.AppDomain.GetType%2A?displayProperty=fullName> method.
  syntax:
    content: public Type GetType ();
    parameters: []
    return:
      type: System.Type
      description: A <xref href="System.Type"></xref> representing the type of the current instance.
  overload: System._AppDomain.GetType*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  commentId: M:System._AppDomain.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System._AppDomain
  langs:
  - csharp
  name: GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: _AppDomain.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: _AppDomain.GetTypeInfo(UInt32, UInt32, IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Retrieves the type information for an object, which can then be used to get the type information for an interface.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.
  syntax:
    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: The type information to return.
    - id: lcid
      type: System.UInt32
      description: The locale identifier for the type information.
    - id: ppTInfo
      type: System.IntPtr
      description: Receives a pointer to the requested type information object.
  overload: System._AppDomain.GetTypeInfo*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: The method is called late-bound using the COM <code>IDispatch</code> interface.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.GetTypeInfoCount(System.UInt32@)
  commentId: M:System._AppDomain.GetTypeInfoCount(System.UInt32@)
  id: GetTypeInfoCount(System.UInt32@)
  parent: System._AppDomain
  langs:
  - csharp
  name: GetTypeInfoCount(UInt32)
  nameWithType: _AppDomain.GetTypeInfoCount(UInt32)
  fullName: _AppDomain.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Retrieves the number of type information interfaces that an object provides (either 0 or 1).
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.
  syntax:
    content: public void GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: Points to a location that receives the number of type information interfaces provided by the object.
  overload: System._AppDomain.GetTypeInfoCount*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: The method is called late-bound using the COM <code>IDispatch</code> interface.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.InitializeLifetimeService
  commentId: M:System._AppDomain.InitializeLifetimeService
  id: InitializeLifetimeService
  parent: System._AppDomain
  langs:
  - csharp
  name: InitializeLifetimeService()
  nameWithType: _AppDomain.InitializeLifetimeService()
  fullName: _AppDomain.InitializeLifetimeService()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.InitializeLifetimeService"></xref> method.
  remarks: See the <xref:System.AppDomain.InitializeLifetimeService%2A?displayProperty=fullName> method.
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public object InitializeLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: Always `null`.
  overload: System._AppDomain.InitializeLifetimeService*
  exceptions: []
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  commentId: M:System._AppDomain.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System._AppDomain
  langs:
  - csharp
  name: Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: _AppDomain.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: _AppDomain.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides access to properties and methods exposed by an object.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.
  syntax:
    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: Identifies the member.
    - id: riid
      type: System.Guid
      description: Reserved for future use. Must be IID_NULL.
    - id: lcid
      type: System.UInt32
      description: The locale context in which to interpret arguments.
    - id: wFlags
      type: System.Int16
      description: Flags describing the context of the call.
    - id: pDispParams
      type: System.IntPtr
      description: Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.
    - id: pVarResult
      type: System.IntPtr
      description: Pointer to the location where the result is to be stored.
    - id: pExcepInfo
      type: System.IntPtr
      description: Pointer to a structure that contains exception information.
    - id: puArgErr
      type: System.IntPtr
      description: The index of the first argument that has an error.
  overload: System._AppDomain.Invoke*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: The method is called late-bound using the COM <code>IDispatch</code> interface.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)
  commentId: M:System._AppDomain.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)
  id: Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)
  parent: System._AppDomain
  langs:
  - csharp
  name: Load(Byte[], Byte[], Evidence)
  nameWithType: _AppDomain.Load(Byte[], Byte[], Evidence)
  fullName: _AppDomain.Load(Byte[], Byte[], Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)"></xref> method overload.
  remarks: See the [\], Byte\<xref:System.AppDomain.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29?displayProperty=fullName> method overload.
  syntax:
    content: public System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore, System.Security.Policy.Evidence securityEvidence);
    parameters:
    - id: rawAssembly
      type: System.Byte[]
      description: An array of type `byte` that is a COFF-based image containing an emitted assembly.
    - id: rawSymbolStore
      type: System.Byte[]
      description: An array of type `byte` containing the raw bytes representing the symbols for the assembly.
    - id: securityEvidence
      type: System.Security.Policy.Evidence
      description: Evidence for loading the assembly.
    return:
      type: System.Reflection.Assembly
      description: The loaded assembly.
  overload: System._AppDomain.Load*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.Load(System.String,System.Security.Policy.Evidence)
  commentId: M:System._AppDomain.Load(System.String,System.Security.Policy.Evidence)
  id: Load(System.String,System.Security.Policy.Evidence)
  parent: System._AppDomain
  langs:
  - csharp
  name: Load(String, Evidence)
  nameWithType: _AppDomain.Load(String, Evidence)
  fullName: _AppDomain.Load(String, Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.Load(System.String,System.Security.Policy.Evidence)"></xref> method overload.
  remarks: See the <xref:System.AppDomain.Load%28System.String%2CSystem.Security.Policy.Evidence%29?displayProperty=fullName> method overload.
  syntax:
    content: public System.Reflection.Assembly Load (string assemblyString, System.Security.Policy.Evidence assemblySecurity);
    parameters:
    - id: assemblyString
      type: System.String
      description: The display name of the assembly. See <xref href="System.Reflection.Assembly.FullName"></xref>.
    - id: assemblySecurity
      type: System.Security.Policy.Evidence
      description: Evidence for loading the assembly.
    return:
      type: System.Reflection.Assembly
      description: The loaded assembly.
  overload: System._AppDomain.Load*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.Load(System.Byte[],System.Byte[])
  commentId: M:System._AppDomain.Load(System.Byte[],System.Byte[])
  id: Load(System.Byte[],System.Byte[])
  parent: System._AppDomain
  langs:
  - csharp
  name: Load(Byte[], Byte[])
  nameWithType: _AppDomain.Load(Byte[], Byte[])
  fullName: _AppDomain.Load(Byte[], Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.Load(System.Byte[],System.Byte[])"></xref> method overload.
  remarks: See the [\], Byte\<xref:System.AppDomain.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%29?displayProperty=fullName> method overload.
  syntax:
    content: public System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore);
    parameters:
    - id: rawAssembly
      type: System.Byte[]
      description: An array of type `byte` that is a COFF-based image containing an emitted assembly.
    - id: rawSymbolStore
      type: System.Byte[]
      description: An array of type `byte` containing the raw bytes representing the symbols for the assembly.
    return:
      type: System.Reflection.Assembly
      description: The loaded assembly.
  overload: System._AppDomain.Load*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)
  commentId: M:System._AppDomain.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)
  id: Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)
  parent: System._AppDomain
  langs:
  - csharp
  name: Load(AssemblyName, Evidence)
  nameWithType: _AppDomain.Load(AssemblyName, Evidence)
  fullName: _AppDomain.Load(AssemblyName, Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)"></xref> method overload.
  remarks: See the <xref:System.AppDomain.Load%28System.Reflection.AssemblyName%2CSystem.Security.Policy.Evidence%29?displayProperty=fullName> method overload.
  syntax:
    content: public System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef, System.Security.Policy.Evidence assemblySecurity);
    parameters:
    - id: assemblyRef
      type: System.Reflection.AssemblyName
      description: An object that describes the assembly to load.
    - id: assemblySecurity
      type: System.Security.Policy.Evidence
      description: Evidence for loading the assembly.
    return:
      type: System.Reflection.Assembly
      description: The loaded assembly.
  overload: System._AppDomain.Load*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.Load(System.Reflection.AssemblyName)
  commentId: M:System._AppDomain.Load(System.Reflection.AssemblyName)
  id: Load(System.Reflection.AssemblyName)
  parent: System._AppDomain
  langs:
  - csharp
  name: Load(AssemblyName)
  nameWithType: _AppDomain.Load(AssemblyName)
  fullName: _AppDomain.Load(AssemblyName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.Load(System.Reflection.AssemblyName)"></xref> method overload.
  remarks: See the <xref:System.AppDomain.Load%28System.Reflection.AssemblyName%29?displayProperty=fullName> method overload.
  syntax:
    content: public System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef);
    parameters:
    - id: assemblyRef
      type: System.Reflection.AssemblyName
      description: An object that describes the assembly to load.
    return:
      type: System.Reflection.Assembly
      description: The loaded assembly.
  overload: System._AppDomain.Load*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.Load(System.Byte[])
  commentId: M:System._AppDomain.Load(System.Byte[])
  id: Load(System.Byte[])
  parent: System._AppDomain
  langs:
  - csharp
  name: Load(Byte[])
  nameWithType: _AppDomain.Load(Byte[])
  fullName: _AppDomain.Load(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.Load(System.Byte[])"></xref> method overload.
  remarks: See the <xref:System.AppDomain.Load%28System.Byte%5B%5D%29?displayProperty=fullName> method overload.
  syntax:
    content: public System.Reflection.Assembly Load (byte[] rawAssembly);
    parameters:
    - id: rawAssembly
      type: System.Byte[]
      description: An array of type `byte` that is a COFF-based image containing an emitted assembly.
    return:
      type: System.Reflection.Assembly
      description: The loaded assembly.
  overload: System._AppDomain.Load*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.Load(System.String)
  commentId: M:System._AppDomain.Load(System.String)
  id: Load(System.String)
  parent: System._AppDomain
  langs:
  - csharp
  name: Load(String)
  nameWithType: _AppDomain.Load(String)
  fullName: _AppDomain.Load(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.Load(System.String)"></xref> method overload.
  remarks: See the <xref:System.AppDomain.Load%28System.String%29?displayProperty=fullName> method overload.
  syntax:
    content: public System.Reflection.Assembly Load (string assemblyString);
    parameters:
    - id: assemblyString
      type: System.String
      description: The display name of the assembly. See <xref href="System.Reflection.Assembly.FullName"></xref>.
    return:
      type: System.Reflection.Assembly
      description: The loaded assembly.
  overload: System._AppDomain.Load*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.ProcessExit
  commentId: E:System._AppDomain.ProcessExit
  id: ProcessExit
  parent: System._AppDomain
  langs:
  - csharp
  name: ProcessExit
  nameWithType: _AppDomain.ProcessExit
  fullName: _AppDomain.ProcessExit
  type: Event
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.ProcessExit"></xref> event.
  remarks: See the <xref:System.AppDomain.ProcessExit?displayProperty=fullName> event.
  syntax:
    content: public event EventHandler ProcessExit;
    return:
      type: System.EventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.RelativeSearchPath
  commentId: P:System._AppDomain.RelativeSearchPath
  id: RelativeSearchPath
  parent: System._AppDomain
  langs:
  - csharp
  name: RelativeSearchPath
  nameWithType: _AppDomain.RelativeSearchPath
  fullName: _AppDomain.RelativeSearchPath
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.RelativeSearchPath"></xref> property.
  remarks: See the <xref:System.AppDomain.RelativeSearchPath%2A?displayProperty=fullName> property.
  syntax:
    content: public string RelativeSearchPath { get; }
    return:
      type: System.String
      description: The path under the base directory where the assembly resolver should probe for private assemblies.
  overload: System._AppDomain.RelativeSearchPath*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.ResourceResolve
  commentId: E:System._AppDomain.ResourceResolve
  id: ResourceResolve
  parent: System._AppDomain
  langs:
  - csharp
  name: ResourceResolve
  nameWithType: _AppDomain.ResourceResolve
  fullName: _AppDomain.ResourceResolve
  type: Event
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.ResourceResolve"></xref> event.
  remarks: See the <xref:System.AppDomain.ResourceResolve?displayProperty=fullName> event.
  syntax:
    content: >-
      [add: System.Security.SecurityCritical]

      [remove: System.Security.SecurityCritical]

      public event ResolveEventHandler ResourceResolve;
    return:
      type: System.ResolveEventHandler
      description: ''
  exceptions: []
  attributes:
  - type: 'add: System.Security.SecurityCritical'
  - type: 'remove: System.Security.SecurityCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.SetAppDomainPolicy(System.Security.Policy.PolicyLevel)
  commentId: M:System._AppDomain.SetAppDomainPolicy(System.Security.Policy.PolicyLevel)
  id: SetAppDomainPolicy(System.Security.Policy.PolicyLevel)
  parent: System._AppDomain
  langs:
  - csharp
  name: SetAppDomainPolicy(PolicyLevel)
  nameWithType: _AppDomain.SetAppDomainPolicy(PolicyLevel)
  fullName: _AppDomain.SetAppDomainPolicy(PolicyLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.SetAppDomainPolicy(System.Security.Policy.PolicyLevel)"></xref> method.
  remarks: See the <xref:System.AppDomain.SetAppDomainPolicy%2A?displayProperty=fullName> method.
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public void SetAppDomainPolicy (System.Security.Policy.PolicyLevel domainPolicy);
    parameters:
    - id: domainPolicy
      type: System.Security.Policy.PolicyLevel
      description: The security policy level.
  overload: System._AppDomain.SetAppDomainPolicy*
  exceptions: []
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.SetCachePath(System.String)
  commentId: M:System._AppDomain.SetCachePath(System.String)
  id: SetCachePath(System.String)
  parent: System._AppDomain
  langs:
  - csharp
  name: SetCachePath(String)
  nameWithType: _AppDomain.SetCachePath(String)
  fullName: _AppDomain.SetCachePath(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.SetCachePath(System.String)"></xref> method.
  remarks: See the <xref:System.AppDomain.SetCachePath%2A?displayProperty=fullName> method.
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public void SetCachePath (string s);
    parameters:
    - id: s
      type: System.String
      description: The fully qualified path to the shadow copy location.
  overload: System._AppDomain.SetCachePath*
  exceptions: []
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.SetData(System.String,System.Object)
  commentId: M:System._AppDomain.SetData(System.String,System.Object)
  id: SetData(System.String,System.Object)
  parent: System._AppDomain
  langs:
  - csharp
  name: SetData(String, Object)
  nameWithType: _AppDomain.SetData(String, Object)
  fullName: _AppDomain.SetData(String, Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.SetData(System.String,System.Object)"></xref> method.
  remarks: See the <xref:System.AppDomain.SetData%2A?displayProperty=fullName> method.
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public void SetData (string name, object data);
    parameters:
    - id: name
      type: System.String
      description: The name of a user-defined application domain property to create or change.
    - id: data
      type: System.Object
      description: The value of the property.
  overload: System._AppDomain.SetData*
  exceptions: []
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)
  commentId: M:System._AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)
  id: SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)
  parent: System._AppDomain
  langs:
  - csharp
  name: SetPrincipalPolicy(PrincipalPolicy)
  nameWithType: _AppDomain.SetPrincipalPolicy(PrincipalPolicy)
  fullName: _AppDomain.SetPrincipalPolicy(PrincipalPolicy)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)"></xref> method.
  remarks: See the <xref:System.AppDomain.SetPrincipalPolicy%2A?displayProperty=fullName> method.
  syntax:
    content: public void SetPrincipalPolicy (System.Security.Principal.PrincipalPolicy policy);
    parameters:
    - id: policy
      type: System.Security.Principal.PrincipalPolicy
      description: One of the <xref href="System.Security.Principal.PrincipalPolicy"></xref> values that specifies the type of the principal object to attach to threads.
  overload: System._AppDomain.SetPrincipalPolicy*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.SetShadowCopyPath(System.String)
  commentId: M:System._AppDomain.SetShadowCopyPath(System.String)
  id: SetShadowCopyPath(System.String)
  parent: System._AppDomain
  langs:
  - csharp
  name: SetShadowCopyPath(String)
  nameWithType: _AppDomain.SetShadowCopyPath(String)
  fullName: _AppDomain.SetShadowCopyPath(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.SetShadowCopyPath(System.String)"></xref> method.
  remarks: See the <xref:System.AppDomain.SetShadowCopyPath%2A?displayProperty=fullName> method.
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public void SetShadowCopyPath (string s);
    parameters:
    - id: s
      type: System.String
      description: A list of directory names, where each name is separated by a semicolon.
  overload: System._AppDomain.SetShadowCopyPath*
  exceptions: []
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.SetThreadPrincipal(System.Security.Principal.IPrincipal)
  commentId: M:System._AppDomain.SetThreadPrincipal(System.Security.Principal.IPrincipal)
  id: SetThreadPrincipal(System.Security.Principal.IPrincipal)
  parent: System._AppDomain
  langs:
  - csharp
  name: SetThreadPrincipal(IPrincipal)
  nameWithType: _AppDomain.SetThreadPrincipal(IPrincipal)
  fullName: _AppDomain.SetThreadPrincipal(IPrincipal)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.SetThreadPrincipal(System.Security.Principal.IPrincipal)"></xref> method.
  remarks: See the <xref:System.AppDomain.SetThreadPrincipal%2A?displayProperty=fullName> method.
  syntax:
    content: public void SetThreadPrincipal (System.Security.Principal.IPrincipal principal);
    parameters:
    - id: principal
      type: System.Security.Principal.IPrincipal
      description: The principal object to attach to threads.
  overload: System._AppDomain.SetThreadPrincipal*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.ShadowCopyFiles
  commentId: P:System._AppDomain.ShadowCopyFiles
  id: ShadowCopyFiles
  parent: System._AppDomain
  langs:
  - csharp
  name: ShadowCopyFiles
  nameWithType: _AppDomain.ShadowCopyFiles
  fullName: _AppDomain.ShadowCopyFiles
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.ShadowCopyFiles"></xref> property.
  remarks: See the <xref:System.AppDomain.ShadowCopyFiles%2A?displayProperty=fullName> property.
  syntax:
    content: public bool ShadowCopyFiles { get; }
    return:
      type: System.Boolean
      description: '`true` if the application domain is configured to shadow copy files; otherwise, `false`.'
  overload: System._AppDomain.ShadowCopyFiles*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.ToString
  commentId: M:System._AppDomain.ToString
  id: ToString
  parent: System._AppDomain
  langs:
  - csharp
  name: ToString()
  nameWithType: _AppDomain.ToString()
  fullName: _AppDomain.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.ToString"></xref> method.
  remarks: See the <xref:System.AppDomain.ToString%2A?displayProperty=fullName> method.
  syntax:
    content: public string ToString ();
    parameters: []
    return:
      type: System.String
      description: A string formed by concatenating the literal string "Name:", the friendly name of the application domain, and either string representations of the context policies or the string "There are no context policies."
  overload: System._AppDomain.ToString*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.TypeResolve
  commentId: E:System._AppDomain.TypeResolve
  id: TypeResolve
  parent: System._AppDomain
  langs:
  - csharp
  name: TypeResolve
  nameWithType: _AppDomain.TypeResolve
  fullName: _AppDomain.TypeResolve
  type: Event
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.TypeResolve"></xref> event.
  remarks: See the <xref:System.AppDomain.ToString%2A?displayProperty=fullName> event.
  syntax:
    content: >-
      [add: System.Security.SecurityCritical]

      [remove: System.Security.SecurityCritical]

      public event ResolveEventHandler TypeResolve;
    return:
      type: System.ResolveEventHandler
      description: ''
  exceptions: []
  attributes:
  - type: 'add: System.Security.SecurityCritical'
  - type: 'remove: System.Security.SecurityCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System._AppDomain.UnhandledException
  commentId: E:System._AppDomain.UnhandledException
  id: UnhandledException
  parent: System._AppDomain
  langs:
  - csharp
  name: UnhandledException
  nameWithType: _AppDomain.UnhandledException
  fullName: _AppDomain.UnhandledException
  type: Event
  assemblies:
  - mscorlib
  namespace: System
  summary: Provides COM objects with version-independent access to the <xref href="System.AppDomain.UnhandledException"></xref> event.
  remarks: See the <xref:System.AppDomain.UnhandledException?displayProperty=fullName> event.
  syntax:
    content: >-
      [add: System.Security.SecurityCritical]

      [remove: System.Security.SecurityCritical]

      public event UnhandledExceptionEventHandler UnhandledException;
    return:
      type: System.UnhandledExceptionEventHandler
      description: ''
  exceptions: []
  attributes:
  - type: 'add: System.Security.SecurityCritical'
  - type: 'remove: System.Security.SecurityCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.NotImplementedException
  parent: System
  isExternal: false
  name: NotImplementedException
  nameWithType: NotImplementedException
  fullName: System.NotImplementedException
- uid: System._AppDomain.AppendPrivatePath(System.String)
  parent: System._AppDomain
  isExternal: false
  name: AppendPrivatePath(String)
  nameWithType: _AppDomain.AppendPrivatePath(String)
  fullName: _AppDomain.AppendPrivatePath(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System._AppDomain.AssemblyLoad
  parent: System._AppDomain
  isExternal: false
  name: AssemblyLoad
  nameWithType: _AppDomain.AssemblyLoad
  fullName: _AppDomain.AssemblyLoad
- uid: System.AssemblyLoadEventHandler
  parent: System
  isExternal: false
  name: AssemblyLoadEventHandler
  nameWithType: AssemblyLoadEventHandler
  fullName: System.AssemblyLoadEventHandler
- uid: System._AppDomain.AssemblyResolve
  parent: System._AppDomain
  isExternal: false
  name: AssemblyResolve
  nameWithType: _AppDomain.AssemblyResolve
  fullName: _AppDomain.AssemblyResolve
- uid: System.ResolveEventHandler
  parent: System
  isExternal: false
  name: ResolveEventHandler
  nameWithType: ResolveEventHandler
  fullName: System.ResolveEventHandler
- uid: System._AppDomain.BaseDirectory
  parent: System._AppDomain
  isExternal: false
  name: BaseDirectory
  nameWithType: _AppDomain.BaseDirectory
  fullName: _AppDomain.BaseDirectory
- uid: System._AppDomain.ClearPrivatePath
  parent: System._AppDomain
  isExternal: false
  name: ClearPrivatePath()
  nameWithType: _AppDomain.ClearPrivatePath()
  fullName: _AppDomain.ClearPrivatePath()
- uid: System._AppDomain.ClearShadowCopyPath
  parent: System._AppDomain
  isExternal: false
  name: ClearShadowCopyPath()
  nameWithType: _AppDomain.ClearShadowCopyPath()
  fullName: _AppDomain.ClearShadowCopyPath()
- uid: System._AppDomain.CreateInstance(System.String,System.String)
  parent: System._AppDomain
  isExternal: false
  name: CreateInstance(String, String)
  nameWithType: _AppDomain.CreateInstance(String, String)
  fullName: _AppDomain.CreateInstance(String, String)
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjectHandle
  nameWithType: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
- uid: System._AppDomain.CreateInstance(System.String,System.String,System.Object[])
  parent: System._AppDomain
  isExternal: false
  name: CreateInstance(String, String, Object[])
  nameWithType: _AppDomain.CreateInstance(String, String, Object[])
  fullName: _AppDomain.CreateInstance(String, String, Object[])
- uid: System.Object
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object[]
  parent: System
  isExternal: false
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System._AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  parent: System._AppDomain
  isExternal: false
  name: CreateInstance(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence)
  nameWithType: _AppDomain.CreateInstance(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence)
  fullName: _AppDomain.CreateInstance(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System._AppDomain.CreateInstanceFrom(System.String,System.String)
  parent: System._AppDomain
  isExternal: false
  name: CreateInstanceFrom(String, String)
  nameWithType: _AppDomain.CreateInstanceFrom(String, String)
  fullName: _AppDomain.CreateInstanceFrom(String, String)
- uid: System._AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])
  parent: System._AppDomain
  isExternal: false
  name: CreateInstanceFrom(String, String, Object[])
  nameWithType: _AppDomain.CreateInstanceFrom(String, String, Object[])
  fullName: _AppDomain.CreateInstanceFrom(String, String, Object[])
- uid: System._AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  parent: System._AppDomain
  isExternal: false
  name: CreateInstanceFrom(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence)
  nameWithType: _AppDomain.CreateInstanceFrom(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence)
  fullName: _AppDomain.CreateInstanceFrom(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence)
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)
  parent: System._AppDomain
  isExternal: false
  name: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, Evidence, PermissionSet, PermissionSet, PermissionSet, Boolean)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, Evidence, PermissionSet, PermissionSet, PermissionSet, Boolean)
  fullName: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, Evidence, PermissionSet, PermissionSet, PermissionSet, Boolean)
- uid: System.Reflection.Emit.AssemblyBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: AssemblyBuilder
  nameWithType: AssemblyBuilder
  fullName: System.Reflection.Emit.AssemblyBuilder
- uid: System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: false
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.Reflection.Emit.AssemblyBuilderAccess
  parent: System.Reflection.Emit
  isExternal: false
  name: AssemblyBuilderAccess
  nameWithType: AssemblyBuilderAccess
  fullName: System.Reflection.Emit.AssemblyBuilderAccess
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  parent: System._AppDomain
  isExternal: false
  name: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, Evidence, PermissionSet, PermissionSet, PermissionSet)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, Evidence, PermissionSet, PermissionSet, PermissionSet)
  fullName: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, Evidence, PermissionSet, PermissionSet, PermissionSet)
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  parent: System._AppDomain
  isExternal: false
  name: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, PermissionSet, PermissionSet, PermissionSet)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, PermissionSet, PermissionSet, PermissionSet)
  fullName: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, PermissionSet, PermissionSet, PermissionSet)
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  parent: System._AppDomain
  isExternal: false
  name: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, Evidence, PermissionSet, PermissionSet, PermissionSet)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, Evidence, PermissionSet, PermissionSet, PermissionSet)
  fullName: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, Evidence, PermissionSet, PermissionSet, PermissionSet)
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)
  parent: System._AppDomain
  isExternal: false
  name: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String)
  fullName: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String)
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)
  parent: System._AppDomain
  isExternal: false
  name: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, Evidence)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, Evidence)
  fullName: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, String, Evidence)
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)
  parent: System._AppDomain
  isExternal: false
  name: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, Evidence)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, Evidence)
  fullName: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, Evidence)
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)
  parent: System._AppDomain
  isExternal: false
  name: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess)
  fullName: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess)
- uid: System._AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)
  parent: System._AppDomain
  isExternal: false
  name: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, PermissionSet, PermissionSet, PermissionSet)
  nameWithType: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, PermissionSet, PermissionSet, PermissionSet)
  fullName: _AppDomain.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, PermissionSet, PermissionSet, PermissionSet)
- uid: System._AppDomain.DoCallBack(System.CrossAppDomainDelegate)
  parent: System._AppDomain
  isExternal: false
  name: DoCallBack(CrossAppDomainDelegate)
  nameWithType: _AppDomain.DoCallBack(CrossAppDomainDelegate)
  fullName: _AppDomain.DoCallBack(CrossAppDomainDelegate)
- uid: System.CrossAppDomainDelegate
  parent: System
  isExternal: false
  name: CrossAppDomainDelegate
  nameWithType: CrossAppDomainDelegate
  fullName: System.CrossAppDomainDelegate
- uid: System._AppDomain.DomainUnload
  parent: System._AppDomain
  isExternal: false
  name: DomainUnload
  nameWithType: _AppDomain.DomainUnload
  fullName: _AppDomain.DomainUnload
- uid: System.EventHandler
  parent: System
  isExternal: false
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System._AppDomain.DynamicDirectory
  parent: System._AppDomain
  isExternal: false
  name: DynamicDirectory
  nameWithType: _AppDomain.DynamicDirectory
  fullName: _AppDomain.DynamicDirectory
- uid: System._AppDomain.Equals(System.Object)
  parent: System._AppDomain
  isExternal: false
  name: Equals(Object)
  nameWithType: _AppDomain.Equals(Object)
  fullName: _AppDomain.Equals(Object)
- uid: System._AppDomain.Evidence
  parent: System._AppDomain
  isExternal: false
  name: Evidence
  nameWithType: _AppDomain.Evidence
  fullName: _AppDomain.Evidence
- uid: System._AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence)
  parent: System._AppDomain
  isExternal: false
  name: ExecuteAssembly(String, Evidence)
  nameWithType: _AppDomain.ExecuteAssembly(String, Evidence)
  fullName: _AppDomain.ExecuteAssembly(String, Evidence)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System._AppDomain.ExecuteAssembly(System.String)
  parent: System._AppDomain
  isExternal: false
  name: ExecuteAssembly(String)
  nameWithType: _AppDomain.ExecuteAssembly(String)
  fullName: _AppDomain.ExecuteAssembly(String)
- uid: System._AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])
  parent: System._AppDomain
  isExternal: false
  name: ExecuteAssembly(String, Evidence, String[])
  nameWithType: _AppDomain.ExecuteAssembly(String, Evidence, String[])
  fullName: _AppDomain.ExecuteAssembly(String, Evidence, String[])
- uid: System.String[]
  parent: System
  isExternal: false
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System._AppDomain.FriendlyName
  parent: System._AppDomain
  isExternal: false
  name: FriendlyName
  nameWithType: _AppDomain.FriendlyName
  fullName: _AppDomain.FriendlyName
- uid: System._AppDomain.GetAssemblies
  parent: System._AppDomain
  isExternal: false
  name: GetAssemblies()
  nameWithType: _AppDomain.GetAssemblies()
  fullName: _AppDomain.GetAssemblies()
- uid: System.Reflection.Assembly
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.Assembly[]
  parent: System.Reflection
  isExternal: false
  name: Assembly[]
  nameWithType: Assembly[]
  fullName: System.Reflection.Assembly[]
  spec.csharp:
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: System.Reflection.Assembly
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System._AppDomain.GetData(System.String)
  parent: System._AppDomain
  isExternal: false
  name: GetData(String)
  nameWithType: _AppDomain.GetData(String)
  fullName: _AppDomain.GetData(String)
- uid: System._AppDomain.GetHashCode
  parent: System._AppDomain
  isExternal: false
  name: GetHashCode()
  nameWithType: _AppDomain.GetHashCode()
  fullName: _AppDomain.GetHashCode()
- uid: System._AppDomain.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System._AppDomain
  isExternal: false
  name: GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: _AppDomain.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: _AppDomain.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System._AppDomain.GetLifetimeService
  parent: System._AppDomain
  isExternal: false
  name: GetLifetimeService()
  nameWithType: _AppDomain.GetLifetimeService()
  fullName: _AppDomain.GetLifetimeService()
- uid: System._AppDomain.GetType
  parent: System._AppDomain
  isExternal: false
  name: GetType()
  nameWithType: _AppDomain.GetType()
  fullName: _AppDomain.GetType()
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System._AppDomain.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System._AppDomain
  isExternal: false
  name: GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: _AppDomain.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: _AppDomain.GetTypeInfo(UInt32, UInt32, IntPtr)
- uid: System._AppDomain.GetTypeInfoCount(System.UInt32@)
  parent: System._AppDomain
  isExternal: false
  name: GetTypeInfoCount(UInt32)
  nameWithType: _AppDomain.GetTypeInfoCount(UInt32)
  fullName: _AppDomain.GetTypeInfoCount(UInt32)
- uid: System._AppDomain.InitializeLifetimeService
  parent: System._AppDomain
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: _AppDomain.InitializeLifetimeService()
  fullName: _AppDomain.InitializeLifetimeService()
- uid: System._AppDomain.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System._AppDomain
  isExternal: false
  name: Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: _AppDomain.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: _AppDomain.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System._AppDomain.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)
  parent: System._AppDomain
  isExternal: false
  name: Load(Byte[], Byte[], Evidence)
  nameWithType: _AppDomain.Load(Byte[], Byte[], Evidence)
  fullName: _AppDomain.Load(Byte[], Byte[], Evidence)
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System._AppDomain.Load(System.String,System.Security.Policy.Evidence)
  parent: System._AppDomain
  isExternal: false
  name: Load(String, Evidence)
  nameWithType: _AppDomain.Load(String, Evidence)
  fullName: _AppDomain.Load(String, Evidence)
- uid: System._AppDomain.Load(System.Byte[],System.Byte[])
  parent: System._AppDomain
  isExternal: false
  name: Load(Byte[], Byte[])
  nameWithType: _AppDomain.Load(Byte[], Byte[])
  fullName: _AppDomain.Load(Byte[], Byte[])
- uid: System._AppDomain.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)
  parent: System._AppDomain
  isExternal: false
  name: Load(AssemblyName, Evidence)
  nameWithType: _AppDomain.Load(AssemblyName, Evidence)
  fullName: _AppDomain.Load(AssemblyName, Evidence)
- uid: System._AppDomain.Load(System.Reflection.AssemblyName)
  parent: System._AppDomain
  isExternal: false
  name: Load(AssemblyName)
  nameWithType: _AppDomain.Load(AssemblyName)
  fullName: _AppDomain.Load(AssemblyName)
- uid: System._AppDomain.Load(System.Byte[])
  parent: System._AppDomain
  isExternal: false
  name: Load(Byte[])
  nameWithType: _AppDomain.Load(Byte[])
  fullName: _AppDomain.Load(Byte[])
- uid: System._AppDomain.Load(System.String)
  parent: System._AppDomain
  isExternal: false
  name: Load(String)
  nameWithType: _AppDomain.Load(String)
  fullName: _AppDomain.Load(String)
- uid: System._AppDomain.ProcessExit
  parent: System._AppDomain
  isExternal: false
  name: ProcessExit
  nameWithType: _AppDomain.ProcessExit
  fullName: _AppDomain.ProcessExit
- uid: System._AppDomain.RelativeSearchPath
  parent: System._AppDomain
  isExternal: false
  name: RelativeSearchPath
  nameWithType: _AppDomain.RelativeSearchPath
  fullName: _AppDomain.RelativeSearchPath
- uid: System._AppDomain.ResourceResolve
  parent: System._AppDomain
  isExternal: false
  name: ResourceResolve
  nameWithType: _AppDomain.ResourceResolve
  fullName: _AppDomain.ResourceResolve
- uid: System._AppDomain.SetAppDomainPolicy(System.Security.Policy.PolicyLevel)
  parent: System._AppDomain
  isExternal: false
  name: SetAppDomainPolicy(PolicyLevel)
  nameWithType: _AppDomain.SetAppDomainPolicy(PolicyLevel)
  fullName: _AppDomain.SetAppDomainPolicy(PolicyLevel)
- uid: System.Security.Policy.PolicyLevel
  parent: System.Security.Policy
  isExternal: false
  name: PolicyLevel
  nameWithType: PolicyLevel
  fullName: System.Security.Policy.PolicyLevel
- uid: System._AppDomain.SetCachePath(System.String)
  parent: System._AppDomain
  isExternal: false
  name: SetCachePath(String)
  nameWithType: _AppDomain.SetCachePath(String)
  fullName: _AppDomain.SetCachePath(String)
- uid: System._AppDomain.SetData(System.String,System.Object)
  parent: System._AppDomain
  isExternal: false
  name: SetData(String, Object)
  nameWithType: _AppDomain.SetData(String, Object)
  fullName: _AppDomain.SetData(String, Object)
- uid: System._AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)
  parent: System._AppDomain
  isExternal: false
  name: SetPrincipalPolicy(PrincipalPolicy)
  nameWithType: _AppDomain.SetPrincipalPolicy(PrincipalPolicy)
  fullName: _AppDomain.SetPrincipalPolicy(PrincipalPolicy)
- uid: System.Security.Principal.PrincipalPolicy
  parent: System.Security.Principal
  isExternal: false
  name: PrincipalPolicy
  nameWithType: PrincipalPolicy
  fullName: System.Security.Principal.PrincipalPolicy
- uid: System._AppDomain.SetShadowCopyPath(System.String)
  parent: System._AppDomain
  isExternal: false
  name: SetShadowCopyPath(String)
  nameWithType: _AppDomain.SetShadowCopyPath(String)
  fullName: _AppDomain.SetShadowCopyPath(String)
- uid: System._AppDomain.SetThreadPrincipal(System.Security.Principal.IPrincipal)
  parent: System._AppDomain
  isExternal: false
  name: SetThreadPrincipal(IPrincipal)
  nameWithType: _AppDomain.SetThreadPrincipal(IPrincipal)
  fullName: _AppDomain.SetThreadPrincipal(IPrincipal)
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: false
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System._AppDomain.ShadowCopyFiles
  parent: System._AppDomain
  isExternal: false
  name: ShadowCopyFiles
  nameWithType: _AppDomain.ShadowCopyFiles
  fullName: _AppDomain.ShadowCopyFiles
- uid: System._AppDomain.ToString
  parent: System._AppDomain
  isExternal: false
  name: ToString()
  nameWithType: _AppDomain.ToString()
  fullName: _AppDomain.ToString()
- uid: System._AppDomain.TypeResolve
  parent: System._AppDomain
  isExternal: false
  name: TypeResolve
  nameWithType: _AppDomain.TypeResolve
  fullName: _AppDomain.TypeResolve
- uid: System._AppDomain.UnhandledException
  parent: System._AppDomain
  isExternal: false
  name: UnhandledException
  nameWithType: _AppDomain.UnhandledException
  fullName: _AppDomain.UnhandledException
- uid: System.UnhandledExceptionEventHandler
  parent: System
  isExternal: false
  name: UnhandledExceptionEventHandler
  nameWithType: UnhandledExceptionEventHandler
  fullName: System.UnhandledExceptionEventHandler
- uid: System._AppDomain.AppendPrivatePath*
  parent: System._AppDomain
  isExternal: false
  name: AppendPrivatePath
  nameWithType: _AppDomain.AppendPrivatePath
  fullName: _AppDomain.AppendPrivatePath
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.BaseDirectory*
  parent: System._AppDomain
  isExternal: false
  name: BaseDirectory
  nameWithType: _AppDomain.BaseDirectory
  fullName: _AppDomain.BaseDirectory
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.ClearPrivatePath*
  parent: System._AppDomain
  isExternal: false
  name: ClearPrivatePath
  nameWithType: _AppDomain.ClearPrivatePath
  fullName: _AppDomain.ClearPrivatePath
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.ClearShadowCopyPath*
  parent: System._AppDomain
  isExternal: false
  name: ClearShadowCopyPath
  nameWithType: _AppDomain.ClearShadowCopyPath
  fullName: _AppDomain.ClearShadowCopyPath
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.CreateInstance*
  parent: System._AppDomain
  isExternal: false
  name: CreateInstance
  nameWithType: _AppDomain.CreateInstance
  fullName: _AppDomain.CreateInstance
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.CreateInstanceFrom*
  parent: System._AppDomain
  isExternal: false
  name: CreateInstanceFrom
  nameWithType: _AppDomain.CreateInstanceFrom
  fullName: _AppDomain.CreateInstanceFrom
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.DefineDynamicAssembly*
  parent: System._AppDomain
  isExternal: false
  name: DefineDynamicAssembly
  nameWithType: _AppDomain.DefineDynamicAssembly
  fullName: _AppDomain.DefineDynamicAssembly
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.DoCallBack*
  parent: System._AppDomain
  isExternal: false
  name: DoCallBack
  nameWithType: _AppDomain.DoCallBack
  fullName: _AppDomain.DoCallBack
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.DynamicDirectory*
  parent: System._AppDomain
  isExternal: false
  name: DynamicDirectory
  nameWithType: _AppDomain.DynamicDirectory
  fullName: _AppDomain.DynamicDirectory
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.Equals*
  parent: System._AppDomain
  isExternal: false
  name: Equals
  nameWithType: _AppDomain.Equals
  fullName: _AppDomain.Equals
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.Evidence*
  parent: System._AppDomain
  isExternal: false
  name: Evidence
  nameWithType: _AppDomain.Evidence
  fullName: _AppDomain.Evidence
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.ExecuteAssembly*
  parent: System._AppDomain
  isExternal: false
  name: ExecuteAssembly
  nameWithType: _AppDomain.ExecuteAssembly
  fullName: _AppDomain.ExecuteAssembly
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.FriendlyName*
  parent: System._AppDomain
  isExternal: false
  name: FriendlyName
  nameWithType: _AppDomain.FriendlyName
  fullName: _AppDomain.FriendlyName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.GetAssemblies*
  parent: System._AppDomain
  isExternal: false
  name: GetAssemblies
  nameWithType: _AppDomain.GetAssemblies
  fullName: _AppDomain.GetAssemblies
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.GetData*
  parent: System._AppDomain
  isExternal: false
  name: GetData
  nameWithType: _AppDomain.GetData
  fullName: _AppDomain.GetData
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.GetHashCode*
  parent: System._AppDomain
  isExternal: false
  name: GetHashCode
  nameWithType: _AppDomain.GetHashCode
  fullName: _AppDomain.GetHashCode
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.GetIDsOfNames*
  parent: System._AppDomain
  isExternal: false
  name: GetIDsOfNames
  nameWithType: _AppDomain.GetIDsOfNames
  fullName: _AppDomain.GetIDsOfNames
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.GetLifetimeService*
  parent: System._AppDomain
  isExternal: false
  name: GetLifetimeService
  nameWithType: _AppDomain.GetLifetimeService
  fullName: _AppDomain.GetLifetimeService
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.GetType*
  parent: System._AppDomain
  isExternal: false
  name: GetType
  nameWithType: _AppDomain.GetType
  fullName: _AppDomain.GetType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.GetTypeInfo*
  parent: System._AppDomain
  isExternal: false
  name: GetTypeInfo
  nameWithType: _AppDomain.GetTypeInfo
  fullName: _AppDomain.GetTypeInfo
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.GetTypeInfoCount*
  parent: System._AppDomain
  isExternal: false
  name: GetTypeInfoCount
  nameWithType: _AppDomain.GetTypeInfoCount
  fullName: _AppDomain.GetTypeInfoCount
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.InitializeLifetimeService*
  parent: System._AppDomain
  isExternal: false
  name: InitializeLifetimeService
  nameWithType: _AppDomain.InitializeLifetimeService
  fullName: _AppDomain.InitializeLifetimeService
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.Invoke*
  parent: System._AppDomain
  isExternal: false
  name: Invoke
  nameWithType: _AppDomain.Invoke
  fullName: _AppDomain.Invoke
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.Load*
  parent: System._AppDomain
  isExternal: false
  name: Load
  nameWithType: _AppDomain.Load
  fullName: _AppDomain.Load
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.RelativeSearchPath*
  parent: System._AppDomain
  isExternal: false
  name: RelativeSearchPath
  nameWithType: _AppDomain.RelativeSearchPath
  fullName: _AppDomain.RelativeSearchPath
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.SetAppDomainPolicy*
  parent: System._AppDomain
  isExternal: false
  name: SetAppDomainPolicy
  nameWithType: _AppDomain.SetAppDomainPolicy
  fullName: _AppDomain.SetAppDomainPolicy
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.SetCachePath*
  parent: System._AppDomain
  isExternal: false
  name: SetCachePath
  nameWithType: _AppDomain.SetCachePath
  fullName: _AppDomain.SetCachePath
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.SetData*
  parent: System._AppDomain
  isExternal: false
  name: SetData
  nameWithType: _AppDomain.SetData
  fullName: _AppDomain.SetData
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.SetPrincipalPolicy*
  parent: System._AppDomain
  isExternal: false
  name: SetPrincipalPolicy
  nameWithType: _AppDomain.SetPrincipalPolicy
  fullName: _AppDomain.SetPrincipalPolicy
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.SetShadowCopyPath*
  parent: System._AppDomain
  isExternal: false
  name: SetShadowCopyPath
  nameWithType: _AppDomain.SetShadowCopyPath
  fullName: _AppDomain.SetShadowCopyPath
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.SetThreadPrincipal*
  parent: System._AppDomain
  isExternal: false
  name: SetThreadPrincipal
  nameWithType: _AppDomain.SetThreadPrincipal
  fullName: _AppDomain.SetThreadPrincipal
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.ShadowCopyFiles*
  parent: System._AppDomain
  isExternal: false
  name: ShadowCopyFiles
  nameWithType: _AppDomain.ShadowCopyFiles
  fullName: _AppDomain.ShadowCopyFiles
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
- uid: System._AppDomain.ToString*
  parent: System._AppDomain
  isExternal: false
  name: ToString
  nameWithType: _AppDomain.ToString
  fullName: _AppDomain.ToString
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/_AppDomain.xml
