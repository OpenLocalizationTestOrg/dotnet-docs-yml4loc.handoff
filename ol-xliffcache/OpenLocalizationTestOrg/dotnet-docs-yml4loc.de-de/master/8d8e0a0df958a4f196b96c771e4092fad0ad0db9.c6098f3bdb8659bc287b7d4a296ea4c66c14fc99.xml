{"nodes":[{"content":"The elements of the bindings that build the channel factories and channel listeners for various types of channels that are used to process outgoing and incoming messages.","nodes":[{"pos":[0,170],"content":"The elements of the bindings that build the channel factories and channel listeners for various types of channels that are used to process outgoing and incoming messages.","nodes":[{"content":"The elements of the bindings that build the channel factories and channel listeners for various types of channels that are used to process outgoing and incoming messages.","pos":[0,170]}]}],"pos":[1201,1372],"yaml":true},{"content":"A binding consists of an ordered set of binding elements that inherit from this abstract base class.  The <xref:System.ServiceModel.Channels.TransportBindingElement> class inherits from the <xref:System.ServiceModel.Channels.BindingElement> class.  \n  \n Creating a binding and binding element for your transport is optional if you are just using the channel model. It is possible to do everything you need through the channel factory and listener as long as they are made public.  \n  \n The [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service model uses a factory pattern where the binding is used to create the channel stack. If you want to use the [!INCLUDE[indigo2](~/includes/indigo2-md.md)] service model, then using a transport binding element is required. Placing this binding element into a binding is a good practice because it removes the requirement for users to create their own custom binding for your transport. It is best to create both a binding and binding element, and hide the channel factory and listener inside the assembly.  \n  \n On the sending side, a binding is used to build a <xref:System.ServiceModel.Channels.IChannelFactory>, which in turn builds a channel stack and returns a reference to the top channel in the stack. The application can then use this channel to send messages.  \n  \n Similarly, on the receiving side a binding is used to build a <xref:System.ServiceModel.Channels.IChannelListener>, which listens for incoming messages. The <xref:System.ServiceModel.Channels.IChannelListener> provides messages to the listening application by creating channel stacks and handing the application a reference to the top channel. The application then uses this channel to receive incoming messages.  \n  \n> [!NOTE]\n>  If you are adding message headers that must be encrypted you must return a <xref:System.ServiceModel.Security.ChannelProtectionRequirements> instance with your requirements from the <xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29> method when asked for <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.","nodes":[{"pos":[0,247],"content":"A binding consists of an ordered set of binding elements that inherit from this abstract base class.  The <xref:System.ServiceModel.Channels.TransportBindingElement> class inherits from the <xref:System.ServiceModel.Channels.BindingElement> class.","nodes":[{"content":"A binding consists of an ordered set of binding elements that inherit from this abstract base class.  The <xref:System.ServiceModel.Channels.TransportBindingElement> class inherits from the <xref:System.ServiceModel.Channels.BindingElement> class.","pos":[0,247],"nodes":[{"content":"A binding consists of an ordered set of binding elements that inherit from this abstract base class.","pos":[0,100]},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.TransportBindingElement&gt;</ph> class inherits from the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> class.","pos":[102,247],"source":"  The <xref:System.ServiceModel.Channels.TransportBindingElement> class inherits from the <xref:System.ServiceModel.Channels.BindingElement> class."}]}]},{"pos":[254,479],"content":"Creating a binding and binding element for your transport is optional if you are just using the channel model. It is possible to do everything you need through the channel factory and listener as long as they are made public.","nodes":[{"content":"Creating a binding and binding element for your transport is optional if you are just using the channel model. It is possible to do everything you need through the channel factory and listener as long as they are made public.","pos":[0,225],"nodes":[{"content":"Creating a binding and binding element for your transport is optional if you are just using the channel model.","pos":[0,110]},{"content":"It is possible to do everything you need through the channel factory and listener as long as they are made public.","pos":[111,225]}]}]},{"pos":[486,1046],"content":"The [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service model uses a factory pattern where the binding is used to create the channel stack. If you want to use the [!INCLUDE[indigo2](~/includes/indigo2-md.md)] service model, then using a transport binding element is required. Placing this binding element into a binding is a good practice because it removes the requirement for users to create their own custom binding for your transport. It is best to create both a binding and binding element, and hide the channel factory and listener inside the assembly.","nodes":[{"content":"The <ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> service model uses a factory pattern where the binding is used to create the channel stack.","pos":[0,141],"source":"The [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service model uses a factory pattern where the binding is used to create the channel stack."},{"content":"If you want to use the <ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> service model, then using a transport binding element is required.","pos":[142,277],"source":" If you want to use the [!INCLUDE[indigo2](~/includes/indigo2-md.md)] service model, then using a transport binding element is required."},{"content":"Placing this binding element into a binding is a good practice because it removes the requirement for users to create their own custom binding for your transport.","pos":[278,440]},{"content":"It is best to create both a binding and binding element, and hide the channel factory and listener inside the assembly.","pos":[441,560]}]},{"pos":[1053,1309],"content":"On the sending side, a binding is used to build a <xref:System.ServiceModel.Channels.IChannelFactory>, which in turn builds a channel stack and returns a reference to the top channel in the stack. The application can then use this channel to send messages.","nodes":[{"content":"On the sending side, a binding is used to build a <xref:System.ServiceModel.Channels.IChannelFactory>, which in turn builds a channel stack and returns a reference to the top channel in the stack. The application can then use this channel to send messages.","pos":[0,256],"nodes":[{"content":"On the sending side, a binding is used to build a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph>, which in turn builds a channel stack and returns a reference to the top channel in the stack.","pos":[0,196],"source":"On the sending side, a binding is used to build a <xref:System.ServiceModel.Channels.IChannelFactory>, which in turn builds a channel stack and returns a reference to the top channel in the stack."},{"content":"The application can then use this channel to send messages.","pos":[197,256]}]}]},{"pos":[1316,1728],"content":"Similarly, on the receiving side a binding is used to build a <xref:System.ServiceModel.Channels.IChannelListener>, which listens for incoming messages. The <xref:System.ServiceModel.Channels.IChannelListener> provides messages to the listening application by creating channel stacks and handing the application a reference to the top channel. The application then uses this channel to receive incoming messages.","nodes":[{"content":"Similarly, on the receiving side a binding is used to build a <xref:System.ServiceModel.Channels.IChannelListener>, which listens for incoming messages. The <xref:System.ServiceModel.Channels.IChannelListener> provides messages to the listening application by creating channel stacks and handing the application a reference to the top channel. The application then uses this channel to receive incoming messages.","pos":[0,412],"nodes":[{"content":"Similarly, on the receiving side a binding is used to build a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph>, which listens for incoming messages.","pos":[0,152],"source":"Similarly, on the receiving side a binding is used to build a <xref:System.ServiceModel.Channels.IChannelListener>, which listens for incoming messages."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> provides messages to the listening application by creating channel stacks and handing the application a reference to the top channel.","pos":[153,343],"source":" The <xref:System.ServiceModel.Channels.IChannelListener> provides messages to the listening application by creating channel stacks and handing the application a reference to the top channel."},{"content":"The application then uses this channel to receive incoming messages.","pos":[344,412]}]}]},{"pos":[1736,2136],"content":"[!NOTE]\n If you are adding message headers that must be encrypted you must return a <xref:System.ServiceModel.Security.ChannelProtectionRequirements> instance with your requirements from the <xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29> method when asked for <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.","leadings":["","> "],"nodes":[{"content":"If you are adding message headers that must be encrypted you must return a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph> instance with your requirements from the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29&gt;</ph> method when asked for <ph id=\"ph3\">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph>.","pos":[9,398],"source":" If you are adding message headers that must be encrypted you must return a <xref:System.ServiceModel.Security.ChannelProtectionRequirements> instance with your requirements from the <xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29> method when asked for <xref:System.ServiceModel.Security.ChannelProtectionRequirements>."}]}],"pos":[1383,3533],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> class.","nodes":[{"pos":[0,105],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingElement\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> class."}],"pos":[6319,6425],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> class from a specified binding element.","nodes":[{"pos":[0,138],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingElement\"&gt;&lt;/xref&gt;</ph> class from a specified binding element.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> class from a specified binding element."}],"pos":[7854,7993],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> to be cloned.","nodes":[{"pos":[0,82],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingElement\"&gt;&lt;/xref&gt;</ph> to be cloned.","source":"The <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> to be cloned."}],"pos":[8225,8308],"yaml":true},{"content":"Initializes a channel factory for producing channels of a specified type from the binding context.","nodes":[{"pos":[0,98],"content":"Initializes a channel factory for producing channels of a specified type from the binding context.","nodes":[{"content":"Initializes a channel factory for producing channels of a specified type from the binding context.","pos":[0,98]}]}],"pos":[9755,9854],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides context for the binding element.","nodes":[{"pos":[0,115],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph> that provides context for the binding element.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides context for the binding element."}],"pos":[10284,10400],"yaml":true},{"content":"The type of channel the factory builds.","nodes":[{"pos":[0,39],"content":"The type of channel the factory builds.","nodes":[{"content":"The type of channel the factory builds.","pos":[0,39]}]}],"pos":[10458,10498],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"></xref> of type <code>TChannel</code> initialized from the <code>context</code>.","nodes":[{"pos":[0,144],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"&gt;&lt;/xref&gt;</ph> of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> initialized from the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">context</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"></xref> of type <code>TChannel</code> initialized from the <code>context</code>."}],"pos":[10588,10733],"yaml":true},{"content":"<code>context</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>context</code> is `null`."}],"pos":[10929,10961],"yaml":true},{"content":"Initializes a channel listener to accept channels of a specified type from the binding context.","nodes":[{"pos":[0,95],"content":"Initializes a channel listener to accept channels of a specified type from the binding context.","nodes":[{"content":"Initializes a channel listener to accept channels of a specified type from the binding context.","pos":[0,95]}]}],"pos":[12334,12430],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides context for the binding element.","nodes":[{"pos":[0,115],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph> that provides context for the binding element.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides context for the binding element."}],"pos":[12927,13043],"yaml":true},{"content":"The type of channel the listener is built to accept.","nodes":[{"pos":[0,52],"content":"The type of channel the listener is built to accept.","nodes":[{"content":"The type of channel the listener is built to accept.","pos":[0,52]}]}],"pos":[13101,13154],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> initialized from the <code>context</code>.","nodes":[{"pos":[0,182],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.IChannelListener`1\"&gt;&lt;/xref&gt;</ph> of type <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.IChannel\"&gt;&lt;/xref&gt;</ph> initialized from the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">context</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> initialized from the <code>context</code>."}],"pos":[13245,13428],"yaml":true},{"content":"<code>context</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>context</code> is `null`."}],"pos":[13625,13657],"yaml":true},{"content":"Returns a value that indicates whether the binding element can build a channel factory for a specific type of channel.","nodes":[{"pos":[0,118],"content":"Returns a value that indicates whether the binding element can build a channel factory for a specific type of channel.","nodes":[{"content":"Returns a value that indicates whether the binding element can build a channel factory for a specific type of channel.","pos":[0,118]}]}],"pos":[14956,15075],"yaml":true},{"content":"Use this method if you want to check that the channel factory for channels of type `TChannel` can be build for the `context` provided before attempting to build the factory. Alternatively, build the channel factory by calling <xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A> and catch the exception generated if it cannot be built.","nodes":[{"pos":[0,356],"content":"Use this method if you want to check that the channel factory for channels of type `TChannel` can be build for the `context` provided before attempting to build the factory. Alternatively, build the channel factory by calling <xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A> and catch the exception generated if it cannot be built.","nodes":[{"content":"Use this method if you want to check that the channel factory for channels of type <ph id=\"ph1\">`TChannel`</ph> can be build for the <ph id=\"ph2\">`context`</ph> provided before attempting to build the factory.","pos":[0,173],"source":"Use this method if you want to check that the channel factory for channels of type `TChannel` can be build for the `context` provided before attempting to build the factory."},{"content":"Alternatively, build the channel factory by calling <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A&gt;</ph> and catch the exception generated if it cannot be built.","pos":[174,356],"source":" Alternatively, build the channel factory by calling <xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A> and catch the exception generated if it cannot be built."}]}],"pos":[15086,15443],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides context for the binding element.","nodes":[{"pos":[0,115],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph> that provides context for the binding element.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides context for the binding element."}],"pos":[15812,15928],"yaml":true},{"content":"The type of channel the channel factory produces.","nodes":[{"pos":[0,49],"content":"The type of channel the channel factory produces.","nodes":[{"content":"The type of channel the channel factory produces.","pos":[0,49]}]}],"pos":[15986,16036],"yaml":true},{"content":"`true` if the <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"></xref> of type <code>TChannel</code> can be built by the binding element; otherwise, `false`.","nodes":[{"pos":[0,168],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"&gt;&lt;/xref&gt;</ph> of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept> can be built by the binding element; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"></xref> of type <code>TChannel</code> can be built by the binding element; otherwise, `false`."}],"pos":[16094,16265],"yaml":true},{"content":"<code>context</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>context</code> is `null`."}],"pos":[16464,16496],"yaml":true},{"content":"Returns a value that indicates whether the binding element can build a listener for a specific type of channel.","nodes":[{"pos":[0,111],"content":"Returns a value that indicates whether the binding element can build a listener for a specific type of channel.","nodes":[{"content":"Returns a value that indicates whether the binding element can build a listener for a specific type of channel.","pos":[0,111]}]}],"pos":[17887,17999],"yaml":true},{"content":"Use this method if you want to check that the channel listener for channels of type `TChannel` can be build for the `context` provided before attempting to build the listener. Alternatively, build the channel listener by calling <xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A> and catch the exception generated if it cannot be built.","nodes":[{"pos":[0,360],"content":"Use this method if you want to check that the channel listener for channels of type `TChannel` can be build for the `context` provided before attempting to build the listener. Alternatively, build the channel listener by calling <xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A> and catch the exception generated if it cannot be built.","nodes":[{"content":"Use this method if you want to check that the channel listener for channels of type <ph id=\"ph1\">`TChannel`</ph> can be build for the <ph id=\"ph2\">`context`</ph> provided before attempting to build the listener.","pos":[0,175],"source":"Use this method if you want to check that the channel listener for channels of type `TChannel` can be build for the `context` provided before attempting to build the listener."},{"content":"Alternatively, build the channel listener by calling <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A&gt;</ph> and catch the exception generated if it cannot be built.","pos":[176,360],"source":" Alternatively, build the channel listener by calling <xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A> and catch the exception generated if it cannot be built."}]}],"pos":[18010,18371],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides context for the binding element.","nodes":[{"pos":[0,115],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph> that provides context for the binding element.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides context for the binding element."}],"pos":[18806,18922],"yaml":true},{"content":"The type of channel the listener accepts.","nodes":[{"pos":[0,41],"content":"The type of channel the listener accepts.","nodes":[{"content":"The type of channel the listener accepts.","pos":[0,41]}]}],"pos":[18980,19022],"yaml":true},{"content":"`true` if the <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> can be built by the binding element; otherwise, `false`.","nodes":[{"pos":[0,206],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.IChannelListener`1\"&gt;&lt;/xref&gt;</ph> of type <ph id=\"ph3\">&lt;xref href=\"System.ServiceModel.Channels.IChannel\"&gt;&lt;/xref&gt;</ph> can be built by the binding element; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> can be built by the binding element; otherwise, `false`."}],"pos":[19080,19289],"yaml":true},{"content":"<code>context</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>context</code> is `null`."}],"pos":[19489,19521],"yaml":true},{"content":"When overridden in a derived class, returns a copy of the binding element object.","nodes":[{"pos":[0,81],"content":"When overridden in a derived class, returns a copy of the binding element object.","nodes":[{"content":"When overridden in a derived class, returns a copy of the binding element object.","pos":[0,81]}]}],"pos":[20502,20584],"yaml":true},{"content":"Implement the <xref:System.ServiceModel.Channels.BindingElement.Clone%2A> method to return a deep clone of your binding element. Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element. If a clone is not returned, the run-time behavior is undefined.  \n  \n A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object. (This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only. If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.","nodes":[{"pos":[0,316],"content":"Implement the <xref:System.ServiceModel.Channels.BindingElement.Clone%2A> method to return a deep clone of your binding element. Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element. If a clone is not returned, the run-time behavior is undefined.","nodes":[{"content":"Implement the <xref:System.ServiceModel.Channels.BindingElement.Clone%2A> method to return a deep clone of your binding element. Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element. If a clone is not returned, the run-time behavior is undefined.","pos":[0,316],"nodes":[{"content":"Implement the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.BindingElement.Clone%2A&gt;</ph> method to return a deep clone of your binding element.","pos":[0,128],"source":"Implement the <xref:System.ServiceModel.Channels.BindingElement.Clone%2A> method to return a deep clone of your binding element."},{"content":"Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.","pos":[129,252]},{"content":"If a clone is not returned, the run-time behavior is undefined.","pos":[253,316]}]}]},{"pos":[323,761],"content":"A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object. (This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only. If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.","nodes":[{"content":"A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object. (This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only. If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.","pos":[0,438],"nodes":[{"content":"A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.","pos":[0,129]},{"content":"(This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only.","pos":[130,257]},{"content":"If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.","pos":[258,438]}]}]}],"pos":[20595,21361],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> object that is a deep clone of the original.","nodes":[{"pos":[0,111],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingElement\"&gt;&lt;/xref&gt;</ph> object that is a deep clone of the original.","source":"A <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> object that is a deep clone of the original."}],"pos":[21560,21672],"yaml":true},{"content":"When overridden in a derived class, returns a typed object requested, if present, from the appropriate layer in the binding stack.","nodes":[{"pos":[0,130],"content":"When overridden in a derived class, returns a typed object requested, if present, from the appropriate layer in the binding stack.","nodes":[{"content":"When overridden in a derived class, returns a typed object requested, if present, from the appropriate layer in the binding stack.","pos":[0,130]}]}],"pos":[23050,23181],"yaml":true},{"content":"Use this to retrieve capabilities, requirements and parameters from the binding element stack. If a binding element supports returning the requested object, it returns it. If not, it delegates the call down to the next binding element in the stack. If it gets to the bottom of the stack and no binding element supported the requested object, then the method returns `null`.  \n  \n> [!NOTE]\n>  If you are adding message headers that must be encrypted you must return a <xref:System.ServiceModel.Security.ChannelProtectionRequirements> instance with your requirements from this method when asked for <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.","nodes":[{"pos":[0,373],"content":"Use this to retrieve capabilities, requirements and parameters from the binding element stack. If a binding element supports returning the requested object, it returns it. If not, it delegates the call down to the next binding element in the stack. If it gets to the bottom of the stack and no binding element supported the requested object, then the method returns `null`.","nodes":[{"content":"Use this to retrieve capabilities, requirements and parameters from the binding element stack.","pos":[0,94]},{"content":"If a binding element supports returning the requested object, it returns it.","pos":[95,171]},{"content":"If not, it delegates the call down to the next binding element in the stack.","pos":[172,248]},{"content":"If it gets to the bottom of the stack and no binding element supported the requested object, then the method returns <ph id=\"ph1\">`null`</ph>.","pos":[249,373],"source":" If it gets to the bottom of the stack and no binding element supported the requested object, then the method returns `null`."}]},{"pos":[381,663],"content":"[!NOTE]\n If you are adding message headers that must be encrypted you must return a <xref:System.ServiceModel.Security.ChannelProtectionRequirements> instance with your requirements from this method when asked for <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.","leadings":["","> "],"nodes":[{"content":"If you are adding message headers that must be encrypted you must return a <ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph> instance with your requirements from this method when asked for <ph id=\"ph2\">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph>.","pos":[9,280],"source":" If you are adding message headers that must be encrypted you must return a <xref:System.ServiceModel.Security.ChannelProtectionRequirements> instance with your requirements from this method when asked for <xref:System.ServiceModel.Security.ChannelProtectionRequirements>."}]}],"pos":[23192,23861],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> for the binding element.","nodes":[{"pos":[0,93],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.BindingContext\"&gt;&lt;/xref&gt;</ph> for the binding element.","source":"The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> for the binding element."}],"pos":[24229,24323],"yaml":true},{"content":"The typed object for which the method is querying.","nodes":[{"pos":[0,50],"content":"The typed object for which the method is querying.","nodes":[{"content":"The typed object for which the method is querying.","pos":[0,50]}]}],"pos":[24374,24425],"yaml":true},{"content":"The typed object <code>T</code> requested if it is present or `null` if it is not present.","nodes":[{"pos":[0,90],"content":"The typed object <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> requested if it is present or <ph id=\"ph2\">`null`</ph> if it is not present.","source":"The typed object <code>T</code> requested if it is present or `null` if it is not present."}],"pos":[24470,24561],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.BindingElement\n  commentId: T:System.ServiceModel.Channels.BindingElement\n  id: BindingElement\n  children:\n  - System.ServiceModel.Channels.BindingElement.#ctor\n  - System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)\n  - System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  - System.ServiceModel.Channels.BindingElement.Clone\n  - System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  langs:\n  - csharp\n  name: BindingElement\n  nameWithType: BindingElement\n  fullName: System.ServiceModel.Channels.BindingElement\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: The elements of the bindings that build the channel factories and channel listeners for various types of channels that are used to process outgoing and incoming messages.\n  remarks: \"A binding consists of an ordered set of binding elements that inherit from this abstract base class.  The <xref:System.ServiceModel.Channels.TransportBindingElement> class inherits from the <xref:System.ServiceModel.Channels.BindingElement> class.  \\n  \\n Creating a binding and binding element for your transport is optional if you are just using the channel model. It is possible to do everything you need through the channel factory and listener as long as they are made public.  \\n  \\n The [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service model uses a factory pattern where the binding is used to create the channel stack. If you want to use the [!INCLUDE[indigo2](~/includes/indigo2-md.md)] service model, then using a transport binding element is required. Placing this binding element into a binding is a good practice because it removes the requirement for users to create their own custom binding for your transport. It is best to create both a binding and binding element, and hide the channel factory and listener inside the assembly.  \\n  \\n On the sending side, a binding is used to build a <xref:System.ServiceModel.Channels.IChannelFactory>, which in turn builds a channel stack and returns a reference to the top channel in the stack. The application can then use this channel to send messages.  \\n  \\n Similarly, on the receiving side a binding is used to build a <xref:System.ServiceModel.Channels.IChannelListener>, which listens for incoming messages. The <xref:System.ServiceModel.Channels.IChannelListener> provides messages to the listening application by creating channel stacks and handing the application a reference to the top channel. The application then uses this channel to receive incoming messages.  \\n  \\n> [!NOTE]\\n>  If you are adding message headers that must be encrypted you must return a <xref:System.ServiceModel.Security.ChannelProtectionRequirements> instance with your requirements from the <xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29> method when asked for <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.\"\n  example:\n  - \"The following example shows how to add a transport binding element to a custom binding and then build a channel listener that can accept incoming messages.  \\n  \\n [!code-csharp[S_UEChannels#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#1)]\\n [!code-vb[S_UEChannels#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uechannels/vb/servicesnippets.vb#1)]\"\n  syntax:\n    content: public abstract class BindingElement\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.ServiceModel.Channels.CompositeDuplexBindingElement\n  - System.ServiceModel.Channels.ContextBindingElement\n  - System.ServiceModel.Channels.HttpCookieContainerBindingElement\n  - System.ServiceModel.Channels.MessageEncodingBindingElement\n  - System.ServiceModel.Channels.OneWayBindingElement\n  - System.ServiceModel.Channels.PeerResolverBindingElement\n  - System.ServiceModel.Channels.PrivacyNoticeBindingElement\n  - System.ServiceModel.Channels.ReliableSessionBindingElement\n  - System.ServiceModel.Channels.SecurityBindingElement\n  - System.ServiceModel.Channels.StreamUpgradeBindingElement\n  - System.ServiceModel.Channels.TransactionFlowBindingElement\n  - System.ServiceModel.Channels.TransportBindingElement\n  - System.ServiceModel.Channels.UseManagedPresentationBindingElement\n  - System.ServiceModel.Discovery.DiscoveryClientBindingElement\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.BindingElement.#ctor\n  commentId: M:System.ServiceModel.Channels.BindingElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Channels.BindingElement\n  langs:\n  - csharp\n  name: BindingElement()\n  nameWithType: BindingElement.BindingElement()\n  fullName: BindingElement.BindingElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> class.\n  syntax:\n    content: protected BindingElement ();\n    parameters: []\n  overload: System.ServiceModel.Channels.BindingElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)\n  commentId: M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)\n  id: '#ctor(System.ServiceModel.Channels.BindingElement)'\n  parent: System.ServiceModel.Channels.BindingElement\n  langs:\n  - csharp\n  name: BindingElement(BindingElement)\n  nameWithType: BindingElement.BindingElement(BindingElement)\n  fullName: BindingElement.BindingElement(BindingElement)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> class from a specified binding element.\n  syntax:\n    content: protected BindingElement (System.ServiceModel.Channels.BindingElement elementToBeCloned);\n    parameters:\n    - id: elementToBeCloned\n      type: System.ServiceModel.Channels.BindingElement\n      description: The <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> to be cloned.\n  overload: System.ServiceModel.Channels.BindingElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.BindingElement\n  langs:\n  - csharp\n  name: BuildChannelFactory<TChannel>(BindingContext)\n  nameWithType: BindingElement.BuildChannelFactory<TChannel>(BindingContext)\n  fullName: BindingElement.BuildChannelFactory<TChannel>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a channel factory for producing channels of a specified type from the binding context.\n  remarks: ''\n  example:\n  - '[!code-csharp[S_UEChannels#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#16)]'\n  syntax:\n    content: public virtual System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides context for the binding element.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel the factory builds.\n    return:\n      type: System.ServiceModel.Channels.IChannelFactory`1\n      description: The <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"></xref> of type <code>TChannel</code> initialized from the <code>context</code>.\n  overload: System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  id: BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.BindingElement\n  langs:\n  - csharp\n  name: BuildChannelListener<TChannel>(BindingContext)\n  nameWithType: BindingElement.BuildChannelListener<TChannel>(BindingContext)\n  fullName: BindingElement.BuildChannelListener<TChannel>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a channel listener to accept channels of a specified type from the binding context.\n  remarks: ''\n  example:\n  - '[!code-csharp[S_UEChannels#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#17)]'\n  syntax:\n    content: 'public virtual System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides context for the binding element.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel the listener is built to accept.\n    return:\n      type: System.ServiceModel.Channels.IChannelListener`1\n      description: The <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> initialized from the <code>context</code>.\n  overload: System.ServiceModel.Channels.BindingElement.BuildChannelListener``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  id: CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.BindingElement\n  langs:\n  - csharp\n  name: CanBuildChannelFactory<TChannel>(BindingContext)\n  nameWithType: BindingElement.CanBuildChannelFactory<TChannel>(BindingContext)\n  fullName: BindingElement.CanBuildChannelFactory<TChannel>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns a value that indicates whether the binding element can build a channel factory for a specific type of channel.\n  remarks: Use this method if you want to check that the channel factory for channels of type `TChannel` can be build for the `context` provided before attempting to build the factory. Alternatively, build the channel factory by calling <xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A> and catch the exception generated if it cannot be built.\n  example:\n  - '[!code-csharp[S_UEChannels#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#18)]'\n  syntax:\n    content: public virtual bool CanBuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides context for the binding element.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel the channel factory produces.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\"></xref> of type <code>TChannel</code> can be built by the binding element; otherwise, `false`.'\n  overload: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  id: CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.BindingElement\n  langs:\n  - csharp\n  name: CanBuildChannelListener<TChannel>(BindingContext)\n  nameWithType: BindingElement.CanBuildChannelListener<TChannel>(BindingContext)\n  fullName: BindingElement.CanBuildChannelListener<TChannel>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns a value that indicates whether the binding element can build a listener for a specific type of channel.\n  remarks: Use this method if you want to check that the channel listener for channels of type `TChannel` can be build for the `context` provided before attempting to build the listener. Alternatively, build the channel listener by calling <xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A> and catch the exception generated if it cannot be built.\n  example:\n  - '[!code-csharp[S_UEChannels#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#19)]'\n  syntax:\n    content: 'public virtual bool CanBuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> that provides context for the binding element.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel the listener accepts.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.ServiceModel.Channels.IChannelListener`1\"></xref> of type <xref href=\"System.ServiceModel.Channels.IChannel\"></xref> can be built by the binding element; otherwise, `false`.'\n  overload: System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>context</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.BindingElement.Clone\n  commentId: M:System.ServiceModel.Channels.BindingElement.Clone\n  id: Clone\n  parent: System.ServiceModel.Channels.BindingElement\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: BindingElement.Clone()\n  fullName: BindingElement.Clone()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When overridden in a derived class, returns a copy of the binding element object.\n  remarks: \"Implement the <xref:System.ServiceModel.Channels.BindingElement.Clone%2A> method to return a deep clone of your binding element. Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element. If a clone is not returned, the run-time behavior is undefined.  \\n  \\n A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object. (This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only. If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.\"\n  syntax:\n    content: public abstract System.ServiceModel.Channels.BindingElement Clone ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Channels.BindingElement\n      description: A <xref href=\"System.ServiceModel.Channels.BindingElement\"></xref> object that is a deep clone of the original.\n  overload: System.ServiceModel.Channels.BindingElement.Clone*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  commentId: M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  id: GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.BindingElement\n  langs:\n  - csharp\n  name: GetProperty<T>(BindingContext)\n  nameWithType: BindingElement.GetProperty<T>(BindingContext)\n  fullName: BindingElement.GetProperty<T>(BindingContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When overridden in a derived class, returns a typed object requested, if present, from the appropriate layer in the binding stack.\n  remarks: \"Use this to retrieve capabilities, requirements and parameters from the binding element stack. If a binding element supports returning the requested object, it returns it. If not, it delegates the call down to the next binding element in the stack. If it gets to the bottom of the stack and no binding element supported the requested object, then the method returns `null`.  \\n  \\n> [!NOTE]\\n>  If you are adding message headers that must be encrypted you must return a <xref:System.ServiceModel.Security.ChannelProtectionRequirements> instance with your requirements from this method when asked for <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.\"\n  example:\n  - '[!code-csharp[S_UEChannels#20](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#20)]'\n  syntax:\n    content: 'public abstract T GetProperty<T> (System.ServiceModel.Channels.BindingContext context) where T : class;'\n    parameters:\n    - id: context\n      type: System.ServiceModel.Channels.BindingContext\n      description: The <xref href=\"System.ServiceModel.Channels.BindingContext\"></xref> for the binding element.\n    typeParameters:\n    - id: T\n      description: The typed object for which the method is querying.\n    return:\n      type: T\n      description: The typed object <code>T</code> requested if it is present or `null` if it is not present.\n  overload: System.ServiceModel.Channels.BindingElement.GetProperty``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ServiceModel.Channels.BindingElement.#ctor\n  parent: System.ServiceModel.Channels.BindingElement\n  isExternal: false\n  name: BindingElement()\n  nameWithType: BindingElement.BindingElement()\n  fullName: BindingElement.BindingElement()\n- uid: System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)\n  parent: System.ServiceModel.Channels.BindingElement\n  isExternal: false\n  name: BindingElement(BindingElement)\n  nameWithType: BindingElement.BindingElement(BindingElement)\n  fullName: BindingElement.BindingElement(BindingElement)\n- uid: System.ServiceModel.Channels.BindingElement\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: BindingElement\n  nameWithType: BindingElement\n  fullName: System.ServiceModel.Channels.BindingElement\n- uid: System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.BindingElement\n  isExternal: false\n  name: BuildChannelFactory<TChannel>(BindingContext)\n  nameWithType: BindingElement.BuildChannelFactory<TChannel>(BindingContext)\n  fullName: BindingElement.BuildChannelFactory<TChannel>(BindingContext)\n- uid: System.ServiceModel.Channels.IChannelFactory`1\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IChannelFactory<TChannel>\n  nameWithType: IChannelFactory<TChannel>\n  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>\n- uid: System.ServiceModel.Channels.BindingContext\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: BindingContext\n  nameWithType: BindingContext\n  fullName: System.ServiceModel.Channels.BindingContext\n- uid: System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.BindingElement\n  isExternal: false\n  name: BuildChannelListener<TChannel>(BindingContext)\n  nameWithType: BindingElement.BuildChannelListener<TChannel>(BindingContext)\n  fullName: BindingElement.BuildChannelListener<TChannel>(BindingContext)\n- uid: System.ServiceModel.Channels.IChannelListener`1\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IChannelListener<TChannel>\n  nameWithType: IChannelListener<TChannel>\n  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>\n- uid: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.BindingElement\n  isExternal: false\n  name: CanBuildChannelFactory<TChannel>(BindingContext)\n  nameWithType: BindingElement.CanBuildChannelFactory<TChannel>(BindingContext)\n  fullName: BindingElement.CanBuildChannelFactory<TChannel>(BindingContext)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.BindingElement\n  isExternal: false\n  name: CanBuildChannelListener<TChannel>(BindingContext)\n  nameWithType: BindingElement.CanBuildChannelListener<TChannel>(BindingContext)\n  fullName: BindingElement.CanBuildChannelListener<TChannel>(BindingContext)\n- uid: System.ServiceModel.Channels.BindingElement.Clone\n  parent: System.ServiceModel.Channels.BindingElement\n  isExternal: false\n  name: Clone()\n  nameWithType: BindingElement.Clone()\n  fullName: BindingElement.Clone()\n- uid: System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)\n  parent: System.ServiceModel.Channels.BindingElement\n  isExternal: false\n  name: GetProperty<T>(BindingContext)\n  nameWithType: BindingElement.GetProperty<T>(BindingContext)\n  fullName: BindingElement.GetProperty<T>(BindingContext)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.ServiceModel.Channels.BindingElement.#ctor*\n  parent: System.ServiceModel.Channels.BindingElement\n  isExternal: false\n  name: BindingElement\n  nameWithType: BindingElement.BindingElement\n  fullName: BindingElement.BindingElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml\n- uid: System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1*\n  parent: System.ServiceModel.Channels.BindingElement\n  isExternal: false\n  name: BuildChannelFactory<TChannel>\n  nameWithType: BindingElement.BuildChannelFactory<TChannel>\n  fullName: BindingElement.BuildChannelFactory<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml\n- uid: System.ServiceModel.Channels.BindingElement.BuildChannelListener``1*\n  parent: System.ServiceModel.Channels.BindingElement\n  isExternal: false\n  name: BuildChannelListener<TChannel>\n  nameWithType: BindingElement.BuildChannelListener<TChannel>\n  fullName: BindingElement.BuildChannelListener<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml\n- uid: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1*\n  parent: System.ServiceModel.Channels.BindingElement\n  isExternal: false\n  name: CanBuildChannelFactory<TChannel>\n  nameWithType: BindingElement.CanBuildChannelFactory<TChannel>\n  fullName: BindingElement.CanBuildChannelFactory<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml\n- uid: System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1*\n  parent: System.ServiceModel.Channels.BindingElement\n  isExternal: false\n  name: CanBuildChannelListener<TChannel>\n  nameWithType: BindingElement.CanBuildChannelListener<TChannel>\n  fullName: BindingElement.CanBuildChannelListener<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml\n- uid: System.ServiceModel.Channels.BindingElement.Clone*\n  parent: System.ServiceModel.Channels.BindingElement\n  isExternal: false\n  name: Clone\n  nameWithType: BindingElement.Clone\n  fullName: BindingElement.Clone\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml\n- uid: System.ServiceModel.Channels.BindingElement.GetProperty``1*\n  parent: System.ServiceModel.Channels.BindingElement\n  isExternal: false\n  name: GetProperty<T>\n  nameWithType: BindingElement.GetProperty<T>\n  fullName: BindingElement.GetProperty<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/BindingElement.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}