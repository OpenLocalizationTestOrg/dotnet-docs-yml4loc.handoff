{"nodes":[{"content":"Represents the method that will handle the <xref href=\"System.Web.Profile.ProfileModule.ProfileAutoSaving\"></xref> event of a <xref href=\"System.Web.Profile.ProfileModule\"></xref>.","nodes":[{"pos":[0,180],"content":"Represents the method that will handle the <ph id=\"ph1\">&lt;xref href=\"System.Web.Profile.ProfileModule.ProfileAutoSaving\"&gt;&lt;/xref&gt;</ph> event of a <ph id=\"ph2\">&lt;xref href=\"System.Web.Profile.ProfileModule\"&gt;&lt;/xref&gt;</ph>.","source":"Represents the method that will handle the <xref href=\"System.Web.Profile.ProfileModule.ProfileAutoSaving\"></xref> event of a <xref href=\"System.Web.Profile.ProfileModule\"></xref>."}],"pos":[434,615],"yaml":true},{"content":"The <xref:System.Web.Profile.ProfileAutoSaveEventHandler> delegate is defined for the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event of the <xref:System.Web.Profile.ProfileModule> class. You can access the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event of the <xref:System.Web.Profile.ProfileModule> class in the Global.asax file for your ASP.NET application, as shown in the example for this topic. The <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event is raised at the end of page execution if the <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> property is `true`.  \n  \n The <xref:System.Configuration.SettingsBase.Save%2A> method automatically determines whether properties that are made up of primitive types, strings, or <xref:System.DateTime> objects have been changed, by checking the <xref:System.Configuration.SettingsPropertyValue.IsDirty%2A> property value for each <xref:System.Configuration.SettingsPropertyValue> in the user profile. However, the <xref:System.Configuration.SettingsBase.Save%2A> method cannot explicitly determine whether a custom class has changed. You can handle the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event to determine whether a custom object has been modified and to continue with the automatic save for modified objects and cancel the automatic save if no objects have been modified.  \n  \n To cancel the automatic profile save operation, set the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property to `false` in the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event; otherwise, set the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property to `true`.  \n  \n There may be multiple subscribers to the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event. The <xref:System.Web.Profile.ProfileModule> will use the last value that the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property is set to. As a result, it is recommended that you explicitly set the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property in the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event, regardless of whether you are canceling or continuing with the automatic save, as you may need to overwrite the value set by an earlier subscriber.","nodes":[{"pos":[0,632],"content":"The <xref:System.Web.Profile.ProfileAutoSaveEventHandler> delegate is defined for the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event of the <xref:System.Web.Profile.ProfileModule> class. You can access the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event of the <xref:System.Web.Profile.ProfileModule> class in the Global.asax file for your ASP.NET application, as shown in the example for this topic. The <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event is raised at the end of page execution if the <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> property is `true`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Profile.ProfileAutoSaveEventHandler&gt;</ph> delegate is defined for the <ph id=\"ph2\">&lt;xref:System.Web.Profile.ProfileModule.ProfileAutoSaving&gt;</ph> event of the <ph id=\"ph3\">&lt;xref:System.Web.Profile.ProfileModule&gt;</ph> class.","pos":[0,203],"source":"The <xref:System.Web.Profile.ProfileAutoSaveEventHandler> delegate is defined for the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event of the <xref:System.Web.Profile.ProfileModule> class."},{"content":"You can access the <ph id=\"ph1\">&lt;xref:System.Web.Profile.ProfileModule.ProfileAutoSaving&gt;</ph> event of the <ph id=\"ph2\">&lt;xref:System.Web.Profile.ProfileModule&gt;</ph> class in the Global.asax file for your ASP.NET application, as shown in the example for this topic.","pos":[204,433],"source":" You can access the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event of the <xref:System.Web.Profile.ProfileModule> class in the Global.asax file for your ASP.NET application, as shown in the example for this topic."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Profile.ProfileModule.ProfileAutoSaving&gt;</ph> event is raised at the end of page execution if the <ph id=\"ph2\">&lt;xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A&gt;</ph> property is <ph id=\"ph3\">`true`</ph>.","pos":[434,632],"source":" The <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event is raised at the end of page execution if the <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> property is `true`."}]},{"pos":[639,1409],"content":"The <xref:System.Configuration.SettingsBase.Save%2A> method automatically determines whether properties that are made up of primitive types, strings, or <xref:System.DateTime> objects have been changed, by checking the <xref:System.Configuration.SettingsPropertyValue.IsDirty%2A> property value for each <xref:System.Configuration.SettingsPropertyValue> in the user profile. However, the <xref:System.Configuration.SettingsBase.Save%2A> method cannot explicitly determine whether a custom class has changed. You can handle the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event to determine whether a custom object has been modified and to continue with the automatic save for modified objects and cancel the automatic save if no objects have been modified.","nodes":[{"content":"The <xref:System.Configuration.SettingsBase.Save%2A> method automatically determines whether properties that are made up of primitive types, strings, or <xref:System.DateTime> objects have been changed, by checking the <xref:System.Configuration.SettingsPropertyValue.IsDirty%2A> property value for each <xref:System.Configuration.SettingsPropertyValue> in the user profile. However, the <xref:System.Configuration.SettingsBase.Save%2A> method cannot explicitly determine whether a custom class has changed. You can handle the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event to determine whether a custom object has been modified and to continue with the automatic save for modified objects and cancel the automatic save if no objects have been modified.","pos":[0,770],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.SettingsBase.Save%2A&gt;</ph> method automatically determines whether properties that are made up of primitive types, strings, or <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> objects have been changed, by checking the <ph id=\"ph3\">&lt;xref:System.Configuration.SettingsPropertyValue.IsDirty%2A&gt;</ph> property value for each <ph id=\"ph4\">&lt;xref:System.Configuration.SettingsPropertyValue&gt;</ph> in the user profile.","pos":[0,374],"source":"The <xref:System.Configuration.SettingsBase.Save%2A> method automatically determines whether properties that are made up of primitive types, strings, or <xref:System.DateTime> objects have been changed, by checking the <xref:System.Configuration.SettingsPropertyValue.IsDirty%2A> property value for each <xref:System.Configuration.SettingsPropertyValue> in the user profile."},{"content":"However, the <ph id=\"ph1\">&lt;xref:System.Configuration.SettingsBase.Save%2A&gt;</ph> method cannot explicitly determine whether a custom class has changed.","pos":[375,507],"source":" However, the <xref:System.Configuration.SettingsBase.Save%2A> method cannot explicitly determine whether a custom class has changed."},{"content":"You can handle the <ph id=\"ph1\">&lt;xref:System.Web.Profile.ProfileModule.ProfileAutoSaving&gt;</ph> event to determine whether a custom object has been modified and to continue with the automatic save for modified objects and cancel the automatic save if no objects have been modified.","pos":[508,770],"source":" You can handle the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event to determine whether a custom object has been modified and to continue with the automatic save for modified objects and cancel the automatic save if no objects have been modified."}]}]},{"pos":[1416,1766],"content":"To cancel the automatic profile save operation, set the <ph id=\"ph1\">&lt;xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A&gt;</ph> property to <ph id=\"ph2\">`false`</ph> in the <ph id=\"ph3\">&lt;xref:System.Web.Profile.ProfileModule.ProfileAutoSaving&gt;</ph> event; otherwise, set the <ph id=\"ph4\">&lt;xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A&gt;</ph> property to <ph id=\"ph5\">`true`</ph>.","source":"To cancel the automatic profile save operation, set the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property to `false` in the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event; otherwise, set the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property to `true`."},{"pos":[1773,2427],"content":"There may be multiple subscribers to the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event. The <xref:System.Web.Profile.ProfileModule> will use the last value that the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property is set to. As a result, it is recommended that you explicitly set the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property in the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event, regardless of whether you are canceling or continuing with the automatic save, as you may need to overwrite the value set by an earlier subscriber.","nodes":[{"content":"There may be multiple subscribers to the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event. The <xref:System.Web.Profile.ProfileModule> will use the last value that the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property is set to. As a result, it is recommended that you explicitly set the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property in the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event, regardless of whether you are canceling or continuing with the automatic save, as you may need to overwrite the value set by an earlier subscriber.","pos":[0,654],"nodes":[{"content":"There may be multiple subscribers to the <ph id=\"ph1\">&lt;xref:System.Web.Profile.ProfileModule.ProfileAutoSaving&gt;</ph> event.","pos":[0,105],"source":"There may be multiple subscribers to the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Profile.ProfileModule&gt;</ph> will use the last value that the <ph id=\"ph2\">&lt;xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A&gt;</ph> property is set to.","pos":[106,284],"source":" The <xref:System.Web.Profile.ProfileModule> will use the last value that the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property is set to."},{"content":"As a result, it is recommended that you explicitly set the <ph id=\"ph1\">&lt;xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A&gt;</ph> property in the <ph id=\"ph2\">&lt;xref:System.Web.Profile.ProfileModule.ProfileAutoSaving&gt;</ph> event, regardless of whether you are canceling or continuing with the automatic save, as you may need to overwrite the value set by an earlier subscriber.","pos":[285,654],"source":" As a result, it is recommended that you explicitly set the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property in the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event, regardless of whether you are canceling or continuing with the automatic save, as you may need to overwrite the value set by an earlier subscriber."}]}]}],"pos":[626,3062],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Profile.ProfileAutoSaveEventHandler\n  commentId: T:System.Web.Profile.ProfileAutoSaveEventHandler\n  id: ProfileAutoSaveEventHandler\n  langs:\n  - csharp\n  name: ProfileAutoSaveEventHandler\n  nameWithType: ProfileAutoSaveEventHandler\n  fullName: System.Web.Profile.ProfileAutoSaveEventHandler\n  type: Delegate\n  assemblies:\n  - System.Web\n  namespace: System.Web.Profile\n  summary: Represents the method that will handle the <xref href=\"System.Web.Profile.ProfileModule.ProfileAutoSaving\"></xref> event of a <xref href=\"System.Web.Profile.ProfileModule\"></xref>.\n  remarks: \"The <xref:System.Web.Profile.ProfileAutoSaveEventHandler> delegate is defined for the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event of the <xref:System.Web.Profile.ProfileModule> class. You can access the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event of the <xref:System.Web.Profile.ProfileModule> class in the Global.asax file for your ASP.NET application, as shown in the example for this topic. The <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event is raised at the end of page execution if the <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> property is `true`.  \\n  \\n The <xref:System.Configuration.SettingsBase.Save%2A> method automatically determines whether properties that are made up of primitive types, strings, or <xref:System.DateTime> objects have been changed, by checking the <xref:System.Configuration.SettingsPropertyValue.IsDirty%2A> property value for each <xref:System.Configuration.SettingsPropertyValue> in the user profile. However, the <xref:System.Configuration.SettingsBase.Save%2A> method cannot explicitly determine whether a custom class has changed. You can handle the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event to determine whether a custom object has been modified and to continue with the automatic save for modified objects and cancel the automatic save if no objects have been modified.  \\n  \\n To cancel the automatic profile save operation, set the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property to `false` in the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event; otherwise, set the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property to `true`.  \\n  \\n There may be multiple subscribers to the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event. The <xref:System.Web.Profile.ProfileModule> will use the last value that the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property is set to. As a result, it is recommended that you explicitly set the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property in the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event, regardless of whether you are canceling or continuing with the automatic save, as you may need to overwrite the value set by an earlier subscriber.\"\n  example:\n  - \"The following code example shows the <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event included in the Global.asax file for an ASP.NET application.  \\n  \\n [!code-csharp[System.Web.Profile.ProfileManager.ProfileAutoSaving#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager.ProfileAutoSaving/CS/global.asax#11)]\\n [!code-vb[System.Web.Profile.ProfileManager.ProfileAutoSaving#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager.ProfileAutoSaving/VB/global.asax#11)]\"\n  syntax:\n    content: public delegate void ProfileAutoSaveEventHandler(object sender, ProfileAutoSaveEventArgs e);\n  inheritance:\n  - System.Object\n  - System.Delegate\n  extensionMethods:\n  - System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Profile/ProfileAutoSaveEventHandler.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  parent: System.Reflection.RuntimeReflectionExtensions\n  isExternal: false\n  name: GetMethodInfo(Delegate)\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n  fullName: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n"}