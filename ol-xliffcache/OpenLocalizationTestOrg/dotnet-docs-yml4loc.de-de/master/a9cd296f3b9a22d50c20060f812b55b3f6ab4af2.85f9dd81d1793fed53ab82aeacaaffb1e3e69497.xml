{"nodes":[{"content":"An XML element that defines the security settings for a TcpTransport binding. This class cannot be inherited.","nodes":[{"pos":[0,109],"content":"An XML element that defines the security settings for a TcpTransport binding. This class cannot be inherited.","nodes":[{"content":"An XML element that defines the security settings for a TcpTransport binding. This class cannot be inherited.","pos":[0,109],"nodes":[{"content":"An XML element that defines the security settings for a TcpTransport binding.","pos":[0,77]},{"content":"This class cannot be inherited.","pos":[78,109]}]}]}],"pos":[1000,1110],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.TcpTransportSecurityElement\"></xref> class.","nodes":[{"pos":[0,123],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Configuration.TcpTransportSecurityElement\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.TcpTransportSecurityElement\"></xref> class."}],"pos":[5585,5709],"yaml":true},{"content":"Gets and sets the type of client credential used for authentication.","nodes":[{"pos":[0,68],"content":"Gets and sets the type of client credential used for authentication.","nodes":[{"content":"Gets and sets the type of client credential used for authentication.","pos":[0,68]}]}],"pos":[7020,7089],"yaml":true},{"content":"A <xref href=\"System.ServiceModel.TcpClientCredentialType\"></xref> that specifies the type of client credential used for authentication.","nodes":[{"pos":[0,136],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.TcpClientCredentialType\"&gt;&lt;/xref&gt;</ph> that specifies the type of client credential used for authentication.","source":"A <xref href=\"System.ServiceModel.TcpClientCredentialType\"></xref> that specifies the type of client credential used for authentication."}],"pos":[7419,7556],"yaml":true},{"content":"Get a <xref href=\"System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement\"></xref> instance which contains the configuration settings to use for extended protection for a session.","nodes":[{"pos":[0,219],"content":"Get a <ph id=\"ph1\">&lt;xref href=\"System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement\"&gt;&lt;/xref&gt;</ph> instance which contains the configuration settings to use for extended protection for a session.","source":"Get a <xref href=\"System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement\"></xref> instance which contains the configuration settings to use for extended protection for a session."}],"pos":[8901,9121],"yaml":true},{"content":"Returns <xref href=\"System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement\"></xref>.","nodes":[{"pos":[0,125],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement\"></xref>."}],"pos":[9509,9635],"yaml":true},{"content":"Gets or sets a value that defines message level security at the level of the named pipe.","nodes":[{"pos":[0,88],"content":"Gets or sets a value that defines message level security at the level of the named pipe.","nodes":[{"content":"Gets or sets a value that defines message level security at the level of the named pipe.","pos":[0,88]}]}],"pos":[12216,12305],"yaml":true},{"content":"Signing messages mitigates the risk of a third party tampering with the message while it is being transferred. Encryption provides data-level privacy during transport.","nodes":[{"pos":[0,167],"content":"Signing messages mitigates the risk of a third party tampering with the message while it is being transferred. Encryption provides data-level privacy during transport.","nodes":[{"content":"Signing messages mitigates the risk of a third party tampering with the message while it is being transferred. Encryption provides data-level privacy during transport.","pos":[0,167],"nodes":[{"content":"Signing messages mitigates the risk of a third party tampering with the message while it is being transferred.","pos":[0,110]},{"content":"Encryption provides data-level privacy during transport.","pos":[111,167]}]}]}],"pos":[12316,12484],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.ServiceModel.TcpTransportSecurity.ProtectionLevel\"></xref> value that defines message level security at the level of the named pipe.","nodes":[{"pos":[0,153],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.TcpTransportSecurity.ProtectionLevel\"&gt;&lt;/xref&gt;</ph> value that defines message level security at the level of the named pipe.","source":"A <xref href=\"System.ServiceModel.TcpTransportSecurity.ProtectionLevel\"></xref> value that defines message level security at the level of the named pipe."}],"pos":[12788,12942],"yaml":true},{"content":"Gets the list of SSL/TLS protocols to negotiate when using a client credential type of TcpClientCredentialType.Certificate. The value can be a combination of one of more of the following enumeration members: Ssl3, Tls, Tls11, Tls12.","nodes":[{"pos":[0,232],"content":"Gets the list of SSL/TLS protocols to negotiate when using a client credential type of TcpClientCredentialType.Certificate. The value can be a combination of one of more of the following enumeration members: Ssl3, Tls, Tls11, Tls12.","nodes":[{"content":"Gets the list of SSL/TLS protocols to negotiate when using a client credential type of TcpClientCredentialType.Certificate. The value can be a combination of one of more of the following enumeration members: Ssl3, Tls, Tls11, Tls12.","pos":[0,232],"nodes":[{"content":"Gets the list of SSL/TLS protocols to negotiate when using a client credential type of TcpClientCredentialType.Certificate.","pos":[0,123]},{"content":"The value can be a combination of one of more of the following enumeration members: Ssl3, Tls, Tls11, Tls12.","pos":[124,232]}]}]}],"pos":[14210,14445],"yaml":true},{"content":"The default value is Ssl3 &#124; Tls &#124; Tls11 &#124; Tls12. Versions of the framework prior to 4.6 only support Ssl3 and Tls. If these are not included, communication with earlier versions of the framework will not be possible. Specifying Tls11 and/or Tls12 will disable the usage of Ssl3, even if it has been included.","nodes":[{"pos":[0,323],"content":"The default value is Ssl3 &#124; Tls &#124; Tls11 &#124; Tls12. Versions of the framework prior to 4.6 only support Ssl3 and Tls. If these are not included, communication with earlier versions of the framework will not be possible. Specifying Tls11 and/or Tls12 will disable the usage of Ssl3, even if it has been included.","nodes":[{"content":"The default value is Ssl3 &#124; Tls &#124; Tls11 &#124; Tls12. Versions of the framework prior to 4.6 only support Ssl3 and Tls. If these are not included, communication with earlier versions of the framework will not be possible. Specifying Tls11 and/or Tls12 will disable the usage of Ssl3, even if it has been included.","pos":[0,323],"nodes":[{"content":"The default value is Ssl3 &amp;#124; Tls &amp;#124; Tls11 &amp;#124; Tls12.","pos":[0,63],"source":"The default value is Ssl3 &#124; Tls &#124; Tls11 &#124; Tls12."},{"content":"Versions of the framework prior to 4.6 only support Ssl3 and Tls.","pos":[64,129]},{"content":"If these are not included, communication with earlier versions of the framework will not be possible.","pos":[130,231]},{"content":"Specifying Tls11 and/or Tls12 will disable the usage of Ssl3, even if it has been included.","pos":[232,323]}]}]}],"pos":[14456,14780],"yaml":true,"extradata":"MT"},{"content":"The list of SSL/TLS protocols.","nodes":[{"pos":[0,30],"content":"The list of SSL/TLS protocols.","nodes":[{"content":"The list of SSL/TLS protocols.","pos":[0,30]}]}],"pos":[15089,15120],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.TcpTransportSecurityElement\n  commentId: T:System.ServiceModel.Configuration.TcpTransportSecurityElement\n  id: TcpTransportSecurityElement\n  children:\n  - System.ServiceModel.Configuration.TcpTransportSecurityElement.#ctor\n  - System.ServiceModel.Configuration.TcpTransportSecurityElement.ClientCredentialType\n  - System.ServiceModel.Configuration.TcpTransportSecurityElement.ExtendedProtectionPolicy\n  - System.ServiceModel.Configuration.TcpTransportSecurityElement.Properties\n  - System.ServiceModel.Configuration.TcpTransportSecurityElement.ProtectionLevel\n  - System.ServiceModel.Configuration.TcpTransportSecurityElement.SslProtocols\n  langs:\n  - csharp\n  name: TcpTransportSecurityElement\n  nameWithType: TcpTransportSecurityElement\n  fullName: System.ServiceModel.Configuration.TcpTransportSecurityElement\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: An XML element that defines the security settings for a TcpTransport binding. This class cannot be inherited.\n  syntax:\n    content: 'public sealed class TcpTransportSecurityElement : System.ServiceModel.Configuration.ServiceModelConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportSecurityElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.TcpTransportSecurityElement.#ctor\n  commentId: M:System.ServiceModel.Configuration.TcpTransportSecurityElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.TcpTransportSecurityElement\n  langs:\n  - csharp\n  name: TcpTransportSecurityElement()\n  nameWithType: TcpTransportSecurityElement.TcpTransportSecurityElement()\n  fullName: TcpTransportSecurityElement.TcpTransportSecurityElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.TcpTransportSecurityElement\"></xref> class.\n  syntax:\n    content: public TcpTransportSecurityElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.TcpTransportSecurityElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportSecurityElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.TcpTransportSecurityElement.ClientCredentialType\n  commentId: P:System.ServiceModel.Configuration.TcpTransportSecurityElement.ClientCredentialType\n  id: ClientCredentialType\n  parent: System.ServiceModel.Configuration.TcpTransportSecurityElement\n  langs:\n  - csharp\n  name: ClientCredentialType\n  nameWithType: TcpTransportSecurityElement.ClientCredentialType\n  fullName: TcpTransportSecurityElement.ClientCredentialType\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets and sets the type of client credential used for authentication.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"clientCredentialType\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public System.ServiceModel.TcpClientCredentialType ClientCredentialType { get; set; }\n    return:\n      type: System.ServiceModel.TcpClientCredentialType\n      description: A <xref href=\"System.ServiceModel.TcpClientCredentialType\"></xref> that specifies the type of client credential used for authentication.\n  overload: System.ServiceModel.Configuration.TcpTransportSecurityElement.ClientCredentialType*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportSecurityElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.TcpTransportSecurityElement.ExtendedProtectionPolicy\n  commentId: P:System.ServiceModel.Configuration.TcpTransportSecurityElement.ExtendedProtectionPolicy\n  id: ExtendedProtectionPolicy\n  parent: System.ServiceModel.Configuration.TcpTransportSecurityElement\n  langs:\n  - csharp\n  name: ExtendedProtectionPolicy\n  nameWithType: TcpTransportSecurityElement.ExtendedProtectionPolicy\n  fullName: TcpTransportSecurityElement.ExtendedProtectionPolicy\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Get a <xref href=\"System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement\"></xref> instance which contains the configuration settings to use for extended protection for a session.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"extendedProtectionPolicy\")]\n\n      public System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement ExtendedProtectionPolicy { get; }\n    return:\n      type: System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement\n      description: Returns <xref href=\"System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement\"></xref>.\n  overload: System.ServiceModel.Configuration.TcpTransportSecurityElement.ExtendedProtectionPolicy*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportSecurityElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.TcpTransportSecurityElement.Properties\n  commentId: P:System.ServiceModel.Configuration.TcpTransportSecurityElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.TcpTransportSecurityElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: TcpTransportSecurityElement.Properties\n  fullName: TcpTransportSecurityElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: ''\n  overload: System.ServiceModel.Configuration.TcpTransportSecurityElement.Properties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportSecurityElement.xml\n- uid: System.ServiceModel.Configuration.TcpTransportSecurityElement.ProtectionLevel\n  commentId: P:System.ServiceModel.Configuration.TcpTransportSecurityElement.ProtectionLevel\n  id: ProtectionLevel\n  parent: System.ServiceModel.Configuration.TcpTransportSecurityElement\n  langs:\n  - csharp\n  name: ProtectionLevel\n  nameWithType: TcpTransportSecurityElement.ProtectionLevel\n  fullName: TcpTransportSecurityElement.ProtectionLevel\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that defines message level security at the level of the named pipe.\n  remarks: Signing messages mitigates the risk of a third party tampering with the message while it is being transferred. Encryption provides data-level privacy during transport.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"protectionLevel\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }\n    return:\n      type: System.Net.Security.ProtectionLevel\n      description: A <xref href=\"System.ServiceModel.TcpTransportSecurity.ProtectionLevel\"></xref> value that defines message level security at the level of the named pipe.\n  overload: System.ServiceModel.Configuration.TcpTransportSecurityElement.ProtectionLevel*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportSecurityElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.TcpTransportSecurityElement.SslProtocols\n  commentId: P:System.ServiceModel.Configuration.TcpTransportSecurityElement.SslProtocols\n  id: SslProtocols\n  parent: System.ServiceModel.Configuration.TcpTransportSecurityElement\n  langs:\n  - csharp\n  name: SslProtocols\n  nameWithType: TcpTransportSecurityElement.SslProtocols\n  fullName: TcpTransportSecurityElement.SslProtocols\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: 'Gets the list of SSL/TLS protocols to negotiate when using a client credential type of TcpClientCredentialType.Certificate. The value can be a combination of one of more of the following enumeration members: Ssl3, Tls, Tls11, Tls12.'\n  remarks: The default value is Ssl3 &#124; Tls &#124; Tls11 &#124; Tls12. Versions of the framework prior to 4.6 only support Ssl3 and Tls. If these are not included, communication with earlier versions of the framework will not be possible. Specifying Tls11 and/or Tls12 will disable the usage of Ssl3, even if it has been included.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"sslProtocols\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public System.Security.Authentication.SslProtocols SslProtocols { get; }\n    return:\n      type: System.Security.Authentication.SslProtocols\n      description: The list of SSL/TLS protocols.\n  overload: System.ServiceModel.Configuration.TcpTransportSecurityElement.SslProtocols*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportSecurityElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: ServiceModelConfigurationElement\n  nameWithType: ServiceModelConfigurationElement\n  fullName: System.ServiceModel.Configuration.ServiceModelConfigurationElement\n- uid: System.ServiceModel.Configuration.TcpTransportSecurityElement.#ctor\n  parent: System.ServiceModel.Configuration.TcpTransportSecurityElement\n  isExternal: false\n  name: TcpTransportSecurityElement()\n  nameWithType: TcpTransportSecurityElement.TcpTransportSecurityElement()\n  fullName: TcpTransportSecurityElement.TcpTransportSecurityElement()\n- uid: System.ServiceModel.Configuration.TcpTransportSecurityElement.ClientCredentialType\n  parent: System.ServiceModel.Configuration.TcpTransportSecurityElement\n  isExternal: false\n  name: ClientCredentialType\n  nameWithType: TcpTransportSecurityElement.ClientCredentialType\n  fullName: TcpTransportSecurityElement.ClientCredentialType\n- uid: System.ServiceModel.TcpClientCredentialType\n  parent: System.ServiceModel\n  isExternal: false\n  name: TcpClientCredentialType\n  nameWithType: TcpClientCredentialType\n  fullName: System.ServiceModel.TcpClientCredentialType\n- uid: System.ServiceModel.Configuration.TcpTransportSecurityElement.ExtendedProtectionPolicy\n  parent: System.ServiceModel.Configuration.TcpTransportSecurityElement\n  isExternal: false\n  name: ExtendedProtectionPolicy\n  nameWithType: TcpTransportSecurityElement.ExtendedProtectionPolicy\n  fullName: TcpTransportSecurityElement.ExtendedProtectionPolicy\n- uid: System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement\n  parent: System.Security.Authentication.ExtendedProtection.Configuration\n  isExternal: false\n  name: ExtendedProtectionPolicyElement\n  nameWithType: ExtendedProtectionPolicyElement\n  fullName: System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement\n- uid: System.ServiceModel.Configuration.TcpTransportSecurityElement.Properties\n  parent: System.ServiceModel.Configuration.TcpTransportSecurityElement\n  isExternal: false\n  name: Properties\n  nameWithType: TcpTransportSecurityElement.Properties\n  fullName: TcpTransportSecurityElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.TcpTransportSecurityElement.ProtectionLevel\n  parent: System.ServiceModel.Configuration.TcpTransportSecurityElement\n  isExternal: false\n  name: ProtectionLevel\n  nameWithType: TcpTransportSecurityElement.ProtectionLevel\n  fullName: TcpTransportSecurityElement.ProtectionLevel\n- uid: System.Net.Security.ProtectionLevel\n  parent: System.Net.Security\n  isExternal: false\n  name: ProtectionLevel\n  nameWithType: ProtectionLevel\n  fullName: System.Net.Security.ProtectionLevel\n- uid: System.ServiceModel.Configuration.TcpTransportSecurityElement.SslProtocols\n  parent: System.ServiceModel.Configuration.TcpTransportSecurityElement\n  isExternal: false\n  name: SslProtocols\n  nameWithType: TcpTransportSecurityElement.SslProtocols\n  fullName: TcpTransportSecurityElement.SslProtocols\n- uid: System.Security.Authentication.SslProtocols\n  parent: System.Security.Authentication\n  isExternal: false\n  name: SslProtocols\n  nameWithType: SslProtocols\n  fullName: System.Security.Authentication.SslProtocols\n- uid: System.ServiceModel.Configuration.TcpTransportSecurityElement.#ctor*\n  parent: System.ServiceModel.Configuration.TcpTransportSecurityElement\n  isExternal: false\n  name: TcpTransportSecurityElement\n  nameWithType: TcpTransportSecurityElement.TcpTransportSecurityElement\n  fullName: TcpTransportSecurityElement.TcpTransportSecurityElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportSecurityElement.xml\n- uid: System.ServiceModel.Configuration.TcpTransportSecurityElement.ClientCredentialType*\n  parent: System.ServiceModel.Configuration.TcpTransportSecurityElement\n  isExternal: false\n  name: ClientCredentialType\n  nameWithType: TcpTransportSecurityElement.ClientCredentialType\n  fullName: TcpTransportSecurityElement.ClientCredentialType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportSecurityElement.xml\n- uid: System.ServiceModel.Configuration.TcpTransportSecurityElement.ExtendedProtectionPolicy*\n  parent: System.ServiceModel.Configuration.TcpTransportSecurityElement\n  isExternal: false\n  name: ExtendedProtectionPolicy\n  nameWithType: TcpTransportSecurityElement.ExtendedProtectionPolicy\n  fullName: TcpTransportSecurityElement.ExtendedProtectionPolicy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportSecurityElement.xml\n- uid: System.ServiceModel.Configuration.TcpTransportSecurityElement.Properties*\n  parent: System.ServiceModel.Configuration.TcpTransportSecurityElement\n  isExternal: false\n  name: Properties\n  nameWithType: TcpTransportSecurityElement.Properties\n  fullName: TcpTransportSecurityElement.Properties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportSecurityElement.xml\n- uid: System.ServiceModel.Configuration.TcpTransportSecurityElement.ProtectionLevel*\n  parent: System.ServiceModel.Configuration.TcpTransportSecurityElement\n  isExternal: false\n  name: ProtectionLevel\n  nameWithType: TcpTransportSecurityElement.ProtectionLevel\n  fullName: TcpTransportSecurityElement.ProtectionLevel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportSecurityElement.xml\n- uid: System.ServiceModel.Configuration.TcpTransportSecurityElement.SslProtocols*\n  parent: System.ServiceModel.Configuration.TcpTransportSecurityElement\n  isExternal: false\n  name: SslProtocols\n  nameWithType: TcpTransportSecurityElement.SslProtocols\n  fullName: TcpTransportSecurityElement.SslProtocols\n  monikers:\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/TcpTransportSecurityElement.xml\n- uid: System.Configuration.ConfigurationElement.Equals(System.Object)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ConfigurationElement.Equals(Object)\n  fullName: ConfigurationElement.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Configuration.ConfigurationElement.GetHashCode\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ConfigurationElement.GetHashCode()\n  fullName: ConfigurationElement.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.ConfigurationElement.CurrentConfiguration\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: CurrentConfiguration\n  nameWithType: ConfigurationElement.CurrentConfiguration\n  fullName: ConfigurationElement.CurrentConfiguration\n- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: DeserializeElement(XmlReader, Boolean)\n  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n  fullName: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n- uid: System.Configuration.ConfigurationElement.ElementInformation\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementInformation\n  nameWithType: ConfigurationElement.ElementInformation\n  fullName: ConfigurationElement.ElementInformation\n- uid: System.Configuration.ConfigurationElement.ElementProperty\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementProperty\n  nameWithType: ConfigurationElement.ElementProperty\n  fullName: ConfigurationElement.ElementProperty\n- uid: System.Configuration.ConfigurationElement.EvaluationContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: EvaluationContext\n  nameWithType: ConfigurationElement.EvaluationContext\n  fullName: ConfigurationElement.EvaluationContext\n- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedAssemblyString(String)\n  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)\n  fullName: ConfigurationElement.GetTransformedAssemblyString(String)\n- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedTypeString(String)\n  nameWithType: ConfigurationElement.GetTransformedTypeString(String)\n  fullName: ConfigurationElement.GetTransformedTypeString(String)\n- uid: System.Configuration.ConfigurationElement.HasContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: HasContext\n  nameWithType: ConfigurationElement.HasContext\n  fullName: ConfigurationElement.HasContext\n- uid: System.Configuration.ConfigurationElement.Init\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Init()\n  nameWithType: ConfigurationElement.Init()\n  fullName: ConfigurationElement.Init()\n- uid: System.Configuration.ConfigurationElement.InitializeDefault\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: InitializeDefault()\n  nameWithType: ConfigurationElement.InitializeDefault()\n  fullName: ConfigurationElement.InitializeDefault()\n- uid: System.Configuration.ConfigurationElement.IsModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsModified()\n  nameWithType: ConfigurationElement.IsModified()\n  fullName: ConfigurationElement.IsModified()\n- uid: System.Configuration.ConfigurationElement.IsReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsReadOnly()\n  nameWithType: ConfigurationElement.IsReadOnly()\n  fullName: ConfigurationElement.IsReadOnly()\n- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(ConfigurationProperty)\n  nameWithType: ConfigurationElement.Item(ConfigurationProperty)\n  fullName: ConfigurationElement.Item(ConfigurationProperty)\n- uid: System.Configuration.ConfigurationElement.Item(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(String)\n  nameWithType: ConfigurationElement.Item(String)\n  fullName: ConfigurationElement.Item(String)\n- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ListErrors(IList)\n  nameWithType: ConfigurationElement.ListErrors(IList)\n  fullName: ConfigurationElement.ListErrors(IList)\n- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllAttributesExcept\n  nameWithType: ConfigurationElement.LockAllAttributesExcept\n  fullName: ConfigurationElement.LockAllAttributesExcept\n- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllElementsExcept\n  nameWithType: ConfigurationElement.LockAllElementsExcept\n  fullName: ConfigurationElement.LockAllElementsExcept\n- uid: System.Configuration.ConfigurationElement.LockAttributes\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAttributes\n  nameWithType: ConfigurationElement.LockAttributes\n  fullName: ConfigurationElement.LockAttributes\n- uid: System.Configuration.ConfigurationElement.LockElements\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockElements\n  nameWithType: ConfigurationElement.LockElements\n  fullName: ConfigurationElement.LockElements\n- uid: System.Configuration.ConfigurationElement.LockItem\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockItem\n  nameWithType: ConfigurationElement.LockItem\n  fullName: ConfigurationElement.LockItem\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedAttribute(String, String)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedElement(String, XmlReader)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnRequiredPropertyNotFound(String)\n  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)\n  fullName: ConfigurationElement.OnRequiredPropertyNotFound(String)\n- uid: System.Configuration.ConfigurationElement.PostDeserialize\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PostDeserialize()\n  nameWithType: ConfigurationElement.PostDeserialize()\n  fullName: ConfigurationElement.PostDeserialize()\n- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PreSerialize(XmlWriter)\n  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)\n  fullName: ConfigurationElement.PreSerialize(XmlWriter)\n- uid: System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: ConfigurationElement.Reset(ConfigurationElement)\n  fullName: ConfigurationElement.Reset(ConfigurationElement)\n- uid: System.Configuration.ConfigurationElement.ResetModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ResetModified()\n  nameWithType: ConfigurationElement.ResetModified()\n  fullName: ConfigurationElement.ResetModified()\n- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeElement(XmlWriter, Boolean)\n  nameWithType: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n  fullName: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeToXmlElement(XmlWriter, String)\n  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n  fullName: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  fullName: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n- uid: System.Configuration.ConfigurationElement.SetReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetReadOnly()\n  nameWithType: ConfigurationElement.SetReadOnly()\n  fullName: ConfigurationElement.SetReadOnly()\n- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  fullName: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n- uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)\n  parent: System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  isExternal: false\n  name: SetPropertyValueIfNotDefaultValue<T>(String, T)\n  nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)\n  fullName: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)\n"}