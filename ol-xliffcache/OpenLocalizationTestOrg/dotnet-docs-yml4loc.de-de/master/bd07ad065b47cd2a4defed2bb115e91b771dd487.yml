### YamlMime:ManagedReference
items:
- uid: System.AddIn.Contract.Collections.IListContract`1
  commentId: T:System.AddIn.Contract.Collections.IListContract`1
  id: IListContract`1
  children:
  - System.AddIn.Contract.Collections.IListContract`1.GetItem(System.Int32)
  - System.AddIn.Contract.Collections.IListContract`1.IndexOf(`0)
  - System.AddIn.Contract.Collections.IListContract`1.Insert(System.Int32,`0)
  - System.AddIn.Contract.Collections.IListContract`1.RemoveAt(System.Int32)
  - System.AddIn.Contract.Collections.IListContract`1.SetItem(System.Int32,`0)
  langs:
  - csharp
  name: IListContract<C>
  nameWithType: IListContract<C>
  fullName: System.AddIn.Contract.Collections.IListContract<C>
  type: Interface
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: Represents a generic collection of <xref href="System.AddIn.Contract.IContract"></xref> objects that can be individually accessed by index.
  syntax:
    content: 'public interface IListContract<C> : System.AddIn.Contract.Collections.ICollectionContract<C>, System.AddIn.Contract.Collections.IEnumerableContract<C> where C : IContract'
    typeParameters:
    - id: C
      description: The type of objects in the list. <code>C</code> must implement the <xref href="System.AddIn.Contract.IContract"></xref> interface.
  implements:
  - System.AddIn.Contract.Collections.ICollectionContract{C}
  - System.AddIn.Contract.Collections.IEnumerableContract{C}
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IListContract`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AddIn.Contract.Collections.IListContract`1.GetItem(System.Int32)
  commentId: M:System.AddIn.Contract.Collections.IListContract`1.GetItem(System.Int32)
  id: GetItem(System.Int32)
  parent: System.AddIn.Contract.Collections.IListContract`1
  langs:
  - csharp
  name: GetItem(Int32)
  nameWithType: IListContract<C>.GetItem(Int32)
  fullName: IListContract<C>.GetItem(Int32)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: Returns the element at the specified index.
  remarks: The <xref:System.AddIn.Contract.Collections.IListContract%601.GetItem%2A> method does not remove the element at the specified index. To remove an element from the <xref:System.AddIn.Contract.Collections.IListContract%601>, use the <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A> method.
  syntax:
    content: public C GetItem (int index);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the element to get.
    return:
      type: C
      description: The element at the specified index.
  overload: System.AddIn.Contract.Collections.IListContract`1.GetItem*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than the return value of <xref href=\"System.AddIn.Contract.Collections.ICollectionContract`1.GetCount\"></xref>."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IListContract`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AddIn.Contract.Collections.IListContract`1.IndexOf(`0)
  commentId: M:System.AddIn.Contract.Collections.IListContract`1.IndexOf(`0)
  id: IndexOf(`0)
  parent: System.AddIn.Contract.Collections.IListContract`1
  langs:
  - csharp
  name: IndexOf(C)
  nameWithType: IListContract<C>.IndexOf(C)
  fullName: IListContract<C>.IndexOf(C)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: Returns the index of a specific element in the <xref href="System.AddIn.Contract.Collections.IListContract`1"></xref>.
  syntax:
    content: public int IndexOf (C item);
    parameters:
    - id: item
      type: C
      description: The <xref href="System.AddIn.Contract.IContract"></xref> to locate in the <xref href="System.AddIn.Contract.Collections.IListContract`1"></xref>.
    return:
      type: System.Int32
      description: The index of <code>item</code> if found in the list; otherwise, -1.
  overload: System.AddIn.Contract.Collections.IListContract`1.IndexOf*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IListContract`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AddIn.Contract.Collections.IListContract`1.Insert(System.Int32,`0)
  commentId: M:System.AddIn.Contract.Collections.IListContract`1.Insert(System.Int32,`0)
  id: Insert(System.Int32,`0)
  parent: System.AddIn.Contract.Collections.IListContract`1
  langs:
  - csharp
  name: Insert(Int32, C)
  nameWithType: IListContract<C>.Insert(Int32, C)
  fullName: IListContract<C>.Insert(Int32, C)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: Inserts an element in the <xref href="System.AddIn.Contract.Collections.IListContract`1"></xref> at the specified index.
  remarks: "After you call <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A>, the elements that follow the insertion point move to accommodate the new element. The indexes of the elements that are moved are also updated. To replace an element at a specified index, use the <xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> method.  \n  \n To determine whether an <xref:System.AddIn.Contract.Collections.IListContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method."
  syntax:
    content: public void Insert (int index, C item);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which to insert <code>item</code>.
    - id: item
      type: C
      description: The <xref href="System.AddIn.Contract.IContract"></xref> to insert in the <xref href="System.AddIn.Contract.Collections.IListContract`1"></xref>.
  overload: System.AddIn.Contract.Collections.IListContract`1.Insert*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than the return value of <xref href=\"System.AddIn.Contract.Collections.ICollectionContract`1.GetCount\"></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.AddIn.Contract.Collections.IListContract`1"></xref> is read-only.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IListContract`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AddIn.Contract.Collections.IListContract`1.RemoveAt(System.Int32)
  commentId: M:System.AddIn.Contract.Collections.IListContract`1.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.AddIn.Contract.Collections.IListContract`1
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: IListContract<C>.RemoveAt(Int32)
  fullName: IListContract<C>.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: Removes the element at the specified index.
  remarks: "After you call <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A>, the elements that follow the removed element move to occupy the vacated spot. The indexes of the elements that are moved are also updated.  \n  \n To determine whether an <xref:System.AddIn.Contract.Collections.IListContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method."
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: The index of the element to remove.
  overload: System.AddIn.Contract.Collections.IListContract`1.RemoveAt*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than the return value of <xref href=\"System.AddIn.Contract.Collections.ICollectionContract`1.GetCount\"></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.AddIn.Contract.Collections.IListContract`1"></xref> is read-only.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IListContract`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AddIn.Contract.Collections.IListContract`1.SetItem(System.Int32,`0)
  commentId: M:System.AddIn.Contract.Collections.IListContract`1.SetItem(System.Int32,`0)
  id: SetItem(System.Int32,`0)
  parent: System.AddIn.Contract.Collections.IListContract`1
  langs:
  - csharp
  name: SetItem(Int32, C)
  nameWithType: IListContract<C>.SetItem(Int32, C)
  fullName: IListContract<C>.SetItem(Int32, C)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: Replaces the element at the specified index.
  remarks: "The <xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> method replaces the element at the specified index. To add an element to the <xref:System.AddIn.Contract.Collections.IListContract%601>, use the <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A> method.  \n  \n To determine whether an <xref:System.AddIn.Contract.Collections.IListContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method."
  syntax:
    content: public void SetItem (int index, C value);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which to set the element.
    - id: value
      type: C
      description: The element to set at the specified index.
  overload: System.AddIn.Contract.Collections.IListContract`1.SetItem*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than the return value of <xref href=\"System.AddIn.Contract.Collections.ICollectionContract`1.GetCount\"></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.AddIn.Contract.Collections.IListContract`1"></xref> is read-only.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IListContract`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.IndexOutOfRangeException
  parent: System
  isExternal: false
  name: IndexOutOfRangeException
  nameWithType: IndexOutOfRangeException
  fullName: System.IndexOutOfRangeException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.AddIn.Contract.Collections.IListContract`1.GetItem(System.Int32)
  parent: System.AddIn.Contract.Collections.IListContract`1
  isExternal: false
  name: GetItem(Int32)
  nameWithType: IListContract<C>.GetItem(Int32)
  fullName: IListContract<C>.GetItem(Int32)
- uid: C
  isExternal: true
  name: C
  nameWithType: C
  fullName: C
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AddIn.Contract.Collections.IListContract`1.IndexOf(`0)
  parent: System.AddIn.Contract.Collections.IListContract`1
  isExternal: false
  name: IndexOf(C)
  nameWithType: IListContract<C>.IndexOf(C)
  fullName: IListContract<C>.IndexOf(C)
- uid: System.AddIn.Contract.Collections.IListContract`1.Insert(System.Int32,`0)
  parent: System.AddIn.Contract.Collections.IListContract`1
  isExternal: false
  name: Insert(Int32, C)
  nameWithType: IListContract<C>.Insert(Int32, C)
  fullName: IListContract<C>.Insert(Int32, C)
- uid: System.AddIn.Contract.Collections.IListContract`1.RemoveAt(System.Int32)
  parent: System.AddIn.Contract.Collections.IListContract`1
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: IListContract<C>.RemoveAt(Int32)
  fullName: IListContract<C>.RemoveAt(Int32)
- uid: System.AddIn.Contract.Collections.IListContract`1.SetItem(System.Int32,`0)
  parent: System.AddIn.Contract.Collections.IListContract`1
  isExternal: false
  name: SetItem(Int32, C)
  nameWithType: IListContract<C>.SetItem(Int32, C)
  fullName: IListContract<C>.SetItem(Int32, C)
- uid: System.AddIn.Contract.Collections.IListContract`1.GetItem*
  parent: System.AddIn.Contract.Collections.IListContract`1
  isExternal: false
  name: GetItem
  nameWithType: IListContract<C>.GetItem
  fullName: IListContract<C>.GetItem
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IListContract`1.xml
- uid: System.AddIn.Contract.Collections.IListContract`1.IndexOf*
  parent: System.AddIn.Contract.Collections.IListContract`1
  isExternal: false
  name: IndexOf
  nameWithType: IListContract<C>.IndexOf
  fullName: IListContract<C>.IndexOf
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IListContract`1.xml
- uid: System.AddIn.Contract.Collections.IListContract`1.Insert*
  parent: System.AddIn.Contract.Collections.IListContract`1
  isExternal: false
  name: Insert
  nameWithType: IListContract<C>.Insert
  fullName: IListContract<C>.Insert
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IListContract`1.xml
- uid: System.AddIn.Contract.Collections.IListContract`1.RemoveAt*
  parent: System.AddIn.Contract.Collections.IListContract`1
  isExternal: false
  name: RemoveAt
  nameWithType: IListContract<C>.RemoveAt
  fullName: IListContract<C>.RemoveAt
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IListContract`1.xml
- uid: System.AddIn.Contract.Collections.IListContract`1.SetItem*
  parent: System.AddIn.Contract.Collections.IListContract`1
  isExternal: false
  name: SetItem
  nameWithType: IListContract<C>.SetItem
  fullName: IListContract<C>.SetItem
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract.Collections/IListContract`1.xml
- uid: System.AddIn.Contract.Collections.ICollectionContract`1
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: ICollectionContract<C>
  nameWithType: ICollectionContract<C>
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>
- uid: System.AddIn.Contract.Collections.IEnumerableContract`1
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IEnumerableContract<C>
  nameWithType: IEnumerableContract<C>
  fullName: System.AddIn.Contract.Collections.IEnumerableContract<C>
