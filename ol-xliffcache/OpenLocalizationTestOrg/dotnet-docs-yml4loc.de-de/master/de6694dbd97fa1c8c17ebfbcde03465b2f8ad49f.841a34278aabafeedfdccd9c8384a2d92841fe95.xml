{"nodes":[{"content":"The <xref href=\"System.Security.Permissions.MediaPermission\"></xref> describes a set of security permissions that controls the ability for audio, image, and video media to work in a partial-trust Windows Presentation Foundation (WPF) application.","nodes":[{"pos":[0,246],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.MediaPermission\"&gt;&lt;/xref&gt;</ph> describes a set of security permissions that controls the ability for audio, image, and video media to work in a partial-trust Windows Presentation Foundation (WPF) application.","source":"The <xref href=\"System.Security.Permissions.MediaPermission\"></xref> describes a set of security permissions that controls the ability for audio, image, and video media to work in a partial-trust Windows Presentation Foundation (WPF) application."}],"pos":[1754,2001],"yaml":true},{"content":"This permission uses the values of the <xref:System.Security.Permissions.MediaPermissionAudio>, <xref:System.Security.Permissions.MediaPermissionImage>, and <xref:System.Security.Permissions.MediaPermissionVideo> enumerations.","nodes":[{"pos":[0,226],"content":"This permission uses the values of the <xref:System.Security.Permissions.MediaPermissionAudio>, <xref:System.Security.Permissions.MediaPermissionImage>, and <xref:System.Security.Permissions.MediaPermissionVideo> enumerations.","nodes":[{"content":"This permission uses the values of the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.MediaPermissionAudio&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Security.Permissions.MediaPermissionImage&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Security.Permissions.MediaPermissionVideo&gt;</ph> enumerations.","pos":[0,226],"source":"This permission uses the values of the <xref:System.Security.Permissions.MediaPermissionAudio>, <xref:System.Security.Permissions.MediaPermissionImage>, and <xref:System.Security.Permissions.MediaPermissionVideo> enumerations."}]}],"pos":[2012,2239],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class.","nodes":[{"pos":[0,105],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.MediaPermission\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class."}],"pos":[4661,4767],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class by specifying the audio permission level.","nodes":[{"pos":[0,146],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.MediaPermission\"&gt;&lt;/xref&gt;</ph> class by specifying the audio permission level.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class by specifying the audio permission level."}],"pos":[6101,6248],"yaml":true},{"content":"The default values for image and video permissions are <xref:System.Security.Permissions.MediaPermissionImage.SafeImage> and <xref:System.Security.Permissions.MediaPermissionVideo.SafeVideo>.","nodes":[{"pos":[0,191],"content":"The default values for image and video permissions are <xref:System.Security.Permissions.MediaPermissionImage.SafeImage> and <xref:System.Security.Permissions.MediaPermissionVideo.SafeVideo>.","nodes":[{"content":"The default values for image and video permissions are <ph id=\"ph1\">&lt;xref:System.Security.Permissions.MediaPermissionImage.SafeImage&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Security.Permissions.MediaPermissionVideo.SafeVideo&gt;</ph>.","pos":[0,191],"source":"The default values for image and video permissions are <xref:System.Security.Permissions.MediaPermissionImage.SafeImage> and <xref:System.Security.Permissions.MediaPermissionVideo.SafeVideo>."}]}],"pos":[6259,6451],"yaml":true,"extradata":"MT"},{"content":"An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionAudio\"></xref>.","nodes":[{"pos":[0,93],"content":"An enumerated value of <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.MediaPermissionAudio\"&gt;&lt;/xref&gt;</ph>.","source":"An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionAudio\"></xref>."}],"pos":[7234,7328],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class by specifying the image permission level.","nodes":[{"pos":[0,146],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.MediaPermission\"&gt;&lt;/xref&gt;</ph> class by specifying the image permission level.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class by specifying the image permission level."}],"pos":[8593,8740],"yaml":true},{"content":"The default values for audio and video permissions are <xref:System.Security.Permissions.MediaPermissionAudio.SafeAudio> and <xref:System.Security.Permissions.MediaPermissionVideo.SafeVideo>.","nodes":[{"pos":[0,191],"content":"The default values for audio and video permissions are <xref:System.Security.Permissions.MediaPermissionAudio.SafeAudio> and <xref:System.Security.Permissions.MediaPermissionVideo.SafeVideo>.","nodes":[{"content":"The default values for audio and video permissions are <ph id=\"ph1\">&lt;xref:System.Security.Permissions.MediaPermissionAudio.SafeAudio&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Security.Permissions.MediaPermissionVideo.SafeVideo&gt;</ph>.","pos":[0,191],"source":"The default values for audio and video permissions are <xref:System.Security.Permissions.MediaPermissionAudio.SafeAudio> and <xref:System.Security.Permissions.MediaPermissionVideo.SafeVideo>."}]}],"pos":[8751,8943],"yaml":true,"extradata":"MT"},{"content":"An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionImage\"></xref>.","nodes":[{"pos":[0,93],"content":"An enumerated value of <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.MediaPermissionImage\"&gt;&lt;/xref&gt;</ph>.","source":"An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionImage\"></xref>."}],"pos":[9726,9820],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class by specifying the video permission level.","nodes":[{"pos":[0,146],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.MediaPermission\"&gt;&lt;/xref&gt;</ph> class by specifying the video permission level.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class by specifying the video permission level."}],"pos":[11085,11232],"yaml":true},{"content":"The default values for audio and image permissions are <xref:System.Security.Permissions.MediaPermissionAudio.SafeAudio> and <xref:System.Security.Permissions.MediaPermissionImage.SafeImage>.","nodes":[{"pos":[0,191],"content":"The default values for audio and image permissions are <xref:System.Security.Permissions.MediaPermissionAudio.SafeAudio> and <xref:System.Security.Permissions.MediaPermissionImage.SafeImage>.","nodes":[{"content":"The default values for audio and image permissions are <ph id=\"ph1\">&lt;xref:System.Security.Permissions.MediaPermissionAudio.SafeAudio&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Security.Permissions.MediaPermissionImage.SafeImage&gt;</ph>.","pos":[0,191],"source":"The default values for audio and image permissions are <xref:System.Security.Permissions.MediaPermissionAudio.SafeAudio> and <xref:System.Security.Permissions.MediaPermissionImage.SafeImage>."}]}],"pos":[11243,11435],"yaml":true,"extradata":"MT"},{"content":"An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionVideo\"></xref>.","nodes":[{"pos":[0,93],"content":"An enumerated value of <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.MediaPermissionVideo\"&gt;&lt;/xref&gt;</ph>.","source":"An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionVideo\"></xref>."}],"pos":[12218,12312],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class by specifying a permission state.","nodes":[{"pos":[0,138],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.MediaPermission\"&gt;&lt;/xref&gt;</ph> class by specifying a permission state.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class by specifying a permission state."}],"pos":[13547,13686],"yaml":true},{"content":"If `state` is set to <xref:System.Security.Permissions.PermissionState.Unrestricted>, all media types are granted full permission to play or display with no restrictions. If `state` is set to <xref:System.Security.Permissions.PermissionState.None>, all media types are restricted from playing or displaying.","nodes":[{"pos":[0,307],"content":"If `state` is set to <xref:System.Security.Permissions.PermissionState.Unrestricted>, all media types are granted full permission to play or display with no restrictions. If `state` is set to <xref:System.Security.Permissions.PermissionState.None>, all media types are restricted from playing or displaying.","nodes":[{"content":"If <ph id=\"ph1\">`state`</ph> is set to <ph id=\"ph2\">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>, all media types are granted full permission to play or display with no restrictions.","pos":[0,170],"source":"If `state` is set to <xref:System.Security.Permissions.PermissionState.Unrestricted>, all media types are granted full permission to play or display with no restrictions."},{"content":"If <ph id=\"ph1\">`state`</ph> is set to <ph id=\"ph2\">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph>, all media types are restricted from playing or displaying.","pos":[171,307],"source":" If `state` is set to <xref:System.Security.Permissions.PermissionState.None>, all media types are restricted from playing or displaying."}]}],"pos":[13697,14005],"yaml":true,"extradata":"MT"},{"content":"An enumerated value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>.","nodes":[{"pos":[0,88],"content":"An enumerated value of <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph>.","source":"An enumerated value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>."}],"pos":[14753,14842],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class by specifying the audio, video, and image permission levels.","nodes":[{"pos":[0,165],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.MediaPermission\"&gt;&lt;/xref&gt;</ph> class by specifying the audio, video, and image permission levels.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class by specifying the audio, video, and image permission levels."}],"pos":[16533,16699],"yaml":true},{"content":"An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionAudio\"></xref>.","nodes":[{"pos":[0,93],"content":"An enumerated value of <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.MediaPermissionAudio\"&gt;&lt;/xref&gt;</ph>.","source":"An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionAudio\"></xref>."}],"pos":[17744,17838],"yaml":true},{"content":"An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionVideo\"></xref>.","nodes":[{"pos":[0,93],"content":"An enumerated value of <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.MediaPermissionVideo\"&gt;&lt;/xref&gt;</ph>.","source":"An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionVideo\"></xref>."}],"pos":[17944,18038],"yaml":true},{"content":"An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionImage\"></xref>.","nodes":[{"pos":[0,93],"content":"An enumerated value of <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.MediaPermissionImage\"&gt;&lt;/xref&gt;</ph>.","source":"An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionImage\"></xref>."}],"pos":[18144,18238],"yaml":true},{"content":"Gets the current value of the audio permission level.","nodes":[{"pos":[0,53],"content":"Gets the current value of the audio permission level.","nodes":[{"content":"Gets the current value of the audio permission level.","pos":[0,53]}]}],"pos":[19252,19306],"yaml":true},{"content":"The audio permission level.","nodes":[{"pos":[0,27],"content":"The audio permission level.","nodes":[{"content":"The audio permission level.","pos":[0,27]}]}],"pos":[20058,20086],"yaml":true},{"content":"Creates and returns an identical copy of the current permission.","nodes":[{"pos":[0,64],"content":"Creates and returns an identical copy of the current permission.","nodes":[{"content":"Creates and returns an identical copy of the current permission.","pos":[0,64]}]}],"pos":[21098,21163],"yaml":true},{"content":"A copy of a permission represents the same access to resources as the original permission.","nodes":[{"pos":[0,90],"content":"A copy of a permission represents the same access to resources as the original permission.","nodes":[{"content":"A copy of a permission represents the same access to resources as the original permission.","pos":[0,90]}]}],"pos":[21174,21265],"yaml":true,"extradata":"MT"},{"content":"A copy of the current permission.","nodes":[{"pos":[0,33],"content":"A copy of the current permission.","nodes":[{"content":"A copy of the current permission.","pos":[0,33]}]}],"pos":[21431,21465],"yaml":true},{"content":"Reconstructs a permission with a specified state from an XML encoding.","nodes":[{"pos":[0,70],"content":"Reconstructs a permission with a specified state from an XML encoding.","nodes":[{"content":"Reconstructs a permission with a specified state from an XML encoding.","pos":[0,70]}]}],"pos":[22638,22709],"yaml":true},{"content":"The XML encoding to use to reconstruct the permission.","nodes":[{"pos":[0,54],"content":"The XML encoding to use to reconstruct the permission.","nodes":[{"content":"The XML encoding to use to reconstruct the permission.","pos":[0,54]}]}],"pos":[22917,22972],"yaml":true},{"content":"Gets the current value of the image permission level.","nodes":[{"pos":[0,53],"content":"Gets the current value of the image permission level.","nodes":[{"content":"Gets the current value of the image permission level.","pos":[0,53]}]}],"pos":[23988,24042],"yaml":true},{"content":"The image permission level.","nodes":[{"pos":[0,27],"content":"The image permission level.","nodes":[{"content":"The image permission level.","pos":[0,27]}]}],"pos":[24794,24822],"yaml":true},{"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","nodes":[{"pos":[0,113],"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","nodes":[{"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","pos":[0,113]}]}],"pos":[25984,26098],"yaml":true},{"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","nodes":[{"pos":[0,109],"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","nodes":[{"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","pos":[0,109],"nodes":[{"content":"A permission to intersect with the current permission.","pos":[0,54]},{"content":"It must be of the same type as the current permission.","pos":[55,109]}]}]}],"pos":[26305,26415],"yaml":true},{"content":"The intersection of two permissions is a permission that describes the state that they both describe in common. Only a demand that passes both original permissions will be valid for the intersected permission.","nodes":[{"pos":[0,209],"content":"The intersection of two permissions is a permission that describes the state that they both describe in common. Only a demand that passes both original permissions will be valid for the intersected permission.","nodes":[{"content":"The intersection of two permissions is a permission that describes the state that they both describe in common. Only a demand that passes both original permissions will be valid for the intersected permission.","pos":[0,209],"nodes":[{"content":"The intersection of two permissions is a permission that describes the state that they both describe in common.","pos":[0,111]},{"content":"Only a demand that passes both original permissions will be valid for the intersected permission.","pos":[112,209]}]}]}],"pos":[26486,26696],"yaml":true},{"content":"Determines whether the current permission is a subset of the specified permission.","nodes":[{"pos":[0,82],"content":"Determines whether the current permission is a subset of the specified permission.","nodes":[{"content":"Determines whether the current permission is a subset of the specified permission.","pos":[0,82]}]}],"pos":[27868,27951],"yaml":true},{"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\.  \n  \n If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.","nodes":[{"pos":[0,299],"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\.","nodes":[{"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\.","pos":[0,299],"nodes":[{"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.","pos":[0,172]},{"content":"For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:<ph id=\"ph1\">\\\\</ph>.","pos":[173,299],"source":" For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\."}]}]},{"pos":[306,447],"content":"If this method returns <ph id=\"ph1\">`true`</ph>, the current permission represents no more access to the protected resource than does the specified permission.","source":"If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission."}],"pos":[27962,28417],"yaml":true,"extradata":"MT"},{"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","nodes":[{"pos":[0,130],"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","nodes":[{"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","pos":[0,130],"nodes":[{"content":"A permission that is to be tested for the subset relationship.","pos":[0,62]},{"content":"This permission must be of the same type as the current permission.","pos":[63,130]}]}]}],"pos":[28602,28733],"yaml":true},{"content":"`true` if the current permission is a subset of the specified permission; otherwise, `false`.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">`true`</ph> if the current permission is a subset of the specified permission; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current permission is a subset of the specified permission; otherwise, `false`."}],"pos":[28791,28887],"yaml":true},{"content":"Returns a value indicating whether the current permission is unrestricted.","nodes":[{"pos":[0,74],"content":"Returns a value indicating whether the current permission is unrestricted.","nodes":[{"content":"Returns a value indicating whether the current permission is unrestricted.","pos":[0,74]}]}],"pos":[29964,30039],"yaml":true},{"content":"The return value is `true` when the media permission values are <xref:System.Security.Permissions.MediaPermissionAudio.AllAudio>, <xref:System.Security.Permissions.MediaPermissionImage.AllImage>, and <xref:System.Security.Permissions.MediaPermissionVideo.SafeVideo>.","nodes":[{"pos":[0,266],"content":"The return value is <ph id=\"ph1\">`true`</ph> when the media permission values are <ph id=\"ph2\">&lt;xref:System.Security.Permissions.MediaPermissionAudio.AllAudio&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Security.Permissions.MediaPermissionImage.AllImage&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Security.Permissions.MediaPermissionVideo.SafeVideo&gt;</ph>.","source":"The return value is `true` when the media permission values are <xref:System.Security.Permissions.MediaPermissionAudio.AllAudio>, <xref:System.Security.Permissions.MediaPermissionImage.AllImage>, and <xref:System.Security.Permissions.MediaPermissionVideo.SafeVideo>."}],"pos":[30050,30317],"yaml":true,"extradata":"MT"},{"content":"`true` if the audio, image, and video permissions are all unrestricted; otherwise, `false`.","nodes":[{"pos":[0,91],"content":"<ph id=\"ph1\">`true`</ph> if the audio, image, and video permissions are all unrestricted; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the audio, image, and video permissions are all unrestricted; otherwise, `false`."}],"pos":[30959,31053],"yaml":true},{"content":"Creates an XML encoding of the permission and its current state.","nodes":[{"pos":[0,64],"content":"Creates an XML encoding of the permission and its current state.","nodes":[{"content":"Creates an XML encoding of the permission and its current state.","pos":[0,64]}]}],"pos":[32080,32145],"yaml":true},{"content":"An XML encoding of the permission, including any state information.","nodes":[{"pos":[0,67],"content":"An XML encoding of the permission, including any state information.","nodes":[{"content":"An XML encoding of the permission, including any state information.","pos":[0,67]}]}],"pos":[32320,32388],"yaml":true},{"content":"Creates a permission that is the union of the current permission and the specified permission.","nodes":[{"pos":[0,94],"content":"Creates a permission that is the union of the current permission and the specified permission.","nodes":[{"content":"Creates a permission that is the union of the current permission and the specified permission.","pos":[0,94]}]}],"pos":[33526,33621],"yaml":true},{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","nodes":[{"pos":[0,107],"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","nodes":[{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","pos":[0,107],"nodes":[{"content":"A permission to combine with the current permission.","pos":[0,52]},{"content":"It must be of the same type as the current permission.","pos":[53,107]}]}]}],"pos":[33824,33932],"yaml":true},{"content":"A new permission that represents the union of the current permission and the specified permission.","nodes":[{"pos":[0,98],"content":"A new permission that represents the union of the current permission and the specified permission.","nodes":[{"content":"A new permission that represents the union of the current permission and the specified permission.","pos":[0,98]}]}],"pos":[34003,34102],"yaml":true},{"content":"Gets the current value of the video permission level.","nodes":[{"pos":[0,53],"content":"Gets the current value of the video permission level.","nodes":[{"content":"Gets the current value of the video permission level.","pos":[0,53]}]}],"pos":[35116,35170],"yaml":true},{"content":"The media permission level.","nodes":[{"pos":[0,27],"content":"The media permission level.","nodes":[{"content":"The media permission level.","pos":[0,27]}]}],"pos":[35922,35950],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.MediaPermission\n  commentId: T:System.Security.Permissions.MediaPermission\n  id: MediaPermission\n  children:\n  - System.Security.Permissions.MediaPermission.#ctor\n  - System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio)\n  - System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionImage)\n  - System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionVideo)\n  - System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)\n  - System.Security.Permissions.MediaPermission.Audio\n  - System.Security.Permissions.MediaPermission.Copy\n  - System.Security.Permissions.MediaPermission.FromXml(System.Security.SecurityElement)\n  - System.Security.Permissions.MediaPermission.Image\n  - System.Security.Permissions.MediaPermission.Intersect(System.Security.IPermission)\n  - System.Security.Permissions.MediaPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Security.Permissions.MediaPermission.IsUnrestricted\n  - System.Security.Permissions.MediaPermission.ToXml\n  - System.Security.Permissions.MediaPermission.Union(System.Security.IPermission)\n  - System.Security.Permissions.MediaPermission.Video\n  langs:\n  - csharp\n  name: MediaPermission\n  nameWithType: MediaPermission\n  fullName: System.Security.Permissions.MediaPermission\n  type: Class\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: The <xref href=\"System.Security.Permissions.MediaPermission\"></xref> describes a set of security permissions that controls the ability for audio, image, and video media to work in a partial-trust Windows Presentation Foundation (WPF) application.\n  remarks: This permission uses the values of the <xref:System.Security.Permissions.MediaPermissionAudio>, <xref:System.Security.Permissions.MediaPermissionImage>, and <xref:System.Security.Permissions.MediaPermissionVideo> enumerations.\n  syntax:\n    content: 'public sealed class MediaPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.MediaPermission.#ctor\n  commentId: M:System.Security.Permissions.MediaPermission.#ctor\n  id: '#ctor'\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: MediaPermission()\n  nameWithType: MediaPermission.MediaPermission()\n  fullName: MediaPermission.MediaPermission()\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class.\n  syntax:\n    content: public MediaPermission ();\n    parameters: []\n  overload: System.Security.Permissions.MediaPermission.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio)\n  commentId: M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio)\n  id: '#ctor(System.Security.Permissions.MediaPermissionAudio)'\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: MediaPermission(MediaPermissionAudio)\n  nameWithType: MediaPermission.MediaPermission(MediaPermissionAudio)\n  fullName: MediaPermission.MediaPermission(MediaPermissionAudio)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class by specifying the audio permission level.\n  remarks: The default values for image and video permissions are <xref:System.Security.Permissions.MediaPermissionImage.SafeImage> and <xref:System.Security.Permissions.MediaPermissionVideo.SafeVideo>.\n  example:\n  - \"The following code example shows how to create a <xref:System.Security.Permissions.MediaPermission> with a <xref:System.Security.Permissions.MediaPermissionAudio> value.  \\n  \\n [!code-csharp[SecurityPermissionsSnippets#MediaPermission1](~/samples/snippets/csharp/VS_Snippets_Wpf/SecurityPermissionsSnippets/CSharp/Window1.xaml.cs#mediapermission1)]\\n [!code-vb[SecurityPermissionsSnippets#MediaPermission1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SecurityPermissionsSnippets/visualbasic/window1.xaml.vb#mediapermission1)]\"\n  syntax:\n    content: public MediaPermission (System.Security.Permissions.MediaPermissionAudio permissionAudio);\n    parameters:\n    - id: permissionAudio\n      type: System.Security.Permissions.MediaPermissionAudio\n      description: An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionAudio\"></xref>.\n  overload: System.Security.Permissions.MediaPermission.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionImage)\n  commentId: M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionImage)\n  id: '#ctor(System.Security.Permissions.MediaPermissionImage)'\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: MediaPermission(MediaPermissionImage)\n  nameWithType: MediaPermission.MediaPermission(MediaPermissionImage)\n  fullName: MediaPermission.MediaPermission(MediaPermissionImage)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class by specifying the image permission level.\n  remarks: The default values for audio and video permissions are <xref:System.Security.Permissions.MediaPermissionAudio.SafeAudio> and <xref:System.Security.Permissions.MediaPermissionVideo.SafeVideo>.\n  example:\n  - \"The following code example shows how to create a <xref:System.Security.Permissions.MediaPermission> with a <xref:System.Security.Permissions.MediaPermissionImage> value.  \\n  \\n [!code-csharp[SecurityPermissionsSnippets#MediaPermission2](~/samples/snippets/csharp/VS_Snippets_Wpf/SecurityPermissionsSnippets/CSharp/Window1.xaml.cs#mediapermission2)]\\n [!code-vb[SecurityPermissionsSnippets#MediaPermission2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SecurityPermissionsSnippets/visualbasic/window1.xaml.vb#mediapermission2)]\"\n  syntax:\n    content: public MediaPermission (System.Security.Permissions.MediaPermissionImage permissionImage);\n    parameters:\n    - id: permissionImage\n      type: System.Security.Permissions.MediaPermissionImage\n      description: An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionImage\"></xref>.\n  overload: System.Security.Permissions.MediaPermission.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionVideo)\n  commentId: M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionVideo)\n  id: '#ctor(System.Security.Permissions.MediaPermissionVideo)'\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: MediaPermission(MediaPermissionVideo)\n  nameWithType: MediaPermission.MediaPermission(MediaPermissionVideo)\n  fullName: MediaPermission.MediaPermission(MediaPermissionVideo)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class by specifying the video permission level.\n  remarks: The default values for audio and image permissions are <xref:System.Security.Permissions.MediaPermissionAudio.SafeAudio> and <xref:System.Security.Permissions.MediaPermissionImage.SafeImage>.\n  example:\n  - \"The following code example shows how to create a <xref:System.Security.Permissions.MediaPermission> with a <xref:System.Security.Permissions.MediaPermissionVideo> value.  \\n  \\n [!code-csharp[SecurityPermissionsSnippets#MediaPermission3](~/samples/snippets/csharp/VS_Snippets_Wpf/SecurityPermissionsSnippets/CSharp/Window1.xaml.cs#mediapermission3)]\\n [!code-vb[SecurityPermissionsSnippets#MediaPermission3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SecurityPermissionsSnippets/visualbasic/window1.xaml.vb#mediapermission3)]\"\n  syntax:\n    content: public MediaPermission (System.Security.Permissions.MediaPermissionVideo permissionVideo);\n    parameters:\n    - id: permissionVideo\n      type: System.Security.Permissions.MediaPermissionVideo\n      description: An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionVideo\"></xref>.\n  overload: System.Security.Permissions.MediaPermission.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.PermissionState)\n  commentId: M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: MediaPermission(PermissionState)\n  nameWithType: MediaPermission.MediaPermission(PermissionState)\n  fullName: MediaPermission.MediaPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class by specifying a permission state.\n  remarks: If `state` is set to <xref:System.Security.Permissions.PermissionState.Unrestricted>, all media types are granted full permission to play or display with no restrictions. If `state` is set to <xref:System.Security.Permissions.PermissionState.None>, all media types are restricted from playing or displaying.\n  example:\n  - \"The following code example shows how to create a <xref:System.Security.Permissions.MediaPermission> with a <xref:System.Security.Permissions.PermissionState> value.  \\n  \\n [!code-csharp[SecurityPermissionsSnippets#MediaPermission4](~/samples/snippets/csharp/VS_Snippets_Wpf/SecurityPermissionsSnippets/CSharp/Window1.xaml.cs#mediapermission4)]\\n [!code-vb[SecurityPermissionsSnippets#MediaPermission4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SecurityPermissionsSnippets/visualbasic/window1.xaml.vb#mediapermission4)]\"\n  syntax:\n    content: public MediaPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: An enumerated value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>.\n  overload: System.Security.Permissions.MediaPermission.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)\n  commentId: M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)\n  id: '#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)'\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: MediaPermission(MediaPermissionAudio, MediaPermissionVideo, MediaPermissionImage)\n  nameWithType: MediaPermission.MediaPermission(MediaPermissionAudio, MediaPermissionVideo, MediaPermissionImage)\n  fullName: MediaPermission.MediaPermission(MediaPermissionAudio, MediaPermissionVideo, MediaPermissionImage)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.MediaPermission\"></xref> class by specifying the audio, video, and image permission levels.\n  remarks: ''\n  example:\n  - \"The following code example shows how to create a <xref:System.Security.Permissions.MediaPermission> with <xref:System.Security.Permissions.MediaPermissionAudio>, <xref:System.Security.Permissions.MediaPermissionVideo>, and <xref:System.Security.Permissions.MediaPermissionImage> values  \\n  \\n [!code-csharp[SecurityPermissionsSnippets#MediaPermission5](~/samples/snippets/csharp/VS_Snippets_Wpf/SecurityPermissionsSnippets/CSharp/Window1.xaml.cs#mediapermission5)]\\n [!code-vb[SecurityPermissionsSnippets#MediaPermission5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SecurityPermissionsSnippets/visualbasic/window1.xaml.vb#mediapermission5)]\"\n  syntax:\n    content: public MediaPermission (System.Security.Permissions.MediaPermissionAudio permissionAudio, System.Security.Permissions.MediaPermissionVideo permissionVideo, System.Security.Permissions.MediaPermissionImage permissionImage);\n    parameters:\n    - id: permissionAudio\n      type: System.Security.Permissions.MediaPermissionAudio\n      description: An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionAudio\"></xref>.\n    - id: permissionVideo\n      type: System.Security.Permissions.MediaPermissionVideo\n      description: An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionVideo\"></xref>.\n    - id: permissionImage\n      type: System.Security.Permissions.MediaPermissionImage\n      description: An enumerated value of <xref href=\"System.Security.Permissions.MediaPermissionImage\"></xref>.\n  overload: System.Security.Permissions.MediaPermission.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.MediaPermission.Audio\n  commentId: P:System.Security.Permissions.MediaPermission.Audio\n  id: Audio\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: Audio\n  nameWithType: MediaPermission.Audio\n  fullName: MediaPermission.Audio\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Gets the current value of the audio permission level.\n  remarks: ''\n  example:\n  - \"The following code example shows how to retrieve the <xref:System.Security.Permissions.MediaPermissionAudio> value for the <xref:System.Security.Permissions.MediaPermission>.  \\n  \\n [!code-csharp[SecurityPermissionsSnippets#MediaPermission6](~/samples/snippets/csharp/VS_Snippets_Wpf/SecurityPermissionsSnippets/CSharp/Window1.xaml.cs#mediapermission6)]\\n [!code-vb[SecurityPermissionsSnippets#MediaPermission6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SecurityPermissionsSnippets/visualbasic/window1.xaml.vb#mediapermission6)]\"\n  syntax:\n    content: public System.Security.Permissions.MediaPermissionAudio Audio { get; }\n    return:\n      type: System.Security.Permissions.MediaPermissionAudio\n      description: The audio permission level.\n  overload: System.Security.Permissions.MediaPermission.Audio*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.MediaPermission.Copy\n  commentId: M:System.Security.Permissions.MediaPermission.Copy\n  id: Copy\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: MediaPermission.Copy()\n  fullName: MediaPermission.Copy()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Creates and returns an identical copy of the current permission.\n  remarks: A copy of a permission represents the same access to resources as the original permission.\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission.\n  overload: System.Security.Permissions.MediaPermission.Copy*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.MediaPermission.FromXml(System.Security.SecurityElement)\n  commentId: M:System.Security.Permissions.MediaPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: MediaPermission.FromXml(SecurityElement)\n  fullName: MediaPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Reconstructs a permission with a specified state from an XML encoding.\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement securityElement);\n    parameters:\n    - id: securityElement\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the permission.\n  overload: System.Security.Permissions.MediaPermission.FromXml*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.MediaPermission.Image\n  commentId: P:System.Security.Permissions.MediaPermission.Image\n  id: Image\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: Image\n  nameWithType: MediaPermission.Image\n  fullName: MediaPermission.Image\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Gets the current value of the image permission level.\n  remarks: ''\n  example:\n  - \"The following code example shows how to retrieve the <xref:System.Security.Permissions.MediaPermissionImage> value for the <xref:System.Security.Permissions.MediaPermission>.  \\n  \\n [!code-csharp[SecurityPermissionsSnippets#MediaPermission7](~/samples/snippets/csharp/VS_Snippets_Wpf/SecurityPermissionsSnippets/CSharp/Window1.xaml.cs#mediapermission7)]\\n [!code-vb[SecurityPermissionsSnippets#MediaPermission7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SecurityPermissionsSnippets/visualbasic/window1.xaml.vb#mediapermission7)]\"\n  syntax:\n    content: public System.Security.Permissions.MediaPermissionImage Image { get; }\n    return:\n      type: System.Security.Permissions.MediaPermissionImage\n      description: The image permission level.\n  overload: System.Security.Permissions.MediaPermission.Image*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.MediaPermission.Intersect(System.Security.IPermission)\n  commentId: M:System.Security.Permissions.MediaPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: MediaPermission.Intersect(IPermission)\n  fullName: MediaPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Creates and returns a permission that is the intersection of the current permission and the specified permission.\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to intersect with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: The intersection of two permissions is a permission that describes the state that they both describe in common. Only a demand that passes both original permissions will be valid for the intersected permission.\n  overload: System.Security.Permissions.MediaPermission.Intersect*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.MediaPermission.IsSubsetOf(System.Security.IPermission)\n  commentId: M:System.Security.Permissions.MediaPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: MediaPermission.IsSubsetOf(IPermission)\n  fullName: MediaPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Determines whether the current permission is a subset of the specified permission.\n  remarks: \"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission that represents access to C:\\\\example.txt is a subset of a permission that represents access to C:\\\\\\\\.  \\n  \\n If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.\"\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.\n    return:\n      type: System.Boolean\n      description: '`true` if the current permission is a subset of the specified permission; otherwise, `false`.'\n  overload: System.Security.Permissions.MediaPermission.IsSubsetOf*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.MediaPermission.IsUnrestricted\n  commentId: M:System.Security.Permissions.MediaPermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: MediaPermission.IsUnrestricted()\n  fullName: MediaPermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Returns a value indicating whether the current permission is unrestricted.\n  remarks: The return value is `true` when the media permission values are <xref:System.Security.Permissions.MediaPermissionAudio.AllAudio>, <xref:System.Security.Permissions.MediaPermissionImage.AllImage>, and <xref:System.Security.Permissions.MediaPermissionVideo.SafeVideo>.\n  example:\n  - \"The following code example shows how to determine whether the <xref:System.Security.Permissions.MediaPermission> is unrestricted.  \\n  \\n [!code-csharp[SecurityPermissionsSnippets#MediaPermission16](~/samples/snippets/csharp/VS_Snippets_Wpf/SecurityPermissionsSnippets/CSharp/Window1.xaml.cs#mediapermission16)]\\n [!code-vb[SecurityPermissionsSnippets#MediaPermission16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SecurityPermissionsSnippets/visualbasic/window1.xaml.vb#mediapermission16)]\"\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the audio, image, and video permissions are all unrestricted; otherwise, `false`.'\n  overload: System.Security.Permissions.MediaPermission.IsUnrestricted*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.MediaPermission.ToXml\n  commentId: M:System.Security.Permissions.MediaPermission.ToXml\n  id: ToXml\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: MediaPermission.ToXml()\n  fullName: MediaPermission.ToXml()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Creates an XML encoding of the permission and its current state.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the permission, including any state information.\n  overload: System.Security.Permissions.MediaPermission.ToXml*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.MediaPermission.Union(System.Security.IPermission)\n  commentId: M:System.Security.Permissions.MediaPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: MediaPermission.Union(IPermission)\n  fullName: MediaPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Creates a permission that is the union of the current permission and the specified permission.\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to combine with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the union of the current permission and the specified permission.\n  overload: System.Security.Permissions.MediaPermission.Union*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.MediaPermission.Video\n  commentId: P:System.Security.Permissions.MediaPermission.Video\n  id: Video\n  parent: System.Security.Permissions.MediaPermission\n  langs:\n  - csharp\n  name: Video\n  nameWithType: MediaPermission.Video\n  fullName: MediaPermission.Video\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Gets the current value of the video permission level.\n  remarks: ''\n  example:\n  - \"The following code example shows how to retrieve the <xref:System.Security.Permissions.MediaPermissionVideo> value for the <xref:System.Security.Permissions.MediaPermission>.  \\n  \\n [!code-csharp[SecurityPermissionsSnippets#MediaPermission8](~/samples/snippets/csharp/VS_Snippets_Wpf/SecurityPermissionsSnippets/CSharp/Window1.xaml.cs#mediapermission8)]\\n [!code-vb[SecurityPermissionsSnippets#MediaPermission8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SecurityPermissionsSnippets/visualbasic/window1.xaml.vb#mediapermission8)]\"\n  syntax:\n    content: public System.Security.Permissions.MediaPermissionVideo Video { get; }\n    return:\n      type: System.Security.Permissions.MediaPermissionVideo\n      description: The media permission level.\n  overload: System.Security.Permissions.MediaPermission.Video*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.CodeAccessPermission\n  parent: System.Security\n  isExternal: false\n  name: CodeAccessPermission\n  nameWithType: CodeAccessPermission\n  fullName: System.Security.CodeAccessPermission\n- uid: System.Security.Permissions.MediaPermission.#ctor\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: MediaPermission()\n  nameWithType: MediaPermission.MediaPermission()\n  fullName: MediaPermission.MediaPermission()\n- uid: System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio)\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: MediaPermission(MediaPermissionAudio)\n  nameWithType: MediaPermission.MediaPermission(MediaPermissionAudio)\n  fullName: MediaPermission.MediaPermission(MediaPermissionAudio)\n- uid: System.Security.Permissions.MediaPermissionAudio\n  parent: System.Security.Permissions\n  isExternal: false\n  name: MediaPermissionAudio\n  nameWithType: MediaPermissionAudio\n  fullName: System.Security.Permissions.MediaPermissionAudio\n- uid: System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionImage)\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: MediaPermission(MediaPermissionImage)\n  nameWithType: MediaPermission.MediaPermission(MediaPermissionImage)\n  fullName: MediaPermission.MediaPermission(MediaPermissionImage)\n- uid: System.Security.Permissions.MediaPermissionImage\n  parent: System.Security.Permissions\n  isExternal: false\n  name: MediaPermissionImage\n  nameWithType: MediaPermissionImage\n  fullName: System.Security.Permissions.MediaPermissionImage\n- uid: System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionVideo)\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: MediaPermission(MediaPermissionVideo)\n  nameWithType: MediaPermission.MediaPermission(MediaPermissionVideo)\n  fullName: MediaPermission.MediaPermission(MediaPermissionVideo)\n- uid: System.Security.Permissions.MediaPermissionVideo\n  parent: System.Security.Permissions\n  isExternal: false\n  name: MediaPermissionVideo\n  nameWithType: MediaPermissionVideo\n  fullName: System.Security.Permissions.MediaPermissionVideo\n- uid: System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: MediaPermission(PermissionState)\n  nameWithType: MediaPermission.MediaPermission(PermissionState)\n  fullName: MediaPermission.MediaPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: MediaPermission(MediaPermissionAudio, MediaPermissionVideo, MediaPermissionImage)\n  nameWithType: MediaPermission.MediaPermission(MediaPermissionAudio, MediaPermissionVideo, MediaPermissionImage)\n  fullName: MediaPermission.MediaPermission(MediaPermissionAudio, MediaPermissionVideo, MediaPermissionImage)\n- uid: System.Security.Permissions.MediaPermission.Audio\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: Audio\n  nameWithType: MediaPermission.Audio\n  fullName: MediaPermission.Audio\n- uid: System.Security.Permissions.MediaPermission.Copy\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: MediaPermission.Copy()\n  fullName: MediaPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.MediaPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: MediaPermission.FromXml(SecurityElement)\n  fullName: MediaPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Permissions.MediaPermission.Image\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: Image\n  nameWithType: MediaPermission.Image\n  fullName: MediaPermission.Image\n- uid: System.Security.Permissions.MediaPermission.Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: MediaPermission.Intersect(IPermission)\n  fullName: MediaPermission.Intersect(IPermission)\n- uid: System.Security.Permissions.MediaPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: MediaPermission.IsSubsetOf(IPermission)\n  fullName: MediaPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.MediaPermission.IsUnrestricted\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: MediaPermission.IsUnrestricted()\n  fullName: MediaPermission.IsUnrestricted()\n- uid: System.Security.Permissions.MediaPermission.ToXml\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: MediaPermission.ToXml()\n  fullName: MediaPermission.ToXml()\n- uid: System.Security.Permissions.MediaPermission.Union(System.Security.IPermission)\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: MediaPermission.Union(IPermission)\n  fullName: MediaPermission.Union(IPermission)\n- uid: System.Security.Permissions.MediaPermission.Video\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: Video\n  nameWithType: MediaPermission.Video\n  fullName: MediaPermission.Video\n- uid: System.Security.Permissions.MediaPermission.#ctor*\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: MediaPermission\n  nameWithType: MediaPermission.MediaPermission\n  fullName: MediaPermission.MediaPermission\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n- uid: System.Security.Permissions.MediaPermission.Audio*\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: Audio\n  nameWithType: MediaPermission.Audio\n  fullName: MediaPermission.Audio\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n- uid: System.Security.Permissions.MediaPermission.Copy*\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: Copy\n  nameWithType: MediaPermission.Copy\n  fullName: MediaPermission.Copy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n- uid: System.Security.Permissions.MediaPermission.FromXml*\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: FromXml\n  nameWithType: MediaPermission.FromXml\n  fullName: MediaPermission.FromXml\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n- uid: System.Security.Permissions.MediaPermission.Image*\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: Image\n  nameWithType: MediaPermission.Image\n  fullName: MediaPermission.Image\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n- uid: System.Security.Permissions.MediaPermission.Intersect*\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: Intersect\n  nameWithType: MediaPermission.Intersect\n  fullName: MediaPermission.Intersect\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n- uid: System.Security.Permissions.MediaPermission.IsSubsetOf*\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: MediaPermission.IsSubsetOf\n  fullName: MediaPermission.IsSubsetOf\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n- uid: System.Security.Permissions.MediaPermission.IsUnrestricted*\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: MediaPermission.IsUnrestricted\n  fullName: MediaPermission.IsUnrestricted\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n- uid: System.Security.Permissions.MediaPermission.ToXml*\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: ToXml\n  nameWithType: MediaPermission.ToXml\n  fullName: MediaPermission.ToXml\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n- uid: System.Security.Permissions.MediaPermission.Union*\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: Union\n  nameWithType: MediaPermission.Union\n  fullName: MediaPermission.Union\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n- uid: System.Security.Permissions.MediaPermission.Video*\n  parent: System.Security.Permissions.MediaPermission\n  isExternal: false\n  name: Video\n  nameWithType: MediaPermission.Video\n  fullName: MediaPermission.Video\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/MediaPermission.xml\n- uid: System.Security.CodeAccessPermission.Equals(System.Object)\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CodeAccessPermission.Equals(Object)\n  fullName: CodeAccessPermission.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Security.CodeAccessPermission.GetHashCode\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CodeAccessPermission.GetHashCode()\n  fullName: CodeAccessPermission.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Security.CodeAccessPermission.ToString\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: ToString()\n  nameWithType: CodeAccessPermission.ToString()\n  fullName: CodeAccessPermission.ToString()\n- uid: System.Security.CodeAccessPermission.Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Assert()\n  nameWithType: CodeAccessPermission.Assert()\n  fullName: CodeAccessPermission.Assert()\n- uid: System.Security.CodeAccessPermission.Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Demand()\n  nameWithType: CodeAccessPermission.Demand()\n  fullName: CodeAccessPermission.Demand()\n- uid: System.Security.CodeAccessPermission.Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Deny()\n  nameWithType: CodeAccessPermission.Deny()\n  fullName: CodeAccessPermission.Deny()\n- uid: System.Security.CodeAccessPermission.PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: PermitOnly()\n  nameWithType: CodeAccessPermission.PermitOnly()\n  fullName: CodeAccessPermission.PermitOnly()\n- uid: System.Security.CodeAccessPermission.RevertAll\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAll()\n  nameWithType: CodeAccessPermission.RevertAll()\n  fullName: CodeAccessPermission.RevertAll()\n- uid: System.Security.CodeAccessPermission.RevertAssert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAssert()\n  nameWithType: CodeAccessPermission.RevertAssert()\n  fullName: CodeAccessPermission.RevertAssert()\n- uid: System.Security.CodeAccessPermission.RevertDeny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertDeny()\n  nameWithType: CodeAccessPermission.RevertDeny()\n  fullName: CodeAccessPermission.RevertDeny()\n- uid: System.Security.CodeAccessPermission.RevertPermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertPermitOnly()\n  nameWithType: CodeAccessPermission.RevertPermitOnly()\n  fullName: CodeAccessPermission.RevertPermitOnly()\n- uid: System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IPermission.Demand()\n  nameWithType: CodeAccessPermission.IPermission.Demand()\n  fullName: CodeAccessPermission.IPermission.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Assert()\n  nameWithType: CodeAccessPermission.IStackWalk.Assert()\n  fullName: CodeAccessPermission.IStackWalk.Assert()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Demand()\n  nameWithType: CodeAccessPermission.IStackWalk.Demand()\n  fullName: CodeAccessPermission.IStackWalk.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Deny()\n  nameWithType: CodeAccessPermission.IStackWalk.Deny()\n  fullName: CodeAccessPermission.IStackWalk.Deny()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.PermitOnly()\n  nameWithType: CodeAccessPermission.IStackWalk.PermitOnly()\n  fullName: CodeAccessPermission.IStackWalk.PermitOnly()\n- uid: System.Security.Permissions.IUnrestrictedPermission\n  parent: System.Security.Permissions\n  isExternal: false\n  name: IUnrestrictedPermission\n  nameWithType: IUnrestrictedPermission\n  fullName: System.Security.Permissions.IUnrestrictedPermission\n"}