{"nodes":[{"content":"Provides a wrapper on a core XML signature object to facilitate creating XML signatures.","nodes":[{"pos":[0,88],"content":"Provides a wrapper on a core XML signature object to facilitate creating XML signatures.","nodes":[{"content":"Provides a wrapper on a core XML signature object to facilitate creating XML signatures.","pos":[0,88]}]}],"pos":[4443,4532],"yaml":true},{"content":"The <xref:System.Security.Cryptography.Xml.SignedXml> class is the .NET Framework implementation of the World Wide Web Consortium (W3C) [XML Signature Syntax and Processing Specification](http://www.w3.org/TR/xmldsig-core/), also known as XMLDSIG (XML Digital Signature).  XMLDSIG is a standards-based, interoperable way to sign and verify all or part of an XML document or other data that is addressable from a Uniform Resource Identifier (URI).  \n  \n Use the <xref:System.Security.Cryptography.Xml.SignedXml> class whenever you need to share signed XML data between applications or organizations in a standard way.  Any data signed using this class can be verified by any conforming implementation of the W3C specification for XMLDSIG.  \n  \n The <xref:System.Security.Cryptography.Xml.SignedXml> class allows you to create the following three kinds of XML digital signatures:  \n  \n|Signature Type|Description|  \n|--------------------|-----------------|  \n|Enveloped signature|The signature is contained within the XML element being signed.|  \n|Enveloping signature|The signed XML is contained within the <`Signature`> element.|  \n|Internal detached signature|The signature and signed XML are in the same document, but neither element contains the other.|  \n  \n There is also a fourth kind of signature called an external detached signature which is when the data and signature are in separate XML documents. External detached signatures are not supported by the <xref:System.Security.Cryptography.Xml.SignedXml> class.  \n  \n## The structure of an  XML Signature  \n XMLDSIG creates a <`Signature`> element, which contains a digital signature of an XML document or other data that is addressable from a URI.  The <`Signature`> element can optionally contain information about where to find a key that will verify the signature and which cryptographic algorithm was used for signing. The basic structure is as follows:  \n  \n```xml  \n  \n<Signature xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\">  \n    <SignedInfo>  \n      <CanonicalizationMethod Algorithm=\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\"/>  \n      <SignatureMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#rsa-sha1\"/>  \n      <Reference URI=\"\">  \n        <Transforms>  \n          <Transform Algorithm=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\"/>  \n        </Transforms>  \n        <DigestMethod Algorithm=\"http://www.w3.org/2000/09/xmldsig#sha1\"/>  \n        <DigestValue>Base64EncodedValue==</DigestValue>  \n      </Reference>  \n    </SignedInfo>  \n    <SignatureValue>AnotherBase64EncodedValue===</SignatureValue>  \n  </Signature>  \n  \n```  \n  \n The main parts of this structure are:  \n  \n The <`CanonicalizationMethod`> element  \n Specifies the rules for rewriting the `Signature` element from XML/text into bytes for signature validation. The default value in the .NET Framework is http://www.w3.org/TR/2001/REC-xml-c14n-20010315, which identifies a trustworthy algorithm. This element is represented by the <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A?displayProperty=fullName> property.  \n  \n The <`SignatureMethod`> element  \n Specifies the algorithm used for signature generation and validation, which was applied to the <`Signature`> element to produce the value in <`SignatureValue`>. In the example above, the value http://www.w3.org/2000/09/xmldsig#rsa-sha1 identifies an RSA PKCS1 SHA-1 signature. This element is represented by the <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> property.  \n  \n The <`SignatureValue`> element  \n Specifies the cryptographic signature for the <`Signature`> element. If this signature does not verify, then some portion of the <`Signature`> block was tampered with, and the document is considered invalid. As long as the <`CanonicalizationMethod`> value is trustworthy, this value is highly resistant to tampering. This element is represented by the <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> property.  \n  \n The `URI` attribute of the <`Reference`> element  \n Specifies a data object using a URI reference. This attribute is represented by the <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName> property.  \n  \n-   Not specifying the `URI` attribute, that is, setting the  <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName> property to `null`, means that the receiving application is expected to know the identity of the object. In most cases, a `null` URI will result in an exception being thrown. Do not use a `null` URI, unless your application is interoperating with a protocol which requires it.  \n  \n-   Setting the `URI` attribute to an empty string indicates that the root element of the document is being signed, a form of enveloped signature.  \n  \n-   If the value of `URI` attribute starts with #, then the value must resolve to an element in the current document. This form can be used with any of the supported signature types (enveloped signature, enveloping signature or internal detached signature).  \n  \n-   Anything else is considered an external resource detached signature and is not supported by the <xref:System.Security.Cryptography.Xml.SignedXml> class.  \n  \n The <`Transforms`> element  \n Contains an ordered list of <`Transform`> elements that describe how the signer obtained the data object that was digested. A transform algorithm is similar to the canonicalization method, but instead of rewriting the <`Signature`> element, it rewrites the content identified by the `URI` attribute of the <`Reference`> element. The <`Transforms`> element is represented by the <xref:System.Security.Cryptography.Xml.TransformChain> class.  \n  \n-   Each transform algorithm is defined as taking either XML (an XPath node-set) or bytes as input. If the format of the current data differs from the transform input requirements, conversion rules are applied.  \n  \n-   Each transform algorithm is defined as producing either XML or bytes as the output.  \n  \n-   If the output of the last transform algorithm is not defined in bytes (or no transforms were specified), then the canonicalization method http://www.w3.org/TR/2001/REC-xml-c14n-20010315 is used as an implicit transform (even if a different algorithm was specified in the <`CanonicalizationMethod`> element).  \n  \n-   A value of http://www.w3.org/2000/09/xmldsig#enveloped-signature for the transform algorithm encodes a rule which is interpreted as remove the <`Signature`> element from the document. Otherwise, a verifier of an enveloped signature will digest the document, including the signature, but the signer would have digested the document before the signature was applied, leading to different answers.  \n  \n The <`DigestMethod`> element  \n Identifies the digest (cryptographic hash) method to apply on the transformed content identified by the `URI` attribute of the <`Reference`> element. This is represented by the <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A?displayProperty=fullName> property.  \n  \n## Choosing a canonicalization method  \n Unless interoperating with a specification which requires the use of a different value, we recommend that you use the default canonicalization method in the .NET Framework which is the XML-C14N 1.0 algorithm, whose value is http://www.w3.org/TR/2001/REC-xml-c14n-20010315. The XML-C14N 1.0 algorithm is required to be supported by all implementations of XMLDSIG, particularly as it is an implicit final transform to apply.  \n  \n There are versions of canonicalization algorithms which support preserving comments. Comment-preserving canonicalization methods are not recommended because they violate the \"sign what is seen\" principle. That is, the comments in a <`Signature`> element will not alter the processing logic for how the signature is performed, merely what the signature value is. When combined with a weak signature algorithm, allowing the comments to be included gives an attacker unnecessary freedom to force a hash collision, making a tampered document appear legitimate.  In the .NET Framework, only built-in canonicalizers are supported by default. To support additional or custom canonicalizers, see the <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> property. If the document uses a canonicalization method that is not in the collection represented by the <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> property, then the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will return `false`.  \n  \n> [!NOTE]\n>  An extremely defensive application can remove any values it does not expect signers to use from the <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> collection.  \n  \n## Are the Reference values safe from tampering?  \n Yes, the <`Reference`> values are safe from tampering.  The .NET framework verifies the <`SignatureValue`> computation before processing any of the <`Reference`> values and their associated transforms, and will abort early to avoid potentially malicious processing instructions.  \n  \n## Choosing the elements to sign  \n We recommend that you use the value of \"\" for the `URI` attribute (or set the <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> property to an empty string), if possible. This means the whole document is considered for the digest computation, which means the whole document is protected from tampering.  \n  \n It is very common to see `URI` values in the form of anchors such as #foo, referring to an element whose ID attribute is \"foo\". Unfortunately, it is easy for this to be tampered with because this includes only the content of the target element, not the context. Abusing this distinction is known as XML Signature Wrapping (XSW).  \n  \n If your application considers comments to be semantic (which is not common when dealing with XML), then you should use \"#xpointer(/)\" instead of \"\", and \"#xpointer(id('foo'))\" instead of \"#foo\". The #xpointer versions are interpreted as including comments, while the shortname forms are excluding comments.  \n  \n If you need to accept documents which are only partially protected and you want to ensure that you are reading the same content that the signature protected, use the <xref:System.Security.Cryptography.Xml.SignedXml.GetIdElement%2A> method.  \n  \n## Security considerations about the KeyInfo element  \n The data in the optional <`KeyInfo`> element (that is, the <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> property), which contains a key to validate the signature,  should not be trusted.  \n  \n In particular, when the <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> value represents a bare RSA, DSA or ECDSA public key,  the document could have been tampered with, despite the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method reporting that the signature is valid.  This can happen because the entity doing the tampering just has to generate a new key and re-sign the tampered document with that new key. So, unless your application verifies that the public key is an expected value, the document should be treated as if it were tampered with. This requires that your application examine the public key embedded within the document and verify it against a list of known values for the document context. For example, if the document could be understood to be issued by a known user, you'd check the key against a list of known keys used by that user.  \n  \n You can also verify the key after processing the document by using the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey%2A> method, instead of using the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method. But, for the optimal security, you should verify the key beforehand.  \n  \n Alternately, consider trying the user's registered public keys, rather than reading what's in the <`KeyInfo`> element.  \n  \n## Security considerations about the X509Data element  \n The optional <`X509Data`> element is a child of the <`KeyInfo`> element and contains one or more X509 certificates or identifiers for X509 certificates. The data in the <`X509Data`> element should also not be inherently trusted.  \n  \n When verifying a document with the embedded <`X509Data`> element, the .NET Framework verifies only that the data resolves to an X509 certificate whose public key can be successfully used to validate the document signature. Unlike calling the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method with the `verifySignatureOnly` parameter set to `false`, no revocation check is performed, no chain trust is checked, and no expiration is verified. Even if your application extracts the certificate itself and passes it to the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method with the `verifySignatureOnly` parameter set to `false`, that is still not sufficient validation to prevent document tampering. The certificate still needs to be verified as being appropriate for the document being signed.  \n  \n Using an embedded signing certificate can provide useful key rotation strategies, whether in the <`X509Data`> section or in the document content. When using this approach an application should extract the certificate manually and perform validation similar to:  \n  \n-   The certificate was issued directly or via a chain by a Certificate Authority (CA) whose public certificate is embedded in the application.  \n  \n     Using the OS-provided trust list without additional checks, such as a known subject name, is not sufficient to prevent tampering in <xref:System.Security.Cryptography.Xml.SignedXml>.  \n  \n-   The certificate is verified to have not been expired at the time of document signing (or \"now\" for near real-time document processing).  \n  \n-   For long-lived certificates issued by a CA which supports revocation, verify the certificate was not revoked.  \n  \n-   The certificate subject is verified as being appropriate to the current document.  \n  \n## Choosing the transform algorithm  \n If you are interoperating with a specification which has dictated specific values (such as XrML), then you need to follow the specification.  If you have an enveloped signature (such as when signing the whole document), then you need to use http://www.w3.org/2000/09/xmldsig#enveloped-signature (represented by the <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class). You can specify the implicit XML-C14N transform as well, but it's not necessary.  For an enveloping or detached signature, no transforms are required. The implicit XML-C14N transform takes care of everything.  \n  \n With the security updated introduced by the [Microsoft Security Bulletin MS16-035](https://technet.microsoft.com/en-us/library/security/ms16-035.aspx), the .NET Framework has restricted what transforms can be used in document verification by default, with untrusted transforms causing <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> to always return `false`. In particular, transforms which require additional input (specified as child elements in the XML) are no longer allowed due to their susceptibility of abuse by malicious users. The W3C advises avoiding the XPath and XSLT transforms, which are the two main transforms affected by these restrictions.  \n  \n## The problem with external references  \n If an application does not verify that external references seem appropriate for the current context, they can be abused in ways that provide for many security vulnerabilities (including Denial of Service, Distributed Reflection Denial of Service, Information Disclosure, Signature Bypass, and Remote Code Execution). Even if an application were to validate the external reference URI, there would remain a problem of the resource being loaded twice: once when your application reads it, and once when <xref:System.Security.Cryptography.Xml.SignedXml> reads it. Since there’s no guarantee that the application read and document verify steps have the same content, the signature does not provide trustworthiness.  \n  \n Given the risks of external references, <xref:System.Security.Cryptography.Xml.SignedXml> will throw an exception when an external reference is encountered.  For more information about this issue, see [KB article 3148821](https://support.microsoft.com/en-us/kb/3148821).","nodes":[{"pos":[0,446],"content":"The <xref:System.Security.Cryptography.Xml.SignedXml> class is the .NET Framework implementation of the World Wide Web Consortium (W3C) [XML Signature Syntax and Processing Specification](http://www.w3.org/TR/xmldsig-core/), also known as XMLDSIG (XML Digital Signature).  XMLDSIG is a standards-based, interoperable way to sign and verify all or part of an XML document or other data that is addressable from a Uniform Resource Identifier (URI).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml&gt;</ph> class is the .NET Framework implementation of the World Wide Web Consortium (W3C) <bpt id=\"p1\">[</bpt>XML Signature Syntax and Processing Specification<ept id=\"p1\">](http://www.w3.org/TR/xmldsig-core/)</ept>, also known as XMLDSIG (XML Digital Signature).","pos":[0,271],"source":"The <xref:System.Security.Cryptography.Xml.SignedXml> class is the .NET Framework implementation of the World Wide Web Consortium (W3C) [XML Signature Syntax and Processing Specification](http://www.w3.org/TR/xmldsig-core/), also known as XMLDSIG (XML Digital Signature)."},{"content":"XMLDSIG is a standards-based, interoperable way to sign and verify all or part of an XML document or other data that is addressable from a Uniform Resource Identifier (URI).","pos":[273,446]}]},{"pos":[453,737],"content":"Use the <xref:System.Security.Cryptography.Xml.SignedXml> class whenever you need to share signed XML data between applications or organizations in a standard way.  Any data signed using this class can be verified by any conforming implementation of the W3C specification for XMLDSIG.","nodes":[{"content":"Use the <xref:System.Security.Cryptography.Xml.SignedXml> class whenever you need to share signed XML data between applications or organizations in a standard way.  Any data signed using this class can be verified by any conforming implementation of the W3C specification for XMLDSIG.","pos":[0,284],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml&gt;</ph> class whenever you need to share signed XML data between applications or organizations in a standard way.","pos":[0,163],"source":"Use the <xref:System.Security.Cryptography.Xml.SignedXml> class whenever you need to share signed XML data between applications or organizations in a standard way."},{"content":"Any data signed using this class can be verified by any conforming implementation of the W3C specification for XMLDSIG.","pos":[165,284]}]}]},{"pos":[744,877],"content":"The <xref:System.Security.Cryptography.Xml.SignedXml> class allows you to create the following three kinds of XML digital signatures:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml&gt;</ph> class allows you to create the following three kinds of XML digital signatures:","pos":[0,133],"source":"The <xref:System.Security.Cryptography.Xml.SignedXml> class allows you to create the following three kinds of XML digital signatures:"}]},{"pos":[884,898],"content":"Signature Type","nodes":[{"content":"Signature Type","pos":[0,14]}]},{"pos":[899,910],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[958,977],"content":"Enveloped signature","nodes":[{"content":"Enveloped signature","pos":[0,19]}]},{"pos":[978,1041],"content":"The signature is contained within the XML element being signed.","nodes":[{"content":"The signature is contained within the XML element being signed.","pos":[0,63]}]},{"pos":[1046,1066],"content":"Enveloping signature","nodes":[{"content":"Enveloping signature","pos":[0,20]}]},{"pos":[1067,1128],"content":"The signed XML is contained within the &lt;<ph id=\"ph1\">`Signature`</ph>&gt; element.","source":"The signed XML is contained within the <`Signature`> element."},{"pos":[1133,1160],"content":"Internal detached signature","nodes":[{"content":"Internal detached signature","pos":[0,27]}]},{"pos":[1161,1255],"content":"The signature and signed XML are in the same document, but neither element contains the other.","nodes":[{"content":"The signature and signed XML are in the same document, but neither element contains the other.","pos":[0,94]}]},{"pos":[1263,1520],"content":"There is also a fourth kind of signature called an external detached signature which is when the data and signature are in separate XML documents. External detached signatures are not supported by the <xref:System.Security.Cryptography.Xml.SignedXml> class.","nodes":[{"content":"There is also a fourth kind of signature called an external detached signature which is when the data and signature are in separate XML documents. External detached signatures are not supported by the <xref:System.Security.Cryptography.Xml.SignedXml> class.","pos":[0,257],"nodes":[{"content":"There is also a fourth kind of signature called an external detached signature which is when the data and signature are in separate XML documents.","pos":[0,146]},{"content":"External detached signatures are not supported by the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml&gt;</ph> class.","pos":[147,257],"source":" External detached signatures are not supported by the <xref:System.Security.Cryptography.Xml.SignedXml> class."}]}]},{"pos":[1529,1563],"content":"The structure of an  XML Signature","linkify":"The structure of an  XML Signature","nodes":[{"content":"The structure of an  XML Signature","pos":[0,34]}]},{"pos":[1567,1917],"content":"XMLDSIG creates a <`Signature`> element, which contains a digital signature of an XML document or other data that is addressable from a URI.  The <`Signature`> element can optionally contain information about where to find a key that will verify the signature and which cryptographic algorithm was used for signing. The basic structure is as follows:","nodes":[{"content":"XMLDSIG creates a &lt;<ph id=\"ph1\">`Signature`</ph>&gt; element, which contains a digital signature of an XML document or other data that is addressable from a URI.","pos":[0,140],"source":"XMLDSIG creates a <`Signature`> element, which contains a digital signature of an XML document or other data that is addressable from a URI."},{"content":"The &lt;<ph id=\"ph1\">`Signature`</ph>&gt; element can optionally contain information about where to find a key that will verify the signature and which cryptographic algorithm was used for signing.","pos":[142,315],"source":"  The <`Signature`> element can optionally contain information about where to find a key that will verify the signature and which cryptographic algorithm was used for signing."},{"content":"The basic structure is as follows:","pos":[316,350]}]},{"pos":[2629,2666],"content":"The main parts of this structure are:","nodes":[{"content":"The main parts of this structure are:","pos":[0,37]}]},{"pos":[2673,3104],"content":"The <`CanonicalizationMethod`> element  \n Specifies the rules for rewriting the `Signature` element from XML/text into bytes for signature validation. The default value in the .NET Framework is http://www.w3.org/TR/2001/REC-xml-c14n-20010315, which identifies a trustworthy algorithm. This element is represented by the <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A?displayProperty=fullName> property.","nodes":[{"content":"The &lt;<ph id=\"ph1\">`CanonicalizationMethod`</ph>&gt; element","pos":[0,38],"source":"The <`CanonicalizationMethod`> element"},{"content":" Specifies the rules for rewriting the `Signature` element from XML/text into bytes for signature validation. The default value in the .NET Framework is http://www.w3.org/TR/2001/REC-xml-c14n-20010315, which identifies a trustworthy algorithm. This element is represented by the <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A?displayProperty=fullName> property.","pos":[41,431],"nodes":[{"content":"Specifies the rules for rewriting the <ph id=\"ph1\">`Signature`</ph> element from XML/text into bytes for signature validation.","pos":[1,109],"source":" Specifies the rules for rewriting the `Signature` element from XML/text into bytes for signature validation."},{"content":"The default value in the .NET Framework is http://www.w3.org/TR/2001/REC-xml-c14n-20010315, which identifies a trustworthy algorithm.","pos":[110,243]},{"content":"This element is represented by the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A?displayProperty=fullName&gt;</ph> property.","pos":[244,390],"source":" This element is represented by the <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A?displayProperty=fullName> property."}]}]},{"pos":[3111,3536],"content":"The <`SignatureMethod`> element  \n Specifies the algorithm used for signature generation and validation, which was applied to the <`Signature`> element to produce the value in <`SignatureValue`>. In the example above, the value http://www.w3.org/2000/09/xmldsig#rsa-sha1 identifies an RSA PKCS1 SHA-1 signature. This element is represented by the <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> property.","nodes":[{"content":"The &lt;<ph id=\"ph1\">`SignatureMethod`</ph>&gt; element","pos":[0,31],"source":"The <`SignatureMethod`> element"},{"content":" Specifies the algorithm used for signature generation and validation, which was applied to the <`Signature`> element to produce the value in <`SignatureValue`>. In the example above, the value http://www.w3.org/2000/09/xmldsig#rsa-sha1 identifies an RSA PKCS1 SHA-1 signature. This element is represented by the <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> property.","pos":[34,425],"nodes":[{"content":"Specifies the algorithm used for signature generation and validation, which was applied to the &lt;<ph id=\"ph1\">`Signature`</ph>&gt; element to produce the value in &lt;<ph id=\"ph2\">`SignatureValue`</ph>&gt;.","pos":[1,161],"source":" Specifies the algorithm used for signature generation and validation, which was applied to the <`Signature`> element to produce the value in <`SignatureValue`>."},{"content":"In the example above, the value http://www.w3.org/2000/09/xmldsig#rsa-sha1 identifies an RSA PKCS1 SHA-1 signature.","pos":[162,277]},{"content":"This element is represented by the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A&gt;</ph> property.","pos":[278,391],"source":" This element is represented by the <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> property."}]}]},{"pos":[3543,4006],"content":"The <`SignatureValue`> element  \n Specifies the cryptographic signature for the <`Signature`> element. If this signature does not verify, then some portion of the <`Signature`> block was tampered with, and the document is considered invalid. As long as the <`CanonicalizationMethod`> value is trustworthy, this value is highly resistant to tampering. This element is represented by the <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> property.","nodes":[{"content":"The &lt;<ph id=\"ph1\">`SignatureValue`</ph>&gt; element","pos":[0,30],"source":"The <`SignatureValue`> element"},{"content":" Specifies the cryptographic signature for the <`Signature`> element. If this signature does not verify, then some portion of the <`Signature`> block was tampered with, and the document is considered invalid. As long as the <`CanonicalizationMethod`> value is trustworthy, this value is highly resistant to tampering. This element is represented by the <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> property.","pos":[33,463],"nodes":[{"content":"Specifies the cryptographic signature for the &lt;<ph id=\"ph1\">`Signature`</ph>&gt; element.","pos":[1,69],"source":" Specifies the cryptographic signature for the <`Signature`> element."},{"content":"If this signature does not verify, then some portion of the &lt;<ph id=\"ph1\">`Signature`</ph>&gt; block was tampered with, and the document is considered invalid.","pos":[70,208],"source":" If this signature does not verify, then some portion of the <`Signature`> block was tampered with, and the document is considered invalid."},{"content":"As long as the &lt;<ph id=\"ph1\">`CanonicalizationMethod`</ph>&gt; value is trustworthy, this value is highly resistant to tampering.","pos":[209,317],"source":" As long as the <`CanonicalizationMethod`> value is trustworthy, this value is highly resistant to tampering."},{"content":"This element is represented by the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A&gt;</ph> property.","pos":[318,430],"source":" This element is represented by the <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> property."}]}]},{"pos":[4013,4240],"content":"The `URI` attribute of the <`Reference`> element  \n Specifies a data object using a URI reference. This attribute is represented by the <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName> property.","nodes":[{"content":"The <ph id=\"ph1\">`URI`</ph> attribute of the &lt;<ph id=\"ph2\">`Reference`</ph>&gt; element","pos":[0,48],"source":"The `URI` attribute of the <`Reference`> element"},{"content":" Specifies a data object using a URI reference. This attribute is represented by the <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName> property.","pos":[51,227],"nodes":[{"content":"Specifies a data object using a URI reference.","pos":[1,47]},{"content":"This attribute is represented by the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName&gt;</ph> property.","pos":[48,176],"source":" This attribute is represented by the <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName> property."}]}]},{"pos":[4250,4666],"content":"Not specifying the `URI` attribute, that is, setting the  <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName> property to `null`, means that the receiving application is expected to know the identity of the object. In most cases, a `null` URI will result in an exception being thrown. Do not use a `null` URI, unless your application is interoperating with a protocol which requires it.","nodes":[{"content":"Not specifying the <ph id=\"ph1\">`URI`</ph> attribute, that is, setting the  <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName&gt;</ph> property to <ph id=\"ph3\">`null`</ph>, means that the receiving application is expected to know the identity of the object.","pos":[0,244],"source":"Not specifying the `URI` attribute, that is, setting the  <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName> property to `null`, means that the receiving application is expected to know the identity of the object."},{"content":"In most cases, a <ph id=\"ph1\">`null`</ph> URI will result in an exception being thrown.","pos":[245,314],"source":" In most cases, a `null` URI will result in an exception being thrown."},{"content":"Do not use a <ph id=\"ph1\">`null`</ph> URI, unless your application is interoperating with a protocol which requires it.","pos":[315,416],"source":" Do not use a `null` URI, unless your application is interoperating with a protocol which requires it."}]},{"pos":[4676,4818],"content":"Setting the <ph id=\"ph1\">`URI`</ph> attribute to an empty string indicates that the root element of the document is being signed, a form of enveloped signature.","source":"Setting the `URI` attribute to an empty string indicates that the root element of the document is being signed, a form of enveloped signature."},{"pos":[4828,5081],"content":"If the value of `URI` attribute starts with #, then the value must resolve to an element in the current document. This form can be used with any of the supported signature types (enveloped signature, enveloping signature or internal detached signature).","nodes":[{"content":"If the value of <ph id=\"ph1\">`URI`</ph> attribute starts with #, then the value must resolve to an element in the current document.","pos":[0,113],"source":"If the value of `URI` attribute starts with #, then the value must resolve to an element in the current document."},{"content":"This form can be used with any of the supported signature types (enveloped signature, enveloping signature or internal detached signature).","pos":[114,253]}]},{"pos":[5091,5243],"content":"Anything else is considered an external resource detached signature and is not supported by the <xref:System.Security.Cryptography.Xml.SignedXml> class.","nodes":[{"content":"Anything else is considered an external resource detached signature and is not supported by the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml&gt;</ph> class.","pos":[0,152],"source":"Anything else is considered an external resource detached signature and is not supported by the <xref:System.Security.Cryptography.Xml.SignedXml> class."}]},{"pos":[5250,5719],"content":"The <`Transforms`> element  \nContains an ordered list of <`Transform`> elements that describe how the signer obtained the data object that was digested. A transform algorithm is similar to the canonicalization method, but instead of rewriting the <`Signature`> element, it rewrites the content identified by the `URI` attribute of the <`Reference`> element. The <`Transforms`> element is represented by the <xref:System.Security.Cryptography.Xml.TransformChain> class.","leadings":[""," "],"nodes":[{"content":"The &lt;<ph id=\"ph1\">`Transforms`</ph>&gt; element","pos":[0,26],"source":"The <`Transforms`> element"},{"content":"Contains an ordered list of <`Transform`> elements that describe how the signer obtained the data object that was digested. A transform algorithm is similar to the canonicalization method, but instead of rewriting the <`Signature`> element, it rewrites the content identified by the `URI` attribute of the <`Reference`> element. The <`Transforms`> element is represented by the <xref:System.Security.Cryptography.Xml.TransformChain> class.","pos":[29,468],"nodes":[{"content":"Contains an ordered list of &lt;<ph id=\"ph1\">`Transform`</ph>&gt; elements that describe how the signer obtained the data object that was digested.","pos":[0,123],"source":"Contains an ordered list of <`Transform`> elements that describe how the signer obtained the data object that was digested."},{"content":"A transform algorithm is similar to the canonicalization method, but instead of rewriting the &lt;<ph id=\"ph1\">`Signature`</ph>&gt; element, it rewrites the content identified by the <ph id=\"ph2\">`URI`</ph> attribute of the &lt;<ph id=\"ph3\">`Reference`</ph>&gt; element.","pos":[124,328],"source":" A transform algorithm is similar to the canonicalization method, but instead of rewriting the <`Signature`> element, it rewrites the content identified by the `URI` attribute of the <`Reference`> element."},{"content":"The &lt;<ph id=\"ph1\">`Transforms`</ph>&gt; element is represented by the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.TransformChain&gt;</ph> class.","pos":[329,439],"source":" The <`Transforms`> element is represented by the <xref:System.Security.Cryptography.Xml.TransformChain> class."}]}]},{"pos":[5729,5935],"content":"Each transform algorithm is defined as taking either XML (an XPath node-set) or bytes as input. If the format of the current data differs from the transform input requirements, conversion rules are applied.","nodes":[{"content":"Each transform algorithm is defined as taking either XML (an XPath node-set) or bytes as input. If the format of the current data differs from the transform input requirements, conversion rules are applied.","pos":[0,206],"nodes":[{"content":"Each transform algorithm is defined as taking either XML (an XPath node-set) or bytes as input.","pos":[0,95]},{"content":"If the format of the current data differs from the transform input requirements, conversion rules are applied.","pos":[96,206]}]}]},{"pos":[5945,6028],"content":"Each transform algorithm is defined as producing either XML or bytes as the output.","nodes":[{"content":"Each transform algorithm is defined as producing either XML or bytes as the output.","pos":[0,83]}]},{"pos":[6038,6345],"content":"If the output of the last transform algorithm is not defined in bytes (or no transforms were specified), then the canonicalization method http://www.w3.org/TR/2001/REC-xml-c14n-20010315 is used as an implicit transform (even if a different algorithm was specified in the &lt;<ph id=\"ph1\">`CanonicalizationMethod`</ph>&gt; element).","source":"If the output of the last transform algorithm is not defined in bytes (or no transforms were specified), then the canonicalization method http://www.w3.org/TR/2001/REC-xml-c14n-20010315 is used as an implicit transform (even if a different algorithm was specified in the <`CanonicalizationMethod`> element)."},{"pos":[6355,6749],"content":"A value of http://www.w3.org/2000/09/xmldsig#enveloped-signature for the transform algorithm encodes a rule which is interpreted as remove the <`Signature`> element from the document. Otherwise, a verifier of an enveloped signature will digest the document, including the signature, but the signer would have digested the document before the signature was applied, leading to different answers.","nodes":[{"content":"A value of http://www.w3.org/2000/09/xmldsig#enveloped-signature for the transform algorithm encodes a rule which is interpreted as remove the &lt;<ph id=\"ph1\">`Signature`</ph>&gt; element from the document.","pos":[0,183],"source":"A value of http://www.w3.org/2000/09/xmldsig#enveloped-signature for the transform algorithm encodes a rule which is interpreted as remove the <`Signature`> element from the document."},{"content":"Otherwise, a verifier of an enveloped signature will digest the document, including the signature, but the signer would have digested the document before the signature was applied, leading to different answers.","pos":[184,394]}]},{"pos":[6756,7065],"content":"The <`DigestMethod`> element  \nIdentifies the digest (cryptographic hash) method to apply on the transformed content identified by the `URI` attribute of the <`Reference`> element. This is represented by the <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A?displayProperty=fullName> property.","leadings":[""," "],"nodes":[{"content":"The &lt;<ph id=\"ph1\">`DigestMethod`</ph>&gt; element","pos":[0,28],"source":"The <`DigestMethod`> element"},{"content":"Identifies the digest (cryptographic hash) method to apply on the transformed content identified by the `URI` attribute of the <`Reference`> element. This is represented by the <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A?displayProperty=fullName> property.","pos":[31,308],"nodes":[{"content":"Identifies the digest (cryptographic hash) method to apply on the transformed content identified by the <ph id=\"ph1\">`URI`</ph> attribute of the &lt;<ph id=\"ph2\">`Reference`</ph>&gt; element.","pos":[0,149],"source":"Identifies the digest (cryptographic hash) method to apply on the transformed content identified by the `URI` attribute of the <`Reference`> element."},{"content":"This is represented by the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A?displayProperty=fullName&gt;</ph> property.","pos":[150,277],"source":" This is represented by the <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A?displayProperty=fullName> property."}]}]},{"pos":[7074,7108],"content":"Choosing a canonicalization method","linkify":"Choosing a canonicalization method","nodes":[{"content":"Choosing a canonicalization method","pos":[0,34]}]},{"pos":[7112,7534],"content":"Unless interoperating with a specification which requires the use of a different value, we recommend that you use the default canonicalization method in the .NET Framework which is the XML-C14N 1.0 algorithm, whose value is http://www.w3.org/TR/2001/REC-xml-c14n-20010315. The XML-C14N 1.0 algorithm is required to be supported by all implementations of XMLDSIG, particularly as it is an implicit final transform to apply.","nodes":[{"content":"Unless interoperating with a specification which requires the use of a different value, we recommend that you use the default canonicalization method in the .NET Framework which is the XML-C14N 1.0 algorithm, whose value is http://www.w3.org/TR/2001/REC-xml-c14n-20010315. The XML-C14N 1.0 algorithm is required to be supported by all implementations of XMLDSIG, particularly as it is an implicit final transform to apply.","pos":[0,422],"nodes":[{"content":"Unless interoperating with a specification which requires the use of a different value, we recommend that you use the default canonicalization method in the .NET Framework which is the XML-C14N 1.0 algorithm, whose value is http://www.w3.org/TR/2001/REC-xml-c14n-20010315.","pos":[0,272]},{"content":"The XML-C14N 1.0 algorithm is required to be supported by all implementations of XMLDSIG, particularly as it is an implicit final transform to apply.","pos":[273,422]}]}]},{"pos":[7541,8615],"content":"There are versions of canonicalization algorithms which support preserving comments. Comment-preserving canonicalization methods are not recommended because they violate the \"sign what is seen\" principle. That is, the comments in a <`Signature`> element will not alter the processing logic for how the signature is performed, merely what the signature value is. When combined with a weak signature algorithm, allowing the comments to be included gives an attacker unnecessary freedom to force a hash collision, making a tampered document appear legitimate.  In the .NET Framework, only built-in canonicalizers are supported by default. To support additional or custom canonicalizers, see the <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> property. If the document uses a canonicalization method that is not in the collection represented by the <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> property, then the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will return `false`.","nodes":[{"content":"There are versions of canonicalization algorithms which support preserving comments.","pos":[0,84]},{"content":"Comment-preserving canonicalization methods are not recommended because they violate the \"sign what is seen\" principle.","pos":[85,204]},{"content":"That is, the comments in a &lt;<ph id=\"ph1\">`Signature`</ph>&gt; element will not alter the processing logic for how the signature is performed, merely what the signature value is.","pos":[205,361],"source":" That is, the comments in a <`Signature`> element will not alter the processing logic for how the signature is performed, merely what the signature value is."},{"content":"When combined with a weak signature algorithm, allowing the comments to be included gives an attacker unnecessary freedom to force a hash collision, making a tampered document appear legitimate.","pos":[362,556]},{"content":"In the .NET Framework, only built-in canonicalizers are supported by default.","pos":[558,635]},{"content":"To support additional or custom canonicalizers, see the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A&gt;</ph> property.","pos":[636,782],"source":" To support additional or custom canonicalizers, see the <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> property."},{"content":"If the document uses a canonicalization method that is not in the collection represented by the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A&gt;</ph> property, then the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A&gt;</ph> method will return <ph id=\"ph3\">`false`</ph>.","pos":[783,1074],"source":" If the document uses a canonicalization method that is not in the collection represented by the <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> property, then the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will return `false`."}]},{"pos":[8623,8826],"content":"[!NOTE]\n An extremely defensive application can remove any values it does not expect signers to use from the <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> collection.","leadings":["","> "],"nodes":[{"content":"An extremely defensive application can remove any values it does not expect signers to use from the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A&gt;</ph> collection.","pos":[9,201],"source":" An extremely defensive application can remove any values it does not expect signers to use from the <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> collection."}]},{"pos":[8835,8880],"content":"Are the Reference values safe from tampering?","linkify":"Are the Reference values safe from tampering?","nodes":[{"content":"Are the Reference values safe from tampering?","pos":[0,45]}]},{"pos":[8884,9162],"content":"Yes, the <`Reference`> values are safe from tampering.  The .NET framework verifies the <`SignatureValue`> computation before processing any of the <`Reference`> values and their associated transforms, and will abort early to avoid potentially malicious processing instructions.","nodes":[{"content":"Yes, the &lt;<ph id=\"ph1\">`Reference`</ph>&gt; values are safe from tampering.","pos":[0,54],"source":"Yes, the <`Reference`> values are safe from tampering."},{"content":"The .NET framework verifies the &lt;<ph id=\"ph1\">`SignatureValue`</ph>&gt; computation before processing any of the &lt;<ph id=\"ph2\">`Reference`</ph>&gt; values and their associated transforms, and will abort early to avoid potentially malicious processing instructions.","pos":[56,278],"source":"  The .NET framework verifies the <`SignatureValue`> computation before processing any of the <`Reference`> values and their associated transforms, and will abort early to avoid potentially malicious processing instructions."}]},{"pos":[9171,9200],"content":"Choosing the elements to sign","linkify":"Choosing the elements to sign","nodes":[{"content":"Choosing the elements to sign","pos":[0,29]}]},{"pos":[9204,9513],"content":"We recommend that you use the value of \"\" for the `URI` attribute (or set the <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> property to an empty string), if possible. This means the whole document is considered for the digest computation, which means the whole document is protected from tampering.","nodes":[{"content":"We recommend that you use the value of \"\" for the <ph id=\"ph1\">`URI`</ph> attribute (or set the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.Reference.Uri%2A&gt;</ph> property to an empty string), if possible.","pos":[0,177],"source":"We recommend that you use the value of \"\" for the `URI` attribute (or set the <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> property to an empty string), if possible."},{"content":"This means the whole document is considered for the digest computation, which means the whole document is protected from tampering.","pos":[178,309]}]},{"pos":[9520,9848],"content":"It is very common to see `URI` values in the form of anchors such as #foo, referring to an element whose ID attribute is \"foo\". Unfortunately, it is easy for this to be tampered with because this includes only the content of the target element, not the context. Abusing this distinction is known as XML Signature Wrapping (XSW).","nodes":[{"content":"It is very common to see <ph id=\"ph1\">`URI`</ph> values in the form of anchors such as #foo, referring to an element whose ID attribute is \"foo\".","pos":[0,127],"source":"It is very common to see `URI` values in the form of anchors such as #foo, referring to an element whose ID attribute is \"foo\"."},{"content":"Unfortunately, it is easy for this to be tampered with because this includes only the content of the target element, not the context.","pos":[128,261]},{"content":"Abusing this distinction is known as XML Signature Wrapping (XSW).","pos":[262,328]}]},{"pos":[9855,10161],"content":"If your application considers comments to be semantic (which is not common when dealing with XML), then you should use \"#xpointer(/)\" instead of \"\", and \"#xpointer(id('foo'))\" instead of \"#foo\". The #xpointer versions are interpreted as including comments, while the shortname forms are excluding comments.","nodes":[{"content":"If your application considers comments to be semantic (which is not common when dealing with XML), then you should use \"#xpointer(/)\" instead of \"\", and \"#xpointer(id('foo'))\" instead of \"#foo\". The #xpointer versions are interpreted as including comments, while the shortname forms are excluding comments.","pos":[0,306],"nodes":[{"content":"If your application considers comments to be semantic (which is not common when dealing with XML), then you should use \"#xpointer(/)\" instead of \"\", and \"#xpointer(id('foo'))\" instead of \"#foo\".","pos":[0,194]},{"content":"The #xpointer versions are interpreted as including comments, while the shortname forms are excluding comments.","pos":[195,306]}]}]},{"pos":[10168,10407],"content":"If you need to accept documents which are only partially protected and you want to ensure that you are reading the same content that the signature protected, use the <xref:System.Security.Cryptography.Xml.SignedXml.GetIdElement%2A> method.","nodes":[{"content":"If you need to accept documents which are only partially protected and you want to ensure that you are reading the same content that the signature protected, use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.GetIdElement%2A&gt;</ph> method.","pos":[0,239],"source":"If you need to accept documents which are only partially protected and you want to ensure that you are reading the same content that the signature protected, use the <xref:System.Security.Cryptography.Xml.SignedXml.GetIdElement%2A> method."}]},{"pos":[10416,10465],"content":"Security considerations about the KeyInfo element","linkify":"Security considerations about the KeyInfo element","nodes":[{"content":"Security considerations about the KeyInfo element","pos":[0,49]}]},{"pos":[10469,10671],"content":"The data in the optional &lt;<ph id=\"ph1\">`KeyInfo`</ph>&gt; element (that is, the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A&gt;</ph> property), which contains a key to validate the signature,  should not be trusted.","source":"The data in the optional <`KeyInfo`> element (that is, the <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> property), which contains a key to validate the signature,  should not be trusted."},{"pos":[10678,11572],"content":"In particular, when the <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> value represents a bare RSA, DSA or ECDSA public key,  the document could have been tampered with, despite the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method reporting that the signature is valid.  This can happen because the entity doing the tampering just has to generate a new key and re-sign the tampered document with that new key. So, unless your application verifies that the public key is an expected value, the document should be treated as if it were tampered with. This requires that your application examine the public key embedded within the document and verify it against a list of known values for the document context. For example, if the document could be understood to be issued by a known user, you'd check the key against a list of known keys used by that user.","nodes":[{"content":"In particular, when the <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> value represents a bare RSA, DSA or ECDSA public key,  the document could have been tampered with, despite the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method reporting that the signature is valid.  This can happen because the entity doing the tampering just has to generate a new key and re-sign the tampered document with that new key. So, unless your application verifies that the public key is an expected value, the document should be treated as if it were tampered with. This requires that your application examine the public key embedded within the document and verify it against a list of known values for the document context. For example, if the document could be understood to be issued by a known user, you'd check the key against a list of known keys used by that user.","pos":[0,894],"nodes":[{"content":"In particular, when the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A&gt;</ph> value represents a bare RSA, DSA or ECDSA public key,  the document could have been tampered with, despite the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A&gt;</ph> method reporting that the signature is valid.","pos":[0,309],"source":"In particular, when the <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> value represents a bare RSA, DSA or ECDSA public key,  the document could have been tampered with, despite the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method reporting that the signature is valid."},{"content":"This can happen because the entity doing the tampering just has to generate a new key and re-sign the tampered document with that new key.","pos":[311,449]},{"content":"So, unless your application verifies that the public key is an expected value, the document should be treated as if it were tampered with.","pos":[450,588]},{"content":"This requires that your application examine the public key embedded within the document and verify it against a list of known values for the document context.","pos":[589,747]},{"content":"For example, if the document could be understood to be issued by a known user, you'd check the key against a list of known keys used by that user.","pos":[748,894]}]}]},{"pos":[11579,11903],"content":"You can also verify the key after processing the document by using the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey%2A> method, instead of using the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method. But, for the optimal security, you should verify the key beforehand.","nodes":[{"content":"You can also verify the key after processing the document by using the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey%2A> method, instead of using the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method. But, for the optimal security, you should verify the key beforehand.","pos":[0,324],"nodes":[{"content":"You can also verify the key after processing the document by using the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey%2A&gt;</ph> method, instead of using the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A&gt;</ph> method.","pos":[0,255],"source":"You can also verify the key after processing the document by using the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey%2A> method, instead of using the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method."},{"content":"But, for the optimal security, you should verify the key beforehand.","pos":[256,324]}]}]},{"pos":[11910,12028],"content":"Alternately, consider trying the user's registered public keys, rather than reading what's in the &lt;<ph id=\"ph1\">`KeyInfo`</ph>&gt; element.","source":"Alternately, consider trying the user's registered public keys, rather than reading what's in the <`KeyInfo`> element."},{"pos":[12037,12087],"content":"Security considerations about the X509Data element","linkify":"Security considerations about the X509Data element","nodes":[{"content":"Security considerations about the X509Data element","pos":[0,50]}]},{"pos":[12091,12319],"content":"The optional <`X509Data`> element is a child of the <`KeyInfo`> element and contains one or more X509 certificates or identifiers for X509 certificates. The data in the <`X509Data`> element should also not be inherently trusted.","nodes":[{"content":"The optional &lt;<ph id=\"ph1\">`X509Data`</ph>&gt; element is a child of the &lt;<ph id=\"ph2\">`KeyInfo`</ph>&gt; element and contains one or more X509 certificates or identifiers for X509 certificates.","pos":[0,152],"source":"The optional <`X509Data`> element is a child of the <`KeyInfo`> element and contains one or more X509 certificates or identifiers for X509 certificates."},{"content":"The data in the &lt;<ph id=\"ph1\">`X509Data`</ph>&gt; element should also not be inherently trusted.","pos":[153,228],"source":" The data in the <`X509Data`> element should also not be inherently trusted."}]},{"pos":[12326,13167],"content":"When verifying a document with the embedded <`X509Data`> element, the .NET Framework verifies only that the data resolves to an X509 certificate whose public key can be successfully used to validate the document signature. Unlike calling the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method with the `verifySignatureOnly` parameter set to `false`, no revocation check is performed, no chain trust is checked, and no expiration is verified. Even if your application extracts the certificate itself and passes it to the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method with the `verifySignatureOnly` parameter set to `false`, that is still not sufficient validation to prevent document tampering. The certificate still needs to be verified as being appropriate for the document being signed.","nodes":[{"content":"When verifying a document with the embedded &lt;<ph id=\"ph1\">`X509Data`</ph>&gt; element, the .NET Framework verifies only that the data resolves to an X509 certificate whose public key can be successfully used to validate the document signature.","pos":[0,222],"source":"When verifying a document with the embedded <`X509Data`> element, the .NET Framework verifies only that the data resolves to an X509 certificate whose public key can be successfully used to validate the document signature."},{"content":"Unlike calling the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A&gt;</ph> method with the <ph id=\"ph2\">`verifySignatureOnly`</ph> parameter set to <ph id=\"ph3\">`false`</ph>, no revocation check is performed, no chain trust is checked, and no expiration is verified.","pos":[223,465],"source":" Unlike calling the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method with the `verifySignatureOnly` parameter set to `false`, no revocation check is performed, no chain trust is checked, and no expiration is verified."},{"content":"Even if your application extracts the certificate itself and passes it to the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A&gt;</ph> method with the <ph id=\"ph2\">`verifySignatureOnly`</ph> parameter set to <ph id=\"ph3\">`false`</ph>, that is still not sufficient validation to prevent document tampering.","pos":[466,746],"source":" Even if your application extracts the certificate itself and passes it to the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method with the `verifySignatureOnly` parameter set to `false`, that is still not sufficient validation to prevent document tampering."},{"content":"The certificate still needs to be verified as being appropriate for the document being signed.","pos":[747,841]}]},{"pos":[13174,13434],"content":"Using an embedded signing certificate can provide useful key rotation strategies, whether in the <`X509Data`> section or in the document content. When using this approach an application should extract the certificate manually and perform validation similar to:","nodes":[{"content":"Using an embedded signing certificate can provide useful key rotation strategies, whether in the &lt;<ph id=\"ph1\">`X509Data`</ph>&gt; section or in the document content.","pos":[0,145],"source":"Using an embedded signing certificate can provide useful key rotation strategies, whether in the <`X509Data`> section or in the document content."},{"content":"When using this approach an application should extract the certificate manually and perform validation similar to:","pos":[146,260]}]},{"pos":[13444,13583],"content":"The certificate was issued directly or via a chain by a Certificate Authority (CA) whose public certificate is embedded in the application.","nodes":[{"content":"The certificate was issued directly or via a chain by a Certificate Authority (CA) whose public certificate is embedded in the application.","pos":[0,139]}]},{"pos":[13594,13776],"content":"Using the OS-provided trust list without additional checks, such as a known subject name, is not sufficient to prevent tampering in <xref:System.Security.Cryptography.Xml.SignedXml>.","nodes":[{"content":"Using the OS-provided trust list without additional checks, such as a known subject name, is not sufficient to prevent tampering in <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml&gt;</ph>.","pos":[0,182],"source":"Using the OS-provided trust list without additional checks, such as a known subject name, is not sufficient to prevent tampering in <xref:System.Security.Cryptography.Xml.SignedXml>."}]},{"pos":[13786,13921],"content":"The certificate is verified to have not been expired at the time of document signing (or \"now\" for near real-time document processing).","nodes":[{"content":"The certificate is verified to have not been expired at the time of document signing (or \"now\" for near real-time document processing).","pos":[0,135]}]},{"pos":[13931,14040],"content":"For long-lived certificates issued by a CA which supports revocation, verify the certificate was not revoked.","nodes":[{"content":"For long-lived certificates issued by a CA which supports revocation, verify the certificate was not revoked.","pos":[0,109]}]},{"pos":[14050,14131],"content":"The certificate subject is verified as being appropriate to the current document.","nodes":[{"content":"The certificate subject is verified as being appropriate to the current document.","pos":[0,81]}]},{"pos":[14140,14172],"content":"Choosing the transform algorithm","linkify":"Choosing the transform algorithm","nodes":[{"content":"Choosing the transform algorithm","pos":[0,32]}]},{"pos":[14176,14782],"content":"If you are interoperating with a specification which has dictated specific values (such as XrML), then you need to follow the specification.  If you have an enveloped signature (such as when signing the whole document), then you need to use http://www.w3.org/2000/09/xmldsig#enveloped-signature (represented by the <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class). You can specify the implicit XML-C14N transform as well, but it's not necessary.  For an enveloping or detached signature, no transforms are required. The implicit XML-C14N transform takes care of everything.","nodes":[{"content":"If you are interoperating with a specification which has dictated specific values (such as XrML), then you need to follow the specification.  If you have an enveloped signature (such as when signing the whole document), then you need to use http://www.w3.org/2000/09/xmldsig#enveloped-signature (represented by the <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class). You can specify the implicit XML-C14N transform as well, but it's not necessary.  For an enveloping or detached signature, no transforms are required. The implicit XML-C14N transform takes care of everything.","pos":[0,606],"nodes":[{"content":"If you are interoperating with a specification which has dictated specific values (such as XrML), then you need to follow the specification.","pos":[0,140]},{"content":"If you have an enveloped signature (such as when signing the whole document), then you need to use http://www.w3.org/2000/09/xmldsig#enveloped-signature (represented by the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&gt;</ph> class).","pos":[142,397],"source":"  If you have an enveloped signature (such as when signing the whole document), then you need to use http://www.w3.org/2000/09/xmldsig#enveloped-signature (represented by the <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class)."},{"content":"You can specify the implicit XML-C14N transform as well, but it's not necessary.","pos":[398,478]},{"content":"For an enveloping or detached signature, no transforms are required.","pos":[480,548]},{"content":"The implicit XML-C14N transform takes care of everything.","pos":[549,606]}]}]},{"pos":[14789,15466],"content":"With the security updated introduced by the [Microsoft Security Bulletin MS16-035](https://technet.microsoft.com/en-us/library/security/ms16-035.aspx), the .NET Framework has restricted what transforms can be used in document verification by default, with untrusted transforms causing <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> to always return `false`. In particular, transforms which require additional input (specified as child elements in the XML) are no longer allowed due to their susceptibility of abuse by malicious users. The W3C advises avoiding the XPath and XSLT transforms, which are the two main transforms affected by these restrictions.","nodes":[{"content":"With the security updated introduced by the <bpt id=\"p1\">[</bpt>Microsoft Security Bulletin MS16-035<ept id=\"p1\">](https://technet.microsoft.com/en-us/library/security/ms16-035.aspx)</ept>, the .NET Framework has restricted what transforms can be used in document verification by default, with untrusted transforms causing <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A&gt;</ph> to always return <ph id=\"ph2\">`false`</ph>.","pos":[0,378],"source":"With the security updated introduced by the [Microsoft Security Bulletin MS16-035](https://technet.microsoft.com/en-us/library/security/ms16-035.aspx), the .NET Framework has restricted what transforms can be used in document verification by default, with untrusted transforms causing <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> to always return `false`."},{"content":"In particular, transforms which require additional input (specified as child elements in the XML) are no longer allowed due to their susceptibility of abuse by malicious users.","pos":[379,555]},{"content":"The W3C advises avoiding the XPath and XSLT transforms, which are the two main transforms affected by these restrictions.","pos":[556,677]}]},{"pos":[15475,15511],"content":"The problem with external references","linkify":"The problem with external references","nodes":[{"content":"The problem with external references","pos":[0,36]}]},{"pos":[15515,16225],"content":"If an application does not verify that external references seem appropriate for the current context, they can be abused in ways that provide for many security vulnerabilities (including Denial of Service, Distributed Reflection Denial of Service, Information Disclosure, Signature Bypass, and Remote Code Execution). Even if an application were to validate the external reference URI, there would remain a problem of the resource being loaded twice: once when your application reads it, and once when <xref:System.Security.Cryptography.Xml.SignedXml> reads it. Since there’s no guarantee that the application read and document verify steps have the same content, the signature does not provide trustworthiness.","nodes":[{"content":"If an application does not verify that external references seem appropriate for the current context, they can be abused in ways that provide for many security vulnerabilities (including Denial of Service, Distributed Reflection Denial of Service, Information Disclosure, Signature Bypass, and Remote Code Execution). Even if an application were to validate the external reference URI, there would remain a problem of the resource being loaded twice: once when your application reads it, and once when <xref:System.Security.Cryptography.Xml.SignedXml> reads it. Since there’s no guarantee that the application read and document verify steps have the same content, the signature does not provide trustworthiness.","pos":[0,710],"nodes":[{"content":"If an application does not verify that external references seem appropriate for the current context, they can be abused in ways that provide for many security vulnerabilities (including Denial of Service, Distributed Reflection Denial of Service, Information Disclosure, Signature Bypass, and Remote Code Execution).","pos":[0,316]},{"content":"Even if an application were to validate the external reference URI, there would remain a problem of the resource being loaded twice: once when your application reads it, and once when <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml&gt;</ph> reads it.","pos":[317,560],"source":" Even if an application were to validate the external reference URI, there would remain a problem of the resource being loaded twice: once when your application reads it, and once when <xref:System.Security.Cryptography.Xml.SignedXml> reads it."},{"content":"Since there’s no guarantee that the application read and document verify steps have the same content, the signature does not provide trustworthiness.","pos":[561,710]}]}]},{"pos":[16232,16502],"content":"Given the risks of external references, <xref:System.Security.Cryptography.Xml.SignedXml> will throw an exception when an external reference is encountered.  For more information about this issue, see [KB article 3148821](https://support.microsoft.com/en-us/kb/3148821).","nodes":[{"content":"Given the risks of external references, <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml&gt;</ph> will throw an exception when an external reference is encountered.","pos":[0,156],"source":"Given the risks of external references, <xref:System.Security.Cryptography.Xml.SignedXml> will throw an exception when an external reference is encountered."},{"content":"For more information about this issue, see <bpt id=\"p1\">[</bpt>KB article 3148821<ept id=\"p1\">](https://support.microsoft.com/en-us/kb/3148821)</ept>.","pos":[158,270],"source":"  For more information about this issue, see [KB article 3148821](https://support.microsoft.com/en-us/kb/3148821)."}]}],"pos":[4543,21202],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> class.","nodes":[{"pos":[0,104],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> class."}],"pos":[24244,24349],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> class from the specified XML document.","nodes":[{"pos":[0,136],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph> class from the specified XML document.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> class from the specified XML document."}],"pos":[27520,27657],"yaml":true},{"content":"The <xref href=\"System.Xml.XmlDocument\"></xref> object to use to initialize the new instance of <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref>.","nodes":[{"pos":[0,160],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDocument\"&gt;&lt;/xref&gt;</ph> object to use to initialize the new instance of <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Xml.XmlDocument\"></xref> object to use to initialize the new instance of <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref>."}],"pos":[29688,29849],"yaml":true},{"content":"The <code>document</code> parameter is `null`.  \n  \n -or-  \n  \n The <code>document</code> parameter contains a null <xref href=\"System.Xml.XmlDocument.DocumentElement\"></xref> property.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">document</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>document</code> parameter is `null`."},{"pos":[53,57],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[64,185],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">document</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter contains a null <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlDocument.DocumentElement\"&gt;&lt;/xref&gt;</ph> property.","source":"The <code>document</code> parameter contains a null <xref href=\"System.Xml.XmlDocument.DocumentElement\"></xref> property."}],"pos":[30027,30221],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> class from the specified <xref href=\"System.Xml.XmlElement\"></xref> object.","nodes":[{"pos":[0,173],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph> class from the specified <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlElement\"&gt;&lt;/xref&gt;</ph> object.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> class from the specified <xref href=\"System.Xml.XmlElement\"></xref> object."}],"pos":[31377,31551],"yaml":true},{"content":"The <xref href=\"System.Xml.XmlElement\"></xref> object to use to initialize the new instance of <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref>.","nodes":[{"pos":[0,159],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlElement\"&gt;&lt;/xref&gt;</ph> object to use to initialize the new instance of <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Xml.XmlElement\"></xref> object to use to initialize the new instance of <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref>."}],"pos":[31705,31865],"yaml":true},{"content":"The <code>elem</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">elem</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>elem</code> parameter is `null`."}],"pos":[32043,32086],"yaml":true},{"content":"Adds a <xref href=\"System.Security.Cryptography.Xml.DataObject\"></xref> object to the list of objects to be signed.","nodes":[{"pos":[0,115],"content":"Adds a <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.DataObject\"&gt;&lt;/xref&gt;</ph> object to the list of objects to be signed.","source":"Adds a <xref href=\"System.Security.Cryptography.Xml.DataObject\"></xref> object to the list of objects to be signed."}],"pos":[33313,33429],"yaml":true},{"content":"The <xref:System.Security.Cryptography.Xml.SignedXml.AddObject%2A> method adds an <`Object`> element that represents an object to be signed to the <`Signature`> element of an XML digital signature.  \n  \n The <xref:System.Security.Cryptography.Xml.SignedXml.AddObject%2A> method internally calls the <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> method of the <xref:System.Security.Cryptography.Xml.Signature> object encapsulated by the <xref:System.Security.Cryptography.Xml.SignedXml> object.  You can also add a <xref:System.Security.Cryptography.Xml.DataObject> object by directly calling the <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> method from the <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> property.  \n  \n For more information about XML digital signatures, see the XMLDSIG specification available at www.w3.org/TR/xmldsig-core/.","nodes":[{"pos":[0,197],"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.AddObject%2A&gt;</ph> method adds an &lt;<ph id=\"ph2\">`Object`</ph>&gt; element that represents an object to be signed to the &lt;<ph id=\"ph3\">`Signature`</ph>&gt; element of an XML digital signature.","source":"The <xref:System.Security.Cryptography.Xml.SignedXml.AddObject%2A> method adds an <`Object`> element that represents an object to be signed to the <`Signature`> element of an XML digital signature."},{"pos":[204,764],"content":"The <xref:System.Security.Cryptography.Xml.SignedXml.AddObject%2A> method internally calls the <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> method of the <xref:System.Security.Cryptography.Xml.Signature> object encapsulated by the <xref:System.Security.Cryptography.Xml.SignedXml> object.  You can also add a <xref:System.Security.Cryptography.Xml.DataObject> object by directly calling the <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> method from the <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> property.","nodes":[{"content":"The <xref:System.Security.Cryptography.Xml.SignedXml.AddObject%2A> method internally calls the <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> method of the <xref:System.Security.Cryptography.Xml.Signature> object encapsulated by the <xref:System.Security.Cryptography.Xml.SignedXml> object.  You can also add a <xref:System.Security.Cryptography.Xml.DataObject> object by directly calling the <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> method from the <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> property.","pos":[0,560],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.AddObject%2A&gt;</ph> method internally calls the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.Signature.AddObject%2A&gt;</ph> method of the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.Xml.Signature&gt;</ph> object encapsulated by the <ph id=\"ph4\">&lt;xref:System.Security.Cryptography.Xml.SignedXml&gt;</ph> object.","pos":[0,306],"source":"The <xref:System.Security.Cryptography.Xml.SignedXml.AddObject%2A> method internally calls the <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> method of the <xref:System.Security.Cryptography.Xml.Signature> object encapsulated by the <xref:System.Security.Cryptography.Xml.SignedXml> object."},{"content":"You can also add a <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.DataObject&gt;</ph> object by directly calling the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.Signature.AddObject%2A&gt;</ph> method from the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A&gt;</ph> property.","pos":[308,560],"source":"  You can also add a <xref:System.Security.Cryptography.Xml.DataObject> object by directly calling the <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> method from the <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> property."}]}]},{"pos":[771,893],"content":"For more information about XML digital signatures, see the XMLDSIG specification available at www.w3.org/TR/xmldsig-core/.","nodes":[{"content":"For more information about XML digital signatures, see the XMLDSIG specification available at www.w3.org/TR/xmldsig-core/.","pos":[0,122]}]}],"pos":[33440,34340],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Security.Cryptography.Xml.DataObject\"></xref> object to add to the list of objects to be signed.","nodes":[{"pos":[0,119],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.DataObject\"&gt;&lt;/xref&gt;</ph> object to add to the list of objects to be signed.","source":"The <xref href=\"System.Security.Cryptography.Xml.DataObject\"></xref> object to add to the list of objects to be signed."}],"pos":[35284,35404],"yaml":true},{"content":"Adds a <xref href=\"System.Security.Cryptography.Xml.Reference\"></xref> object to the <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object that describes a digest method, digest value, and transform to use for creating an XML digital signature.","nodes":[{"pos":[0,261],"content":"Adds a <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.Reference\"&gt;&lt;/xref&gt;</ph> object to the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph> object that describes a digest method, digest value, and transform to use for creating an XML digital signature.","source":"Adds a <xref href=\"System.Security.Cryptography.Xml.Reference\"></xref> object to the <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object that describes a digest method, digest value, and transform to use for creating an XML digital signature."}],"pos":[36726,36988],"yaml":true},{"content":"The <xref:System.Security.Cryptography.Xml.SignedXml.AddReference%2A> method adds a <`Reference`> element to the <xref:System.Security.Cryptography.Xml.SignedXml> object that describes a digest method, digest value, and transform to use for creating an XML digital signature.  The <`Reference`> element is a subelement of the <`SignedInfo`> element.  \n  \n The <xref:System.Security.Cryptography.Xml.SignedXml.AddReference%2A> method internally calls the <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> method of the <xref:System.Security.Cryptography.Xml.SignedInfo> object encapsulated by the <xref:System.Security.Cryptography.Xml.SignedXml> object.  You can also add a <xref:System.Security.Cryptography.Xml.Reference> object by directly calling the <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> method from the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property.  \n  \n For more information about XML digital signatures, see the XMLDSIG specification available at www.w3.org/TR/xmldsig-core/.","nodes":[{"pos":[0,349],"content":"The <xref:System.Security.Cryptography.Xml.SignedXml.AddReference%2A> method adds a <`Reference`> element to the <xref:System.Security.Cryptography.Xml.SignedXml> object that describes a digest method, digest value, and transform to use for creating an XML digital signature.  The <`Reference`> element is a subelement of the <`SignedInfo`> element.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.AddReference%2A&gt;</ph> method adds a &lt;<ph id=\"ph2\">`Reference`</ph>&gt; element to the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.Xml.SignedXml&gt;</ph> object that describes a digest method, digest value, and transform to use for creating an XML digital signature.","pos":[0,275],"source":"The <xref:System.Security.Cryptography.Xml.SignedXml.AddReference%2A> method adds a <`Reference`> element to the <xref:System.Security.Cryptography.Xml.SignedXml> object that describes a digest method, digest value, and transform to use for creating an XML digital signature."},{"content":"The &lt;<ph id=\"ph1\">`Reference`</ph>&gt; element is a subelement of the &lt;<ph id=\"ph2\">`SignedInfo`</ph>&gt; element.","pos":[277,349],"source":"  The <`Reference`> element is a subelement of the <`SignedInfo`> element."}]},{"pos":[356,928],"content":"The <xref:System.Security.Cryptography.Xml.SignedXml.AddReference%2A> method internally calls the <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> method of the <xref:System.Security.Cryptography.Xml.SignedInfo> object encapsulated by the <xref:System.Security.Cryptography.Xml.SignedXml> object.  You can also add a <xref:System.Security.Cryptography.Xml.Reference> object by directly calling the <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> method from the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property.","nodes":[{"content":"The <xref:System.Security.Cryptography.Xml.SignedXml.AddReference%2A> method internally calls the <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> method of the <xref:System.Security.Cryptography.Xml.SignedInfo> object encapsulated by the <xref:System.Security.Cryptography.Xml.SignedXml> object.  You can also add a <xref:System.Security.Cryptography.Xml.Reference> object by directly calling the <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> method from the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property.","pos":[0,572],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.AddReference%2A&gt;</ph> method internally calls the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A&gt;</ph> method of the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.Xml.SignedInfo&gt;</ph> object encapsulated by the <ph id=\"ph4\">&lt;xref:System.Security.Cryptography.Xml.SignedXml&gt;</ph> object.","pos":[0,314],"source":"The <xref:System.Security.Cryptography.Xml.SignedXml.AddReference%2A> method internally calls the <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> method of the <xref:System.Security.Cryptography.Xml.SignedInfo> object encapsulated by the <xref:System.Security.Cryptography.Xml.SignedXml> object."},{"content":"You can also add a <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.Reference&gt;</ph> object by directly calling the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A&gt;</ph> method from the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A&gt;</ph> property.","pos":[316,572],"source":"  You can also add a <xref:System.Security.Cryptography.Xml.Reference> object by directly calling the <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> method from the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property."}]}]},{"pos":[935,1057],"content":"For more information about XML digital signatures, see the XMLDSIG specification available at www.w3.org/TR/xmldsig-core/.","nodes":[{"content":"For more information about XML digital signatures, see the XMLDSIG specification available at www.w3.org/TR/xmldsig-core/.","pos":[0,122]}]}],"pos":[36999,38063],"yaml":true,"extradata":"MT"},{"content":"The  <xref href=\"System.Security.Cryptography.Xml.Reference\"></xref> object that describes a digest method, digest value, and transform to use for creating an XML digital signature.","nodes":[{"pos":[0,181],"content":"The  <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.Reference\"&gt;&lt;/xref&gt;</ph> object that describes a digest method, digest value, and transform to use for creating an XML digital signature.","source":"The  <xref href=\"System.Security.Cryptography.Xml.Reference\"></xref> object that describes a digest method, digest value, and transform to use for creating an XML digital signature."}],"pos":[40130,40312],"yaml":true},{"content":"Determines whether the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property verifies using the public key in the signature.","nodes":[{"pos":[0,153],"content":"Determines whether the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"&gt;&lt;/xref&gt;</ph> property verifies using the public key in the signature.","source":"Determines whether the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property verifies using the public key in the signature."}],"pos":[41490,41644],"yaml":true},{"content":"This method also computes the digest of the references and the value of the signature.  \n  \n If an XML document was signed with an X.509 signature, the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will search the \"AddressBook\" store for certificates suitable for the verification. For example, if the certificate is referenced by a Subject Key Identifier (SKI), the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will select certificates with this SKI and try them one after another until it can verify the certificate.","nodes":[{"pos":[0,86],"content":"This method also computes the digest of the references and the value of the signature.","nodes":[{"content":"This method also computes the digest of the references and the value of the signature.","pos":[0,86]}]},{"pos":[93,577],"content":"If an XML document was signed with an X.509 signature, the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will search the \"AddressBook\" store for certificates suitable for the verification. For example, if the certificate is referenced by a Subject Key Identifier (SKI), the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will select certificates with this SKI and try them one after another until it can verify the certificate.","nodes":[{"content":"If an XML document was signed with an X.509 signature, the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will search the \"AddressBook\" store for certificates suitable for the verification. For example, if the certificate is referenced by a Subject Key Identifier (SKI), the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will select certificates with this SKI and try them one after another until it can verify the certificate.","pos":[0,484],"nodes":[{"content":"If an XML document was signed with an X.509 signature, the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A&gt;</ph> method will search the \"AddressBook\" store for certificates suitable for the verification.","pos":[0,217],"source":"If an XML document was signed with an X.509 signature, the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will search the \"AddressBook\" store for certificates suitable for the verification."},{"content":"For example, if the certificate is referenced by a Subject Key Identifier (SKI), the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A&gt;</ph> method will select certificates with this SKI and try them one after another until it can verify the certificate.","pos":[218,484],"source":" For example, if the certificate is referenced by a Subject Key Identifier (SKI), the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will select certificates with this SKI and try them one after another until it can verify the certificate."}]}]}],"pos":[41655,42239],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property verifies; otherwise, `false`.","nodes":[{"pos":[0,126],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"&gt;&lt;/xref&gt;</ph> property verifies; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property verifies; otherwise, `false`."}],"pos":[44889,45018],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm\"></xref> property of the public key in the signature does not match the <xref href=\"System.Security.Cryptography.Xml.SignedXml.SignatureMethod\"></xref> property.  \n  \n -or-  \n  \n The signature description could not be created.  \n  \n -or  \n  \n The hash algorithm could not be created.","nodes":[{"pos":[0,245],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm\"&gt;&lt;/xref&gt;</ph> property of the public key in the signature does not match the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.SignatureMethod\"&gt;&lt;/xref&gt;</ph> property.","source":"The <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm\"></xref> property of the public key in the signature does not match the <xref href=\"System.Security.Cryptography.Xml.SignedXml.SignatureMethod\"></xref> property."},{"pos":[252,256],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[263,310],"content":"The signature description could not be created.","nodes":[{"content":"The signature description could not be created.","pos":[0,47]}]},{"pos":[317,320],"content":"-or","nodes":[{"content":"-or","pos":[0,3]}]},{"pos":[327,367],"content":"The hash algorithm could not be created.","nodes":[{"content":"The hash algorithm could not be created.","pos":[0,40]}]}],"pos":[45251,45633],"yaml":true},{"content":"Determines whether the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property verifies for the specified key.","nodes":[{"pos":[0,137],"content":"Determines whether the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"&gt;&lt;/xref&gt;</ph> property verifies for the specified key.","source":"Determines whether the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property verifies for the specified key."}],"pos":[46932,47070],"yaml":true},{"content":"The implementation of the <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\"></xref> property that holds the key to be used to verify the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property.","nodes":[{"pos":[0,232],"content":"The implementation of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\"&gt;&lt;/xref&gt;</ph> property that holds the key to be used to verify the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"&gt;&lt;/xref&gt;</ph> property.","source":"The implementation of the <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\"></xref> property that holds the key to be used to verify the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property."}],"pos":[49127,49360],"yaml":true},{"content":"`true` if the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property verifies for the specified key; otherwise, `false`.","nodes":[{"pos":[0,148],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"&gt;&lt;/xref&gt;</ph> property verifies for the specified key; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property verifies for the specified key; otherwise, `false`."}],"pos":[49418,49569],"yaml":true},{"content":"The <code>key</code> parameter is `null`.","nodes":[{"pos":[0,41],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>key</code> parameter is `null`."}],"pos":[49756,49798],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm\"></xref> property of the <code>key</code> parameter does not match the <xref href=\"System.Security.Cryptography.Xml.SignedXml.SignatureMethod\"></xref> property.  \n  \n -or-  \n  \n The signature description could not be created.  \n  \n -or  \n  \n The hash algorithm could not be created.","nodes":[{"pos":[0,244],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm\"&gt;&lt;/xref&gt;</ph> property of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter does not match the <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.SignatureMethod\"&gt;&lt;/xref&gt;</ph> property.","source":"The <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm\"></xref> property of the <code>key</code> parameter does not match the <xref href=\"System.Security.Cryptography.Xml.SignedXml.SignatureMethod\"></xref> property."},{"pos":[251,255],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[262,309],"content":"The signature description could not be created.","nodes":[{"content":"The signature description could not be created.","pos":[0,47]}]},{"pos":[316,319],"content":"-or","nodes":[{"content":"-or","pos":[0,3]}]},{"pos":[326,366],"content":"The hash algorithm could not be created.","nodes":[{"content":"The hash algorithm could not be created.","pos":[0,40]}]}],"pos":[49946,50327],"yaml":true},{"content":"Determines whether the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property verifies for the specified message authentication code (MAC) algorithm.","nodes":[{"pos":[0,177],"content":"Determines whether the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"&gt;&lt;/xref&gt;</ph> property verifies for the specified message authentication code (MAC) algorithm.","source":"Determines whether the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property verifies for the specified message authentication code (MAC) algorithm."}],"pos":[51620,51798],"yaml":true},{"content":"The implementation of <xref href=\"System.Security.Cryptography.KeyedHashAlgorithm\"></xref> that holds the MAC to be used to verify the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property.","nodes":[{"pos":[0,218],"content":"The implementation of <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.KeyedHashAlgorithm\"&gt;&lt;/xref&gt;</ph> that holds the MAC to be used to verify the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"&gt;&lt;/xref&gt;</ph> property.","source":"The implementation of <xref href=\"System.Security.Cryptography.KeyedHashAlgorithm\"></xref> that holds the MAC to be used to verify the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property."}],"pos":[53881,54100],"yaml":true},{"content":"`true` if the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property verifies for the specified MAC; otherwise, `false`.","nodes":[{"pos":[0,148],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"&gt;&lt;/xref&gt;</ph> property verifies for the specified MAC; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property verifies for the specified MAC; otherwise, `false`."}],"pos":[54158,54309],"yaml":true},{"content":"The <code>macAlg</code> parameter is `null`.","nodes":[{"pos":[0,44],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">macAlg</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>macAlg</code> parameter is `null`."}],"pos":[54496,54541],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.HashAlgorithm.HashSize\"></xref> property of the specified <xref href=\"System.Security.Cryptography.KeyedHashAlgorithm\"></xref> object is not valid.  \n  \n -or-  \n  \n The <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property is `null`.  \n  \n -or-  \n  \n The cryptographic transform used to check the signature could not be created.","nodes":[{"pos":[0,192],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithm.HashSize\"&gt;&lt;/xref&gt;</ph> property of the specified <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.KeyedHashAlgorithm\"&gt;&lt;/xref&gt;</ph> object is not valid.","source":"The <xref href=\"System.Security.Cryptography.HashAlgorithm.HashSize\"></xref> property of the specified <xref href=\"System.Security.Cryptography.KeyedHashAlgorithm\"></xref> object is not valid."},{"pos":[199,203],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[210,307],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property is `null`."},{"pos":[314,318],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[325,402],"content":"The cryptographic transform used to check the signature could not be created.","nodes":[{"content":"The cryptographic transform used to check the signature could not be created.","pos":[0,77]}]}],"pos":[54689,55108],"yaml":true},{"content":"Determines whether the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property verifies for the specified <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> object and, optionally, whether the certificate is valid.","nodes":[{"pos":[0,274],"content":"Determines whether the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"&gt;&lt;/xref&gt;</ph> property verifies for the specified <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"&gt;&lt;/xref&gt;</ph> object and, optionally, whether the certificate is valid.","source":"Determines whether the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property verifies for the specified <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> object and, optionally, whether the certificate is valid."}],"pos":[56512,56787],"yaml":true},{"content":"In version 1.1 of the .NET Framework, the X.509 certificate is not verified.  In version 2.0 and later, the X.509 certificate is verified.  \n  \n In version 2.0 and later of the .NET Framework, the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will search the \"AddressBook\" store for certificates suitable for the verification. For example, if the certificate is referenced by a Subject Key Identifier (SKI), the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will select certificates with this SKI and try them one after another until it can verify the certificate.","nodes":[{"pos":[0,138],"content":"In version 1.1 of the .NET Framework, the X.509 certificate is not verified.  In version 2.0 and later, the X.509 certificate is verified.","nodes":[{"content":"In version 1.1 of the .NET Framework, the X.509 certificate is not verified.  In version 2.0 and later, the X.509 certificate is verified.","pos":[0,138],"nodes":[{"content":"In version 1.1 of the .NET Framework, the X.509 certificate is not verified.","pos":[0,76]},{"content":"In version 2.0 and later, the X.509 certificate is verified.","pos":[78,138]}]}]},{"pos":[145,622],"content":"In version 2.0 and later of the .NET Framework, the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will search the \"AddressBook\" store for certificates suitable for the verification. For example, if the certificate is referenced by a Subject Key Identifier (SKI), the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will select certificates with this SKI and try them one after another until it can verify the certificate.","nodes":[{"content":"In version 2.0 and later of the .NET Framework, the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will search the \"AddressBook\" store for certificates suitable for the verification. For example, if the certificate is referenced by a Subject Key Identifier (SKI), the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will select certificates with this SKI and try them one after another until it can verify the certificate.","pos":[0,477],"nodes":[{"content":"In version 2.0 and later of the .NET Framework, the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A&gt;</ph> method will search the \"AddressBook\" store for certificates suitable for the verification.","pos":[0,210],"source":"In version 2.0 and later of the .NET Framework, the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will search the \"AddressBook\" store for certificates suitable for the verification."},{"content":"For example, if the certificate is referenced by a Subject Key Identifier (SKI), the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A&gt;</ph> method will select certificates with this SKI and try them one after another until it can verify the certificate.","pos":[211,477],"source":" For example, if the certificate is referenced by a Subject Key Identifier (SKI), the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will select certificates with this SKI and try them one after another until it can verify the certificate."}]}]}],"pos":[56798,57427],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> object to use to verify the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property.","nodes":[{"pos":[0,199],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"&gt;&lt;/xref&gt;</ph> object to use to verify the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"&gt;&lt;/xref&gt;</ph> property.","source":"The <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> object to use to verify the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property."}],"pos":[58382,58582],"yaml":true},{"content":"`true` to verify the signature only; `false` to verify both the signature and certificate.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">`true`</ph> to verify the signature only; <ph id=\"ph2\">`false`</ph> to verify both the signature and certificate.","source":"`true` to verify the signature only; `false` to verify both the signature and certificate."}],"pos":[58658,58751],"yaml":true},{"content":"`true` if the signature is valid; otherwise, `false`.  \n  \n -or-  \n  \n `true` if the signature and certificate are valid; otherwise, `false`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">`true`</ph> if the signature is valid; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the signature is valid; otherwise, `false`."},{"pos":[60,64],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[71,141],"content":"<ph id=\"ph1\">`true`</ph> if the signature and certificate are valid; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the signature and certificate are valid; otherwise, `false`."}],"pos":[58809,58957],"yaml":true},{"content":"The <code>certificate</code> parameter is `null`.","nodes":[{"pos":[0,49],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">certificate</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>certificate</code> parameter is `null`."}],"pos":[59144,59194],"yaml":true},{"content":"A signature description could not be created for the <code>certificate</code> parameter.","nodes":[{"pos":[0,88],"content":"A signature description could not be created for the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">certificate</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A signature description could not be created for the <code>certificate</code> parameter."}],"pos":[59342,59431],"yaml":true},{"content":"Determines whether the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property verifies using the public key in the signature.","nodes":[{"pos":[0,153],"content":"Determines whether the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"&gt;&lt;/xref&gt;</ph> property verifies using the public key in the signature.","source":"Determines whether the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property verifies using the public key in the signature."}],"pos":[60880,61034],"yaml":true},{"content":"When this method returns, contains the implementation of <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\"></xref> that holds the public key in the signature. This parameter is passed uninitialized.","nodes":[{"pos":[0,210],"content":"When this method returns, contains the implementation of <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\"></xref> that holds the public key in the signature. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains the implementation of <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\"&gt;&lt;/xref&gt;</ph> that holds the public key in the signature.","pos":[0,170],"source":"When this method returns, contains the implementation of <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\"></xref> that holds the public key in the signature."},{"content":"This parameter is passed uninitialized.","pos":[171,210]}]}],"pos":[62966,63177],"yaml":true},{"content":"`true` if the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property verifies using the public key in the signature; otherwise, `false`.","nodes":[{"pos":[0,164],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"&gt;&lt;/xref&gt;</ph> property verifies using the public key in the signature; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property verifies using the public key in the signature; otherwise, `false`."}],"pos":[63235,63402],"yaml":true},{"content":"The <code>signingKey</code> parameter is null.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">signingKey</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is null.","source":"The <code>signingKey</code> parameter is null."}],"pos":[63601,63648],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm\"></xref> property of the public key in the signature does not match the <xref href=\"System.Security.Cryptography.Xml.SignedXml.SignatureMethod\"></xref> property.  \n  \n -or-  \n  \n The signature description could not be created.  \n  \n -or  \n  \n The hash algorithm could not be created.","nodes":[{"pos":[0,245],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm\"&gt;&lt;/xref&gt;</ph> property of the public key in the signature does not match the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.SignatureMethod\"&gt;&lt;/xref&gt;</ph> property.","source":"The <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm\"></xref> property of the public key in the signature does not match the <xref href=\"System.Security.Cryptography.Xml.SignedXml.SignatureMethod\"></xref> property."},{"pos":[252,256],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[263,310],"content":"The signature description could not be created.","nodes":[{"content":"The signature description could not be created.","pos":[0,47]}]},{"pos":[317,320],"content":"-or","nodes":[{"content":"-or","pos":[0,3]}]},{"pos":[327,367],"content":"The hash algorithm could not be created.","nodes":[{"content":"The hash algorithm could not be created.","pos":[0,40]}]}],"pos":[63796,64178],"yaml":true},{"content":"Computes an XML digital signature.","nodes":[{"pos":[0,34],"content":"Computes an XML digital signature.","nodes":[{"content":"Computes an XML digital signature.","pos":[0,34]}]}],"pos":[65282,65317],"yaml":true},{"content":"The <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> method creates an XML digital signature and constructs many of the XML elements needed.  \n  \n You must set the data to be signed and the <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A> property before calling this method.","nodes":[{"pos":[0,161],"content":"The <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> method creates an XML digital signature and constructs many of the XML elements needed.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A&gt;</ph> method creates an XML digital signature and constructs many of the XML elements needed.","pos":[0,161],"source":"The <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> method creates an XML digital signature and constructs many of the XML elements needed."}]},{"pos":[168,311],"content":"You must set the data to be signed and the <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A> property before calling this method.","nodes":[{"content":"You must set the data to be signed and the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A&gt;</ph> property before calling this method.","pos":[0,143],"source":"You must set the data to be signed and the <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A> property before calling this method."}]}],"pos":[65328,65644],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Security.Cryptography.Xml.SignedXml.SigningKey\"></xref> property is `null`.  \n  \n -or-  \n  \n The <xref href=\"System.Security.Cryptography.Xml.SignedXml.SigningKey\"></xref> property is not a <xref href=\"System.Security.Cryptography.DSA\"></xref> object or <xref href=\"System.Security.Cryptography.RSA\"></xref> object.  \n  \n -or-  \n  \n The key could not be loaded.","nodes":[{"pos":[0,98],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.SigningKey\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.Security.Cryptography.Xml.SignedXml.SigningKey\"></xref> property is `null`."},{"pos":[105,109],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[116,338],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.SigningKey\"&gt;&lt;/xref&gt;</ph> property is not a <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;&lt;/xref&gt;</ph> object or <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph> object.","source":"The <xref href=\"System.Security.Cryptography.Xml.SignedXml.SigningKey\"></xref> property is not a <xref href=\"System.Security.Cryptography.DSA\"></xref> object or <xref href=\"System.Security.Cryptography.RSA\"></xref> object."},{"pos":[345,349],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[356,384],"content":"The key could not be loaded.","nodes":[{"content":"The key could not be loaded.","pos":[0,28]}]}],"pos":[67365,67768],"yaml":true},{"content":"Computes an XML digital signature using the specified message authentication code (MAC) algorithm.","nodes":[{"pos":[0,98],"content":"Computes an XML digital signature using the specified message authentication code (MAC) algorithm.","nodes":[{"content":"Computes an XML digital signature using the specified message authentication code (MAC) algorithm.","pos":[0,98]}]}],"pos":[69073,69172],"yaml":true},{"content":"The <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> method creates an XML digital signature using the specified MAC algorithm and constructs many of the XML elements needed.  \n  \n You must set the data to be signed before calling this method.","nodes":[{"pos":[0,195],"content":"The <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> method creates an XML digital signature using the specified MAC algorithm and constructs many of the XML elements needed.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A&gt;</ph> method creates an XML digital signature using the specified MAC algorithm and constructs many of the XML elements needed.","pos":[0,195],"source":"The <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> method creates an XML digital signature using the specified MAC algorithm and constructs many of the XML elements needed."}]},{"pos":[202,264],"content":"You must set the data to be signed before calling this method.","nodes":[{"content":"You must set the data to be signed before calling this method.","pos":[0,62]}]}],"pos":[69183,69452],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.Cryptography.KeyedHashAlgorithm\"></xref> object that holds the MAC to be used to compute the value of the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property.","nodes":[{"pos":[0,219],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.KeyedHashAlgorithm\"&gt;&lt;/xref&gt;</ph> object that holds the MAC to be used to compute the value of the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"&gt;&lt;/xref&gt;</ph> property.","source":"A <xref href=\"System.Security.Cryptography.KeyedHashAlgorithm\"></xref> object that holds the MAC to be used to compute the value of the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property."}],"pos":[71523,71743],"yaml":true},{"content":"The <code>macAlg</code> parameter is `null`.","nodes":[{"pos":[0,44],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">macAlg</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>macAlg</code> parameter is `null`."}],"pos":[71932,71977],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.KeyedHashAlgorithm\"></xref> object specified by the <code>macAlg</code> parameter is not an instance of <xref href=\"System.Security.Cryptography.HMACSHA1\"></xref>.  \n  \n -or-  \n  \n The <xref href=\"System.Security.Cryptography.HashAlgorithm.HashSize\"></xref> property of the specified <xref href=\"System.Security.Cryptography.KeyedHashAlgorithm\"></xref> object is not valid.  \n  \n -or-  \n  \n The cryptographic transform used to check the signature could not be created.","nodes":[{"pos":[0,208],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.KeyedHashAlgorithm\"&gt;&lt;/xref&gt;</ph> object specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">macAlg</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not an instance of <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.HMACSHA1\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Security.Cryptography.KeyedHashAlgorithm\"></xref> object specified by the <code>macAlg</code> parameter is not an instance of <xref href=\"System.Security.Cryptography.HMACSHA1\"></xref>."},{"pos":[215,219],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[226,418],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithm.HashSize\"&gt;&lt;/xref&gt;</ph> property of the specified <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.KeyedHashAlgorithm\"&gt;&lt;/xref&gt;</ph> object is not valid.","source":"The <xref href=\"System.Security.Cryptography.HashAlgorithm.HashSize\"></xref> property of the specified <xref href=\"System.Security.Cryptography.KeyedHashAlgorithm\"></xref> object is not valid."},{"pos":[425,429],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[436,513],"content":"The cryptographic transform used to check the signature could not be created.","nodes":[{"content":"The cryptographic transform used to check the signature could not be created.","pos":[0,77]}]}],"pos":[72125,72657],"yaml":true},{"content":"Gets or sets an <xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"></xref> object that defines the XML encryption processing rules.","nodes":[{"pos":[0,139],"content":"Gets or sets an <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"&gt;&lt;/xref&gt;</ph> object that defines the XML encryption processing rules.","source":"Gets or sets an <xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"></xref> object that defines the XML encryption processing rules."}],"pos":[73733,73873],"yaml":true},{"content":"An <xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"></xref> object that defines the XML encryption processing rules.","nodes":[{"pos":[0,126],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"&gt;&lt;/xref&gt;</ph> object that defines the XML encryption processing rules.","source":"An <xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"></xref> object that defines the XML encryption processing rules."}],"pos":[74132,74259],"yaml":true},{"content":"Returns the <xref href=\"System.Xml.XmlElement\"></xref> object with the specified ID from the specified <xref href=\"System.Xml.XmlDocument\"></xref> object.","nodes":[{"pos":[0,154],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlElement\"&gt;&lt;/xref&gt;</ph> object with the specified ID from the specified <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlDocument\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns the <xref href=\"System.Xml.XmlElement\"></xref> object with the specified ID from the specified <xref href=\"System.Xml.XmlDocument\"></xref> object."}],"pos":[75671,75826],"yaml":true},{"content":"The <xref href=\"System.Xml.XmlDocument\"></xref> object to retrieve the <xref href=\"System.Xml.XmlElement\"></xref> object from.","nodes":[{"pos":[0,126],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDocument\"&gt;&lt;/xref&gt;</ph> object to retrieve the <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlElement\"&gt;&lt;/xref&gt;</ph> object from.","source":"The <xref href=\"System.Xml.XmlDocument\"></xref> object to retrieve the <xref href=\"System.Xml.XmlElement\"></xref> object from."}],"pos":[76039,76166],"yaml":true},{"content":"The ID of the <xref href=\"System.Xml.XmlElement\"></xref> object to retrieve from the <xref href=\"System.Xml.XmlDocument\"></xref> object.","nodes":[{"pos":[0,136],"content":"The ID of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlElement\"&gt;&lt;/xref&gt;</ph> object to retrieve from the <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlDocument\"&gt;&lt;/xref&gt;</ph> object.","source":"The ID of the <xref href=\"System.Xml.XmlElement\"></xref> object to retrieve from the <xref href=\"System.Xml.XmlDocument\"></xref> object."}],"pos":[76229,76366],"yaml":true},{"content":"The <xref href=\"System.Xml.XmlElement\"></xref> object with the specified ID from the specified <xref href=\"System.Xml.XmlDocument\"></xref> object, or `null` if it could not be found.","nodes":[{"pos":[0,182],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlElement\"&gt;&lt;/xref&gt;</ph> object with the specified ID from the specified <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlDocument\"&gt;&lt;/xref&gt;</ph> object, or <ph id=\"ph3\">`null`</ph> if it could not be found.","source":"The <xref href=\"System.Xml.XmlElement\"></xref> object with the specified ID from the specified <xref href=\"System.Xml.XmlDocument\"></xref> object, or `null` if it could not be found."}],"pos":[76431,76614],"yaml":true},{"content":"Returns the public key of a signature.","nodes":[{"pos":[0,38],"content":"Returns the public key of a signature.","nodes":[{"content":"Returns the public key of a signature.","pos":[0,38]}]}],"pos":[77780,77819],"yaml":true},{"content":"The <xref:System.Security.Cryptography.Xml.SignedXml.GetPublicKey%2A> method returns an <xref:System.Security.Cryptography.AsymmetricAlgorithm> object that contains a public key that can be used to verify an XML digital signature.  \n  \n The key must be either a <xref:System.Security.Cryptography.DSA> or an <xref:System.Security.Cryptography.RSA> key.","nodes":[{"pos":[0,230],"content":"The <xref:System.Security.Cryptography.Xml.SignedXml.GetPublicKey%2A> method returns an <xref:System.Security.Cryptography.AsymmetricAlgorithm> object that contains a public key that can be used to verify an XML digital signature.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.GetPublicKey%2A&gt;</ph> method returns an <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;</ph> object that contains a public key that can be used to verify an XML digital signature.","pos":[0,230],"source":"The <xref:System.Security.Cryptography.Xml.SignedXml.GetPublicKey%2A> method returns an <xref:System.Security.Cryptography.AsymmetricAlgorithm> object that contains a public key that can be used to verify an XML digital signature."}]},{"pos":[237,352],"content":"The key must be either a <xref:System.Security.Cryptography.DSA> or an <xref:System.Security.Cryptography.RSA> key.","nodes":[{"content":"The key must be either a <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.DSA&gt;</ph> or an <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.RSA&gt;</ph> key.","pos":[0,115],"source":"The key must be either a <xref:System.Security.Cryptography.DSA> or an <xref:System.Security.Cryptography.RSA> key."}]}],"pos":[77830,78187],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\"></xref> object that contains the public key of the signature, or `null` if the key cannot be found.","nodes":[{"pos":[0,164],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\"&gt;&lt;/xref&gt;</ph> object that contains the public key of the signature, or <ph id=\"ph2\">`null`</ph> if the key cannot be found.","source":"An <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\"></xref> object that contains the public key of the signature, or `null` if the key cannot be found."}],"pos":[78405,78570],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.Xml.SignedXml.KeyInfo\"></xref> property is `null`.","nodes":[{"pos":[0,95],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.KeyInfo\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.Security.Cryptography.Xml.SignedXml.KeyInfo\"></xref> property is `null`."}],"pos":[78801,78897],"yaml":true},{"content":"Returns the XML representation of a <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.","nodes":[{"pos":[0,107],"content":"Returns the XML representation of a <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns the XML representation of a <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object."}],"pos":[79941,80049],"yaml":true},{"content":"The XML representation of the <xref href=\"System.Security.Cryptography.Xml.Signature\"></xref> object.","nodes":[{"pos":[0,101],"content":"The XML representation of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.Signature\"&gt;&lt;/xref&gt;</ph> object.","source":"The XML representation of the <xref href=\"System.Security.Cryptography.Xml.Signature\"></xref> object."}],"pos":[80196,80298],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.Xml.SignedXml.SignedInfo\"></xref> property is `null`.  \n  \n -or-  \n  \n The <xref href=\"System.Security.Cryptography.Xml.SignedXml.SignatureValue\"></xref> property is `null`.","nodes":[{"pos":[0,98],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.SignedInfo\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.Security.Cryptography.Xml.SignedXml.SignedInfo\"></xref> property is `null`."},{"pos":[105,109],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[116,218],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.SignatureValue\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">`null`</ph>.","source":"The <xref href=\"System.Security.Cryptography.Xml.SignedXml.SignatureValue\"></xref> property is `null`."}],"pos":[80523,80752],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Security.Cryptography.Xml.KeyInfo\"></xref> object of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.","nodes":[{"pos":[0,172],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.KeyInfo\"&gt;&lt;/xref&gt;</ph> object of the current <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets or sets the <xref href=\"System.Security.Cryptography.Xml.KeyInfo\"></xref> object of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object."}],"pos":[81798,81971],"yaml":true},{"content":"The <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> property represents the <`KeyInfo`> element of an XML digital signature using a <xref:System.Security.Cryptography.Xml.KeyInfo> object contained within the property.  The <`KeyInfo`> element is a subelement of the <`Signature`> element.  \n  \n Use the <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> property to embed key-related information intended to help identify the key necessary for validating an XML document.  \n  \n For more information about the `<KeyInfo>` element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/.","nodes":[{"pos":[0,301],"content":"The <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> property represents the <`KeyInfo`> element of an XML digital signature using a <xref:System.Security.Cryptography.Xml.KeyInfo> object contained within the property.  The <`KeyInfo`> element is a subelement of the <`Signature`> element.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A&gt;</ph> property represents the &lt;<ph id=\"ph2\">`KeyInfo`</ph>&gt; element of an XML digital signature using a <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.Xml.KeyInfo&gt;</ph> object contained within the property.","pos":[0,230],"source":"The <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> property represents the <`KeyInfo`> element of an XML digital signature using a <xref:System.Security.Cryptography.Xml.KeyInfo> object contained within the property."},{"content":"The &lt;<ph id=\"ph1\">`KeyInfo`</ph>&gt; element is a subelement of the &lt;<ph id=\"ph2\">`Signature`</ph>&gt; element.","pos":[232,301],"source":"  The <`KeyInfo`> element is a subelement of the <`Signature`> element."}]},{"pos":[308,494],"content":"Use the <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> property to embed key-related information intended to help identify the key necessary for validating an XML document.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A&gt;</ph> property to embed key-related information intended to help identify the key necessary for validating an XML document.","pos":[0,186],"source":"Use the <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> property to embed key-related information intended to help identify the key necessary for validating an XML document."}]},{"pos":[501,634],"content":"For more information about the <ph id=\"ph1\">`&lt;KeyInfo&gt;`</ph> element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/.","source":"For more information about the `<KeyInfo>` element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/."}],"pos":[81982,82623],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Security.Cryptography.Xml.KeyInfo\"></xref> object of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.","nodes":[{"pos":[0,159],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.KeyInfo\"&gt;&lt;/xref&gt;</ph> object of the current <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph> object.","source":"The <xref href=\"System.Security.Cryptography.Xml.KeyInfo\"></xref> object of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object."}],"pos":[84350,84510],"yaml":true},{"content":"Loads a <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> state from an XML element.","nodes":[{"pos":[0,98],"content":"Loads a <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph> state from an XML element.","source":"Loads a <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> state from an XML element."}],"pos":[85740,85839],"yaml":true},{"content":"The XML element to load the <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> state from.","nodes":[{"pos":[0,103],"content":"The XML element to load the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph> state from.","source":"The XML element to load the <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> state from."}],"pos":[86745,86849],"yaml":true},{"content":"The <code>value</code> parameter is `null`.","nodes":[{"pos":[0,43],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>value</code> parameter is `null`."}],"pos":[87029,87073],"yaml":true},{"content":"The <code>value</code> parameter does not contain a valid <xref href=\"System.Security.Cryptography.Xml.SignedXml.SignatureValue\"></xref> property.  \n  \n -or-  \n  \n The <code>value</code> parameter does not contain a valid <xref href=\"System.Security.Cryptography.Xml.SignedXml.SignedInfo\"></xref> property.","nodes":[{"pos":[0,146],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter does not contain a valid <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.SignatureValue\"&gt;&lt;/xref&gt;</ph> property.","source":"The <code>value</code> parameter does not contain a valid <xref href=\"System.Security.Cryptography.Xml.SignedXml.SignatureValue\"></xref> property."},{"pos":[153,157],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[164,306],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter does not contain a valid <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.SignedInfo\"&gt;&lt;/xref&gt;</ph> property.","source":"The <code>value</code> parameter does not contain a valid <xref href=\"System.Security.Cryptography.Xml.SignedXml.SignedInfo\"></xref> property."}],"pos":[87221,87538],"yaml":true},{"content":"Represents the <xref href=\"System.Security.Cryptography.Xml.Signature\"></xref> object of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.","nodes":[{"pos":[0,172],"content":"Represents the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.Signature\"&gt;&lt;/xref&gt;</ph> object of the current <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph> object.","source":"Represents the <xref href=\"System.Security.Cryptography.Xml.Signature\"></xref> object of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object."}],"pos":[88605,88778],"yaml":true},{"content":"Represents the name of the installed key to be used for signing the <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.","nodes":[{"pos":[0,139],"content":"Represents the name of the installed key to be used for signing the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph> object.","source":"Represents the name of the installed key to be used for signing the <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object."}],"pos":[90088,90228],"yaml":true},{"content":"Sets the current <xref href=\"System.Xml.XmlResolver\"></xref> object.","nodes":[{"pos":[0,68],"content":"Sets the current <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlResolver\"&gt;&lt;/xref&gt;</ph> object.","source":"Sets the current <xref href=\"System.Xml.XmlResolver\"></xref> object."}],"pos":[91418,91487],"yaml":true},{"content":"The <xref:System.Xml.XmlResolver> class resolves external XML resources named by a Uniform Resource Identifier (URI). If you do not trust the source of the XML file, you might not want to allow the XML file to access computer resources named by the URI. You can use the <xref:System.Security.Cryptography.Xml.SignedXml.Resolver%2A> property to control the level of access that XML files have to computer resources by specifying different <xref:System.Xml.XmlResolver> objects. If you do not want to allow any access, you can set this property to `null` (`Nothing` in Visual Basic).","nodes":[{"pos":[0,581],"content":"The <xref:System.Xml.XmlResolver> class resolves external XML resources named by a Uniform Resource Identifier (URI). If you do not trust the source of the XML file, you might not want to allow the XML file to access computer resources named by the URI. You can use the <xref:System.Security.Cryptography.Xml.SignedXml.Resolver%2A> property to control the level of access that XML files have to computer resources by specifying different <xref:System.Xml.XmlResolver> objects. If you do not want to allow any access, you can set this property to `null` (`Nothing` in Visual Basic).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlResolver&gt;</ph> class resolves external XML resources named by a Uniform Resource Identifier (URI).","pos":[0,117],"source":"The <xref:System.Xml.XmlResolver> class resolves external XML resources named by a Uniform Resource Identifier (URI)."},{"content":"If you do not trust the source of the XML file, you might not want to allow the XML file to access computer resources named by the URI.","pos":[118,253]},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.Resolver%2A&gt;</ph> property to control the level of access that XML files have to computer resources by specifying different <ph id=\"ph2\">&lt;xref:System.Xml.XmlResolver&gt;</ph> objects.","pos":[254,476],"source":" You can use the <xref:System.Security.Cryptography.Xml.SignedXml.Resolver%2A> property to control the level of access that XML files have to computer resources by specifying different <xref:System.Xml.XmlResolver> objects."},{"content":"If you do not want to allow any access, you can set this property to <ph id=\"ph1\">`null`</ph> (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic).","pos":[477,581],"source":" If you do not want to allow any access, you can set this property to `null` (`Nothing` in Visual Basic)."}]}],"pos":[91498,92080],"yaml":true,"extradata":"MT"},{"content":"The current <xref href=\"System.Xml.XmlResolver\"></xref> object. The defaults is a <xref href=\"System.Xml.XmlSecureResolver\"></xref> object.","nodes":[{"pos":[0,139],"content":"The current <xref href=\"System.Xml.XmlResolver\"></xref> object. The defaults is a <xref href=\"System.Xml.XmlSecureResolver\"></xref> object.","nodes":[{"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlResolver\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,63],"source":"The current <xref href=\"System.Xml.XmlResolver\"></xref> object."},{"content":"The defaults is a <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlSecureResolver\"&gt;&lt;/xref&gt;</ph> object.","pos":[64,139],"source":" The defaults is a <xref href=\"System.Xml.XmlSecureResolver\"></xref> object."}]}],"pos":[92284,92424],"yaml":true},{"content":"[Supported in the .NET Framework 4.5.1 and later versions]  \n  \n Gets the names of methods whose canonicalization algorithms are explicitly allowed.","nodes":[{"pos":[0,58],"content":"[Supported in the .NET Framework 4.5.1 and later versions]","nodes":[{"content":"[Supported in the .NET Framework 4.5.1 and later versions]","pos":[0,58]}]},{"pos":[65,148],"content":"Gets the names of methods whose canonicalization algorithms are explicitly allowed.","nodes":[{"content":"Gets the names of methods whose canonicalization algorithms are explicitly allowed.","pos":[0,83]}]}],"pos":[93747,93900],"yaml":true},{"content":"Canonicalization methods convert an XML document to its canonical form. For more information about canonical XML, see [Canonical XML](http://www.w3.org/TR/xml-c14n) on the W3C website.","nodes":[{"pos":[0,184],"content":"Canonicalization methods convert an XML document to its canonical form. For more information about canonical XML, see [Canonical XML](http://www.w3.org/TR/xml-c14n) on the W3C website.","nodes":[{"content":"Canonicalization methods convert an XML document to its canonical form.","pos":[0,71]},{"content":"For more information about canonical XML, see <bpt id=\"p1\">[</bpt>Canonical XML<ept id=\"p1\">](http://www.w3.org/TR/xml-c14n)</ept> on the W3C website.","pos":[72,184],"source":" For more information about canonical XML, see [Canonical XML](http://www.w3.org/TR/xml-c14n) on the W3C website."}]}],"pos":[93911,94096],"yaml":true,"extradata":"MT"},{"content":"A collection of the names of methods that safely produce canonical XML.","nodes":[{"pos":[0,71],"content":"A collection of the names of methods that safely produce canonical XML.","nodes":[{"content":"A collection of the names of methods that safely produce canonical XML.","pos":[0,71]}]}],"pos":[94313,94385],"yaml":true},{"content":"Gets the <xref href=\"System.Security.Cryptography.Xml.Signature\"></xref> object of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.","nodes":[{"pos":[0,166],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.Signature\"&gt;&lt;/xref&gt;</ph> object of the current <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the <xref href=\"System.Security.Cryptography.Xml.Signature\"></xref> object of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object."}],"pos":[95464,95631],"yaml":true},{"content":"The <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> property represents the <`Signature`> element of an XML digital signature using a <xref:System.Security.Cryptography.Xml.Signature> object contained within the property.  The <`Signature`> element is the root element used for XML digital signature creation and verification.  \n  \n Use the <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> property to retrieve the <xref:System.Security.Cryptography.Xml.Signature> object used by the <xref:System.Security.Cryptography.Xml.SignedXml> object.  \n  \n For more information about the `<Signature>` element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/.","nodes":[{"pos":[0,341],"content":"The <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> property represents the <`Signature`> element of an XML digital signature using a <xref:System.Security.Cryptography.Xml.Signature> object contained within the property.  The <`Signature`> element is the root element used for XML digital signature creation and verification.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A&gt;</ph> property represents the &lt;<ph id=\"ph2\">`Signature`</ph>&gt; element of an XML digital signature using a <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.Xml.Signature&gt;</ph> object contained within the property.","pos":[0,236],"source":"The <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> property represents the <`Signature`> element of an XML digital signature using a <xref:System.Security.Cryptography.Xml.Signature> object contained within the property."},{"content":"The &lt;<ph id=\"ph1\">`Signature`</ph>&gt; element is the root element used for XML digital signature creation and verification.","pos":[238,341],"source":"  The <`Signature`> element is the root element used for XML digital signature creation and verification."}]},{"pos":[348,570],"content":"Use the <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> property to retrieve the <xref:System.Security.Cryptography.Xml.Signature> object used by the <xref:System.Security.Cryptography.Xml.SignedXml> object.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A&gt;</ph> property to retrieve the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.Signature&gt;</ph> object used by the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.Xml.SignedXml&gt;</ph> object.","pos":[0,222],"source":"Use the <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> property to retrieve the <xref:System.Security.Cryptography.Xml.Signature> object used by the <xref:System.Security.Cryptography.Xml.SignedXml> object."}]},{"pos":[577,712],"content":"For more information about the <ph id=\"ph1\">`&lt;Signature&gt;`</ph> element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/.","source":"For more information about the `<Signature>` element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/."}],"pos":[95642,96361],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Security.Cryptography.Xml.Signature\"></xref> object of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.","nodes":[{"pos":[0,161],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.Signature\"&gt;&lt;/xref&gt;</ph> object of the current <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph> object.","source":"The <xref href=\"System.Security.Cryptography.Xml.Signature\"></xref> object of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object."}],"pos":[97842,98004],"yaml":true},{"content":"Gets a delegate that will be called to validate the format (not the cryptographic security) of an XML signature.","nodes":[{"pos":[0,112],"content":"Gets a delegate that will be called to validate the format (not the cryptographic security) of an XML signature.","nodes":[{"content":"Gets a delegate that will be called to validate the format (not the cryptographic security) of an XML signature.","pos":[0,112]}]}],"pos":[99235,99348],"yaml":true},{"content":"This method can be used to ensure that only certain transforms are used, or that the signature uses a certain hash algorithm, and so on.  \n  \n Setting the property to `null` removes all signature format validation from the <xref:System.Security.Cryptography.Xml.SignedXml> object.  \n  \n You can also read the object's current delegate and chain to it if you want.  \n  \n If you are setting up a format validator, the delegate you supply will receive as an input parameter the <xref:System.Security.Cryptography.Xml.SignedXml> object being verified and returns a Boolean value – `true` if the format is acceptable, `false` if it is not. If the delegate returns `false` for any reason, the <xref:System.Security.Cryptography.Xml.SignedXml> object will report that the XML signature is not valid.","nodes":[{"pos":[0,136],"content":"This method can be used to ensure that only certain transforms are used, or that the signature uses a certain hash algorithm, and so on.","nodes":[{"content":"This method can be used to ensure that only certain transforms are used, or that the signature uses a certain hash algorithm, and so on.","pos":[0,136]}]},{"pos":[143,280],"content":"Setting the property to <ph id=\"ph1\">`null`</ph> removes all signature format validation from the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedXml&gt;</ph> object.","source":"Setting the property to `null` removes all signature format validation from the <xref:System.Security.Cryptography.Xml.SignedXml> object."},{"pos":[287,363],"content":"You can also read the object's current delegate and chain to it if you want.","nodes":[{"content":"You can also read the object's current delegate and chain to it if you want.","pos":[0,76]}]},{"pos":[370,792],"content":"If you are setting up a format validator, the delegate you supply will receive as an input parameter the <xref:System.Security.Cryptography.Xml.SignedXml> object being verified and returns a Boolean value – `true` if the format is acceptable, `false` if it is not. If the delegate returns `false` for any reason, the <xref:System.Security.Cryptography.Xml.SignedXml> object will report that the XML signature is not valid.","nodes":[{"content":"If you are setting up a format validator, the delegate you supply will receive as an input parameter the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml&gt;</ph> object being verified and returns a Boolean value – <ph id=\"ph2\">`true`</ph> if the format is acceptable, <ph id=\"ph3\">`false`</ph> if it is not.","pos":[0,264],"source":"If you are setting up a format validator, the delegate you supply will receive as an input parameter the <xref:System.Security.Cryptography.Xml.SignedXml> object being verified and returns a Boolean value – `true` if the format is acceptable, `false` if it is not."},{"content":"If the delegate returns <ph id=\"ph1\">`false`</ph> for any reason, the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedXml&gt;</ph> object will report that the XML signature is not valid.","pos":[265,422],"source":" If the delegate returns `false` for any reason, the <xref:System.Security.Cryptography.Xml.SignedXml> object will report that the XML signature is not valid."}]}],"pos":[99359,100160],"yaml":true,"extradata":"MT"},{"content":"`true` if the format is acceptable; otherwise, `false`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">`true`</ph> if the format is acceptable; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the format is acceptable; otherwise, `false`."}],"pos":[100397,100455],"yaml":true},{"content":"Gets the length of the signature for the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.","nodes":[{"pos":[0,120],"content":"Gets the length of the signature for the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the length of the signature for the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object."}],"pos":[101609,101730],"yaml":true},{"content":"The length of the signature for the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.","nodes":[{"pos":[0,115],"content":"The length of the signature for the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph> object.","source":"The length of the signature for the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object."}],"pos":[101849,101965],"yaml":true},{"content":"Gets the signature method of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.","nodes":[{"pos":[0,112],"content":"Gets the signature method of the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the signature method of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object."}],"pos":[103148,103261],"yaml":true},{"content":"The <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> property represents the <`SignatureMethod`> element of an XML digital signature using a Uniform Resource Identifier (URI) string contained within the property. The <`SignatureMethod`> element is a subelement of the <`SignedInfo`> element.  \n  \n Use the <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> property to retrieve the <`SignatureMethod`> URI used by the <xref:System.Security.Cryptography.Xml.SignedXml> object. This property is read only. For more information about programmatically specifying a URI for the <`SignatureMethod`> element, see the <xref:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod%2A> property.  \n  \n For more information about the `<SignatureMethod>` element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/.","nodes":[{"pos":[0,311],"content":"The <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> property represents the <`SignatureMethod`> element of an XML digital signature using a Uniform Resource Identifier (URI) string contained within the property. The <`SignatureMethod`> element is a subelement of the <`SignedInfo`> element.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A&gt;</ph> property represents the &lt;<ph id=\"ph2\">`SignatureMethod`</ph>&gt; element of an XML digital signature using a Uniform Resource Identifier (URI) string contained within the property.","pos":[0,232],"source":"The <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> property represents the <`SignatureMethod`> element of an XML digital signature using a Uniform Resource Identifier (URI) string contained within the property."},{"content":"The &lt;<ph id=\"ph1\">`SignatureMethod`</ph>&gt; element is a subelement of the &lt;<ph id=\"ph2\">`SignedInfo`</ph>&gt; element.","pos":[233,311],"source":" The <`SignatureMethod`> element is a subelement of the <`SignedInfo`> element."}]},{"pos":[318,727],"content":"Use the <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> property to retrieve the <`SignatureMethod`> URI used by the <xref:System.Security.Cryptography.Xml.SignedXml> object. This property is read only. For more information about programmatically specifying a URI for the <`SignatureMethod`> element, see the <xref:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod%2A> property.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A&gt;</ph> property to retrieve the &lt;<ph id=\"ph2\">`SignatureMethod`</ph>&gt; URI used by the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.Xml.SignedXml&gt;</ph> object.","pos":[0,195],"source":"Use the <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> property to retrieve the <`SignatureMethod`> URI used by the <xref:System.Security.Cryptography.Xml.SignedXml> object."},{"content":"This property is read only.","pos":[196,223]},{"content":"For more information about programmatically specifying a URI for the &lt;<ph id=\"ph1\">`SignatureMethod`</ph>&gt; element, see the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod%2A&gt;</ph> property.","pos":[224,409],"source":" For more information about programmatically specifying a URI for the <`SignatureMethod`> element, see the <xref:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod%2A> property."}]},{"pos":[734,875],"content":"For more information about the <ph id=\"ph1\">`&lt;SignatureMethod&gt;`</ph> element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/.","source":"For more information about the `<SignatureMethod>` element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/."}],"pos":[103272,104154],"yaml":true,"extradata":"MT"},{"content":"The signature method of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.","nodes":[{"pos":[0,107],"content":"The signature method of the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph> object.","source":"The signature method of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object."}],"pos":[104273,104381],"yaml":true},{"content":"Gets the signature value of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.","nodes":[{"pos":[0,111],"content":"Gets the signature value of the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the signature value of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object."}],"pos":[105558,105670],"yaml":true},{"content":"The <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> property represents the <`SignatureValue`> element of an XML digital signature using an array of bytes contained within the property.  The <`SignatureValue`> element is a subelement of the <`Signature>` element.  \n  \n Use the <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> property to retrieve the value of the XML digital signature.  This property is automatically populated when you make a successful call to the <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> method.  \n  \n For more information about the `<SignatureValue>` element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/.","nodes":[{"pos":[0,283],"content":"The <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> property represents the <`SignatureValue`> element of an XML digital signature using an array of bytes contained within the property.  The <`SignatureValue`> element is a subelement of the <`Signature>` element.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A&gt;</ph> property represents the &lt;<ph id=\"ph2\">`SignatureValue`</ph>&gt; element of an XML digital signature using an array of bytes contained within the property.","pos":[0,205],"source":"The <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> property represents the <`SignatureValue`> element of an XML digital signature using an array of bytes contained within the property."},{"content":"The &lt;<ph id=\"ph1\">`SignatureValue`</ph>&gt; element is a subelement of the &lt;<ph id=\"ph2\">`Signature&gt;`</ph> element.","pos":[207,283],"source":"  The <`SignatureValue`> element is a subelement of the <`Signature>` element."}]},{"pos":[290,585],"content":"Use the <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> property to retrieve the value of the XML digital signature.  This property is automatically populated when you make a successful call to the <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> method.","nodes":[{"content":"Use the <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> property to retrieve the value of the XML digital signature.  This property is automatically populated when you make a successful call to the <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> method.","pos":[0,295],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A&gt;</ph> property to retrieve the value of the XML digital signature.","pos":[0,136],"source":"Use the <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> property to retrieve the value of the XML digital signature."},{"content":"This property is automatically populated when you make a successful call to the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A&gt;</ph> method.","pos":[138,295],"source":"  This property is automatically populated when you make a successful call to the <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> method."}]}]},{"pos":[592,732],"content":"For more information about the <ph id=\"ph1\">`&lt;SignatureValue&gt;`</ph> element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/.","source":"For more information about the `<SignatureValue>` element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/."}],"pos":[105681,106420],"yaml":true,"extradata":"MT"},{"content":"A byte array that contains the signature value of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.","nodes":[{"pos":[0,133],"content":"A byte array that contains the signature value of the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph> object.","source":"A byte array that contains the signature value of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object."}],"pos":[106538,106672],"yaml":true},{"content":"Gets the <xref href=\"System.Security.Cryptography.Xml.SignedInfo\"></xref> object of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.","nodes":[{"pos":[0,167],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedInfo\"&gt;&lt;/xref&gt;</ph> object of the current <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the <xref href=\"System.Security.Cryptography.Xml.SignedInfo\"></xref> object of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object."}],"pos":[107824,107992],"yaml":true},{"content":"The <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property represents the <`SignedInfo`> element of an XML digital signature using an array of bytes contained within the property.  The <`SignedInfo`> element is a subelement of the <`Signature>` element.  \n  \n Use the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property to retrieve the <xref:System.Security.Cryptography.Xml.SignedInfo> object that is used by the <xref:System.Security.Cryptography.Xml.SignedXml> object to create an XML digital signature.  \n  \n For more information about the `<SignedInfo>` element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/.","nodes":[{"pos":[0,271],"content":"The <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property represents the <`SignedInfo`> element of an XML digital signature using an array of bytes contained within the property.  The <`SignedInfo`> element is a subelement of the <`Signature>` element.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A&gt;</ph> property represents the &lt;<ph id=\"ph2\">`SignedInfo`</ph>&gt; element of an XML digital signature using an array of bytes contained within the property.","pos":[0,197],"source":"The <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property represents the <`SignedInfo`> element of an XML digital signature using an array of bytes contained within the property."},{"content":"The &lt;<ph id=\"ph1\">`SignedInfo`</ph>&gt; element is a subelement of the &lt;<ph id=\"ph2\">`Signature&gt;`</ph> element.","pos":[199,271],"source":"  The <`SignedInfo`> element is a subelement of the <`Signature>` element."}]},{"pos":[278,545],"content":"Use the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property to retrieve the <xref:System.Security.Cryptography.Xml.SignedInfo> object that is used by the <xref:System.Security.Cryptography.Xml.SignedXml> object to create an XML digital signature.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A&gt;</ph> property to retrieve the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedInfo&gt;</ph> object that is used by the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.Xml.SignedXml&gt;</ph> object to create an XML digital signature.","pos":[0,267],"source":"Use the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property to retrieve the <xref:System.Security.Cryptography.Xml.SignedInfo> object that is used by the <xref:System.Security.Cryptography.Xml.SignedXml> object to create an XML digital signature."}]},{"pos":[552,688],"content":"For more information about the <ph id=\"ph1\">`&lt;SignedInfo&gt;`</ph> element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/.","source":"For more information about the `<SignedInfo>` element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/."}],"pos":[108003,108698],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Security.Cryptography.Xml.SignedInfo\"></xref> object of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.","nodes":[{"pos":[0,162],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedInfo\"&gt;&lt;/xref&gt;</ph> object of the current <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph> object.","source":"The <xref href=\"System.Security.Cryptography.Xml.SignedInfo\"></xref> object of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object."}],"pos":[108879,109042],"yaml":true},{"content":"Gets or sets the asymmetric algorithm key used for signing a <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.","nodes":[{"pos":[0,132],"content":"Gets or sets the asymmetric algorithm key used for signing a <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets or sets the asymmetric algorithm key used for signing a <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object."}],"pos":[110190,110323],"yaml":true},{"content":"Use the <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A> property to specify the asymmetric key you want to use to create an XML digital signature.","nodes":[{"pos":[0,162],"content":"Use the <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A> property to specify the asymmetric key you want to use to create an XML digital signature.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A&gt;</ph> property to specify the asymmetric key you want to use to create an XML digital signature.","pos":[0,162],"source":"Use the <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A> property to specify the asymmetric key you want to use to create an XML digital signature."}]}],"pos":[110334,110497],"yaml":true,"extradata":"MT"},{"content":"The asymmetric algorithm key used for signing the <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.","nodes":[{"pos":[0,121],"content":"The asymmetric algorithm key used for signing the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph> object.","source":"The asymmetric algorithm key used for signing the <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object."}],"pos":[113212,113334],"yaml":true},{"content":"Gets or sets the name of the installed key to be used for signing the <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.","nodes":[{"pos":[0,141],"content":"Gets or sets the name of the installed key to be used for signing the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets or sets the name of the installed key to be used for signing the <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object."}],"pos":[114506,114648],"yaml":true},{"content":"The name of the installed key to be used for signing the <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.","nodes":[{"pos":[0,128],"content":"The name of the installed key to be used for signing the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph> object.","source":"The name of the installed key to be used for signing the <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object."}],"pos":[114771,114900],"yaml":true},{"content":"Represents the Uniform Resource Identifier (URI) for the XML mode decryption transformation. This field is constant.","nodes":[{"pos":[0,116],"content":"Represents the Uniform Resource Identifier (URI) for the XML mode decryption transformation. This field is constant.","nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the XML mode decryption transformation. This field is constant.","pos":[0,116],"nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the XML mode decryption transformation.","pos":[0,92]},{"content":"This field is constant.","pos":[93,116]}]}]}],"pos":[116139,116256],"yaml":true},{"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl> field is \"http://www.w3.org/2002/07/decrypt#XML\".  \n  \n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \n  \n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2002/07/decrypt#XML.","nodes":[{"pos":[0,142],"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl> field is \"http://www.w3.org/2002/07/decrypt#XML\".","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl&gt;</ph> field is \"http://www.w3.org/2002/07/decrypt#XML\".","pos":[0,142],"source":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl> field is \"http://www.w3.org/2002/07/decrypt#XML\"."}]},{"pos":[149,255],"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","nodes":[{"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","pos":[0,106]}]},{"pos":[262,379],"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2002/07/decrypt#XML.","nodes":[{"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2002/07/decrypt#XML.","pos":[0,117]}]}],"pos":[116267,116655],"yaml":true,"extradata":"MT"},{"content":"Represents the Uniform Resource Identifier (URI) for the base 64 transformation. This field is constant.","nodes":[{"pos":[0,104],"content":"Represents the Uniform Resource Identifier (URI) for the base 64 transformation. This field is constant.","nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the base 64 transformation. This field is constant.","pos":[0,104],"nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the base 64 transformation.","pos":[0,80]},{"content":"This field is constant.","pos":[81,104]}]}]}],"pos":[117953,118058],"yaml":true},{"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl> field is \"http://www.w3.org/2000/09/xmldsig#base64\".  \n  \n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \n  \n The <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl> field.  \n  \n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#base64.","nodes":[{"pos":[0,145],"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl> field is \"http://www.w3.org/2000/09/xmldsig#base64\".","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl&gt;</ph> field is \"http://www.w3.org/2000/09/xmldsig#base64\".","pos":[0,145],"source":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl> field is \"http://www.w3.org/2000/09/xmldsig#base64\"."}]},{"pos":[152,258],"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","nodes":[{"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","pos":[0,106]}]},{"pos":[265,462],"content":"The <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl> field.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform&gt;</ph> class implements the transform described by the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl&gt;</ph> field.","pos":[0,197],"source":"The <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl> field."}]},{"pos":[469,589],"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#base64.","nodes":[{"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#base64.","pos":[0,120]}]}],"pos":[118069,118669],"yaml":true,"extradata":"MT"},{"content":"Represents the Uniform Resource Identifier (URI) for the Canonical XML transformation. This field is constant.","nodes":[{"pos":[0,110],"content":"Represents the Uniform Resource Identifier (URI) for the Canonical XML transformation. This field is constant.","nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the Canonical XML transformation. This field is constant.","pos":[0,110],"nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the Canonical XML transformation.","pos":[0,86]},{"content":"This field is constant.","pos":[87,110]}]}]}],"pos":[120705,120816],"yaml":true},{"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> field is \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\".  \n  \n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \n  \n The <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> field.  \n  \n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/2001/REC-xml-c14n-20010315.  \n  \n This field has the same value as the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> field.","nodes":[{"pos":[0,150],"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> field is \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\".","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl&gt;</ph> field is \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\".","pos":[0,150],"source":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> field is \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\"."}]},{"pos":[157,263],"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","nodes":[{"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","pos":[0,106]}]},{"pos":[270,463],"content":"The <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> field.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform&gt;</ph> class implements the transform described by the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl&gt;</ph> field.","pos":[0,193],"source":"The <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> field."}]},{"pos":[470,597],"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/2001/REC-xml-c14n-20010315.","nodes":[{"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/2001/REC-xml-c14n-20010315.","pos":[0,127]}]},{"pos":[604,724],"content":"This field has the same value as the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> field.","nodes":[{"content":"This field has the same value as the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl&gt;</ph> field.","pos":[0,120],"source":"This field has the same value as the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> field."}]}],"pos":[120827,121564],"yaml":true,"extradata":"MT"},{"content":"Represents the Uniform Resource Identifier (URI) for the Canonical XML transformation, with comments. This field is constant.","nodes":[{"pos":[0,125],"content":"Represents the Uniform Resource Identifier (URI) for the Canonical XML transformation, with comments. This field is constant.","nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the Canonical XML transformation, with comments. This field is constant.","pos":[0,125],"nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the Canonical XML transformation, with comments.","pos":[0,101]},{"content":"This field is constant.","pos":[102,125]}]}]}],"pos":[123657,123783],"yaml":true},{"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> field is \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments \".  \n  \n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \n  \n The <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> field.  \n  \n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments.  \n  \n This field has the same value as the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> field.","nodes":[{"pos":[0,176],"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> field is \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments \".","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl&gt;</ph> field is \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments \".","pos":[0,176],"source":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> field is \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments \"."}]},{"pos":[183,289],"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","nodes":[{"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","pos":[0,106]}]},{"pos":[296,513],"content":"The <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> field.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform&gt;</ph> class implements the transform described by the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl&gt;</ph> field.","pos":[0,217],"source":"The <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> field."}]},{"pos":[520,660],"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments.","nodes":[{"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments.","pos":[0,140]}]},{"pos":[667,799],"content":"This field has the same value as the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> field.","nodes":[{"content":"This field has the same value as the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl&gt;</ph> field.","pos":[0,132],"source":"This field has the same value as the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> field."}]}],"pos":[123794,124606],"yaml":true,"extradata":"MT"},{"content":"Represents the Uniform Resource Identifier (URI) for the standard canonicalization algorithm for XML digital signatures. This field is constant.","nodes":[{"pos":[0,144],"content":"Represents the Uniform Resource Identifier (URI) for the standard canonicalization algorithm for XML digital signatures. This field is constant.","nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the standard canonicalization algorithm for XML digital signatures. This field is constant.","pos":[0,144],"nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the standard canonicalization algorithm for XML digital signatures.","pos":[0,120]},{"content":"This field is constant.","pos":[121,144]}]}]}],"pos":[125920,126065],"yaml":true},{"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> field is \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\".  \n  \n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \n  \n The <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> field.  \n  \n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/2001/REC-xml-c14n-20010315.  \n  \n This field has the same value as the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> field.","nodes":[{"pos":[0,153],"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> field is \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\".","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl&gt;</ph> field is \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\".","pos":[0,153],"source":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> field is \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\"."}]},{"pos":[160,266],"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","nodes":[{"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","pos":[0,106]}]},{"pos":[273,469],"content":"The <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> field.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform&gt;</ph> class implements the transform described by the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl&gt;</ph> field.","pos":[0,196],"source":"The <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> field."}]},{"pos":[476,603],"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/2001/REC-xml-c14n-20010315.","nodes":[{"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/2001/REC-xml-c14n-20010315.","pos":[0,127]}]},{"pos":[610,727],"content":"This field has the same value as the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> field.","nodes":[{"content":"This field has the same value as the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl&gt;</ph> field.","pos":[0,117],"source":"This field has the same value as the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> field."}]}],"pos":[126076,126816],"yaml":true,"extradata":"MT"},{"content":"Represents the Uniform Resource Identifier (URI) for the standard canonicalization algorithm for XML digital signatures and includes comments. This field is constant.","nodes":[{"pos":[0,166],"content":"Represents the Uniform Resource Identifier (URI) for the standard canonicalization algorithm for XML digital signatures and includes comments. This field is constant.","nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the standard canonicalization algorithm for XML digital signatures and includes comments. This field is constant.","pos":[0,166],"nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the standard canonicalization algorithm for XML digital signatures and includes comments.","pos":[0,142]},{"content":"This field is constant.","pos":[143,166]}]}]}],"pos":[128193,128360],"yaml":true},{"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> field is \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments\".  \n  \n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \n  \n The <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> field.  \n  \n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments.  \n  \n This field has the same value as the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> field.","nodes":[{"pos":[0,178],"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> field is \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments\".","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl&gt;</ph> field is \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments\".","pos":[0,178],"source":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> field is \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments\"."}]},{"pos":[185,291],"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","nodes":[{"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","pos":[0,106]}]},{"pos":[298,518],"content":"The <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> field.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform&gt;</ph> class implements the transform described by the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl&gt;</ph> field.","pos":[0,220],"source":"The <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> field."}]},{"pos":[525,665],"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments.","nodes":[{"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments.","pos":[0,140]}]},{"pos":[672,801],"content":"This field has the same value as the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> field.","nodes":[{"content":"This field has the same value as the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl&gt;</ph> field.","pos":[0,129],"source":"This field has the same value as the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> field."}]}],"pos":[128371,129185],"yaml":true,"extradata":"MT"},{"content":"Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.DSA\"></xref> algorithm for XML digital signatures. This field is constant.","nodes":[{"pos":[0,181],"content":"Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.DSA\"></xref> algorithm for XML digital signatures. This field is constant.","nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the standard <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;&lt;/xref&gt;</ph> algorithm for XML digital signatures.","pos":[0,157],"source":"Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.DSA\"></xref> algorithm for XML digital signatures."},{"content":"This field is constant.","pos":[158,181]}]}],"pos":[130424,130606],"yaml":true},{"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl> field is \"http://www.w3.org/2000/09/xmldsig#dsa-sha1\".  \n  \n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \n  \n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#dsa-sha1.","nodes":[{"pos":[0,135],"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl> field is \"http://www.w3.org/2000/09/xmldsig#dsa-sha1\".","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&gt;</ph> field is \"http://www.w3.org/2000/09/xmldsig#dsa-sha1\".","pos":[0,135],"source":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl> field is \"http://www.w3.org/2000/09/xmldsig#dsa-sha1\"."}]},{"pos":[142,248],"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","nodes":[{"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","pos":[0,106]}]},{"pos":[255,377],"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#dsa-sha1.","nodes":[{"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#dsa-sha1.","pos":[0,122]}]}],"pos":[130617,131003],"yaml":true,"extradata":"MT"},{"content":"Represents the Uniform Resource Identifier (URI) for enveloped signature transformation. This field is constant.","nodes":[{"pos":[0,112],"content":"Represents the Uniform Resource Identifier (URI) for enveloped signature transformation. This field is constant.","nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for enveloped signature transformation. This field is constant.","pos":[0,112],"nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for enveloped signature transformation.","pos":[0,88]},{"content":"This field is constant.","pos":[89,112]}]}]}],"pos":[132361,132474],"yaml":true},{"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl> field is \"http://www.w3.org/2000/09/xmldsig#enveloped-signature\".  \n  \n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \n  \n The <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl> field.  \n  \n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#enveloped-signature.","nodes":[{"pos":[0,170],"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl> field is \"http://www.w3.org/2000/09/xmldsig#enveloped-signature\".","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl&gt;</ph> field is \"http://www.w3.org/2000/09/xmldsig#enveloped-signature\".","pos":[0,170],"source":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl> field is \"http://www.w3.org/2000/09/xmldsig#enveloped-signature\"."}]},{"pos":[177,283],"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","nodes":[{"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","pos":[0,106]}]},{"pos":[290,511],"content":"The <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl> field.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform&gt;</ph> class implements the transform described by the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl&gt;</ph> field.","pos":[0,221],"source":"The <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl> field."}]},{"pos":[518,651],"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#enveloped-signature.","nodes":[{"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#enveloped-signature.","pos":[0,133]}]}],"pos":[132485,133147],"yaml":true,"extradata":"MT"},{"content":"Represents the Uniform Resource Identifier (URI) for exclusive XML canonicalization. This field is constant.","nodes":[{"pos":[0,108],"content":"Represents the Uniform Resource Identifier (URI) for exclusive XML canonicalization. This field is constant.","nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for exclusive XML canonicalization. This field is constant.","pos":[0,108],"nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for exclusive XML canonicalization.","pos":[0,84]},{"content":"This field is constant.","pos":[85,108]}]}]}],"pos":[135297,135406],"yaml":true},{"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl> field is \"http://www.w3.org/2001/10/xml-exc-c14n#\".  \n  \n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \n  \n The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl> field.  \n  \n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2001/10/xml-exc-c14n#.","nodes":[{"pos":[0,145],"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl> field is \"http://www.w3.org/2001/10/xml-exc-c14n#\".","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl&gt;</ph> field is \"http://www.w3.org/2001/10/xml-exc-c14n#\".","pos":[0,145],"source":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl> field is \"http://www.w3.org/2001/10/xml-exc-c14n#\"."}]},{"pos":[152,258],"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","nodes":[{"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","pos":[0,106]}]},{"pos":[265,464],"content":"The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl> field.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform&gt;</ph> class implements the transform described by the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl&gt;</ph> field.","pos":[0,199],"source":"The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl> field."}]},{"pos":[471,590],"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2001/10/xml-exc-c14n#.","nodes":[{"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2001/10/xml-exc-c14n#.","pos":[0,119]}]}],"pos":[135417,136018],"yaml":true,"extradata":"MT"},{"content":"Represents the Uniform Resource Identifier (URI) for exclusive XML canonicalization, with comments. This field is constant.","nodes":[{"pos":[0,123],"content":"Represents the Uniform Resource Identifier (URI) for exclusive XML canonicalization, with comments. This field is constant.","nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for exclusive XML canonicalization, with comments. This field is constant.","pos":[0,123],"nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for exclusive XML canonicalization, with comments.","pos":[0,99]},{"content":"This field is constant.","pos":[100,123]}]}]}],"pos":[138095,138219],"yaml":true},{"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> field is \"http://www.w3.org/2001/10/xml-exc-c14n#WithComments\".  \n  \n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \n  \n The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> field.  \n  \n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2001/10/xml-exc-c14n#WithComments.","nodes":[{"pos":[0,169],"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> field is \"http://www.w3.org/2001/10/xml-exc-c14n#WithComments\".","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl&gt;</ph> field is \"http://www.w3.org/2001/10/xml-exc-c14n#WithComments\".","pos":[0,169],"source":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> field is \"http://www.w3.org/2001/10/xml-exc-c14n#WithComments\"."}]},{"pos":[176,282],"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","nodes":[{"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","pos":[0,106]}]},{"pos":[289,512],"content":"The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> field.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform&gt;</ph> class implements the transform described by the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl&gt;</ph> field.","pos":[0,223],"source":"The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> field."}]},{"pos":[519,650],"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2001/10/xml-exc-c14n#WithComments.","nodes":[{"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2001/10/xml-exc-c14n#WithComments.","pos":[0,131]}]}],"pos":[138230,138891],"yaml":true,"extradata":"MT"},{"content":"Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.HMACSHA1\"></xref> algorithm for XML digital signatures. This field is constant.","nodes":[{"pos":[0,186],"content":"Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.HMACSHA1\"></xref> algorithm for XML digital signatures. This field is constant.","nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the standard <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.HMACSHA1\"&gt;&lt;/xref&gt;</ph> algorithm for XML digital signatures.","pos":[0,162],"source":"Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.HMACSHA1\"></xref> algorithm for XML digital signatures."},{"content":"This field is constant.","pos":[163,186]}]}],"pos":[140941,141128],"yaml":true},{"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url> field is \"http://www.w3.org/2000/09/xmldsig#hmac-sha1\".  \n  \n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \n  \n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#hmac-sha1.","nodes":[{"pos":[0,141],"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url> field is \"http://www.w3.org/2000/09/xmldsig#hmac-sha1\".","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url&gt;</ph> field is \"http://www.w3.org/2000/09/xmldsig#hmac-sha1\".","pos":[0,141],"source":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url> field is \"http://www.w3.org/2000/09/xmldsig#hmac-sha1\"."}]},{"pos":[148,254],"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","nodes":[{"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","pos":[0,106]}]},{"pos":[261,384],"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#hmac-sha1.","nodes":[{"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#hmac-sha1.","pos":[0,123]}]}],"pos":[141139,141532],"yaml":true,"extradata":"MT"},{"content":"Represents the Uniform Resource Identifier (URI) for the standard minimal canonicalization algorithm for XML digital signatures. This field is constant.","nodes":[{"pos":[0,152],"content":"Represents the Uniform Resource Identifier (URI) for the standard minimal canonicalization algorithm for XML digital signatures. This field is constant.","nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the standard minimal canonicalization algorithm for XML digital signatures. This field is constant.","pos":[0,152],"nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the standard minimal canonicalization algorithm for XML digital signatures.","pos":[0,128]},{"content":"This field is constant.","pos":[129,152]}]}]}],"pos":[142871,143024],"yaml":true},{"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl> field is \"http://www.w3.org/2000/09/xmldsig#minimal\".  \n  \n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \n  \n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#minimal.","nodes":[{"pos":[0,154],"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl> field is \"http://www.w3.org/2000/09/xmldsig#minimal\".","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl&gt;</ph> field is \"http://www.w3.org/2000/09/xmldsig#minimal\".","pos":[0,154],"source":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl> field is \"http://www.w3.org/2000/09/xmldsig#minimal\"."}]},{"pos":[161,267],"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","nodes":[{"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","pos":[0,106]}]},{"pos":[274,395],"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#minimal.","nodes":[{"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#minimal.","pos":[0,121]}]}],"pos":[143035,143439],"yaml":true,"extradata":"MT"},{"content":"Represents the Uniform Resource Identifier (URI) for the standard namespace for XML digital signatures. This field is constant.","nodes":[{"pos":[0,127],"content":"Represents the Uniform Resource Identifier (URI) for the standard namespace for XML digital signatures. This field is constant.","nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the standard namespace for XML digital signatures. This field is constant.","pos":[0,127],"nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the standard namespace for XML digital signatures.","pos":[0,103]},{"content":"This field is constant.","pos":[104,127]}]}]}],"pos":[144709,144837],"yaml":true},{"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl> field is \"http://www.w3.org/2000/09/xmldsig#\".  \n  \n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \n  \n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#.","nodes":[{"pos":[0,133],"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl> field is \"http://www.w3.org/2000/09/xmldsig#\".","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl&gt;</ph> field is \"http://www.w3.org/2000/09/xmldsig#\".","pos":[0,133],"source":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl> field is \"http://www.w3.org/2000/09/xmldsig#\"."}]},{"pos":[140,246],"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","nodes":[{"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","pos":[0,106]}]},{"pos":[253,367],"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#.","nodes":[{"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#.","pos":[0,114]}]}],"pos":[144848,145224],"yaml":true,"extradata":"MT"},{"content":"Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.RSA\"></xref> signature method for XML digital signatures. This field is constant.","nodes":[{"pos":[0,188],"content":"Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.RSA\"></xref> signature method for XML digital signatures. This field is constant.","nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the standard <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph> signature method for XML digital signatures.","pos":[0,164],"source":"Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.RSA\"></xref> signature method for XML digital signatures."},{"content":"This field is constant.","pos":[165,188]}]}],"pos":[146468,146657],"yaml":true},{"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> field is \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\".  \n  \n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \n  \n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#rsa-sha1.","nodes":[{"pos":[0,139],"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> field is \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\".","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&gt;</ph> field is \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\".","pos":[0,139],"source":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> field is \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\"."}]},{"pos":[146,252],"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","nodes":[{"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","pos":[0,106]}]},{"pos":[259,381],"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#rsa-sha1.","nodes":[{"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#rsa-sha1.","pos":[0,122]}]}],"pos":[146668,147058],"yaml":true,"extradata":"MT"},{"content":"Represents the Uniform Resource Identifier (URI) for the  <xref href=\"System.Security.Cryptography.RSA\"></xref> SHA-256 signature method variation for XML digital signatures. This field is constant.","nodes":[{"pos":[0,198],"content":"Represents the Uniform Resource Identifier (URI) for the  <xref href=\"System.Security.Cryptography.RSA\"></xref> SHA-256 signature method variation for XML digital signatures. This field is constant.","nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the  <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph> SHA-256 signature method variation for XML digital signatures.","pos":[0,174],"source":"Represents the Uniform Resource Identifier (URI) for the  <xref href=\"System.Security.Cryptography.RSA\"></xref> SHA-256 signature method variation for XML digital signatures."},{"content":"This field is constant.","pos":[175,198]}]}],"pos":[148275,148474],"yaml":true},{"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url> field is \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\".  \n  \n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \n  \n For more information, see the World Wide Web Consortium (W3C) specification at [http://www.w3.org/2001/04/xmldsig-more#rsa-sha256](http://www.w3.org/2001/04/xmldsig-more).","nodes":[{"pos":[0,148],"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url> field is \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\".","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url&gt;</ph> field is \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\".","pos":[0,148],"source":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url> field is \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\"."}]},{"pos":[155,261],"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","nodes":[{"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","pos":[0,106]}]},{"pos":[268,439],"content":"For more information, see the World Wide Web Consortium (W3C) specification at <bpt id=\"p1\">[</bpt>http://www.w3.org/2001/04/xmldsig-more#rsa-sha256<ept id=\"p1\">](http://www.w3.org/2001/04/xmldsig-more)</ept>.","source":"For more information, see the World Wide Web Consortium (W3C) specification at [http://www.w3.org/2001/04/xmldsig-more#rsa-sha256](http://www.w3.org/2001/04/xmldsig-more)."}],"pos":[148485,148933],"yaml":true,"extradata":"MT"},{"content":"Represents the Uniform Resource Identifier (URI) for the  <xref href=\"System.Security.Cryptography.RSA\"></xref> SHA-384 signature method variation for XML digital signatures. This field is constant.","nodes":[{"pos":[0,198],"content":"Represents the Uniform Resource Identifier (URI) for the  <xref href=\"System.Security.Cryptography.RSA\"></xref> SHA-384 signature method variation for XML digital signatures. This field is constant.","nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the  <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph> SHA-384 signature method variation for XML digital signatures.","pos":[0,174],"source":"Represents the Uniform Resource Identifier (URI) for the  <xref href=\"System.Security.Cryptography.RSA\"></xref> SHA-384 signature method variation for XML digital signatures."},{"content":"This field is constant.","pos":[175,198]}]}],"pos":[149860,150059],"yaml":true},{"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url> field is \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha384\".  \n  \n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \n  \n For more information, see the World Wide Web Consortium (W3C) specification at [http://www.w3.org/2001/04/xmldsig-more#rsa-sha384](http://www.w3.org/2001/04/xmldsig-more#rsa-sha384).","nodes":[{"pos":[0,148],"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url> field is \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha384\".","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url&gt;</ph> field is \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha384\".","pos":[0,148],"source":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url> field is \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha384\"."}]},{"pos":[155,261],"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","nodes":[{"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","pos":[0,106]}]},{"pos":[268,450],"content":"For more information, see the World Wide Web Consortium (W3C) specification at <bpt id=\"p1\">[</bpt>http://www.w3.org/2001/04/xmldsig-more#rsa-sha384<ept id=\"p1\">](http://www.w3.org/2001/04/xmldsig-more#rsa-sha384)</ept>.","source":"For more information, see the World Wide Web Consortium (W3C) specification at [http://www.w3.org/2001/04/xmldsig-more#rsa-sha384](http://www.w3.org/2001/04/xmldsig-more#rsa-sha384)."}],"pos":[150070,150529],"yaml":true,"extradata":"MT"},{"content":"Represents the Uniform Resource Identifier (URI) for the  <xref href=\"System.Security.Cryptography.RSA\"></xref> SHA-512 signature method variation for XML digital signatures. This field is constant.","nodes":[{"pos":[0,198],"content":"Represents the Uniform Resource Identifier (URI) for the  <xref href=\"System.Security.Cryptography.RSA\"></xref> SHA-512 signature method variation for XML digital signatures. This field is constant.","nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the  <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph> SHA-512 signature method variation for XML digital signatures.","pos":[0,174],"source":"Represents the Uniform Resource Identifier (URI) for the  <xref href=\"System.Security.Cryptography.RSA\"></xref> SHA-512 signature method variation for XML digital signatures."},{"content":"This field is constant.","pos":[175,198]}]}],"pos":[151456,151655],"yaml":true},{"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url> field is \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha512\".  \n  \n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \n  \n For more information, see the World Wide Web Consortium (W3C) specification at [http://www.w3.org/2001/04/xmldsig-more#rsa-sha512](http://www.w3.org/2001/04/xmldsig-more#rsa-sha512).","nodes":[{"pos":[0,148],"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url> field is \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha512\".","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url&gt;</ph> field is \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha512\".","pos":[0,148],"source":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url> field is \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha512\"."}]},{"pos":[155,261],"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","nodes":[{"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","pos":[0,106]}]},{"pos":[268,450],"content":"For more information, see the World Wide Web Consortium (W3C) specification at <bpt id=\"p1\">[</bpt>http://www.w3.org/2001/04/xmldsig-more#rsa-sha512<ept id=\"p1\">](http://www.w3.org/2001/04/xmldsig-more#rsa-sha512)</ept>.","source":"For more information, see the World Wide Web Consortium (W3C) specification at [http://www.w3.org/2001/04/xmldsig-more#rsa-sha512](http://www.w3.org/2001/04/xmldsig-more#rsa-sha512)."}],"pos":[151666,152125],"yaml":true,"extradata":"MT"},{"content":"Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.SHA1\"></xref> digest method for XML digital signatures. This field is constant.","nodes":[{"pos":[0,186],"content":"Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.SHA1\"></xref> digest method for XML digital signatures. This field is constant.","nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the standard <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SHA1\"&gt;&lt;/xref&gt;</ph> digest method for XML digital signatures.","pos":[0,162],"source":"Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.SHA1\"></xref> digest method for XML digital signatures."},{"content":"This field is constant.","pos":[163,186]}]}],"pos":[153059,153246],"yaml":true},{"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> field is \"http://www.w3.org/2000/09/xmldsig#sha1\".  \n  \n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \n  \n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#sha1.","nodes":[{"pos":[0,132],"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> field is \"http://www.w3.org/2000/09/xmldsig#sha1\".","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url&gt;</ph> field is \"http://www.w3.org/2000/09/xmldsig#sha1\".","pos":[0,132],"source":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> field is \"http://www.w3.org/2000/09/xmldsig#sha1\"."}]},{"pos":[139,245],"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","nodes":[{"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","pos":[0,106]}]},{"pos":[252,370],"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#sha1.","nodes":[{"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#sha1.","pos":[0,118]}]}],"pos":[153257,153636],"yaml":true,"extradata":"MT"},{"content":"Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.SHA256\"></xref> digest method for XML digital signatures. This field is constant.","nodes":[{"pos":[0,188],"content":"Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.SHA256\"></xref> digest method for XML digital signatures. This field is constant.","nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the standard <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SHA256\"&gt;&lt;/xref&gt;</ph> digest method for XML digital signatures.","pos":[0,164],"source":"Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.SHA256\"></xref> digest method for XML digital signatures."},{"content":"This field is constant.","pos":[165,188]}]}],"pos":[154832,155021],"yaml":true},{"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url> field is \"http://www.w3.org/2001/04/xmlenc#sha256\".  \n  \n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \n  \n For more information, see the World Wide Web Consortium (W3C) specification at [http://www.w3.org/2001/04/xmlenc#sha256](http://www.w3.org/2001/04/xmlenc#sha256).","nodes":[{"pos":[0,135],"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url> field is \"http://www.w3.org/2001/04/xmlenc#sha256\".","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url&gt;</ph> field is \"http://www.w3.org/2001/04/xmlenc#sha256\".","pos":[0,135],"source":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url> field is \"http://www.w3.org/2001/04/xmlenc#sha256\"."}]},{"pos":[142,248],"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","nodes":[{"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","pos":[0,106]}]},{"pos":[255,417],"content":"For more information, see the World Wide Web Consortium (W3C) specification at <bpt id=\"p1\">[</bpt>http://www.w3.org/2001/04/xmlenc#sha256<ept id=\"p1\">](http://www.w3.org/2001/04/xmlenc#sha256)</ept>.","source":"For more information, see the World Wide Web Consortium (W3C) specification at [http://www.w3.org/2001/04/xmlenc#sha256](http://www.w3.org/2001/04/xmlenc#sha256)."}],"pos":[155032,155458],"yaml":true,"extradata":"MT"},{"content":"Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.SHA384\"></xref> digest method for XML digital signatures. This field is constant.","nodes":[{"pos":[0,188],"content":"Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.SHA384\"></xref> digest method for XML digital signatures. This field is constant.","nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the standard <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SHA384\"&gt;&lt;/xref&gt;</ph> digest method for XML digital signatures.","pos":[0,164],"source":"Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.SHA384\"></xref> digest method for XML digital signatures."},{"content":"This field is constant.","pos":[165,188]}]}],"pos":[156364,156553],"yaml":true},{"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url> field is \"http://www.w3.org/2001/04/xmldsig-more#sha384\".  \n  \n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \n  \n For more information, see the World Wide Web Consortium (W3C) specification at [http://www.w3.org/2001/04/xmldsig-more#sha384](http://www.w3.org/2001/04/xmldsig-more#sha384).","nodes":[{"pos":[0,141],"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url> field is \"http://www.w3.org/2001/04/xmldsig-more#sha384\".","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url&gt;</ph> field is \"http://www.w3.org/2001/04/xmldsig-more#sha384\".","pos":[0,141],"source":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url> field is \"http://www.w3.org/2001/04/xmldsig-more#sha384\"."}]},{"pos":[148,254],"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","nodes":[{"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","pos":[0,106]}]},{"pos":[261,435],"content":"For more information, see the World Wide Web Consortium (W3C) specification at <bpt id=\"p1\">[</bpt>http://www.w3.org/2001/04/xmldsig-more#sha384<ept id=\"p1\">](http://www.w3.org/2001/04/xmldsig-more#sha384)</ept>.","source":"For more information, see the World Wide Web Consortium (W3C) specification at [http://www.w3.org/2001/04/xmldsig-more#sha384](http://www.w3.org/2001/04/xmldsig-more#sha384)."}],"pos":[156564,157008],"yaml":true,"extradata":"MT"},{"content":"Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.SHA512\"></xref> digest method for XML digital signatures. This field is constant.","nodes":[{"pos":[0,188],"content":"Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.SHA512\"></xref> digest method for XML digital signatures. This field is constant.","nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the standard <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SHA512\"&gt;&lt;/xref&gt;</ph> digest method for XML digital signatures.","pos":[0,164],"source":"Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.SHA512\"></xref> digest method for XML digital signatures."},{"content":"This field is constant.","pos":[165,188]}]}],"pos":[157914,158103],"yaml":true},{"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url> field is \"http://www.w3.org/2001/04/xmlenc#sha512\".  \n  \n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \n  \n For more information, see the World Wide Web Consortium (W3C) specification at [http://www.w3.org/2001/04/xmlenc#sha512](http://www.w3.org/2001/04/xmlenc#sha512).","nodes":[{"pos":[0,135],"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url> field is \"http://www.w3.org/2001/04/xmlenc#sha512\".","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url&gt;</ph> field is \"http://www.w3.org/2001/04/xmlenc#sha512\".","pos":[0,135],"source":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url> field is \"http://www.w3.org/2001/04/xmlenc#sha512\"."}]},{"pos":[142,248],"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","nodes":[{"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","pos":[0,106]}]},{"pos":[255,417],"content":"For more information, see the World Wide Web Consortium (W3C) specification at <bpt id=\"p1\">[</bpt>http://www.w3.org/2001/04/xmlenc#sha512<ept id=\"p1\">](http://www.w3.org/2001/04/xmlenc#sha512)</ept>.","source":"For more information, see the World Wide Web Consortium (W3C) specification at [http://www.w3.org/2001/04/xmlenc#sha512](http://www.w3.org/2001/04/xmlenc#sha512)."}],"pos":[158114,158540],"yaml":true,"extradata":"MT"},{"content":"Represents the Uniform Resource Identifier (URI) for the XML Path Language (XPath). This field is constant.","nodes":[{"pos":[0,107],"content":"Represents the Uniform Resource Identifier (URI) for the XML Path Language (XPath). This field is constant.","nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the XML Path Language (XPath). This field is constant.","pos":[0,107],"nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the XML Path Language (XPath).","pos":[0,83]},{"content":"This field is constant.","pos":[84,107]}]}]}],"pos":[159531,159639],"yaml":true},{"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl> field is \"http://www.w3.org/TR/1999/REC-xpath-19991116\".  \n  \n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \n  \n The <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl> field.  \n  \n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/1999/REC-xpath-19991116.","nodes":[{"pos":[0,148],"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl> field is \"http://www.w3.org/TR/1999/REC-xpath-19991116\".","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl&gt;</ph> field is \"http://www.w3.org/TR/1999/REC-xpath-19991116\".","pos":[0,148],"source":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl> field is \"http://www.w3.org/TR/1999/REC-xpath-19991116\"."}]},{"pos":[155,261],"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","nodes":[{"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","pos":[0,106]}]},{"pos":[268,463],"content":"The <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl> field.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform&gt;</ph> class implements the transform described by the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl&gt;</ph> field.","pos":[0,195],"source":"The <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl> field."}]},{"pos":[470,594],"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/1999/REC-xpath-19991116.","nodes":[{"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/1999/REC-xpath-19991116.","pos":[0,124]}]}],"pos":[159650,160255],"yaml":true,"extradata":"MT"},{"content":"Represents the Uniform Resource Identifier (URI) for XSLT transformations. This field is constant.","nodes":[{"pos":[0,98],"content":"Represents the Uniform Resource Identifier (URI) for XSLT transformations. This field is constant.","nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for XSLT transformations. This field is constant.","pos":[0,98],"nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for XSLT transformations.","pos":[0,74]},{"content":"This field is constant.","pos":[75,98]}]}]}],"pos":[162092,162191],"yaml":true},{"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl> field is \"http://www.w3.org/TR/1999/REC-xslt-19991116\".  \n  \n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \n  \n The <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl> field.  \n  \n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/1999/REC-xslt-19991116.","nodes":[{"pos":[0,146],"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl> field is \"http://www.w3.org/TR/1999/REC-xslt-19991116\".","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl&gt;</ph> field is \"http://www.w3.org/TR/1999/REC-xslt-19991116\".","pos":[0,146],"source":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl> field is \"http://www.w3.org/TR/1999/REC-xslt-19991116\"."}]},{"pos":[153,259],"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","nodes":[{"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","pos":[0,106]}]},{"pos":[266,459],"content":"The <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl> field.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> class implements the transform described by the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl&gt;</ph> field.","pos":[0,193],"source":"The <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl> field."}]},{"pos":[466,589],"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/1999/REC-xslt-19991116.","nodes":[{"content":"For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/1999/REC-xslt-19991116.","pos":[0,123]}]}],"pos":[162202,162802],"yaml":true,"extradata":"MT"},{"content":"Represents the Uniform Resource Identifier (URI) for the license transform algorithm used to normalize XrML licenses for signatures.","nodes":[{"pos":[0,132],"content":"Represents the Uniform Resource Identifier (URI) for the license transform algorithm used to normalize XrML licenses for signatures.","nodes":[{"content":"Represents the Uniform Resource Identifier (URI) for the license transform algorithm used to normalize XrML licenses for signatures.","pos":[0,132]}]}],"pos":[164816,164949],"yaml":true},{"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> field is \"urn:mpeg:mpeg21:2003:01-REL-R-NS:licenseTransform\"  \n  \n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \n  \n The <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> field.","nodes":[{"pos":[0,150],"content":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> field is \"urn:mpeg:mpeg21:2003:01-REL-R-NS:licenseTransform\"","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl&gt;</ph> field is \"urn:mpeg:mpeg21:2003:01-REL-R-NS:licenseTransform\"","pos":[0,150],"source":"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> field is \"urn:mpeg:mpeg21:2003:01-REL-R-NS:licenseTransform\""}]},{"pos":[157,263],"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","nodes":[{"content":"Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.","pos":[0,106]}]},{"pos":[270,461],"content":"The <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> field.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.XmlLicenseTransform&gt;</ph> class implements the transform described by the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl&gt;</ph> field.","pos":[0,191],"source":"The <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> field."}]}],"pos":[164960,165430],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.Xml.SignedXml\n  commentId: T:System.Security.Cryptography.Xml.SignedXml\n  id: SignedXml\n  children:\n  - System.Security.Cryptography.Xml.SignedXml.#ctor\n  - System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)\n  - System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)\n  - System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)\n  - System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)\n  - System.Security.Cryptography.Xml.SignedXml.CheckSignature\n  - System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)\n  - System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)\n  - System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)\n  - System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)\n  - System.Security.Cryptography.Xml.SignedXml.ComputeSignature\n  - System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)\n  - System.Security.Cryptography.Xml.SignedXml.EncryptedXml\n  - System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)\n  - System.Security.Cryptography.Xml.SignedXml.GetPublicKey\n  - System.Security.Cryptography.Xml.SignedXml.GetXml\n  - System.Security.Cryptography.Xml.SignedXml.KeyInfo\n  - System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)\n  - System.Security.Cryptography.Xml.SignedXml.m_signature\n  - System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName\n  - System.Security.Cryptography.Xml.SignedXml.Resolver\n  - System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods\n  - System.Security.Cryptography.Xml.SignedXml.Signature\n  - System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator\n  - System.Security.Cryptography.Xml.SignedXml.SignatureLength\n  - System.Security.Cryptography.Xml.SignedXml.SignatureMethod\n  - System.Security.Cryptography.Xml.SignedXml.SignatureValue\n  - System.Security.Cryptography.Xml.SignedXml.SignedInfo\n  - System.Security.Cryptography.Xml.SignedXml.SigningKey\n  - System.Security.Cryptography.Xml.SignedXml.SigningKeyName\n  - System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl\n  - System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl\n  - System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl\n  - System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl\n  - System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl\n  - System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl\n  - System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\n  - System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl\n  - System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl\n  - System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl\n  - System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url\n  - System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl\n  - System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl\n  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\n  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url\n  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url\n  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url\n  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url\n  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url\n  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url\n  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url\n  - System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl\n  - System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl\n  - System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl\n  langs:\n  - csharp\n  name: SignedXml\n  nameWithType: SignedXml\n  fullName: System.Security.Cryptography.Xml.SignedXml\n  type: Class\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Provides a wrapper on a core XML signature object to facilitate creating XML signatures.\n  remarks: \"The <xref:System.Security.Cryptography.Xml.SignedXml> class is the .NET Framework implementation of the World Wide Web Consortium (W3C) [XML Signature Syntax and Processing Specification](http://www.w3.org/TR/xmldsig-core/), also known as XMLDSIG (XML Digital Signature).  XMLDSIG is a standards-based, interoperable way to sign and verify all or part of an XML document or other data that is addressable from a Uniform Resource Identifier (URI).  \\n  \\n Use the <xref:System.Security.Cryptography.Xml.SignedXml> class whenever you need to share signed XML data between applications or organizations in a standard way.  Any data signed using this class can be verified by any conforming implementation of the W3C specification for XMLDSIG.  \\n  \\n The <xref:System.Security.Cryptography.Xml.SignedXml> class allows you to create the following three kinds of XML digital signatures:  \\n  \\n|Signature Type|Description|  \\n|--------------------|-----------------|  \\n|Enveloped signature|The signature is contained within the XML element being signed.|  \\n|Enveloping signature|The signed XML is contained within the <`Signature`> element.|  \\n|Internal detached signature|The signature and signed XML are in the same document, but neither element contains the other.|  \\n  \\n There is also a fourth kind of signature called an external detached signature which is when the data and signature are in separate XML documents. External detached signatures are not supported by the <xref:System.Security.Cryptography.Xml.SignedXml> class.  \\n  \\n## The structure of an  XML Signature  \\n XMLDSIG creates a <`Signature`> element, which contains a digital signature of an XML document or other data that is addressable from a URI.  The <`Signature`> element can optionally contain information about where to find a key that will verify the signature and which cryptographic algorithm was used for signing. The basic structure is as follows:  \\n  \\n```xml  \\n  \\n<Signature xmlns:ds=\\\"http://www.w3.org/2000/09/xmldsig#\\\">  \\n    <SignedInfo>  \\n      <CanonicalizationMethod Algorithm=\\\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\\\"/>  \\n      <SignatureMethod Algorithm=\\\"http://www.w3.org/2000/09/xmldsig#rsa-sha1\\\"/>  \\n      <Reference URI=\\\"\\\">  \\n        <Transforms>  \\n          <Transform Algorithm=\\\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\\\"/>  \\n        </Transforms>  \\n        <DigestMethod Algorithm=\\\"http://www.w3.org/2000/09/xmldsig#sha1\\\"/>  \\n        <DigestValue>Base64EncodedValue==</DigestValue>  \\n      </Reference>  \\n    </SignedInfo>  \\n    <SignatureValue>AnotherBase64EncodedValue===</SignatureValue>  \\n  </Signature>  \\n  \\n```  \\n  \\n The main parts of this structure are:  \\n  \\n The <`CanonicalizationMethod`> element  \\n Specifies the rules for rewriting the `Signature` element from XML/text into bytes for signature validation. The default value in the .NET Framework is http://www.w3.org/TR/2001/REC-xml-c14n-20010315, which identifies a trustworthy algorithm. This element is represented by the <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A?displayProperty=fullName> property.  \\n  \\n The <`SignatureMethod`> element  \\n Specifies the algorithm used for signature generation and validation, which was applied to the <`Signature`> element to produce the value in <`SignatureValue`>. In the example above, the value http://www.w3.org/2000/09/xmldsig#rsa-sha1 identifies an RSA PKCS1 SHA-1 signature. This element is represented by the <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> property.  \\n  \\n The <`SignatureValue`> element  \\n Specifies the cryptographic signature for the <`Signature`> element. If this signature does not verify, then some portion of the <`Signature`> block was tampered with, and the document is considered invalid. As long as the <`CanonicalizationMethod`> value is trustworthy, this value is highly resistant to tampering. This element is represented by the <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> property.  \\n  \\n The `URI` attribute of the <`Reference`> element  \\n Specifies a data object using a URI reference. This attribute is represented by the <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName> property.  \\n  \\n-   Not specifying the `URI` attribute, that is, setting the  <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName> property to `null`, means that the receiving application is expected to know the identity of the object. In most cases, a `null` URI will result in an exception being thrown. Do not use a `null` URI, unless your application is interoperating with a protocol which requires it.  \\n  \\n-   Setting the `URI` attribute to an empty string indicates that the root element of the document is being signed, a form of enveloped signature.  \\n  \\n-   If the value of `URI` attribute starts with #, then the value must resolve to an element in the current document. This form can be used with any of the supported signature types (enveloped signature, enveloping signature or internal detached signature).  \\n  \\n-   Anything else is considered an external resource detached signature and is not supported by the <xref:System.Security.Cryptography.Xml.SignedXml> class.  \\n  \\n The <`Transforms`> element  \\n Contains an ordered list of <`Transform`> elements that describe how the signer obtained the data object that was digested. A transform algorithm is similar to the canonicalization method, but instead of rewriting the <`Signature`> element, it rewrites the content identified by the `URI` attribute of the <`Reference`> element. The <`Transforms`> element is represented by the <xref:System.Security.Cryptography.Xml.TransformChain> class.  \\n  \\n-   Each transform algorithm is defined as taking either XML (an XPath node-set) or bytes as input. If the format of the current data differs from the transform input requirements, conversion rules are applied.  \\n  \\n-   Each transform algorithm is defined as producing either XML or bytes as the output.  \\n  \\n-   If the output of the last transform algorithm is not defined in bytes (or no transforms were specified), then the canonicalization method http://www.w3.org/TR/2001/REC-xml-c14n-20010315 is used as an implicit transform (even if a different algorithm was specified in the <`CanonicalizationMethod`> element).  \\n  \\n-   A value of http://www.w3.org/2000/09/xmldsig#enveloped-signature for the transform algorithm encodes a rule which is interpreted as remove the <`Signature`> element from the document. Otherwise, a verifier of an enveloped signature will digest the document, including the signature, but the signer would have digested the document before the signature was applied, leading to different answers.  \\n  \\n The <`DigestMethod`> element  \\n Identifies the digest (cryptographic hash) method to apply on the transformed content identified by the `URI` attribute of the <`Reference`> element. This is represented by the <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A?displayProperty=fullName> property.  \\n  \\n## Choosing a canonicalization method  \\n Unless interoperating with a specification which requires the use of a different value, we recommend that you use the default canonicalization method in the .NET Framework which is the XML-C14N 1.0 algorithm, whose value is http://www.w3.org/TR/2001/REC-xml-c14n-20010315. The XML-C14N 1.0 algorithm is required to be supported by all implementations of XMLDSIG, particularly as it is an implicit final transform to apply.  \\n  \\n There are versions of canonicalization algorithms which support preserving comments. Comment-preserving canonicalization methods are not recommended because they violate the \\\"sign what is seen\\\" principle. That is, the comments in a <`Signature`> element will not alter the processing logic for how the signature is performed, merely what the signature value is. When combined with a weak signature algorithm, allowing the comments to be included gives an attacker unnecessary freedom to force a hash collision, making a tampered document appear legitimate.  In the .NET Framework, only built-in canonicalizers are supported by default. To support additional or custom canonicalizers, see the <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> property. If the document uses a canonicalization method that is not in the collection represented by the <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> property, then the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will return `false`.  \\n  \\n> [!NOTE]\\n>  An extremely defensive application can remove any values it does not expect signers to use from the <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> collection.  \\n  \\n## Are the Reference values safe from tampering?  \\n Yes, the <`Reference`> values are safe from tampering.  The .NET framework verifies the <`SignatureValue`> computation before processing any of the <`Reference`> values and their associated transforms, and will abort early to avoid potentially malicious processing instructions.  \\n  \\n## Choosing the elements to sign  \\n We recommend that you use the value of \\\"\\\" for the `URI` attribute (or set the <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> property to an empty string), if possible. This means the whole document is considered for the digest computation, which means the whole document is protected from tampering.  \\n  \\n It is very common to see `URI` values in the form of anchors such as #foo, referring to an element whose ID attribute is \\\"foo\\\". Unfortunately, it is easy for this to be tampered with because this includes only the content of the target element, not the context. Abusing this distinction is known as XML Signature Wrapping (XSW).  \\n  \\n If your application considers comments to be semantic (which is not common when dealing with XML), then you should use \\\"#xpointer(/)\\\" instead of \\\"\\\", and \\\"#xpointer(id('foo'))\\\" instead of \\\"#foo\\\". The #xpointer versions are interpreted as including comments, while the shortname forms are excluding comments.  \\n  \\n If you need to accept documents which are only partially protected and you want to ensure that you are reading the same content that the signature protected, use the <xref:System.Security.Cryptography.Xml.SignedXml.GetIdElement%2A> method.  \\n  \\n## Security considerations about the KeyInfo element  \\n The data in the optional <`KeyInfo`> element (that is, the <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> property), which contains a key to validate the signature,  should not be trusted.  \\n  \\n In particular, when the <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> value represents a bare RSA, DSA or ECDSA public key,  the document could have been tampered with, despite the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method reporting that the signature is valid.  This can happen because the entity doing the tampering just has to generate a new key and re-sign the tampered document with that new key. So, unless your application verifies that the public key is an expected value, the document should be treated as if it were tampered with. This requires that your application examine the public key embedded within the document and verify it against a list of known values for the document context. For example, if the document could be understood to be issued by a known user, you'd check the key against a list of known keys used by that user.  \\n  \\n You can also verify the key after processing the document by using the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey%2A> method, instead of using the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method. But, for the optimal security, you should verify the key beforehand.  \\n  \\n Alternately, consider trying the user's registered public keys, rather than reading what's in the <`KeyInfo`> element.  \\n  \\n## Security considerations about the X509Data element  \\n The optional <`X509Data`> element is a child of the <`KeyInfo`> element and contains one or more X509 certificates or identifiers for X509 certificates. The data in the <`X509Data`> element should also not be inherently trusted.  \\n  \\n When verifying a document with the embedded <`X509Data`> element, the .NET Framework verifies only that the data resolves to an X509 certificate whose public key can be successfully used to validate the document signature. Unlike calling the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method with the `verifySignatureOnly` parameter set to `false`, no revocation check is performed, no chain trust is checked, and no expiration is verified. Even if your application extracts the certificate itself and passes it to the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method with the `verifySignatureOnly` parameter set to `false`, that is still not sufficient validation to prevent document tampering. The certificate still needs to be verified as being appropriate for the document being signed.  \\n  \\n Using an embedded signing certificate can provide useful key rotation strategies, whether in the <`X509Data`> section or in the document content. When using this approach an application should extract the certificate manually and perform validation similar to:  \\n  \\n-   The certificate was issued directly or via a chain by a Certificate Authority (CA) whose public certificate is embedded in the application.  \\n  \\n     Using the OS-provided trust list without additional checks, such as a known subject name, is not sufficient to prevent tampering in <xref:System.Security.Cryptography.Xml.SignedXml>.  \\n  \\n-   The certificate is verified to have not been expired at the time of document signing (or \\\"now\\\" for near real-time document processing).  \\n  \\n-   For long-lived certificates issued by a CA which supports revocation, verify the certificate was not revoked.  \\n  \\n-   The certificate subject is verified as being appropriate to the current document.  \\n  \\n## Choosing the transform algorithm  \\n If you are interoperating with a specification which has dictated specific values (such as XrML), then you need to follow the specification.  If you have an enveloped signature (such as when signing the whole document), then you need to use http://www.w3.org/2000/09/xmldsig#enveloped-signature (represented by the <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class). You can specify the implicit XML-C14N transform as well, but it's not necessary.  For an enveloping or detached signature, no transforms are required. The implicit XML-C14N transform takes care of everything.  \\n  \\n With the security updated introduced by the [Microsoft Security Bulletin MS16-035](https://technet.microsoft.com/en-us/library/security/ms16-035.aspx), the .NET Framework has restricted what transforms can be used in document verification by default, with untrusted transforms causing <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> to always return `false`. In particular, transforms which require additional input (specified as child elements in the XML) are no longer allowed due to their susceptibility of abuse by malicious users. The W3C advises avoiding the XPath and XSLT transforms, which are the two main transforms affected by these restrictions.  \\n  \\n## The problem with external references  \\n If an application does not verify that external references seem appropriate for the current context, they can be abused in ways that provide for many security vulnerabilities (including Denial of Service, Distributed Reflection Denial of Service, Information Disclosure, Signature Bypass, and Remote Code Execution). Even if an application were to validate the external reference URI, there would remain a problem of the resource being loaded twice: once when your application reads it, and once when <xref:System.Security.Cryptography.Xml.SignedXml> reads it. Since there’s no guarantee that the application read and document verify steps have the same content, the signature does not provide trustworthiness.  \\n  \\n Given the risks of external references, <xref:System.Security.Cryptography.Xml.SignedXml> will throw an exception when an external reference is encountered.  For more information about this issue, see [KB article 3148821](https://support.microsoft.com/en-us/kb/3148821).\"\n  example:\n  - \"The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \\n  \\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]\\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]  \\n  \\n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \\n  \\n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]\\n [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]\\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]\"\n  syntax:\n    content: public class SignedXml\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.#ctor\n  commentId: M:System.Security.Cryptography.Xml.SignedXml.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: SignedXml()\n  nameWithType: SignedXml.SignedXml()\n  fullName: SignedXml.SignedXml()\n  type: Constructor\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \\n  \\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]\\n [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]\\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  \\n  \\n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \\n  \\n [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]\\n [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]\\n [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]  \\n  \\n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \\n  \\n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]\\n [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]\\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]\"\n  syntax:\n    content: public SignedXml ();\n    parameters: []\n  overload: System.Security.Cryptography.Xml.SignedXml.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)\n  commentId: M:System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)\n  id: '#ctor(System.Xml.XmlDocument)'\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: SignedXml(XmlDocument)\n  nameWithType: SignedXml.SignedXml(XmlDocument)\n  fullName: SignedXml.SignedXml(XmlDocument)\n  type: Constructor\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> class from the specified XML document.\n  remarks: ''\n  example:\n  - \"The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \\n  \\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]\\n [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]\\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  \\n  \\n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \\n  \\n [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]\\n [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]\\n [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]  \\n  \\n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \\n  \\n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]\\n [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]\\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]\"\n  syntax:\n    content: public SignedXml (System.Xml.XmlDocument document);\n    parameters:\n    - id: document\n      type: System.Xml.XmlDocument\n      description: The <xref href=\"System.Xml.XmlDocument\"></xref> object to use to initialize the new instance of <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref>.\n  overload: System.Security.Cryptography.Xml.SignedXml.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The <code>document</code> parameter is `null`.  \\n  \\n -or-  \\n  \\n The <code>document</code> parameter contains a null <xref href=\\\"System.Xml.XmlDocument.DocumentElement\\\"></xref> property.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)\n  commentId: M:System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)\n  id: '#ctor(System.Xml.XmlElement)'\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: SignedXml(XmlElement)\n  nameWithType: SignedXml.SignedXml(XmlElement)\n  fullName: SignedXml.SignedXml(XmlElement)\n  type: Constructor\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> class from the specified <xref href=\"System.Xml.XmlElement\"></xref> object.\n  syntax:\n    content: public SignedXml (System.Xml.XmlElement elem);\n    parameters:\n    - id: elem\n      type: System.Xml.XmlElement\n      description: The <xref href=\"System.Xml.XmlElement\"></xref> object to use to initialize the new instance of <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref>.\n  overload: System.Security.Cryptography.Xml.SignedXml.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>elem</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)\n  commentId: M:System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)\n  id: AddObject(System.Security.Cryptography.Xml.DataObject)\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: AddObject(DataObject)\n  nameWithType: SignedXml.AddObject(DataObject)\n  fullName: SignedXml.AddObject(DataObject)\n  type: Method\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Adds a <xref href=\"System.Security.Cryptography.Xml.DataObject\"></xref> object to the list of objects to be signed.\n  remarks: \"The <xref:System.Security.Cryptography.Xml.SignedXml.AddObject%2A> method adds an <`Object`> element that represents an object to be signed to the <`Signature`> element of an XML digital signature.  \\n  \\n The <xref:System.Security.Cryptography.Xml.SignedXml.AddObject%2A> method internally calls the <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> method of the <xref:System.Security.Cryptography.Xml.Signature> object encapsulated by the <xref:System.Security.Cryptography.Xml.SignedXml> object.  You can also add a <xref:System.Security.Cryptography.Xml.DataObject> object by directly calling the <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> method from the <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> property.  \\n  \\n For more information about XML digital signatures, see the XMLDSIG specification available at www.w3.org/TR/xmldsig-core/.\"\n  example:\n  - \"The following code example computes and XML signature.  \\n  \\n [!code-cpp[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml-AddObject-AddReference/CPP/example.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml-AddObject-AddReference/CS/example.cs#1)]\\n [!code-vb[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml-AddObject-AddReference/VB/example.vb#1)]\"\n  syntax:\n    content: public void AddObject (System.Security.Cryptography.Xml.DataObject dataObject);\n    parameters:\n    - id: dataObject\n      type: System.Security.Cryptography.Xml.DataObject\n      description: The <xref href=\"System.Security.Cryptography.Xml.DataObject\"></xref> object to add to the list of objects to be signed.\n  overload: System.Security.Cryptography.Xml.SignedXml.AddObject*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)\n  commentId: M:System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)\n  id: AddReference(System.Security.Cryptography.Xml.Reference)\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: AddReference(Reference)\n  nameWithType: SignedXml.AddReference(Reference)\n  fullName: SignedXml.AddReference(Reference)\n  type: Method\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Adds a <xref href=\"System.Security.Cryptography.Xml.Reference\"></xref> object to the <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object that describes a digest method, digest value, and transform to use for creating an XML digital signature.\n  remarks: \"The <xref:System.Security.Cryptography.Xml.SignedXml.AddReference%2A> method adds a <`Reference`> element to the <xref:System.Security.Cryptography.Xml.SignedXml> object that describes a digest method, digest value, and transform to use for creating an XML digital signature.  The <`Reference`> element is a subelement of the <`SignedInfo`> element.  \\n  \\n The <xref:System.Security.Cryptography.Xml.SignedXml.AddReference%2A> method internally calls the <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> method of the <xref:System.Security.Cryptography.Xml.SignedInfo> object encapsulated by the <xref:System.Security.Cryptography.Xml.SignedXml> object.  You can also add a <xref:System.Security.Cryptography.Xml.Reference> object by directly calling the <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> method from the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property.  \\n  \\n For more information about XML digital signatures, see the XMLDSIG specification available at www.w3.org/TR/xmldsig-core/.\"\n  example:\n  - \"The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \\n  \\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]\\n [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]\\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  \\n  \\n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \\n  \\n [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]\\n [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]\\n [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]  \\n  \\n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \\n  \\n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]\\n [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]\\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]\"\n  syntax:\n    content: public void AddReference (System.Security.Cryptography.Xml.Reference reference);\n    parameters:\n    - id: reference\n      type: System.Security.Cryptography.Xml.Reference\n      description: The  <xref href=\"System.Security.Cryptography.Xml.Reference\"></xref> object that describes a digest method, digest value, and transform to use for creating an XML digital signature.\n  overload: System.Security.Cryptography.Xml.SignedXml.AddReference*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature\n  commentId: M:System.Security.Cryptography.Xml.SignedXml.CheckSignature\n  id: CheckSignature\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: CheckSignature()\n  nameWithType: SignedXml.CheckSignature()\n  fullName: SignedXml.CheckSignature()\n  type: Method\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Determines whether the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property verifies using the public key in the signature.\n  remarks: \"This method also computes the digest of the references and the value of the signature.  \\n  \\n If an XML document was signed with an X.509 signature, the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will search the \\\"AddressBook\\\" store for certificates suitable for the verification. For example, if the certificate is referenced by a Subject Key Identifier (SKI), the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will select certificates with this SKI and try them one after another until it can verify the certificate.\"\n  example:\n  - \"The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \\n  \\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]\\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]  \\n  \\n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \\n  \\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CPP/exampledetached.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CS/exampledetached.cs#1)]\\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/VB/exampledetached.vb#1)]  \\n  \\n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \\n  \\n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]\\n [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]\\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]\"\n  syntax:\n    content: public bool CheckSignature ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property verifies; otherwise, `false`.'\n  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"The <xref href=\\\"System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm\\\"></xref> property of the public key in the signature does not match the <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.SignatureMethod\\\"></xref> property.  \\n  \\n -or-  \\n  \\n The signature description could not be created.  \\n  \\n -or  \\n  \\n The hash algorithm could not be created.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)\n  commentId: M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)\n  id: CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: CheckSignature(AsymmetricAlgorithm)\n  nameWithType: SignedXml.CheckSignature(AsymmetricAlgorithm)\n  fullName: SignedXml.CheckSignature(AsymmetricAlgorithm)\n  type: Method\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Determines whether the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property verifies for the specified key.\n  remarks: ''\n  example:\n  - \"The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \\n  \\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CPP/exampledetached.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CS/exampledetached.cs#1)]\\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/VB/exampledetached.vb#1)]  \\n  \\n The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \\n  \\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]\\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]\"\n  syntax:\n    content: public bool CheckSignature (System.Security.Cryptography.AsymmetricAlgorithm key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: The implementation of the <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\"></xref> property that holds the key to be used to verify the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property verifies for the specified key; otherwise, `false`.'\n  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>key</code> parameter is `null`.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"The <xref href=\\\"System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm\\\"></xref> property of the <code>key</code> parameter does not match the <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.SignatureMethod\\\"></xref> property.  \\n  \\n -or-  \\n  \\n The signature description could not be created.  \\n  \\n -or  \\n  \\n The hash algorithm could not be created.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)\n  commentId: M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)\n  id: CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: CheckSignature(KeyedHashAlgorithm)\n  nameWithType: SignedXml.CheckSignature(KeyedHashAlgorithm)\n  fullName: SignedXml.CheckSignature(KeyedHashAlgorithm)\n  type: Method\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Determines whether the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property verifies for the specified message authentication code (MAC) algorithm.\n  remarks: ''\n  example:\n  - \"The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \\n  \\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CPP/xmldsigdetachedkeyedhashalg.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CS/xmldsigdetachedkeyedhashalg.cs#1)]\\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/VB/xmldsigdetachedkeyedhashalg.vb#1)]  \\n  \\n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \\n  \\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CPP/xmldsigenvkeyedhashalg.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CS/xmldsigenvkeyedhashalg.cs#1)]\\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/VB/xmldsigenvkeyedhashalg.vb#1)]\"\n  syntax:\n    content: public bool CheckSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);\n    parameters:\n    - id: macAlg\n      type: System.Security.Cryptography.KeyedHashAlgorithm\n      description: The implementation of <xref href=\"System.Security.Cryptography.KeyedHashAlgorithm\"></xref> that holds the MAC to be used to verify the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property verifies for the specified MAC; otherwise, `false`.'\n  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>macAlg</code> parameter is `null`.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"The <xref href=\\\"System.Security.Cryptography.HashAlgorithm.HashSize\\\"></xref> property of the specified <xref href=\\\"System.Security.Cryptography.KeyedHashAlgorithm\\\"></xref> object is not valid.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.Signature\\\"></xref> property is `null`.  \\n  \\n -or-  \\n  \\n The cryptographic transform used to check the signature could not be created.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)\n  commentId: M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)\n  id: CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: CheckSignature(X509Certificate2, Boolean)\n  nameWithType: SignedXml.CheckSignature(X509Certificate2, Boolean)\n  fullName: SignedXml.CheckSignature(X509Certificate2, Boolean)\n  type: Method\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Determines whether the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property verifies for the specified <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> object and, optionally, whether the certificate is valid.\n  remarks: \"In version 1.1 of the .NET Framework, the X.509 certificate is not verified.  In version 2.0 and later, the X.509 certificate is verified.  \\n  \\n In version 2.0 and later of the .NET Framework, the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will search the \\\"AddressBook\\\" store for certificates suitable for the verification. For example, if the certificate is referenced by a Subject Key Identifier (SKI), the <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> method will select certificates with this SKI and try them one after another until it can verify the certificate.\"\n  example:\n  - \"The following code example uses an X.509 certificate from a certificate store to sign and verify an XML document.  \\n  \\n [!code-csharp[Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)#1](~/samples/snippets/csharp/VS_Snippets_CLR/Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)/cs/sample.cs#1)]\\n [!code-vb[Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)/vb/sample.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public bool CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, bool verifySignatureOnly);\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: The <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> object to use to verify the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property.\n    - id: verifySignatureOnly\n      type: System.Boolean\n      description: '`true` to verify the signature only; `false` to verify both the signature and certificate.'\n    return:\n      type: System.Boolean\n      description: \"`true` if the signature is valid; otherwise, `false`.  \\n  \\n -or-  \\n  \\n `true` if the signature and certificate are valid; otherwise, `false`.\"\n  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>certificate</code> parameter is `null`.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: A signature description could not be created for the <code>certificate</code> parameter.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)\n  commentId: M:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)\n  id: CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: CheckSignatureReturningKey(AsymmetricAlgorithm)\n  nameWithType: SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)\n  fullName: SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)\n  type: Method\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Determines whether the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property verifies using the public key in the signature.\n  remarks: ''\n  example:\n  - \"The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \\n  \\n [!code-cpp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached/CPP/exampledetached.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached/CS/exampledetached.cs#1)]\\n [!code-vb[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached/VB/exampledetached.vb#1)]  \\n  \\n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \\n  \\n [!code-cpp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope/CPP/exampleenvelope.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope/CS/exampleenvelope.cs#1)]\\n [!code-vb[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope/VB/exampleenvelope.vb#1)]\"\n  syntax:\n    content: public bool CheckSignatureReturningKey (out System.Security.Cryptography.AsymmetricAlgorithm signingKey);\n    parameters:\n    - id: signingKey\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: When this method returns, contains the implementation of <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\"></xref> that holds the public key in the signature. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property verifies using the public key in the signature; otherwise, `false`.'\n  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>signingKey</code> parameter is null.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"The <xref href=\\\"System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm\\\"></xref> property of the public key in the signature does not match the <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.SignatureMethod\\\"></xref> property.  \\n  \\n -or-  \\n  \\n The signature description could not be created.  \\n  \\n -or  \\n  \\n The hash algorithm could not be created.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature\n  commentId: M:System.Security.Cryptography.Xml.SignedXml.ComputeSignature\n  id: ComputeSignature\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: ComputeSignature()\n  nameWithType: SignedXml.ComputeSignature()\n  fullName: SignedXml.ComputeSignature()\n  type: Method\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Computes an XML digital signature.\n  remarks: \"The <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> method creates an XML digital signature and constructs many of the XML elements needed.  \\n  \\n You must set the data to be signed and the <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A> property before calling this method.\"\n  example:\n  - \"The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \\n  \\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]\\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  \\n  \\n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \\n  \\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]\\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]\"\n  syntax:\n    content: public void ComputeSignature ();\n    parameters: []\n  overload: System.Security.Cryptography.Xml.SignedXml.ComputeSignature*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"The <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.SigningKey\\\"></xref> property is `null`.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.SigningKey\\\"></xref> property is not a <xref href=\\\"System.Security.Cryptography.DSA\\\"></xref> object or <xref href=\\\"System.Security.Cryptography.RSA\\\"></xref> object.  \\n  \\n -or-  \\n  \\n The key could not be loaded.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)\n  commentId: M:System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)\n  id: ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: ComputeSignature(KeyedHashAlgorithm)\n  nameWithType: SignedXml.ComputeSignature(KeyedHashAlgorithm)\n  fullName: SignedXml.ComputeSignature(KeyedHashAlgorithm)\n  type: Method\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Computes an XML digital signature using the specified message authentication code (MAC) algorithm.\n  remarks: \"The <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> method creates an XML digital signature using the specified MAC algorithm and constructs many of the XML elements needed.  \\n  \\n You must set the data to be signed before calling this method.\"\n  example:\n  - \"The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \\n  \\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CPP/xmldsigdetachedkeyedhashalg.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/CS/xmldsigdetachedkeyedhashalg.cs#1)]\\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached/VB/xmldsigdetachedkeyedhashalg.vb#1)]  \\n  \\n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \\n  \\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CPP/xmldsigenvkeyedhashalg.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/CS/xmldsigenvkeyedhashalg.cs#1)]\\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope/VB/xmldsigenvkeyedhashalg.vb#1)]\"\n  syntax:\n    content: public void ComputeSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);\n    parameters:\n    - id: macAlg\n      type: System.Security.Cryptography.KeyedHashAlgorithm\n      description: A <xref href=\"System.Security.Cryptography.KeyedHashAlgorithm\"></xref> object that holds the MAC to be used to compute the value of the <xref href=\"System.Security.Cryptography.Xml.SignedXml.Signature\"></xref> property.\n  overload: System.Security.Cryptography.Xml.SignedXml.ComputeSignature*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>macAlg</code> parameter is `null`.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"The <xref href=\\\"System.Security.Cryptography.KeyedHashAlgorithm\\\"></xref> object specified by the <code>macAlg</code> parameter is not an instance of <xref href=\\\"System.Security.Cryptography.HMACSHA1\\\"></xref>.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Security.Cryptography.HashAlgorithm.HashSize\\\"></xref> property of the specified <xref href=\\\"System.Security.Cryptography.KeyedHashAlgorithm\\\"></xref> object is not valid.  \\n  \\n -or-  \\n  \\n The cryptographic transform used to check the signature could not be created.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.EncryptedXml\n  commentId: P:System.Security.Cryptography.Xml.SignedXml.EncryptedXml\n  id: EncryptedXml\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: EncryptedXml\n  nameWithType: SignedXml.EncryptedXml\n  fullName: SignedXml.EncryptedXml\n  type: Property\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets or sets an <xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"></xref> object that defines the XML encryption processing rules.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public System.Security.Cryptography.Xml.EncryptedXml EncryptedXml { get; set; }\n    return:\n      type: System.Security.Cryptography.Xml.EncryptedXml\n      description: An <xref href=\"System.Security.Cryptography.Xml.EncryptedXml\"></xref> object that defines the XML encryption processing rules.\n  overload: System.Security.Cryptography.Xml.SignedXml.EncryptedXml*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)\n  commentId: M:System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)\n  id: GetIdElement(System.Xml.XmlDocument,System.String)\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: GetIdElement(XmlDocument, String)\n  nameWithType: SignedXml.GetIdElement(XmlDocument, String)\n  fullName: SignedXml.GetIdElement(XmlDocument, String)\n  type: Method\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Returns the <xref href=\"System.Xml.XmlElement\"></xref> object with the specified ID from the specified <xref href=\"System.Xml.XmlDocument\"></xref> object.\n  syntax:\n    content: public virtual System.Xml.XmlElement GetIdElement (System.Xml.XmlDocument document, string idValue);\n    parameters:\n    - id: document\n      type: System.Xml.XmlDocument\n      description: The <xref href=\"System.Xml.XmlDocument\"></xref> object to retrieve the <xref href=\"System.Xml.XmlElement\"></xref> object from.\n    - id: idValue\n      type: System.String\n      description: The ID of the <xref href=\"System.Xml.XmlElement\"></xref> object to retrieve from the <xref href=\"System.Xml.XmlDocument\"></xref> object.\n    return:\n      type: System.Xml.XmlElement\n      description: The <xref href=\"System.Xml.XmlElement\"></xref> object with the specified ID from the specified <xref href=\"System.Xml.XmlDocument\"></xref> object, or `null` if it could not be found.\n  overload: System.Security.Cryptography.Xml.SignedXml.GetIdElement*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.GetPublicKey\n  commentId: M:System.Security.Cryptography.Xml.SignedXml.GetPublicKey\n  id: GetPublicKey\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: GetPublicKey()\n  nameWithType: SignedXml.GetPublicKey()\n  fullName: SignedXml.GetPublicKey()\n  type: Method\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Returns the public key of a signature.\n  remarks: \"The <xref:System.Security.Cryptography.Xml.SignedXml.GetPublicKey%2A> method returns an <xref:System.Security.Cryptography.AsymmetricAlgorithm> object that contains a public key that can be used to verify an XML digital signature.  \\n  \\n The key must be either a <xref:System.Security.Cryptography.DSA> or an <xref:System.Security.Cryptography.RSA> key.\"\n  syntax:\n    content: protected virtual System.Security.Cryptography.AsymmetricAlgorithm GetPublicKey ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: An <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\"></xref> object that contains the public key of the signature, or `null` if the key cannot be found.\n  overload: System.Security.Cryptography.Xml.SignedXml.GetPublicKey*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The <xref href=\"System.Security.Cryptography.Xml.SignedXml.KeyInfo\"></xref> property is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.GetXml\n  commentId: M:System.Security.Cryptography.Xml.SignedXml.GetXml\n  id: GetXml\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: GetXml()\n  nameWithType: SignedXml.GetXml()\n  fullName: SignedXml.GetXml()\n  type: Method\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Returns the XML representation of a <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.\n  syntax:\n    content: public System.Xml.XmlElement GetXml ();\n    parameters: []\n    return:\n      type: System.Xml.XmlElement\n      description: The XML representation of the <xref href=\"System.Security.Cryptography.Xml.Signature\"></xref> object.\n  overload: System.Security.Cryptography.Xml.SignedXml.GetXml*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"The <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.SignedInfo\\\"></xref> property is `null`.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.SignatureValue\\\"></xref> property is `null`.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.KeyInfo\n  commentId: P:System.Security.Cryptography.Xml.SignedXml.KeyInfo\n  id: KeyInfo\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: KeyInfo\n  nameWithType: SignedXml.KeyInfo\n  fullName: SignedXml.KeyInfo\n  type: Property\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets or sets the <xref href=\"System.Security.Cryptography.Xml.KeyInfo\"></xref> object of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.\n  remarks: \"The <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> property represents the <`KeyInfo`> element of an XML digital signature using a <xref:System.Security.Cryptography.Xml.KeyInfo> object contained within the property.  The <`KeyInfo`> element is a subelement of the <`Signature`> element.  \\n  \\n Use the <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A> property to embed key-related information intended to help identify the key necessary for validating an XML document.  \\n  \\n For more information about the `<KeyInfo>` element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/.\"\n  example:\n  - \"The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfo> object when signing a resource represented by a Universal Resource Identifier (URI).  This example saves the signature in a new file.  \\n  \\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]\\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  \\n  \\n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfo> object when signing an XML document.  This example saves the signature in a new file.  \\n  \\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]\\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]\"\n  syntax:\n    content: public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }\n    return:\n      type: System.Security.Cryptography.Xml.KeyInfo\n      description: The <xref href=\"System.Security.Cryptography.Xml.KeyInfo\"></xref> object of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.\n  overload: System.Security.Cryptography.Xml.SignedXml.KeyInfo*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)\n  commentId: M:System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)\n  id: LoadXml(System.Xml.XmlElement)\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: LoadXml(XmlElement)\n  nameWithType: SignedXml.LoadXml(XmlElement)\n  fullName: SignedXml.LoadXml(XmlElement)\n  type: Method\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Loads a <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> state from an XML element.\n  remarks: ''\n  example:\n  - \"The following code example shows how to use the <xref:System.Security.Cryptography.Xml.SignedXml.LoadXml%2A> method to verify an XML document.  \\n  \\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#3)]\\n [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#3)]\\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#3)]\"\n  syntax:\n    content: public void LoadXml (System.Xml.XmlElement value);\n    parameters:\n    - id: value\n      type: System.Xml.XmlElement\n      description: The XML element to load the <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> state from.\n  overload: System.Security.Cryptography.Xml.SignedXml.LoadXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>value</code> parameter is `null`.\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"The <code>value</code> parameter does not contain a valid <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.SignatureValue\\\"></xref> property.  \\n  \\n -or-  \\n  \\n The <code>value</code> parameter does not contain a valid <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.SignedInfo\\\"></xref> property.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.m_signature\n  commentId: F:System.Security.Cryptography.Xml.SignedXml.m_signature\n  id: m_signature\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: m_signature\n  nameWithType: SignedXml.m_signature\n  fullName: SignedXml.m_signature\n  type: Field\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the <xref href=\"System.Security.Cryptography.Xml.Signature\"></xref> object of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.\n  syntax:\n    content: protected System.Security.Cryptography.Xml.Signature m_signature;\n    return:\n      type: System.Security.Cryptography.Xml.Signature\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName\n  commentId: F:System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName\n  id: m_strSigningKeyName\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: m_strSigningKeyName\n  nameWithType: SignedXml.m_strSigningKeyName\n  fullName: SignedXml.m_strSigningKeyName\n  type: Field\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the name of the installed key to be used for signing the <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.\n  syntax:\n    content: protected string m_strSigningKeyName;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.Resolver\n  commentId: P:System.Security.Cryptography.Xml.SignedXml.Resolver\n  id: Resolver\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: Resolver\n  nameWithType: SignedXml.Resolver\n  fullName: SignedXml.Resolver\n  type: Property\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Sets the current <xref href=\"System.Xml.XmlResolver\"></xref> object.\n  remarks: The <xref:System.Xml.XmlResolver> class resolves external XML resources named by a Uniform Resource Identifier (URI). If you do not trust the source of the XML file, you might not want to allow the XML file to access computer resources named by the URI. You can use the <xref:System.Security.Cryptography.Xml.SignedXml.Resolver%2A> property to control the level of access that XML files have to computer resources by specifying different <xref:System.Xml.XmlResolver> objects. If you do not want to allow any access, you can set this property to `null` (`Nothing` in Visual Basic).\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public System.Xml.XmlResolver Resolver { set; }\n    return:\n      type: System.Xml.XmlResolver\n      description: The current <xref href=\"System.Xml.XmlResolver\"></xref> object. The defaults is a <xref href=\"System.Xml.XmlSecureResolver\"></xref> object.\n  overload: System.Security.Cryptography.Xml.SignedXml.Resolver*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods\n  commentId: P:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods\n  id: SafeCanonicalizationMethods\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: SafeCanonicalizationMethods\n  nameWithType: SignedXml.SafeCanonicalizationMethods\n  fullName: SignedXml.SafeCanonicalizationMethods\n  type: Property\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: \"[Supported in the .NET Framework 4.5.1 and later versions]  \\n  \\n Gets the names of methods whose canonicalization algorithms are explicitly allowed.\"\n  remarks: Canonicalization methods convert an XML document to its canonical form. For more information about canonical XML, see [Canonical XML](http://www.w3.org/TR/xml-c14n) on the W3C website.\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<string> SafeCanonicalizationMethods { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.String}\n      description: A collection of the names of methods that safely produce canonical XML.\n  overload: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.Signature\n  commentId: P:System.Security.Cryptography.Xml.SignedXml.Signature\n  id: Signature\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: Signature\n  nameWithType: SignedXml.Signature\n  fullName: SignedXml.Signature\n  type: Property\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets the <xref href=\"System.Security.Cryptography.Xml.Signature\"></xref> object of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.\n  remarks: \"The <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> property represents the <`Signature`> element of an XML digital signature using a <xref:System.Security.Cryptography.Xml.Signature> object contained within the property.  The <`Signature`> element is the root element used for XML digital signature creation and verification.  \\n  \\n Use the <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> property to retrieve the <xref:System.Security.Cryptography.Xml.Signature> object used by the <xref:System.Security.Cryptography.Xml.SignedXml> object.  \\n  \\n For more information about the `<Signature>` element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/.\"\n  example:\n  - \"The following code example uses the <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> property to sign and verify an entire XML document using an enveloped signature.  \\n  \\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]\\n [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]\\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  \\n  \\n The following code example uses the <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> property to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \\n  \\n [!code-cpp[XMLDSIG - Signature - Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CPP/sample.cpp#1)]\\n [!code-csharp[XMLDSIG - Signature - Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR/XMLDSIG - Signature - Detached/CS/sample.cs#1)]\\n [!code-vb[XMLDSIG - Signature - Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/XMLDSIG - Signature - Detached/VB/sample.vb#1)]\"\n  syntax:\n    content: public System.Security.Cryptography.Xml.Signature Signature { get; }\n    return:\n      type: System.Security.Cryptography.Xml.Signature\n      description: The <xref href=\"System.Security.Cryptography.Xml.Signature\"></xref> object of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.\n  overload: System.Security.Cryptography.Xml.SignedXml.Signature*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator\n  commentId: P:System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator\n  id: SignatureFormatValidator\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: SignatureFormatValidator\n  nameWithType: SignedXml.SignatureFormatValidator\n  fullName: SignedXml.SignatureFormatValidator\n  type: Property\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets a delegate that will be called to validate the format (not the cryptographic security) of an XML signature.\n  remarks: \"This method can be used to ensure that only certain transforms are used, or that the signature uses a certain hash algorithm, and so on.  \\n  \\n Setting the property to `null` removes all signature format validation from the <xref:System.Security.Cryptography.Xml.SignedXml> object.  \\n  \\n You can also read the object's current delegate and chain to it if you want.  \\n  \\n If you are setting up a format validator, the delegate you supply will receive as an input parameter the <xref:System.Security.Cryptography.Xml.SignedXml> object being verified and returns a Boolean value – `true` if the format is acceptable, `false` if it is not. If the delegate returns `false` for any reason, the <xref:System.Security.Cryptography.Xml.SignedXml> object will report that the XML signature is not valid.\"\n  syntax:\n    content: public Func<System.Security.Cryptography.Xml.SignedXml,bool> SignatureFormatValidator { get; set; }\n    return:\n      type: System.Func{System.Security.Cryptography.Xml.SignedXml,System.Boolean}\n      description: '`true` if the format is acceptable; otherwise, `false`.'\n  overload: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.SignatureLength\n  commentId: P:System.Security.Cryptography.Xml.SignedXml.SignatureLength\n  id: SignatureLength\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: SignatureLength\n  nameWithType: SignedXml.SignatureLength\n  fullName: SignedXml.SignatureLength\n  type: Property\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets the length of the signature for the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.\n  syntax:\n    content: public string SignatureLength { get; }\n    return:\n      type: System.String\n      description: The length of the signature for the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.\n  overload: System.Security.Cryptography.Xml.SignedXml.SignatureLength*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.SignatureMethod\n  commentId: P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod\n  id: SignatureMethod\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: SignatureMethod\n  nameWithType: SignedXml.SignatureMethod\n  fullName: SignedXml.SignatureMethod\n  type: Property\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets the signature method of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.\n  remarks: \"The <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> property represents the <`SignatureMethod`> element of an XML digital signature using a Uniform Resource Identifier (URI) string contained within the property. The <`SignatureMethod`> element is a subelement of the <`SignedInfo`> element.  \\n  \\n Use the <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A> property to retrieve the <`SignatureMethod`> URI used by the <xref:System.Security.Cryptography.Xml.SignedXml> object. This property is read only. For more information about programmatically specifying a URI for the <`SignatureMethod`> element, see the <xref:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod%2A> property.  \\n  \\n For more information about the `<SignatureMethod>` element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/.\"\n  syntax:\n    content: public string SignatureMethod { get; }\n    return:\n      type: System.String\n      description: The signature method of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.\n  overload: System.Security.Cryptography.Xml.SignedXml.SignatureMethod*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.SignatureValue\n  commentId: P:System.Security.Cryptography.Xml.SignedXml.SignatureValue\n  id: SignatureValue\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: SignatureValue\n  nameWithType: SignedXml.SignatureValue\n  fullName: SignedXml.SignatureValue\n  type: Property\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets the signature value of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.\n  remarks: \"The <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> property represents the <`SignatureValue`> element of an XML digital signature using an array of bytes contained within the property.  The <`SignatureValue`> element is a subelement of the <`Signature>` element.  \\n  \\n Use the <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A> property to retrieve the value of the XML digital signature.  This property is automatically populated when you make a successful call to the <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A> method.  \\n  \\n For more information about the `<SignatureValue>` element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/.\"\n  syntax:\n    content: public byte[] SignatureValue { get; }\n    return:\n      type: System.Byte[]\n      description: A byte array that contains the signature value of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.\n  overload: System.Security.Cryptography.Xml.SignedXml.SignatureValue*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.SignedInfo\n  commentId: P:System.Security.Cryptography.Xml.SignedXml.SignedInfo\n  id: SignedInfo\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: SignedInfo\n  nameWithType: SignedXml.SignedInfo\n  fullName: SignedXml.SignedInfo\n  type: Property\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets the <xref href=\"System.Security.Cryptography.Xml.SignedInfo\"></xref> object of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.\n  remarks: \"The <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property represents the <`SignedInfo`> element of an XML digital signature using an array of bytes contained within the property.  The <`SignedInfo`> element is a subelement of the <`Signature>` element.  \\n  \\n Use the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property to retrieve the <xref:System.Security.Cryptography.Xml.SignedInfo> object that is used by the <xref:System.Security.Cryptography.Xml.SignedXml> object to create an XML digital signature.  \\n  \\n For more information about the `<SignedInfo>` element, see the XMLDSIG specification, which is available at www.w3.org/TR/xmldsig-core/.\"\n  syntax:\n    content: public System.Security.Cryptography.Xml.SignedInfo SignedInfo { get; }\n    return:\n      type: System.Security.Cryptography.Xml.SignedInfo\n      description: The <xref href=\"System.Security.Cryptography.Xml.SignedInfo\"></xref> object of the current <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.\n  overload: System.Security.Cryptography.Xml.SignedXml.SignedInfo*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.SigningKey\n  commentId: P:System.Security.Cryptography.Xml.SignedXml.SigningKey\n  id: SigningKey\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: SigningKey\n  nameWithType: SignedXml.SigningKey\n  fullName: SignedXml.SigningKey\n  type: Property\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets or sets the asymmetric algorithm key used for signing a <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.\n  remarks: Use the <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A> property to specify the asymmetric key you want to use to create an XML digital signature.\n  example:\n  - \"The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \\n  \\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CPP/exampleenvelope.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/CS/exampleenvelope.cs#1)]\\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope/VB/exampleenvelope.vb#1)]  \\n  \\n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \\n  \\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CPP/exampledetached.cpp#1)]\\n [!code-csharp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/CS/exampledetached.cs#1)]\\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached/VB/exampledetached.vb#1)]  \\n  \\n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \\n  \\n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CPP/sample.cpp#1)]\\n [!code-csharp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/CS/sample.cs#1)]\\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.SignVerifyEnvelope - Specify Element/VB/sample.vb#1)]\"\n  syntax:\n    content: public System.Security.Cryptography.AsymmetricAlgorithm SigningKey { get; set; }\n    return:\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: The asymmetric algorithm key used for signing the <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.\n  overload: System.Security.Cryptography.Xml.SignedXml.SigningKey*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.SigningKeyName\n  commentId: P:System.Security.Cryptography.Xml.SignedXml.SigningKeyName\n  id: SigningKeyName\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: SigningKeyName\n  nameWithType: SignedXml.SigningKeyName\n  fullName: SignedXml.SigningKeyName\n  type: Property\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Gets or sets the name of the installed key to be used for signing the <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.\n  syntax:\n    content: public string SigningKeyName { get; set; }\n    return:\n      type: System.String\n      description: The name of the installed key to be used for signing the <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> object.\n  overload: System.Security.Cryptography.Xml.SignedXml.SigningKeyName*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl\n  commentId: F:System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl\n  id: XmlDecryptionTransformUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: XmlDecryptionTransformUrl\n  nameWithType: SignedXml.XmlDecryptionTransformUrl\n  fullName: SignedXml.XmlDecryptionTransformUrl\n  type: Field\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the Uniform Resource Identifier (URI) for the XML mode decryption transformation. This field is constant.\n  remarks: \"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl> field is \\\"http://www.w3.org/2002/07/decrypt#XML\\\".  \\n  \\n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \\n  \\n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2002/07/decrypt#XML.\"\n  syntax:\n    content: public const string XmlDecryptionTransformUrl;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl\n  commentId: F:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl\n  id: XmlDsigBase64TransformUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: XmlDsigBase64TransformUrl\n  nameWithType: SignedXml.XmlDsigBase64TransformUrl\n  fullName: SignedXml.XmlDsigBase64TransformUrl\n  type: Field\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the Uniform Resource Identifier (URI) for the base 64 transformation. This field is constant.\n  remarks: \"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl> field is \\\"http://www.w3.org/2000/09/xmldsig#base64\\\".  \\n  \\n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \\n  \\n The <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl> field.  \\n  \\n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#base64.\"\n  example:\n  - \"The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> class.  \\n  \\n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigBase64Transform/CPP/members.cpp#2)]\\n [!code-csharp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigBase64Transform/CS/members.cs#2)]\\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigBase64Transform/VB/members.vb#2)]\"\n  syntax:\n    content: public const string XmlDsigBase64TransformUrl;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl\n  commentId: F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl\n  id: XmlDsigC14NTransformUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: XmlDsigC14NTransformUrl\n  nameWithType: SignedXml.XmlDsigC14NTransformUrl\n  fullName: SignedXml.XmlDsigC14NTransformUrl\n  type: Field\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the Uniform Resource Identifier (URI) for the Canonical XML transformation. This field is constant.\n  remarks: \"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> field is \\\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\\\".  \\n  \\n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \\n  \\n The <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> field.  \\n  \\n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/2001/REC-xml-c14n-20010315.  \\n  \\n This field has the same value as the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> field.\"\n  example:\n  - \"The following code example demonstrates how to call members of the <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class.  \\n  \\n [!code-cpp[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CPP/members.cpp#2)]\\n [!code-csharp[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/CS/members.cs#2)]\\n [!code-vb[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigC14NTransform/VB/members.vb#2)]\"\n  syntax:\n    content: public const string XmlDsigC14NTransformUrl;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl\n  commentId: F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl\n  id: XmlDsigC14NWithCommentsTransformUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: XmlDsigC14NWithCommentsTransformUrl\n  nameWithType: SignedXml.XmlDsigC14NWithCommentsTransformUrl\n  fullName: SignedXml.XmlDsigC14NWithCommentsTransformUrl\n  type: Field\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the Uniform Resource Identifier (URI) for the Canonical XML transformation, with comments. This field is constant.\n  remarks: \"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> field is \\\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments \\\".  \\n  \\n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \\n  \\n The <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> field.  \\n  \\n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments.  \\n  \\n This field has the same value as the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> field.\"\n  syntax:\n    content: public const string XmlDsigC14NWithCommentsTransformUrl;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl\n  commentId: F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl\n  id: XmlDsigCanonicalizationUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: XmlDsigCanonicalizationUrl\n  nameWithType: SignedXml.XmlDsigCanonicalizationUrl\n  fullName: SignedXml.XmlDsigCanonicalizationUrl\n  type: Field\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the Uniform Resource Identifier (URI) for the standard canonicalization algorithm for XML digital signatures. This field is constant.\n  remarks: \"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> field is \\\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\\\".  \\n  \\n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \\n  \\n The <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl> field.  \\n  \\n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/2001/REC-xml-c14n-20010315.  \\n  \\n This field has the same value as the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl> field.\"\n  syntax:\n    content: public const string XmlDsigCanonicalizationUrl;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl\n  commentId: F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl\n  id: XmlDsigCanonicalizationWithCommentsUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: XmlDsigCanonicalizationWithCommentsUrl\n  nameWithType: SignedXml.XmlDsigCanonicalizationWithCommentsUrl\n  fullName: SignedXml.XmlDsigCanonicalizationWithCommentsUrl\n  type: Field\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the Uniform Resource Identifier (URI) for the standard canonicalization algorithm for XML digital signatures and includes comments. This field is constant.\n  remarks: \"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> field is \\\"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments\\\".  \\n  \\n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \\n  \\n The <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl> field.  \\n  \\n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments.  \\n  \\n This field has the same value as the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl> field.\"\n  syntax:\n    content: public const string XmlDsigCanonicalizationWithCommentsUrl;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\n  commentId: F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\n  id: XmlDsigDSAUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: XmlDsigDSAUrl\n  nameWithType: SignedXml.XmlDsigDSAUrl\n  fullName: SignedXml.XmlDsigDSAUrl\n  type: Field\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.DSA\"></xref> algorithm for XML digital signatures. This field is constant.\n  remarks: \"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl> field is \\\"http://www.w3.org/2000/09/xmldsig#dsa-sha1\\\".  \\n  \\n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \\n  \\n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#dsa-sha1.\"\n  syntax:\n    content: public const string XmlDsigDSAUrl;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl\n  commentId: F:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl\n  id: XmlDsigEnvelopedSignatureTransformUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: XmlDsigEnvelopedSignatureTransformUrl\n  nameWithType: SignedXml.XmlDsigEnvelopedSignatureTransformUrl\n  fullName: SignedXml.XmlDsigEnvelopedSignatureTransformUrl\n  type: Field\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the Uniform Resource Identifier (URI) for enveloped signature transformation. This field is constant.\n  remarks: \"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl> field is \\\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\\\".  \\n  \\n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \\n  \\n The <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl> field.  \\n  \\n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#enveloped-signature.\"\n  example:\n  - \"The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class.  \\n  \\n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/cpp/members.cpp#2)]\\n [!code-csharp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/CS/members.cs#2)]\\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/VB/members.vb#2)]\"\n  syntax:\n    content: public const string XmlDsigEnvelopedSignatureTransformUrl;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl\n  commentId: F:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl\n  id: XmlDsigExcC14NTransformUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: XmlDsigExcC14NTransformUrl\n  nameWithType: SignedXml.XmlDsigExcC14NTransformUrl\n  fullName: SignedXml.XmlDsigExcC14NTransformUrl\n  type: Field\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the Uniform Resource Identifier (URI) for exclusive XML canonicalization. This field is constant.\n  remarks: \"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl> field is \\\"http://www.w3.org/2001/10/xml-exc-c14n#\\\".  \\n  \\n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \\n  \\n The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl> field.  \\n  \\n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2001/10/xml-exc-c14n#.\"\n  example:\n  - \"The following code example shows how to sign and verify an XML document using the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class.  This sample creates an envelope signature.  \\n  \\n [!code-cpp[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/CPP/example.cpp#1)]\\n [!code-csharp[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/CS/example.cs#1)]\\n [!code-vb[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/VB/example.vb#1)]\"\n  syntax:\n    content: public const string XmlDsigExcC14NTransformUrl;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl\n  commentId: F:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl\n  id: XmlDsigExcC14NWithCommentsTransformUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: XmlDsigExcC14NWithCommentsTransformUrl\n  nameWithType: SignedXml.XmlDsigExcC14NWithCommentsTransformUrl\n  fullName: SignedXml.XmlDsigExcC14NWithCommentsTransformUrl\n  type: Field\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the Uniform Resource Identifier (URI) for exclusive XML canonicalization, with comments. This field is constant.\n  remarks: \"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> field is \\\"http://www.w3.org/2001/10/xml-exc-c14n#WithComments\\\".  \\n  \\n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \\n  \\n The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> field.  \\n  \\n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2001/10/xml-exc-c14n#WithComments.\"\n  example:\n  - \"The following code example shows how to sign and verify an XML document using the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class.  This sample creates an envelope signature.  \\n  \\n [!code-cpp[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NWithCommentsTransform/CPP/sample.cpp#1)]\\n [!code-csharp[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NWithCommentsTransform/CS/sample.cs#1)]\\n [!code-vb[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NWithCommentsTransform/VB/sample.vb#1)]\"\n  syntax:\n    content: public const string XmlDsigExcC14NWithCommentsTransformUrl;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url\n  commentId: F:System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url\n  id: XmlDsigHMACSHA1Url\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: XmlDsigHMACSHA1Url\n  nameWithType: SignedXml.XmlDsigHMACSHA1Url\n  fullName: SignedXml.XmlDsigHMACSHA1Url\n  type: Field\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.HMACSHA1\"></xref> algorithm for XML digital signatures. This field is constant.\n  remarks: \"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url> field is \\\"http://www.w3.org/2000/09/xmldsig#hmac-sha1\\\".  \\n  \\n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \\n  \\n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#hmac-sha1.\"\n  syntax:\n    content: public const string XmlDsigHMACSHA1Url;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl\n  commentId: F:System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl\n  id: XmlDsigMinimalCanonicalizationUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: XmlDsigMinimalCanonicalizationUrl\n  nameWithType: SignedXml.XmlDsigMinimalCanonicalizationUrl\n  fullName: SignedXml.XmlDsigMinimalCanonicalizationUrl\n  type: Field\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the Uniform Resource Identifier (URI) for the standard minimal canonicalization algorithm for XML digital signatures. This field is constant.\n  remarks: \"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl> field is \\\"http://www.w3.org/2000/09/xmldsig#minimal\\\".  \\n  \\n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \\n  \\n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#minimal.\"\n  syntax:\n    content: public const string XmlDsigMinimalCanonicalizationUrl;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl\n  commentId: F:System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl\n  id: XmlDsigNamespaceUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: XmlDsigNamespaceUrl\n  nameWithType: SignedXml.XmlDsigNamespaceUrl\n  fullName: SignedXml.XmlDsigNamespaceUrl\n  type: Field\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the Uniform Resource Identifier (URI) for the standard namespace for XML digital signatures. This field is constant.\n  remarks: \"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl> field is \\\"http://www.w3.org/2000/09/xmldsig#\\\".  \\n  \\n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \\n  \\n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#.\"\n  syntax:\n    content: public const string XmlDsigNamespaceUrl;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\n  commentId: F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\n  id: XmlDsigRSASHA1Url\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: XmlDsigRSASHA1Url\n  nameWithType: SignedXml.XmlDsigRSASHA1Url\n  fullName: SignedXml.XmlDsigRSASHA1Url\n  type: Field\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.RSA\"></xref> signature method for XML digital signatures. This field is constant.\n  remarks: \"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> field is \\\"http://www.w3.org/2000/09/xmldsig#rsa-sha1\\\".  \\n  \\n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \\n  \\n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#rsa-sha1.\"\n  syntax:\n    content: public const string XmlDsigRSASHA1Url;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url\n  commentId: F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url\n  id: XmlDsigRSASHA256Url\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: XmlDsigRSASHA256Url\n  nameWithType: SignedXml.XmlDsigRSASHA256Url\n  fullName: SignedXml.XmlDsigRSASHA256Url\n  type: Field\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the Uniform Resource Identifier (URI) for the  <xref href=\"System.Security.Cryptography.RSA\"></xref> SHA-256 signature method variation for XML digital signatures. This field is constant.\n  remarks: \"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url> field is \\\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\\\".  \\n  \\n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \\n  \\n For more information, see the World Wide Web Consortium (W3C) specification at [http://www.w3.org/2001/04/xmldsig-more#rsa-sha256](http://www.w3.org/2001/04/xmldsig-more).\"\n  syntax:\n    content: public const string XmlDsigRSASHA256Url;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url\n  commentId: F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url\n  id: XmlDsigRSASHA384Url\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: XmlDsigRSASHA384Url\n  nameWithType: SignedXml.XmlDsigRSASHA384Url\n  fullName: SignedXml.XmlDsigRSASHA384Url\n  type: Field\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the Uniform Resource Identifier (URI) for the  <xref href=\"System.Security.Cryptography.RSA\"></xref> SHA-384 signature method variation for XML digital signatures. This field is constant.\n  remarks: \"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url> field is \\\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha384\\\".  \\n  \\n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \\n  \\n For more information, see the World Wide Web Consortium (W3C) specification at [http://www.w3.org/2001/04/xmldsig-more#rsa-sha384](http://www.w3.org/2001/04/xmldsig-more#rsa-sha384).\"\n  syntax:\n    content: public const string XmlDsigRSASHA384Url;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url\n  commentId: F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url\n  id: XmlDsigRSASHA512Url\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: XmlDsigRSASHA512Url\n  nameWithType: SignedXml.XmlDsigRSASHA512Url\n  fullName: SignedXml.XmlDsigRSASHA512Url\n  type: Field\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the Uniform Resource Identifier (URI) for the  <xref href=\"System.Security.Cryptography.RSA\"></xref> SHA-512 signature method variation for XML digital signatures. This field is constant.\n  remarks: \"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url> field is \\\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha512\\\".  \\n  \\n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \\n  \\n For more information, see the World Wide Web Consortium (W3C) specification at [http://www.w3.org/2001/04/xmldsig-more#rsa-sha512](http://www.w3.org/2001/04/xmldsig-more#rsa-sha512).\"\n  syntax:\n    content: public const string XmlDsigRSASHA512Url;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url\n  commentId: F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url\n  id: XmlDsigSHA1Url\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: XmlDsigSHA1Url\n  nameWithType: SignedXml.XmlDsigSHA1Url\n  fullName: SignedXml.XmlDsigSHA1Url\n  type: Field\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.SHA1\"></xref> digest method for XML digital signatures. This field is constant.\n  remarks: \"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> field is \\\"http://www.w3.org/2000/09/xmldsig#sha1\\\".  \\n  \\n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \\n  \\n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/2000/09/xmldsig#sha1.\"\n  syntax:\n    content: public const string XmlDsigSHA1Url;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url\n  commentId: F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url\n  id: XmlDsigSHA256Url\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: XmlDsigSHA256Url\n  nameWithType: SignedXml.XmlDsigSHA256Url\n  fullName: SignedXml.XmlDsigSHA256Url\n  type: Field\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.SHA256\"></xref> digest method for XML digital signatures. This field is constant.\n  remarks: \"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url> field is \\\"http://www.w3.org/2001/04/xmlenc#sha256\\\".  \\n  \\n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \\n  \\n For more information, see the World Wide Web Consortium (W3C) specification at [http://www.w3.org/2001/04/xmlenc#sha256](http://www.w3.org/2001/04/xmlenc#sha256).\"\n  syntax:\n    content: public const string XmlDsigSHA256Url;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url\n  commentId: F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url\n  id: XmlDsigSHA384Url\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: XmlDsigSHA384Url\n  nameWithType: SignedXml.XmlDsigSHA384Url\n  fullName: SignedXml.XmlDsigSHA384Url\n  type: Field\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.SHA384\"></xref> digest method for XML digital signatures. This field is constant.\n  remarks: \"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url> field is \\\"http://www.w3.org/2001/04/xmldsig-more#sha384\\\".  \\n  \\n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \\n  \\n For more information, see the World Wide Web Consortium (W3C) specification at [http://www.w3.org/2001/04/xmldsig-more#sha384](http://www.w3.org/2001/04/xmldsig-more#sha384).\"\n  syntax:\n    content: public const string XmlDsigSHA384Url;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url\n  commentId: F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url\n  id: XmlDsigSHA512Url\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: XmlDsigSHA512Url\n  nameWithType: SignedXml.XmlDsigSHA512Url\n  fullName: SignedXml.XmlDsigSHA512Url\n  type: Field\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the Uniform Resource Identifier (URI) for the standard <xref href=\"System.Security.Cryptography.SHA512\"></xref> digest method for XML digital signatures. This field is constant.\n  remarks: \"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url> field is \\\"http://www.w3.org/2001/04/xmlenc#sha512\\\".  \\n  \\n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \\n  \\n For more information, see the World Wide Web Consortium (W3C) specification at [http://www.w3.org/2001/04/xmlenc#sha512](http://www.w3.org/2001/04/xmlenc#sha512).\"\n  syntax:\n    content: public const string XmlDsigSHA512Url;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.6.2\n  - netframework-4.7\n  monikers:\n  - netframework-4.6.2\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl\n  commentId: F:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl\n  id: XmlDsigXPathTransformUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: XmlDsigXPathTransformUrl\n  nameWithType: SignedXml.XmlDsigXPathTransformUrl\n  fullName: SignedXml.XmlDsigXPathTransformUrl\n  type: Field\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the Uniform Resource Identifier (URI) for the XML Path Language (XPath). This field is constant.\n  remarks: \"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl> field is \\\"http://www.w3.org/TR/1999/REC-xpath-19991116\\\".  \\n  \\n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \\n  \\n The <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl> field.  \\n  \\n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/1999/REC-xpath-19991116.\"\n  example:\n  - \"The following code example demonstrates how to call members of the <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> class.  \\n  \\n [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/CS/members.cs#2)]\\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXPathTransform/VB/members.vb#2)]\"\n  syntax:\n    content: public const string XmlDsigXPathTransformUrl;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl\n  commentId: F:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl\n  id: XmlDsigXsltTransformUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: XmlDsigXsltTransformUrl\n  nameWithType: SignedXml.XmlDsigXsltTransformUrl\n  fullName: SignedXml.XmlDsigXsltTransformUrl\n  type: Field\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the Uniform Resource Identifier (URI) for XSLT transformations. This field is constant.\n  remarks: \"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl> field is \\\"http://www.w3.org/TR/1999/REC-xslt-19991116\\\".  \\n  \\n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \\n  \\n The <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl> field.  \\n  \\n For more information, see the World Wide Web Consortium (W3C) specification at http://www.w3.org/TR/1999/REC-xslt-19991116.\"\n  example:\n  - \"The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> class.  \\n  \\n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CPP/members.cpp#2)]\\n [!code-csharp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/CS/members.cs#2)]\\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigXsltTransform/VB/members.vb#2)]\"\n  syntax:\n    content: public const string XmlDsigXsltTransformUrl;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl\n  commentId: F:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl\n  id: XmlLicenseTransformUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  langs:\n  - csharp\n  name: XmlLicenseTransformUrl\n  nameWithType: SignedXml.XmlLicenseTransformUrl\n  fullName: SignedXml.XmlLicenseTransformUrl\n  type: Field\n  assemblies:\n  - System.Security\n  - System.Security.Cryptography.Xml\n  namespace: System.Security.Cryptography.Xml\n  summary: Represents the Uniform Resource Identifier (URI) for the license transform algorithm used to normalize XrML licenses for signatures.\n  remarks: \"The value of the <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> field is \\\"urn:mpeg:mpeg21:2003:01-REL-R-NS:licenseTransform\\\"  \\n  \\n Use this field to conveniently supply a value to one of the URI attributes of an element used for XMLDSIG.  \\n  \\n The <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class implements the transform described by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> field.\"\n  syntax:\n    content: public const string XmlLicenseTransformUrl;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.Security.Cryptography.Xml.SignedXml.#ctor\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: SignedXml()\n  nameWithType: SignedXml.SignedXml()\n  fullName: SignedXml.SignedXml()\n- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: SignedXml(XmlDocument)\n  nameWithType: SignedXml.SignedXml(XmlDocument)\n  fullName: SignedXml.SignedXml(XmlDocument)\n- uid: System.Xml.XmlDocument\n  parent: System.Xml\n  isExternal: false\n  name: XmlDocument\n  nameWithType: XmlDocument\n  fullName: System.Xml.XmlDocument\n- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: SignedXml(XmlElement)\n  nameWithType: SignedXml.SignedXml(XmlElement)\n  fullName: SignedXml.SignedXml(XmlElement)\n- uid: System.Xml.XmlElement\n  parent: System.Xml\n  isExternal: false\n  name: XmlElement\n  nameWithType: XmlElement\n  fullName: System.Xml.XmlElement\n- uid: System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: AddObject(DataObject)\n  nameWithType: SignedXml.AddObject(DataObject)\n  fullName: SignedXml.AddObject(DataObject)\n- uid: System.Security.Cryptography.Xml.DataObject\n  parent: System.Security.Cryptography.Xml\n  isExternal: false\n  name: DataObject\n  nameWithType: DataObject\n  fullName: System.Security.Cryptography.Xml.DataObject\n- uid: System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: AddReference(Reference)\n  nameWithType: SignedXml.AddReference(Reference)\n  fullName: SignedXml.AddReference(Reference)\n- uid: System.Security.Cryptography.Xml.Reference\n  parent: System.Security.Cryptography.Xml\n  isExternal: false\n  name: Reference\n  nameWithType: Reference\n  fullName: System.Security.Cryptography.Xml.Reference\n- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: CheckSignature()\n  nameWithType: SignedXml.CheckSignature()\n  fullName: SignedXml.CheckSignature()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: CheckSignature(AsymmetricAlgorithm)\n  nameWithType: SignedXml.CheckSignature(AsymmetricAlgorithm)\n  fullName: SignedXml.CheckSignature(AsymmetricAlgorithm)\n- uid: System.Security.Cryptography.AsymmetricAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricAlgorithm\n  nameWithType: AsymmetricAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm\n- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: CheckSignature(KeyedHashAlgorithm)\n  nameWithType: SignedXml.CheckSignature(KeyedHashAlgorithm)\n  fullName: SignedXml.CheckSignature(KeyedHashAlgorithm)\n- uid: System.Security.Cryptography.KeyedHashAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: KeyedHashAlgorithm\n  nameWithType: KeyedHashAlgorithm\n  fullName: System.Security.Cryptography.KeyedHashAlgorithm\n- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: CheckSignature(X509Certificate2, Boolean)\n  nameWithType: SignedXml.CheckSignature(X509Certificate2, Boolean)\n  fullName: SignedXml.CheckSignature(X509Certificate2, Boolean)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2\n  nameWithType: X509Certificate2\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: CheckSignatureReturningKey(AsymmetricAlgorithm)\n  nameWithType: SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)\n  fullName: SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)\n- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: ComputeSignature()\n  nameWithType: SignedXml.ComputeSignature()\n  fullName: SignedXml.ComputeSignature()\n- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: ComputeSignature(KeyedHashAlgorithm)\n  nameWithType: SignedXml.ComputeSignature(KeyedHashAlgorithm)\n  fullName: SignedXml.ComputeSignature(KeyedHashAlgorithm)\n- uid: System.Security.Cryptography.Xml.SignedXml.EncryptedXml\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: EncryptedXml\n  nameWithType: SignedXml.EncryptedXml\n  fullName: SignedXml.EncryptedXml\n- uid: System.Security.Cryptography.Xml.EncryptedXml\n  parent: System.Security.Cryptography.Xml\n  isExternal: false\n  name: EncryptedXml\n  nameWithType: EncryptedXml\n  fullName: System.Security.Cryptography.Xml.EncryptedXml\n- uid: System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: GetIdElement(XmlDocument, String)\n  nameWithType: SignedXml.GetIdElement(XmlDocument, String)\n  fullName: SignedXml.GetIdElement(XmlDocument, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.Xml.SignedXml.GetPublicKey\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: GetPublicKey()\n  nameWithType: SignedXml.GetPublicKey()\n  fullName: SignedXml.GetPublicKey()\n- uid: System.Security.Cryptography.Xml.SignedXml.GetXml\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: GetXml()\n  nameWithType: SignedXml.GetXml()\n  fullName: SignedXml.GetXml()\n- uid: System.Security.Cryptography.Xml.SignedXml.KeyInfo\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: KeyInfo\n  nameWithType: SignedXml.KeyInfo\n  fullName: SignedXml.KeyInfo\n- uid: System.Security.Cryptography.Xml.KeyInfo\n  parent: System.Security.Cryptography.Xml\n  isExternal: false\n  name: KeyInfo\n  nameWithType: KeyInfo\n  fullName: System.Security.Cryptography.Xml.KeyInfo\n- uid: System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: LoadXml(XmlElement)\n  nameWithType: SignedXml.LoadXml(XmlElement)\n  fullName: SignedXml.LoadXml(XmlElement)\n- uid: System.Security.Cryptography.Xml.SignedXml.m_signature\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: m_signature\n  nameWithType: SignedXml.m_signature\n  fullName: SignedXml.m_signature\n- uid: System.Security.Cryptography.Xml.Signature\n  parent: System.Security.Cryptography.Xml\n  isExternal: false\n  name: Signature\n  nameWithType: Signature\n  fullName: System.Security.Cryptography.Xml.Signature\n- uid: System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: m_strSigningKeyName\n  nameWithType: SignedXml.m_strSigningKeyName\n  fullName: SignedXml.m_strSigningKeyName\n- uid: System.Security.Cryptography.Xml.SignedXml.Resolver\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: Resolver\n  nameWithType: SignedXml.Resolver\n  fullName: SignedXml.Resolver\n- uid: System.Xml.XmlResolver\n  parent: System.Xml\n  isExternal: false\n  name: XmlResolver\n  nameWithType: XmlResolver\n  fullName: System.Xml.XmlResolver\n- uid: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: SafeCanonicalizationMethods\n  nameWithType: SignedXml.SafeCanonicalizationMethods\n  fullName: SignedXml.SafeCanonicalizationMethods\n- uid: System.Collections.ObjectModel.Collection`1\n  name: Collection<T>\n  nameWithType: Collection<T>\n  fullName: System.Collections.ObjectModel.Collection<T>\n- uid: System.Collections.ObjectModel.Collection{System.String}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: Collection<String>\n  nameWithType: Collection<String>\n  fullName: System.Collections.ObjectModel.Collection<System.String>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: System.Collections.ObjectModel.Collection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Security.Cryptography.Xml.SignedXml.Signature\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: Signature\n  nameWithType: SignedXml.Signature\n  fullName: SignedXml.Signature\n- uid: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: SignatureFormatValidator\n  nameWithType: SignedXml.SignatureFormatValidator\n  fullName: SignedXml.SignatureFormatValidator\n- uid: System.Func`2\n  name: Func<T,TResult>\n  nameWithType: Func<T,TResult>\n  fullName: System.Func<T,TResult>\n- uid: System.Security.Cryptography.Xml.SignedXml\n  name: SignedXml\n  nameWithType: SignedXml\n  fullName: System.Security.Cryptography.Xml.SignedXml\n- uid: System.Func{System.Security.Cryptography.Xml.SignedXml,System.Boolean}\n  parent: System\n  isExternal: false\n  name: Func<SignedXml,Boolean>\n  nameWithType: Func<SignedXml,Boolean>\n  fullName: System.Func<System.Security.Cryptography.Xml.SignedXml,System.Boolean>\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Security.Cryptography.Xml.SignedXml\n    name: SignedXml\n    nameWithType: SignedXml\n    fullName: System.Security.Cryptography.Xml.SignedXml\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: System.Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Security.Cryptography.Xml.SignedXml.SignatureLength\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: SignatureLength\n  nameWithType: SignedXml.SignatureLength\n  fullName: SignedXml.SignatureLength\n- uid: System.Security.Cryptography.Xml.SignedXml.SignatureMethod\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: SignatureMethod\n  nameWithType: SignedXml.SignatureMethod\n  fullName: SignedXml.SignatureMethod\n- uid: System.Security.Cryptography.Xml.SignedXml.SignatureValue\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: SignatureValue\n  nameWithType: SignedXml.SignatureValue\n  fullName: SignedXml.SignatureValue\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.Xml.SignedXml.SignedInfo\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: SignedInfo\n  nameWithType: SignedXml.SignedInfo\n  fullName: SignedXml.SignedInfo\n- uid: System.Security.Cryptography.Xml.SignedInfo\n  parent: System.Security.Cryptography.Xml\n  isExternal: false\n  name: SignedInfo\n  nameWithType: SignedInfo\n  fullName: System.Security.Cryptography.Xml.SignedInfo\n- uid: System.Security.Cryptography.Xml.SignedXml.SigningKey\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: SigningKey\n  nameWithType: SignedXml.SigningKey\n  fullName: SignedXml.SigningKey\n- uid: System.Security.Cryptography.Xml.SignedXml.SigningKeyName\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: SigningKeyName\n  nameWithType: SignedXml.SigningKeyName\n  fullName: SignedXml.SigningKeyName\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: XmlDecryptionTransformUrl\n  nameWithType: SignedXml.XmlDecryptionTransformUrl\n  fullName: SignedXml.XmlDecryptionTransformUrl\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: XmlDsigBase64TransformUrl\n  nameWithType: SignedXml.XmlDsigBase64TransformUrl\n  fullName: SignedXml.XmlDsigBase64TransformUrl\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: XmlDsigC14NTransformUrl\n  nameWithType: SignedXml.XmlDsigC14NTransformUrl\n  fullName: SignedXml.XmlDsigC14NTransformUrl\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: XmlDsigC14NWithCommentsTransformUrl\n  nameWithType: SignedXml.XmlDsigC14NWithCommentsTransformUrl\n  fullName: SignedXml.XmlDsigC14NWithCommentsTransformUrl\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: XmlDsigCanonicalizationUrl\n  nameWithType: SignedXml.XmlDsigCanonicalizationUrl\n  fullName: SignedXml.XmlDsigCanonicalizationUrl\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: XmlDsigCanonicalizationWithCommentsUrl\n  nameWithType: SignedXml.XmlDsigCanonicalizationWithCommentsUrl\n  fullName: SignedXml.XmlDsigCanonicalizationWithCommentsUrl\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: XmlDsigDSAUrl\n  nameWithType: SignedXml.XmlDsigDSAUrl\n  fullName: SignedXml.XmlDsigDSAUrl\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: XmlDsigEnvelopedSignatureTransformUrl\n  nameWithType: SignedXml.XmlDsigEnvelopedSignatureTransformUrl\n  fullName: SignedXml.XmlDsigEnvelopedSignatureTransformUrl\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: XmlDsigExcC14NTransformUrl\n  nameWithType: SignedXml.XmlDsigExcC14NTransformUrl\n  fullName: SignedXml.XmlDsigExcC14NTransformUrl\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: XmlDsigExcC14NWithCommentsTransformUrl\n  nameWithType: SignedXml.XmlDsigExcC14NWithCommentsTransformUrl\n  fullName: SignedXml.XmlDsigExcC14NWithCommentsTransformUrl\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: XmlDsigHMACSHA1Url\n  nameWithType: SignedXml.XmlDsigHMACSHA1Url\n  fullName: SignedXml.XmlDsigHMACSHA1Url\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: XmlDsigMinimalCanonicalizationUrl\n  nameWithType: SignedXml.XmlDsigMinimalCanonicalizationUrl\n  fullName: SignedXml.XmlDsigMinimalCanonicalizationUrl\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: XmlDsigNamespaceUrl\n  nameWithType: SignedXml.XmlDsigNamespaceUrl\n  fullName: SignedXml.XmlDsigNamespaceUrl\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: XmlDsigRSASHA1Url\n  nameWithType: SignedXml.XmlDsigRSASHA1Url\n  fullName: SignedXml.XmlDsigRSASHA1Url\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: XmlDsigRSASHA256Url\n  nameWithType: SignedXml.XmlDsigRSASHA256Url\n  fullName: SignedXml.XmlDsigRSASHA256Url\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: XmlDsigRSASHA384Url\n  nameWithType: SignedXml.XmlDsigRSASHA384Url\n  fullName: SignedXml.XmlDsigRSASHA384Url\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: XmlDsigRSASHA512Url\n  nameWithType: SignedXml.XmlDsigRSASHA512Url\n  fullName: SignedXml.XmlDsigRSASHA512Url\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: XmlDsigSHA1Url\n  nameWithType: SignedXml.XmlDsigSHA1Url\n  fullName: SignedXml.XmlDsigSHA1Url\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: XmlDsigSHA256Url\n  nameWithType: SignedXml.XmlDsigSHA256Url\n  fullName: SignedXml.XmlDsigSHA256Url\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: XmlDsigSHA384Url\n  nameWithType: SignedXml.XmlDsigSHA384Url\n  fullName: SignedXml.XmlDsigSHA384Url\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: XmlDsigSHA512Url\n  nameWithType: SignedXml.XmlDsigSHA512Url\n  fullName: SignedXml.XmlDsigSHA512Url\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: XmlDsigXPathTransformUrl\n  nameWithType: SignedXml.XmlDsigXPathTransformUrl\n  fullName: SignedXml.XmlDsigXPathTransformUrl\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: XmlDsigXsltTransformUrl\n  nameWithType: SignedXml.XmlDsigXsltTransformUrl\n  fullName: SignedXml.XmlDsigXsltTransformUrl\n- uid: System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: XmlLicenseTransformUrl\n  nameWithType: SignedXml.XmlLicenseTransformUrl\n  fullName: SignedXml.XmlLicenseTransformUrl\n- uid: System.Security.Cryptography.Xml.SignedXml.#ctor*\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: SignedXml\n  nameWithType: SignedXml.SignedXml\n  fullName: SignedXml.SignedXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n- uid: System.Security.Cryptography.Xml.SignedXml.AddObject*\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: AddObject\n  nameWithType: SignedXml.AddObject\n  fullName: SignedXml.AddObject\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n- uid: System.Security.Cryptography.Xml.SignedXml.AddReference*\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: AddReference\n  nameWithType: SignedXml.AddReference\n  fullName: SignedXml.AddReference\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature*\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: CheckSignature\n  nameWithType: SignedXml.CheckSignature\n  fullName: SignedXml.CheckSignature\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey*\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: CheckSignatureReturningKey\n  nameWithType: SignedXml.CheckSignatureReturningKey\n  fullName: SignedXml.CheckSignatureReturningKey\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature*\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: ComputeSignature\n  nameWithType: SignedXml.ComputeSignature\n  fullName: SignedXml.ComputeSignature\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n- uid: System.Security.Cryptography.Xml.SignedXml.EncryptedXml*\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: EncryptedXml\n  nameWithType: SignedXml.EncryptedXml\n  fullName: SignedXml.EncryptedXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n- uid: System.Security.Cryptography.Xml.SignedXml.GetIdElement*\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: GetIdElement\n  nameWithType: SignedXml.GetIdElement\n  fullName: SignedXml.GetIdElement\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n- uid: System.Security.Cryptography.Xml.SignedXml.GetPublicKey*\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: GetPublicKey\n  nameWithType: SignedXml.GetPublicKey\n  fullName: SignedXml.GetPublicKey\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n- uid: System.Security.Cryptography.Xml.SignedXml.GetXml*\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: GetXml\n  nameWithType: SignedXml.GetXml\n  fullName: SignedXml.GetXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n- uid: System.Security.Cryptography.Xml.SignedXml.KeyInfo*\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: KeyInfo\n  nameWithType: SignedXml.KeyInfo\n  fullName: SignedXml.KeyInfo\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n- uid: System.Security.Cryptography.Xml.SignedXml.LoadXml*\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: LoadXml\n  nameWithType: SignedXml.LoadXml\n  fullName: SignedXml.LoadXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n- uid: System.Security.Cryptography.Xml.SignedXml.Resolver*\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: Resolver\n  nameWithType: SignedXml.Resolver\n  fullName: SignedXml.Resolver\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n- uid: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods*\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: SafeCanonicalizationMethods\n  nameWithType: SignedXml.SafeCanonicalizationMethods\n  fullName: SignedXml.SafeCanonicalizationMethods\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n- uid: System.Security.Cryptography.Xml.SignedXml.Signature*\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: Signature\n  nameWithType: SignedXml.Signature\n  fullName: SignedXml.Signature\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n- uid: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator*\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: SignatureFormatValidator\n  nameWithType: SignedXml.SignatureFormatValidator\n  fullName: SignedXml.SignatureFormatValidator\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n- uid: System.Security.Cryptography.Xml.SignedXml.SignatureLength*\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: SignatureLength\n  nameWithType: SignedXml.SignatureLength\n  fullName: SignedXml.SignatureLength\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n- uid: System.Security.Cryptography.Xml.SignedXml.SignatureMethod*\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: SignatureMethod\n  nameWithType: SignedXml.SignatureMethod\n  fullName: SignedXml.SignatureMethod\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n- uid: System.Security.Cryptography.Xml.SignedXml.SignatureValue*\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: SignatureValue\n  nameWithType: SignedXml.SignatureValue\n  fullName: SignedXml.SignatureValue\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n- uid: System.Security.Cryptography.Xml.SignedXml.SignedInfo*\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: SignedInfo\n  nameWithType: SignedXml.SignedInfo\n  fullName: SignedXml.SignedInfo\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n- uid: System.Security.Cryptography.Xml.SignedXml.SigningKey*\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: SigningKey\n  nameWithType: SignedXml.SigningKey\n  fullName: SignedXml.SigningKey\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n- uid: System.Security.Cryptography.Xml.SignedXml.SigningKeyName*\n  parent: System.Security.Cryptography.Xml.SignedXml\n  isExternal: false\n  name: SigningKeyName\n  nameWithType: SignedXml.SigningKeyName\n  fullName: SignedXml.SigningKeyName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.Xml/SignedXml.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}