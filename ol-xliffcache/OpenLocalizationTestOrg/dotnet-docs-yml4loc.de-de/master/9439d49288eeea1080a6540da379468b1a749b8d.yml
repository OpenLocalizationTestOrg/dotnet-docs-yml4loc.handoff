### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.WSDualHttpBinding
  commentId: T:System.ServiceModel.WSDualHttpBinding
  id: WSDualHttpBinding
  children:
  - System.ServiceModel.WSDualHttpBinding.#ctor
  - System.ServiceModel.WSDualHttpBinding.#ctor(System.ServiceModel.WSDualHttpSecurityMode)
  - System.ServiceModel.WSDualHttpBinding.#ctor(System.String)
  - System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal
  - System.ServiceModel.WSDualHttpBinding.ClientBaseAddress
  - System.ServiceModel.WSDualHttpBinding.CreateBindingElements
  - System.ServiceModel.WSDualHttpBinding.EnvelopeVersion
  - System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode
  - System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize
  - System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize
  - System.ServiceModel.WSDualHttpBinding.MessageEncoding
  - System.ServiceModel.WSDualHttpBinding.ProxyAddress
  - System.ServiceModel.WSDualHttpBinding.ReaderQuotas
  - System.ServiceModel.WSDualHttpBinding.ReliableSession
  - System.ServiceModel.WSDualHttpBinding.Scheme
  - System.ServiceModel.WSDualHttpBinding.Security
  - System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas
  - System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession
  - System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity
  - System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding
  - System.ServiceModel.WSDualHttpBinding.TextEncoding
  - System.ServiceModel.WSDualHttpBinding.TransactionFlow
  - System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy
  - System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  langs:
  - csharp
  name: WSDualHttpBinding
  nameWithType: WSDualHttpBinding
  fullName: System.ServiceModel.WSDualHttpBinding
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: A secure and interoperable binding that is designed for use with duplex service contracts that allows both services and clients to send and receive messages.
  remarks: "The <xref:System.ServiceModel.WSDualHttpBinding> provides the same support for Web Service protocols as the <xref:System.ServiceModel.WSHttpBinding>, but for use with duplex contracts. <xref:System.ServiceModel.WSDualHttpBinding> only supports SOAP security and requires reliable messaging. This binding requires that the client has a public URI that provides a callback endpoint for the service. This is provided by the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A>. A dual binding exposes the IP address of the client to the service. The client should use security to ensure that it only connects to services it trusts.  \n  \n By default the <xref:System.ServiceModel.WSDualHttpBinding> generates the following binding element stack:  \n  \n-   <xref:System.ServiceModel.Channels.TransactionFlowBindingElement>  \n  \n-   <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>  \n  \n-   <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement>  \n  \n-   <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement>  \n  \n-   <xref:System.ServiceModel.Channels.OneWayBindingElement>  \n  \n-   <xref:System.ServiceModel.Channels.TextMessageEncodingBindingElement>  \n  \n-   <xref:System.ServiceModel.Channels.HttpTransportBindingElement>"
  example:
  - "The following example shows how to specify the `wsDualHttpBinding` binding in a configuration file.  \n  \n [!code-csharp[S_dualhttp#134](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#134)]"
  syntax:
    content: 'public class WSDualHttpBinding : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences'
  inheritance:
  - System.Object
  - System.ServiceModel.Channels.Binding
  implements:
  - System.ServiceModel.Channels.IBindingRuntimePreferences
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])
  - System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])
  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])
  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])
  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])
  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])
  - System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])
  - System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.Channels.Binding.CloseTimeout
  - System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.Channels.Binding.MessageVersion
  - System.ServiceModel.Channels.Binding.Name
  - System.ServiceModel.Channels.Binding.Namespace
  - System.ServiceModel.Channels.Binding.OpenTimeout
  - System.ServiceModel.Channels.Binding.ReceiveTimeout
  - System.ServiceModel.Channels.Binding.SendTimeout
  - System.ServiceModel.Channels.Binding.ShouldSerializeName
  - System.ServiceModel.Channels.Binding.ShouldSerializeNamespace
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.WSDualHttpBinding.#ctor
  commentId: M:System.ServiceModel.WSDualHttpBinding.#ctor
  id: '#ctor'
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: WSDualHttpBinding()
  nameWithType: WSDualHttpBinding.WSDualHttpBinding()
  fullName: WSDualHttpBinding.WSDualHttpBinding()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Initializes a new instance of the <xref href="System.ServiceModel.WSDualHttpBinding"></xref> class.
  remarks: ''
  example:
  - "The following example shows how to use the default constructor for wsDualHttpBinding.  \n  \n [!code-csharp[S_dualhttp#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#1)]\n [!code-vb[S_dualhttp#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#1)]"
  syntax:
    content: public WSDualHttpBinding ();
    parameters: []
  overload: System.ServiceModel.WSDualHttpBinding.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.WSDualHttpBinding.#ctor(System.ServiceModel.WSDualHttpSecurityMode)
  commentId: M:System.ServiceModel.WSDualHttpBinding.#ctor(System.ServiceModel.WSDualHttpSecurityMode)
  id: '#ctor(System.ServiceModel.WSDualHttpSecurityMode)'
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: WSDualHttpBinding(WSDualHttpSecurityMode)
  nameWithType: WSDualHttpBinding.WSDualHttpBinding(WSDualHttpSecurityMode)
  fullName: WSDualHttpBinding.WSDualHttpBinding(WSDualHttpSecurityMode)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Initializes a new instance of the <xref href="System.ServiceModel.WSDualHttpBinding"></xref> class with a specified type of security used by the binding.
  remarks: Reliable messaging is required by the <xref:System.ServiceModel.WSDualHttpBinding>, so there is no constructor that provides a switch to turn it off as there is on the <xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29> constructor for the <xref:System.ServiceModel.WSHttpBinding>.
  example:
  - "The following example shows how to use the `wsDualHttpBinding` constructor with a security mode.  \n  \n [!code-csharp[S_dualhttp#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#3)]\n [!code-vb[S_dualhttp#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#3)]"
  syntax:
    content: public WSDualHttpBinding (System.ServiceModel.WSDualHttpSecurityMode securityMode);
    parameters:
    - id: securityMode
      type: System.ServiceModel.WSDualHttpSecurityMode
      description: The value of <xref href="System.ServiceModel.WSDualHttpSecurityMode"></xref> that specifies the type of security that is used with the SOAP message and for the client.
  overload: System.ServiceModel.WSDualHttpBinding.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.WSDualHttpBinding.#ctor(System.String)
  commentId: M:System.ServiceModel.WSDualHttpBinding.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: WSDualHttpBinding(String)
  nameWithType: WSDualHttpBinding.WSDualHttpBinding(String)
  fullName: WSDualHttpBinding.WSDualHttpBinding(String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Initializes a new instance of the <xref href="System.ServiceModel.WSDualHttpBinding"></xref> class with a binding specified by its configuration name.
  syntax:
    content: public WSDualHttpBinding (string configName);
    parameters:
    - id: configName
      type: System.String
      description: The binding configuration name for the <xref href="System.ServiceModel.Configuration.WSHttpBindingElement"></xref>.
  overload: System.ServiceModel.WSDualHttpBinding.#ctor*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: The binding element with the name <code>configurationName</code> was not found.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal
  commentId: P:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal
  id: BypassProxyOnLocal
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: BypassProxyOnLocal
  nameWithType: WSDualHttpBinding.BypassProxyOnLocal
  fullName: WSDualHttpBinding.BypassProxyOnLocal
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets a value that indicates whether to bypass the proxy server for local addresses.
  remarks: "An Internet resource is local if it has a local address. A local address is one that is on the same computer, the local LAN or intranet and is identified, syntactically, by the lack of a period (.) as in the URIs \"http://webserver/\" and \"http://localhost/\".  \n  \n Setting the <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> property determines whether endpoints configured with the <xref:System.ServiceModel.WSDualHttpBinding> use the proxy server when accessing local resources.  \n  \n If <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> is `true`, requests to local Internet resources do not use the proxy server. Use the host name (rather than `localhost`) if you want clients to go through a proxy when talking to services on the same machine when this property is set to `true`.  \n  \n When <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> is `false`, all Internet requests are made through the proxy server."
  example:
  - "The following example shows how to specify the wsDualHttpBinding binding in a configuration file.  \n  \n  \n  \n The following example sets this property to indicate that the proxy should be bypassed for local resources.  \n  \n [!code-csharp[S_dualhttp#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#6)]\n [!code-vb[S_dualhttp#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#6)]  \n  \n The value of this property can also be set in the configuration file."
  syntax:
    content: public bool BypassProxyOnLocal { get; set; }
    return:
      type: System.Boolean
      description: '`true` to bypass the proxy server for local addresses; otherwise, `false`. The default value is `false`.'
  overload: System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.WSDualHttpBinding.ClientBaseAddress
  commentId: P:System.ServiceModel.WSDualHttpBinding.ClientBaseAddress
  id: ClientBaseAddress
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: ClientBaseAddress
  nameWithType: WSDualHttpBinding.ClientBaseAddress
  fullName: WSDualHttpBinding.ClientBaseAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets the base address of the client.
  remarks: This public URI for the client provides the callback endpoint required for the service to contact the client when the contract is duplex.
  example:
  - "The following example shows how to specify the wsDualHttpBinding binding in a configuration file.  \n  \n [!code-csharp[S_dualhttp#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#8)]\n [!code-vb[S_dualhttp#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#8)]"
  syntax:
    content: public Uri ClientBaseAddress { get; set; }
    return:
      type: System.Uri
      description: The <xref href="System.Uri"></xref> that is the base address of the client. The default value is `null`.
  overload: System.ServiceModel.WSDualHttpBinding.ClientBaseAddress*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.WSDualHttpBinding.CreateBindingElements
  commentId: M:System.ServiceModel.WSDualHttpBinding.CreateBindingElements
  id: CreateBindingElements
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: CreateBindingElements()
  nameWithType: WSDualHttpBinding.CreateBindingElements()
  fullName: WSDualHttpBinding.CreateBindingElements()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Returns an ordered collection of binding elements contained in the current binding.
  remarks: ''
  example:
  - "The following example shows how to get an ordered collection of binding elements contained in the current binding.  \n  \n [!code-csharp[S_dualhttp#20](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#20)]\n [!code-vb[S_dualhttp#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#20)]"
  syntax:
    content: public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElementCollection
      description: A <xref href="System.ServiceModel.Channels.BindingElementCollection"></xref> that includes a <xref href="System.ServiceModel.Channels.TransactionFlowBindingElement"></xref> and, because a reliable session is required for the <xref href="System.ServiceModel.WSDualHttpBinding"></xref>, a <xref href="System.ServiceModel.Channels.ReliableSessionBindingElement"></xref>.
  overload: System.ServiceModel.WSDualHttpBinding.CreateBindingElements*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.WSDualHttpBinding.EnvelopeVersion
  commentId: P:System.ServiceModel.WSDualHttpBinding.EnvelopeVersion
  id: EnvelopeVersion
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: EnvelopeVersion
  nameWithType: WSDualHttpBinding.EnvelopeVersion
  fullName: WSDualHttpBinding.EnvelopeVersion
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the version of SOAP that is used for messages that are processed by this binding.
  remarks: ''
  example:
  - "The following example shows how to get the version of SOAP that is used for messages that are processed by this binding.  \n  \n [!code-csharp[S_dualhttp#21](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#21)]\n [!code-vb[S_dualhttp#21](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#21)]"
  syntax:
    content: public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }
    return:
      type: System.ServiceModel.EnvelopeVersion
      description: The value of the <xref href="System.ServiceModel.EnvelopeVersion"></xref> that is used with this binding. The value must always be SOAP 1.2.
  overload: System.ServiceModel.WSDualHttpBinding.EnvelopeVersion*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode
  commentId: P:System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode
  id: HostNameComparisonMode
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: HostNameComparisonMode
  nameWithType: WSDualHttpBinding.HostNameComparisonMode
  fullName: WSDualHttpBinding.HostNameComparisonMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.
  remarks: ''
  example:
  - "The following example shows how to specify the wsDualHttpBinding binding in a configuration file.  \n  \n [!code-csharp[S_dualhttp#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#9)]\n [!code-vb[S_dualhttp#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#9)]"
  syntax:
    content: public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }
    return:
      type: System.ServiceModel.HostNameComparisonMode
      description: The <xref href="System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode"></xref> value that indicates whether the hostname is used to reach the service when matching on the URI. The default value is <xref href="System.ServiceModel.HostNameComparisonMode.StrongWildcard"></xref>, which ignores the hostname in the match.
  overload: System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize
  commentId: P:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize
  id: MaxBufferPoolSize
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: MaxBufferPoolSize
  nameWithType: WSDualHttpBinding.MaxBufferPoolSize
  fullName: WSDualHttpBinding.MaxBufferPoolSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets the maximum amount of memory, in bytes, that can be allocated for the manager of message buffers that receive messages at the endpoints configured with this binding.
  remarks: "The <xref:System.ServiceModel.Channels.BufferManager> minimizes the cost of using buffers with a buffer pool. Buffers are required to process messages by the service when they come out of the channel. If there is not sufficient memory in the buffer pool to process the message load, the <xref:System.ServiceModel.Channels.BufferManager> must allocate additional memory from the CLR heap, which increases the garbage collection overhead. Extensive allocation from the CLR garbage heap is an indication that the buffer pool size is too small and that performance can be improved with a larger allocation by increasing the <xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A> limit.  \n  \n The limitations on buffer size set here are for optimizing the performance of message exchanges. If a message exceeds the maximum value set for the buffer, it is not dropped. Instead, more memory is requested from the CLR heap and this incurs more garbage collection overhead than using the buffers."
  example:
  - "The following example shows how to set the `MaxBufferPoolSize`.  \n  \n [!code-csharp[S_dualhttp#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#10)]\n [!code-vb[S_dualhttp#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#10)]"
  syntax:
    content: public long MaxBufferPoolSize { get; set; }
    return:
      type: System.Int64
      description: The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding. The default value is 524288 bytes.
  overload: System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize
  commentId: P:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize
  id: MaxReceivedMessageSize
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: MaxReceivedMessageSize
  nameWithType: WSDualHttpBinding.MaxReceivedMessageSize
  fullName: WSDualHttpBinding.MaxReceivedMessageSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets the maximum size, in bytes, for a message that can be received on a channel configured with this binding.
  remarks: "The size of the messages that can be received on the wire by services using the <xref:System.ServiceModel.WSDualHttpBinding> is bounded by the amount of memory allocated for each message. This bound on message size is intended to limit exposure to DOS-style attacks.  \n  \n Note that the settings for <xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A> and <xref:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize%2A> are local behavioral settings. This means that they are not transmitted to other endpoints in metadata. If you generate a proxy to a service with a maximum message size of 2GB from metadata, the proxy still has a default value 64K. This leaves control of the appropriate bounds for message and message buffer size in the scope of local administrators."
  example:
  - "The following example shows how to get the <xref:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize%2A> property.  \n  \n [!code-csharp[S_dualhttp#22](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#22)]\n [!code-vb[S_dualhttp#22](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#22)]"
  syntax:
    content: public long MaxReceivedMessageSize { get; set; }
    return:
      type: System.Int64
      description: The maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes.
  overload: System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value is less than zero.
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.WSDualHttpBinding.MessageEncoding
  commentId: P:System.ServiceModel.WSDualHttpBinding.MessageEncoding
  id: MessageEncoding
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: MessageEncoding
  nameWithType: WSDualHttpBinding.MessageEncoding
  fullName: WSDualHttpBinding.MessageEncoding
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets whether MTOM or Text/XML is used to encode SOAP messages.
  remarks: ''
  example:
  - "The following example shows how to set the `WSMessageEncoding` property to MTOM.  \n  \n [!code-csharp[S_dualhttp#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#11)]\n [!code-vb[S_dualhttp#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#11)]"
  syntax:
    content: public System.ServiceModel.WSMessageEncoding MessageEncoding { get; set; }
    return:
      type: System.ServiceModel.WSMessageEncoding
      description: The value of <xref href="System.ServiceModel.WSMessageEncoding"></xref> that indicates that MTOM or Text/XML is used to encode SOAP messages. The default value is <xref href="System.ServiceModel.WSMessageEncoding.Text"></xref>.
  overload: System.ServiceModel.WSDualHttpBinding.MessageEncoding*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.WSDualHttpBinding.ProxyAddress
  commentId: P:System.ServiceModel.WSDualHttpBinding.ProxyAddress
  id: ProxyAddress
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: ProxyAddress
  nameWithType: WSDualHttpBinding.ProxyAddress
  fullName: WSDualHttpBinding.ProxyAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets the URI address of the HTTP proxy.
  remarks: If the <xref:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy%2A> is set to `true`, the value of the <xref:System.ServiceModel.WSDualHttpBinding.ProxyAddress%2A> is ignored.
  example:
  - "The following example shows how to specify the address of the HTTP proxy.  \n  \n [!code-csharp[S_dualhttp#12](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#12)]\n [!code-vb[S_dualhttp#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#12)]"
  syntax:
    content: public Uri ProxyAddress { get; set; }
    return:
      type: System.Uri
      description: A <xref href="System.Uri"></xref> that serves as the address of the HTTP proxy. The default value is `null`.
  overload: System.ServiceModel.WSDualHttpBinding.ProxyAddress*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.WSDualHttpBinding.ReaderQuotas
  commentId: P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas
  id: ReaderQuotas
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: ReaderQuotas
  nameWithType: WSDualHttpBinding.ReaderQuotas
  fullName: WSDualHttpBinding.ReaderQuotas
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.
  remarks: The complexity constraints include items such as a maximum element depth and a maximum length for string content within the message. The constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.
  example:
  - "The following example shows how to get the `ReaderQuotas` property.  \n  \n [!code-csharp[S_dualhttp#13](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#13)]\n [!code-vb[S_dualhttp#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#13)]"
  syntax:
    content: public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }
    return:
      type: System.Xml.XmlDictionaryReaderQuotas
      description: The <xref href="System.Xml.XmlDictionaryReaderQuotas"></xref> that specifies the complexity constraints.
  overload: System.ServiceModel.WSDualHttpBinding.ReaderQuotas*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.WSDualHttpBinding.ReliableSession
  commentId: P:System.ServiceModel.WSDualHttpBinding.ReliableSession
  id: ReliableSession
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: ReliableSession
  nameWithType: WSDualHttpBinding.ReliableSession
  fullName: WSDualHttpBinding.ReliableSession
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets an object that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.
  remarks: The reliable session is required for service configured with a <xref:System.ServiceModel.WSDualHttpBinding>.
  example:
  - "The following example shows how to get the <xref:System.ServiceModel.WSDualHttpBinding.ReliableSession%2A> property.  \n  \n [!code-csharp[S_dualhttp#14](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#14)]\n [!code-vb[S_dualhttp#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#14)]"
  syntax:
    content: public System.ServiceModel.ReliableSession ReliableSession { get; set; }
    return:
      type: System.ServiceModel.ReliableSession
      description: The <xref href="System.ServiceModel.ReliableSession"></xref> that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.
  overload: System.ServiceModel.WSDualHttpBinding.ReliableSession*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.WSDualHttpBinding.Scheme
  commentId: P:System.ServiceModel.WSDualHttpBinding.Scheme
  id: Scheme
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: Scheme
  nameWithType: WSDualHttpBinding.Scheme
  fullName: WSDualHttpBinding.Scheme
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the URI transport scheme for the channels and listeners that are configured with this binding.
  remarks: ''
  example:
  - "The following example shows how to specify the wsDualHttpBinding binding in a configuration file.  \n  \n [!code-csharp[S_dualhttp#15](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#15)]\n [!code-vb[S_dualhttp#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#15)]"
  syntax:
    content: public override string Scheme { get; }
    return:
      type: System.String
      description: 'The transport scheme: "http".'
  overload: System.ServiceModel.WSDualHttpBinding.Scheme*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.WSDualHttpBinding.Security
  commentId: P:System.ServiceModel.WSDualHttpBinding.Security
  id: Security
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: Security
  nameWithType: WSDualHttpBinding.Security
  fullName: WSDualHttpBinding.Security
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets an object that specifies the security settings used with this binding.
  remarks: A dual binding exposes the IP address of the client to the service. The client should use security to ensure that it only connects to services it trusts.
  example:
  - "The following example shows how to get the type of security of the binding.  \n  \n [!code-csharp[S_dualhttp#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#16)]\n [!code-vb[S_dualhttp#16](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#16)]"
  syntax:
    content: public System.ServiceModel.WSDualHttpSecurity Security { get; set; }
    return:
      type: System.ServiceModel.WSDualHttpSecurity
      description: The <xref href="System.ServiceModel.WSDualHttpSecurity"></xref> that specifies security settings used with the binding. The default value of <xref href="System.ServiceModel.WSDualHttpSecurityMode"></xref> is <xref href="System.ServiceModel.WSDualHttpSecurityMode.Message"></xref>.
  overload: System.ServiceModel.WSDualHttpBinding.Security*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas
  commentId: M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas
  id: ShouldSerializeReaderQuotas
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: ShouldSerializeReaderQuotas()
  nameWithType: WSDualHttpBinding.ShouldSerializeReaderQuotas()
  fullName: WSDualHttpBinding.ShouldSerializeReaderQuotas()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Returns a value that indicates whether the <xref href="System.ServiceModel.WSDualHttpBinding.ReaderQuotas"></xref> property has changed from its default value and should be serialized.
  syntax:
    content: public bool ShouldSerializeReaderQuotas ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.ServiceModel.WSDualHttpBinding.ReaderQuotas"></xref> property value should be serialized; otherwise, `false`.'
  overload: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession
  commentId: M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession
  id: ShouldSerializeReliableSession
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: ShouldSerializeReliableSession()
  nameWithType: WSDualHttpBinding.ShouldSerializeReliableSession()
  fullName: WSDualHttpBinding.ShouldSerializeReliableSession()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Returns a value that indicates whether the <xref href="System.ServiceModel.WSDualHttpBinding.ReliableSession"></xref> property has changed from its default value and should be serialized.
  syntax:
    content: public bool ShouldSerializeReliableSession ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.ServiceModel.WSDualHttpBinding.ReliableSession"></xref> property value should be serialized; otherwise, `false`.'
  overload: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity
  commentId: M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity
  id: ShouldSerializeSecurity
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: ShouldSerializeSecurity()
  nameWithType: WSDualHttpBinding.ShouldSerializeSecurity()
  fullName: WSDualHttpBinding.ShouldSerializeSecurity()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Returns a value that indicates whether the <xref href="System.ServiceModel.WSDualHttpBinding.Security"></xref> property has changed from its default value and should be serialized.
  syntax:
    content: public bool ShouldSerializeSecurity ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.ServiceModel.WSDualHttpBinding.Security"></xref> property value should be serialized; otherwise, `false`.'
  overload: System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding
  commentId: M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding
  id: ShouldSerializeTextEncoding
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: ShouldSerializeTextEncoding()
  nameWithType: WSDualHttpBinding.ShouldSerializeTextEncoding()
  fullName: WSDualHttpBinding.ShouldSerializeTextEncoding()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Returns a value that indicates whether the <xref href="System.ServiceModel.WSDualHttpBinding.TextEncoding"></xref> property has changed from its default value and should be serialized.
  syntax:
    content: public bool ShouldSerializeTextEncoding ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.ServiceModel.WSDualHttpBinding.TextEncoding"></xref> property value should be serialized; otherwise, `false`.'
  overload: System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.WSDualHttpBinding.TextEncoding
  commentId: P:System.ServiceModel.WSDualHttpBinding.TextEncoding
  id: TextEncoding
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: TextEncoding
  nameWithType: WSDualHttpBinding.TextEncoding
  fullName: WSDualHttpBinding.TextEncoding
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets the character encoding that is used for the message text.
  remarks: ''
  example:
  - "The following example shows how to get the character encoding that is used for the message text.  \n  \n [!code-csharp[S_dualhttp#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#17)]\n [!code-vb[S_dualhttp#17](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#17)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.EncodingConverter))]

      public System.Text.Encoding TextEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: The <xref href="System.Text.Encoding"></xref> that indicates the character encoding that is used. The default is <xref href="System.Text.UTF8Encoding"></xref>.
  overload: System.ServiceModel.WSDualHttpBinding.TextEncoding*
  exceptions: []
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.WSDualHttpBinding.TransactionFlow
  commentId: P:System.ServiceModel.WSDualHttpBinding.TransactionFlow
  id: TransactionFlow
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: TransactionFlow
  nameWithType: WSDualHttpBinding.TransactionFlow
  fullName: WSDualHttpBinding.TransactionFlow
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets a value that indicates whether this binding should support flowing WS-Transactions.
  remarks: The default value specifies that clients do not flow transactions and services reject messages with a flowed transaction message header.
  example:
  - "The following example shows how to set the `TransactionFlow` property to support the flowing of transactions.  \n  \n [!code-csharp[S_dualhttp#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#18)]\n [!code-vb[S_dualhttp#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#18)]"
  syntax:
    content: public bool TransactionFlow { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the flowing of transactions is supported; otherwise, `false`. The default value is `false`.'
  overload: System.ServiceModel.WSDualHttpBinding.TransactionFlow*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy
  commentId: P:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy
  id: UseDefaultWebProxy
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: UseDefaultWebProxy
  nameWithType: WSDualHttpBinding.UseDefaultWebProxy
  fullName: WSDualHttpBinding.UseDefaultWebProxy
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.
  remarks: ''
  example:
  - "The following example shows how to set the `UseDefaultWebProxy` property to use the auto-configured HTTP proxy of the system.  \n  \n [!code-csharp[S_dualhttp#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#19)]\n [!code-vb[S_dualhttp#19](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#19)]"
  syntax:
    content: public bool UseDefaultWebProxy { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the auto-configured HTTP proxy of the system should be used, if available; otherwise, `false`. The default value is `true`.'
  overload: System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  commentId: P:System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  id: System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  isEii: true
  parent: System.ServiceModel.WSDualHttpBinding
  langs:
  - csharp
  name: IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: WSDualHttpBinding.IBindingRuntimePreferences.ReceiveSynchronously
  fullName: WSDualHttpBinding.IBindingRuntimePreferences.ReceiveSynchronously
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.
  remarks: This value can be changed by using a service model behavior.
  example:
  - "The following examples show how to get the <xref:System.ServiceModel.WSDualHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> value.  \n  \n [!code-csharp[S_dualhttp#23](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#23)]\n [!code-vb[S_dualhttp#23](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#23)]  \n  \n [!code-csharp[S_dualhttp#24](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#24)]\n [!code-vb[S_dualhttp#24](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#24)]"
  syntax:
    content: bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }
    return:
      type: System.Boolean
      description: '`true` if requests are handled synchronously; `false` if handled asynchronously. The value returned is always is `false`, to handle requests asynchronously.'
  overload: System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.WSDualHttpBinding.#ctor
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: WSDualHttpBinding()
  nameWithType: WSDualHttpBinding.WSDualHttpBinding()
  fullName: WSDualHttpBinding.WSDualHttpBinding()
- uid: System.ServiceModel.WSDualHttpBinding.#ctor(System.ServiceModel.WSDualHttpSecurityMode)
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: WSDualHttpBinding(WSDualHttpSecurityMode)
  nameWithType: WSDualHttpBinding.WSDualHttpBinding(WSDualHttpSecurityMode)
  fullName: WSDualHttpBinding.WSDualHttpBinding(WSDualHttpSecurityMode)
- uid: System.ServiceModel.WSDualHttpSecurityMode
  parent: System.ServiceModel
  isExternal: false
  name: WSDualHttpSecurityMode
  nameWithType: WSDualHttpSecurityMode
  fullName: System.ServiceModel.WSDualHttpSecurityMode
- uid: System.ServiceModel.WSDualHttpBinding.#ctor(System.String)
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: WSDualHttpBinding(String)
  nameWithType: WSDualHttpBinding.WSDualHttpBinding(String)
  fullName: WSDualHttpBinding.WSDualHttpBinding(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WSDualHttpBinding.BypassProxyOnLocal
  fullName: WSDualHttpBinding.BypassProxyOnLocal
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.WSDualHttpBinding.ClientBaseAddress
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ClientBaseAddress
  nameWithType: WSDualHttpBinding.ClientBaseAddress
  fullName: WSDualHttpBinding.ClientBaseAddress
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.WSDualHttpBinding.CreateBindingElements
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: CreateBindingElements()
  nameWithType: WSDualHttpBinding.CreateBindingElements()
  fullName: WSDualHttpBinding.CreateBindingElements()
- uid: System.ServiceModel.Channels.BindingElementCollection
  parent: System.ServiceModel.Channels
  isExternal: false
  name: BindingElementCollection
  nameWithType: BindingElementCollection
  fullName: System.ServiceModel.Channels.BindingElementCollection
- uid: System.ServiceModel.WSDualHttpBinding.EnvelopeVersion
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: EnvelopeVersion
  nameWithType: WSDualHttpBinding.EnvelopeVersion
  fullName: WSDualHttpBinding.EnvelopeVersion
- uid: System.ServiceModel.EnvelopeVersion
  parent: System.ServiceModel
  isExternal: false
  name: EnvelopeVersion
  nameWithType: EnvelopeVersion
  fullName: System.ServiceModel.EnvelopeVersion
- uid: System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: WSDualHttpBinding.HostNameComparisonMode
  fullName: WSDualHttpBinding.HostNameComparisonMode
- uid: System.ServiceModel.HostNameComparisonMode
  parent: System.ServiceModel
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: HostNameComparisonMode
  fullName: System.ServiceModel.HostNameComparisonMode
- uid: System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: WSDualHttpBinding.MaxBufferPoolSize
  fullName: WSDualHttpBinding.MaxBufferPoolSize
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: WSDualHttpBinding.MaxReceivedMessageSize
  fullName: WSDualHttpBinding.MaxReceivedMessageSize
- uid: System.ServiceModel.WSDualHttpBinding.MessageEncoding
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: MessageEncoding
  nameWithType: WSDualHttpBinding.MessageEncoding
  fullName: WSDualHttpBinding.MessageEncoding
- uid: System.ServiceModel.WSMessageEncoding
  parent: System.ServiceModel
  isExternal: false
  name: WSMessageEncoding
  nameWithType: WSMessageEncoding
  fullName: System.ServiceModel.WSMessageEncoding
- uid: System.ServiceModel.WSDualHttpBinding.ProxyAddress
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ProxyAddress
  nameWithType: WSDualHttpBinding.ProxyAddress
  fullName: WSDualHttpBinding.ProxyAddress
- uid: System.ServiceModel.WSDualHttpBinding.ReaderQuotas
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ReaderQuotas
  nameWithType: WSDualHttpBinding.ReaderQuotas
  fullName: WSDualHttpBinding.ReaderQuotas
- uid: System.Xml.XmlDictionaryReaderQuotas
  parent: System.Xml
  isExternal: false
  name: XmlDictionaryReaderQuotas
  nameWithType: XmlDictionaryReaderQuotas
  fullName: System.Xml.XmlDictionaryReaderQuotas
- uid: System.ServiceModel.WSDualHttpBinding.ReliableSession
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ReliableSession
  nameWithType: WSDualHttpBinding.ReliableSession
  fullName: WSDualHttpBinding.ReliableSession
- uid: System.ServiceModel.ReliableSession
  parent: System.ServiceModel
  isExternal: false
  name: ReliableSession
  nameWithType: ReliableSession
  fullName: System.ServiceModel.ReliableSession
- uid: System.ServiceModel.WSDualHttpBinding.Scheme
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: Scheme
  nameWithType: WSDualHttpBinding.Scheme
  fullName: WSDualHttpBinding.Scheme
- uid: System.ServiceModel.WSDualHttpBinding.Security
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: Security
  nameWithType: WSDualHttpBinding.Security
  fullName: WSDualHttpBinding.Security
- uid: System.ServiceModel.WSDualHttpSecurity
  parent: System.ServiceModel
  isExternal: false
  name: WSDualHttpSecurity
  nameWithType: WSDualHttpSecurity
  fullName: System.ServiceModel.WSDualHttpSecurity
- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ShouldSerializeReaderQuotas()
  nameWithType: WSDualHttpBinding.ShouldSerializeReaderQuotas()
  fullName: WSDualHttpBinding.ShouldSerializeReaderQuotas()
- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ShouldSerializeReliableSession()
  nameWithType: WSDualHttpBinding.ShouldSerializeReliableSession()
  fullName: WSDualHttpBinding.ShouldSerializeReliableSession()
- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ShouldSerializeSecurity()
  nameWithType: WSDualHttpBinding.ShouldSerializeSecurity()
  fullName: WSDualHttpBinding.ShouldSerializeSecurity()
- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ShouldSerializeTextEncoding()
  nameWithType: WSDualHttpBinding.ShouldSerializeTextEncoding()
  fullName: WSDualHttpBinding.ShouldSerializeTextEncoding()
- uid: System.ServiceModel.WSDualHttpBinding.TextEncoding
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: TextEncoding
  nameWithType: WSDualHttpBinding.TextEncoding
  fullName: WSDualHttpBinding.TextEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: false
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.ServiceModel.WSDualHttpBinding.TransactionFlow
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: TransactionFlow
  nameWithType: WSDualHttpBinding.TransactionFlow
  fullName: WSDualHttpBinding.TransactionFlow
- uid: System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: UseDefaultWebProxy
  nameWithType: WSDualHttpBinding.UseDefaultWebProxy
  fullName: WSDualHttpBinding.UseDefaultWebProxy
- uid: System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: WSDualHttpBinding.IBindingRuntimePreferences.ReceiveSynchronously
  fullName: WSDualHttpBinding.IBindingRuntimePreferences.ReceiveSynchronously
- uid: System.ServiceModel.WSDualHttpBinding.#ctor*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: WSDualHttpBinding
  nameWithType: WSDualHttpBinding.WSDualHttpBinding
  fullName: WSDualHttpBinding.WSDualHttpBinding
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
- uid: System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WSDualHttpBinding.BypassProxyOnLocal
  fullName: WSDualHttpBinding.BypassProxyOnLocal
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
- uid: System.ServiceModel.WSDualHttpBinding.ClientBaseAddress*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ClientBaseAddress
  nameWithType: WSDualHttpBinding.ClientBaseAddress
  fullName: WSDualHttpBinding.ClientBaseAddress
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
- uid: System.ServiceModel.WSDualHttpBinding.CreateBindingElements*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: CreateBindingElements
  nameWithType: WSDualHttpBinding.CreateBindingElements
  fullName: WSDualHttpBinding.CreateBindingElements
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
- uid: System.ServiceModel.WSDualHttpBinding.EnvelopeVersion*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: EnvelopeVersion
  nameWithType: WSDualHttpBinding.EnvelopeVersion
  fullName: WSDualHttpBinding.EnvelopeVersion
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
- uid: System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: WSDualHttpBinding.HostNameComparisonMode
  fullName: WSDualHttpBinding.HostNameComparisonMode
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
- uid: System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: WSDualHttpBinding.MaxBufferPoolSize
  fullName: WSDualHttpBinding.MaxBufferPoolSize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
- uid: System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: WSDualHttpBinding.MaxReceivedMessageSize
  fullName: WSDualHttpBinding.MaxReceivedMessageSize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
- uid: System.ServiceModel.WSDualHttpBinding.MessageEncoding*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: MessageEncoding
  nameWithType: WSDualHttpBinding.MessageEncoding
  fullName: WSDualHttpBinding.MessageEncoding
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
- uid: System.ServiceModel.WSDualHttpBinding.ProxyAddress*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ProxyAddress
  nameWithType: WSDualHttpBinding.ProxyAddress
  fullName: WSDualHttpBinding.ProxyAddress
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
- uid: System.ServiceModel.WSDualHttpBinding.ReaderQuotas*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ReaderQuotas
  nameWithType: WSDualHttpBinding.ReaderQuotas
  fullName: WSDualHttpBinding.ReaderQuotas
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
- uid: System.ServiceModel.WSDualHttpBinding.ReliableSession*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ReliableSession
  nameWithType: WSDualHttpBinding.ReliableSession
  fullName: WSDualHttpBinding.ReliableSession
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
- uid: System.ServiceModel.WSDualHttpBinding.Scheme*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: Scheme
  nameWithType: WSDualHttpBinding.Scheme
  fullName: WSDualHttpBinding.Scheme
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
- uid: System.ServiceModel.WSDualHttpBinding.Security*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: Security
  nameWithType: WSDualHttpBinding.Security
  fullName: WSDualHttpBinding.Security
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ShouldSerializeReaderQuotas
  nameWithType: WSDualHttpBinding.ShouldSerializeReaderQuotas
  fullName: WSDualHttpBinding.ShouldSerializeReaderQuotas
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ShouldSerializeReliableSession
  nameWithType: WSDualHttpBinding.ShouldSerializeReliableSession
  fullName: WSDualHttpBinding.ShouldSerializeReliableSession
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ShouldSerializeSecurity
  nameWithType: WSDualHttpBinding.ShouldSerializeSecurity
  fullName: WSDualHttpBinding.ShouldSerializeSecurity
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
- uid: System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: ShouldSerializeTextEncoding
  nameWithType: WSDualHttpBinding.ShouldSerializeTextEncoding
  fullName: WSDualHttpBinding.ShouldSerializeTextEncoding
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
- uid: System.ServiceModel.WSDualHttpBinding.TextEncoding*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: TextEncoding
  nameWithType: WSDualHttpBinding.TextEncoding
  fullName: WSDualHttpBinding.TextEncoding
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
- uid: System.ServiceModel.WSDualHttpBinding.TransactionFlow*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: TransactionFlow
  nameWithType: WSDualHttpBinding.TransactionFlow
  fullName: WSDualHttpBinding.TransactionFlow
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
- uid: System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: UseDefaultWebProxy
  nameWithType: WSDualHttpBinding.UseDefaultWebProxy
  fullName: WSDualHttpBinding.UseDefaultWebProxy
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
- uid: System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously*
  parent: System.ServiceModel.WSDualHttpBinding
  isExternal: false
  name: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  nameWithType: WSDualHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  fullName: WSDualHttpBinding.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WSDualHttpBinding.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])
  parent: System.ServiceModel.Channels.Binding
  isExternal: false
  name: BuildChannelFactory<TChannel>(Object[])
  nameWithType: Binding.BuildChannelFactory<TChannel>(Object[])
  fullName: Binding.BuildChannelFactory<TChannel>(Object[])
- uid: System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.Channels.Binding
  isExternal: false
  name: BuildChannelFactory<TChannel>(BindingParameterCollection)
  nameWithType: Binding.BuildChannelFactory<TChannel>(BindingParameterCollection)
  fullName: Binding.BuildChannelFactory<TChannel>(BindingParameterCollection)
- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])
  parent: System.ServiceModel.Channels.Binding
  isExternal: false
  name: BuildChannelListener<TChannel>(Object[])
  nameWithType: Binding.BuildChannelListener<TChannel>(Object[])
  fullName: Binding.BuildChannelListener<TChannel>(Object[])
- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.Channels.Binding
  isExternal: false
  name: BuildChannelListener<TChannel>(BindingParameterCollection)
  nameWithType: Binding.BuildChannelListener<TChannel>(BindingParameterCollection)
  fullName: Binding.BuildChannelListener<TChannel>(BindingParameterCollection)
- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])
  parent: System.ServiceModel.Channels.Binding
  isExternal: false
  name: BuildChannelListener<TChannel>(Uri, Object[])
  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, Object[])
  fullName: Binding.BuildChannelListener<TChannel>(Uri, Object[])
- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.Channels.Binding
  isExternal: false
  name: BuildChannelListener<TChannel>(Uri, BindingParameterCollection)
  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, BindingParameterCollection)
  fullName: Binding.BuildChannelListener<TChannel>(Uri, BindingParameterCollection)
- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])
  parent: System.ServiceModel.Channels.Binding
  isExternal: false
  name: BuildChannelListener<TChannel>(Uri, String, Object[])
  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, String, Object[])
  fullName: Binding.BuildChannelListener<TChannel>(Uri, String, Object[])
- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.Channels.Binding
  isExternal: false
  name: BuildChannelListener<TChannel>(Uri, String, BindingParameterCollection)
  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, String, BindingParameterCollection)
  fullName: Binding.BuildChannelListener<TChannel>(Uri, String, BindingParameterCollection)
- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])
  parent: System.ServiceModel.Channels.Binding
  isExternal: false
  name: BuildChannelListener<TChannel>(Uri, String, ListenUriMode, Object[])
  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, String, ListenUriMode, Object[])
  fullName: Binding.BuildChannelListener<TChannel>(Uri, String, ListenUriMode, Object[])
- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.Channels.Binding
  isExternal: false
  name: BuildChannelListener<TChannel>(Uri, String, ListenUriMode, BindingParameterCollection)
  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, String, ListenUriMode, BindingParameterCollection)
  fullName: Binding.BuildChannelListener<TChannel>(Uri, String, ListenUriMode, BindingParameterCollection)
- uid: System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.Channels.Binding
  isExternal: false
  name: CanBuildChannelFactory<TChannel>(BindingParameterCollection)
  nameWithType: Binding.CanBuildChannelFactory<TChannel>(BindingParameterCollection)
  fullName: Binding.CanBuildChannelFactory<TChannel>(BindingParameterCollection)
- uid: System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])
  parent: System.ServiceModel.Channels.Binding
  isExternal: false
  name: CanBuildChannelFactory<TChannel>(Object[])
  nameWithType: Binding.CanBuildChannelFactory<TChannel>(Object[])
  fullName: Binding.CanBuildChannelFactory<TChannel>(Object[])
- uid: System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])
  parent: System.ServiceModel.Channels.Binding
  isExternal: false
  name: CanBuildChannelListener<TChannel>(Object[])
  nameWithType: Binding.CanBuildChannelListener<TChannel>(Object[])
  fullName: Binding.CanBuildChannelListener<TChannel>(Object[])
- uid: System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.Channels.Binding
  isExternal: false
  name: CanBuildChannelListener<TChannel>(BindingParameterCollection)
  nameWithType: Binding.CanBuildChannelListener<TChannel>(BindingParameterCollection)
  fullName: Binding.CanBuildChannelListener<TChannel>(BindingParameterCollection)
- uid: System.ServiceModel.Channels.Binding.CloseTimeout
  parent: System.ServiceModel.Channels.Binding
  isExternal: false
  name: CloseTimeout
  nameWithType: Binding.CloseTimeout
  fullName: Binding.CloseTimeout
- uid: System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.Channels.Binding
  isExternal: false
  name: GetProperty<T>(BindingParameterCollection)
  nameWithType: Binding.GetProperty<T>(BindingParameterCollection)
  fullName: Binding.GetProperty<T>(BindingParameterCollection)
- uid: System.ServiceModel.Channels.Binding.MessageVersion
  parent: System.ServiceModel.Channels.Binding
  isExternal: false
  name: MessageVersion
  nameWithType: Binding.MessageVersion
  fullName: Binding.MessageVersion
- uid: System.ServiceModel.Channels.Binding.Name
  parent: System.ServiceModel.Channels.Binding
  isExternal: false
  name: Name
  nameWithType: Binding.Name
  fullName: Binding.Name
- uid: System.ServiceModel.Channels.Binding.Namespace
  parent: System.ServiceModel.Channels.Binding
  isExternal: false
  name: Namespace
  nameWithType: Binding.Namespace
  fullName: Binding.Namespace
- uid: System.ServiceModel.Channels.Binding.OpenTimeout
  parent: System.ServiceModel.Channels.Binding
  isExternal: false
  name: OpenTimeout
  nameWithType: Binding.OpenTimeout
  fullName: Binding.OpenTimeout
- uid: System.ServiceModel.Channels.Binding.ReceiveTimeout
  parent: System.ServiceModel.Channels.Binding
  isExternal: false
  name: ReceiveTimeout
  nameWithType: Binding.ReceiveTimeout
  fullName: Binding.ReceiveTimeout
- uid: System.ServiceModel.Channels.Binding.SendTimeout
  parent: System.ServiceModel.Channels.Binding
  isExternal: false
  name: SendTimeout
  nameWithType: Binding.SendTimeout
  fullName: Binding.SendTimeout
- uid: System.ServiceModel.Channels.Binding.ShouldSerializeName
  parent: System.ServiceModel.Channels.Binding
  isExternal: false
  name: ShouldSerializeName()
  nameWithType: Binding.ShouldSerializeName()
  fullName: Binding.ShouldSerializeName()
- uid: System.ServiceModel.Channels.Binding.ShouldSerializeNamespace
  parent: System.ServiceModel.Channels.Binding
  isExternal: false
  name: ShouldSerializeNamespace()
  nameWithType: Binding.ShouldSerializeNamespace()
  fullName: Binding.ShouldSerializeNamespace()
- uid: System.ServiceModel.Channels.IBindingRuntimePreferences
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IBindingRuntimePreferences
  nameWithType: IBindingRuntimePreferences
  fullName: System.ServiceModel.Channels.IBindingRuntimePreferences
