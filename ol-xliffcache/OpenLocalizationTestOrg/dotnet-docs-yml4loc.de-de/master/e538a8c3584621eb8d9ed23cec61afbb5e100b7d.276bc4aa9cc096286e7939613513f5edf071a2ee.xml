{"nodes":[{"content":"Configures the location of a custom implementation of the authentication service.","nodes":[{"pos":[0,81],"content":"Configures the location of a custom implementation of the authentication service.","nodes":[{"content":"Configures the location of a custom implementation of the authentication service.","pos":[0,81]}]}],"pos":[545,627],"yaml":true},{"content":"The <xref:System.Web.UI.AuthenticationServiceManager> class corresponds to the <xref:System.Web.UI.ScriptManager.AuthenticationService%2A> property of the <xref:System.Web.UI.ScriptManager> or <xref:System.Web.UI.ScriptManagerProxy> control.  \n  \n The authentication Web service is used by AJAX-enabled applications to log on and log off from client script. You can use <xref:System.Web.UI.AuthenticationServiceManager> to provide the path of an alternative implementation of the authentication Web service instead of using the built-in Web service that is provided by the AJAX features of ASP.NET.  \n  \n To use the authentication service in your application, you must enable it in the configuration file. If you use the built-in authentication Web service, you do not have to explicitly declare the authentication service manager on the page.  \n  \n To create your own authentication service, you must implement a Web service that has two methods: `Login` and `Logout`. In addition, these methods require the same signature of the built-in authentication Web service.  \n  \n The following example shows the basic class structure that must be implemented in a custom authentication Web service class.  \n  \n  \n  \n To use a custom authentication Web service, you can add the service declaratively in markup by including an `<AuthenticationService>` element inside the `<asp:ScriptManager>` element on the page, as shown in the following example.  \n  \n```  \n<asp:ScriptManager ID=\"SM1\" runat=\"server\">  \n  <AuthenticationService Path=\"MyAuthenticationService.asmx\" />  \n</asp:ScriptManager>  \n```  \n  \n You can also programmatically configure <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> to use a custom authentication Web service.  \n  \n Regardless of whether the declarative section for the authentication service is on the page, if the authentication service is enabled in the configuration file, then AJAX-enabled applications will include an ECMAScript (JavaScript) variable in the rendered page. This allows client script to determine whether the current user is authenticated.","nodes":[{"pos":[0,241],"content":"The <xref:System.Web.UI.AuthenticationServiceManager> class corresponds to the <xref:System.Web.UI.ScriptManager.AuthenticationService%2A> property of the <xref:System.Web.UI.ScriptManager> or <xref:System.Web.UI.ScriptManagerProxy> control.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.AuthenticationServiceManager&gt;</ph> class corresponds to the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager.AuthenticationService%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Web.UI.ScriptManagerProxy&gt;</ph> control.","pos":[0,241],"source":"The <xref:System.Web.UI.AuthenticationServiceManager> class corresponds to the <xref:System.Web.UI.ScriptManager.AuthenticationService%2A> property of the <xref:System.Web.UI.ScriptManager> or <xref:System.Web.UI.ScriptManagerProxy> control."}]},{"pos":[248,598],"content":"The authentication Web service is used by AJAX-enabled applications to log on and log off from client script. You can use <xref:System.Web.UI.AuthenticationServiceManager> to provide the path of an alternative implementation of the authentication Web service instead of using the built-in Web service that is provided by the AJAX features of ASP.NET.","nodes":[{"content":"The authentication Web service is used by AJAX-enabled applications to log on and log off from client script. You can use <xref:System.Web.UI.AuthenticationServiceManager> to provide the path of an alternative implementation of the authentication Web service instead of using the built-in Web service that is provided by the AJAX features of ASP.NET.","pos":[0,350],"nodes":[{"content":"The authentication Web service is used by AJAX-enabled applications to log on and log off from client script.","pos":[0,109]},{"content":"You can use <ph id=\"ph1\">&lt;xref:System.Web.UI.AuthenticationServiceManager&gt;</ph> to provide the path of an alternative implementation of the authentication Web service instead of using the built-in Web service that is provided by the AJAX features of ASP.NET.","pos":[110,350],"source":" You can use <xref:System.Web.UI.AuthenticationServiceManager> to provide the path of an alternative implementation of the authentication Web service instead of using the built-in Web service that is provided by the AJAX features of ASP.NET."}]}]},{"pos":[605,843],"content":"To use the authentication service in your application, you must enable it in the configuration file. If you use the built-in authentication Web service, you do not have to explicitly declare the authentication service manager on the page.","nodes":[{"content":"To use the authentication service in your application, you must enable it in the configuration file. If you use the built-in authentication Web service, you do not have to explicitly declare the authentication service manager on the page.","pos":[0,238],"nodes":[{"content":"To use the authentication service in your application, you must enable it in the configuration file.","pos":[0,100]},{"content":"If you use the built-in authentication Web service, you do not have to explicitly declare the authentication service manager on the page.","pos":[101,238]}]}]},{"pos":[850,1067],"content":"To create your own authentication service, you must implement a Web service that has two methods: `Login` and `Logout`. In addition, these methods require the same signature of the built-in authentication Web service.","nodes":[{"content":"To create your own authentication service, you must implement a Web service that has two methods: <ph id=\"ph1\">`Login`</ph> and <ph id=\"ph2\">`Logout`</ph>.","pos":[0,119],"source":"To create your own authentication service, you must implement a Web service that has two methods: `Login` and `Logout`."},{"content":"In addition, these methods require the same signature of the built-in authentication Web service.","pos":[120,217]}]},{"pos":[1074,1198],"content":"The following example shows the basic class structure that must be implemented in a custom authentication Web service class.","nodes":[{"content":"The following example shows the basic class structure that must be implemented in a custom authentication Web service class.","pos":[0,124]}]},{"pos":[1211,1441],"content":"To use a custom authentication Web service, you can add the service declaratively in markup by including an <ph id=\"ph1\">`&lt;AuthenticationService&gt;`</ph> element inside the <ph id=\"ph2\">`&lt;asp:ScriptManager&gt;`</ph> element on the page, as shown in the following example.","source":"To use a custom authentication Web service, you can add the service declaratively in markup by including an `<AuthenticationService>` element inside the `<asp:ScriptManager>` element on the page, as shown in the following example."},{"pos":[1598,1739],"content":"You can also programmatically configure <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> to use a custom authentication Web service.","nodes":[{"content":"You can also programmatically configure <ph id=\"ph1\">&lt;xref:System.Web.UI.AuthenticationServiceManager.Path%2A&gt;</ph> to use a custom authentication Web service.","pos":[0,141],"source":"You can also programmatically configure <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> to use a custom authentication Web service."}]},{"pos":[1746,2090],"content":"Regardless of whether the declarative section for the authentication service is on the page, if the authentication service is enabled in the configuration file, then AJAX-enabled applications will include an ECMAScript (JavaScript) variable in the rendered page. This allows client script to determine whether the current user is authenticated.","nodes":[{"content":"Regardless of whether the declarative section for the authentication service is on the page, if the authentication service is enabled in the configuration file, then AJAX-enabled applications will include an ECMAScript (JavaScript) variable in the rendered page. This allows client script to determine whether the current user is authenticated.","pos":[0,344],"nodes":[{"content":"Regardless of whether the declarative section for the authentication service is on the page, if the authentication service is enabled in the configuration file, then AJAX-enabled applications will include an ECMAScript (JavaScript) variable in the rendered page.","pos":[0,262]},{"content":"This allows client script to determine whether the current user is authenticated.","pos":[263,344]}]}]}],"pos":[638,2759],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.UI.AuthenticationServiceManager\"></xref> class.","nodes":[{"pos":[0,104],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.AuthenticationServiceManager\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.UI.AuthenticationServiceManager\"></xref> class."}],"pos":[4366,4471],"yaml":true},{"content":"Gets or sets the path of the authentication service.","nodes":[{"pos":[0,52],"content":"Gets or sets the path of the authentication service.","nodes":[{"content":"Gets or sets the path of the authentication service.","pos":[0,52]}]}],"pos":[5561,5614],"yaml":true},{"content":"If the <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> property is not set, then the return value is <xref:System.String?displayProperty=fullName>. In this case, the AJAX functionality in ASP.NET will then use the built-in authentication Web service that corresponds to the following internal default path: ~/ScriptServices_AuthenticationService.asmx. The same behavior occurs if you set <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> to an empty value or `null`.  \n  \n <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control. When <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> is set at the <xref:System.Web.UI.ScriptManagerProxy> level, the following caveats apply:  \n  \n-   If there are multiple proxies in the control hierarchy, <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> does not have to be set on each proxy instance.  \n  \n-   If <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> is explicitly set on a proxy instance, the value must be the same for all other proxies on which this property is explicitly set.","nodes":[{"pos":[0,484],"content":"If the <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> property is not set, then the return value is <xref:System.String?displayProperty=fullName>. In this case, the AJAX functionality in ASP.NET will then use the built-in authentication Web service that corresponds to the following internal default path: ~/ScriptServices_AuthenticationService.asmx. The same behavior occurs if you set <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> to an empty value or `null`.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Web.UI.AuthenticationServiceManager.Path%2A&gt;</ph> property is not set, then the return value is <ph id=\"ph2\">&lt;xref:System.String?displayProperty=fullName&gt;</ph>.","pos":[0,157],"source":"If the <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> property is not set, then the return value is <xref:System.String?displayProperty=fullName>."},{"content":"In this case, the AJAX functionality in ASP.NET will then use the built-in authentication Web service that corresponds to the following internal default path: ~/ScriptServices_AuthenticationService.asmx.","pos":[158,361]},{"content":"The same behavior occurs if you set <ph id=\"ph1\">&lt;xref:System.Web.UI.AuthenticationServiceManager.Path%2A&gt;</ph> to an empty value or <ph id=\"ph2\">`null`</ph>.","pos":[362,484],"source":" The same behavior occurs if you set <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> to an empty value or `null`."}]},{"pos":[491,837],"content":"<xref:System.Web.UI.AuthenticationServiceManager.Path%2A> can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control. When <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> is set at the <xref:System.Web.UI.ScriptManagerProxy> level, the following caveats apply:","nodes":[{"content":"<xref:System.Web.UI.AuthenticationServiceManager.Path%2A> can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control. When <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> is set at the <xref:System.Web.UI.ScriptManagerProxy> level, the following caveats apply:","pos":[0,346],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.UI.AuthenticationServiceManager.Path%2A&gt;</ph> can be specified in the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control or in an associated <ph id=\"ph3\">&lt;xref:System.Web.UI.ScriptManagerProxy&gt;</ph> control.","pos":[0,193],"source":"<xref:System.Web.UI.AuthenticationServiceManager.Path%2A> can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control."},{"content":"When <ph id=\"ph1\">&lt;xref:System.Web.UI.AuthenticationServiceManager.Path%2A&gt;</ph> is set at the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManagerProxy&gt;</ph> level, the following caveats apply:","pos":[194,346],"source":" When <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> is set at the <xref:System.Web.UI.ScriptManagerProxy> level, the following caveats apply:"}]}]},{"pos":[847,1008],"content":"If there are multiple proxies in the control hierarchy, <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> does not have to be set on each proxy instance.","nodes":[{"content":"If there are multiple proxies in the control hierarchy, <ph id=\"ph1\">&lt;xref:System.Web.UI.AuthenticationServiceManager.Path%2A&gt;</ph> does not have to be set on each proxy instance.","pos":[0,161],"source":"If there are multiple proxies in the control hierarchy, <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> does not have to be set on each proxy instance."}]},{"pos":[1018,1208],"content":"If <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> is explicitly set on a proxy instance, the value must be the same for all other proxies on which this property is explicitly set.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Web.UI.AuthenticationServiceManager.Path%2A&gt;</ph> is explicitly set on a proxy instance, the value must be the same for all other proxies on which this property is explicitly set.","pos":[0,190],"source":"If <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> is explicitly set on a proxy instance, the value must be the same for all other proxies on which this property is explicitly set."}]}],"pos":[5625,6842],"yaml":true,"extradata":"MT"},{"content":"The path of the custom authentication Web service.","nodes":[{"pos":[0,50],"content":"The path of the custom authentication Web service.","nodes":[{"content":"The path of the custom authentication Web service.","pos":[0,50]}]}],"pos":[6955,7006],"yaml":true},{"content":"More than one unique path was set in the control hierarchy.","nodes":[{"pos":[0,59],"content":"More than one unique path was set in the control hierarchy.","nodes":[{"content":"More than one unique path was set in the control hierarchy.","pos":[0,59]}]}],"pos":[7175,7235],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.AuthenticationServiceManager\n  commentId: T:System.Web.UI.AuthenticationServiceManager\n  id: AuthenticationServiceManager\n  children:\n  - System.Web.UI.AuthenticationServiceManager.#ctor\n  - System.Web.UI.AuthenticationServiceManager.Path\n  langs:\n  - csharp\n  name: AuthenticationServiceManager\n  nameWithType: AuthenticationServiceManager\n  fullName: System.Web.UI.AuthenticationServiceManager\n  type: Class\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Configures the location of a custom implementation of the authentication service.\n  remarks: \"The <xref:System.Web.UI.AuthenticationServiceManager> class corresponds to the <xref:System.Web.UI.ScriptManager.AuthenticationService%2A> property of the <xref:System.Web.UI.ScriptManager> or <xref:System.Web.UI.ScriptManagerProxy> control.  \\n  \\n The authentication Web service is used by AJAX-enabled applications to log on and log off from client script. You can use <xref:System.Web.UI.AuthenticationServiceManager> to provide the path of an alternative implementation of the authentication Web service instead of using the built-in Web service that is provided by the AJAX features of ASP.NET.  \\n  \\n To use the authentication service in your application, you must enable it in the configuration file. If you use the built-in authentication Web service, you do not have to explicitly declare the authentication service manager on the page.  \\n  \\n To create your own authentication service, you must implement a Web service that has two methods: `Login` and `Logout`. In addition, these methods require the same signature of the built-in authentication Web service.  \\n  \\n The following example shows the basic class structure that must be implemented in a custom authentication Web service class.  \\n  \\n  \\n  \\n To use a custom authentication Web service, you can add the service declaratively in markup by including an `<AuthenticationService>` element inside the `<asp:ScriptManager>` element on the page, as shown in the following example.  \\n  \\n```  \\n<asp:ScriptManager ID=\\\"SM1\\\" runat=\\\"server\\\">  \\n  <AuthenticationService Path=\\\"MyAuthenticationService.asmx\\\" />  \\n</asp:ScriptManager>  \\n```  \\n  \\n You can also programmatically configure <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> to use a custom authentication Web service.  \\n  \\n Regardless of whether the declarative section for the authentication service is on the page, if the authentication service is enabled in the configuration file, then AJAX-enabled applications will include an ECMAScript (JavaScript) variable in the rendered page. This allows client script to determine whether the current user is authenticated.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))]\n\n      public class AuthenticationServiceManager\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/AuthenticationServiceManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.AuthenticationServiceManager.#ctor\n  commentId: M:System.Web.UI.AuthenticationServiceManager.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.AuthenticationServiceManager\n  langs:\n  - csharp\n  name: AuthenticationServiceManager()\n  nameWithType: AuthenticationServiceManager.AuthenticationServiceManager()\n  fullName: AuthenticationServiceManager.AuthenticationServiceManager()\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.AuthenticationServiceManager\"></xref> class.\n  syntax:\n    content: public AuthenticationServiceManager ();\n    parameters: []\n  overload: System.Web.UI.AuthenticationServiceManager.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/AuthenticationServiceManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.AuthenticationServiceManager.Path\n  commentId: P:System.Web.UI.AuthenticationServiceManager.Path\n  id: Path\n  parent: System.Web.UI.AuthenticationServiceManager\n  langs:\n  - csharp\n  name: Path\n  nameWithType: AuthenticationServiceManager.Path\n  fullName: AuthenticationServiceManager.Path\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets the path of the authentication service.\n  remarks: \"If the <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> property is not set, then the return value is <xref:System.String?displayProperty=fullName>. In this case, the AJAX functionality in ASP.NET will then use the built-in authentication Web service that corresponds to the following internal default path: ~/ScriptServices_AuthenticationService.asmx. The same behavior occurs if you set <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> to an empty value or `null`.  \\n  \\n <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> can be specified in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control. When <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> is set at the <xref:System.Web.UI.ScriptManagerProxy> level, the following caveats apply:  \\n  \\n-   If there are multiple proxies in the control hierarchy, <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> does not have to be set on each proxy instance.  \\n  \\n-   If <xref:System.Web.UI.AuthenticationServiceManager.Path%2A> is explicitly set on a proxy instance, the value must be the same for all other proxies on which this property is explicitly set.\"\n  syntax:\n    content: public string Path { get; set; }\n    return:\n      type: System.String\n      description: The path of the custom authentication Web service.\n  overload: System.Web.UI.AuthenticationServiceManager.Path*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: More than one unique path was set in the control hierarchy.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/AuthenticationServiceManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Web.UI.AuthenticationServiceManager.#ctor\n  parent: System.Web.UI.AuthenticationServiceManager\n  isExternal: false\n  name: AuthenticationServiceManager()\n  nameWithType: AuthenticationServiceManager.AuthenticationServiceManager()\n  fullName: AuthenticationServiceManager.AuthenticationServiceManager()\n- uid: System.Web.UI.AuthenticationServiceManager.Path\n  parent: System.Web.UI.AuthenticationServiceManager\n  isExternal: false\n  name: Path\n  nameWithType: AuthenticationServiceManager.Path\n  fullName: AuthenticationServiceManager.Path\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.AuthenticationServiceManager.#ctor*\n  parent: System.Web.UI.AuthenticationServiceManager\n  isExternal: false\n  name: AuthenticationServiceManager\n  nameWithType: AuthenticationServiceManager.AuthenticationServiceManager\n  fullName: AuthenticationServiceManager.AuthenticationServiceManager\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/AuthenticationServiceManager.xml\n- uid: System.Web.UI.AuthenticationServiceManager.Path*\n  parent: System.Web.UI.AuthenticationServiceManager\n  isExternal: false\n  name: Path\n  nameWithType: AuthenticationServiceManager.Path\n  fullName: AuthenticationServiceManager.Path\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/AuthenticationServiceManager.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}