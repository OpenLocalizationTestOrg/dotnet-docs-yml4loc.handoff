{"nodes":[{"content":"Represents a generic list of types that are defined by a contract and are used to pass collections of that contract type between a host and an add-in.","nodes":[{"pos":[0,150],"content":"Represents a generic list of types that are defined by a contract and are used to pass collections of that contract type between a host and an add-in.","nodes":[{"content":"Represents a generic list of types that are defined by a contract and are used to pass collections of that contract type between a host and an add-in.","pos":[0,150]}]}],"pos":[1094,1245],"yaml":true},{"content":"The <xref:System.AddIn.Pipeline.CollectionAdapters> class uses an <xref:System.AddIn.Contract.IListContract%601> interface to pass collections, in both directions, between the host and the add-in. It is recommended that you use the <xref:System.AddIn.Pipeline.CollectionAdapters> class instead of using this class directly in your code. For an example, see [Walkthrough: Passing Collections Between Hosts and Add-Ins](http://msdn.microsoft.com/en-us/b532c604-548e-4fab-b11c-377257dd0ee5).  \n  \n This class can be used to pass objects by reference between application domains because the objects are not serialized.","nodes":[{"pos":[0,488],"content":"The <xref:System.AddIn.Pipeline.CollectionAdapters> class uses an <xref:System.AddIn.Contract.IListContract%601> interface to pass collections, in both directions, between the host and the add-in. It is recommended that you use the <xref:System.AddIn.Pipeline.CollectionAdapters> class instead of using this class directly in your code. For an example, see [Walkthrough: Passing Collections Between Hosts and Add-Ins](http://msdn.microsoft.com/en-us/b532c604-548e-4fab-b11c-377257dd0ee5).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.AddIn.Pipeline.CollectionAdapters&gt;</ph> class uses an <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> interface to pass collections, in both directions, between the host and the add-in.","pos":[0,196],"source":"The <xref:System.AddIn.Pipeline.CollectionAdapters> class uses an <xref:System.AddIn.Contract.IListContract%601> interface to pass collections, in both directions, between the host and the add-in."},{"content":"It is recommended that you use the <ph id=\"ph1\">&lt;xref:System.AddIn.Pipeline.CollectionAdapters&gt;</ph> class instead of using this class directly in your code.","pos":[197,336],"source":" It is recommended that you use the <xref:System.AddIn.Pipeline.CollectionAdapters> class instead of using this class directly in your code."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>Walkthrough: Passing Collections Between Hosts and Add-Ins<ept id=\"p1\">](http://msdn.microsoft.com/en-us/b532c604-548e-4fab-b11c-377257dd0ee5)</ept>.","pos":[337,488],"source":" For an example, see [Walkthrough: Passing Collections Between Hosts and Add-Ins](http://msdn.microsoft.com/en-us/b532c604-548e-4fab-b11c-377257dd0ee5)."}]},{"pos":[495,614],"content":"This class can be used to pass objects by reference between application domains because the objects are not serialized.","nodes":[{"content":"This class can be used to pass objects by reference between application domains because the objects are not serialized.","pos":[0,119]}]}],"pos":[1256,1875],"yaml":true,"extradata":"MT"},{"content":"The contract type of the objects in the list.","nodes":[{"pos":[0,45],"content":"The contract type of the objects in the list.","nodes":[{"content":"The contract type of the objects in the list.","pos":[0,45]}]}],"pos":[2019,2065],"yaml":true},{"content":"Adds an object to an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection.","nodes":[{"pos":[0,91],"content":"Adds an object to an <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IListContract`1\"&gt;&lt;/xref&gt;</ph> collection.","source":"Adds an object to an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection."}],"pos":[3041,3133],"yaml":true},{"content":"The `item` parameter must be of a type that is defined by the contract.","nodes":[{"pos":[0,71],"content":"The <ph id=\"ph1\">`item`</ph> parameter must be of a type that is defined by the contract.","source":"The `item` parameter must be of a type that is defined by the contract."}],"pos":[3144,3216],"yaml":true,"extradata":"MT"},{"content":"The object to add.","nodes":[{"pos":[0,18],"content":"The object to add.","nodes":[{"content":"The object to add.","pos":[0,18]}]}],"pos":[3329,3348],"yaml":true},{"content":"Removes all objects from an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection.","nodes":[{"pos":[0,98],"content":"Removes all objects from an <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IListContract`1\"&gt;&lt;/xref&gt;</ph> collection.","source":"Removes all objects from an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection."}],"pos":[4343,4442],"yaml":true},{"content":"Determines whether a specific item is in an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection.","nodes":[{"pos":[0,114],"content":"Determines whether a specific item is in an <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IListContract`1\"&gt;&lt;/xref&gt;</ph> collection.","source":"Determines whether a specific item is in an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection."}],"pos":[5536,5651],"yaml":true},{"content":"The object to look for in the collection.","nodes":[{"pos":[0,41],"content":"The object to look for in the collection.","nodes":[{"content":"The object to look for in the collection.","pos":[0,41]}]}],"pos":[5769,5811],"yaml":true},{"content":"`true` if <code>item</code> is in the collection; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">item</ph><ept id=\"p1\">&lt;/code&gt;</ept> is in the collection; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>item</code> is in the collection; otherwise, `false`."}],"pos":[5869,5941],"yaml":true},{"content":"Gets the number of items in an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection.","nodes":[{"pos":[0,101],"content":"Gets the number of items in an <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IListContract`1\"&gt;&lt;/xref&gt;</ph> collection.","source":"Gets the number of items in an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection."}],"pos":[6959,7061],"yaml":true},{"content":"The number of items in the collection.","nodes":[{"pos":[0,38],"content":"The number of items in the collection.","nodes":[{"content":"The number of items in the collection.","pos":[0,38]}]}],"pos":[7183,7222],"yaml":true},{"content":"Returns an enumerator that iterates through an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection.","nodes":[{"pos":[0,117],"content":"Returns an enumerator that iterates through an <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IListContract`1\"&gt;&lt;/xref&gt;</ph> collection.","source":"Returns an enumerator that iterates through an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection."}],"pos":[8318,8436],"yaml":true},{"content":"An <xref href=\"System.AddIn.Contract.IEnumeratorContract`1\"></xref> enumerator to iterate through the collection.","nodes":[{"pos":[0,113],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IEnumeratorContract`1\"&gt;&lt;/xref&gt;</ph> enumerator to iterate through the collection.","source":"An <xref href=\"System.AddIn.Contract.IEnumeratorContract`1\"></xref> enumerator to iterate through the collection."}],"pos":[8643,8757],"yaml":true},{"content":"Determines whether an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection is read-only.","nodes":[{"pos":[0,105],"content":"Determines whether an <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IListContract`1\"&gt;&lt;/xref&gt;</ph> collection is read-only.","source":"Determines whether an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection is read-only."}],"pos":[9818,9924],"yaml":true},{"content":"`true` if the collection is read-only; otherwise, `false`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">`true`</ph> if the collection is read-only; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the collection is read-only; otherwise, `false`."}],"pos":[10054,10115],"yaml":true},{"content":"Returns the item at the specified index of an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection.","nodes":[{"pos":[0,116],"content":"Returns the item at the specified index of an <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IListContract`1\"&gt;&lt;/xref&gt;</ph> collection.","source":"Returns the item at the specified index of an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection."}],"pos":[11189,11306],"yaml":true},{"content":"The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index. To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method.","nodes":[{"pos":[0,278],"content":"The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index. To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method.","nodes":[{"content":"The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index. To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method.","pos":[0,278],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IListContract%601.GetItem%2A&gt;</ph> method does not remove the item at the specified index.","pos":[0,117],"source":"The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index."},{"content":"To remove an item from the <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> collection, use the <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A&gt;</ph> method.","pos":[118,278],"source":" To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method."}]}]}],"pos":[11317,11596],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the item to get.","nodes":[{"pos":[0,40],"content":"The zero-based index of the item to get.","nodes":[{"content":"The zero-based index of the item to get.","pos":[0,40]}]}],"pos":[11725,11766],"yaml":true},{"content":"The item at the specified index.","nodes":[{"pos":[0,32],"content":"The item at the specified index.","nodes":[{"content":"The item at the specified index.","pos":[0,32]}]}],"pos":[11811,11844],"yaml":true},{"content":"<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than the return value of <xref href=\"System.AddIn.Contract.IListContract`1.GetCount\"></xref>.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."},{"pos":[44,48],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[55,190],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than the return value of <ph id=\"ph2\">&lt;xref href=\"System.AddIn.Contract.IListContract`1.GetCount\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is equal to or greater than the return value of <xref href=\"System.AddIn.Contract.IListContract`1.GetCount\"></xref>."}],"pos":[12025,12224],"yaml":true},{"content":"Returns the index of a specific item in an <xref href=\"System.AddIn.Contract.Collections.IListContract`1\"></xref> collection.","nodes":[{"pos":[0,125],"content":"Returns the index of a specific item in an <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.Collections.IListContract`1\"&gt;&lt;/xref&gt;</ph> collection.","source":"Returns the index of a specific item in an <xref href=\"System.AddIn.Contract.Collections.IListContract`1\"></xref> collection."}],"pos":[13174,13300],"yaml":true},{"content":"If there are several objects of the same type in the collection, this method identifies the index of the item that is the first occurrence of the specified type in the collection.  \n  \n The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index. To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method.","nodes":[{"pos":[0,179],"content":"If there are several objects of the same type in the collection, this method identifies the index of the item that is the first occurrence of the specified type in the collection.","nodes":[{"content":"If there are several objects of the same type in the collection, this method identifies the index of the item that is the first occurrence of the specified type in the collection.","pos":[0,179]}]},{"pos":[186,464],"content":"The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index. To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method.","nodes":[{"content":"The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index. To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method.","pos":[0,278],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IListContract%601.GetItem%2A&gt;</ph> method does not remove the item at the specified index.","pos":[0,117],"source":"The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index."},{"content":"To remove an item from the <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> collection, use the <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A&gt;</ph> method.","pos":[118,278],"source":" To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method."}]}]}],"pos":[13311,13780],"yaml":true,"extradata":"MT"},{"content":"An item in the collection.","nodes":[{"pos":[0,26],"content":"An item in the collection.","nodes":[{"content":"An item in the collection.","pos":[0,26]}]}],"pos":[13896,13923],"yaml":true},{"content":"The index of the specified item.","nodes":[{"pos":[0,32],"content":"The index of the specified item.","nodes":[{"content":"The index of the specified item.","pos":[0,32]}]}],"pos":[13979,14012],"yaml":true},{"content":"<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than the return value of the <xref href=\"System.AddIn.Contract.IListContract`1.GetCount\"></xref> method.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."},{"pos":[44,48],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[55,201],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than the return value of the <ph id=\"ph2\">&lt;xref href=\"System.AddIn.Contract.IListContract`1.GetCount\"&gt;&lt;/xref&gt;</ph> method.","source":"<code>index</code> is equal to or greater than the return value of the <xref href=\"System.AddIn.Contract.IListContract`1.GetCount\"></xref> method."}],"pos":[14193,14403],"yaml":true},{"content":"Inserts an item at the specified index in an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection.","nodes":[{"pos":[0,115],"content":"Inserts an item at the specified index in an <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IListContract`1\"&gt;&lt;/xref&gt;</ph> collection.","source":"Inserts an item at the specified index in an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection."}],"pos":[15407,15523],"yaml":true},{"content":"After you call the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method, the items that follow the insertion point move to accommodate the new item. The indexes of the items that are moved are also updated. To replace an item at a specified index, use the <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method.  \n  \n To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.","nodes":[{"pos":[0,332],"content":"After you call the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method, the items that follow the insertion point move to accommodate the new item. The indexes of the items that are moved are also updated. To replace an item at a specified index, use the <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method.","nodes":[{"content":"After you call the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method, the items that follow the insertion point move to accommodate the new item. The indexes of the items that are moved are also updated. To replace an item at a specified index, use the <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method.","pos":[0,332],"nodes":[{"content":"After you call the <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IListContract%601.Insert%2A&gt;</ph> method, the items that follow the insertion point move to accommodate the new item.","pos":[0,159],"source":"After you call the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method, the items that follow the insertion point move to accommodate the new item."},{"content":"The indexes of the items that are moved are also updated.","pos":[160,217]},{"content":"To replace an item at a specified index, use the <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IListContract%601.SetItem%2A&gt;</ph> method.","pos":[218,332],"source":" To replace an item at a specified index, use the <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method."}]}]},{"pos":[339,515],"content":"To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.","nodes":[{"content":"To determine whether an <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> collection is read-only, call the <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A&gt;</ph> method.","pos":[0,176],"source":"To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method."}]}],"pos":[15534,16054],"yaml":true,"extradata":"MT"},{"content":"The zero-based index at which to insert <code>item</code>.","nodes":[{"pos":[0,58],"content":"The zero-based index at which to insert <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">item</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The zero-based index at which to insert <code>item</code>."}],"pos":[16193,16252],"yaml":true},{"content":"The <xref href=\"System.AddIn.Contract.IContract\"></xref> object to insert in the <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection.","nodes":[{"pos":[0,151],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IContract\"&gt;&lt;/xref&gt;</ph> object to insert in the <ph id=\"ph2\">&lt;xref href=\"System.AddIn.Contract.IListContract`1\"&gt;&lt;/xref&gt;</ph> collection.","source":"The <xref href=\"System.AddIn.Contract.IContract\"></xref> object to insert in the <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection."}],"pos":[16300,16452],"yaml":true},{"content":"<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than the return value of <xref href=\"System.AddIn.Contract.IListContract`1.GetCount\"></xref>.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."},{"pos":[44,48],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[55,190],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than the return value of <ph id=\"ph2\">&lt;xref href=\"System.AddIn.Contract.IListContract`1.GetCount\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is equal to or greater than the return value of <xref href=\"System.AddIn.Contract.IListContract`1.GetCount\"></xref>."}],"pos":[16632,16831],"yaml":true},{"content":"The <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection is read-only.","nodes":[{"pos":[0,87],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IListContract`1\"&gt;&lt;/xref&gt;</ph> collection is read-only.","source":"The <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection is read-only."}],"pos":[16933,17021],"yaml":true},{"content":"Removes an item from an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection of a specified type.","nodes":[{"pos":[0,114],"content":"Removes an item from an <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IListContract`1\"&gt;&lt;/xref&gt;</ph> collection of a specified type.","source":"Removes an item from an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection of a specified type."}],"pos":[17965,18080],"yaml":true},{"content":"You must repeat this method for each object of a particular type in the collection.","nodes":[{"pos":[0,83],"content":"You must repeat this method for each object of a particular type in the collection.","nodes":[{"content":"You must repeat this method for each object of a particular type in the collection.","pos":[0,83]}]}],"pos":[18091,18175],"yaml":true,"extradata":"MT"},{"content":"The item to remove from the collection.","nodes":[{"pos":[0,39],"content":"The item to remove from the collection.","nodes":[{"content":"The item to remove from the collection.","pos":[0,39]}]}],"pos":[18291,18331],"yaml":true},{"content":"`true` if an item is removed; otherwise, `false`.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">`true`</ph> if an item is removed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if an item is removed; otherwise, `false`."}],"pos":[18389,18441],"yaml":true},{"content":"Removes the item at the specified index in an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection.","nodes":[{"pos":[0,116],"content":"Removes the item at the specified index in an <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IListContract`1\"&gt;&lt;/xref&gt;</ph> collection.","source":"Removes the item at the specified index in an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection."}],"pos":[19514,19631],"yaml":true},{"content":"After you call <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A>, the items that follow the removed item move to occupy the vacated spot. The indexes of the items that are moved are also updated.  \n  \n To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.","nodes":[{"pos":[0,204],"content":"After you call <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A>, the items that follow the removed item move to occupy the vacated spot. The indexes of the items that are moved are also updated.","nodes":[{"content":"After you call <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A>, the items that follow the removed item move to occupy the vacated spot. The indexes of the items that are moved are also updated.","pos":[0,204],"nodes":[{"content":"After you call <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A&gt;</ph>, the items that follow the removed item move to occupy the vacated spot.","pos":[0,146],"source":"After you call <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A>, the items that follow the removed item move to occupy the vacated spot."},{"content":"The indexes of the items that are moved are also updated.","pos":[147,204]}]}]},{"pos":[211,387],"content":"To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.","nodes":[{"content":"To determine whether an <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> collection is read-only, call the <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A&gt;</ph> method.","pos":[0,176],"source":"To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method."}]}],"pos":[19642,20034],"yaml":true,"extradata":"MT"},{"content":"The index of the item to remove.","nodes":[{"pos":[0,32],"content":"The index of the item to remove.","nodes":[{"content":"The index of the item to remove.","pos":[0,32]}]}],"pos":[20167,20200],"yaml":true},{"content":"<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than the return value of the <xref href=\"System.AddIn.Contract.IListContract`1.GetCount\"></xref> method.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."},{"pos":[44,48],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[55,201],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than the return value of the <ph id=\"ph2\">&lt;xref href=\"System.AddIn.Contract.IListContract`1.GetCount\"&gt;&lt;/xref&gt;</ph> method.","source":"<code>index</code> is equal to or greater than the return value of the <xref href=\"System.AddIn.Contract.IListContract`1.GetCount\"></xref> method."}],"pos":[20382,20592],"yaml":true},{"content":"The <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection is read-only.","nodes":[{"pos":[0,87],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IListContract`1\"&gt;&lt;/xref&gt;</ph> collection is read-only.","source":"The <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection is read-only."}],"pos":[20694,20782],"yaml":true},{"content":"Sets the item at the specified index in an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection.","nodes":[{"pos":[0,113],"content":"Sets the item at the specified index in an <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IListContract`1\"&gt;&lt;/xref&gt;</ph> collection.","source":"Sets the item at the specified index in an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection."}],"pos":[21792,21906],"yaml":true},{"content":"The <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method sets the item at the specified index. To add an item to the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method.  \n  \n To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.","nodes":[{"pos":[0,260],"content":"The <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method sets the item at the specified index. To add an item to the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method.","nodes":[{"content":"The <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method sets the item at the specified index. To add an item to the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method.","pos":[0,260],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IListContract%601.SetItem%2A&gt;</ph> method sets the item at the specified index.","pos":[0,106],"source":"The <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method sets the item at the specified index."},{"content":"To add an item to the <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> collection, use the <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.IListContract%601.Insert%2A&gt;</ph> method.","pos":[107,260],"source":" To add an item to the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method."}]}]},{"pos":[267,443],"content":"To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.","nodes":[{"content":"To determine whether an <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> collection is read-only, call the <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A&gt;</ph> method.","pos":[0,176],"source":"To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method."}]}],"pos":[21917,22365],"yaml":true,"extradata":"MT"},{"content":"The zero-based index at which to set the item.","nodes":[{"pos":[0,46],"content":"The zero-based index at which to set the item.","nodes":[{"content":"The zero-based index at which to set the item.","pos":[0,46]}]}],"pos":[22505,22552],"yaml":true},{"content":"The item to set at the specified index.","nodes":[{"pos":[0,39],"content":"The item to set at the specified index.","nodes":[{"content":"The item to set at the specified index.","pos":[0,39]}]}],"pos":[22600,22640],"yaml":true},{"content":"<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than the return value of the <xref href=\"System.AddIn.Contract.IListContract`1.GetCount\"></xref> method.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."},{"pos":[44,48],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[55,201],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than the return value of the <ph id=\"ph2\">&lt;xref href=\"System.AddIn.Contract.IListContract`1.GetCount\"&gt;&lt;/xref&gt;</ph> method.","source":"<code>index</code> is equal to or greater than the return value of the <xref href=\"System.AddIn.Contract.IListContract`1.GetCount\"></xref> method."}],"pos":[22821,23031],"yaml":true},{"content":"The <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection is read-only.","nodes":[{"pos":[0,87],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IListContract`1\"&gt;&lt;/xref&gt;</ph> collection is read-only.","source":"The <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection is read-only."}],"pos":[23133,23221],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AddIn.Contract.IListContract`1\n  commentId: T:System.AddIn.Contract.IListContract`1\n  id: IListContract`1\n  children:\n  - System.AddIn.Contract.IListContract`1.Add(`0)\n  - System.AddIn.Contract.IListContract`1.Clear\n  - System.AddIn.Contract.IListContract`1.Contains(`0)\n  - System.AddIn.Contract.IListContract`1.GetCount\n  - System.AddIn.Contract.IListContract`1.GetEnumeratorContract\n  - System.AddIn.Contract.IListContract`1.GetIsReadOnly\n  - System.AddIn.Contract.IListContract`1.GetItem(System.Int32)\n  - System.AddIn.Contract.IListContract`1.IndexOf(`0)\n  - System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)\n  - System.AddIn.Contract.IListContract`1.Remove(`0)\n  - System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)\n  - System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)\n  langs:\n  - csharp\n  name: IListContract<T>\n  nameWithType: IListContract<T>\n  fullName: System.AddIn.Contract.IListContract<T>\n  type: Interface\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  summary: Represents a generic list of types that are defined by a contract and are used to pass collections of that contract type between a host and an add-in.\n  remarks: \"The <xref:System.AddIn.Pipeline.CollectionAdapters> class uses an <xref:System.AddIn.Contract.IListContract%601> interface to pass collections, in both directions, between the host and the add-in. It is recommended that you use the <xref:System.AddIn.Pipeline.CollectionAdapters> class instead of using this class directly in your code. For an example, see [Walkthrough: Passing Collections Between Hosts and Add-Ins](http://msdn.microsoft.com/en-us/b532c604-548e-4fab-b11c-377257dd0ee5).  \\n  \\n This class can be used to pass objects by reference between application domains because the objects are not serialized.\"\n  syntax:\n    content: 'public interface IListContract<T> : System.AddIn.Contract.IContract'\n    typeParameters:\n    - id: T\n      description: The contract type of the objects in the list.\n  implements:\n  - System.AddIn.Contract.IContract\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.IListContract`1.Add(`0)\n  commentId: M:System.AddIn.Contract.IListContract`1.Add(`0)\n  id: Add(`0)\n  parent: System.AddIn.Contract.IListContract`1\n  langs:\n  - csharp\n  name: Add(T)\n  nameWithType: IListContract<T>.Add(T)\n  fullName: IListContract<T>.Add(T)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  summary: Adds an object to an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection.\n  remarks: The `item` parameter must be of a type that is defined by the contract.\n  syntax:\n    content: public void Add (T item);\n    parameters:\n    - id: item\n      type: T\n      description: The object to add.\n  overload: System.AddIn.Contract.IListContract`1.Add*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.IListContract`1.Clear\n  commentId: M:System.AddIn.Contract.IListContract`1.Clear\n  id: Clear\n  parent: System.AddIn.Contract.IListContract`1\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: IListContract<T>.Clear()\n  fullName: IListContract<T>.Clear()\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  summary: Removes all objects from an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection.\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.AddIn.Contract.IListContract`1.Clear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.IListContract`1.Contains(`0)\n  commentId: M:System.AddIn.Contract.IListContract`1.Contains(`0)\n  id: Contains(`0)\n  parent: System.AddIn.Contract.IListContract`1\n  langs:\n  - csharp\n  name: Contains(T)\n  nameWithType: IListContract<T>.Contains(T)\n  fullName: IListContract<T>.Contains(T)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  summary: Determines whether a specific item is in an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection.\n  syntax:\n    content: public bool Contains (T item);\n    parameters:\n    - id: item\n      type: T\n      description: The object to look for in the collection.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>item</code> is in the collection; otherwise, `false`.'\n  overload: System.AddIn.Contract.IListContract`1.Contains*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.IListContract`1.GetCount\n  commentId: M:System.AddIn.Contract.IListContract`1.GetCount\n  id: GetCount\n  parent: System.AddIn.Contract.IListContract`1\n  langs:\n  - csharp\n  name: GetCount()\n  nameWithType: IListContract<T>.GetCount()\n  fullName: IListContract<T>.GetCount()\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  summary: Gets the number of items in an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection.\n  syntax:\n    content: public int GetCount ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The number of items in the collection.\n  overload: System.AddIn.Contract.IListContract`1.GetCount*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.IListContract`1.GetEnumeratorContract\n  commentId: M:System.AddIn.Contract.IListContract`1.GetEnumeratorContract\n  id: GetEnumeratorContract\n  parent: System.AddIn.Contract.IListContract`1\n  langs:\n  - csharp\n  name: GetEnumeratorContract()\n  nameWithType: IListContract<T>.GetEnumeratorContract()\n  fullName: IListContract<T>.GetEnumeratorContract()\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  summary: Returns an enumerator that iterates through an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection.\n  syntax:\n    content: public System.AddIn.Contract.IEnumeratorContract<T> GetEnumeratorContract ();\n    parameters: []\n    return:\n      type: System.AddIn.Contract.IEnumeratorContract`1\n      description: An <xref href=\"System.AddIn.Contract.IEnumeratorContract`1\"></xref> enumerator to iterate through the collection.\n  overload: System.AddIn.Contract.IListContract`1.GetEnumeratorContract*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.IListContract`1.GetIsReadOnly\n  commentId: M:System.AddIn.Contract.IListContract`1.GetIsReadOnly\n  id: GetIsReadOnly\n  parent: System.AddIn.Contract.IListContract`1\n  langs:\n  - csharp\n  name: GetIsReadOnly()\n  nameWithType: IListContract<T>.GetIsReadOnly()\n  fullName: IListContract<T>.GetIsReadOnly()\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  summary: Determines whether an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection is read-only.\n  syntax:\n    content: public bool GetIsReadOnly ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the collection is read-only; otherwise, `false`.'\n  overload: System.AddIn.Contract.IListContract`1.GetIsReadOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.IListContract`1.GetItem(System.Int32)\n  commentId: M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)\n  id: GetItem(System.Int32)\n  parent: System.AddIn.Contract.IListContract`1\n  langs:\n  - csharp\n  name: GetItem(Int32)\n  nameWithType: IListContract<T>.GetItem(Int32)\n  fullName: IListContract<T>.GetItem(Int32)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  summary: Returns the item at the specified index of an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection.\n  remarks: The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index. To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method.\n  syntax:\n    content: public T GetItem (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the item to get.\n    return:\n      type: T\n      description: The item at the specified index.\n  overload: System.AddIn.Contract.IListContract`1.GetItem*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"<code>index</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>index</code> is equal to or greater than the return value of <xref href=\\\"System.AddIn.Contract.IListContract`1.GetCount\\\"></xref>.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.IListContract`1.IndexOf(`0)\n  commentId: M:System.AddIn.Contract.IListContract`1.IndexOf(`0)\n  id: IndexOf(`0)\n  parent: System.AddIn.Contract.IListContract`1\n  langs:\n  - csharp\n  name: IndexOf(T)\n  nameWithType: IListContract<T>.IndexOf(T)\n  fullName: IListContract<T>.IndexOf(T)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  summary: Returns the index of a specific item in an <xref href=\"System.AddIn.Contract.Collections.IListContract`1\"></xref> collection.\n  remarks: \"If there are several objects of the same type in the collection, this method identifies the index of the item that is the first occurrence of the specified type in the collection.  \\n  \\n The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index. To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method.\"\n  syntax:\n    content: public int IndexOf (T item);\n    parameters:\n    - id: item\n      type: T\n      description: An item in the collection.\n    return:\n      type: System.Int32\n      description: The index of the specified item.\n  overload: System.AddIn.Contract.IListContract`1.IndexOf*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"<code>index</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>index</code> is equal to or greater than the return value of the <xref href=\\\"System.AddIn.Contract.IListContract`1.GetCount\\\"></xref> method.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)\n  commentId: M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)\n  id: Insert(System.Int32,`0)\n  parent: System.AddIn.Contract.IListContract`1\n  langs:\n  - csharp\n  name: Insert(Int32, T)\n  nameWithType: IListContract<T>.Insert(Int32, T)\n  fullName: IListContract<T>.Insert(Int32, T)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  summary: Inserts an item at the specified index in an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection.\n  remarks: \"After you call the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method, the items that follow the insertion point move to accommodate the new item. The indexes of the items that are moved are also updated. To replace an item at a specified index, use the <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method.  \\n  \\n To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.\"\n  syntax:\n    content: public void Insert (int index, T item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which to insert <code>item</code>.\n    - id: item\n      type: T\n      description: The <xref href=\"System.AddIn.Contract.IContract\"></xref> object to insert in the <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection.\n  overload: System.AddIn.Contract.IListContract`1.Insert*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"<code>index</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>index</code> is equal to or greater than the return value of <xref href=\\\"System.AddIn.Contract.IListContract`1.GetCount\\\"></xref>.\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection is read-only.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.IListContract`1.Remove(`0)\n  commentId: M:System.AddIn.Contract.IListContract`1.Remove(`0)\n  id: Remove(`0)\n  parent: System.AddIn.Contract.IListContract`1\n  langs:\n  - csharp\n  name: Remove(T)\n  nameWithType: IListContract<T>.Remove(T)\n  fullName: IListContract<T>.Remove(T)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  summary: Removes an item from an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection of a specified type.\n  remarks: You must repeat this method for each object of a particular type in the collection.\n  syntax:\n    content: public bool Remove (T item);\n    parameters:\n    - id: item\n      type: T\n      description: The item to remove from the collection.\n    return:\n      type: System.Boolean\n      description: '`true` if an item is removed; otherwise, `false`.'\n  overload: System.AddIn.Contract.IListContract`1.Remove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)\n  commentId: M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.AddIn.Contract.IListContract`1\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: IListContract<T>.RemoveAt(Int32)\n  fullName: IListContract<T>.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  summary: Removes the item at the specified index in an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection.\n  remarks: \"After you call <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A>, the items that follow the removed item move to occupy the vacated spot. The indexes of the items that are moved are also updated.  \\n  \\n To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.\"\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The index of the item to remove.\n  overload: System.AddIn.Contract.IListContract`1.RemoveAt*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"<code>index</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>index</code> is equal to or greater than the return value of the <xref href=\\\"System.AddIn.Contract.IListContract`1.GetCount\\\"></xref> method.\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection is read-only.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)\n  commentId: M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)\n  id: SetItem(System.Int32,`0)\n  parent: System.AddIn.Contract.IListContract`1\n  langs:\n  - csharp\n  name: SetItem(Int32, T)\n  nameWithType: IListContract<T>.SetItem(Int32, T)\n  fullName: IListContract<T>.SetItem(Int32, T)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  summary: Sets the item at the specified index in an <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection.\n  remarks: \"The <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method sets the item at the specified index. To add an item to the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method.  \\n  \\n To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.\"\n  syntax:\n    content: public void SetItem (int index, T item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which to set the item.\n    - id: item\n      type: T\n      description: The item to set at the specified index.\n  overload: System.AddIn.Contract.IListContract`1.SetItem*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: \"<code>index</code> is less than zero.  \\n  \\n -or-  \\n  \\n <code>index</code> is equal to or greater than the return value of the <xref href=\\\"System.AddIn.Contract.IListContract`1.GetCount\\\"></xref> method.\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The <xref href=\"System.AddIn.Contract.IListContract`1\"></xref> collection is read-only.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.IndexOutOfRangeException\n  parent: System\n  isExternal: false\n  name: IndexOutOfRangeException\n  nameWithType: IndexOutOfRangeException\n  fullName: System.IndexOutOfRangeException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.AddIn.Contract.IListContract`1.Add(`0)\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: Add(T)\n  nameWithType: IListContract<T>.Add(T)\n  fullName: IListContract<T>.Add(T)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.AddIn.Contract.IListContract`1.Clear\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: Clear()\n  nameWithType: IListContract<T>.Clear()\n  fullName: IListContract<T>.Clear()\n- uid: System.AddIn.Contract.IListContract`1.Contains(`0)\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: Contains(T)\n  nameWithType: IListContract<T>.Contains(T)\n  fullName: IListContract<T>.Contains(T)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.AddIn.Contract.IListContract`1.GetCount\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: GetCount()\n  nameWithType: IListContract<T>.GetCount()\n  fullName: IListContract<T>.GetCount()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.AddIn.Contract.IListContract`1.GetEnumeratorContract\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: GetEnumeratorContract()\n  nameWithType: IListContract<T>.GetEnumeratorContract()\n  fullName: IListContract<T>.GetEnumeratorContract()\n- uid: System.AddIn.Contract.IEnumeratorContract`1\n  parent: System.AddIn.Contract\n  isExternal: false\n  name: IEnumeratorContract<T>\n  nameWithType: IEnumeratorContract<T>\n  fullName: System.AddIn.Contract.IEnumeratorContract<T>\n- uid: System.AddIn.Contract.IListContract`1.GetIsReadOnly\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: GetIsReadOnly()\n  nameWithType: IListContract<T>.GetIsReadOnly()\n  fullName: IListContract<T>.GetIsReadOnly()\n- uid: System.AddIn.Contract.IListContract`1.GetItem(System.Int32)\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: GetItem(Int32)\n  nameWithType: IListContract<T>.GetItem(Int32)\n  fullName: IListContract<T>.GetItem(Int32)\n- uid: System.AddIn.Contract.IListContract`1.IndexOf(`0)\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: IndexOf(T)\n  nameWithType: IListContract<T>.IndexOf(T)\n  fullName: IListContract<T>.IndexOf(T)\n- uid: System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: Insert(Int32, T)\n  nameWithType: IListContract<T>.Insert(Int32, T)\n  fullName: IListContract<T>.Insert(Int32, T)\n- uid: System.AddIn.Contract.IListContract`1.Remove(`0)\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: Remove(T)\n  nameWithType: IListContract<T>.Remove(T)\n  fullName: IListContract<T>.Remove(T)\n- uid: System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: IListContract<T>.RemoveAt(Int32)\n  fullName: IListContract<T>.RemoveAt(Int32)\n- uid: System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: SetItem(Int32, T)\n  nameWithType: IListContract<T>.SetItem(Int32, T)\n  fullName: IListContract<T>.SetItem(Int32, T)\n- uid: System.AddIn.Contract.IListContract`1.Add*\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: Add\n  nameWithType: IListContract<T>.Add\n  fullName: IListContract<T>.Add\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml\n- uid: System.AddIn.Contract.IListContract`1.Clear*\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: Clear\n  nameWithType: IListContract<T>.Clear\n  fullName: IListContract<T>.Clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml\n- uid: System.AddIn.Contract.IListContract`1.Contains*\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: Contains\n  nameWithType: IListContract<T>.Contains\n  fullName: IListContract<T>.Contains\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml\n- uid: System.AddIn.Contract.IListContract`1.GetCount*\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: GetCount\n  nameWithType: IListContract<T>.GetCount\n  fullName: IListContract<T>.GetCount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml\n- uid: System.AddIn.Contract.IListContract`1.GetEnumeratorContract*\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: GetEnumeratorContract\n  nameWithType: IListContract<T>.GetEnumeratorContract\n  fullName: IListContract<T>.GetEnumeratorContract\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml\n- uid: System.AddIn.Contract.IListContract`1.GetIsReadOnly*\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: GetIsReadOnly\n  nameWithType: IListContract<T>.GetIsReadOnly\n  fullName: IListContract<T>.GetIsReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml\n- uid: System.AddIn.Contract.IListContract`1.GetItem*\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: GetItem\n  nameWithType: IListContract<T>.GetItem\n  fullName: IListContract<T>.GetItem\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml\n- uid: System.AddIn.Contract.IListContract`1.IndexOf*\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: IndexOf\n  nameWithType: IListContract<T>.IndexOf\n  fullName: IListContract<T>.IndexOf\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml\n- uid: System.AddIn.Contract.IListContract`1.Insert*\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: Insert\n  nameWithType: IListContract<T>.Insert\n  fullName: IListContract<T>.Insert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml\n- uid: System.AddIn.Contract.IListContract`1.Remove*\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: Remove\n  nameWithType: IListContract<T>.Remove\n  fullName: IListContract<T>.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml\n- uid: System.AddIn.Contract.IListContract`1.RemoveAt*\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: RemoveAt\n  nameWithType: IListContract<T>.RemoveAt\n  fullName: IListContract<T>.RemoveAt\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml\n- uid: System.AddIn.Contract.IListContract`1.SetItem*\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: SetItem\n  nameWithType: IListContract<T>.SetItem\n  fullName: IListContract<T>.SetItem\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml\n- uid: System.AddIn.Contract.IContract\n  parent: System.AddIn.Contract\n  isExternal: false\n  name: IContract\n  nameWithType: IContract\n  fullName: System.AddIn.Contract.IContract\n"}