{"nodes":[{"content":"Specifies information about a compiled expression root.","nodes":[{"pos":[0,55],"content":"Specifies information about a compiled expression root.","nodes":[{"content":"Specifies information about a compiled expression root.","pos":[0,55]}]}],"pos":[1386,1442],"yaml":true},{"content":"Indicates whether the <xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"></xref> can execute expression.","nodes":[{"pos":[0,124],"content":"Indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"&gt;&lt;/xref&gt;</ph> can execute expression.","source":"Indicates whether the <xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"></xref> can execute expression."}],"pos":[3119,3244],"yaml":true},{"content":"The expression text used.","nodes":[{"pos":[0,25],"content":"The expression text used.","nodes":[{"content":"The expression text used.","pos":[0,25]}]}],"pos":[3532,3558],"yaml":true},{"content":"`True` if reference; otherwise, `false`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">`True`</ph> if reference; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`True` if reference; otherwise, `false`."}],"pos":[3626,3669],"yaml":true},{"content":"The collection of locations.","nodes":[{"pos":[0,28],"content":"The collection of locations.","nodes":[{"content":"The collection of locations.","pos":[0,28]}]}],"pos":[3790,3819],"yaml":true},{"content":"The expression identifier.","nodes":[{"pos":[0,26],"content":"The expression identifier.","nodes":[{"content":"The expression identifier.","pos":[0,26]}]}],"pos":[3886,3913],"yaml":true},{"content":"`True` if the <xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"></xref> can execute expression; otherwise, `false`.","nodes":[{"pos":[0,136],"content":"<ph id=\"ph1\">`True`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"&gt;&lt;/xref&gt;</ph> can execute expression; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`True` if the <xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"></xref> can execute expression; otherwise, `false`."}],"pos":[3971,4110],"yaml":true},{"content":"Gets the expression tree used for the expression.","nodes":[{"pos":[0,49],"content":"Gets the expression tree used for the expression.","nodes":[{"content":"Gets the expression tree used for the expression.","pos":[0,49]}]}],"pos":[5734,5784],"yaml":true},{"content":"The expression identifier.","nodes":[{"pos":[0,26],"content":"The expression identifier.","nodes":[{"content":"The expression identifier.","pos":[0,26]}]}],"pos":[6073,6100],"yaml":true},{"content":"The location reference.","nodes":[{"pos":[0,23],"content":"The location reference.","nodes":[{"content":"The location reference.","pos":[0,23]}]}],"pos":[6230,6254],"yaml":true},{"content":"The expression tree used for the expression.","nodes":[{"pos":[0,44],"content":"The expression tree used for the expression.","nodes":[{"content":"The expression tree used for the expression.","pos":[0,44]}]}],"pos":[6332,6377],"yaml":true},{"content":"Gets the language used in the expression root.","nodes":[{"pos":[0,46],"content":"Gets the language used in the expression root.","nodes":[{"content":"Gets the language used in the expression root.","pos":[0,46]}]}],"pos":[7552,7599],"yaml":true},{"content":"The language used.","nodes":[{"pos":[0,18],"content":"The language used.","nodes":[{"content":"The language used.","pos":[0,18]}]}],"pos":[7728,7747],"yaml":true},{"content":"Gets the list of required locations for the expression root.","nodes":[{"pos":[0,60],"content":"Gets the list of required locations for the expression root.","nodes":[{"content":"Gets the list of required locations for the expression root.","pos":[0,60]}]}],"pos":[9014,9075],"yaml":true},{"content":"The expression identifier.","nodes":[{"pos":[0,26],"content":"The expression identifier.","nodes":[{"content":"The expression identifier.","pos":[0,26]}]}],"pos":[9270,9297],"yaml":true},{"content":"The list of required locations for the expression root.","nodes":[{"pos":[0,55],"content":"The list of required locations for the expression root.","nodes":[{"content":"The list of required locations for the expression root.","pos":[0,55]}]}],"pos":[9388,9444],"yaml":true},{"content":"Invokes the <xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"></xref> using the specified expression identifier and locations.","nodes":[{"pos":[0,147],"content":"Invokes the <ph id=\"ph1\">&lt;xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"&gt;&lt;/xref&gt;</ph> using the specified expression identifier and locations.","source":"Invokes the <xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"></xref> using the specified expression identifier and locations."}],"pos":[10930,11078],"yaml":true},{"content":"The expression identifier.","nodes":[{"pos":[0,26],"content":"The expression identifier.","nodes":[{"content":"The expression identifier.","pos":[0,26]}]}],"pos":[11307,11334],"yaml":true},{"content":"The locations used.","nodes":[{"pos":[0,19],"content":"The locations used.","nodes":[{"content":"The locations used.","pos":[0,19]}]}],"pos":[11446,11466],"yaml":true},{"content":"The invoked expression.","nodes":[{"pos":[0,23],"content":"The invoked expression.","nodes":[{"content":"The invoked expression.","pos":[0,23]}]}],"pos":[11523,11547],"yaml":true},{"content":"Invokes the <xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"></xref> using the specified expression identifier and locations and activity context.","nodes":[{"pos":[0,168],"content":"Invokes the <ph id=\"ph1\">&lt;xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"&gt;&lt;/xref&gt;</ph> using the specified expression identifier and locations and activity context.","source":"Invokes the <xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"></xref> using the specified expression identifier and locations and activity context."}],"pos":[13236,13405],"yaml":true},{"content":"The expression identifier.","nodes":[{"pos":[0,26],"content":"The expression identifier.","nodes":[{"content":"The expression identifier.","pos":[0,26]}]}],"pos":[13694,13721],"yaml":true},{"content":"The locations.","nodes":[{"pos":[0,14],"content":"The locations.","nodes":[{"content":"The locations.","pos":[0,14]}]}],"pos":[13842,13857],"yaml":true},{"content":"The activity context.","nodes":[{"pos":[0,21],"content":"The activity context.","nodes":[{"content":"The activity context.","pos":[0,21]}]}],"pos":[13948,13970],"yaml":true},{"content":"The invoked expression.","nodes":[{"pos":[0,23],"content":"The invoked expression.","nodes":[{"content":"The invoked expression.","pos":[0,23]}]}],"pos":[14027,14051],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  commentId: T:System.Activities.XamlIntegration.ICompiledExpressionRoot\n  id: ICompiledExpressionRoot\n  children:\n  - System.Activities.XamlIntegration.ICompiledExpressionRoot.CanExecuteExpression(System.String,System.Boolean,System.Collections.Generic.IList{System.Activities.LocationReference},System.Int32@)\n  - System.Activities.XamlIntegration.ICompiledExpressionRoot.GetExpressionTreeForExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference})\n  - System.Activities.XamlIntegration.ICompiledExpressionRoot.GetLanguage\n  - System.Activities.XamlIntegration.ICompiledExpressionRoot.GetRequiredLocations(System.Int32)\n  - System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.Location})\n  - System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference},System.Activities.ActivityContext)\n  langs:\n  - csharp\n  name: ICompiledExpressionRoot\n  nameWithType: ICompiledExpressionRoot\n  fullName: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  type: Interface\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.XamlIntegration\n  summary: Specifies information about a compiled expression root.\n  syntax:\n    content: public interface ICompiledExpressionRoot\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.XamlIntegration/ICompiledExpressionRoot.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.CanExecuteExpression(System.String,System.Boolean,System.Collections.Generic.IList{System.Activities.LocationReference},System.Int32@)\n  commentId: M:System.Activities.XamlIntegration.ICompiledExpressionRoot.CanExecuteExpression(System.String,System.Boolean,System.Collections.Generic.IList{System.Activities.LocationReference},System.Int32@)\n  id: CanExecuteExpression(System.String,System.Boolean,System.Collections.Generic.IList{System.Activities.LocationReference},System.Int32@)\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  langs:\n  - csharp\n  name: CanExecuteExpression(String, Boolean, IList<LocationReference>, Int32)\n  nameWithType: ICompiledExpressionRoot.CanExecuteExpression(String, Boolean, IList<LocationReference>, Int32)\n  fullName: ICompiledExpressionRoot.CanExecuteExpression(String, Boolean, IList<LocationReference>, Int32)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.XamlIntegration\n  summary: Indicates whether the <xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"></xref> can execute expression.\n  syntax:\n    content: public bool CanExecuteExpression (string expressionText, bool isReference, System.Collections.Generic.IList<System.Activities.LocationReference> locations, out int expressionId);\n    parameters:\n    - id: expressionText\n      type: System.String\n      description: The expression text used.\n    - id: isReference\n      type: System.Boolean\n      description: '`True` if reference; otherwise, `false`.'\n    - id: locations\n      type: System.Collections.Generic.IList{System.Activities.LocationReference}\n      description: The collection of locations.\n    - id: expressionId\n      type: System.Int32\n      description: The expression identifier.\n    return:\n      type: System.Boolean\n      description: '`True` if the <xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"></xref> can execute expression; otherwise, `false`.'\n  overload: System.Activities.XamlIntegration.ICompiledExpressionRoot.CanExecuteExpression*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.XamlIntegration/ICompiledExpressionRoot.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetExpressionTreeForExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference})\n  commentId: M:System.Activities.XamlIntegration.ICompiledExpressionRoot.GetExpressionTreeForExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference})\n  id: GetExpressionTreeForExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference})\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  langs:\n  - csharp\n  name: GetExpressionTreeForExpression(Int32, IList<LocationReference>)\n  nameWithType: ICompiledExpressionRoot.GetExpressionTreeForExpression(Int32, IList<LocationReference>)\n  fullName: ICompiledExpressionRoot.GetExpressionTreeForExpression(Int32, IList<LocationReference>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.XamlIntegration\n  summary: Gets the expression tree used for the expression.\n  syntax:\n    content: public System.Linq.Expressions.Expression GetExpressionTreeForExpression (int expressionId, System.Collections.Generic.IList<System.Activities.LocationReference> locationReferences);\n    parameters:\n    - id: expressionId\n      type: System.Int32\n      description: The expression identifier.\n    - id: locationReferences\n      type: System.Collections.Generic.IList{System.Activities.LocationReference}\n      description: The location reference.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: The expression tree used for the expression.\n  overload: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetExpressionTreeForExpression*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.XamlIntegration/ICompiledExpressionRoot.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetLanguage\n  commentId: M:System.Activities.XamlIntegration.ICompiledExpressionRoot.GetLanguage\n  id: GetLanguage\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  langs:\n  - csharp\n  name: GetLanguage()\n  nameWithType: ICompiledExpressionRoot.GetLanguage()\n  fullName: ICompiledExpressionRoot.GetLanguage()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.XamlIntegration\n  summary: Gets the language used in the expression root.\n  syntax:\n    content: public string GetLanguage ();\n    parameters: []\n    return:\n      type: System.String\n      description: The language used.\n  overload: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetLanguage*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.XamlIntegration/ICompiledExpressionRoot.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetRequiredLocations(System.Int32)\n  commentId: M:System.Activities.XamlIntegration.ICompiledExpressionRoot.GetRequiredLocations(System.Int32)\n  id: GetRequiredLocations(System.Int32)\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  langs:\n  - csharp\n  name: GetRequiredLocations(Int32)\n  nameWithType: ICompiledExpressionRoot.GetRequiredLocations(Int32)\n  fullName: ICompiledExpressionRoot.GetRequiredLocations(Int32)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.XamlIntegration\n  summary: Gets the list of required locations for the expression root.\n  syntax:\n    content: public System.Collections.Generic.IList<string> GetRequiredLocations (int expressionId);\n    parameters:\n    - id: expressionId\n      type: System.Int32\n      description: The expression identifier.\n    return:\n      type: System.Collections.Generic.IList{System.String}\n      description: The list of required locations for the expression root.\n  overload: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetRequiredLocations*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.XamlIntegration/ICompiledExpressionRoot.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.Location})\n  commentId: M:System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.Location})\n  id: InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.Location})\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  langs:\n  - csharp\n  name: InvokeExpression(Int32, IList<Location>)\n  nameWithType: ICompiledExpressionRoot.InvokeExpression(Int32, IList<Location>)\n  fullName: ICompiledExpressionRoot.InvokeExpression(Int32, IList<Location>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.XamlIntegration\n  summary: Invokes the <xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"></xref> using the specified expression identifier and locations.\n  syntax:\n    content: public object InvokeExpression (int expressionId, System.Collections.Generic.IList<System.Activities.Location> locations);\n    parameters:\n    - id: expressionId\n      type: System.Int32\n      description: The expression identifier.\n    - id: locations\n      type: System.Collections.Generic.IList{System.Activities.Location}\n      description: The locations used.\n    return:\n      type: System.Object\n      description: The invoked expression.\n  overload: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.XamlIntegration/ICompiledExpressionRoot.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference},System.Activities.ActivityContext)\n  commentId: M:System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference},System.Activities.ActivityContext)\n  id: InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference},System.Activities.ActivityContext)\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  langs:\n  - csharp\n  name: InvokeExpression(Int32, IList<LocationReference>, ActivityContext)\n  nameWithType: ICompiledExpressionRoot.InvokeExpression(Int32, IList<LocationReference>, ActivityContext)\n  fullName: ICompiledExpressionRoot.InvokeExpression(Int32, IList<LocationReference>, ActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.XamlIntegration\n  summary: Invokes the <xref href=\"System.Activities.XamlIntegration.ICompiledExpressionRoot\"></xref> using the specified expression identifier and locations and activity context.\n  syntax:\n    content: public object InvokeExpression (int expressionId, System.Collections.Generic.IList<System.Activities.LocationReference> locations, System.Activities.ActivityContext activityContext);\n    parameters:\n    - id: expressionId\n      type: System.Int32\n      description: The expression identifier.\n    - id: locations\n      type: System.Collections.Generic.IList{System.Activities.LocationReference}\n      description: The locations.\n    - id: activityContext\n      type: System.Activities.ActivityContext\n      description: The activity context.\n    return:\n      type: System.Object\n      description: The invoked expression.\n  overload: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.XamlIntegration/ICompiledExpressionRoot.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.CanExecuteExpression(System.String,System.Boolean,System.Collections.Generic.IList{System.Activities.LocationReference},System.Int32@)\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: CanExecuteExpression(String, Boolean, IList<LocationReference>, Int32)\n  nameWithType: ICompiledExpressionRoot.CanExecuteExpression(String, Boolean, IList<LocationReference>, Int32)\n  fullName: ICompiledExpressionRoot.CanExecuteExpression(String, Boolean, IList<LocationReference>, Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Generic.IList`1\n  name: IList<T>\n  nameWithType: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n- uid: System.Activities.LocationReference\n  name: LocationReference\n  nameWithType: LocationReference\n  fullName: System.Activities.LocationReference\n- uid: System.Collections.Generic.IList{System.Activities.LocationReference}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<LocationReference>\n  nameWithType: IList<LocationReference>\n  fullName: System.Collections.Generic.IList<System.Activities.LocationReference>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.LocationReference\n    name: LocationReference\n    nameWithType: LocationReference\n    fullName: System.Activities.LocationReference\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetExpressionTreeForExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference})\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: GetExpressionTreeForExpression(Int32, IList<LocationReference>)\n  nameWithType: ICompiledExpressionRoot.GetExpressionTreeForExpression(Int32, IList<LocationReference>)\n  fullName: ICompiledExpressionRoot.GetExpressionTreeForExpression(Int32, IList<LocationReference>)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetLanguage\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: GetLanguage()\n  nameWithType: ICompiledExpressionRoot.GetLanguage()\n  fullName: ICompiledExpressionRoot.GetLanguage()\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetRequiredLocations(System.Int32)\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: GetRequiredLocations(Int32)\n  nameWithType: ICompiledExpressionRoot.GetRequiredLocations(Int32)\n  fullName: ICompiledExpressionRoot.GetRequiredLocations(Int32)\n- uid: System.Collections.Generic.IList{System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<String>\n  nameWithType: IList<String>\n  fullName: System.Collections.Generic.IList<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.Location})\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: InvokeExpression(Int32, IList<Location>)\n  nameWithType: ICompiledExpressionRoot.InvokeExpression(Int32, IList<Location>)\n  fullName: ICompiledExpressionRoot.InvokeExpression(Int32, IList<Location>)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.Location\n  name: Location\n  nameWithType: Location\n  fullName: System.Activities.Location\n- uid: System.Collections.Generic.IList{System.Activities.Location}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<Location>\n  nameWithType: IList<Location>\n  fullName: System.Collections.Generic.IList<System.Activities.Location>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Location\n    name: Location\n    nameWithType: Location\n    fullName: System.Activities.Location\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference},System.Activities.ActivityContext)\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: InvokeExpression(Int32, IList<LocationReference>, ActivityContext)\n  nameWithType: ICompiledExpressionRoot.InvokeExpression(Int32, IList<LocationReference>, ActivityContext)\n  fullName: ICompiledExpressionRoot.InvokeExpression(Int32, IList<LocationReference>, ActivityContext)\n- uid: System.Activities.ActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: ActivityContext\n  nameWithType: ActivityContext\n  fullName: System.Activities.ActivityContext\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.CanExecuteExpression*\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: CanExecuteExpression\n  nameWithType: ICompiledExpressionRoot.CanExecuteExpression\n  fullName: ICompiledExpressionRoot.CanExecuteExpression\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.XamlIntegration/ICompiledExpressionRoot.xml\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetExpressionTreeForExpression*\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: GetExpressionTreeForExpression\n  nameWithType: ICompiledExpressionRoot.GetExpressionTreeForExpression\n  fullName: ICompiledExpressionRoot.GetExpressionTreeForExpression\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.XamlIntegration/ICompiledExpressionRoot.xml\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetLanguage*\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: GetLanguage\n  nameWithType: ICompiledExpressionRoot.GetLanguage\n  fullName: ICompiledExpressionRoot.GetLanguage\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.XamlIntegration/ICompiledExpressionRoot.xml\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.GetRequiredLocations*\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: GetRequiredLocations\n  nameWithType: ICompiledExpressionRoot.GetRequiredLocations\n  fullName: ICompiledExpressionRoot.GetRequiredLocations\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.XamlIntegration/ICompiledExpressionRoot.xml\n- uid: System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression*\n  parent: System.Activities.XamlIntegration.ICompiledExpressionRoot\n  isExternal: false\n  name: InvokeExpression\n  nameWithType: ICompiledExpressionRoot.InvokeExpression\n  fullName: ICompiledExpressionRoot.InvokeExpression\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.XamlIntegration/ICompiledExpressionRoot.xml\n"}