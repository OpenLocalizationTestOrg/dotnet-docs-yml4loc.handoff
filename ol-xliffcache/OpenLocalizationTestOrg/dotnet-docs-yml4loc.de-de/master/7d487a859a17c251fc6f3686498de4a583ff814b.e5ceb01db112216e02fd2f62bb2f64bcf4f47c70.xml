{"nodes":[{"content":"Provides a way to customize ASP.NET behavior at run time that overrides the ASP.NET code access security policy.","nodes":[{"pos":[0,112],"content":"Provides a way to customize ASP.NET behavior at run time that overrides the ASP.NET code access security policy.","nodes":[{"content":"Provides a way to customize ASP.NET behavior at run time that overrides the ASP.NET code access security policy.","pos":[0,112]}]}],"pos":[590,703],"yaml":true},{"content":"In complex Web hosting environments such as SharePoint and Web farms, you might have to extend the ASP.NET code access security policy. By extending the <xref:System.Web.Hosting.HostSecurityPolicyResolver> type, you can implement custom security policy behavior that overrides the ASP.NET code access security policy.  \n  \n## Configuring a HostSecurityPolicyResolver Class  \n In the configuration files, you can configure a custom <xref:System.Web.Hosting.HostSecurityPolicyResolver> instance by adding the <xref:System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType%2A> attribute to the  element. The <xref:System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType%2A> attribute can be set to the name of the custom <xref:System.Web.Hosting.HostSecurityPolicyResolver> type that will be loaded by ASP.NET. The attribute value contains the fully qualified name of the derived type. By default, [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] does not set this attribute.  \n  \n The following syntax shows how to configure the attribute:  \n  \n```  \n<trust   \n  Level = \"[Full|High|Medium|Low|Minimal]\"  \n  permissionSetName = \"name of the permission set\"  \n  hostSecurityPolicyResolverType = \"security policy resolution type\"  \n/>  \n```  \n  \n The <xref:System.Web.Configuration.TrustSection.PermissionSetName%2A> attribute in the `trust` element can be set to a string value that indicates which named permission set in a partial trust configuration file should be used. By default, ASP.NET 4 sets this attribute to \"ASP.Net\".  \n  \n The <xref:System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType%2A> attribute in the `trust` element indicates the custom <xref:System.Web.Hosting.HostSecurityPolicyResolver> object that will be loaded by ASP.NET. If the attribute is set to an empty string, the application uses the ASP.NET default logic for determining the permissions for the assembly. The <xref:System.Web.Hosting.HostSecurityPolicyResolver> type attribute cannot be set to a null value.  \n  \n> [!IMPORTANT]\n>  The assembly that contains a derived <xref:System.Web.Hosting.HostSecurityPolicyResolver> type must run with full trust, because the custom type provides information that ASP.NET can use to elevate assemblies to full trust. In general, you should deploy a custom policy resolver type in the global assembly cache, where it will run with full trust.  \n  \n When you implement this class, you must override the <xref:System.Web.Hosting.HostSecurityPolicyResolver.ResolvePolicy%2A> method. Depending on the <xref:System.Security.Policy.Evidence> instance that is passed as a parameter, the method returns an enumeration value that indicates the security policy to apply to the assembly. The set of available security policies is determined by the <xref:System.Web.Hosting.HostSecurityPolicyResults> enumeration.","nodes":[{"pos":[0,317],"content":"In complex Web hosting environments such as SharePoint and Web farms, you might have to extend the ASP.NET code access security policy. By extending the <xref:System.Web.Hosting.HostSecurityPolicyResolver> type, you can implement custom security policy behavior that overrides the ASP.NET code access security policy.","nodes":[{"content":"In complex Web hosting environments such as SharePoint and Web farms, you might have to extend the ASP.NET code access security policy. By extending the <xref:System.Web.Hosting.HostSecurityPolicyResolver> type, you can implement custom security policy behavior that overrides the ASP.NET code access security policy.","pos":[0,317],"nodes":[{"content":"In complex Web hosting environments such as SharePoint and Web farms, you might have to extend the ASP.NET code access security policy.","pos":[0,135]},{"content":"By extending the <ph id=\"ph1\">&lt;xref:System.Web.Hosting.HostSecurityPolicyResolver&gt;</ph> type, you can implement custom security policy behavior that overrides the ASP.NET code access security policy.","pos":[136,317],"source":" By extending the <xref:System.Web.Hosting.HostSecurityPolicyResolver> type, you can implement custom security policy behavior that overrides the ASP.NET code access security policy."}]}]},{"pos":[326,372],"content":"Configuring a HostSecurityPolicyResolver Class","linkify":"Configuring a HostSecurityPolicyResolver Class","nodes":[{"content":"Configuring a HostSecurityPolicyResolver Class","pos":[0,46]}]},{"pos":[376,1006],"content":"In the configuration files, you can configure a custom <xref:System.Web.Hosting.HostSecurityPolicyResolver> instance by adding the <xref:System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType%2A> attribute to the  element. The <xref:System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType%2A> attribute can be set to the name of the custom <xref:System.Web.Hosting.HostSecurityPolicyResolver> type that will be loaded by ASP.NET. The attribute value contains the fully qualified name of the derived type. By default, [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] does not set this attribute.","nodes":[{"content":"In the configuration files, you can configure a custom <ph id=\"ph1\">&lt;xref:System.Web.Hosting.HostSecurityPolicyResolver&gt;</ph> instance by adding the <ph id=\"ph2\">&lt;xref:System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType%2A&gt;</ph> attribute to the  element.","pos":[0,236],"source":"In the configuration files, you can configure a custom <xref:System.Web.Hosting.HostSecurityPolicyResolver> instance by adding the <xref:System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType%2A> attribute to the  element."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType%2A&gt;</ph> attribute can be set to the name of the custom <ph id=\"ph2\">&lt;xref:System.Web.Hosting.HostSecurityPolicyResolver&gt;</ph> type that will be loaded by ASP.NET.","pos":[237,456],"source":" The <xref:System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType%2A> attribute can be set to the name of the custom <xref:System.Web.Hosting.HostSecurityPolicyResolver> type that will be loaded by ASP.NET."},{"content":"The attribute value contains the fully qualified name of the derived type.","pos":[457,531]},{"content":"By default, <ph id=\"ph1\">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> does not set this attribute.","pos":[532,630],"source":" By default, [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] does not set this attribute."}]},{"pos":[1013,1071],"content":"The following syntax shows how to configure the attribute:","nodes":[{"content":"The following syntax shows how to configure the attribute:","pos":[0,58]}]},{"pos":[1277,1560],"content":"The <xref:System.Web.Configuration.TrustSection.PermissionSetName%2A> attribute in the `trust` element can be set to a string value that indicates which named permission set in a partial trust configuration file should be used. By default, ASP.NET 4 sets this attribute to \"ASP.Net\".","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.TrustSection.PermissionSetName%2A&gt;</ph> attribute in the <ph id=\"ph2\">`trust`</ph> element can be set to a string value that indicates which named permission set in a partial trust configuration file should be used.","pos":[0,227],"source":"The <xref:System.Web.Configuration.TrustSection.PermissionSetName%2A> attribute in the `trust` element can be set to a string value that indicates which named permission set in a partial trust configuration file should be used."},{"content":"By default, ASP.NET 4 sets this attribute to \"ASP.Net\".","pos":[228,283]}]},{"pos":[1567,2039],"content":"The <xref:System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType%2A> attribute in the `trust` element indicates the custom <xref:System.Web.Hosting.HostSecurityPolicyResolver> object that will be loaded by ASP.NET. If the attribute is set to an empty string, the application uses the ASP.NET default logic for determining the permissions for the assembly. The <xref:System.Web.Hosting.HostSecurityPolicyResolver> type attribute cannot be set to a null value.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType%2A&gt;</ph> attribute in the <ph id=\"ph2\">`trust`</ph> element indicates the custom <ph id=\"ph3\">&lt;xref:System.Web.Hosting.HostSecurityPolicyResolver&gt;</ph> object that will be loaded by ASP.NET.","pos":[0,228],"source":"The <xref:System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType%2A> attribute in the `trust` element indicates the custom <xref:System.Web.Hosting.HostSecurityPolicyResolver> object that will be loaded by ASP.NET."},{"content":"If the attribute is set to an empty string, the application uses the ASP.NET default logic for determining the permissions for the assembly.","pos":[229,369]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Hosting.HostSecurityPolicyResolver&gt;</ph> type attribute cannot be set to a null value.","pos":[370,472],"source":" The <xref:System.Web.Hosting.HostSecurityPolicyResolver> type attribute cannot be set to a null value."}]},{"pos":[2047,2411],"content":"[!IMPORTANT]\n The assembly that contains a derived <xref:System.Web.Hosting.HostSecurityPolicyResolver> type must run with full trust, because the custom type provides information that ASP.NET can use to elevate assemblies to full trust. In general, you should deploy a custom policy resolver type in the global assembly cache, where it will run with full trust.","leadings":["","> "],"nodes":[{"content":" The assembly that contains a derived <xref:System.Web.Hosting.HostSecurityPolicyResolver> type must run with full trust, because the custom type provides information that ASP.NET can use to elevate assemblies to full trust. In general, you should deploy a custom policy resolver type in the global assembly cache, where it will run with full trust.","pos":[13,362],"nodes":[{"content":"The assembly that contains a derived <ph id=\"ph1\">&lt;xref:System.Web.Hosting.HostSecurityPolicyResolver&gt;</ph> type must run with full trust, because the custom type provides information that ASP.NET can use to elevate assemblies to full trust.","pos":[1,224],"source":" The assembly that contains a derived <xref:System.Web.Hosting.HostSecurityPolicyResolver> type must run with full trust, because the custom type provides information that ASP.NET can use to elevate assemblies to full trust."},{"content":"In general, you should deploy a custom policy resolver type in the global assembly cache, where it will run with full trust.","pos":[225,349]}]}]},{"pos":[2418,2870],"content":"When you implement this class, you must override the <xref:System.Web.Hosting.HostSecurityPolicyResolver.ResolvePolicy%2A> method. Depending on the <xref:System.Security.Policy.Evidence> instance that is passed as a parameter, the method returns an enumeration value that indicates the security policy to apply to the assembly. The set of available security policies is determined by the <xref:System.Web.Hosting.HostSecurityPolicyResults> enumeration.","nodes":[{"content":"When you implement this class, you must override the <xref:System.Web.Hosting.HostSecurityPolicyResolver.ResolvePolicy%2A> method. Depending on the <xref:System.Security.Policy.Evidence> instance that is passed as a parameter, the method returns an enumeration value that indicates the security policy to apply to the assembly. The set of available security policies is determined by the <xref:System.Web.Hosting.HostSecurityPolicyResults> enumeration.","pos":[0,452],"nodes":[{"content":"When you implement this class, you must override the <ph id=\"ph1\">&lt;xref:System.Web.Hosting.HostSecurityPolicyResolver.ResolvePolicy%2A&gt;</ph> method.","pos":[0,130],"source":"When you implement this class, you must override the <xref:System.Web.Hosting.HostSecurityPolicyResolver.ResolvePolicy%2A> method."},{"content":"Depending on the <ph id=\"ph1\">&lt;xref:System.Security.Policy.Evidence&gt;</ph> instance that is passed as a parameter, the method returns an enumeration value that indicates the security policy to apply to the assembly.","pos":[131,327],"source":" Depending on the <xref:System.Security.Policy.Evidence> instance that is passed as a parameter, the method returns an enumeration value that indicates the security policy to apply to the assembly."},{"content":"The set of available security policies is determined by the <ph id=\"ph1\">&lt;xref:System.Web.Hosting.HostSecurityPolicyResults&gt;</ph> enumeration.","pos":[328,452],"source":" The set of available security policies is determined by the <xref:System.Web.Hosting.HostSecurityPolicyResults> enumeration."}]}]}],"pos":[714,3617],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.Hosting.HostSecurityPolicyResolver\"></xref> class.","nodes":[{"pos":[0,107],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Hosting.HostSecurityPolicyResolver\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.Hosting.HostSecurityPolicyResolver\"></xref> class."}],"pos":[5035,5143],"yaml":true},{"content":"Gets a value that indicates the security policy that should be applied to an assembly.","nodes":[{"pos":[0,86],"content":"Gets a value that indicates the security policy that should be applied to an assembly.","nodes":[{"content":"Gets a value that indicates the security policy that should be applied to an assembly.","pos":[0,86]}]}],"pos":[6417,6504],"yaml":true},{"content":"If you inherit from the <xref:System.Web.Hosting.HostSecurityPolicyResolver> class, you must implement the <xref:System.Web.Hosting.HostSecurityPolicyResolver.ResolvePolicy%2A> method. Based on the information that is provided in the `evidence` parameter, the method should return one of the security policies that are defined in the <xref:System.Web.Hosting.HostSecurityPolicyResults> enumeration.","nodes":[{"pos":[0,398],"content":"If you inherit from the <xref:System.Web.Hosting.HostSecurityPolicyResolver> class, you must implement the <xref:System.Web.Hosting.HostSecurityPolicyResolver.ResolvePolicy%2A> method. Based on the information that is provided in the `evidence` parameter, the method should return one of the security policies that are defined in the <xref:System.Web.Hosting.HostSecurityPolicyResults> enumeration.","nodes":[{"content":"If you inherit from the <ph id=\"ph1\">&lt;xref:System.Web.Hosting.HostSecurityPolicyResolver&gt;</ph> class, you must implement the <ph id=\"ph2\">&lt;xref:System.Web.Hosting.HostSecurityPolicyResolver.ResolvePolicy%2A&gt;</ph> method.","pos":[0,184],"source":"If you inherit from the <xref:System.Web.Hosting.HostSecurityPolicyResolver> class, you must implement the <xref:System.Web.Hosting.HostSecurityPolicyResolver.ResolvePolicy%2A> method."},{"content":"Based on the information that is provided in the <ph id=\"ph1\">`evidence`</ph> parameter, the method should return one of the security policies that are defined in the <ph id=\"ph2\">&lt;xref:System.Web.Hosting.HostSecurityPolicyResults&gt;</ph> enumeration.","pos":[185,398],"source":" Based on the information that is provided in the `evidence` parameter, the method should return one of the security policies that are defined in the <xref:System.Web.Hosting.HostSecurityPolicyResults> enumeration."}]}],"pos":[6515,6914],"yaml":true,"extradata":"MT"},{"content":"A collection of evidence about an assembly and a host, which is used as an input to security policy.","nodes":[{"pos":[0,100],"content":"A collection of evidence about an assembly and a host, which is used as an input to security policy.","nodes":[{"content":"A collection of evidence about an assembly and a host, which is used as an input to security policy.","pos":[0,100]}]}],"pos":[7153,7254],"yaml":true},{"content":"A value that indicates the type of security permissions should be applied to an assembly.","nodes":[{"pos":[0,89],"content":"A value that indicates the type of security permissions should be applied to an assembly.","nodes":[{"content":"A value that indicates the type of security permissions should be applied to an assembly.","pos":[0,89]}]}],"pos":[7342,7432],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Hosting.HostSecurityPolicyResolver\n  commentId: T:System.Web.Hosting.HostSecurityPolicyResolver\n  id: HostSecurityPolicyResolver\n  children:\n  - System.Web.Hosting.HostSecurityPolicyResolver.#ctor\n  - System.Web.Hosting.HostSecurityPolicyResolver.ResolvePolicy(System.Security.Policy.Evidence)\n  langs:\n  - csharp\n  name: HostSecurityPolicyResolver\n  nameWithType: HostSecurityPolicyResolver\n  fullName: System.Web.Hosting.HostSecurityPolicyResolver\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Provides a way to customize ASP.NET behavior at run time that overrides the ASP.NET code access security policy.\n  remarks: \"In complex Web hosting environments such as SharePoint and Web farms, you might have to extend the ASP.NET code access security policy. By extending the <xref:System.Web.Hosting.HostSecurityPolicyResolver> type, you can implement custom security policy behavior that overrides the ASP.NET code access security policy.  \\n  \\n## Configuring a HostSecurityPolicyResolver Class  \\n In the configuration files, you can configure a custom <xref:System.Web.Hosting.HostSecurityPolicyResolver> instance by adding the <xref:System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType%2A> attribute to the  element. The <xref:System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType%2A> attribute can be set to the name of the custom <xref:System.Web.Hosting.HostSecurityPolicyResolver> type that will be loaded by ASP.NET. The attribute value contains the fully qualified name of the derived type. By default, [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] does not set this attribute.  \\n  \\n The following syntax shows how to configure the attribute:  \\n  \\n```  \\n<trust   \\n  Level = \\\"[Full|High|Medium|Low|Minimal]\\\"  \\n  permissionSetName = \\\"name of the permission set\\\"  \\n  hostSecurityPolicyResolverType = \\\"security policy resolution type\\\"  \\n/>  \\n```  \\n  \\n The <xref:System.Web.Configuration.TrustSection.PermissionSetName%2A> attribute in the `trust` element can be set to a string value that indicates which named permission set in a partial trust configuration file should be used. By default, ASP.NET 4 sets this attribute to \\\"ASP.Net\\\".  \\n  \\n The <xref:System.Web.Configuration.TrustSection.HostSecurityPolicyResolverType%2A> attribute in the `trust` element indicates the custom <xref:System.Web.Hosting.HostSecurityPolicyResolver> object that will be loaded by ASP.NET. If the attribute is set to an empty string, the application uses the ASP.NET default logic for determining the permissions for the assembly. The <xref:System.Web.Hosting.HostSecurityPolicyResolver> type attribute cannot be set to a null value.  \\n  \\n> [!IMPORTANT]\\n>  The assembly that contains a derived <xref:System.Web.Hosting.HostSecurityPolicyResolver> type must run with full trust, because the custom type provides information that ASP.NET can use to elevate assemblies to full trust. In general, you should deploy a custom policy resolver type in the global assembly cache, where it will run with full trust.  \\n  \\n When you implement this class, you must override the <xref:System.Web.Hosting.HostSecurityPolicyResolver.ResolvePolicy%2A> method. Depending on the <xref:System.Security.Policy.Evidence> instance that is passed as a parameter, the method returns an enumeration value that indicates the security policy to apply to the assembly. The set of available security policies is determined by the <xref:System.Web.Hosting.HostSecurityPolicyResults> enumeration.\"\n  syntax:\n    content: public class HostSecurityPolicyResolver\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/HostSecurityPolicyResolver.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.HostSecurityPolicyResolver.#ctor\n  commentId: M:System.Web.Hosting.HostSecurityPolicyResolver.#ctor\n  id: '#ctor'\n  parent: System.Web.Hosting.HostSecurityPolicyResolver\n  langs:\n  - csharp\n  name: HostSecurityPolicyResolver()\n  nameWithType: HostSecurityPolicyResolver.HostSecurityPolicyResolver()\n  fullName: HostSecurityPolicyResolver.HostSecurityPolicyResolver()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.Web.Hosting.HostSecurityPolicyResolver\"></xref> class.\n  syntax:\n    content: public HostSecurityPolicyResolver ();\n    parameters: []\n  overload: System.Web.Hosting.HostSecurityPolicyResolver.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/HostSecurityPolicyResolver.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.HostSecurityPolicyResolver.ResolvePolicy(System.Security.Policy.Evidence)\n  commentId: M:System.Web.Hosting.HostSecurityPolicyResolver.ResolvePolicy(System.Security.Policy.Evidence)\n  id: ResolvePolicy(System.Security.Policy.Evidence)\n  parent: System.Web.Hosting.HostSecurityPolicyResolver\n  langs:\n  - csharp\n  name: ResolvePolicy(Evidence)\n  nameWithType: HostSecurityPolicyResolver.ResolvePolicy(Evidence)\n  fullName: HostSecurityPolicyResolver.ResolvePolicy(Evidence)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Gets a value that indicates the security policy that should be applied to an assembly.\n  remarks: If you inherit from the <xref:System.Web.Hosting.HostSecurityPolicyResolver> class, you must implement the <xref:System.Web.Hosting.HostSecurityPolicyResolver.ResolvePolicy%2A> method. Based on the information that is provided in the `evidence` parameter, the method should return one of the security policies that are defined in the <xref:System.Web.Hosting.HostSecurityPolicyResults> enumeration.\n  syntax:\n    content: public virtual System.Web.Hosting.HostSecurityPolicyResults ResolvePolicy (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: A collection of evidence about an assembly and a host, which is used as an input to security policy.\n    return:\n      type: System.Web.Hosting.HostSecurityPolicyResults\n      description: A value that indicates the type of security permissions should be applied to an assembly.\n  overload: System.Web.Hosting.HostSecurityPolicyResolver.ResolvePolicy*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/HostSecurityPolicyResolver.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Hosting.HostSecurityPolicyResolver.#ctor\n  parent: System.Web.Hosting.HostSecurityPolicyResolver\n  isExternal: false\n  name: HostSecurityPolicyResolver()\n  nameWithType: HostSecurityPolicyResolver.HostSecurityPolicyResolver()\n  fullName: HostSecurityPolicyResolver.HostSecurityPolicyResolver()\n- uid: System.Web.Hosting.HostSecurityPolicyResolver.ResolvePolicy(System.Security.Policy.Evidence)\n  parent: System.Web.Hosting.HostSecurityPolicyResolver\n  isExternal: false\n  name: ResolvePolicy(Evidence)\n  nameWithType: HostSecurityPolicyResolver.ResolvePolicy(Evidence)\n  fullName: HostSecurityPolicyResolver.ResolvePolicy(Evidence)\n- uid: System.Web.Hosting.HostSecurityPolicyResults\n  parent: System.Web.Hosting\n  isExternal: false\n  name: HostSecurityPolicyResults\n  nameWithType: HostSecurityPolicyResults\n  fullName: System.Web.Hosting.HostSecurityPolicyResults\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Web.Hosting.HostSecurityPolicyResolver.#ctor*\n  parent: System.Web.Hosting.HostSecurityPolicyResolver\n  isExternal: false\n  name: HostSecurityPolicyResolver\n  nameWithType: HostSecurityPolicyResolver.HostSecurityPolicyResolver\n  fullName: HostSecurityPolicyResolver.HostSecurityPolicyResolver\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/HostSecurityPolicyResolver.xml\n- uid: System.Web.Hosting.HostSecurityPolicyResolver.ResolvePolicy*\n  parent: System.Web.Hosting.HostSecurityPolicyResolver\n  isExternal: false\n  name: ResolvePolicy\n  nameWithType: HostSecurityPolicyResolver.ResolvePolicy\n  fullName: HostSecurityPolicyResolver.ResolvePolicy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/HostSecurityPolicyResolver.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}