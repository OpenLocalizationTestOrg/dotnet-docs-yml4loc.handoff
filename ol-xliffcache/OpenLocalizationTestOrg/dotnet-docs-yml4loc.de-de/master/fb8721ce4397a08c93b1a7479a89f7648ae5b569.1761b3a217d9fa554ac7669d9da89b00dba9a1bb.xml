{"nodes":[{"content":"Represents the method that will handle events raised when a <xref href=\"System.Windows.DependencyProperty\"></xref> is changed on a particular <xref href=\"System.Windows.DependencyObject\"></xref> implementation.","nodes":[{"pos":[0,210],"content":"Represents the method that will handle events raised when a <ph id=\"ph1\">&lt;xref href=\"System.Windows.DependencyProperty\"&gt;&lt;/xref&gt;</ph> is changed on a particular <ph id=\"ph2\">&lt;xref href=\"System.Windows.DependencyObject\"&gt;&lt;/xref&gt;</ph> implementation.","source":"Represents the method that will handle events raised when a <xref href=\"System.Windows.DependencyProperty\"></xref> is changed on a particular <xref href=\"System.Windows.DependencyObject\"></xref> implementation."}],"pos":[479,690],"yaml":true},{"content":"This delegate is the handler signature for particular events that report dependency property changes.  \n  \n An event that uses this handler is exposed as a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event, not as a routed event. Typically these events follow the naming pattern `Is(`*PropertyName*`)Changed`, where *PropertyName* is the <xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName> of the property that changed. The arguments of the event are used to query the old and new value of the property, as reported by the particular event. Typically there is a 1:1 correspondence between properties that change and a particular event that reports the change. It is also possible, though uncommon, to have the same event report changes to more than one property. In this case, the <xref:System.Windows.DependencyPropertyChangedEventArgs> should be checked to determine the property that changed.  \n  \n The event data class <xref:System.Windows.DependencyPropertyChangedEventArgs> has a wider usage than just this delegate. <xref:System.Windows.DependencyPropertyChangedEventArgs> is also used to communicate data for <xref:System.Windows.PropertyChangedCallback> implementations, which are part of the customization features and internals of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system, and by the <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> virtual method, which can be overridden to provide class-specific notifications whenever any dependency property on the object changes.","nodes":[{"pos":[0,101],"content":"This delegate is the handler signature for particular events that report dependency property changes.","nodes":[{"content":"This delegate is the handler signature for particular events that report dependency property changes.","pos":[0,101]}]},{"pos":[108,931],"content":"An event that uses this handler is exposed as a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event, not as a routed event. Typically these events follow the naming pattern `Is(`*PropertyName*`)Changed`, where *PropertyName* is the <xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName> of the property that changed. The arguments of the event are used to query the old and new value of the property, as reported by the particular event. Typically there is a 1:1 correspondence between properties that change and a particular event that reports the change. It is also possible, though uncommon, to have the same event report changes to more than one property. In this case, the <xref:System.Windows.DependencyPropertyChangedEventArgs> should be checked to determine the property that changed.","nodes":[{"content":"An event that uses this handler is exposed as a <ph id=\"ph1\">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> event, not as a routed event.","pos":[0,135],"source":"An event that uses this handler is exposed as a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event, not as a routed event."},{"content":"Typically these events follow the naming pattern <ph id=\"ph1\">`Is(`</ph><bpt id=\"p1\">*</bpt>PropertyName<ept id=\"p1\">*</ept><ph id=\"ph2\">`)Changed`</ph>, where <bpt id=\"p2\">*</bpt>PropertyName<ept id=\"p2\">*</ept> is the <ph id=\"ph3\">&lt;xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName&gt;</ph> of the property that changed.","pos":[136,347],"source":" Typically these events follow the naming pattern `Is(`*PropertyName*`)Changed`, where *PropertyName* is the <xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName> of the property that changed."},{"content":"The arguments of the event are used to query the old and new value of the property, as reported by the particular event.","pos":[348,468]},{"content":"Typically there is a 1:1 correspondence between properties that change and a particular event that reports the change.","pos":[469,587]},{"content":"It is also possible, though uncommon, to have the same event report changes to more than one property.","pos":[588,690]},{"content":"In this case, the <ph id=\"ph1\">&lt;xref:System.Windows.DependencyPropertyChangedEventArgs&gt;</ph> should be checked to determine the property that changed.","pos":[691,823],"source":" In this case, the <xref:System.Windows.DependencyPropertyChangedEventArgs> should be checked to determine the property that changed."}]},{"pos":[938,1577],"content":"The event data class <xref:System.Windows.DependencyPropertyChangedEventArgs> has a wider usage than just this delegate. <xref:System.Windows.DependencyPropertyChangedEventArgs> is also used to communicate data for <xref:System.Windows.PropertyChangedCallback> implementations, which are part of the customization features and internals of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system, and by the <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> virtual method, which can be overridden to provide class-specific notifications whenever any dependency property on the object changes.","nodes":[{"content":"The event data class <ph id=\"ph1\">&lt;xref:System.Windows.DependencyPropertyChangedEventArgs&gt;</ph> has a wider usage than just this delegate.","pos":[0,120],"source":"The event data class <xref:System.Windows.DependencyPropertyChangedEventArgs> has a wider usage than just this delegate."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.DependencyPropertyChangedEventArgs&gt;</ph> is also used to communicate data for <ph id=\"ph2\">&lt;xref:System.Windows.PropertyChangedCallback&gt;</ph> implementations, which are part of the customization features and internals of the <ph id=\"ph3\">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> property system, and by the <ph id=\"ph4\">&lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;</ph> virtual method, which can be overridden to provide class-specific notifications whenever any dependency property on the object changes.","pos":[121,639],"source":" <xref:System.Windows.DependencyPropertyChangedEventArgs> is also used to communicate data for <xref:System.Windows.PropertyChangedCallback> implementations, which are part of the customization features and internals of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system, and by the <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> virtual method, which can be overridden to provide class-specific notifications whenever any dependency property on the object changes."}]}],"pos":[701,2285],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.DependencyPropertyChangedEventHandler\n  commentId: T:System.Windows.DependencyPropertyChangedEventHandler\n  id: DependencyPropertyChangedEventHandler\n  langs:\n  - csharp\n  name: DependencyPropertyChangedEventHandler\n  nameWithType: DependencyPropertyChangedEventHandler\n  fullName: System.Windows.DependencyPropertyChangedEventHandler\n  type: Delegate\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Represents the method that will handle events raised when a <xref href=\"System.Windows.DependencyProperty\"></xref> is changed on a particular <xref href=\"System.Windows.DependencyObject\"></xref> implementation.\n  remarks: \"This delegate is the handler signature for particular events that report dependency property changes.  \\n  \\n An event that uses this handler is exposed as a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event, not as a routed event. Typically these events follow the naming pattern `Is(`*PropertyName*`)Changed`, where *PropertyName* is the <xref:System.Windows.DependencyProperty.Name%2A?displayProperty=fullName> of the property that changed. The arguments of the event are used to query the old and new value of the property, as reported by the particular event. Typically there is a 1:1 correspondence between properties that change and a particular event that reports the change. It is also possible, though uncommon, to have the same event report changes to more than one property. In this case, the <xref:System.Windows.DependencyPropertyChangedEventArgs> should be checked to determine the property that changed.  \\n  \\n The event data class <xref:System.Windows.DependencyPropertyChangedEventArgs> has a wider usage than just this delegate. <xref:System.Windows.DependencyPropertyChangedEventArgs> is also used to communicate data for <xref:System.Windows.PropertyChangedCallback> implementations, which are part of the customization features and internals of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system, and by the <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> virtual method, which can be overridden to provide class-specific notifications whenever any dependency property on the object changes.\"\n  syntax:\n    content: public delegate void DependencyPropertyChangedEventHandler(object sender, DependencyPropertyChangedEventArgs e);\n  inheritance:\n  - System.Object\n  - System.Delegate\n  extensionMethods:\n  - System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/DependencyPropertyChangedEventHandler.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  parent: System.Reflection.RuntimeReflectionExtensions\n  isExternal: false\n  name: GetMethodInfo(Delegate)\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n  fullName: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n"}