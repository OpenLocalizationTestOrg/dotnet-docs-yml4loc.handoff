{"nodes":[{"content":"Represents a mask-parsing service that can be used by any number of controls that support masking, such as the <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> control.","nodes":[{"pos":[0,175],"content":"Represents a mask-parsing service that can be used by any number of controls that support masking, such as the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox\"&gt;&lt;/xref&gt;</ph> control.","source":"Represents a mask-parsing service that can be used by any number of controls that support masking, such as the <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> control."}],"pos":[7400,7576],"yaml":true},{"content":"The <xref:System.Windows.Forms.MaskedTextBox> control contains a mask, composed of literal characters and formatting elements, that it tests all user input against. Instead of permanently associating a specific mask-parsing engine with <xref:System.Windows.Forms.MaskedTextBox>, Windows Forms provides it as a separate service, represented by the <xref:System.ComponentModel.MaskedTextProvider> class, which defines the syntax of the masking language discussed in the documentation for the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property.  \n  \n Many of the members of the <xref:System.Windows.Forms.MaskedTextBox> class refer their implementation to similarly named members of the associated <xref:System.ComponentModel.MaskedTextProvider>. For example, the <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=fullName> property of the <xref:System.Windows.Forms.MaskedTextBox> class refers all access to the <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> of the <xref:System.ComponentModel.MaskedTextProvider> class.  \n  \n The mask-parsing engine used by <xref:System.ComponentModel.MaskedTextProvider> is modeled after the Masked Edit control included in Microsoft Visual Basic version 6. Its masking language is described in the documentation for the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property.  \n  \n The following three distinct strings are involved with the <xref:System.ComponentModel.MaskedTextProvider> class.  \n  \n|String name|Description|  \n|-----------------|-----------------|  \n|Input character or string|Represents the characters used as input that the mask is applied against. In actuality, the input string may be composed of multiple input operations, including <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, and <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>. Therefore, the input string cannot be accessed directly. However, aspects of the input string handling are available though the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> and <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>, and <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> properties.|  \n|Mask|Represents the input formatting mask used to transform the input string into the formatted string. This string is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> and accessed primarily though the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property. Characteristics of the mask are also available through other members, such as the <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, and <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> properties.|  \n|Formatted string|Represents the string that results when the full mask is applied to the input string. The formatted string can be queried with many members of the class, including <xref:System.ComponentModel.MaskedTextProvider.Item%2A>, <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>, <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>, and so on. The full value of the formatted string is available from the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods.|  \n  \n> [!NOTE]\n>  The input string may represent direct user input, as in the case of the <xref:System.Windows.Forms.MaskedTextBox>, or may be generated by other processes not directly associated with user input/output operations.","nodes":[{"pos":[0,549],"content":"The <xref:System.Windows.Forms.MaskedTextBox> control contains a mask, composed of literal characters and formatting elements, that it tests all user input against. Instead of permanently associating a specific mask-parsing engine with <xref:System.Windows.Forms.MaskedTextBox>, Windows Forms provides it as a separate service, represented by the <xref:System.ComponentModel.MaskedTextProvider> class, which defines the syntax of the masking language discussed in the documentation for the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property.","nodes":[{"content":"The <xref:System.Windows.Forms.MaskedTextBox> control contains a mask, composed of literal characters and formatting elements, that it tests all user input against. Instead of permanently associating a specific mask-parsing engine with <xref:System.Windows.Forms.MaskedTextBox>, Windows Forms provides it as a separate service, represented by the <xref:System.ComponentModel.MaskedTextProvider> class, which defines the syntax of the masking language discussed in the documentation for the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property.","pos":[0,549],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> control contains a mask, composed of literal characters and formatting elements, that it tests all user input against.","pos":[0,164],"source":"The <xref:System.Windows.Forms.MaskedTextBox> control contains a mask, composed of literal characters and formatting elements, that it tests all user input against."},{"content":"Instead of permanently associating a specific mask-parsing engine with <ph id=\"ph1\">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph>, Windows Forms provides it as a separate service, represented by the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider&gt;</ph> class, which defines the syntax of the masking language discussed in the documentation for the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A&gt;</ph> property.","pos":[165,549],"source":" Instead of permanently associating a specific mask-parsing engine with <xref:System.Windows.Forms.MaskedTextBox>, Windows Forms provides it as a separate service, represented by the <xref:System.ComponentModel.MaskedTextProvider> class, which defines the syntax of the masking language discussed in the documentation for the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property."}]}]},{"pos":[556,1062],"content":"Many of the members of the <xref:System.Windows.Forms.MaskedTextBox> class refer their implementation to similarly named members of the associated <xref:System.ComponentModel.MaskedTextProvider>. For example, the <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=fullName> property of the <xref:System.Windows.Forms.MaskedTextBox> class refers all access to the <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> of the <xref:System.ComponentModel.MaskedTextProvider> class.","nodes":[{"content":"Many of the members of the <xref:System.Windows.Forms.MaskedTextBox> class refer their implementation to similarly named members of the associated <xref:System.ComponentModel.MaskedTextProvider>. For example, the <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=fullName> property of the <xref:System.Windows.Forms.MaskedTextBox> class refers all access to the <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> of the <xref:System.ComponentModel.MaskedTextProvider> class.","pos":[0,506],"nodes":[{"content":"Many of the members of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> class refer their implementation to similarly named members of the associated <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider&gt;</ph>.","pos":[0,195],"source":"Many of the members of the <xref:System.Windows.Forms.MaskedTextBox> class refer their implementation to similarly named members of the associated <xref:System.ComponentModel.MaskedTextProvider>."},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=fullName&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> class refers all access to the <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A&gt;</ph> of the <ph id=\"ph4\">&lt;xref:System.ComponentModel.MaskedTextProvider&gt;</ph> class.","pos":[196,506],"source":" For example, the <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=fullName> property of the <xref:System.Windows.Forms.MaskedTextBox> class refers all access to the <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> of the <xref:System.ComponentModel.MaskedTextProvider> class."}]}]},{"pos":[1069,1364],"content":"The mask-parsing engine used by <xref:System.ComponentModel.MaskedTextProvider> is modeled after the Masked Edit control included in Microsoft Visual Basic version 6. Its masking language is described in the documentation for the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property.","nodes":[{"content":"The mask-parsing engine used by <xref:System.ComponentModel.MaskedTextProvider> is modeled after the Masked Edit control included in Microsoft Visual Basic version 6. Its masking language is described in the documentation for the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property.","pos":[0,295],"nodes":[{"content":"The mask-parsing engine used by <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider&gt;</ph> is modeled after the Masked Edit control included in Microsoft Visual Basic version 6.","pos":[0,166],"source":"The mask-parsing engine used by <xref:System.ComponentModel.MaskedTextProvider> is modeled after the Masked Edit control included in Microsoft Visual Basic version 6."},{"content":"Its masking language is described in the documentation for the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Mask%2A&gt;</ph> property.","pos":[167,295],"source":" Its masking language is described in the documentation for the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property."}]}]},{"pos":[1371,1484],"content":"The following three distinct strings are involved with the <xref:System.ComponentModel.MaskedTextProvider> class.","nodes":[{"content":"The following three distinct strings are involved with the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider&gt;</ph> class.","pos":[0,113],"source":"The following three distinct strings are involved with the <xref:System.ComponentModel.MaskedTextProvider> class."}]},{"pos":[1491,1502],"content":"String name","nodes":[{"content":"String name","pos":[0,11]}]},{"pos":[1503,1514],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[1559,1584],"content":"Input character or string","nodes":[{"content":"Input character or string","pos":[0,25]}]},{"pos":[1585,2395],"content":"Represents the characters used as input that the mask is applied against. In actuality, the input string may be composed of multiple input operations, including <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, and <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>. Therefore, the input string cannot be accessed directly. However, aspects of the input string handling are available though the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> and <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>, and <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> properties.","nodes":[{"content":"Represents the characters used as input that the mask is applied against. In actuality, the input string may be composed of multiple input operations, including <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, and <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>. Therefore, the input string cannot be accessed directly. However, aspects of the input string handling are available though the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> and <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>, and <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> properties.","pos":[0,810],"nodes":[{"content":"Represents the characters used as input that the mask is applied against.","pos":[0,73]},{"content":"In actuality, the input string may be composed of multiple input operations, including <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Add%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.Replace%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.ComponentModel.MaskedTextProvider.Remove%2A&gt;</ph>.","pos":[74,400],"source":" In actuality, the input string may be composed of multiple input operations, including <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, and <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>."},{"content":"Therefore, the input string cannot be accessed directly.","pos":[401,457]},{"content":"However, aspects of the input string handling are available though the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A&gt;</ph> properties.","pos":[458,810],"source":" However, aspects of the input string handling are available though the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> and <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>, and <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> properties."}]}]},{"pos":[2400,2404],"content":"Mask","nodes":[{"content":"Mask","pos":[0,4]}]},{"pos":[2405,2972],"content":"Represents the input formatting mask used to transform the input string into the formatted string. This string is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> and accessed primarily though the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property. Characteristics of the mask are also available through other members, such as the <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, and <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> properties.","nodes":[{"content":"Represents the input formatting mask used to transform the input string into the formatted string. This string is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> and accessed primarily though the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property. Characteristics of the mask are also available through other members, such as the <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, and <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> properties.","pos":[0,567],"nodes":[{"content":"Represents the input formatting mask used to transform the input string into the formatted string.","pos":[0,98]},{"content":"This string is set in the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A&gt;</ph> and accessed primarily though the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.Mask%2A&gt;</ph> property.","pos":[99,283],"source":" This string is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> and accessed primarily though the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property."},{"content":"Characteristics of the mask are also available through other members, such as the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A&gt;</ph> properties.","pos":[284,567],"source":" Characteristics of the mask are also available through other members, such as the <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, and <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> properties."}]}]},{"pos":[2977,2993],"content":"Formatted string","nodes":[{"content":"Formatted string","pos":[0,16]}]},{"pos":[2994,3758],"content":"Represents the string that results when the full mask is applied to the input string. The formatted string can be queried with many members of the class, including <xref:System.ComponentModel.MaskedTextProvider.Item%2A>, <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>, <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>, and so on. The full value of the formatted string is available from the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods.","nodes":[{"content":"Represents the string that results when the full mask is applied to the input string. The formatted string can be queried with many members of the class, including <xref:System.ComponentModel.MaskedTextProvider.Item%2A>, <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>, <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>, and so on. The full value of the formatted string is available from the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods.","pos":[0,764],"nodes":[{"content":"Represents the string that results when the full mask is applied to the input string.","pos":[0,85]},{"content":"The formatted string can be queried with many members of the class, including <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Item%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A&gt;</ph>, and so on.","pos":[86,563],"source":" The formatted string can be queried with many members of the class, including <xref:System.ComponentModel.MaskedTextProvider.Item%2A>, <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>, <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>, and so on."},{"content":"The full value of the formatted string is available from the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> methods.","pos":[564,764],"source":" The full value of the formatted string is available from the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods."}]}]},{"pos":[3767,3990],"content":"[!NOTE]\n The input string may represent direct user input, as in the case of the <xref:System.Windows.Forms.MaskedTextBox>, or may be generated by other processes not directly associated with user input/output operations.","leadings":["","> "],"nodes":[{"content":"The input string may represent direct user input, as in the case of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph>, or may be generated by other processes not directly associated with user input/output operations.","pos":[9,221],"source":" The input string may represent direct user input, as in the case of the <xref:System.Windows.Forms.MaskedTextBox>, or may be generated by other processes not directly associated with user input/output operations."}]}],"pos":[7587,11595],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> class using the specified mask.","nodes":[{"pos":[0,127],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider\"&gt;&lt;/xref&gt;</ph> class using the specified mask.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> class using the specified mask."}],"pos":[13285,13413],"yaml":true},{"content":"Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \n  \n `MaskedTextProvider(mask , null, true, '_', '\\0', false)`","nodes":[{"pos":[0,284],"content":"Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:","nodes":[{"content":"Use of this constructor is exactly equivalent to the following call to the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName&gt;</ph> constructor:","pos":[0,284],"source":"Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:"}]}],"pos":[13424,13778],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that represents the input mask.","nodes":[{"pos":[0,68],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that represents the input mask.","source":"A <xref href=\"System.String\"></xref> that represents the input mask."}],"pos":[13918,13987],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> class using the specified mask and ASCII restriction value.","nodes":[{"pos":[0,155],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider\"&gt;&lt;/xref&gt;</ph> class using the specified mask and ASCII restriction value.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> class using the specified mask and ASCII restriction value."}],"pos":[15420,15576],"yaml":true},{"content":"Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \n  \n `MaskedTextProvider(mask , null, true, '_', '\\0', restrictToASCII)`","nodes":[{"pos":[0,284],"content":"Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:","nodes":[{"content":"Use of this constructor is exactly equivalent to the following call to the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName&gt;</ph> constructor:","pos":[0,284],"source":"Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:"}]}],"pos":[15587,15951],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that represents the input mask.","nodes":[{"pos":[0,68],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that represents the input mask.","source":"A <xref href=\"System.String\"></xref> that represents the input mask."}],"pos":[16113,16182],"yaml":true},{"content":"`true` to restrict input to ASCII-compatible characters; otherwise `false` to allow the entire Unicode set.","nodes":[{"pos":[0,107],"content":"<ph id=\"ph1\">`true`</ph> to restrict input to ASCII-compatible characters; otherwise <ph id=\"ph2\">`false`</ph> to allow the entire Unicode set.","source":"`true` to restrict input to ASCII-compatible characters; otherwise `false` to allow the entire Unicode set."}],"pos":[16254,16364],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> class using the specified mask and culture.","nodes":[{"pos":[0,139],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider\"&gt;&lt;/xref&gt;</ph> class using the specified mask and culture.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> class using the specified mask and culture."}],"pos":[17863,18003],"yaml":true},{"content":"Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \n  \n `MaskedTextProvider(mask , culture, true, '_', '\\0', false)`","nodes":[{"pos":[0,284],"content":"Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:","nodes":[{"content":"Use of this constructor is exactly equivalent to the following call to the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName&gt;</ph> constructor:","pos":[0,284],"source":"Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:"}]}],"pos":[18014,18371],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that represents the input mask.","nodes":[{"pos":[0,68],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that represents the input mask.","source":"A <xref href=\"System.String\"></xref> that represents the input mask."}],"pos":[18553,18622],"yaml":true},{"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> that is used to set region-sensitive separator characters.","nodes":[{"pos":[0,114],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> that is used to set region-sensitive separator characters.","source":"A <xref href=\"System.Globalization.CultureInfo\"></xref> that is used to set region-sensitive separator characters."}],"pos":[18704,18819],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> class using the specified mask, password character, and prompt usage value.","nodes":[{"pos":[0,171],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider\"&gt;&lt;/xref&gt;</ph> class using the specified mask, password character, and prompt usage value.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> class using the specified mask, password character, and prompt usage value."}],"pos":[20306,20478],"yaml":true},{"content":"Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \n  \n `MaskedTextProvider(mask , null, allowPromptAsInput, '_', passwordChar, false)`","nodes":[{"pos":[0,284],"content":"Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:","nodes":[{"content":"Use of this constructor is exactly equivalent to the following call to the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName&gt;</ph> constructor:","pos":[0,284],"source":"Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:"}]}],"pos":[20489,20864],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that represents the input mask.","nodes":[{"pos":[0,68],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that represents the input mask.","source":"A <xref href=\"System.String\"></xref> that represents the input mask."}],"pos":[21048,21117],"yaml":true},{"content":"A <xref href=\"System.Char\"></xref> that will be displayed for characters entered into a password string.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> that will be displayed for characters entered into a password string.","source":"A <xref href=\"System.Char\"></xref> that will be displayed for characters entered into a password string."}],"pos":[21183,21288],"yaml":true},{"content":"`true` to allow the prompt character as input; otherwise `false`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">`true`</ph> to allow the prompt character as input; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` to allow the prompt character as input; otherwise `false`."}],"pos":[21363,21431],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> class using the specified mask, culture, and ASCII restriction value.","nodes":[{"pos":[0,165],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider\"&gt;&lt;/xref&gt;</ph> class using the specified mask, culture, and ASCII restriction value.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> class using the specified mask, culture, and ASCII restriction value."}],"pos":[23002,23168],"yaml":true},{"content":"Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \n  \n `MaskedTextProvider(mask , culture, true, '_', '\\0', restrictToAscii)`","nodes":[{"pos":[0,284],"content":"Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:","nodes":[{"content":"Use of this constructor is exactly equivalent to the following call to the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName&gt;</ph> constructor:","pos":[0,284],"source":"Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:"}]}],"pos":[23179,23546],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that represents the input mask.","nodes":[{"pos":[0,68],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that represents the input mask.","source":"A <xref href=\"System.String\"></xref> that represents the input mask."}],"pos":[23750,23819],"yaml":true},{"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> that is used to set region-sensitive separator characters.","nodes":[{"pos":[0,114],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> that is used to set region-sensitive separator characters.","source":"A <xref href=\"System.Globalization.CultureInfo\"></xref> that is used to set region-sensitive separator characters."}],"pos":[23901,24016],"yaml":true},{"content":"`true` to restrict input to ASCII-compatible characters; otherwise `false` to allow the entire Unicode set.","nodes":[{"pos":[0,107],"content":"<ph id=\"ph1\">`true`</ph> to restrict input to ASCII-compatible characters; otherwise <ph id=\"ph2\">`false`</ph> to allow the entire Unicode set.","source":"`true` to restrict input to ASCII-compatible characters; otherwise `false` to allow the entire Unicode set."}],"pos":[24088,24198],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> class using the specified mask, culture, password character, and prompt usage value.","nodes":[{"pos":[0,180],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider\"&gt;&lt;/xref&gt;</ph> class using the specified mask, culture, password character, and prompt usage value.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> class using the specified mask, culture, password character, and prompt usage value."}],"pos":[25823,26004],"yaml":true},{"content":"Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \n  \n `MaskedTextProvider(mask , culture, allowPromptAsInput, '_', passwordChar, false)`","nodes":[{"pos":[0,284],"content":"Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:","nodes":[{"content":"Use of this constructor is exactly equivalent to the following call to the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName&gt;</ph> constructor:","pos":[0,284],"source":"Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:"}]}],"pos":[26015,26393],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that represents the input mask.","nodes":[{"pos":[0,68],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that represents the input mask.","source":"A <xref href=\"System.String\"></xref> that represents the input mask."}],"pos":[26619,26688],"yaml":true},{"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> that is used to set region-sensitive separator characters.","nodes":[{"pos":[0,114],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> that is used to set region-sensitive separator characters.","source":"A <xref href=\"System.Globalization.CultureInfo\"></xref> that is used to set region-sensitive separator characters."}],"pos":[26770,26885],"yaml":true},{"content":"A <xref href=\"System.Char\"></xref> that will be displayed for characters entered into a password string.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> that will be displayed for characters entered into a password string.","source":"A <xref href=\"System.Char\"></xref> that will be displayed for characters entered into a password string."}],"pos":[26951,27056],"yaml":true},{"content":"`true` to allow the prompt character as input; otherwise `false`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">`true`</ph> to allow the prompt character as input; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` to allow the prompt character as input; otherwise `false`."}],"pos":[27131,27199],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> class using the specified mask, culture, prompt usage value, prompt character, password character, and ASCII restriction value.","nodes":[{"pos":[0,223],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider\"&gt;&lt;/xref&gt;</ph> class using the specified mask, culture, prompt usage value, prompt character, password character, and ASCII restriction value.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> class using the specified mask, culture, prompt usage value, prompt character, password character, and ASCII restriction value."}],"pos":[28950,29174],"yaml":true},{"content":"This constructor represents the most general overloaded form. The `mask` parameter must conform to the masking language defined by the <xref:System.ComponentModel.MaskedTextProvider> class, which is detailed in the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=fullName> property of the <xref:System.Windows.Forms.MaskedTextBox> class.  \n  \n Because neutral cultures cannot be queried for culture-specific information, the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor will use the <xref:System.Globalization.CultureInfo.GetCultures%2A> method to search for the first non-neutral culture to use to determine the proper separator characters.","nodes":[{"pos":[0,354],"content":"This constructor represents the most general overloaded form. The `mask` parameter must conform to the masking language defined by the <xref:System.ComponentModel.MaskedTextProvider> class, which is detailed in the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=fullName> property of the <xref:System.Windows.Forms.MaskedTextBox> class.","nodes":[{"content":"This constructor represents the most general overloaded form.","pos":[0,61]},{"content":"The <ph id=\"ph1\">`mask`</ph> parameter must conform to the masking language defined by the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider&gt;</ph> class, which is detailed in the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=fullName&gt;</ph> property of the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> class.","pos":[62,354],"source":" The `mask` parameter must conform to the masking language defined by the <xref:System.ComponentModel.MaskedTextProvider> class, which is detailed in the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=fullName> property of the <xref:System.Windows.Forms.MaskedTextBox> class."}]},{"pos":[361,684],"content":"Because neutral cultures cannot be queried for culture-specific information, the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor will use the <xref:System.Globalization.CultureInfo.GetCultures%2A> method to search for the first non-neutral culture to use to determine the proper separator characters.","nodes":[{"content":"Because neutral cultures cannot be queried for culture-specific information, the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A&gt;</ph> constructor will use the <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.GetCultures%2A&gt;</ph> method to search for the first non-neutral culture to use to determine the proper separator characters.","pos":[0,323],"source":"Because neutral cultures cannot be queried for culture-specific information, the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor will use the <xref:System.Globalization.CultureInfo.GetCultures%2A> method to search for the first non-neutral culture to use to determine the proper separator characters."}]}],"pos":[29185,29874],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> that represents the input mask.","nodes":[{"pos":[0,68],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that represents the input mask.","source":"A <xref href=\"System.String\"></xref> that represents the input mask."}],"pos":[30139,30208],"yaml":true},{"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> that is used to set region-sensitive separator characters.","nodes":[{"pos":[0,114],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> that is used to set region-sensitive separator characters.","source":"A <xref href=\"System.Globalization.CultureInfo\"></xref> that is used to set region-sensitive separator characters."}],"pos":[30290,30405],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the prompt character should be allowed as a valid input character.","nodes":[{"pos":[0,133],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that specifies whether the prompt character should be allowed as a valid input character.","source":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the prompt character should be allowed as a valid input character."}],"pos":[30480,30614],"yaml":true},{"content":"A <xref href=\"System.Char\"></xref> that will be displayed as a placeholder for user input.","nodes":[{"pos":[0,90],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> that will be displayed as a placeholder for user input.","source":"A <xref href=\"System.Char\"></xref> that will be displayed as a placeholder for user input."}],"pos":[30678,30769],"yaml":true},{"content":"A <xref href=\"System.Char\"></xref> that will be displayed for characters entered into a password string.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> that will be displayed for characters entered into a password string.","source":"A <xref href=\"System.Char\"></xref> that will be displayed for characters entered into a password string."}],"pos":[30835,30940],"yaml":true},{"content":"`true` to restrict input to ASCII-compatible characters; otherwise `false` to allow the entire Unicode set.","nodes":[{"pos":[0,107],"content":"<ph id=\"ph1\">`true`</ph> to restrict input to ASCII-compatible characters; otherwise <ph id=\"ph2\">`false`</ph> to allow the entire Unicode set.","source":"`true` to restrict input to ASCII-compatible characters; otherwise `false` to allow the entire Unicode set."}],"pos":[31012,31122],"yaml":true},{"content":"The mask parameter is `null` or <xref href=\"System.String.Empty\"></xref>.  \n  \n -or-  \n  \n The mask contains one or more non-printable characters.","nodes":[{"pos":[0,73],"content":"The mask parameter is <ph id=\"ph1\">`null`</ph> or <ph id=\"ph2\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","source":"The mask parameter is `null` or <xref href=\"System.String.Empty\"></xref>."},{"pos":[80,84],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[91,146],"content":"The mask contains one or more non-printable characters.","nodes":[{"content":"The mask contains one or more non-printable characters.","pos":[0,55]}]}],"pos":[31290,31445],"yaml":true},{"content":"Adds the characters in the specified input string to the end of the formatted string, and then outputs position and descriptive information.","nodes":[{"pos":[0,140],"content":"Adds the characters in the specified input string to the end of the formatted string, and then outputs position and descriptive information.","nodes":[{"content":"Adds the characters in the specified input string to the end of the formatted string, and then outputs position and descriptive information.","pos":[0,140]}]}],"pos":[32932,33073],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method adds the characters from the `input` string to the formatted string, starting with the first available position after <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>. This method will fail for any of the following reasons:  \n  \n-   Any of the characters in the input value, `input`, are not printable, or the input value does not match its corresponding mask element.  \n  \n-   There are not enough available edit positions in the formatted string after the last assigned position.  \n  \n If this method fails, no additions are made and the method returns `false`.  \n  \n This method functions the same as the overridden version taking a single <xref:System.String> parameter, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29>, except that it outputs additional information.","nodes":[{"pos":[0,394],"content":"The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method adds the characters from the `input` string to the formatted string, starting with the first available position after <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>. This method will fail for any of the following reasons:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29&gt;</ph> method adds the characters from the <ph id=\"ph2\">`input`</ph> string to the formatted string, starting with the first available position after <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A&gt;</ph>.","pos":[0,338],"source":"The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method adds the characters from the `input` string to the formatted string, starting with the first available position after <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>."},{"content":"This method will fail for any of the following reasons:","pos":[339,394]}]},{"pos":[404,539],"content":"Any of the characters in the input value, <ph id=\"ph1\">`input`</ph>, are not printable, or the input value does not match its corresponding mask element.","source":"Any of the characters in the input value, `input`, are not printable, or the input value does not match its corresponding mask element."},{"pos":[549,652],"content":"There are not enough available edit positions in the formatted string after the last assigned position.","nodes":[{"content":"There are not enough available edit positions in the formatted string after the last assigned position.","pos":[0,103]}]},{"pos":[659,734],"content":"If this method fails, no additions are made and the method returns <ph id=\"ph1\">`false`</ph>.","source":"If this method fails, no additions are made and the method returns `false`."},{"pos":[741,964],"content":"This method functions the same as the overridden version taking a single <xref:System.String> parameter, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29>, except that it outputs additional information.","nodes":[{"content":"This method functions the same as the overridden version taking a single <ph id=\"ph1\">&lt;xref:System.String&gt;</ph> parameter, <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29&gt;</ph>, except that it outputs additional information.","pos":[0,223],"source":"This method functions the same as the overridden version taking a single <xref:System.String> parameter, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29>, except that it outputs additional information."}]}],"pos":[33084,34059],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> containing character values to be appended to the formatted string.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing character values to be appended to the formatted string.","source":"A <xref href=\"System.String\"></xref> containing character values to be appended to the formatted string."}],"pos":[34272,34377],"yaml":true},{"content":"The zero-based position in the formatted string where the attempt was made to add the character. An output parameter.","nodes":[{"pos":[0,117],"content":"The zero-based position in the formatted string where the attempt was made to add the character. An output parameter.","nodes":[{"content":"The zero-based position in the formatted string where the attempt was made to add the character. An output parameter.","pos":[0,117],"nodes":[{"content":"The zero-based position in the formatted string where the attempt was made to add the character.","pos":[0,96]},{"content":"An output parameter.","pos":[97,117]}]}]}],"pos":[34444,34562],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the operation. An output parameter.","nodes":[{"pos":[0,141],"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the operation. An output parameter.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextResultHint\"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the operation.","pos":[0,120],"source":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the operation."},{"content":"An output parameter.","pos":[121,141]}]}],"pos":[34657,34799],"yaml":true},{"content":"`true` if all the characters from the input string were added successfully; otherwise `false` to indicate that no characters were added.","nodes":[{"pos":[0,136],"content":"<ph id=\"ph1\">`true`</ph> if all the characters from the input string were added successfully; otherwise <ph id=\"ph2\">`false`</ph> to indicate that no characters were added.","source":"`true` if all the characters from the input string were added successfully; otherwise `false` to indicate that no characters were added."}],"pos":[34857,34996],"yaml":true},{"content":"Adds the specified input character to the end of the formatted string, and then outputs position and descriptive information.","nodes":[{"pos":[0,125],"content":"Adds the specified input character to the end of the formatted string, and then outputs position and descriptive information.","nodes":[{"content":"Adds the specified input character to the end of the formatted string, and then outputs position and descriptive information.","pos":[0,125]}]}],"pos":[36546,36672],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method attempts to add the `input` character value to the first available position in the formatted string after the position that was last assigned, which is represented by the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property. This method will fail if all available positions are before the last assigned position. This method will fail for any of the following reasons:  \n  \n-   The input value, `input`, is not printable, or it does not match its corresponding mask element.  \n  \n-   There are zero available edit positions in the formatted string, or there are no available edit positions after the last assigned position.  \n  \n This method functions the same as the overridden version taking a single <xref:System.Char> parameter, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29>, except that it outputs additional information.","nodes":[{"pos":[0,542],"content":"The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method attempts to add the `input` character value to the first available position in the formatted string after the position that was last assigned, which is represented by the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property. This method will fail if all available positions are before the last assigned position. This method will fail for any of the following reasons:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29&gt;</ph> method attempts to add the <ph id=\"ph2\">`input`</ph> character value to the first available position in the formatted string after the position that was last assigned, which is represented by the <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A&gt;</ph> property.","pos":[0,398],"source":"The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method attempts to add the `input` character value to the first available position in the formatted string after the position that was last assigned, which is represented by the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property."},{"content":"This method will fail if all available positions are before the last assigned position.","pos":[399,486]},{"content":"This method will fail for any of the following reasons:","pos":[487,542]}]},{"pos":[552,648],"content":"The input value, <ph id=\"ph1\">`input`</ph>, is not printable, or it does not match its corresponding mask element.","source":"The input value, `input`, is not printable, or it does not match its corresponding mask element."},{"pos":[658,797],"content":"There are zero available edit positions in the formatted string, or there are no available edit positions after the last assigned position.","nodes":[{"content":"There are zero available edit positions in the formatted string, or there are no available edit positions after the last assigned position.","pos":[0,139]}]},{"pos":[804,1023],"content":"This method functions the same as the overridden version taking a single <xref:System.Char> parameter, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29>, except that it outputs additional information.","nodes":[{"content":"This method functions the same as the overridden version taking a single <ph id=\"ph1\">&lt;xref:System.Char&gt;</ph> parameter, <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29&gt;</ph>, except that it outputs additional information.","pos":[0,219],"source":"This method functions the same as the overridden version taking a single <xref:System.Char> parameter, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29>, except that it outputs additional information."}]}],"pos":[36683,37715],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Char\"></xref> value to be appended to the formatted string.","nodes":[{"pos":[0,80],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> value to be appended to the formatted string.","source":"A <xref href=\"System.Char\"></xref> value to be appended to the formatted string."}],"pos":[37924,38005],"yaml":true},{"content":"The zero-based position in the formatted string where the attempt was made to add the character. An output parameter.","nodes":[{"pos":[0,117],"content":"The zero-based position in the formatted string where the attempt was made to add the character. An output parameter.","nodes":[{"content":"The zero-based position in the formatted string where the attempt was made to add the character. An output parameter.","pos":[0,117],"nodes":[{"content":"The zero-based position in the formatted string where the attempt was made to add the character.","pos":[0,96]},{"content":"An output parameter.","pos":[97,117]}]}]}],"pos":[38072,38190],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the operation. An output parameter.","nodes":[{"pos":[0,141],"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the operation. An output parameter.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextResultHint\"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the operation.","pos":[0,120],"source":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the operation."},{"content":"An output parameter.","pos":[121,141]}]}],"pos":[38285,38427],"yaml":true},{"content":"`true` if the input character was added successfully; otherwise `false`.","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">`true`</ph> if the input character was added successfully; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the input character was added successfully; otherwise `false`."}],"pos":[38485,38560],"yaml":true},{"content":"Adds the specified input character to the end of the formatted string.","nodes":[{"pos":[0,70],"content":"Adds the specified input character to the end of the formatted string.","nodes":[{"content":"Adds the specified input character to the end of the formatted string.","pos":[0,70]}]}],"pos":[39849,39920],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29> method adds the `input` character value to the first available position in the formatted string after the position that was last assigned, which is represented by the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property. This method will fail for any of the following reasons:  \n  \n-   The input value, `input`, is not printable, or it does not match its corresponding mask element.  \n  \n-   There are zero available edit positions in the formatted string, or there are no available edit positions after the last assigned position.","nodes":[{"pos":[0,377],"content":"The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29> method adds the `input` character value to the first available position in the formatted string after the position that was last assigned, which is represented by the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property. This method will fail for any of the following reasons:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29&gt;</ph> method adds the <ph id=\"ph2\">`input`</ph> character value to the first available position in the formatted string after the position that was last assigned, which is represented by the <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A&gt;</ph> property.","pos":[0,321],"source":"The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29> method adds the `input` character value to the first available position in the formatted string after the position that was last assigned, which is represented by the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property."},{"content":"This method will fail for any of the following reasons:","pos":[322,377]}]},{"pos":[387,483],"content":"The input value, <ph id=\"ph1\">`input`</ph>, is not printable, or it does not match its corresponding mask element.","source":"The input value, `input`, is not printable, or it does not match its corresponding mask element."},{"pos":[493,632],"content":"There are zero available edit positions in the formatted string, or there are no available edit positions after the last assigned position.","nodes":[{"content":"There are zero available edit positions in the formatted string, or there are no available edit positions after the last assigned position.","pos":[0,139]}]}],"pos":[39931,40570],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Char\"></xref> value to be appended to the formatted string.","nodes":[{"pos":[0,80],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> value to be appended to the formatted string.","source":"A <xref href=\"System.Char\"></xref> value to be appended to the formatted string."}],"pos":[40698,40779],"yaml":true},{"content":"`true` if the input character was added successfully; otherwise `false`.","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">`true`</ph> if the input character was added successfully; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the input character was added successfully; otherwise `false`."}],"pos":[40837,40912],"yaml":true},{"content":"Adds the characters in the specified input string to the end of the formatted string.","nodes":[{"pos":[0,85],"content":"Adds the characters in the specified input string to the end of the formatted string.","nodes":[{"content":"Adds the characters in the specified input string to the end of the formatted string.","pos":[0,85]}]}],"pos":[42213,42299],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29> method adds the characters from the `input` string to the formatted string, starting with the first available position after <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>. This method will fail for any of the following reasons:  \n  \n-   Any of the characters in the input value, `input`, are not printable, or the input value does not match its corresponding mask element.  \n  \n-   There are not enough available edit positions in the formatted string after the last assigned position.  \n  \n If this method fails, no additions are made and the method returns `false`.","nodes":[{"pos":[0,328],"content":"The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29> method adds the characters from the `input` string to the formatted string, starting with the first available position after <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>. This method will fail for any of the following reasons:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29&gt;</ph> method adds the characters from the <ph id=\"ph2\">`input`</ph> string to the formatted string, starting with the first available position after <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A&gt;</ph>.","pos":[0,272],"source":"The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29> method adds the characters from the `input` string to the formatted string, starting with the first available position after <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>."},{"content":"This method will fail for any of the following reasons:","pos":[273,328]}]},{"pos":[338,473],"content":"Any of the characters in the input value, <ph id=\"ph1\">`input`</ph>, are not printable, or the input value does not match its corresponding mask element.","source":"Any of the characters in the input value, `input`, are not printable, or the input value does not match its corresponding mask element."},{"pos":[483,586],"content":"There are not enough available edit positions in the formatted string after the last assigned position.","nodes":[{"content":"There are not enough available edit positions in the formatted string after the last assigned position.","pos":[0,103]}]},{"pos":[593,668],"content":"If this method fails, no additions are made and the method returns <ph id=\"ph1\">`false`</ph>.","source":"If this method fails, no additions are made and the method returns `false`."}],"pos":[42310,42987],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> containing character values to be appended to the formatted string.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing character values to be appended to the formatted string.","source":"A <xref href=\"System.String\"></xref> containing character values to be appended to the formatted string."}],"pos":[43119,43224],"yaml":true},{"content":"`true` if all the characters from the input string were added successfully; otherwise `false` to indicate that no characters were added.","nodes":[{"pos":[0,136],"content":"<ph id=\"ph1\">`true`</ph> if all the characters from the input string were added successfully; otherwise <ph id=\"ph2\">`false`</ph> to indicate that no characters were added.","source":"`true` if all the characters from the input string were added successfully; otherwise `false` to indicate that no characters were added."}],"pos":[43282,43421],"yaml":true},{"content":"The <code>input</code> parameter is `null`.","nodes":[{"pos":[0,43],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>input</code> parameter is `null`."}],"pos":[43595,43639],"yaml":true},{"content":"Gets a value indicating whether the prompt character should be treated as a valid input character or not.","nodes":[{"pos":[0,105],"content":"Gets a value indicating whether the prompt character should be treated as a valid input character or not.","nodes":[{"content":"Gets a value indicating whether the prompt character should be treated as a valid input character or not.","pos":[0,105]}]}],"pos":[44888,44994],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property's value is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.  \n  \n Even when <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> is `true`, the prompt character must be valid for the current location in the mask in order to be accepted.","nodes":[{"pos":[0,176],"content":"The <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property's value is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A&gt;</ph> property's value is set in the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A&gt;</ph> constructor.","pos":[0,176],"source":"The <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property's value is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor."}]},{"pos":[183,370],"content":"Even when <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, the prompt character must be valid for the current location in the mask in order to be accepted.","source":"Even when <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> is `true`, the prompt character must be valid for the current location in the mask in order to be accepted."}],"pos":[45005,45380],"yaml":true,"extradata":"MT"},{"content":"`true` if the user can enter <xref href=\"System.ComponentModel.MaskedTextProvider.PromptChar\"></xref> into the control; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,162],"content":"`true` if the user can enter <xref href=\"System.ComponentModel.MaskedTextProvider.PromptChar\"></xref> into the control; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the user can enter <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider.PromptChar\"&gt;&lt;/xref&gt;</ph> into the control; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,139],"source":"`true` if the user can enter <xref href=\"System.ComponentModel.MaskedTextProvider.PromptChar\"></xref> into the control; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[140,162],"source":" The default is `true`."}]}],"pos":[45501,45666],"yaml":true},{"content":"Gets a value indicating whether the mask accepts characters outside of the ASCII character set.","nodes":[{"pos":[0,95],"content":"Gets a value indicating whether the mask accepts characters outside of the ASCII character set.","nodes":[{"content":"Gets a value indicating whether the mask accepts characters outside of the ASCII character set.","pos":[0,95]}]}],"pos":[46951,47047],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> property's value is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.  \n  \n If `true`, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> restricts user input to the ASCII character set.","nodes":[{"pos":[0,167],"content":"The <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> property's value is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A&gt;</ph> property's value is set in the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A&gt;</ph> constructor.","pos":[0,167],"source":"The <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> property's value is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor."}]},{"pos":[174,294],"content":"If <ph id=\"ph1\">`true`</ph>, <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A&gt;</ph> restricts user input to the ASCII character set.","source":"If `true`, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> restricts user input to the ASCII character set."}],"pos":[47058,47357],"yaml":true,"extradata":"MT"},{"content":"`true` if only ASCII is accepted; `false` if <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> can accept any arbitrary Unicode character. The default is `false`.","nodes":[{"pos":[0,174],"content":"`true` if only ASCII is accepted; `false` if <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> can accept any arbitrary Unicode character. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if only ASCII is accepted; <ph id=\"ph2\">`false`</ph> if <ph id=\"ph3\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider\"&gt;&lt;/xref&gt;</ph> can accept any arbitrary Unicode character.","pos":[0,150],"source":"`true` if only ASCII is accepted; `false` if <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> can accept any arbitrary Unicode character."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[151,174],"source":" The default is `false`."}]}],"pos":[47469,47646],"yaml":true},{"content":"Gets the number of editable character positions that have already been successfully assigned an input value.","nodes":[{"pos":[0,108],"content":"Gets the number of editable character positions that have already been successfully assigned an input value.","nodes":[{"content":"Gets the number of editable character positions that have already been successfully assigned an input value.","pos":[0,108]}]}],"pos":[49018,49127],"yaml":true},{"content":"The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, should equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties.","nodes":[{"pos":[0,350],"content":"The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, should equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties.","nodes":[{"content":"The total number of editable character positions, represented by the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A&gt;</ph> property, should equal the sum of the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A&gt;</ph> and the <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A&gt;</ph> properties.","pos":[0,350],"source":"The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, should equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties."}]}],"pos":[49138,49489],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int32\"></xref> containing the number of editable character positions in the input mask that have already been assigned a character value in the formatted string.","nodes":[{"pos":[0,183],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> containing the number of editable character positions in the input mask that have already been assigned a character value in the formatted string.","source":"An <xref href=\"System.Int32\"></xref> containing the number of editable character positions in the input mask that have already been assigned a character value in the formatted string."}],"pos":[49614,49798],"yaml":true},{"content":"Gets the number of editable character positions in the input mask that have not yet been assigned an input value.","nodes":[{"pos":[0,113],"content":"Gets the number of editable character positions in the input mask that have not yet been assigned an input value.","nodes":[{"content":"Gets the number of editable character positions in the input mask that have not yet been assigned an input value.","pos":[0,113]}]}],"pos":[51192,51306],"yaml":true},{"content":"The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, should equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties.","nodes":[{"pos":[0,350],"content":"The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, should equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties.","nodes":[{"content":"The total number of editable character positions, represented by the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A&gt;</ph> property, should equal the sum of the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A&gt;</ph> and the <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A&gt;</ph> properties.","pos":[0,350],"source":"The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, should equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties."}]}],"pos":[51317,51668],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int32\"></xref> containing the number of editable character positions that not yet been assigned a character value.","nodes":[{"pos":[0,136],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> containing the number of editable character positions that not yet been assigned a character value.","source":"An <xref href=\"System.Int32\"></xref> containing the number of editable character positions that not yet been assigned a character value."}],"pos":[51794,51931],"yaml":true},{"content":"Clears all the editable input characters from the formatted string, replacing them with prompt characters.","nodes":[{"pos":[0,106],"content":"Clears all the editable input characters from the formatted string, replacing them with prompt characters.","nodes":[{"content":"Clears all the editable input characters from the formatted string, replacing them with prompt characters.","pos":[0,106]}]}],"pos":[53204,53311],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.Clear> method reinitializes the formatted string, inserting the prompt character into all editable positions.","nodes":[{"pos":[0,160],"content":"The <xref:System.ComponentModel.MaskedTextProvider.Clear> method reinitializes the formatted string, inserting the prompt character into all editable positions.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Clear&gt;</ph> method reinitializes the formatted string, inserting the prompt character into all editable positions.","pos":[0,160],"source":"The <xref:System.ComponentModel.MaskedTextProvider.Clear> method reinitializes the formatted string, inserting the prompt character into all editable positions."}]}],"pos":[53322,53483],"yaml":true,"extradata":"MT"},{"content":"Clears all the editable input characters from the formatted string, replacing them with prompt characters, and then outputs descriptive information.","nodes":[{"pos":[0,148],"content":"Clears all the editable input characters from the formatted string, replacing them with prompt characters, and then outputs descriptive information.","nodes":[{"content":"Clears all the editable input characters from the formatted string, replacing them with prompt characters, and then outputs descriptive information.","pos":[0,148]}]}],"pos":[54994,55143],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.Clear%28System.ComponentModel.MaskedTextResultHint%40%29> method reinitializes the formatted string, inserting the prompt character into all editable positions. It functions equivalently to the overridden version that takes no parameters, <xref:System.ComponentModel.MaskedTextProvider.Clear>, except it outputs additional information.","nodes":[{"pos":[0,386],"content":"The <xref:System.ComponentModel.MaskedTextProvider.Clear%28System.ComponentModel.MaskedTextResultHint%40%29> method reinitializes the formatted string, inserting the prompt character into all editable positions. It functions equivalently to the overridden version that takes no parameters, <xref:System.ComponentModel.MaskedTextProvider.Clear>, except it outputs additional information.","nodes":[{"content":"The <xref:System.ComponentModel.MaskedTextProvider.Clear%28System.ComponentModel.MaskedTextResultHint%40%29> method reinitializes the formatted string, inserting the prompt character into all editable positions. It functions equivalently to the overridden version that takes no parameters, <xref:System.ComponentModel.MaskedTextProvider.Clear>, except it outputs additional information.","pos":[0,386],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Clear%28System.ComponentModel.MaskedTextResultHint%40%29&gt;</ph> method reinitializes the formatted string, inserting the prompt character into all editable positions.","pos":[0,211],"source":"The <xref:System.ComponentModel.MaskedTextProvider.Clear%28System.ComponentModel.MaskedTextResultHint%40%29> method reinitializes the formatted string, inserting the prompt character into all editable positions."},{"content":"It functions equivalently to the overridden version that takes no parameters, <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Clear&gt;</ph>, except it outputs additional information.","pos":[212,386],"source":" It functions equivalently to the overridden version that takes no parameters, <xref:System.ComponentModel.MaskedTextProvider.Clear>, except it outputs additional information."}]}]}],"pos":[55154,55541],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the operation. An output parameter.","nodes":[{"pos":[0,141],"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the operation. An output parameter.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextResultHint\"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the operation.","pos":[0,120],"source":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the operation."},{"content":"An output parameter.","pos":[121,141]}]}],"pos":[55754,55896],"yaml":true},{"content":"Creates a copy of the current <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref>.","nodes":[{"pos":[0,92],"content":"Creates a copy of the current <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider\"&gt;&lt;/xref&gt;</ph>.","source":"Creates a copy of the current <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref>."}],"pos":[57148,57241],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.Clone%2A> method returns a new copy of the current <xref:System.ComponentModel.MaskedTextProvider>.","nodes":[{"pos":[0,150],"content":"The <xref:System.ComponentModel.MaskedTextProvider.Clone%2A> method returns a new copy of the current <xref:System.ComponentModel.MaskedTextProvider>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Clone%2A&gt;</ph> method returns a new copy of the current <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider&gt;</ph>.","pos":[0,150],"source":"The <xref:System.ComponentModel.MaskedTextProvider.Clone%2A> method returns a new copy of the current <xref:System.ComponentModel.MaskedTextProvider>."}]}],"pos":[57252,57403],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> object this method creates, cast as an object.","nodes":[{"pos":[0,112],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider\"&gt;&lt;/xref&gt;</ph> object this method creates, cast as an object.","source":"The <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> object this method creates, cast as an object."}],"pos":[57526,57639],"yaml":true},{"content":"Gets the culture that determines the value of the localizable separators and placeholders in the input mask.","nodes":[{"pos":[0,108],"content":"Gets the culture that determines the value of the localizable separators and placeholders in the input mask.","nodes":[{"content":"Gets the culture that determines the value of the localizable separators and placeholders in the input mask.","pos":[0,108]}]}],"pos":[58899,59008],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.Culture%2A> property is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.","nodes":[{"pos":[0,157],"content":"The <xref:System.ComponentModel.MaskedTextProvider.Culture%2A> property is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Culture%2A&gt;</ph> property is set in the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A&gt;</ph> constructor.","pos":[0,157],"source":"The <xref:System.ComponentModel.MaskedTextProvider.Culture%2A> property is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor."}]}],"pos":[59019,59177],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> containing the culture information associated with the input mask.","nodes":[{"pos":[0,122],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> containing the culture information associated with the input mask.","source":"A <xref href=\"System.Globalization.CultureInfo\"></xref> containing the culture information associated with the input mask."}],"pos":[59333,59456],"yaml":true},{"content":"Gets the default password character used obscure user input.","nodes":[{"pos":[0,60],"content":"Gets the default password character used obscure user input.","nodes":[{"content":"Gets the default password character used obscure user input.","pos":[0,60]}]}],"pos":[60790,60851],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> property is defined in the <xref:System.ComponentModel.MaskedTextProvider> class to be the asterisk character (*).","nodes":[{"pos":[0,189],"content":"The <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> property is defined in the <xref:System.ComponentModel.MaskedTextProvider> class to be the asterisk character (*).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A&gt;</ph> property is defined in the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider&gt;</ph> class to be the asterisk character (*).","pos":[0,189],"source":"The <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> property is defined in the <xref:System.ComponentModel.MaskedTextProvider> class to be the asterisk character (*)."}]}],"pos":[60862,61052],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Char\"></xref> that represents the default password character.","nodes":[{"pos":[0,82],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> that represents the default password character.","source":"A <xref href=\"System.Char\"></xref> that represents the default password character."}],"pos":[61178,61261],"yaml":true},{"content":"Gets the number of editable positions in the formatted string.","nodes":[{"pos":[0,62],"content":"Gets the number of editable positions in the formatted string.","nodes":[{"content":"Gets the number of editable positions in the formatted string.","pos":[0,62]}]}],"pos":[62595,62658],"yaml":true},{"content":"The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, must equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties. This value includes both the required and the optional editable characters.","nodes":[{"pos":[0,424],"content":"The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, must equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties. This value includes both the required and the optional editable characters.","nodes":[{"content":"The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, must equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties. This value includes both the required and the optional editable characters.","pos":[0,424],"nodes":[{"content":"The total number of editable character positions, represented by the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A&gt;</ph> property, must equal the sum of the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A&gt;</ph> and the <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A&gt;</ph> properties.","pos":[0,348],"source":"The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, must equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties."},{"content":"This value includes both the required and the optional editable characters.","pos":[349,424]}]}]}],"pos":[62669,63094],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int32\"></xref> containing the number of editable positions in the formatted string.","nodes":[{"pos":[0,105],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> containing the number of editable positions in the formatted string.","source":"An <xref href=\"System.Int32\"></xref> containing the number of editable positions in the formatted string."}],"pos":[63211,63317],"yaml":true},{"content":"Gets a newly created enumerator for the editable positions in the formatted string.","nodes":[{"pos":[0,83],"content":"Gets a newly created enumerator for the editable positions in the formatted string.","nodes":[{"content":"Gets a newly created enumerator for the editable positions in the formatted string.","pos":[0,83]}]}],"pos":[64625,64709],"yaml":true},{"content":"On every access of the <xref:System.ComponentModel.MaskedTextProvider.EditPositions%2A> property, a temporary collection of editable positions is created that the retrieved <xref:System.Collections.IEnumerator> operates on.  \n  \n This collection is read-only.","nodes":[{"pos":[0,223],"content":"On every access of the <xref:System.ComponentModel.MaskedTextProvider.EditPositions%2A> property, a temporary collection of editable positions is created that the retrieved <xref:System.Collections.IEnumerator> operates on.","nodes":[{"content":"On every access of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.EditPositions%2A&gt;</ph> property, a temporary collection of editable positions is created that the retrieved <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator&gt;</ph> operates on.","pos":[0,223],"source":"On every access of the <xref:System.ComponentModel.MaskedTextProvider.EditPositions%2A> property, a temporary collection of editable positions is created that the retrieved <xref:System.Collections.IEnumerator> operates on."}]},{"pos":[230,259],"content":"This collection is read-only.","nodes":[{"content":"This collection is read-only.","pos":[0,29]}]}],"pos":[64720,64984],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.IEnumerator\"></xref> that supports enumeration over the editable positions in the formatted string.","nodes":[{"pos":[0,133],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph> that supports enumeration over the editable positions in the formatted string.","source":"An <xref href=\"System.Collections.IEnumerator\"></xref> that supports enumeration over the editable positions in the formatted string."}],"pos":[65142,65276],"yaml":true},{"content":"Returns the position of the first assigned editable position after the specified position using the specified search direction.","nodes":[{"pos":[0,127],"content":"Returns the position of the first assigned editable position after the specified position using the specified search direction.","nodes":[{"content":"Returns the position of the first assigned editable position after the specified position using the specified search direction.","pos":[0,127]}]}],"pos":[66803,66931],"yaml":true},{"content":"The formatted string is composed of editable characters and literals copied from the mask. The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.  \n  \n The <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> method is used to search for the first assigned character after a specified position and search direction. The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.  \n  \n The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> methods are complements of this method.","nodes":[{"pos":[0,285],"content":"The formatted string is composed of editable characters and literals copied from the mask. The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.","nodes":[{"content":"The formatted string is composed of editable characters and literals copied from the mask. The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.","pos":[0,285],"nodes":[{"content":"The formatted string is composed of editable characters and literals copied from the mask.","pos":[0,90]},{"content":"The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.","pos":[91,285]}]}]},{"pos":[292,653],"content":"The <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> method is used to search for the first assigned character after a specified position and search direction. The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.","nodes":[{"content":"The <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> method is used to search for the first assigned character after a specified position and search direction. The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.","pos":[0,361],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A&gt;</ph> method is used to search for the first assigned character after a specified position and search direction.","pos":[0,190],"source":"The <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> method is used to search for the first assigned character after a specified position and search direction."},{"content":"The result can subsequently be passed as a parameter to the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Item%2A&gt;</ph> indexer to obtain the assigned value at this position.","pos":[191,361],"source":" The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position."}]}]},{"pos":[660,864],"content":"The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> methods are complements of this method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A&gt;</ph> methods are complements of this method.","pos":[0,204],"source":"The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> methods are complements of this method."}]}],"pos":[66942,67813],"yaml":true,"extradata":"MT"},{"content":"The zero-based position in the formatted string to start the search.","nodes":[{"pos":[0,68],"content":"The zero-based position in the formatted string to start the search.","nodes":[{"content":"The zero-based position in the formatted string to start the search.","pos":[0,68]}]}],"pos":[67987,68056],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> indicating the search direction; either `true` to search forward or `false` to search backward.","nodes":[{"pos":[0,133],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> indicating the search direction; either <ph id=\"ph2\">`true`</ph> to search forward or <ph id=\"ph3\">`false`</ph> to search backward.","source":"A <xref href=\"System.Boolean\"></xref> indicating the search direction; either `true` to search forward or `false` to search backward."}],"pos":[68122,68256],"yaml":true},{"content":"If successful, an <xref href=\"System.Int32\"></xref> representing the zero-based position of the first assigned editable position encountered; otherwise <xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"></xref>.","nodes":[{"pos":[0,227],"content":"If successful, an <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> representing the zero-based position of the first assigned editable position encountered; otherwise <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"&gt;&lt;/xref&gt;</ph>.","source":"If successful, an <xref href=\"System.Int32\"></xref> representing the zero-based position of the first assigned editable position encountered; otherwise <xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"></xref>."}],"pos":[68312,68540],"yaml":true},{"content":"Returns the position of the first assigned editable position between the specified positions using the specified search direction.","nodes":[{"pos":[0,130],"content":"Returns the position of the first assigned editable position between the specified positions using the specified search direction.","nodes":[{"content":"Returns the position of the first assigned editable position between the specified positions using the specified search direction.","pos":[0,130]}]}],"pos":[70160,70291],"yaml":true},{"content":"The formatted string is composed of editable characters and literals copied from the mask. The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.  \n  \n The <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> method is used to search for the first assigned character between two specified positions, inclusive, using the specified search direction. The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.  \n  \n The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> methods are complements of this method.","nodes":[{"pos":[0,285],"content":"The formatted string is composed of editable characters and literals copied from the mask. The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.","nodes":[{"content":"The formatted string is composed of editable characters and literals copied from the mask. The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.","pos":[0,285],"nodes":[{"content":"The formatted string is composed of editable characters and literals copied from the mask.","pos":[0,90]},{"content":"The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.","pos":[91,285]}]}]},{"pos":[292,689],"content":"The <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> method is used to search for the first assigned character between two specified positions, inclusive, using the specified search direction. The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.","nodes":[{"content":"The <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> method is used to search for the first assigned character between two specified positions, inclusive, using the specified search direction. The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.","pos":[0,397],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A&gt;</ph> method is used to search for the first assigned character between two specified positions, inclusive, using the specified search direction.","pos":[0,226],"source":"The <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> method is used to search for the first assigned character between two specified positions, inclusive, using the specified search direction."},{"content":"The result can subsequently be passed as a parameter to the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Item%2A&gt;</ph> indexer to obtain the assigned value at this position.","pos":[227,397],"source":" The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position."}]}]},{"pos":[696,906],"content":"The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> methods are complements of this method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A&gt;</ph> methods are complements of this method.","pos":[0,210],"source":"The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> methods are complements of this method."}]}],"pos":[70302,71215],"yaml":true,"extradata":"MT"},{"content":"The zero-based position in the formatted string where the search starts.","nodes":[{"pos":[0,72],"content":"The zero-based position in the formatted string where the search starts.","nodes":[{"content":"The zero-based position in the formatted string where the search starts.","pos":[0,72]}]}],"pos":[71419,71492],"yaml":true},{"content":"The zero-based position in the formatted string where the search ends.","nodes":[{"pos":[0,70],"content":"The zero-based position in the formatted string where the search ends.","nodes":[{"content":"The zero-based position in the formatted string where the search ends.","pos":[0,70]}]}],"pos":[71558,71629],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> indicating the search direction; either `true` to search forward or `false` to search backward.","nodes":[{"pos":[0,133],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> indicating the search direction; either <ph id=\"ph2\">`true`</ph> to search forward or <ph id=\"ph3\">`false`</ph> to search backward.","source":"A <xref href=\"System.Boolean\"></xref> indicating the search direction; either `true` to search forward or `false` to search backward."}],"pos":[71695,71829],"yaml":true},{"content":"If successful, an <xref href=\"System.Int32\"></xref> representing the zero-based position of the first assigned editable position encountered; otherwise <xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"></xref>.","nodes":[{"pos":[0,227],"content":"If successful, an <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> representing the zero-based position of the first assigned editable position encountered; otherwise <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"&gt;&lt;/xref&gt;</ph>.","source":"If successful, an <xref href=\"System.Int32\"></xref> representing the zero-based position of the first assigned editable position encountered; otherwise <xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"></xref>."}],"pos":[71885,72113],"yaml":true},{"content":"Returns the position of the first editable position after the specified position using the specified search direction.","nodes":[{"pos":[0,118],"content":"Returns the position of the first editable position after the specified position using the specified search direction.","nodes":[{"content":"Returns the position of the first editable position after the specified position using the specified search direction.","pos":[0,118]}]}],"pos":[73610,73729],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> method is used to search for the next assigned or unassigned editable position in the formatted string after the specified position.  \n  \n The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> method is the complement of this method.","nodes":[{"pos":[0,208],"content":"The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> method is used to search for the next assigned or unassigned editable position in the formatted string after the specified position.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A&gt;</ph> method is used to search for the next assigned or unassigned editable position in the formatted string after the specified position.","pos":[0,208],"source":"The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> method is used to search for the next assigned or unassigned editable position in the formatted string after the specified position."}]},{"pos":[215,334],"content":"The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> method is the complement of this method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A&gt;</ph> method is the complement of this method.","pos":[0,119],"source":"The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> method is the complement of this method."}]}],"pos":[73740,74079],"yaml":true,"extradata":"MT"},{"content":"The zero-based position in the formatted string to start the search.","nodes":[{"pos":[0,68],"content":"The zero-based position in the formatted string to start the search.","nodes":[{"content":"The zero-based position in the formatted string to start the search.","pos":[0,68]}]}],"pos":[74245,74314],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> indicating the search direction; either `true` to search forward or `false` to search backward.","nodes":[{"pos":[0,133],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> indicating the search direction; either <ph id=\"ph2\">`true`</ph> to search forward or <ph id=\"ph3\">`false`</ph> to search backward.","source":"A <xref href=\"System.Boolean\"></xref> indicating the search direction; either `true` to search forward or `false` to search backward."}],"pos":[74380,74514],"yaml":true},{"content":"If successful, an <xref href=\"System.Int32\"></xref> representing the zero-based position of the first editable position encountered; otherwise <xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"></xref>.","nodes":[{"pos":[0,218],"content":"If successful, an <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> representing the zero-based position of the first editable position encountered; otherwise <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"&gt;&lt;/xref&gt;</ph>.","source":"If successful, an <xref href=\"System.Int32\"></xref> representing the zero-based position of the first editable position encountered; otherwise <xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"></xref>."}],"pos":[74570,74789],"yaml":true},{"content":"Returns the position of the first editable position between the specified positions using the specified search direction.","nodes":[{"pos":[0,121],"content":"Returns the position of the first editable position between the specified positions using the specified search direction.","nodes":[{"content":"Returns the position of the first editable position between the specified positions using the specified search direction.","pos":[0,121]}]}],"pos":[76353,76475],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> method is used to search for the first editable character between two specified positions, inclusive, using the specified search direction. The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.  \n  \n The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> method is the complement of this method.","nodes":[{"pos":[0,389],"content":"The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> method is used to search for the first editable character between two specified positions, inclusive, using the specified search direction. The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.","nodes":[{"content":"The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> method is used to search for the first editable character between two specified positions, inclusive, using the specified search direction. The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.","pos":[0,389],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A&gt;</ph> method is used to search for the first editable character between two specified positions, inclusive, using the specified search direction.","pos":[0,218],"source":"The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> method is used to search for the first editable character between two specified positions, inclusive, using the specified search direction."},{"content":"The result can subsequently be passed as a parameter to the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Item%2A&gt;</ph> indexer to obtain the assigned value at this position.","pos":[219,389],"source":" The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position."}]}]},{"pos":[396,518],"content":"The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> method is the complement of this method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A&gt;</ph> method is the complement of this method.","pos":[0,122],"source":"The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> method is the complement of this method."}]}],"pos":[76486,77009],"yaml":true,"extradata":"MT"},{"content":"The zero-based position in the formatted string where the search starts.","nodes":[{"pos":[0,72],"content":"The zero-based position in the formatted string where the search starts.","nodes":[{"content":"The zero-based position in the formatted string where the search starts.","pos":[0,72]}]}],"pos":[77205,77278],"yaml":true},{"content":"The zero-based position in the formatted string where the search ends.","nodes":[{"pos":[0,70],"content":"The zero-based position in the formatted string where the search ends.","nodes":[{"content":"The zero-based position in the formatted string where the search ends.","pos":[0,70]}]}],"pos":[77344,77415],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> indicating the search direction; either `true` to search forward or `false` to search backward.","nodes":[{"pos":[0,133],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> indicating the search direction; either <ph id=\"ph2\">`true`</ph> to search forward or <ph id=\"ph3\">`false`</ph> to search backward.","source":"A <xref href=\"System.Boolean\"></xref> indicating the search direction; either `true` to search forward or `false` to search backward."}],"pos":[77481,77615],"yaml":true},{"content":"If successful, an <xref href=\"System.Int32\"></xref> representing the zero-based position of the first editable position encountered; otherwise <xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"></xref>.","nodes":[{"pos":[0,218],"content":"If successful, an <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> representing the zero-based position of the first editable position encountered; otherwise <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"&gt;&lt;/xref&gt;</ph>.","source":"If successful, an <xref href=\"System.Int32\"></xref> representing the zero-based position of the first editable position encountered; otherwise <xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"></xref>."}],"pos":[77671,77890],"yaml":true},{"content":"Returns the position of the first non-editable position after the specified position using the specified search direction.","nodes":[{"pos":[0,122],"content":"Returns the position of the first non-editable position after the specified position using the specified search direction.","nodes":[{"content":"Returns the position of the first non-editable position after the specified position using the specified search direction.","pos":[0,122]}]}],"pos":[79397,79520],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> method is used to search for the next literal character in the formatted string after the specified position. The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the literal value at this position.  \n  \n The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> method is the complement of this method.","nodes":[{"pos":[0,358],"content":"The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> method is used to search for the next literal character in the formatted string after the specified position. The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the literal value at this position.","nodes":[{"content":"The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> method is used to search for the next literal character in the formatted string after the specified position. The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the literal value at this position.","pos":[0,358],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A&gt;</ph> method is used to search for the next literal character in the formatted string after the specified position.","pos":[0,188],"source":"The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> method is used to search for the next literal character in the formatted string after the specified position."},{"content":"The result can subsequently be passed as a parameter to the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Item%2A&gt;</ph> indexer to obtain the literal value at this position.","pos":[189,358],"source":" The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the literal value at this position."}]}]},{"pos":[365,481],"content":"The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> method is the complement of this method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A&gt;</ph> method is the complement of this method.","pos":[0,116],"source":"The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> method is the complement of this method."}]}],"pos":[79531,80017],"yaml":true,"extradata":"MT"},{"content":"The zero-based position in the formatted string to start the search.","nodes":[{"pos":[0,68],"content":"The zero-based position in the formatted string to start the search.","nodes":[{"content":"The zero-based position in the formatted string to start the search.","pos":[0,68]}]}],"pos":[80186,80255],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> indicating the search direction; either `true` to search forward or `false` to search backward.","nodes":[{"pos":[0,133],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> indicating the search direction; either <ph id=\"ph2\">`true`</ph> to search forward or <ph id=\"ph3\">`false`</ph> to search backward.","source":"A <xref href=\"System.Boolean\"></xref> indicating the search direction; either `true` to search forward or `false` to search backward."}],"pos":[80321,80455],"yaml":true},{"content":"If successful, an <xref href=\"System.Int32\"></xref> representing the zero-based position of the first literal position encountered; otherwise <xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"></xref>.","nodes":[{"pos":[0,217],"content":"If successful, an <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> representing the zero-based position of the first literal position encountered; otherwise <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"&gt;&lt;/xref&gt;</ph>.","source":"If successful, an <xref href=\"System.Int32\"></xref> representing the zero-based position of the first literal position encountered; otherwise <xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"></xref>."}],"pos":[80511,80729],"yaml":true},{"content":"Returns the position of the first non-editable position between the specified positions using the specified search direction.","nodes":[{"pos":[0,125],"content":"Returns the position of the first non-editable position between the specified positions using the specified search direction.","nodes":[{"content":"Returns the position of the first non-editable position between the specified positions using the specified search direction.","pos":[0,125]}]}],"pos":[82314,82440],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> method is used to search for the first literal character between two specified positions, inclusive, using the specified search direction. The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the literal value at this position.  \n  \n The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> method is the complement of this method.","nodes":[{"pos":[0,390],"content":"The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> method is used to search for the first literal character between two specified positions, inclusive, using the specified search direction. The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the literal value at this position.","nodes":[{"content":"The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> method is used to search for the first literal character between two specified positions, inclusive, using the specified search direction. The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the literal value at this position.","pos":[0,390],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A&gt;</ph> method is used to search for the first literal character between two specified positions, inclusive, using the specified search direction.","pos":[0,220],"source":"The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> method is used to search for the first literal character between two specified positions, inclusive, using the specified search direction."},{"content":"The result can subsequently be passed as a parameter to the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Item%2A&gt;</ph> indexer to obtain the literal value at this position.","pos":[221,390],"source":" The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the literal value at this position."}]}]},{"pos":[397,516],"content":"The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> method is the complement of this method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A&gt;</ph> method is the complement of this method.","pos":[0,119],"source":"The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> method is the complement of this method."}]}],"pos":[82451,82972],"yaml":true,"extradata":"MT"},{"content":"The zero-based position in the formatted string where the search starts.","nodes":[{"pos":[0,72],"content":"The zero-based position in the formatted string where the search starts.","nodes":[{"content":"The zero-based position in the formatted string where the search starts.","pos":[0,72]}]}],"pos":[83171,83244],"yaml":true},{"content":"The zero-based position in the formatted string where the search ends.","nodes":[{"pos":[0,70],"content":"The zero-based position in the formatted string where the search ends.","nodes":[{"content":"The zero-based position in the formatted string where the search ends.","pos":[0,70]}]}],"pos":[83310,83381],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> indicating the search direction; either `true` to search forward or `false` to search backward.","nodes":[{"pos":[0,133],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> indicating the search direction; either <ph id=\"ph2\">`true`</ph> to search forward or <ph id=\"ph3\">`false`</ph> to search backward.","source":"A <xref href=\"System.Boolean\"></xref> indicating the search direction; either `true` to search forward or `false` to search backward."}],"pos":[83447,83581],"yaml":true},{"content":"If successful, an <xref href=\"System.Int32\"></xref> representing the zero-based position of the first literal position encountered; otherwise <xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"></xref>.","nodes":[{"pos":[0,217],"content":"If successful, an <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> representing the zero-based position of the first literal position encountered; otherwise <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"&gt;&lt;/xref&gt;</ph>.","source":"If successful, an <xref href=\"System.Int32\"></xref> representing the zero-based position of the first literal position encountered; otherwise <xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"></xref>."}],"pos":[83637,83855],"yaml":true},{"content":"Returns the position of the first unassigned editable position after the specified position using the specified search direction.","nodes":[{"pos":[0,129],"content":"Returns the position of the first unassigned editable position after the specified position using the specified search direction.","nodes":[{"content":"Returns the position of the first unassigned editable position after the specified position using the specified search direction.","pos":[0,129]}]}],"pos":[85407,85537],"yaml":true},{"content":"The formatted string is composed of editable characters and literals copied from the mask. The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.  \n  \n The <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> method is used to search for the first unassigned character after a specified position and search direction. The prompt character should occupy this position.  \n  \n The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> methods are complements of this method.","nodes":[{"pos":[0,285],"content":"The formatted string is composed of editable characters and literals copied from the mask. The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.","nodes":[{"content":"The formatted string is composed of editable characters and literals copied from the mask. The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.","pos":[0,285],"nodes":[{"content":"The formatted string is composed of editable characters and literals copied from the mask.","pos":[0,90]},{"content":"The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.","pos":[91,285]}]}]},{"pos":[292,536],"content":"The <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> method is used to search for the first unassigned character after a specified position and search direction. The prompt character should occupy this position.","nodes":[{"content":"The <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> method is used to search for the first unassigned character after a specified position and search direction. The prompt character should occupy this position.","pos":[0,244],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A&gt;</ph> method is used to search for the first unassigned character after a specified position and search direction.","pos":[0,194],"source":"The <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> method is used to search for the first unassigned character after a specified position and search direction."},{"content":"The prompt character should occupy this position.","pos":[195,244]}]}]},{"pos":[543,745],"content":"The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> methods are complements of this method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A&gt;</ph> methods are complements of this method.","pos":[0,202],"source":"The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> methods are complements of this method."}]}],"pos":[85548,86300],"yaml":true,"extradata":"MT"},{"content":"The zero-based position in the formatted string to start the search.","nodes":[{"pos":[0,68],"content":"The zero-based position in the formatted string to start the search.","nodes":[{"content":"The zero-based position in the formatted string to start the search.","pos":[0,68]}]}],"pos":[86476,86545],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> indicating the search direction; either `true` to search forward or `false` to search backward.","nodes":[{"pos":[0,133],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> indicating the search direction; either <ph id=\"ph2\">`true`</ph> to search forward or <ph id=\"ph3\">`false`</ph> to search backward.","source":"A <xref href=\"System.Boolean\"></xref> indicating the search direction; either `true` to search forward or `false` to search backward."}],"pos":[86611,86745],"yaml":true},{"content":"If successful, an <xref href=\"System.Int32\"></xref> representing the zero-based position of the first unassigned editable position encountered; otherwise <xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"></xref>.","nodes":[{"pos":[0,229],"content":"If successful, an <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> representing the zero-based position of the first unassigned editable position encountered; otherwise <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"&gt;&lt;/xref&gt;</ph>.","source":"If successful, an <xref href=\"System.Int32\"></xref> representing the zero-based position of the first unassigned editable position encountered; otherwise <xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"></xref>."}],"pos":[86801,87031],"yaml":true},{"content":"Returns the position of the first unassigned editable position between the specified positions using the specified search direction.","nodes":[{"pos":[0,132],"content":"Returns the position of the first unassigned editable position between the specified positions using the specified search direction.","nodes":[{"content":"Returns the position of the first unassigned editable position between the specified positions using the specified search direction.","pos":[0,132]}]}],"pos":[88665,88798],"yaml":true},{"content":"The formatted string is composed of editable characters and literals copied from the mask. The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.  \n  \n The <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> method is used to search for the first unassigned character between two specified positions, inclusive, using the specified search direction. The prompt character should occupy this position.  \n  \n The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> methods are complements of this method.","nodes":[{"pos":[0,285],"content":"The formatted string is composed of editable characters and literals copied from the mask. The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.","nodes":[{"content":"The formatted string is composed of editable characters and literals copied from the mask. The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.","pos":[0,285],"nodes":[{"content":"The formatted string is composed of editable characters and literals copied from the mask.","pos":[0,90]},{"content":"The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.","pos":[91,285]}]}]},{"pos":[292,572],"content":"The <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> method is used to search for the first unassigned character between two specified positions, inclusive, using the specified search direction. The prompt character should occupy this position.","nodes":[{"content":"The <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> method is used to search for the first unassigned character between two specified positions, inclusive, using the specified search direction. The prompt character should occupy this position.","pos":[0,280],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A&gt;</ph> method is used to search for the first unassigned character between two specified positions, inclusive, using the specified search direction.","pos":[0,230],"source":"The <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> method is used to search for the first unassigned character between two specified positions, inclusive, using the specified search direction."},{"content":"The prompt character should occupy this position.","pos":[231,280]}]}]},{"pos":[579,787],"content":"The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> methods are complements of this method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A&gt;</ph> methods are complements of this method.","pos":[0,208],"source":"The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> methods are complements of this method."}]}],"pos":[88809,89603],"yaml":true,"extradata":"MT"},{"content":"The zero-based position in the formatted string where the search starts.","nodes":[{"pos":[0,72],"content":"The zero-based position in the formatted string where the search starts.","nodes":[{"content":"The zero-based position in the formatted string where the search starts.","pos":[0,72]}]}],"pos":[89809,89882],"yaml":true},{"content":"The zero-based position in the formatted string where the search ends.","nodes":[{"pos":[0,70],"content":"The zero-based position in the formatted string where the search ends.","nodes":[{"content":"The zero-based position in the formatted string where the search ends.","pos":[0,70]}]}],"pos":[89948,90019],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> indicating the search direction; either `true` to search forward or `false` to search backward.","nodes":[{"pos":[0,133],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> indicating the search direction; either <ph id=\"ph2\">`true`</ph> to search forward or <ph id=\"ph3\">`false`</ph> to search backward.","source":"A <xref href=\"System.Boolean\"></xref> indicating the search direction; either `true` to search forward or `false` to search backward."}],"pos":[90085,90219],"yaml":true},{"content":"If successful, an <xref href=\"System.Int32\"></xref> representing the zero-based position of the first unassigned editable position encountered; otherwise <xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"></xref>.","nodes":[{"pos":[0,229],"content":"If successful, an <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> representing the zero-based position of the first unassigned editable position encountered; otherwise <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"&gt;&lt;/xref&gt;</ph>.","source":"If successful, an <xref href=\"System.Int32\"></xref> representing the zero-based position of the first unassigned editable position encountered; otherwise <xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"></xref>."}],"pos":[90275,90505],"yaml":true},{"content":"Determines whether the specified <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> denotes success or failure.","nodes":[{"pos":[0,124],"content":"Determines whether the specified <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextResultHint\"&gt;&lt;/xref&gt;</ph> denotes success or failure.","source":"Determines whether the specified <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> denotes success or failure."}],"pos":[92103,92228],"yaml":true},{"content":"The following methods of the <xref:System.ComponentModel.MaskedTextProvider> class contain a parameter of type <xref:System.ComponentModel.MaskedTextResultHint> that is used to output information about the operation of the method: <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Clear%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>, <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.Set%2A>, <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A>, and <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>. The <xref:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint%2A> method interprets this value and returns a Boolean value that indicates whether the <xref:System.ComponentModel.MaskedTextResultHint> has signaled that the operation was a success or failure.","nodes":[{"pos":[0,1047],"content":"The following methods of the <xref:System.ComponentModel.MaskedTextProvider> class contain a parameter of type <xref:System.ComponentModel.MaskedTextResultHint> that is used to output information about the operation of the method: <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Clear%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>, <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.Set%2A>, <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A>, and <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>. The <xref:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint%2A> method interprets this value and returns a Boolean value that indicates whether the <xref:System.ComponentModel.MaskedTextResultHint> has signaled that the operation was a success or failure.","nodes":[{"content":"The following methods of the <xref:System.ComponentModel.MaskedTextProvider> class contain a parameter of type <xref:System.ComponentModel.MaskedTextResultHint> that is used to output information about the operation of the method: <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Clear%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>, <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.Set%2A>, <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A>, and <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>. The <xref:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint%2A> method interprets this value and returns a Boolean value that indicates whether the <xref:System.ComponentModel.MaskedTextResultHint> has signaled that the operation was a success or failure.","pos":[0,1047],"nodes":[{"content":"The following methods of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider&gt;</ph> class contain a parameter of type <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextResultHint&gt;</ph> that is used to output information about the operation of the method: <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.Add%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.ComponentModel.MaskedTextProvider.Clear%2A&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.ComponentModel.MaskedTextProvider.Remove%2A&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A&gt;</ph>, <ph id=\"ph8\">&lt;xref:System.ComponentModel.MaskedTextProvider.Replace%2A&gt;</ph>, <ph id=\"ph9\">&lt;xref:System.ComponentModel.MaskedTextProvider.Set%2A&gt;</ph>, <ph id=\"ph10\">&lt;xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A&gt;</ph>, and <ph id=\"ph11\">&lt;xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A&gt;</ph>.","pos":[0,773],"source":"The following methods of the <xref:System.ComponentModel.MaskedTextProvider> class contain a parameter of type <xref:System.ComponentModel.MaskedTextResultHint> that is used to output information about the operation of the method: <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Clear%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>, <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.Set%2A>, <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A>, and <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint%2A&gt;</ph> method interprets this value and returns a Boolean value that indicates whether the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextResultHint&gt;</ph> has signaled that the operation was a success or failure.","pos":[774,1047],"source":" The <xref:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint%2A> method interprets this value and returns a Boolean value that indicates whether the <xref:System.ComponentModel.MaskedTextResultHint> has signaled that the operation was a success or failure."}]}]}],"pos":[92239,93289],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> value typically obtained as an output parameter from a previous operation.","nodes":[{"pos":[0,140],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextResultHint\"&gt;&lt;/xref&gt;</ph> value typically obtained as an output parameter from a previous operation.","source":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> value typically obtained as an output parameter from a previous operation."}],"pos":[93514,93655],"yaml":true},{"content":"`true` if the specified <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> value represents a success; otherwise, `false` if it represents failure.","nodes":[{"pos":[0,160],"content":"<ph id=\"ph1\">`true`</ph> if the specified <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.MaskedTextResultHint\"&gt;&lt;/xref&gt;</ph> value represents a success; otherwise, <ph id=\"ph3\">`false`</ph> if it represents failure.","source":"`true` if the specified <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> value represents a success; otherwise, `false` if it represents failure."}],"pos":[93713,93876],"yaml":true},{"content":"Gets or sets a value that indicates whether literal characters in the input mask should be included in the formatted string.","nodes":[{"pos":[0,124],"content":"Gets or sets a value that indicates whether literal characters in the input mask should be included in the formatted string.","nodes":[{"content":"Gets or sets a value that indicates whether literal characters in the input mask should be included in the formatted string.","pos":[0,124]}]}],"pos":[95205,95330],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties will determine whether prompt and literal characters appear when calling the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method. By setting both of these properties to `false`, the parsed string will represent only the characters entered by the user.","nodes":[{"pos":[0,417],"content":"The <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties will determine whether prompt and literal characters appear when calling the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method. By setting both of these properties to `false`, the parsed string will represent only the characters entered by the user.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A&gt;</ph> properties will determine whether prompt and literal characters appear when calling the <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> method.","pos":[0,295],"source":"The <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties will determine whether prompt and literal characters appear when calling the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method."},{"content":"By setting both of these properties to <ph id=\"ph1\">`false`</ph>, the parsed string will represent only the characters entered by the user.","pos":[296,417],"source":" By setting both of these properties to `false`, the parsed string will represent only the characters entered by the user."}]}],"pos":[95341,95759],"yaml":true,"extradata":"MT"},{"content":"`true` if literals are included; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,75],"content":"`true` if literals are included; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if literals are included; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,52],"source":"`true` if literals are included; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[53,75],"source":" The default is `true`."}]}],"pos":[95882,95960],"yaml":true},{"content":"Gets or sets a value indicating whether <xref href=\"System.Windows.Forms.MaskedTextBox.PromptChar\"></xref> is used to represent the absence of user input when displaying the formatted string.","nodes":[{"pos":[0,191],"content":"Gets or sets a value indicating whether <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.MaskedTextBox.PromptChar\"&gt;&lt;/xref&gt;</ph> is used to represent the absence of user input when displaying the formatted string.","source":"Gets or sets a value indicating whether <xref href=\"System.Windows.Forms.MaskedTextBox.PromptChar\"></xref> is used to represent the absence of user input when displaying the formatted string."}],"pos":[97266,97458],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties will determine whether prompt and literal characters appear when calling the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method. By setting both of these properties to `false`, the parsed string will represent only the characters entered by the user.","nodes":[{"pos":[0,417],"content":"The <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties will determine whether prompt and literal characters appear when calling the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method. By setting both of these properties to `false`, the parsed string will represent only the characters entered by the user.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A&gt;</ph> properties will determine whether prompt and literal characters appear when calling the <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> method.","pos":[0,295],"source":"The <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties will determine whether prompt and literal characters appear when calling the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method."},{"content":"By setting both of these properties to <ph id=\"ph1\">`false`</ph>, the parsed string will represent only the characters entered by the user.","pos":[296,417],"source":" By setting both of these properties to `false`, the parsed string will represent only the characters entered by the user."}]}],"pos":[97469,97887],"yaml":true,"extradata":"MT"},{"content":"`true` if the prompt character is used to represent the positions where no user input was provided; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,142],"content":"`true` if the prompt character is used to represent the positions where no user input was provided; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the prompt character is used to represent the positions where no user input was provided; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,119],"source":"`true` if the prompt character is used to represent the positions where no user input was provided; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[120,142],"source":" The default is `true`."}]}],"pos":[98008,98153],"yaml":true},{"content":"Inserts the specified character at the specified position within the formatted string.","nodes":[{"pos":[0,86],"content":"Inserts the specified character at the specified position within the formatted string.","nodes":[{"content":"Inserts the specified character at the specified position within the formatted string.","pos":[0,86]}]}],"pos":[99542,99629],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts a character into the first edit position at or beyond that specified by the `pos` parameter. This method will shift all existing characters after the insertion point over by one position to make room for the inserted `input` character. If one of the following errors occurs, the insertion is not performed, and the method returns `false`.  \n  \n-   The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.  \n  \n-   An editable character was not found in the formatted string at or beyond the specified position, `pos`.  \n  \n-   The insertion character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.  \n  \n-   There are no available positions to the right of the insertion point, so that existing characters cannot be shifted.  \n  \n-   Shifting the existing characters would produce a violation of the mask.  \n  \n An empty `input` string will cause no change in the formatted string, but will return `true`.","nodes":[{"pos":[0,417],"content":"The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts a character into the first edit position at or beyond that specified by the `pos` parameter. This method will shift all existing characters after the insertion point over by one position to make room for the inserted `input` character. If one of the following errors occurs, the insertion is not performed, and the method returns `false`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A&gt;</ph> method inserts a character into the first edit position at or beyond that specified by the <ph id=\"ph2\">`pos`</ph> parameter.","pos":[0,171],"source":"The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts a character into the first edit position at or beyond that specified by the `pos` parameter."},{"content":"This method will shift all existing characters after the insertion point over by one position to make room for the inserted <ph id=\"ph1\">`input`</ph> character.","pos":[172,314],"source":" This method will shift all existing characters after the insertion point over by one position to make room for the inserted `input` character."},{"content":"If one of the following errors occurs, the insertion is not performed, and the method returns <ph id=\"ph1\">`false`</ph>.","pos":[315,417],"source":" If one of the following errors occurs, the insertion is not performed, and the method returns `false`."}]},{"pos":[427,567],"content":"The <ph id=\"ph1\">`pos`</ph> parameter is less than zero or greater than the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string.","source":"The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string."},{"pos":[577,680],"content":"An editable character was not found in the formatted string at or beyond the specified position, <ph id=\"ph1\">`pos`</ph>.","source":"An editable character was not found in the formatted string at or beyond the specified position, `pos`."},{"pos":[690,832],"content":"The insertion character, <ph id=\"ph1\">`input`</ph>, is not a valid input character because it is not printable or does not match its corresponding mask element.","source":"The insertion character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element."},{"pos":[842,958],"content":"There are no available positions to the right of the insertion point, so that existing characters cannot be shifted.","nodes":[{"content":"There are no available positions to the right of the insertion point, so that existing characters cannot be shifted.","pos":[0,116]}]},{"pos":[968,1039],"content":"Shifting the existing characters would produce a violation of the mask.","nodes":[{"content":"Shifting the existing characters would produce a violation of the mask.","pos":[0,71]}]},{"pos":[1046,1139],"content":"An empty <ph id=\"ph1\">`input`</ph> string will cause no change in the formatted string, but will return <ph id=\"ph2\">`true`</ph>.","source":"An empty `input` string will cause no change in the formatted string, but will return `true`."}],"pos":[99640,100794],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Char\"></xref> to be inserted.","nodes":[{"pos":[0,52],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> to be inserted.","source":"The <xref href=\"System.Char\"></xref> to be inserted."}],"pos":[100941,100994],"yaml":true},{"content":"The zero-based position in the formatted string to insert the character.","nodes":[{"pos":[0,72],"content":"The zero-based position in the formatted string to insert the character.","nodes":[{"content":"The zero-based position in the formatted string to insert the character.","pos":[0,72]}]}],"pos":[101057,101130],"yaml":true},{"content":"`true` if the insertion was successful; otherwise, `false`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">`true`</ph> if the insertion was successful; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the insertion was successful; otherwise, `false`."}],"pos":[101188,101250],"yaml":true},{"content":"Inserts the specified string at a specified position within the formatted string.","nodes":[{"pos":[0,81],"content":"Inserts the specified string at a specified position within the formatted string.","nodes":[{"content":"Inserts the specified string at a specified position within the formatted string.","pos":[0,81]}]}],"pos":[102646,102728],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts each character from the `input` string into the edit positions located at position `pos` and beyond. This method will shift all existing characters after the insertion point over by one position for each inserted character. If one of the following errors occurs, no insertion is performed, and the method returns `false`.  \n  \n-   The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.  \n  \n-   Not enough editable characters exist in the formatted string at or beyond the specified position, `pos`, to insert all of the characters from the `input` string.  \n  \n-   One or more of the insertion characters are not a valid input character because they are not printable or do not match their corresponding mask element.  \n  \n-   There are not enough available positions to the right of the insertion point, so that existing characters cannot be shifted.  \n  \n-   Shifting the existing characters would produce a violation of the mask. Note that this shifting occurs during the insertion of each individual character.  \n  \n An empty `input` string will cause no change in the formatted string, but will return `true`.","nodes":[{"pos":[0,400],"content":"The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts each character from the `input` string into the edit positions located at position `pos` and beyond. This method will shift all existing characters after the insertion point over by one position for each inserted character. If one of the following errors occurs, no insertion is performed, and the method returns `false`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A&gt;</ph> method inserts each character from the <ph id=\"ph2\">`input`</ph> string into the edit positions located at position <ph id=\"ph3\">`pos`</ph> and beyond.","pos":[0,179],"source":"The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts each character from the `input` string into the edit positions located at position `pos` and beyond."},{"content":"This method will shift all existing characters after the insertion point over by one position for each inserted character.","pos":[180,302]},{"content":"If one of the following errors occurs, no insertion is performed, and the method returns <ph id=\"ph1\">`false`</ph>.","pos":[303,400],"source":" If one of the following errors occurs, no insertion is performed, and the method returns `false`."}]},{"pos":[410,550],"content":"The <ph id=\"ph1\">`pos`</ph> parameter is less than zero or greater than the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string.","source":"The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string."},{"pos":[560,721],"content":"Not enough editable characters exist in the formatted string at or beyond the specified position, <ph id=\"ph1\">`pos`</ph>, to insert all of the characters from the <ph id=\"ph2\">`input`</ph> string.","source":"Not enough editable characters exist in the formatted string at or beyond the specified position, `pos`, to insert all of the characters from the `input` string."},{"pos":[731,883],"content":"One or more of the insertion characters are not a valid input character because they are not printable or do not match their corresponding mask element.","nodes":[{"content":"One or more of the insertion characters are not a valid input character because they are not printable or do not match their corresponding mask element.","pos":[0,152]}]},{"pos":[893,1017],"content":"There are not enough available positions to the right of the insertion point, so that existing characters cannot be shifted.","nodes":[{"content":"There are not enough available positions to the right of the insertion point, so that existing characters cannot be shifted.","pos":[0,124]}]},{"pos":[1027,1180],"content":"Shifting the existing characters would produce a violation of the mask. Note that this shifting occurs during the insertion of each individual character.","nodes":[{"content":"Shifting the existing characters would produce a violation of the mask. Note that this shifting occurs during the insertion of each individual character.","pos":[0,153],"nodes":[{"content":"Shifting the existing characters would produce a violation of the mask.","pos":[0,71]},{"content":"Note that this shifting occurs during the insertion of each individual character.","pos":[72,153]}]}]},{"pos":[1187,1280],"content":"An empty <ph id=\"ph1\">`input`</ph> string will cause no change in the formatted string, but will return <ph id=\"ph2\">`true`</ph>.","source":"An empty `input` string will cause no change in the formatted string, but will return `true`."}],"pos":[102739,104034],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> to be inserted.","nodes":[{"pos":[0,54],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> to be inserted.","source":"The <xref href=\"System.String\"></xref> to be inserted."}],"pos":[104185,104240],"yaml":true},{"content":"The zero-based position in the formatted string to insert the input string.","nodes":[{"pos":[0,75],"content":"The zero-based position in the formatted string to insert the input string.","nodes":[{"content":"The zero-based position in the formatted string to insert the input string.","pos":[0,75]}]}],"pos":[104303,104379],"yaml":true},{"content":"`true` if the insertion was successful; otherwise, `false`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">`true`</ph> if the insertion was successful; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the insertion was successful; otherwise, `false`."}],"pos":[104437,104499],"yaml":true},{"content":"The <code>input</code> parameter is `null`.","nodes":[{"pos":[0,43],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>input</code> parameter is `null`."}],"pos":[104678,104722],"yaml":true},{"content":"Inserts the specified character at the specified position within the formatted string, returning the last insertion position and the status of the operation.","nodes":[{"pos":[0,157],"content":"Inserts the specified character at the specified position within the formatted string, returning the last insertion position and the status of the operation.","nodes":[{"content":"Inserts the specified character at the specified position within the formatted string, returning the last insertion position and the status of the operation.","pos":[0,157]}]}],"pos":[106287,106445],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts a character into the first edit position at or beyond that specified by the `pos` parameter. This method will shift all existing characters after the insertion point over by one position to make room for the inserted `input` character. If one of the following errors occurs, the insertion is not performed, and the method returns `false`.  \n  \n-   The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.  \n  \n-   An editable character was not found in the formatted string at or beyond the specified position, `pos`.  \n  \n-   The insertion character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.  \n  \n-   There are no available positions to the right of the insertion point, so that existing characters cannot be shifted.  \n  \n-   Shifting the existing characters would produce a violation of the mask.  \n  \n An empty `input` string will cause no change in the formatted string, but will return `true`.","nodes":[{"pos":[0,417],"content":"The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts a character into the first edit position at or beyond that specified by the `pos` parameter. This method will shift all existing characters after the insertion point over by one position to make room for the inserted `input` character. If one of the following errors occurs, the insertion is not performed, and the method returns `false`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A&gt;</ph> method inserts a character into the first edit position at or beyond that specified by the <ph id=\"ph2\">`pos`</ph> parameter.","pos":[0,171],"source":"The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts a character into the first edit position at or beyond that specified by the `pos` parameter."},{"content":"This method will shift all existing characters after the insertion point over by one position to make room for the inserted <ph id=\"ph1\">`input`</ph> character.","pos":[172,314],"source":" This method will shift all existing characters after the insertion point over by one position to make room for the inserted `input` character."},{"content":"If one of the following errors occurs, the insertion is not performed, and the method returns <ph id=\"ph1\">`false`</ph>.","pos":[315,417],"source":" If one of the following errors occurs, the insertion is not performed, and the method returns `false`."}]},{"pos":[427,567],"content":"The <ph id=\"ph1\">`pos`</ph> parameter is less than zero or greater than the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string.","source":"The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string."},{"pos":[577,680],"content":"An editable character was not found in the formatted string at or beyond the specified position, <ph id=\"ph1\">`pos`</ph>.","source":"An editable character was not found in the formatted string at or beyond the specified position, `pos`."},{"pos":[690,832],"content":"The insertion character, <ph id=\"ph1\">`input`</ph>, is not a valid input character because it is not printable or does not match its corresponding mask element.","source":"The insertion character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element."},{"pos":[842,958],"content":"There are no available positions to the right of the insertion point, so that existing characters cannot be shifted.","nodes":[{"content":"There are no available positions to the right of the insertion point, so that existing characters cannot be shifted.","pos":[0,116]}]},{"pos":[968,1039],"content":"Shifting the existing characters would produce a violation of the mask.","nodes":[{"content":"Shifting the existing characters would produce a violation of the mask.","pos":[0,71]}]},{"pos":[1046,1139],"content":"An empty <ph id=\"ph1\">`input`</ph> string will cause no change in the formatted string, but will return <ph id=\"ph2\">`true`</ph>.","source":"An empty `input` string will cause no change in the formatted string, but will return `true`."}],"pos":[106456,107610],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Char\"></xref> to be inserted.","nodes":[{"pos":[0,52],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> to be inserted.","source":"The <xref href=\"System.Char\"></xref> to be inserted."}],"pos":[107838,107891],"yaml":true},{"content":"The zero-based position in the formatted string to insert the character.","nodes":[{"pos":[0,72],"content":"The zero-based position in the formatted string to insert the character.","nodes":[{"content":"The zero-based position in the formatted string to insert the character.","pos":[0,72]}]}],"pos":[107954,108027],"yaml":true},{"content":"If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed. An output parameter.","nodes":[{"pos":[0,157],"content":"If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed. An output parameter.","nodes":[{"content":"If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed. An output parameter.","pos":[0,157],"nodes":[{"content":"If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed.","pos":[0,136]},{"content":"An output parameter.","pos":[137,157]}]}]}],"pos":[108094,108252],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the insertion operation. An output parameter.","nodes":[{"pos":[0,151],"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the insertion operation. An output parameter.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextResultHint\"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the insertion operation.","pos":[0,130],"source":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the insertion operation."},{"content":"An output parameter.","pos":[131,151]}]}],"pos":[108347,108499],"yaml":true},{"content":"`true` if the insertion was successful; otherwise, `false`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">`true`</ph> if the insertion was successful; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the insertion was successful; otherwise, `false`."}],"pos":[108557,108619],"yaml":true},{"content":"Inserts the specified string at a specified position within the formatted string, returning the last insertion position and the status of the operation.","nodes":[{"pos":[0,152],"content":"Inserts the specified string at a specified position within the formatted string, returning the last insertion position and the status of the operation.","nodes":[{"content":"Inserts the specified string at a specified position within the formatted string, returning the last insertion position and the status of the operation.","pos":[0,152]}]}],"pos":[110276,110429],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts each character from the `input` string into the edit positions located at position `pos` and beyond. This method will shift all existing characters after the insertion point over by one position for each inserted character. If one of the following errors occurs, no insertion is performed, and the method returns `false`.  \n  \n-   The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.  \n  \n-   Not enough editable characters exist in the formatted string at or beyond the specified position, `pos`, to insert all of the characters from the `input` string.  \n  \n-   One or more of the insertion characters are not a valid input character because they are not printable or do not match their corresponding mask element.  \n  \n-   There are not enough available positions to the right of the insertion point, so that existing characters cannot be shifted.  \n  \n-   Shifting the existing characters would produce a violation of the mask. Note that this shifting occurs during the insertion of each individual character.  \n  \n An empty `input` string will cause no change in the formatted string, but will return `true`.","nodes":[{"pos":[0,400],"content":"The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts each character from the `input` string into the edit positions located at position `pos` and beyond. This method will shift all existing characters after the insertion point over by one position for each inserted character. If one of the following errors occurs, no insertion is performed, and the method returns `false`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A&gt;</ph> method inserts each character from the <ph id=\"ph2\">`input`</ph> string into the edit positions located at position <ph id=\"ph3\">`pos`</ph> and beyond.","pos":[0,179],"source":"The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts each character from the `input` string into the edit positions located at position `pos` and beyond."},{"content":"This method will shift all existing characters after the insertion point over by one position for each inserted character.","pos":[180,302]},{"content":"If one of the following errors occurs, no insertion is performed, and the method returns <ph id=\"ph1\">`false`</ph>.","pos":[303,400],"source":" If one of the following errors occurs, no insertion is performed, and the method returns `false`."}]},{"pos":[410,550],"content":"The <ph id=\"ph1\">`pos`</ph> parameter is less than zero or greater than the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string.","source":"The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string."},{"pos":[560,721],"content":"Not enough editable characters exist in the formatted string at or beyond the specified position, <ph id=\"ph1\">`pos`</ph>, to insert all of the characters from the <ph id=\"ph2\">`input`</ph> string.","source":"Not enough editable characters exist in the formatted string at or beyond the specified position, `pos`, to insert all of the characters from the `input` string."},{"pos":[731,883],"content":"One or more of the insertion characters are not a valid input character because they are not printable or do not match their corresponding mask element.","nodes":[{"content":"One or more of the insertion characters are not a valid input character because they are not printable or do not match their corresponding mask element.","pos":[0,152]}]},{"pos":[893,1017],"content":"There are not enough available positions to the right of the insertion point, so that existing characters cannot be shifted.","nodes":[{"content":"There are not enough available positions to the right of the insertion point, so that existing characters cannot be shifted.","pos":[0,124]}]},{"pos":[1027,1180],"content":"Shifting the existing characters would produce a violation of the mask. Note that this shifting occurs during the insertion of each individual character.","nodes":[{"content":"Shifting the existing characters would produce a violation of the mask. Note that this shifting occurs during the insertion of each individual character.","pos":[0,153],"nodes":[{"content":"Shifting the existing characters would produce a violation of the mask.","pos":[0,71]},{"content":"Note that this shifting occurs during the insertion of each individual character.","pos":[72,153]}]}]},{"pos":[1187,1280],"content":"An empty <ph id=\"ph1\">`input`</ph> string will cause no change in the formatted string, but will return <ph id=\"ph2\">`true`</ph>.","source":"An empty `input` string will cause no change in the formatted string, but will return `true`."}],"pos":[110440,111735],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> to be inserted.","nodes":[{"pos":[0,54],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> to be inserted.","source":"The <xref href=\"System.String\"></xref> to be inserted."}],"pos":[111967,112022],"yaml":true},{"content":"The zero-based position in the formatted string to insert the input string.","nodes":[{"pos":[0,75],"content":"The zero-based position in the formatted string to insert the input string.","nodes":[{"content":"The zero-based position in the formatted string to insert the input string.","pos":[0,75]}]}],"pos":[112085,112161],"yaml":true},{"content":"If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed. An output parameter.","nodes":[{"pos":[0,157],"content":"If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed. An output parameter.","nodes":[{"content":"If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed. An output parameter.","pos":[0,157],"nodes":[{"content":"If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed.","pos":[0,136]},{"content":"An output parameter.","pos":[137,157]}]}]}],"pos":[112228,112386],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the insertion operation. An output parameter.","nodes":[{"pos":[0,151],"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the insertion operation. An output parameter.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextResultHint\"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the insertion operation.","pos":[0,130],"source":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the insertion operation."},{"content":"An output parameter.","pos":[131,151]}]}],"pos":[112481,112633],"yaml":true},{"content":"`true` if the insertion was successful; otherwise, `false`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">`true`</ph> if the insertion was successful; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the insertion was successful; otherwise, `false`."}],"pos":[112691,112753],"yaml":true},{"content":"The <code>input</code> parameter is `null`.","nodes":[{"pos":[0,43],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>input</code> parameter is `null`."}],"pos":[112932,112976],"yaml":true},{"content":"Gets the upper bound of the range of invalid indexes.","nodes":[{"pos":[0,53],"content":"Gets the upper bound of the range of invalid indexes.","nodes":[{"content":"Gets the upper bound of the range of invalid indexes.","pos":[0,53]}]}],"pos":[114189,114243],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex%2A> property is used to represent a result that is not valid for indexing operations, such as the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> method.  \n  \n When you use the provider or implement your own, you should use this property to decide if an index is invalid, rather than hard-coding knowledge of invalid values.","nodes":[{"pos":[0,241],"content":"The <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex%2A> property is used to represent a result that is not valid for indexing operations, such as the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.InvalidIndex%2A&gt;</ph> property is used to represent a result that is not valid for indexing operations, such as the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A&gt;</ph> method.","pos":[0,241],"source":"The <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex%2A> property is used to represent a result that is not valid for indexing operations, such as the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> method."}]},{"pos":[248,412],"content":"When you use the provider or implement your own, you should use this property to decide if an index is invalid, rather than hard-coding knowledge of invalid values.","nodes":[{"content":"When you use the provider or implement your own, you should use this property to decide if an index is invalid, rather than hard-coding knowledge of invalid values.","pos":[0,164]}]}],"pos":[114254,114671],"yaml":true,"extradata":"MT"},{"content":"A value representing the largest invalid index, as determined by the provider implementation. For example, if the lowest valid index is 0, this property will return -1.","nodes":[{"pos":[0,168],"content":"A value representing the largest invalid index, as determined by the provider implementation. For example, if the lowest valid index is 0, this property will return -1.","nodes":[{"content":"A value representing the largest invalid index, as determined by the provider implementation. For example, if the lowest valid index is 0, this property will return -1.","pos":[0,168],"nodes":[{"content":"A value representing the largest invalid index, as determined by the provider implementation.","pos":[0,93]},{"content":"For example, if the lowest valid index is 0, this property will return -1.","pos":[94,168]}]}]}],"pos":[114790,114959],"yaml":true},{"content":"Determines whether the specified position is available for assignment.","nodes":[{"pos":[0,70],"content":"Determines whether the specified position is available for assignment.","nodes":[{"content":"Determines whether the specified position is available for assignment.","pos":[0,70]}]}],"pos":[116359,116430],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.IsAvailablePosition%2A> method returns `true` only if all of the following conditions are true:  \n  \n-   The `pos` parameter is within the bounds of the formatted string; that is, its value is greater than or equal to zero and less than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.  \n  \n-   The specified position is an editable character.  \n  \n-   A character has not already been assigned to this position.","nodes":[{"pos":[0,146],"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.IsAvailablePosition%2A&gt;</ph> method returns <ph id=\"ph2\">`true`</ph> only if all of the following conditions are true:","source":"The <xref:System.ComponentModel.MaskedTextProvider.IsAvailablePosition%2A> method returns `true` only if all of the following conditions are true:"},{"pos":[156,374],"content":"The <ph id=\"ph1\">`pos`</ph> parameter is within the bounds of the formatted string; that is, its value is greater than or equal to zero and less than the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string.","source":"The `pos` parameter is within the bounds of the formatted string; that is, its value is greater than or equal to zero and less than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string."},{"pos":[384,432],"content":"The specified position is an editable character.","nodes":[{"content":"The specified position is an editable character.","pos":[0,48]}]},{"pos":[442,501],"content":"A character has not already been assigned to this position.","nodes":[{"content":"A character has not already been assigned to this position.","pos":[0,59]}]}],"pos":[116441,116951],"yaml":true,"extradata":"MT"},{"content":"The zero-based position in the mask to test.","nodes":[{"pos":[0,44],"content":"The zero-based position in the mask to test.","nodes":[{"content":"The zero-based position in the mask to test.","pos":[0,44]}]}],"pos":[117101,117146],"yaml":true},{"content":"`true` if the specified position in the formatted string is editable and has not been assigned to yet; otherwise `false`.","nodes":[{"pos":[0,121],"content":"<ph id=\"ph1\">`true`</ph> if the specified position in the formatted string is editable and has not been assigned to yet; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified position in the formatted string is editable and has not been assigned to yet; otherwise `false`."}],"pos":[117204,117328],"yaml":true},{"content":"Determines whether the specified position is editable.","nodes":[{"pos":[0,54],"content":"Determines whether the specified position is editable.","nodes":[{"content":"Determines whether the specified position is editable.","pos":[0,54]}]}],"pos":[118705,118760],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.IsEditPosition%2A> method returns `true` only if both of the following conditions are true:  \n  \n-   The `pos` parameter is within the bounds of the formatted string; that is, its value is greater than or equal to zero and less than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.  \n  \n-   The specified position is an editable character.","nodes":[{"pos":[0,142],"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.IsEditPosition%2A&gt;</ph> method returns <ph id=\"ph2\">`true`</ph> only if both of the following conditions are true:","source":"The <xref:System.ComponentModel.MaskedTextProvider.IsEditPosition%2A> method returns `true` only if both of the following conditions are true:"},{"pos":[152,370],"content":"The <ph id=\"ph1\">`pos`</ph> parameter is within the bounds of the formatted string; that is, its value is greater than or equal to zero and less than the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string.","source":"The `pos` parameter is within the bounds of the formatted string; that is, its value is greater than or equal to zero and less than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string."},{"pos":[380,428],"content":"The specified position is an editable character.","nodes":[{"content":"The specified position is an editable character.","pos":[0,48]}]}],"pos":[118771,119206],"yaml":true,"extradata":"MT"},{"content":"The zero-based position in the mask to test.","nodes":[{"pos":[0,44],"content":"The zero-based position in the mask to test.","nodes":[{"content":"The zero-based position in the mask to test.","pos":[0,44]}]}],"pos":[119351,119396],"yaml":true},{"content":"`true` if the specified position in the formatted string is editable; otherwise `false`.","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">`true`</ph> if the specified position in the formatted string is editable; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified position in the formatted string is editable; otherwise `false`."}],"pos":[119454,119545],"yaml":true},{"content":"Gets or sets a value that determines whether password protection should be applied to the formatted string.","nodes":[{"pos":[0,107],"content":"Gets or sets a value that determines whether password protection should be applied to the formatted string.","nodes":[{"content":"Gets or sets a value that determines whether password protection should be applied to the formatted string.","pos":[0,107]}]}],"pos":[120832,120940],"yaml":true},{"content":"Password protection can be initiated using one of the following two ways:  \n  \n-   Setting the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property to a non-`null` value.  \n  \n-   Setting the <xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> property to `true`., which also sets the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property to the <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> value.  \n  \n <xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> is used by the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods to determine whether to reveal the actual input characters or obscure them with <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>.","nodes":[{"pos":[0,73],"content":"Password protection can be initiated using one of the following two ways:","nodes":[{"content":"Password protection can be initiated using one of the following two ways:","pos":[0,73]}]},{"pos":[83,190],"content":"Setting the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property to a non-<ph id=\"ph2\">`null`</ph> value.","source":"Setting the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property to a non-`null` value."},{"pos":[200,472],"content":"Setting the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph>., which also sets the <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property to the <ph id=\"ph4\">&lt;xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A&gt;</ph> value.","source":"Setting the <xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> property to `true`., which also sets the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property to the <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> value."},{"pos":[479,839],"content":"<xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> is used by the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods to determine whether to reveal the actual input characters or obscure them with <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A&gt;</ph> is used by the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> methods to determine whether to reveal the actual input characters or obscure them with <ph id=\"ph4\">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph>.","pos":[0,360],"source":"<xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> is used by the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods to determine whether to reveal the actual input characters or obscure them with <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>."}]}],"pos":[120951,121799],"yaml":true,"extradata":"MT"},{"content":"`true` if the input string is to be treated as a password string; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,109],"content":"`true` if the input string is to be treated as a password string; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the input string is to be treated as a password string; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,85],"source":"`true` if the input string is to be treated as a password string; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[86,109],"source":" The default is `false`."}]}],"pos":[121917,122029],"yaml":true},{"content":"Determines whether the specified character is a valid input character.","nodes":[{"pos":[0,70],"content":"Determines whether the specified character is a valid input character.","nodes":[{"content":"Determines whether the specified character is a valid input character.","pos":[0,70]}]}],"pos":[123403,123474],"yaml":true},{"content":"Valid input characters include all printable characters, which include letters, digits, punctuation, symbols and the space character.","nodes":[{"pos":[0,133],"content":"Valid input characters include all printable characters, which include letters, digits, punctuation, symbols and the space character.","nodes":[{"content":"Valid input characters include all printable characters, which include letters, digits, punctuation, symbols and the space character.","pos":[0,133]}]}],"pos":[123485,123619],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Char\"></xref> value to test.","nodes":[{"pos":[0,51],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> value to test.","source":"The <xref href=\"System.Char\"></xref> value to test."}],"pos":[123759,123811],"yaml":true},{"content":"`true` if the specified character contains a valid input value; otherwise `false`.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">`true`</ph> if the specified character contains a valid input value; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified character contains a valid input value; otherwise `false`."}],"pos":[123869,123954],"yaml":true},{"content":"Determines whether the specified character is a valid mask character.","nodes":[{"pos":[0,69],"content":"Determines whether the specified character is a valid mask character.","nodes":[{"content":"Determines whether the specified character is a valid mask character.","pos":[0,69]}]}],"pos":[125328,125398],"yaml":true},{"content":"Valid mask characters include all printable characters, which include letters, digits, punctuation, symbols and the space character.","nodes":[{"pos":[0,132],"content":"Valid mask characters include all printable characters, which include letters, digits, punctuation, symbols and the space character.","nodes":[{"content":"Valid mask characters include all printable characters, which include letters, digits, punctuation, symbols and the space character.","pos":[0,132]}]}],"pos":[125409,125542],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Char\"></xref> value to test.","nodes":[{"pos":[0,51],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> value to test.","source":"The <xref href=\"System.Char\"></xref> value to test."}],"pos":[125681,125733],"yaml":true},{"content":"`true` if the specified character contains a valid mask value; otherwise `false`.","nodes":[{"pos":[0,81],"content":"<ph id=\"ph1\">`true`</ph> if the specified character contains a valid mask value; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified character contains a valid mask value; otherwise `false`."}],"pos":[125791,125875],"yaml":true},{"content":"Determines whether the specified character is a valid password character.","nodes":[{"pos":[0,73],"content":"Determines whether the specified character is a valid password character.","nodes":[{"content":"Determines whether the specified character is a valid password character.","pos":[0,73]}]}],"pos":[127272,127346],"yaml":true},{"content":"Valid password characters include all printable characters and the null character, which is used to disable password functionality. Printable characters include letters, digits, punctuation, symbols and the space character.","nodes":[{"pos":[0,223],"content":"Valid password characters include all printable characters and the null character, which is used to disable password functionality. Printable characters include letters, digits, punctuation, symbols and the space character.","nodes":[{"content":"Valid password characters include all printable characters and the null character, which is used to disable password functionality. Printable characters include letters, digits, punctuation, symbols and the space character.","pos":[0,223],"nodes":[{"content":"Valid password characters include all printable characters and the null character, which is used to disable password functionality.","pos":[0,131]},{"content":"Printable characters include letters, digits, punctuation, symbols and the space character.","pos":[132,223]}]}]}],"pos":[127357,127581],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Char\"></xref> value to test.","nodes":[{"pos":[0,51],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> value to test.","source":"The <xref href=\"System.Char\"></xref> value to test."}],"pos":[127724,127776],"yaml":true},{"content":"`true` if the specified character contains a valid password value; otherwise `false`.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">`true`</ph> if the specified character contains a valid password value; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified character contains a valid password value; otherwise `false`."}],"pos":[127834,127922],"yaml":true},{"content":"Gets the element at the specified position in the formatted string.","nodes":[{"pos":[0,67],"content":"Gets the element at the specified position in the formatted string.","nodes":[{"content":"Gets the element at the specified position in the formatted string.","pos":[0,67]}]}],"pos":[129241,129309],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.Item%2A> property is the standard indexer for the <xref:System.ComponentModel.MaskedTextProvider> class.","nodes":[{"pos":[0,155],"content":"The <xref:System.ComponentModel.MaskedTextProvider.Item%2A> property is the standard indexer for the <xref:System.ComponentModel.MaskedTextProvider> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Item%2A&gt;</ph> property is the standard indexer for the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider&gt;</ph> class.","pos":[0,155],"source":"The <xref:System.ComponentModel.MaskedTextProvider.Item%2A> property is the standard indexer for the <xref:System.ComponentModel.MaskedTextProvider> class."}]}],"pos":[129320,129476],"yaml":true,"extradata":"MT"},{"content":"A zero-based index of the element to retrieve.","nodes":[{"pos":[0,46],"content":"A zero-based index of the element to retrieve.","nodes":[{"content":"A zero-based index of the element to retrieve.","pos":[0,46]}]}],"pos":[129612,129659],"yaml":true},{"content":"The <xref href=\"System.Char\"></xref> at the specified position in the formatted string.","nodes":[{"pos":[0,87],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> at the specified position in the formatted string.","source":"The <xref href=\"System.Char\"></xref> at the specified position in the formatted string."}],"pos":[129714,129802],"yaml":true},{"content":"<code>index</code> is less than zero or greater than or equal to the <xref href=\"System.ComponentModel.MaskedTextProvider.Length\"></xref> of the mask.","nodes":[{"pos":[0,150],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero or greater than or equal to the <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider.Length\"&gt;&lt;/xref&gt;</ph> of the mask.","source":"<code>index</code> is less than zero or greater than or equal to the <xref href=\"System.ComponentModel.MaskedTextProvider.Length\"></xref> of the mask."}],"pos":[129983,130134],"yaml":true},{"content":"Gets the index in the mask of the rightmost input character that has been assigned to the mask.","nodes":[{"pos":[0,95],"content":"Gets the index in the mask of the rightmost input character that has been assigned to the mask.","nodes":[{"content":"Gets the index in the mask of the rightmost input character that has been assigned to the mask.","pos":[0,95]}]}],"pos":[131395,131491],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property represents the farthest edit position in the mask, relative to the origin, that has been assigned an input character. For languages read left-to-right (LTR), such as English, this is the rightmost assigned position; for languages read right-to-left (RTL), this would be the leftmost position.","nodes":[{"pos":[0,377],"content":"The <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property represents the farthest edit position in the mask, relative to the origin, that has been assigned an input character. For languages read left-to-right (LTR), such as English, this is the rightmost assigned position; for languages read right-to-left (RTL), this would be the leftmost position.","nodes":[{"content":"The <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property represents the farthest edit position in the mask, relative to the origin, that has been assigned an input character. For languages read left-to-right (LTR), such as English, this is the rightmost assigned position; for languages read right-to-left (RTL), this would be the leftmost position.","pos":[0,377],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A&gt;</ph> property represents the farthest edit position in the mask, relative to the origin, that has been assigned an input character.","pos":[0,202],"source":"The <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property represents the farthest edit position in the mask, relative to the origin, that has been assigned an input character."},{"content":"For languages read left-to-right (LTR), such as English, this is the rightmost assigned position; for languages read right-to-left (RTL), this would be the leftmost position.","pos":[203,377]}]}]}],"pos":[131502,131880],"yaml":true,"extradata":"MT"},{"content":"If at least one input character has been assigned to the mask, an <xref href=\"System.Int32\"></xref> containing the index of rightmost assigned position; otherwise, if no position has been assigned, <xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"></xref>.","nodes":[{"pos":[0,273],"content":"If at least one input character has been assigned to the mask, an <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> containing the index of rightmost assigned position; otherwise, if no position has been assigned, <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"&gt;&lt;/xref&gt;</ph>.","source":"If at least one input character has been assigned to the mask, an <xref href=\"System.Int32\"></xref> containing the index of rightmost assigned position; otherwise, if no position has been assigned, <xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"></xref>."}],"pos":[132000,132274],"yaml":true},{"content":"Gets the length of the mask, absent any mask modifier characters.","nodes":[{"pos":[0,65],"content":"Gets the length of the mask, absent any mask modifier characters.","nodes":[{"content":"Gets the length of the mask, absent any mask modifier characters.","pos":[0,65]}]}],"pos":[133543,133609],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.Length%2A> property represents the total number of characters in the mask, including both the literal and editable characters. The number of literal characters can be determined by subtracting the value of the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> from the <xref:System.ComponentModel.MaskedTextProvider.Length%2A>.  \n  \n <xref:System.ComponentModel.MaskedTextProvider.Length%2A> also describes the length of the formatted string, including input characters, literals, and prompt characters.","nodes":[{"pos":[0,397],"content":"The <xref:System.ComponentModel.MaskedTextProvider.Length%2A> property represents the total number of characters in the mask, including both the literal and editable characters. The number of literal characters can be determined by subtracting the value of the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> from the <xref:System.ComponentModel.MaskedTextProvider.Length%2A>.","nodes":[{"content":"The <xref:System.ComponentModel.MaskedTextProvider.Length%2A> property represents the total number of characters in the mask, including both the literal and editable characters. The number of literal characters can be determined by subtracting the value of the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> from the <xref:System.ComponentModel.MaskedTextProvider.Length%2A>.","pos":[0,397],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> property represents the total number of characters in the mask, including both the literal and editable characters.","pos":[0,177],"source":"The <xref:System.ComponentModel.MaskedTextProvider.Length%2A> property represents the total number of characters in the mask, including both the literal and editable characters."},{"content":"The number of literal characters can be determined by subtracting the value of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A&gt;</ph> from the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph>.","pos":[178,397],"source":" The number of literal characters can be determined by subtracting the value of the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> from the <xref:System.ComponentModel.MaskedTextProvider.Length%2A>."}]}]},{"pos":[404,573],"content":"<xref:System.ComponentModel.MaskedTextProvider.Length%2A> also describes the length of the formatted string, including input characters, literals, and prompt characters.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> also describes the length of the formatted string, including input characters, literals, and prompt characters.","pos":[0,169],"source":"<xref:System.ComponentModel.MaskedTextProvider.Length%2A> also describes the length of the formatted string, including input characters, literals, and prompt characters."}]}],"pos":[133620,134198],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int32\"></xref> containing the number of positions in the mask, excluding characters that modify mask input.","nodes":[{"pos":[0,129],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> containing the number of positions in the mask, excluding characters that modify mask input.","source":"An <xref href=\"System.Int32\"></xref> containing the number of positions in the mask, excluding characters that modify mask input."}],"pos":[134304,134434],"yaml":true},{"content":"Gets the input mask.","nodes":[{"pos":[0,20],"content":"Gets the input mask.","nodes":[{"content":"Gets the input mask.","pos":[0,20]}]}],"pos":[135677,135698],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor. This mask must contain only valid characters as defined by the masking language.","nodes":[{"pos":[0,235],"content":"The <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor. This mask must contain only valid characters as defined by the masking language.","nodes":[{"content":"The <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor. This mask must contain only valid characters as defined by the masking language.","pos":[0,235],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Mask%2A&gt;</ph> property is set in the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A&gt;</ph> constructor.","pos":[0,154],"source":"The <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor."},{"content":"This mask must contain only valid characters as defined by the masking language.","pos":[155,235]}]}]}],"pos":[135709,135945],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> containing the full mask.","nodes":[{"pos":[0,62],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the full mask.","source":"A <xref href=\"System.String\"></xref> containing the full mask."}],"pos":[136053,136116],"yaml":true},{"content":"Gets a value indicating whether all required inputs have been entered into the formatted string.","nodes":[{"pos":[0,96],"content":"Gets a value indicating whether all required inputs have been entered into the formatted string.","nodes":[{"content":"Gets a value indicating whether all required inputs have been entered into the formatted string.","pos":[0,96]}]}],"pos":[137411,137508],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> property checks only required input elements. To determine whether all required and optional input elements have been entered, use the <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=fullName> property of the <xref:System.Windows.Forms.MaskedTextBox> class instead.  \n  \n The current value of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property determines which formatting elements are considered required and which are optional.","nodes":[{"pos":[0,355],"content":"The <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> property checks only required input elements. To determine whether all required and optional input elements have been entered, use the <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=fullName> property of the <xref:System.Windows.Forms.MaskedTextBox> class instead.","nodes":[{"content":"The <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> property checks only required input elements. To determine whether all required and optional input elements have been entered, use the <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=fullName> property of the <xref:System.Windows.Forms.MaskedTextBox> class instead.","pos":[0,355],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A&gt;</ph> property checks only required input elements.","pos":[0,114],"source":"The <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> property checks only required input elements."},{"content":"To determine whether all required and optional input elements have been entered, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=fullName&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> class instead.","pos":[115,355],"source":" To determine whether all required and optional input elements have been entered, use the <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=fullName> property of the <xref:System.Windows.Forms.MaskedTextBox> class instead."}]}]},{"pos":[362,536],"content":"The current value of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property determines which formatting elements are considered required and which are optional.","nodes":[{"content":"The current value of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Mask%2A&gt;</ph> property determines which formatting elements are considered required and which are optional.","pos":[0,174],"source":"The current value of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property determines which formatting elements are considered required and which are optional."}]}],"pos":[137519,138060],"yaml":true,"extradata":"MT"},{"content":"`true` if all required input has been entered into the mask; otherwise, `false`.","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">`true`</ph> if all required input has been entered into the mask; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if all required input has been entered into the mask; otherwise, `false`."}],"pos":[138176,138259],"yaml":true},{"content":"Gets a value indicating whether all required and optional inputs have been entered into the formatted string.","nodes":[{"pos":[0,109],"content":"Gets a value indicating whether all required and optional inputs have been entered into the formatted string.","nodes":[{"content":"Gets a value indicating whether all required and optional inputs have been entered into the formatted string.","pos":[0,109]}]}],"pos":[139533,139643],"yaml":true},{"content":"To verify if only required input elements have been entered, use the <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> property instead. The current value of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property determines which formatting elements are considered required and which are optional.","nodes":[{"pos":[0,326],"content":"To verify if only required input elements have been entered, use the <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> property instead. The current value of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property determines which formatting elements are considered required and which are optional.","nodes":[{"content":"To verify if only required input elements have been entered, use the <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> property instead. The current value of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property determines which formatting elements are considered required and which are optional.","pos":[0,326],"nodes":[{"content":"To verify if only required input elements have been entered, use the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A&gt;</ph> property instead.","pos":[0,151],"source":"To verify if only required input elements have been entered, use the <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> property instead."},{"content":"The current value of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Mask%2A&gt;</ph> property determines which formatting elements are considered required and which are optional.","pos":[152,326],"source":" The current value of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property determines which formatting elements are considered required and which are optional."}]}]}],"pos":[139654,139981],"yaml":true,"extradata":"MT"},{"content":"`true` if all required and optional inputs have been entered; otherwise, `false`.","nodes":[{"pos":[0,81],"content":"<ph id=\"ph1\">`true`</ph> if all required and optional inputs have been entered; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if all required and optional inputs have been entered; otherwise, `false`."}],"pos":[140092,140176],"yaml":true},{"content":"Gets or sets the character to be substituted for the actual input characters.","nodes":[{"pos":[0,77],"content":"Gets or sets the character to be substituted for the actual input characters.","nodes":[{"content":"Gets or sets the character to be substituted for the actual input characters.","pos":[0,77]}]}],"pos":[141469,141547],"yaml":true},{"content":"For sensitive user input, it is common practice to conceal the actual information entered by the user during output operations. If the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a non-`null` character, output methods such as <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> will obscure the input characters with the specified password character. Setting this property to `null` will disable password protection functionality.","nodes":[{"pos":[0,548],"content":"For sensitive user input, it is common practice to conceal the actual information entered by the user during output operations. If the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a non-`null` character, output methods such as <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> will obscure the input characters with the specified password character. Setting this property to `null` will disable password protection functionality.","nodes":[{"content":"For sensitive user input, it is common practice to conceal the actual information entered by the user during output operations.","pos":[0,127]},{"content":"If the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property is set to a non-<ph id=\"ph2\">`null`</ph> character, output methods such as <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> will obscure the input characters with the specified password character.","pos":[128,468],"source":" If the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a non-`null` character, output methods such as <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> will obscure the input characters with the specified password character."},{"content":"Setting this property to <ph id=\"ph1\">`null`</ph> will disable password protection functionality.","pos":[469,548],"source":" Setting this property to `null` will disable password protection functionality."}]}],"pos":[141558,142107],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Char\"></xref> value used as the password character.","nodes":[{"pos":[0,74],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> value used as the password character.","source":"The <xref href=\"System.Char\"></xref> value used as the password character."}],"pos":[142224,142299],"yaml":true},{"content":"The password character specified when setting this property is the same as the current prompt character, <xref href=\"System.ComponentModel.MaskedTextProvider.PromptChar\"></xref>. The two are required to be different.","nodes":[{"pos":[0,216],"content":"The password character specified when setting this property is the same as the current prompt character, <xref href=\"System.ComponentModel.MaskedTextProvider.PromptChar\"></xref>. The two are required to be different.","nodes":[{"content":"The password character specified when setting this property is the same as the current prompt character, <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider.PromptChar\"&gt;&lt;/xref&gt;</ph>.","pos":[0,178],"source":"The password character specified when setting this property is the same as the current prompt character, <xref href=\"System.ComponentModel.MaskedTextProvider.PromptChar\"></xref>."},{"content":"The two are required to be different.","pos":[179,216]}]}],"pos":[142490,142707],"yaml":true},{"content":"The character specified when setting this property is not a valid password character, as determined by the <xref href=\"System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)\"></xref> method.","nodes":[{"pos":[0,209],"content":"The character specified when setting this property is not a valid password character, as determined by the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)\"&gt;&lt;/xref&gt;</ph> method.","source":"The character specified when setting this property is not a valid password character, as determined by the <xref href=\"System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)\"></xref> method."}],"pos":[142801,143011],"yaml":true},{"content":"Gets or sets the character used to represent the absence of user input for all available edit positions.","nodes":[{"pos":[0,104],"content":"Gets or sets the character used to represent the absence of user input for all available edit positions.","nodes":[{"content":"Gets or sets the character used to represent the absence of user input for all available edit positions.","pos":[0,104]}]}],"pos":[144212,144317],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> property represents the prompt character that is used by the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods to represent the current state of the formatted input string. A prompt character is placed in editable positions that have not yet been assigned an input value. Some versions of the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method also depend on the value of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> property.","nodes":[{"pos":[0,621],"content":"The <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> property represents the prompt character that is used by the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods to represent the current state of the formatted input string. A prompt character is placed in editable positions that have not yet been assigned an input value. Some versions of the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method also depend on the value of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> property.","nodes":[{"content":"The <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> property represents the prompt character that is used by the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods to represent the current state of the formatted input string. A prompt character is placed in editable positions that have not yet been assigned an input value. Some versions of the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method also depend on the value of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> property.","pos":[0,621],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A&gt;</ph> property represents the prompt character that is used by the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> methods to represent the current state of the formatted input string.","pos":[0,327],"source":"The <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> property represents the prompt character that is used by the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods to represent the current state of the formatted input string."},{"content":"A prompt character is placed in editable positions that have not yet been assigned an input value.","pos":[328,426]},{"content":"Some versions of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> method also depend on the value of the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A&gt;</ph> property.","pos":[427,621],"source":" Some versions of the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method also depend on the value of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> property."}]}]}],"pos":[144328,144950],"yaml":true,"extradata":"MT"},{"content":"The character used to prompt the user for input. The default is an underscore (_).","nodes":[{"pos":[0,82],"content":"The character used to prompt the user for input. The default is an underscore (_).","nodes":[{"content":"The character used to prompt the user for input. The default is an underscore (_).","pos":[0,82],"nodes":[{"content":"The character used to prompt the user for input.","pos":[0,48]},{"content":"The default is an underscore (_).","pos":[49,82]}]}]}],"pos":[145065,145148],"yaml":true},{"content":"The prompt character specified when setting this property is the same as the current password character, <xref href=\"System.ComponentModel.MaskedTextProvider.PasswordChar\"></xref>. The two are required to be different.","nodes":[{"pos":[0,218],"content":"The prompt character specified when setting this property is the same as the current password character, <xref href=\"System.ComponentModel.MaskedTextProvider.PasswordChar\"></xref>. The two are required to be different.","nodes":[{"content":"The prompt character specified when setting this property is the same as the current password character, <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider.PasswordChar\"&gt;&lt;/xref&gt;</ph>.","pos":[0,180],"source":"The prompt character specified when setting this property is the same as the current password character, <xref href=\"System.ComponentModel.MaskedTextProvider.PasswordChar\"></xref>."},{"content":"The two are required to be different.","pos":[181,218]}]}],"pos":[145337,145556],"yaml":true},{"content":"The character specified when setting this property is not a valid password character, as determined by the <xref href=\"System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)\"></xref> method.","nodes":[{"pos":[0,209],"content":"The character specified when setting this property is not a valid password character, as determined by the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)\"&gt;&lt;/xref&gt;</ph> method.","source":"The character specified when setting this property is not a valid password character, as determined by the <xref href=\"System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)\"></xref> method."}],"pos":[145650,145860],"yaml":true},{"content":"Removes the last assigned character from the formatted string.","nodes":[{"pos":[0,62],"content":"Removes the last assigned character from the formatted string.","nodes":[{"content":"Removes the last assigned character from the formatted string.","pos":[0,62]}]}],"pos":[147041,147104],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> method has no effect if there are no characters assigned to the mask yet.  \n  \n When the last assigned character is removed from the formatted string, the editable mask character is reset for that position, allowing subsequent input.","nodes":[{"pos":[0,135],"content":"The <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> method has no effect if there are no characters assigned to the mask yet.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Remove%2A&gt;</ph> method has no effect if there are no characters assigned to the mask yet.","pos":[0,135],"source":"The <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> method has no effect if there are no characters assigned to the mask yet."}]},{"pos":[142,295],"content":"When the last assigned character is removed from the formatted string, the editable mask character is reset for that position, allowing subsequent input.","nodes":[{"content":"When the last assigned character is removed from the formatted string, the editable mask character is reset for that position, allowing subsequent input.","pos":[0,153]}]}],"pos":[147115,147415],"yaml":true,"extradata":"MT"},{"content":"`true` if the character was successfully removed; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if the character was successfully removed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the character was successfully removed; otherwise, `false`."}],"pos":[147538,147610],"yaml":true},{"content":"Removes the last assigned character from the formatted string, and then outputs the removal position and descriptive information.","nodes":[{"pos":[0,129],"content":"Removes the last assigned character from the formatted string, and then outputs the removal position and descriptive information.","nodes":[{"content":"Removes the last assigned character from the formatted string, and then outputs the removal position and descriptive information.","pos":[0,129]}]}],"pos":[149127,149257],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> method has no effect if there are no characters assigned to the mask yet.  \n  \n When the last assigned character is removed from the formatted string, the editable mask character is reset for that position, allowing subsequent input.","nodes":[{"pos":[0,135],"content":"The <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> method has no effect if there are no characters assigned to the mask yet.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Remove%2A&gt;</ph> method has no effect if there are no characters assigned to the mask yet.","pos":[0,135],"source":"The <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> method has no effect if there are no characters assigned to the mask yet."}]},{"pos":[142,295],"content":"When the last assigned character is removed from the formatted string, the editable mask character is reset for that position, allowing subsequent input.","nodes":[{"content":"When the last assigned character is removed from the formatted string, the editable mask character is reset for that position, allowing subsequent input.","pos":[0,153]}]}],"pos":[149268,149568],"yaml":true,"extradata":"MT"},{"content":"The zero-based position in the formatted string where the character was actually removed. An output parameter.","nodes":[{"pos":[0,110],"content":"The zero-based position in the formatted string where the character was actually removed. An output parameter.","nodes":[{"content":"The zero-based position in the formatted string where the character was actually removed. An output parameter.","pos":[0,110],"nodes":[{"content":"The zero-based position in the formatted string where the character was actually removed.","pos":[0,89]},{"content":"An output parameter.","pos":[90,110]}]}]}],"pos":[149776,149887],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the operation. An output parameter.","nodes":[{"pos":[0,141],"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the operation. An output parameter.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextResultHint\"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the operation.","pos":[0,120],"source":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the operation."},{"content":"An output parameter.","pos":[121,141]}]}],"pos":[149982,150124],"yaml":true},{"content":"`true` if the character was successfully removed; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if the character was successfully removed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the character was successfully removed; otherwise, `false`."}],"pos":[150182,150254],"yaml":true},{"content":"Removes the assigned character at the specified position from the formatted string.","nodes":[{"pos":[0,83],"content":"Removes the assigned character at the specified position from the formatted string.","nodes":[{"content":"Removes the assigned character at the specified position from the formatted string.","pos":[0,83]}]}],"pos":[151582,151666],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal position specified. Literal characters are not affected by this method.  \n  \n When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal. Vacated positions are reset for input. If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.  \n  \n This method call is exactly equivalent to the following call to the overloaded <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29> version:  \n  \n `RemoveAt(pos, pos);`","nodes":[{"pos":[0,207],"content":"The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal position specified. Literal characters are not affected by this method.","nodes":[{"content":"The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal position specified. Literal characters are not affected by this method.","pos":[0,207],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A&gt;</ph> method has no effect if there are no assigned characters at the removal position specified.","pos":[0,155],"source":"The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal position specified."},{"content":"Literal characters are not affected by this method.","pos":[156,207]}]}]},{"pos":[214,569],"content":"When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal. Vacated positions are reset for input. If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.","nodes":[{"content":"When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal.","pos":[0,149]},{"content":"Vacated positions are reset for input.","pos":[150,188]},{"content":"If movement of the characters is prevented by the mask definition, no removal occurs, and <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A&gt;</ph> returns <ph id=\"ph2\">`false`</ph>.","pos":[189,355],"source":" If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`."}]},{"pos":[576,753],"content":"This method call is exactly equivalent to the following call to the overloaded <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29> version:","nodes":[{"content":"This method call is exactly equivalent to the following call to the overloaded <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29&gt;</ph> version:","pos":[0,177],"source":"This method call is exactly equivalent to the following call to the overloaded <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29> version:"}]}],"pos":[151677,152467],"yaml":true,"extradata":"MT"},{"content":"The zero-based position of the assigned character to remove.","nodes":[{"pos":[0,60],"content":"The zero-based position of the assigned character to remove.","nodes":[{"content":"The zero-based position of the assigned character to remove.","pos":[0,60]}]}],"pos":[152606,152667],"yaml":true},{"content":"`true` if the character was successfully removed; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if the character was successfully removed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the character was successfully removed; otherwise, `false`."}],"pos":[152725,152797],"yaml":true},{"content":"Removes the assigned characters between the specified positions from the formatted string.","nodes":[{"pos":[0,90],"content":"Removes the assigned characters between the specified positions from the formatted string.","nodes":[{"content":"Removes the assigned characters between the specified positions from the formatted string.","pos":[0,90]}]}],"pos":[154187,154278],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal positions specified.  \n  \n When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal. Vacated positions are reset for input. If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.","nodes":[{"pos":[0,156],"content":"The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal positions specified.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A&gt;</ph> method has no effect if there are no assigned characters at the removal positions specified.","pos":[0,156],"source":"The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal positions specified."}]},{"pos":[163,518],"content":"When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal. Vacated positions are reset for input. If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.","nodes":[{"content":"When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal.","pos":[0,149]},{"content":"Vacated positions are reset for input.","pos":[150,188]},{"content":"If movement of the characters is prevented by the mask definition, no removal occurs, and <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A&gt;</ph> returns <ph id=\"ph2\">`false`</ph>.","pos":[189,355],"source":" If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`."}]}],"pos":[154289,154812],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the first assigned character to remove.","nodes":[{"pos":[0,63],"content":"The zero-based index of the first assigned character to remove.","nodes":[{"content":"The zero-based index of the first assigned character to remove.","pos":[0,63]}]}],"pos":[154978,155042],"yaml":true},{"content":"The zero-based index of the last assigned character to remove.","nodes":[{"pos":[0,62],"content":"The zero-based index of the last assigned character to remove.","nodes":[{"content":"The zero-based index of the last assigned character to remove.","pos":[0,62]}]}],"pos":[155108,155171],"yaml":true},{"content":"`true` if the character was successfully removed; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if the character was successfully removed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the character was successfully removed; otherwise, `false`."}],"pos":[155229,155301],"yaml":true},{"content":"Removes the assigned characters between the specified positions from the formatted string, and then outputs the removal position and descriptive information.","nodes":[{"pos":[0,157],"content":"Removes the assigned characters between the specified positions from the formatted string, and then outputs the removal position and descriptive information.","nodes":[{"content":"Removes the assigned characters between the specified positions from the formatted string, and then outputs the removal position and descriptive information.","pos":[0,157]}]}],"pos":[156952,157110],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal positions specified.  \n  \n When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal. Vacated positions are reset for input. If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.  \n  \n This version of <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> provides two additional output parameters to convey more information about the operation of the method.","nodes":[{"pos":[0,156],"content":"The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal positions specified.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A&gt;</ph> method has no effect if there are no assigned characters at the removal positions specified.","pos":[0,156],"source":"The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal positions specified."}]},{"pos":[163,518],"content":"When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal. Vacated positions are reset for input. If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.","nodes":[{"content":"When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal.","pos":[0,149]},{"content":"Vacated positions are reset for input.","pos":[150,188]},{"content":"If movement of the characters is prevented by the mask definition, no removal occurs, and <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A&gt;</ph> returns <ph id=\"ph2\">`false`</ph>.","pos":[189,355],"source":" If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`."}]},{"pos":[525,704],"content":"This version of <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> provides two additional output parameters to convey more information about the operation of the method.","nodes":[{"content":"This version of <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A&gt;</ph> provides two additional output parameters to convey more information about the operation of the method.","pos":[0,179],"source":"This version of <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> provides two additional output parameters to convey more information about the operation of the method."}]}],"pos":[157121,157832],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the first assigned character to remove.","nodes":[{"pos":[0,63],"content":"The zero-based index of the first assigned character to remove.","nodes":[{"content":"The zero-based index of the first assigned character to remove.","pos":[0,63]}]}],"pos":[158079,158143],"yaml":true},{"content":"The zero-based index of the last assigned character to remove.","nodes":[{"pos":[0,62],"content":"The zero-based index of the last assigned character to remove.","nodes":[{"content":"The zero-based index of the last assigned character to remove.","pos":[0,62]}]}],"pos":[158209,158272],"yaml":true},{"content":"If successful, the zero-based position in the formatted string of where the characters were actually removed; otherwise, the first position where the operation failed. An output parameter.","nodes":[{"pos":[0,188],"content":"If successful, the zero-based position in the formatted string of where the characters were actually removed; otherwise, the first position where the operation failed. An output parameter.","nodes":[{"content":"If successful, the zero-based position in the formatted string of where the characters were actually removed; otherwise, the first position where the operation failed. An output parameter.","pos":[0,188],"nodes":[{"content":"If successful, the zero-based position in the formatted string of where the characters were actually removed; otherwise, the first position where the operation failed.","pos":[0,167]},{"content":"An output parameter.","pos":[168,188]}]}]}],"pos":[158339,158528],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the operation. An output parameter.","nodes":[{"pos":[0,141],"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the operation. An output parameter.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextResultHint\"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the operation.","pos":[0,120],"source":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the operation."},{"content":"An output parameter.","pos":[121,141]}]}],"pos":[158623,158765],"yaml":true},{"content":"`true` if the character was successfully removed; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if the character was successfully removed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the character was successfully removed; otherwise, `false`."}],"pos":[158823,158895],"yaml":true},{"content":"Replaces a range of editable characters between the specified starting and ending positions with the specified string, and then outputs the removal position and descriptive information.","nodes":[{"pos":[0,185],"content":"Replaces a range of editable characters between the specified starting and ending positions with the specified string, and then outputs the removal position and descriptive information.","nodes":[{"content":"Replaces a range of editable characters between the specified starting and ending positions with the specified string, and then outputs the removal position and descriptive information.","pos":[0,185]}]}],"pos":[160606,160792],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> method searches for the first editable position in the formatted string between the specified starting and ending positions. Operating on the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.  \n  \n The following conditions are considered errors. When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> returns `false`.  \n  \n-   The `startPos` or `endPos` parameters point before the start of the formatted string or beyond its end.  \n  \n-   There are not enough editable positions in the formatted string to hold the contents of the replacement string.  \n  \n-   One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.  \n  \n In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.","nodes":[{"pos":[0,392],"content":"The <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> method searches for the first editable position in the formatted string between the specified starting and ending positions. Operating on the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Replace%2A&gt;</ph> method searches for the first editable position in the formatted string between the specified starting and ending positions.","pos":[0,187],"source":"The <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> method searches for the first editable position in the formatted string between the specified starting and ending positions."},{"content":"Operating on the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, <ph id=\"ph1\">`input`</ph>.","pos":[188,392],"source":" Operating on the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`."}]},{"pos":[399,570],"content":"The following conditions are considered errors. When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> returns `false`.","nodes":[{"content":"The following conditions are considered errors.","pos":[0,47]},{"content":"When an error occurs, no replacement occurs and <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Replace%2A&gt;</ph> returns <ph id=\"ph2\">`false`</ph>.","pos":[48,171],"source":" When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> returns `false`."}]},{"pos":[580,683],"content":"The <ph id=\"ph1\">`startPos`</ph> or <ph id=\"ph2\">`endPos`</ph> parameters point before the start of the formatted string or beyond its end.","source":"The `startPos` or `endPos` parameters point before the start of the formatted string or beyond its end."},{"pos":[693,804],"content":"There are not enough editable positions in the formatted string to hold the contents of the replacement string.","nodes":[{"content":"There are not enough editable positions in the formatted string to hold the contents of the replacement string.","pos":[0,111]}]},{"pos":[814,944],"content":"One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.","nodes":[{"content":"One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.","pos":[0,130]}]},{"pos":[951,1087],"content":"In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.","nodes":[{"content":"In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.","pos":[0,136]}]}],"pos":[160803,161903],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> value used to replace the existing editable characters.","nodes":[{"pos":[0,94],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> value used to replace the existing editable characters.","source":"The <xref href=\"System.String\"></xref> value used to replace the existing editable characters."}],"pos":[162156,162251],"yaml":true},{"content":"The zero-based position in the formatted string where the replacement starts.","nodes":[{"pos":[0,77],"content":"The zero-based position in the formatted string where the replacement starts.","nodes":[{"content":"The zero-based position in the formatted string where the replacement starts.","pos":[0,77]}]}],"pos":[162319,162397],"yaml":true},{"content":"The zero-based position in the formatted string where the replacement ends.","nodes":[{"pos":[0,75],"content":"The zero-based position in the formatted string where the replacement ends.","nodes":[{"content":"The zero-based position in the formatted string where the replacement ends.","pos":[0,75]}]}],"pos":[162463,162539],"yaml":true},{"content":"If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed. An output parameter.","nodes":[{"pos":[0,189],"content":"If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed. An output parameter.","nodes":[{"content":"If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed. An output parameter.","pos":[0,189],"nodes":[{"content":"If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.","pos":[0,168]},{"content":"An output parameter.","pos":[169,189]}]}]}],"pos":[162606,162796],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the replacement operation. An output parameter.","nodes":[{"pos":[0,153],"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the replacement operation. An output parameter.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextResultHint\"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the replacement operation.","pos":[0,132],"source":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the replacement operation."},{"content":"An output parameter.","pos":[133,153]}]}],"pos":[162891,163045],"yaml":true},{"content":"`true` if all the characters were successfully replaced; otherwise, `false`.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> if all the characters were successfully replaced; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if all the characters were successfully replaced; otherwise, `false`."}],"pos":[163103,163182],"yaml":true},{"content":"Replaces a single character between the specified starting and ending positions with the specified character value, and then outputs the removal position and descriptive information.","nodes":[{"pos":[0,182],"content":"Replaces a single character between the specified starting and ending positions with the specified character value, and then outputs the removal position and descriptive information.","nodes":[{"content":"Replaces a single character between the specified starting and ending positions with the specified character value, and then outputs the removal position and descriptive information.","pos":[0,182]}]}],"pos":[164880,165063],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position in the formatted string between the specified starting and ending positions. If one is found, the value of the editable position is changed to the specified character, `input`. Any of the following conditions will result in an error condition that causes no replacement to be performed and a value of `false` to be returned:  \n  \n-   The `startPos` or `endPos` parameters point before the start of the formatted string or beyond its end.  \n  \n-   An editable character was not found in the specified interval.  \n  \n-   The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.  \n  \n In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.","nodes":[{"pos":[0,545],"content":"The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position in the formatted string between the specified starting and ending positions. If one is found, the value of the editable position is changed to the specified character, `input`. Any of the following conditions will result in an error condition that causes no replacement to be performed and a value of `false` to be returned:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29&gt;</ph> method searches for the first editable position in the formatted string between the specified starting and ending positions.","pos":[0,297],"source":"The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position in the formatted string between the specified starting and ending positions."},{"content":"If one is found, the value of the editable position is changed to the specified character, <ph id=\"ph1\">`input`</ph>.","pos":[298,397],"source":" If one is found, the value of the editable position is changed to the specified character, `input`."},{"content":"Any of the following conditions will result in an error condition that causes no replacement to be performed and a value of <ph id=\"ph1\">`false`</ph> to be returned:","pos":[398,545],"source":" Any of the following conditions will result in an error condition that causes no replacement to be performed and a value of `false` to be returned:"}]},{"pos":[555,658],"content":"The <ph id=\"ph1\">`startPos`</ph> or <ph id=\"ph2\">`endPos`</ph> parameters point before the start of the formatted string or beyond its end.","source":"The `startPos` or `endPos` parameters point before the start of the formatted string or beyond its end."},{"pos":[668,730],"content":"An editable character was not found in the specified interval.","nodes":[{"content":"An editable character was not found in the specified interval.","pos":[0,62]}]},{"pos":[740,884],"content":"The replacement character, <ph id=\"ph1\">`input`</ph>, is not a valid input character because it is not printable or does not match its corresponding mask element.","source":"The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element."},{"pos":[891,1027],"content":"In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.","nodes":[{"content":"In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.","pos":[0,136]}]}],"pos":[165074,166112],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Char\"></xref> value that replaces the existing value.","nodes":[{"pos":[0,76],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> value that replaces the existing value.","source":"The <xref href=\"System.Char\"></xref> value that replaces the existing value."}],"pos":[166361,166438],"yaml":true},{"content":"The zero-based position in the formatted string where the replacement starts.","nodes":[{"pos":[0,77],"content":"The zero-based position in the formatted string where the replacement starts.","nodes":[{"content":"The zero-based position in the formatted string where the replacement starts.","pos":[0,77]}]}],"pos":[166506,166584],"yaml":true},{"content":"The zero-based position in the formatted string where the replacement ends.","nodes":[{"pos":[0,75],"content":"The zero-based position in the formatted string where the replacement ends.","nodes":[{"content":"The zero-based position in the formatted string where the replacement ends.","pos":[0,75]}]}],"pos":[166650,166726],"yaml":true},{"content":"If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed. An output parameter.","nodes":[{"pos":[0,189],"content":"If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed. An output parameter.","nodes":[{"content":"If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed. An output parameter.","pos":[0,189],"nodes":[{"content":"If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.","pos":[0,168]},{"content":"An output parameter.","pos":[169,189]}]}]}],"pos":[166793,166983],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the replacement operation. An output parameter.","nodes":[{"pos":[0,153],"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the replacement operation. An output parameter.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextResultHint\"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the replacement operation.","pos":[0,132],"source":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the replacement operation."},{"content":"An output parameter.","pos":[133,153]}]}],"pos":[167078,167232],"yaml":true},{"content":"`true` if the character was successfully replaced; otherwise, `false`.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">`true`</ph> if the character was successfully replaced; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the character was successfully replaced; otherwise, `false`."}],"pos":[167290,167363],"yaml":true},{"content":"Replaces a range of editable characters starting at the specified position with the specified string, and then outputs the removal position and descriptive information.","nodes":[{"pos":[0,168],"content":"Replaces a range of editable characters starting at the specified position with the specified string, and then outputs the removal position and descriptive information.","nodes":[{"content":"Replaces a range of editable characters starting at the specified position with the specified string, and then outputs the removal position and descriptive information.","pos":[0,168]}]}],"pos":[169013,169182],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position at or beyond the specified position, `pos`. Operating on the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.  \n  \n The following conditions are considered errors. When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> returns `false`.  \n  \n-   The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.  \n  \n-   There are not enough editable positions in the formatted string to hold the contents of the replacement string.  \n  \n-   One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.  \n  \n In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.","nodes":[{"pos":[0,456],"content":"The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position at or beyond the specified position, `pos`. Operating on the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29&gt;</ph> method searches for the first editable position at or beyond the specified position, <ph id=\"ph2\">`pos`</ph>.","pos":[0,251],"source":"The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position at or beyond the specified position, `pos`."},{"content":"Operating on the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, <ph id=\"ph1\">`input`</ph>.","pos":[252,456],"source":" Operating on the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`."}]},{"pos":[463,731],"content":"The following conditions are considered errors. When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> returns `false`.","nodes":[{"content":"The following conditions are considered errors.","pos":[0,47]},{"content":"When an error occurs, no replacement occurs and <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29&gt;</ph> returns <ph id=\"ph2\">`false`</ph>.","pos":[48,268],"source":" When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> returns `false`."}]},{"pos":[741,881],"content":"The <ph id=\"ph1\">`pos`</ph> parameter is less than zero or greater than the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string.","source":"The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string."},{"pos":[891,1002],"content":"There are not enough editable positions in the formatted string to hold the contents of the replacement string.","nodes":[{"content":"There are not enough editable positions in the formatted string to hold the contents of the replacement string.","pos":[0,111]}]},{"pos":[1012,1142],"content":"One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.","nodes":[{"content":"One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.","pos":[0,130]}]},{"pos":[1149,1285],"content":"In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.","nodes":[{"content":"In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.","pos":[0,136]}]}],"pos":[169193,170491],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> value used to replace the existing editable characters.","nodes":[{"pos":[0,94],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> value used to replace the existing editable characters.","source":"The <xref href=\"System.String\"></xref> value used to replace the existing editable characters."}],"pos":[170722,170817],"yaml":true},{"content":"The zero-based position to search for the first editable character to replace.","nodes":[{"pos":[0,78],"content":"The zero-based position to search for the first editable character to replace.","nodes":[{"content":"The zero-based position to search for the first editable character to replace.","pos":[0,78]}]}],"pos":[170880,170959],"yaml":true},{"content":"If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed. An output parameter.","nodes":[{"pos":[0,189],"content":"If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed. An output parameter.","nodes":[{"content":"If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed. An output parameter.","pos":[0,189],"nodes":[{"content":"If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.","pos":[0,168]},{"content":"An output parameter.","pos":[169,189]}]}]}],"pos":[171026,171216],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the replacement operation. An output parameter.","nodes":[{"pos":[0,153],"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the replacement operation. An output parameter.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextResultHint\"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the replacement operation.","pos":[0,132],"source":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the replacement operation."},{"content":"An output parameter.","pos":[133,153]}]}],"pos":[171311,171465],"yaml":true},{"content":"`true` if all the characters were successfully replaced; otherwise, `false`.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> if all the characters were successfully replaced; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if all the characters were successfully replaced; otherwise, `false`."}],"pos":[171523,171602],"yaml":true},{"content":"Replaces a single character at or beyond the specified position with the specified character value, and then outputs the removal position and descriptive information.","nodes":[{"pos":[0,166],"content":"Replaces a single character at or beyond the specified position with the specified character value, and then outputs the removal position and descriptive information.","nodes":[{"content":"Replaces a single character at or beyond the specified position with the specified character value, and then outputs the removal position and descriptive information.","pos":[0,166]}]}],"pos":[173240,173407],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position in the formatted string at or beyond the specified position, `pos`. If one is found, the value of the editable position is changed to the specified character, `input`. Any of the following conditions will result in an error condition that causes no replacement to be performed and a value of `false` to be returned:  \n  \n-   The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.  \n  \n-   An editable character was not found in the formatted string at or beyond the specified position, `pos`.  \n  \n-   The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.  \n  \n In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.","nodes":[{"pos":[0,521],"content":"The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position in the formatted string at or beyond the specified position, `pos`. If one is found, the value of the editable position is changed to the specified character, `input`. Any of the following conditions will result in an error condition that causes no replacement to be performed and a value of `false` to be returned:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29&gt;</ph> method searches for the first editable position in the formatted string at or beyond the specified position, <ph id=\"ph2\">`pos`</ph>.","pos":[0,273],"source":"The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position in the formatted string at or beyond the specified position, `pos`."},{"content":"If one is found, the value of the editable position is changed to the specified character, <ph id=\"ph1\">`input`</ph>.","pos":[274,373],"source":" If one is found, the value of the editable position is changed to the specified character, `input`."},{"content":"Any of the following conditions will result in an error condition that causes no replacement to be performed and a value of <ph id=\"ph1\">`false`</ph> to be returned:","pos":[374,521],"source":" Any of the following conditions will result in an error condition that causes no replacement to be performed and a value of `false` to be returned:"}]},{"pos":[531,671],"content":"The <ph id=\"ph1\">`pos`</ph> parameter is less than zero or greater than the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string.","source":"The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string."},{"pos":[681,784],"content":"An editable character was not found in the formatted string at or beyond the specified position, <ph id=\"ph1\">`pos`</ph>.","source":"An editable character was not found in the formatted string at or beyond the specified position, `pos`."},{"pos":[794,938],"content":"The replacement character, <ph id=\"ph1\">`input`</ph>, is not a valid input character because it is not printable or does not match its corresponding mask element.","source":"The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element."},{"pos":[945,1081],"content":"In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.","nodes":[{"content":"In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.","pos":[0,136]}]}],"pos":[173418,174510],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Char\"></xref> value that replaces the existing value.","nodes":[{"pos":[0,76],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> value that replaces the existing value.","source":"The <xref href=\"System.Char\"></xref> value that replaces the existing value."}],"pos":[174737,174814],"yaml":true},{"content":"The zero-based position to search for the first editable character to replace.","nodes":[{"pos":[0,78],"content":"The zero-based position to search for the first editable character to replace.","nodes":[{"content":"The zero-based position to search for the first editable character to replace.","pos":[0,78]}]}],"pos":[174877,174956],"yaml":true},{"content":"If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed. An output parameter.","nodes":[{"pos":[0,189],"content":"If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed. An output parameter.","nodes":[{"content":"If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed. An output parameter.","pos":[0,189],"nodes":[{"content":"If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.","pos":[0,168]},{"content":"An output parameter.","pos":[169,189]}]}]}],"pos":[175023,175213],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the replacement operation. An output parameter.","nodes":[{"pos":[0,153],"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the replacement operation. An output parameter.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextResultHint\"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the replacement operation.","pos":[0,132],"source":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the replacement operation."},{"content":"An output parameter.","pos":[133,153]}]}],"pos":[175308,175462],"yaml":true},{"content":"`true` if the character was successfully replaced; otherwise, `false`.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">`true`</ph> if the character was successfully replaced; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the character was successfully replaced; otherwise, `false`."}],"pos":[175520,175593],"yaml":true},{"content":"Replaces a range of editable characters starting at the specified position with the specified string.","nodes":[{"pos":[0,101],"content":"Replaces a range of editable characters starting at the specified position with the specified string.","nodes":[{"content":"Replaces a range of editable characters starting at the specified position with the specified string.","pos":[0,101]}]}],"pos":[176982,177084],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> method searches for the first editable position at or beyond the specified position, `pos`. Operating under the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.  \n  \n The following conditions are considered errors. When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> returns `false`.  \n  \n-   The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.  \n  \n-   There are not enough editable positions in the formatted string to hold the contents of the replacement string.  \n  \n-   One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.","nodes":[{"pos":[0,393],"content":"The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> method searches for the first editable position at or beyond the specified position, `pos`. Operating under the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29&gt;</ph> method searches for the first editable position at or beyond the specified position, <ph id=\"ph2\">`pos`</ph>.","pos":[0,185],"source":"The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> method searches for the first editable position at or beyond the specified position, `pos`."},{"content":"Operating under the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, <ph id=\"ph1\">`input`</ph>.","pos":[186,393],"source":" Operating under the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`."}]},{"pos":[400,602],"content":"The following conditions are considered errors. When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> returns `false`.","nodes":[{"content":"The following conditions are considered errors.","pos":[0,47]},{"content":"When an error occurs, no replacement occurs and <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29&gt;</ph> returns <ph id=\"ph2\">`false`</ph>.","pos":[48,202],"source":" When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> returns `false`."}]},{"pos":[612,752],"content":"The <ph id=\"ph1\">`pos`</ph> parameter is less than zero or greater than the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string.","source":"The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string."},{"pos":[762,873],"content":"There are not enough editable positions in the formatted string to hold the contents of the replacement string.","nodes":[{"content":"There are not enough editable positions in the formatted string to hold the contents of the replacement string.","pos":[0,111]}]},{"pos":[883,1013],"content":"One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.","nodes":[{"content":"One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.","pos":[0,130]}]}],"pos":[177095,178119],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> value used to replace the existing editable characters.","nodes":[{"pos":[0,94],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> value used to replace the existing editable characters.","source":"The <xref href=\"System.String\"></xref> value used to replace the existing editable characters."}],"pos":[178269,178364],"yaml":true},{"content":"The zero-based position to search for the first editable character to replace.","nodes":[{"pos":[0,78],"content":"The zero-based position to search for the first editable character to replace.","nodes":[{"content":"The zero-based position to search for the first editable character to replace.","pos":[0,78]}]}],"pos":[178427,178506],"yaml":true},{"content":"`true` if all the characters were successfully replaced; otherwise, `false`.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> if all the characters were successfully replaced; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if all the characters were successfully replaced; otherwise, `false`."}],"pos":[178564,178643],"yaml":true},{"content":"The <code>input</code> parameter is `null`.","nodes":[{"pos":[0,43],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>input</code> parameter is `null`."}],"pos":[178821,178865],"yaml":true},{"content":"Replaces a single character at or beyond the specified position with the specified character value.","nodes":[{"pos":[0,99],"content":"Replaces a single character at or beyond the specified position with the specified character value.","nodes":[{"content":"Replaces a single character at or beyond the specified position with the specified character value.","pos":[0,99]}]}],"pos":[180163,180263],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%29> method searches for the first editable position in the formatted string at or beyond the specified position, `pos`. If one is found, the value of the editable position is changed to the specified character, `input`. Any of the following conditions will result in an error that causes no replacement to be performed and a value of `false` to be returned:  \n  \n-   The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.  \n  \n-   An editable character was not found in the formatted string at or beyond the specified position, `pos`.  \n  \n-   The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.","nodes":[{"pos":[0,445],"content":"The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%29> method searches for the first editable position in the formatted string at or beyond the specified position, `pos`. If one is found, the value of the editable position is changed to the specified character, `input`. Any of the following conditions will result in an error that causes no replacement to be performed and a value of `false` to be returned:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%29&gt;</ph> method searches for the first editable position in the formatted string at or beyond the specified position, <ph id=\"ph2\">`pos`</ph>.","pos":[0,207],"source":"The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%29> method searches for the first editable position in the formatted string at or beyond the specified position, `pos`."},{"content":"If one is found, the value of the editable position is changed to the specified character, <ph id=\"ph1\">`input`</ph>.","pos":[208,307],"source":" If one is found, the value of the editable position is changed to the specified character, `input`."},{"content":"Any of the following conditions will result in an error that causes no replacement to be performed and a value of <ph id=\"ph1\">`false`</ph> to be returned:","pos":[308,445],"source":" Any of the following conditions will result in an error that causes no replacement to be performed and a value of `false` to be returned:"}]},{"pos":[455,595],"content":"The <ph id=\"ph1\">`pos`</ph> parameter is less than zero or greater than the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string.","source":"The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string."},{"pos":[605,708],"content":"An editable character was not found in the formatted string at or beyond the specified position, <ph id=\"ph1\">`pos`</ph>.","source":"An editable character was not found in the formatted string at or beyond the specified position, `pos`."},{"pos":[718,862],"content":"The replacement character, <ph id=\"ph1\">`input`</ph>, is not a valid input character because it is not printable or does not match its corresponding mask element.","source":"The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element."}],"pos":[180274,181145],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Char\"></xref> value that replaces the existing value.","nodes":[{"pos":[0,76],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> value that replaces the existing value.","source":"The <xref href=\"System.Char\"></xref> value that replaces the existing value."}],"pos":[181291,181368],"yaml":true},{"content":"The zero-based position to search for the first editable character to replace.","nodes":[{"pos":[0,78],"content":"The zero-based position to search for the first editable character to replace.","nodes":[{"content":"The zero-based position to search for the first editable character to replace.","pos":[0,78]}]}],"pos":[181431,181510],"yaml":true},{"content":"`true` if the character was successfully replaced; otherwise, `false`.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">`true`</ph> if the character was successfully replaced; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the character was successfully replaced; otherwise, `false`."}],"pos":[181568,181641],"yaml":true},{"content":"Gets or sets a value that determines how an input character that matches the prompt character should be handled.","nodes":[{"pos":[0,112],"content":"Gets or sets a value that determines how an input character that matches the prompt character should be handled.","nodes":[{"content":"Gets or sets a value that determines how an input character that matches the prompt character should be handled.","pos":[0,112]}]}],"pos":[182939,183052],"yaml":true},{"content":"<xref:System.ComponentModel.MaskedTextProvider> can treat two categories of characters, paces and prompt characters, in a special manner. Normally, each input character will be tested against the mask and either accepted or rejected. Operating on the assumption that the <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> property is set to a value other than `null`, then setting the <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> property to `true` will result in special processing for the prompt character. When a prompt character is added, it causes the current mask character position to be cleared and the current position to be advanced to the next editable character.  \n  \n <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> takes precedence over the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property as described in the following table.  \n  \n|<xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>|<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>|Resulting behavior|  \n|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------|  \n|`true`|`true`|The prompt character can be added and it causes the current mask position to be reset. The default.|  \n|`true`|`false`|The prompt character can be added and it causes the current mask position to be reset.|  \n|`false`|`true`|The prompt character is processed as a normal input character.|  \n|`false`|`false`|The prompt character is not valid and methods attempting to add the character will fail.|","nodes":[{"pos":[0,705],"content":"<xref:System.ComponentModel.MaskedTextProvider> can treat two categories of characters, paces and prompt characters, in a special manner. Normally, each input character will be tested against the mask and either accepted or rejected. Operating on the assumption that the <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> property is set to a value other than `null`, then setting the <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> property to `true` will result in special processing for the prompt character. When a prompt character is added, it causes the current mask character position to be cleared and the current position to be advanced to the next editable character.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider&gt;</ph> can treat two categories of characters, paces and prompt characters, in a special manner.","pos":[0,137],"source":"<xref:System.ComponentModel.MaskedTextProvider> can treat two categories of characters, paces and prompt characters, in a special manner."},{"content":"Normally, each input character will be tested against the mask and either accepted or rejected.","pos":[138,233]},{"content":"Operating on the assumption that the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A&gt;</ph> property is set to a value other than <ph id=\"ph2\">`null`</ph>, then setting the <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A&gt;</ph> property to <ph id=\"ph4\">`true`</ph> will result in special processing for the prompt character.","pos":[234,539],"source":" Operating on the assumption that the <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> property is set to a value other than `null`, then setting the <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> property to `true` will result in special processing for the prompt character."},{"content":"When a prompt character is added, it causes the current mask character position to be cleared and the current position to be advanced to the next editable character.","pos":[540,705]}]},{"pos":[712,918],"content":"<xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> takes precedence over the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property as described in the following table.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A&gt;</ph> takes precedence over the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A&gt;</ph> property as described in the following table.","pos":[0,206],"source":"<xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> takes precedence over the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property as described in the following table."}]},{"pos":[925,989],"content":"<xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>","nodes":[]},{"pos":[990,1059],"content":"<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>","nodes":[]},{"pos":[1060,1078],"content":"Resulting behavior","nodes":[{"content":"Resulting behavior","pos":[0,18]}]},{"pos":[1463,1562],"content":"The prompt character can be added and it causes the current mask position to be reset. The default.","nodes":[{"content":"The prompt character can be added and it causes the current mask position to be reset. The default.","pos":[0,99],"nodes":[{"content":"The prompt character can be added and it causes the current mask position to be reset.","pos":[0,86]},{"content":"The default.","pos":[87,99]}]}]},{"pos":[1582,1668],"content":"The prompt character can be added and it causes the current mask position to be reset.","nodes":[{"content":"The prompt character can be added and it causes the current mask position to be reset.","pos":[0,86]}]},{"pos":[1688,1750],"content":"The prompt character is processed as a normal input character.","nodes":[{"content":"The prompt character is processed as a normal input character.","pos":[0,62]}]},{"pos":[1771,1859],"content":"The prompt character is not valid and methods attempting to add the character will fail.","nodes":[{"content":"The prompt character is not valid and methods attempting to add the character will fail.","pos":[0,88]}]}],"pos":[183063,184935],"yaml":true,"extradata":"MT"},{"content":"`true` if the prompt character entered as input causes the current editable position in the mask to be reset; otherwise, `false` to indicate that the prompt character is to be processed as a normal input character. The default is `true`.","nodes":[{"pos":[0,237],"content":"`true` if the prompt character entered as input causes the current editable position in the mask to be reset; otherwise, `false` to indicate that the prompt character is to be processed as a normal input character. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the prompt character entered as input causes the current editable position in the mask to be reset; otherwise, <ph id=\"ph2\">`false`</ph> to indicate that the prompt character is to be processed as a normal input character.","pos":[0,214],"source":"`true` if the prompt character entered as input causes the current editable position in the mask to be reset; otherwise, `false` to indicate that the prompt character is to be processed as a normal input character."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[215,237],"source":" The default is `true`."}]}],"pos":[185056,185296],"yaml":true},{"content":"Gets or sets a value that determines how a space input character should be handled.","nodes":[{"pos":[0,83],"content":"Gets or sets a value that determines how a space input character should be handled.","nodes":[{"content":"Gets or sets a value that determines how a space input character should be handled.","pos":[0,83]}]}],"pos":[186594,186678],"yaml":true},{"content":"<xref:System.ComponentModel.MaskedTextProvider> can treat two categories of characters, spaces and prompt characters, in a special manner. Normally, each input character will be tested against the mask and either accepted or rejected. Setting the <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> property to `true` will result in the current mask character position being cleared and the current position being advanced to the next editable character.  \n  \n <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> is useful when assigning text that was saved excluding the prompt, where the prompt is replaced with a space. Before restoring such a string, setting <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> to `true` will reset the prompt characters at the positions occupied by spaces in the input string.","nodes":[{"pos":[0,466],"content":"<xref:System.ComponentModel.MaskedTextProvider> can treat two categories of characters, spaces and prompt characters, in a special manner. Normally, each input character will be tested against the mask and either accepted or rejected. Setting the <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> property to `true` will result in the current mask character position being cleared and the current position being advanced to the next editable character.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider&gt;</ph> can treat two categories of characters, spaces and prompt characters, in a special manner.","pos":[0,138],"source":"<xref:System.ComponentModel.MaskedTextProvider> can treat two categories of characters, spaces and prompt characters, in a special manner."},{"content":"Normally, each input character will be tested against the mask and either accepted or rejected.","pos":[139,234]},{"content":"Setting the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph> will result in the current mask character position being cleared and the current position being advanced to the next editable character.","pos":[235,466],"source":" Setting the <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> property to `true` will result in the current mask character position being cleared and the current position being advanced to the next editable character."}]},{"pos":[473,850],"content":"<xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> is useful when assigning text that was saved excluding the prompt, where the prompt is replaced with a space. Before restoring such a string, setting <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> to `true` will reset the prompt characters at the positions occupied by spaces in the input string.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A&gt;</ph> is useful when assigning text that was saved excluding the prompt, where the prompt is replaced with a space.","pos":[0,173],"source":"<xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> is useful when assigning text that was saved excluding the prompt, where the prompt is replaced with a space."},{"content":"Before restoring such a string, setting <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A&gt;</ph> to <ph id=\"ph2\">`true`</ph> will reset the prompt characters at the positions occupied by spaces in the input string.","pos":[174,377],"source":" Before restoring such a string, setting <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> to `true` will reset the prompt characters at the positions occupied by spaces in the input string."}]}],"pos":[186689,187544],"yaml":true,"extradata":"MT"},{"content":"`true` if the space input character causes the current editable position in the mask to be reset; otherwise, `false` to indicate that it is to be processed as a normal input character. The default is `true`.","nodes":[{"pos":[0,207],"content":"`true` if the space input character causes the current editable position in the mask to be reset; otherwise, `false` to indicate that it is to be processed as a normal input character. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the space input character causes the current editable position in the mask to be reset; otherwise, <ph id=\"ph2\">`false`</ph> to indicate that it is to be processed as a normal input character.","pos":[0,184],"source":"`true` if the space input character causes the current editable position in the mask to be reset; otherwise, `false` to indicate that it is to be processed as a normal input character."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[185,207],"source":" The default is `true`."}]}],"pos":[187664,187874],"yaml":true},{"content":"Sets the formatted string to the specified input string.","nodes":[{"pos":[0,56],"content":"Sets the formatted string to the specified input string.","nodes":[{"content":"Sets the formatted string to the specified input string.","pos":[0,56]}]}],"pos":[189184,189241],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.Set%2A> method clears the existing contents of the formatted string and then applies the mask against the `input` string to update the contents of the formatted string.  \n  \n The following conditions are considered errors. When an error occurs, the formatted string remains unaltered and <xref:System.ComponentModel.MaskedTextProvider.Set%2A> returns `false`.  \n  \n-   There are not enough editable positions in the formatted string to hold the contents of the replacement string.  \n  \n-   One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.","nodes":[{"pos":[0,219],"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Set%2A&gt;</ph> method clears the existing contents of the formatted string and then applies the mask against the <ph id=\"ph2\">`input`</ph> string to update the contents of the formatted string.","source":"The <xref:System.ComponentModel.MaskedTextProvider.Set%2A> method clears the existing contents of the formatted string and then applies the mask against the `input` string to update the contents of the formatted string."},{"pos":[226,410],"content":"The following conditions are considered errors. When an error occurs, the formatted string remains unaltered and <xref:System.ComponentModel.MaskedTextProvider.Set%2A> returns `false`.","nodes":[{"content":"The following conditions are considered errors.","pos":[0,47]},{"content":"When an error occurs, the formatted string remains unaltered and <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Set%2A&gt;</ph> returns <ph id=\"ph2\">`false`</ph>.","pos":[48,184],"source":" When an error occurs, the formatted string remains unaltered and <xref:System.ComponentModel.MaskedTextProvider.Set%2A> returns `false`."}]},{"pos":[420,531],"content":"There are not enough editable positions in the formatted string to hold the contents of the replacement string.","nodes":[{"content":"There are not enough editable positions in the formatted string to hold the contents of the replacement string.","pos":[0,111]}]},{"pos":[541,671],"content":"One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.","nodes":[{"content":"One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.","pos":[0,130]}]}],"pos":[189252,189932],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> value used to set the formatted string.","nodes":[{"pos":[0,78],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> value used to set the formatted string.","source":"The <xref href=\"System.String\"></xref> value used to set the formatted string."}],"pos":[190064,190143],"yaml":true},{"content":"`true` if all the characters were successfully set; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if all the characters were successfully set; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if all the characters were successfully set; otherwise, `false`."}],"pos":[190201,190275],"yaml":true},{"content":"The <code>input</code> parameter is `null`.","nodes":[{"pos":[0,43],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>input</code> parameter is `null`."}],"pos":[190449,190493],"yaml":true},{"content":"Sets the formatted string to the specified input string, and then outputs the removal position and descriptive information.","nodes":[{"pos":[0,123],"content":"Sets the formatted string to the specified input string, and then outputs the removal position and descriptive information.","nodes":[{"content":"Sets the formatted string to the specified input string, and then outputs the removal position and descriptive information.","pos":[0,123]}]}],"pos":[191980,192104],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.Set%2A> method clears the existing contents of the formatted string and then applies the mask against the `input` string to update the contents of the formatted string.  \n  \n The following conditions are considered errors. When an error occurs, the formatted string remains unaltered and <xref:System.ComponentModel.MaskedTextProvider.Set%2A> returns `false`.  \n  \n-   There are not enough editable positions in the formatted string to hold the contents of the replacement string.  \n  \n-   One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.  \n  \n This version of <xref:System.ComponentModel.MaskedTextProvider.Set%2A> provides two additional output parameters to convey more information about the operation of the method.","nodes":[{"pos":[0,219],"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Set%2A&gt;</ph> method clears the existing contents of the formatted string and then applies the mask against the <ph id=\"ph2\">`input`</ph> string to update the contents of the formatted string.","source":"The <xref:System.ComponentModel.MaskedTextProvider.Set%2A> method clears the existing contents of the formatted string and then applies the mask against the `input` string to update the contents of the formatted string."},{"pos":[226,410],"content":"The following conditions are considered errors. When an error occurs, the formatted string remains unaltered and <xref:System.ComponentModel.MaskedTextProvider.Set%2A> returns `false`.","nodes":[{"content":"The following conditions are considered errors.","pos":[0,47]},{"content":"When an error occurs, the formatted string remains unaltered and <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Set%2A&gt;</ph> returns <ph id=\"ph2\">`false`</ph>.","pos":[48,184],"source":" When an error occurs, the formatted string remains unaltered and <xref:System.ComponentModel.MaskedTextProvider.Set%2A> returns `false`."}]},{"pos":[420,531],"content":"There are not enough editable positions in the formatted string to hold the contents of the replacement string.","nodes":[{"content":"There are not enough editable positions in the formatted string to hold the contents of the replacement string.","pos":[0,111]}]},{"pos":[541,671],"content":"One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.","nodes":[{"content":"One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.","pos":[0,130]}]},{"pos":[678,852],"content":"This version of <xref:System.ComponentModel.MaskedTextProvider.Set%2A> provides two additional output parameters to convey more information about the operation of the method.","nodes":[{"content":"This version of <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.Set%2A&gt;</ph> provides two additional output parameters to convey more information about the operation of the method.","pos":[0,174],"source":"This version of <xref:System.ComponentModel.MaskedTextProvider.Set%2A> provides two additional output parameters to convey more information about the operation of the method."}]}],"pos":[192115,192978],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> value used to set the formatted string.","nodes":[{"pos":[0,78],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> value used to set the formatted string.","source":"The <xref href=\"System.String\"></xref> value used to set the formatted string."}],"pos":[193191,193270],"yaml":true},{"content":"If successful, the zero-based position in the formatted string where the last character was actually set; otherwise, the first position where the operation failed. An output parameter.","nodes":[{"pos":[0,184],"content":"If successful, the zero-based position in the formatted string where the last character was actually set; otherwise, the first position where the operation failed. An output parameter.","nodes":[{"content":"If successful, the zero-based position in the formatted string where the last character was actually set; otherwise, the first position where the operation failed. An output parameter.","pos":[0,184],"nodes":[{"content":"If successful, the zero-based position in the formatted string where the last character was actually set; otherwise, the first position where the operation failed.","pos":[0,163]},{"content":"An output parameter.","pos":[164,184]}]}]}],"pos":[193337,193522],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the set operation. An output parameter.","nodes":[{"pos":[0,145],"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the set operation. An output parameter.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextResultHint\"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the set operation.","pos":[0,124],"source":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the set operation."},{"content":"An output parameter.","pos":[125,145]}]}],"pos":[193617,193763],"yaml":true},{"content":"`true` if all the characters were successfully set; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if all the characters were successfully set; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if all the characters were successfully set; otherwise, `false`."}],"pos":[193821,193895],"yaml":true},{"content":"The <code>input</code> parameter is `null`.","nodes":[{"pos":[0,43],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">input</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>input</code> parameter is `null`."}],"pos":[194069,194113],"yaml":true},{"content":"Gets or sets a value indicating whether literal character positions in the mask can be overwritten by their same values.","nodes":[{"pos":[0,120],"content":"Gets or sets a value indicating whether literal character positions in the mask can be overwritten by their same values.","nodes":[{"content":"Gets or sets a value indicating whether literal character positions in the mask can be overwritten by their same values.","pos":[0,120]}]}],"pos":[195326,195447],"yaml":true},{"content":"Input masks can contain literal and editable characters. If an attempt is made to add an input character to the position in a mask occupied by a literal, the value of the <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> property determines the result.  \n  \n-   If this property is `true`, it is valid to overwrite a literal with the same value when adding input characters. For example, a forward slash character value, `'/'`, could be added to the third position of the mask `\"00/00/000\"`.  \n  \n-   If this property is `false`, it is not valid to assign any value to a mask position occupied by a literal character.","nodes":[{"pos":[0,260],"content":"Input masks can contain literal and editable characters. If an attempt is made to add an input character to the position in a mask occupied by a literal, the value of the <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> property determines the result.","nodes":[{"content":"Input masks can contain literal and editable characters. If an attempt is made to add an input character to the position in a mask occupied by a literal, the value of the <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> property determines the result.","pos":[0,260],"nodes":[{"content":"Input masks can contain literal and editable characters.","pos":[0,56]},{"content":"If an attempt is made to add an input character to the position in a mask occupied by a literal, the value of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A&gt;</ph> property determines the result.","pos":[57,260],"source":" If an attempt is made to add an input character to the position in a mask occupied by a literal, the value of the <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> property determines the result."}]}]},{"pos":[270,499],"content":"If this property is `true`, it is valid to overwrite a literal with the same value when adding input characters. For example, a forward slash character value, `'/'`, could be added to the third position of the mask `\"00/00/000\"`.","nodes":[{"content":"If this property is <ph id=\"ph1\">`true`</ph>, it is valid to overwrite a literal with the same value when adding input characters.","pos":[0,112],"source":"If this property is `true`, it is valid to overwrite a literal with the same value when adding input characters."},{"content":"For example, a forward slash character value, <ph id=\"ph1\">`'/'`</ph>, could be added to the third position of the mask <ph id=\"ph2\">`\"00/00/000\"`</ph>.","pos":[113,229],"source":" For example, a forward slash character value, `'/'`, could be added to the third position of the mask `\"00/00/000\"`."}]},{"pos":[509,625],"content":"If this property is <ph id=\"ph1\">`false`</ph>, it is not valid to assign any value to a mask position occupied by a literal character.","source":"If this property is `false`, it is not valid to assign any value to a mask position occupied by a literal character."}],"pos":[195458,196092],"yaml":true,"extradata":"MT"},{"content":"`true` to allow literals to be added back; otherwise, `false` to not allow the user to overwrite literal characters. The default is `true`.","nodes":[{"pos":[0,139],"content":"`true` to allow literals to be added back; otherwise, `false` to not allow the user to overwrite literal characters. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to allow literals to be added back; otherwise, <ph id=\"ph2\">`false`</ph> to not allow the user to overwrite literal characters.","pos":[0,116],"source":"`true` to allow literals to be added back; otherwise, `false` to not allow the user to overwrite literal characters."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[117,139],"source":" The default is `true`."}]}],"pos":[196212,196354],"yaml":true},{"content":"Returns the formatted string in a displayable form.","nodes":[{"pos":[0,51],"content":"Returns the formatted string in a displayable form.","nodes":[{"content":"Returns the formatted string in a displayable form.","pos":[0,51]}]}],"pos":[197673,197725],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> method will always include prompt and literal characters in the return value, regardless of the value of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> or <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties. This method will always display password characters if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a character value other than `null`.  \n  \n <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> is commonly used to obtain the string to display in associated user interface elements, such as <xref:System.Windows.Forms.MaskedTextBox>.","nodes":[{"pos":[0,505],"content":"The <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> method will always include prompt and literal characters in the return value, regardless of the value of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> or <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties. This method will always display password characters if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a character value other than `null`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A&gt;</ph> method will always include prompt and literal characters in the return value, regardless of the value of the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A&gt;</ph> properties.","pos":[0,326],"source":"The <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> method will always include prompt and literal characters in the return value, regardless of the value of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> or <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties."},{"content":"This method will always display password characters if the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property is set to a character value other than <ph id=\"ph2\">`null`</ph>.","pos":[327,505],"source":" This method will always display password characters if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a character value other than `null`."}]},{"pos":[512,717],"content":"<xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> is commonly used to obtain the string to display in associated user interface elements, such as <xref:System.Windows.Forms.MaskedTextBox>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A&gt;</ph> is commonly used to obtain the string to display in associated user interface elements, such as <ph id=\"ph2\">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph>.","pos":[0,205],"source":"<xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> is commonly used to obtain the string to display in associated user interface elements, such as <xref:System.Windows.Forms.MaskedTextBox>."}]}],"pos":[197736,198458],"yaml":true,"extradata":"MT"},{"content":"The formatted <xref href=\"System.String\"></xref> that includes prompts and mask literals.","nodes":[{"pos":[0,89],"content":"The formatted <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that includes prompts and mask literals.","source":"The formatted <xref href=\"System.String\"></xref> that includes prompts and mask literals."}],"pos":[198591,198681],"yaml":true},{"content":"Returns a substring of the formatted string, optionally including prompt, literal, and password characters.","nodes":[{"pos":[0,107],"content":"Returns a substring of the formatted string, optionally including prompt, literal, and password characters.","nodes":[{"content":"Returns a substring of the formatted string, optionally including prompt, literal, and password characters.","pos":[0,107]}]}],"pos":[200294,200402],"yaml":true},{"content":"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter. The return string includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively. Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and  <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties. If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property. If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.  \n  \n> [!IMPORTANT]\n>  Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.  \n  \n <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:  \n  \n-   If `startPos` is less than zero, the starting position is set to zero.  \n  \n-   If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.  \n  \n-   If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.  \n  \n-   If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.","nodes":[{"pos":[0,1021],"content":"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter. The return string includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively. Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and  <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties. If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property. If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.","nodes":[{"content":"This version of the overloaded <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> method returns a substring of the formatted string, starting at the position <ph id=\"ph2\">`startPos`</ph> and including the subsequent number of characters specified by the <ph id=\"ph3\">`length`</ph> parameter.","pos":[0,265],"source":"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter."},{"content":"The return string includes prompts and literals according to the values of the <ph id=\"ph1\">`IncludePrompt`</ph> and <ph id=\"ph2\">`IncludeLiterals`</ph> parameters, respectively.","pos":[266,408],"source":" The return string includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively."},{"content":"Notice that these parameters override the values of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A&gt;</ph> and  <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A&gt;</ph> properties.","pos":[409,613],"source":" Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and  <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties."},{"content":"If the <ph id=\"ph1\">`ignorePasswordChar`</ph> parameter is <ph id=\"ph2\">`true`</ph>, it will return the original input characters, ignoring the value of the <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property.","pos":[614,808],"source":" If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property."},{"content":"If this parameter is <ph id=\"ph1\">`false`</ph>, it will use the password character to obscure editable user input if the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property is set to a value other than <ph id=\"ph3\">`null`</ph>.","pos":[809,1021],"source":" If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`."}]},{"pos":[1029,1260],"content":"[!IMPORTANT]\n Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.","leadings":["","> "],"nodes":[{"content":"Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.","pos":[14,229]}]},{"pos":[1267,1411],"content":"<xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> performs the following actions when there are discrepancies in the input parameters:","pos":[0,144],"source":"<xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:"}]},{"pos":[1421,1491],"content":"If <ph id=\"ph1\">`startPos`</ph> is less than zero, the starting position is set to zero.","source":"If `startPos` is less than zero, the starting position is set to zero."},{"pos":[1501,1687],"content":"If <ph id=\"ph1\">`startPos`</ph> is greater than or equal to the actual <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string, the <ph id=\"ph3\">&lt;xref:System.String.Empty&gt;</ph> string is returned.","source":"If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned."},{"pos":[1697,1831],"content":"If <ph id=\"ph1\">`length`</ph> is greater than the remaining number of characters past the starting position, only the remaining characters are returned.","source":"If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned."},{"pos":[1841,1934],"content":"If <ph id=\"ph1\">`length`</ph> is less than or equal to zero, the <ph id=\"ph2\">&lt;xref:System.String.Empty&gt;</ph> string is returned.","source":"If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned."}],"pos":[200413,202363],"yaml":true,"extradata":"MT"},{"content":"`true` to return the actual editable characters; otherwise, `false` to indicate that the <xref href=\"System.ComponentModel.MaskedTextProvider.PasswordChar\"></xref> property is to be honored.","nodes":[{"pos":[0,190],"content":"<ph id=\"ph1\">`true`</ph> to return the actual editable characters; otherwise, <ph id=\"ph2\">`false`</ph> to indicate that the <ph id=\"ph3\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider.PasswordChar\"&gt;&lt;/xref&gt;</ph> property is to be honored.","source":"`true` to return the actual editable characters; otherwise, `false` to indicate that the <xref href=\"System.ComponentModel.MaskedTextProvider.PasswordChar\"></xref> property is to be honored."}],"pos":[202600,202793],"yaml":true},{"content":"`true` to include prompt characters in the return string; otherwise, `false`.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">`true`</ph> to include prompt characters in the return string; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to include prompt characters in the return string; otherwise, `false`."}],"pos":[202863,202943],"yaml":true},{"content":"`true` to return literal characters in the return string; otherwise, `false`.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">`true`</ph> to return literal characters in the return string; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to return literal characters in the return string; otherwise, `false`."}],"pos":[203015,203095],"yaml":true},{"content":"The zero-based position in the formatted string where the output begins.","nodes":[{"pos":[0,72],"content":"The zero-based position in the formatted string where the output begins.","nodes":[{"content":"The zero-based position in the formatted string where the output begins.","pos":[0,72]}]}],"pos":[203163,203236],"yaml":true},{"content":"The number of characters to return.","nodes":[{"pos":[0,35],"content":"The number of characters to return.","nodes":[{"content":"The number of characters to return.","pos":[0,35]}]}],"pos":[203297,203333],"yaml":true},{"content":"If successful, a substring of the formatted <xref href=\"System.String\"></xref>, which includes all the assigned character values and optionally includes literals, prompts, and password characters; otherwise the <xref href=\"System.String.Empty\"></xref> string.","nodes":[{"pos":[0,259],"content":"If successful, a substring of the formatted <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>, which includes all the assigned character values and optionally includes literals, prompts, and password characters; otherwise the <ph id=\"ph2\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph> string.","source":"If successful, a substring of the formatted <xref href=\"System.String\"></xref>, which includes all the assigned character values and optionally includes literals, prompts, and password characters; otherwise the <xref href=\"System.String.Empty\"></xref> string."}],"pos":[203390,203650],"yaml":true},{"content":"Returns a substring of the formatted string, optionally including prompt and literal characters.","nodes":[{"pos":[0,96],"content":"Returns a substring of the formatted string, optionally including prompt and literal characters.","nodes":[{"content":"Returns a substring of the formatted string, optionally including prompt and literal characters.","pos":[0,96]}]}],"pos":[205184,205281],"yaml":true},{"content":"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter. The return string includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively. Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties. This method will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.  \n  \n> [!IMPORTANT]\n>  Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.  \n  \n <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:  \n  \n-   If `startPos` is less than zero, the starting position is set to zero.  \n  \n-   If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.  \n  \n-   If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.  \n  \n-   If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.","nodes":[{"pos":[0,769],"content":"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter. The return string includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively. Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties. This method will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.","nodes":[{"content":"This version of the overloaded <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> method returns a substring of the formatted string, starting at the position <ph id=\"ph2\">`startPos`</ph> and including the subsequent number of characters specified by the <ph id=\"ph3\">`length`</ph> parameter.","pos":[0,265],"source":"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter."},{"content":"The return string includes prompts and literals according to the values of the <ph id=\"ph1\">`IncludePrompt`</ph> and <ph id=\"ph2\">`IncludeLiterals`</ph> parameters, respectively.","pos":[266,408],"source":" The return string includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively."},{"content":"Notice that these parameters override the values of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A&gt;</ph><ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A&gt;</ph> properties.","pos":[409,607],"source":" Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties."},{"content":"This method will always return the original input characters, ignoring the value of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property.","pos":[608,769],"source":" This method will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property."}]},{"pos":[777,996],"content":"[!IMPORTANT]\n Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.","leadings":["","> "],"nodes":[{"content":"Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.","pos":[14,217]}]},{"pos":[1003,1147],"content":"<xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> performs the following actions when there are discrepancies in the input parameters:","pos":[0,144],"source":"<xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:"}]},{"pos":[1157,1227],"content":"If <ph id=\"ph1\">`startPos`</ph> is less than zero, the starting position is set to zero.","source":"If `startPos` is less than zero, the starting position is set to zero."},{"pos":[1237,1423],"content":"If <ph id=\"ph1\">`startPos`</ph> is greater than or equal to the actual <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string, the <ph id=\"ph3\">&lt;xref:System.String.Empty&gt;</ph> string is returned.","source":"If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned."},{"pos":[1433,1567],"content":"If <ph id=\"ph1\">`length`</ph> is greater than the remaining number of characters past the starting position, only the remaining characters are returned.","source":"If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned."},{"pos":[1577,1670],"content":"If <ph id=\"ph1\">`length`</ph> is less than or equal to zero, the <ph id=\"ph2\">&lt;xref:System.String.Empty&gt;</ph> string is returned.","source":"If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned."}],"pos":[205292,206978],"yaml":true,"extradata":"MT"},{"content":"`true` to include prompt characters in the return string; otherwise, `false`.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">`true`</ph> to include prompt characters in the return string; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to include prompt characters in the return string; otherwise, `false`."}],"pos":[207185,207265],"yaml":true},{"content":"`true` to include literal characters in the return string; otherwise, `false`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`true`</ph> to include literal characters in the return string; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to include literal characters in the return string; otherwise, `false`."}],"pos":[207337,207418],"yaml":true},{"content":"The zero-based position in the formatted string where the output begins.","nodes":[{"pos":[0,72],"content":"The zero-based position in the formatted string where the output begins.","nodes":[{"content":"The zero-based position in the formatted string where the output begins.","pos":[0,72]}]}],"pos":[207486,207559],"yaml":true},{"content":"The number of characters to return.","nodes":[{"pos":[0,35],"content":"The number of characters to return.","nodes":[{"content":"The number of characters to return.","pos":[0,35]}]}],"pos":[207620,207656],"yaml":true},{"content":"If successful, a substring of the formatted <xref href=\"System.String\"></xref>, which includes all the assigned character values and optionally includes literals and prompts; otherwise the <xref href=\"System.String.Empty\"></xref> string.","nodes":[{"pos":[0,237],"content":"If successful, a substring of the formatted <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>, which includes all the assigned character values and optionally includes literals and prompts; otherwise the <ph id=\"ph2\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph> string.","source":"If successful, a substring of the formatted <xref href=\"System.String\"></xref>, which includes all the assigned character values and optionally includes literals and prompts; otherwise the <xref href=\"System.String.Empty\"></xref> string."}],"pos":[207713,207951],"yaml":true},{"content":"Returns a substring of the formatted string, optionally including password characters.","nodes":[{"pos":[0,86],"content":"Returns a substring of the formatted string, optionally including password characters.","nodes":[{"content":"Returns a substring of the formatted string, optionally including password characters.","pos":[0,86]}]}],"pos":[209413,209500],"yaml":true},{"content":"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter. The returned string includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively. If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property. If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.  \n  \n> [!IMPORTANT]\n>  Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.  \n  \n <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:  \n  \n-   If `startPos` is less than zero, the starting position is set to zero.  \n  \n-   If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.  \n  \n-   If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.  \n  \n-   If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.","nodes":[{"pos":[0,924],"content":"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter. The returned string includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively. If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property. If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.","nodes":[{"content":"This version of the overloaded <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> method returns a substring of the formatted string, starting at the position <ph id=\"ph2\">`startPos`</ph> and including the subsequent number of characters specified by the <ph id=\"ph3\">`length`</ph> parameter.","pos":[0,265],"source":"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter."},{"content":"The returned string includes prompts and literals according to the current values of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A&gt;</ph> properties, respectively.","pos":[266,516],"source":" The returned string includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively."},{"content":"If the <ph id=\"ph1\">`ignorePasswordChar`</ph> parameter is <ph id=\"ph2\">`true`</ph>, it will return the original input characters, ignoring the value of the <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property.","pos":[517,711],"source":" If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property."},{"content":"If this parameter is <ph id=\"ph1\">`false`</ph>, it will use the password character to obscure editable user input if the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property is set to a value other than <ph id=\"ph3\">`null`</ph>.","pos":[712,924],"source":" If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`."}]},{"pos":[932,1163],"content":"[!IMPORTANT]\n Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.","leadings":["","> "],"nodes":[{"content":"Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.","pos":[14,229]}]},{"pos":[1170,1314],"content":"<xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> performs the following actions when there are discrepancies in the input parameters:","pos":[0,144],"source":"<xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:"}]},{"pos":[1324,1394],"content":"If <ph id=\"ph1\">`startPos`</ph> is less than zero, the starting position is set to zero.","source":"If `startPos` is less than zero, the starting position is set to zero."},{"pos":[1404,1590],"content":"If <ph id=\"ph1\">`startPos`</ph> is greater than or equal to the actual <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string, the <ph id=\"ph3\">&lt;xref:System.String.Empty&gt;</ph> string is returned.","source":"If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned."},{"pos":[1600,1734],"content":"If <ph id=\"ph1\">`length`</ph> is greater than the remaining number of characters past the starting position, only the remaining characters are returned.","source":"If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned."},{"pos":[1744,1837],"content":"If <ph id=\"ph1\">`length`</ph> is less than or equal to zero, the <ph id=\"ph2\">&lt;xref:System.String.Empty&gt;</ph> string is returned.","source":"If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned."}],"pos":[209511,211364],"yaml":true,"extradata":"MT"},{"content":"`true` to return the actual editable characters; otherwise, `false` to indicate that the <xref href=\"System.ComponentModel.MaskedTextProvider.PasswordChar\"></xref> property is to be honored.","nodes":[{"pos":[0,190],"content":"<ph id=\"ph1\">`true`</ph> to return the actual editable characters; otherwise, <ph id=\"ph2\">`false`</ph> to indicate that the <ph id=\"ph3\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider.PasswordChar\"&gt;&lt;/xref&gt;</ph> property is to be honored.","source":"`true` to return the actual editable characters; otherwise, `false` to indicate that the <xref href=\"System.ComponentModel.MaskedTextProvider.PasswordChar\"></xref> property is to be honored."}],"pos":[211559,211752],"yaml":true},{"content":"The zero-based position in the formatted string where the output begins.","nodes":[{"pos":[0,72],"content":"The zero-based position in the formatted string where the output begins.","nodes":[{"content":"The zero-based position in the formatted string where the output begins.","pos":[0,72]}]}],"pos":[211820,211893],"yaml":true},{"content":"The number of characters to return.","nodes":[{"pos":[0,35],"content":"The number of characters to return.","nodes":[{"content":"The number of characters to return.","pos":[0,35]}]}],"pos":[211954,211990],"yaml":true},{"content":"If successful, a substring of the formatted <xref href=\"System.String\"></xref>, which includes literals, prompts, and optionally password characters; otherwise the <xref href=\"System.String.Empty\"></xref> string.","nodes":[{"pos":[0,212],"content":"If successful, a substring of the formatted <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>, which includes literals, prompts, and optionally password characters; otherwise the <ph id=\"ph2\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph> string.","source":"If successful, a substring of the formatted <xref href=\"System.String\"></xref>, which includes literals, prompts, and optionally password characters; otherwise the <xref href=\"System.String.Empty\"></xref> string."}],"pos":[212047,212260],"yaml":true},{"content":"Returns the formatted string, optionally including password characters.","nodes":[{"pos":[0,71],"content":"Returns the formatted string, optionally including password characters.","nodes":[{"content":"Returns the formatted string, optionally including password characters.","pos":[0,71]}]}],"pos":[213602,213674],"yaml":true},{"content":"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively. If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property. If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.  \n  \n> [!IMPORTANT]\n>  Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.","nodes":[{"pos":[0,736],"content":"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively. If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property. If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.","nodes":[{"content":"This version of the overloaded <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> method includes prompts and literals according to the current values of the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A&gt;</ph> properties, respectively.","pos":[0,328],"source":"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively."},{"content":"If the <ph id=\"ph1\">`ignorePasswordChar`</ph> parameter is <ph id=\"ph2\">`true`</ph>, it will return the original input characters, ignoring the value of the <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property.","pos":[329,523],"source":" If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property."},{"content":"If this parameter is <ph id=\"ph1\">`false`</ph>, it will use the password character to obscure editable user input if the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property is set to a value other than <ph id=\"ph3\">`null`</ph>.","pos":[524,736],"source":" If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`."}]},{"pos":[744,975],"content":"[!IMPORTANT]\n Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.","leadings":["","> "],"nodes":[{"content":"Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.","pos":[14,229]}]}],"pos":[213685,214666],"yaml":true,"extradata":"MT"},{"content":"`true` to return the actual editable characters; otherwise, `false` to indicate that the <xref href=\"System.ComponentModel.MaskedTextProvider.PasswordChar\"></xref> property is to be honored.","nodes":[{"pos":[0,190],"content":"<ph id=\"ph1\">`true`</ph> to return the actual editable characters; otherwise, <ph id=\"ph2\">`false`</ph> to indicate that the <ph id=\"ph3\">&lt;xref href=\"System.ComponentModel.MaskedTextProvider.PasswordChar\"&gt;&lt;/xref&gt;</ph> property is to be honored.","source":"`true` to return the actual editable characters; otherwise, `false` to indicate that the <xref href=\"System.ComponentModel.MaskedTextProvider.PasswordChar\"></xref> property is to be honored."}],"pos":[214830,215023],"yaml":true},{"content":"The formatted <xref href=\"System.String\"></xref> that includes literals, prompts, and optionally password characters.","nodes":[{"pos":[0,117],"content":"The formatted <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that includes literals, prompts, and optionally password characters.","source":"The formatted <xref href=\"System.String\"></xref> that includes literals, prompts, and optionally password characters."}],"pos":[215080,215198],"yaml":true},{"content":"Returns the formatted string, optionally including prompt and literal characters.","nodes":[{"pos":[0,81],"content":"Returns the formatted string, optionally including prompt and literal characters.","nodes":[{"content":"Returns the formatted string, optionally including prompt and literal characters.","pos":[0,81]}]}],"pos":[216612,216694],"yaml":true},{"content":"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively. Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties. This method will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.  \n  \n> [!IMPORTANT]\n>  Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.","nodes":[{"pos":[0,583],"content":"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively. Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties. This method will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.","nodes":[{"content":"This version of the overloaded <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> method includes prompts and literals according to the values of the <ph id=\"ph2\">`IncludePrompt`</ph> and <ph id=\"ph3\">`IncludeLiterals`</ph> parameters, respectively.","pos":[0,222],"source":"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively."},{"content":"Notice that these parameters override the values of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A&gt;</ph><ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A&gt;</ph> properties.","pos":[223,421],"source":" Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties."},{"content":"This method will always return the original input characters, ignoring the value of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property.","pos":[422,583],"source":" This method will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property."}]},{"pos":[591,810],"content":"[!IMPORTANT]\n Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.","leadings":["","> "],"nodes":[{"content":"Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.","pos":[14,217]}]}],"pos":[216705,217521],"yaml":true,"extradata":"MT"},{"content":"`true` to include prompt characters in the return string; otherwise, `false`.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">`true`</ph> to include prompt characters in the return string; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to include prompt characters in the return string; otherwise, `false`."}],"pos":[217697,217777],"yaml":true},{"content":"`true` to include literal characters in the return string; otherwise, `false`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`true`</ph> to include literal characters in the return string; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to include literal characters in the return string; otherwise, `false`."}],"pos":[217849,217930],"yaml":true},{"content":"The formatted <xref href=\"System.String\"></xref> that includes all the assigned character values and optionally includes literals and prompts.","nodes":[{"pos":[0,142],"content":"The formatted <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that includes all the assigned character values and optionally includes literals and prompts.","source":"The formatted <xref href=\"System.String\"></xref> that includes all the assigned character values and optionally includes literals and prompts."}],"pos":[217987,218130],"yaml":true},{"content":"Returns the formatted string that includes all the assigned character values.","nodes":[{"pos":[0,77],"content":"Returns the formatted string that includes all the assigned character values.","nodes":[{"content":"Returns the formatted string that includes all the assigned character values.","pos":[0,77]}]}],"pos":[219403,219481],"yaml":true},{"content":"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively. It will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.  \n  \n> [!IMPORTANT]\n>  Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.","nodes":[{"pos":[0,481],"content":"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively. It will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.","nodes":[{"content":"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively. It will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.","pos":[0,481],"nodes":[{"content":"This version of the overloaded <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> method includes prompts and literals according to the current values of the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A&gt;</ph> properties, respectively.","pos":[0,328],"source":"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively."},{"content":"It will always return the original input characters, ignoring the value of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property.","pos":[329,481],"source":" It will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property."}]}]},{"pos":[489,708],"content":"[!IMPORTANT]\n Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.","leadings":["","> "],"nodes":[{"content":"Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.","pos":[14,217]}]}],"pos":[219492,220206],"yaml":true,"extradata":"MT"},{"content":"The formatted <xref href=\"System.String\"></xref> that includes all the assigned character values.","nodes":[{"pos":[0,97],"content":"The formatted <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that includes all the assigned character values.","source":"The formatted <xref href=\"System.String\"></xref> that includes all the assigned character values."}],"pos":[220341,220439],"yaml":true},{"content":"Returns a substring of the formatted string.","nodes":[{"pos":[0,44],"content":"Returns a substring of the formatted string.","nodes":[{"content":"Returns a substring of the formatted string.","pos":[0,44]}]}],"pos":[221829,221874],"yaml":true},{"content":"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter. The returned string includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively. The return string will contain the original input characters; the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is always ignored.  \n  \n> [!IMPORTANT]\n>  Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.  \n  \n <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:  \n  \n-   If `startPos` is less than zero, the starting position is set to zero.  \n  \n-   If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.  \n  \n-   If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.  \n  \n-   If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.","nodes":[{"pos":[0,674],"content":"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter. The returned string includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively. The return string will contain the original input characters; the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is always ignored.","nodes":[{"content":"This version of the overloaded <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> method returns a substring of the formatted string, starting at the position <ph id=\"ph2\">`startPos`</ph> and including the subsequent number of characters specified by the <ph id=\"ph3\">`length`</ph> parameter.","pos":[0,265],"source":"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter."},{"content":"The returned string includes prompts and literals according to the current values of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A&gt;</ph> properties, respectively.","pos":[266,516],"source":" The returned string includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively."},{"content":"The return string will contain the original input characters; the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property is always ignored.","pos":[517,674],"source":" The return string will contain the original input characters; the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is always ignored."}]},{"pos":[682,901],"content":"[!IMPORTANT]\n Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.","leadings":["","> "],"nodes":[{"content":"Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.","pos":[14,217]}]},{"pos":[908,1052],"content":"<xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> performs the following actions when there are discrepancies in the input parameters:","pos":[0,144],"source":"<xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:"}]},{"pos":[1062,1132],"content":"If <ph id=\"ph1\">`startPos`</ph> is less than zero, the starting position is set to zero.","source":"If `startPos` is less than zero, the starting position is set to zero."},{"pos":[1142,1328],"content":"If <ph id=\"ph1\">`startPos`</ph> is greater than or equal to the actual <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string, the <ph id=\"ph3\">&lt;xref:System.String.Empty&gt;</ph> string is returned.","source":"If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned."},{"pos":[1338,1472],"content":"If <ph id=\"ph1\">`length`</ph> is greater than the remaining number of characters past the starting position, only the remaining characters are returned.","source":"If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned."},{"pos":[1482,1575],"content":"If <ph id=\"ph1\">`length`</ph> is less than or equal to zero, the <ph id=\"ph2\">&lt;xref:System.String.Empty&gt;</ph> string is returned.","source":"If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned."}],"pos":[221885,223476],"yaml":true,"extradata":"MT"},{"content":"The zero-based position in the formatted string where the output begins.","nodes":[{"pos":[0,72],"content":"The zero-based position in the formatted string where the output begins.","nodes":[{"content":"The zero-based position in the formatted string where the output begins.","pos":[0,72]}]}],"pos":[223639,223712],"yaml":true},{"content":"The number of characters to return.","nodes":[{"pos":[0,35],"content":"The number of characters to return.","nodes":[{"content":"The number of characters to return.","pos":[0,35]}]}],"pos":[223773,223809],"yaml":true},{"content":"If successful, a substring of the formatted <xref href=\"System.String\"></xref>, which includes all the assigned character values; otherwise the <xref href=\"System.String.Empty\"></xref> string.","nodes":[{"pos":[0,192],"content":"If successful, a substring of the formatted <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>, which includes all the assigned character values; otherwise the <ph id=\"ph2\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph> string.","source":"If successful, a substring of the formatted <xref href=\"System.String\"></xref>, which includes all the assigned character values; otherwise the <xref href=\"System.String.Empty\"></xref> string."}],"pos":[223866,224059],"yaml":true},{"content":"Tests whether the specified character could be set successfully at the specified position.","nodes":[{"pos":[0,90],"content":"Tests whether the specified character could be set successfully at the specified position.","nodes":[{"content":"Tests whether the specified character could be set successfully at the specified position.","pos":[0,90]}]}],"pos":[225653,225744],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A> method tests whether a single character value represents valid input at the specified position in the formatted string. This method will return `false` for the following reasons:  \n  \n-   The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.  \n  \n-   The character `input` is not a valid input character, as determined by the <xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A> method.  \n  \n-   The `input` is not compatible with the mask element at the specified position, `pos`.  \n  \n The last condition may depend on the current value of the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> and <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> properties.  \n  \n To test an entire input string against the mask, use one of the <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> methods instead.","nodes":[{"pos":[0,244],"content":"The <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A> method tests whether a single character value represents valid input at the specified position in the formatted string. This method will return `false` for the following reasons:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A&gt;</ph> method tests whether a single character value represents valid input at the specified position in the formatted string.","pos":[0,185],"source":"The <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A> method tests whether a single character value represents valid input at the specified position in the formatted string."},{"content":"This method will return <ph id=\"ph1\">`false`</ph> for the following reasons:","pos":[186,244],"source":" This method will return `false` for the following reasons:"}]},{"pos":[254,433],"content":"The <ph id=\"ph1\">`pos`</ph> parameter is less than zero or greater than the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.Mask%2A&gt;</ph>.","source":"The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>."},{"pos":[443,593],"content":"The character <ph id=\"ph1\">`input`</ph> is not a valid input character, as determined by the <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A&gt;</ph> method.","source":"The character `input` is not a valid input character, as determined by the <xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A> method."},{"pos":[603,688],"content":"The <ph id=\"ph1\">`input`</ph> is not compatible with the mask element at the specified position, <ph id=\"ph2\">`pos`</ph>.","source":"The `input` is not compatible with the mask element at the specified position, `pos`."},{"pos":[695,1092],"content":"The last condition may depend on the current value of the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> and <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> properties.","nodes":[{"content":"The last condition may depend on the current value of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A&gt;</ph> and <ph id=\"ph5\">&lt;xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A&gt;</ph> properties.","pos":[0,397],"source":"The last condition may depend on the current value of the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> and <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> properties."}]},{"pos":[1099,1243],"content":"To test an entire input string against the mask, use one of the <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> methods instead.","nodes":[{"content":"To test an entire input string against the mask, use one of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A&gt;</ph> methods instead.","pos":[0,144],"source":"To test an entire input string against the mask, use one of the <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> methods instead."}]}],"pos":[225755,227011],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Char\"></xref> value to test.","nodes":[{"pos":[0,51],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> value to test.","source":"The <xref href=\"System.Char\"></xref> value to test."}],"pos":[227213,227265],"yaml":true},{"content":"The position in the mask to test the input character against.","nodes":[{"pos":[0,61],"content":"The position in the mask to test the input character against.","nodes":[{"content":"The position in the mask to test the input character against.","pos":[0,61]}]}],"pos":[227328,227390],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the operation. An output parameter.","nodes":[{"pos":[0,141],"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the operation. An output parameter.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextResultHint\"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the operation.","pos":[0,120],"source":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the operation."},{"content":"An output parameter.","pos":[121,141]}]}],"pos":[227479,227621],"yaml":true},{"content":"`true` if the specified character is valid for the specified position; otherwise, `false`.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">`true`</ph> if the specified character is valid for the specified position; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified character is valid for the specified position; otherwise, `false`."}],"pos":[227679,227772],"yaml":true},{"content":"Tests whether the specified character would be escaped at the specified position.","nodes":[{"pos":[0,81],"content":"Tests whether the specified character would be escaped at the specified position.","nodes":[{"content":"Tests whether the specified character would be escaped at the specified position.","pos":[0,81]}]}],"pos":[229206,229288],"yaml":true},{"content":"A character is said to be *escaped* if it is valid input, but is not assigned to that position in the formatted string. Escaped characters fall into the following three categories:  \n  \n-   Prompt characters are escaped if the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property is `true`.  \n  \n-   Input characters are escaped if they have the same value as the literal in the mask, and if the <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> property is `true`.  \n  \n-   Space characters are escaped if the <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> property is `true`.  \n  \n The <xref:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar%2A> method will also return `false` if the `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.","nodes":[{"pos":[0,180],"content":"A character is said to be *escaped* if it is valid input, but is not assigned to that position in the formatted string. Escaped characters fall into the following three categories:","nodes":[{"content":"A character is said to be <bpt id=\"p1\">*</bpt>escaped<ept id=\"p1\">*</ept> if it is valid input, but is not assigned to that position in the formatted string.","pos":[0,119],"source":"A character is said to be *escaped* if it is valid input, but is not assigned to that position in the formatted string."},{"content":"Escaped characters fall into the following three categories:","pos":[120,180]}]},{"pos":[190,316],"content":"Prompt characters are escaped if the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph>.","source":"Prompt characters are escaped if the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property is `true`."},{"pos":[326,505],"content":"Input characters are escaped if they have the same value as the literal in the mask, and if the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph>.","source":"Input characters are escaped if they have the same value as the literal in the mask, and if the <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> property is `true`."},{"pos":[515,634],"content":"Space characters are escaped if the <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph>.","source":"Space characters are escaped if the <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> property is `true`."},{"pos":[641,927],"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar%2A&gt;</ph> method will also return <ph id=\"ph2\">`false`</ph> if the <ph id=\"ph3\">`pos`</ph> parameter is less than zero or greater than the <ph id=\"ph4\">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the <ph id=\"ph5\">&lt;xref:System.ComponentModel.MaskedTextProvider.Mask%2A&gt;</ph>.","source":"The <xref:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar%2A> method will also return `false` if the `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>."}],"pos":[229299,230237],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Char\"></xref> value to test.","nodes":[{"pos":[0,51],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph> value to test.","source":"The <xref href=\"System.Char\"></xref> value to test."}],"pos":[230392,230444],"yaml":true},{"content":"The position in the mask to test the input character against.","nodes":[{"pos":[0,61],"content":"The position in the mask to test the input character against.","nodes":[{"content":"The position in the mask to test the input character against.","pos":[0,61]}]}],"pos":[230507,230569],"yaml":true},{"content":"`true` if the specified character would be escaped at the specified position; otherwise, `false`.","nodes":[{"pos":[0,97],"content":"<ph id=\"ph1\">`true`</ph> if the specified character would be escaped at the specified position; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified character would be escaped at the specified position; otherwise, `false`."}],"pos":[230627,230727],"yaml":true},{"content":"Tests whether the specified string could be set successfully.","nodes":[{"pos":[0,61],"content":"Tests whether the specified string could be set successfully.","nodes":[{"content":"Tests whether the specified string could be set successfully.","pos":[0,61]}]}],"pos":[232095,232157],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> applies the `input` string against the mask, without actually changing the formatted string, to test whether `input` would be valid in a corresponding <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operation. This method also returns `true` if input is `null` or has zero length.","nodes":[{"pos":[0,355],"content":"The <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> applies the `input` string against the mask, without actually changing the formatted string, to test whether `input` would be valid in a corresponding <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operation. This method also returns `true` if input is `null` or has zero length.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A&gt;</ph> applies the <ph id=\"ph2\">`input`</ph> string against the mask, without actually changing the formatted string, to test whether <ph id=\"ph3\">`input`</ph> would be valid in a corresponding <ph id=\"ph4\">&lt;xref:System.ComponentModel.MaskedTextProvider.Set%2A&gt;</ph> operation.","pos":[0,284],"source":"The <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> applies the `input` string against the mask, without actually changing the formatted string, to test whether `input` would be valid in a corresponding <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operation."},{"content":"This method also returns <ph id=\"ph1\">`true`</ph> if input is <ph id=\"ph2\">`null`</ph> or has zero length.","pos":[285,355],"source":" This method also returns `true` if input is `null` or has zero length."}]}],"pos":[232168,232524],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> value to test.","nodes":[{"pos":[0,53],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> value to test.","source":"The <xref href=\"System.String\"></xref> value to test."}],"pos":[232665,232719],"yaml":true},{"content":"`true` if the specified string represents valid input; otherwise, `false`.","nodes":[{"pos":[0,74],"content":"<ph id=\"ph1\">`true`</ph> if the specified string represents valid input; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified string represents valid input; otherwise, `false`."}],"pos":[232777,232854],"yaml":true},{"content":"Tests whether the specified string could be set successfully, and then outputs position and descriptive information.","nodes":[{"pos":[0,116],"content":"Tests whether the specified string could be set successfully, and then outputs position and descriptive information.","nodes":[{"content":"Tests whether the specified string could be set successfully, and then outputs position and descriptive information.","pos":[0,116]}]}],"pos":[234479,234596],"yaml":true},{"content":"The <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> applies the `input` string against the mask, without actually changing the formatted string, to test whether `input` would be valid in a corresponding <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operation. This method also returns `true` if input is `null` or has zero length.  \n  \n This version of <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> provides two additional output parameters to convey more information about the operation of the method.","nodes":[{"pos":[0,355],"content":"The <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> applies the `input` string against the mask, without actually changing the formatted string, to test whether `input` would be valid in a corresponding <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operation. This method also returns `true` if input is `null` or has zero length.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A&gt;</ph> applies the <ph id=\"ph2\">`input`</ph> string against the mask, without actually changing the formatted string, to test whether <ph id=\"ph3\">`input`</ph> would be valid in a corresponding <ph id=\"ph4\">&lt;xref:System.ComponentModel.MaskedTextProvider.Set%2A&gt;</ph> operation.","pos":[0,284],"source":"The <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> applies the `input` string against the mask, without actually changing the formatted string, to test whether `input` would be valid in a corresponding <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operation."},{"content":"This method also returns <ph id=\"ph1\">`true`</ph> if input is <ph id=\"ph2\">`null`</ph> or has zero length.","pos":[285,355],"source":" This method also returns `true` if input is `null` or has zero length."}]},{"pos":[362,545],"content":"This version of <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> provides two additional output parameters to convey more information about the operation of the method.","nodes":[{"content":"This version of <ph id=\"ph1\">&lt;xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A&gt;</ph> provides two additional output parameters to convey more information about the operation of the method.","pos":[0,183],"source":"This version of <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> provides two additional output parameters to convey more information about the operation of the method."}]}],"pos":[234607,235157],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.String\"></xref> value to test.","nodes":[{"pos":[0,53],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> value to test.","source":"The <xref href=\"System.String\"></xref> value to test."}],"pos":[235379,235433],"yaml":true},{"content":"If successful, the zero-based position of the last character actually tested; otherwise, the first position where the test failed. An output parameter.","nodes":[{"pos":[0,151],"content":"If successful, the zero-based position of the last character actually tested; otherwise, the first position where the test failed. An output parameter.","nodes":[{"content":"If successful, the zero-based position of the last character actually tested; otherwise, the first position where the test failed. An output parameter.","pos":[0,151],"nodes":[{"content":"If successful, the zero-based position of the last character actually tested; otherwise, the first position where the test failed.","pos":[0,130]},{"content":"An output parameter.","pos":[131,151]}]}]}],"pos":[235500,235652],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the test operation. An output parameter.","nodes":[{"pos":[0,146],"content":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the test operation. An output parameter.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.MaskedTextResultHint\"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the test operation.","pos":[0,125],"source":"A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the test operation."},{"content":"An output parameter.","pos":[126,146]}]}],"pos":[235747,235894],"yaml":true},{"content":"`true` if the specified string represents valid input; otherwise, `false`.","nodes":[{"pos":[0,74],"content":"<ph id=\"ph1\">`true`</ph> if the specified string represents valid input; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified string represents valid input; otherwise, `false`."}],"pos":[235952,236029],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.MaskedTextProvider\n  commentId: T:System.ComponentModel.MaskedTextProvider\n  id: MaskedTextProvider\n  children:\n  - System.ComponentModel.MaskedTextProvider.#ctor(System.String)\n  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)\n  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)\n  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)\n  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)\n  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)\n  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)\n  - System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  - System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  - System.ComponentModel.MaskedTextProvider.Add(System.Char)\n  - System.ComponentModel.MaskedTextProvider.Add(System.String)\n  - System.ComponentModel.MaskedTextProvider.AllowPromptAsInput\n  - System.ComponentModel.MaskedTextProvider.AsciiOnly\n  - System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount\n  - System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount\n  - System.ComponentModel.MaskedTextProvider.Clear\n  - System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)\n  - System.ComponentModel.MaskedTextProvider.Clone\n  - System.ComponentModel.MaskedTextProvider.Culture\n  - System.ComponentModel.MaskedTextProvider.DefaultPasswordChar\n  - System.ComponentModel.MaskedTextProvider.EditPositionCount\n  - System.ComponentModel.MaskedTextProvider.EditPositions\n  - System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)\n  - System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)\n  - System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)\n  - System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)\n  - System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)\n  - System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)\n  - System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)\n  - System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)\n  - System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)\n  - System.ComponentModel.MaskedTextProvider.IncludeLiterals\n  - System.ComponentModel.MaskedTextProvider.IncludePrompt\n  - System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)\n  - System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)\n  - System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  - System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  - System.ComponentModel.MaskedTextProvider.InvalidIndex\n  - System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)\n  - System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)\n  - System.ComponentModel.MaskedTextProvider.IsPassword\n  - System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)\n  - System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)\n  - System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)\n  - System.ComponentModel.MaskedTextProvider.Item(System.Int32)\n  - System.ComponentModel.MaskedTextProvider.LastAssignedPosition\n  - System.ComponentModel.MaskedTextProvider.Length\n  - System.ComponentModel.MaskedTextProvider.Mask\n  - System.ComponentModel.MaskedTextProvider.MaskCompleted\n  - System.ComponentModel.MaskedTextProvider.MaskFull\n  - System.ComponentModel.MaskedTextProvider.PasswordChar\n  - System.ComponentModel.MaskedTextProvider.PromptChar\n  - System.ComponentModel.MaskedTextProvider.Remove\n  - System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  - System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)\n  - System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)\n  - System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  - System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  - System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  - System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  - System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  - System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)\n  - System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)\n  - System.ComponentModel.MaskedTextProvider.ResetOnPrompt\n  - System.ComponentModel.MaskedTextProvider.ResetOnSpace\n  - System.ComponentModel.MaskedTextProvider.Set(System.String)\n  - System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  - System.ComponentModel.MaskedTextProvider.SkipLiterals\n  - System.ComponentModel.MaskedTextProvider.ToDisplayString\n  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)\n  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)\n  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)\n  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)\n  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)\n  - System.ComponentModel.MaskedTextProvider.ToString\n  - System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)\n  - System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)\n  - System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)\n  - System.ComponentModel.MaskedTextProvider.VerifyString(System.String)\n  - System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  langs:\n  - csharp\n  name: MaskedTextProvider\n  nameWithType: MaskedTextProvider\n  fullName: System.ComponentModel.MaskedTextProvider\n  type: Class\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Represents a mask-parsing service that can be used by any number of controls that support masking, such as the <xref href=\"System.Windows.Forms.MaskedTextBox\"></xref> control.\n  remarks: \"The <xref:System.Windows.Forms.MaskedTextBox> control contains a mask, composed of literal characters and formatting elements, that it tests all user input against. Instead of permanently associating a specific mask-parsing engine with <xref:System.Windows.Forms.MaskedTextBox>, Windows Forms provides it as a separate service, represented by the <xref:System.ComponentModel.MaskedTextProvider> class, which defines the syntax of the masking language discussed in the documentation for the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> property.  \\n  \\n Many of the members of the <xref:System.Windows.Forms.MaskedTextBox> class refer their implementation to similarly named members of the associated <xref:System.ComponentModel.MaskedTextProvider>. For example, the <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=fullName> property of the <xref:System.Windows.Forms.MaskedTextBox> class refers all access to the <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> of the <xref:System.ComponentModel.MaskedTextProvider> class.  \\n  \\n The mask-parsing engine used by <xref:System.ComponentModel.MaskedTextProvider> is modeled after the Masked Edit control included in Microsoft Visual Basic version 6. Its masking language is described in the documentation for the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property.  \\n  \\n The following three distinct strings are involved with the <xref:System.ComponentModel.MaskedTextProvider> class.  \\n  \\n|String name|Description|  \\n|-----------------|-----------------|  \\n|Input character or string|Represents the characters used as input that the mask is applied against. In actuality, the input string may be composed of multiple input operations, including <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, and <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>. Therefore, the input string cannot be accessed directly. However, aspects of the input string handling are available though the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> and <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>, and <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> properties.|  \\n|Mask|Represents the input formatting mask used to transform the input string into the formatted string. This string is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> and accessed primarily though the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property. Characteristics of the mask are also available through other members, such as the <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, and <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> properties.|  \\n|Formatted string|Represents the string that results when the full mask is applied to the input string. The formatted string can be queried with many members of the class, including <xref:System.ComponentModel.MaskedTextProvider.Item%2A>, <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>, <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>, and so on. The full value of the formatted string is available from the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods.|  \\n  \\n> [!NOTE]\\n>  The input string may represent direct user input, as in the case of the <xref:System.Windows.Forms.MaskedTextBox>, or may be generated by other processes not directly associated with user input/output operations.\"\n  syntax:\n    content: 'public class MaskedTextProvider : ICloneable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.ICloneable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String)\n  commentId: M:System.ComponentModel.MaskedTextProvider.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: MaskedTextProvider(String)\n  nameWithType: MaskedTextProvider.MaskedTextProvider(String)\n  fullName: MaskedTextProvider.MaskedTextProvider(String)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> class using the specified mask.\n  remarks: \"Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \\n  \\n `MaskedTextProvider(mask , null, true, '_', '\\\\0', false)`\"\n  syntax:\n    content: public MaskedTextProvider (string mask);\n    parameters:\n    - id: mask\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that represents the input mask.\n  overload: System.ComponentModel.MaskedTextProvider.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)\n  commentId: M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)\n  id: '#ctor(System.String,System.Boolean)'\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: MaskedTextProvider(String, Boolean)\n  nameWithType: MaskedTextProvider.MaskedTextProvider(String, Boolean)\n  fullName: MaskedTextProvider.MaskedTextProvider(String, Boolean)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> class using the specified mask and ASCII restriction value.\n  remarks: \"Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \\n  \\n `MaskedTextProvider(mask , null, true, '_', '\\\\0', restrictToASCII)`\"\n  syntax:\n    content: public MaskedTextProvider (string mask, bool restrictToAscii);\n    parameters:\n    - id: mask\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that represents the input mask.\n    - id: restrictToAscii\n      type: System.Boolean\n      description: '`true` to restrict input to ASCII-compatible characters; otherwise `false` to allow the entire Unicode set.'\n  overload: System.ComponentModel.MaskedTextProvider.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)\n  commentId: M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)\n  id: '#ctor(System.String,System.Globalization.CultureInfo)'\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: MaskedTextProvider(String, CultureInfo)\n  nameWithType: MaskedTextProvider.MaskedTextProvider(String, CultureInfo)\n  fullName: MaskedTextProvider.MaskedTextProvider(String, CultureInfo)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> class using the specified mask and culture.\n  remarks: \"Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \\n  \\n `MaskedTextProvider(mask , culture, true, '_', '\\\\0', false)`\"\n  syntax:\n    content: public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: mask\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that represents the input mask.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref href=\"System.Globalization.CultureInfo\"></xref> that is used to set region-sensitive separator characters.\n  overload: System.ComponentModel.MaskedTextProvider.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)\n  commentId: M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)\n  id: '#ctor(System.String,System.Char,System.Boolean)'\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: MaskedTextProvider(String, Char, Boolean)\n  nameWithType: MaskedTextProvider.MaskedTextProvider(String, Char, Boolean)\n  fullName: MaskedTextProvider.MaskedTextProvider(String, Char, Boolean)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> class using the specified mask, password character, and prompt usage value.\n  remarks: \"Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \\n  \\n `MaskedTextProvider(mask , null, allowPromptAsInput, '_', passwordChar, false)`\"\n  syntax:\n    content: public MaskedTextProvider (string mask, char passwordChar, bool allowPromptAsInput);\n    parameters:\n    - id: mask\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that represents the input mask.\n    - id: passwordChar\n      type: System.Char\n      description: A <xref href=\"System.Char\"></xref> that will be displayed for characters entered into a password string.\n    - id: allowPromptAsInput\n      type: System.Boolean\n      description: '`true` to allow the prompt character as input; otherwise `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)\n  commentId: M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)\n  id: '#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)'\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: MaskedTextProvider(String, CultureInfo, Boolean)\n  nameWithType: MaskedTextProvider.MaskedTextProvider(String, CultureInfo, Boolean)\n  fullName: MaskedTextProvider.MaskedTextProvider(String, CultureInfo, Boolean)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> class using the specified mask, culture, and ASCII restriction value.\n  remarks: \"Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \\n  \\n `MaskedTextProvider(mask , culture, true, '_', '\\\\0', restrictToAscii)`\"\n  syntax:\n    content: public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool restrictToAscii);\n    parameters:\n    - id: mask\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that represents the input mask.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref href=\"System.Globalization.CultureInfo\"></xref> that is used to set region-sensitive separator characters.\n    - id: restrictToAscii\n      type: System.Boolean\n      description: '`true` to restrict input to ASCII-compatible characters; otherwise `false` to allow the entire Unicode set.'\n  overload: System.ComponentModel.MaskedTextProvider.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)\n  commentId: M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)\n  id: '#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)'\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: MaskedTextProvider(String, CultureInfo, Char, Boolean)\n  nameWithType: MaskedTextProvider.MaskedTextProvider(String, CultureInfo, Char, Boolean)\n  fullName: MaskedTextProvider.MaskedTextProvider(String, CultureInfo, Char, Boolean)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> class using the specified mask, culture, password character, and prompt usage value.\n  remarks: \"Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \\n  \\n `MaskedTextProvider(mask , culture, allowPromptAsInput, '_', passwordChar, false)`\"\n  syntax:\n    content: public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, char passwordChar, bool allowPromptAsInput);\n    parameters:\n    - id: mask\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that represents the input mask.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref href=\"System.Globalization.CultureInfo\"></xref> that is used to set region-sensitive separator characters.\n    - id: passwordChar\n      type: System.Char\n      description: A <xref href=\"System.Char\"></xref> that will be displayed for characters entered into a password string.\n    - id: allowPromptAsInput\n      type: System.Boolean\n      description: '`true` to allow the prompt character as input; otherwise `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)\n  commentId: M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)\n  id: '#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)'\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: MaskedTextProvider(String, CultureInfo, Boolean, Char, Char, Boolean)\n  nameWithType: MaskedTextProvider.MaskedTextProvider(String, CultureInfo, Boolean, Char, Char, Boolean)\n  fullName: MaskedTextProvider.MaskedTextProvider(String, CultureInfo, Boolean, Char, Char, Boolean)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> class using the specified mask, culture, prompt usage value, prompt character, password character, and ASCII restriction value.\n  remarks: \"This constructor represents the most general overloaded form. The `mask` parameter must conform to the masking language defined by the <xref:System.ComponentModel.MaskedTextProvider> class, which is detailed in the <xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=fullName> property of the <xref:System.Windows.Forms.MaskedTextBox> class.  \\n  \\n Because neutral cultures cannot be queried for culture-specific information, the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor will use the <xref:System.Globalization.CultureInfo.GetCultures%2A> method to search for the first non-neutral culture to use to determine the proper separator characters.\"\n  syntax:\n    content: public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii);\n    parameters:\n    - id: mask\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that represents the input mask.\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: A <xref href=\"System.Globalization.CultureInfo\"></xref> that is used to set region-sensitive separator characters.\n    - id: allowPromptAsInput\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> value that specifies whether the prompt character should be allowed as a valid input character.\n    - id: promptChar\n      type: System.Char\n      description: A <xref href=\"System.Char\"></xref> that will be displayed as a placeholder for user input.\n    - id: passwordChar\n      type: System.Char\n      description: A <xref href=\"System.Char\"></xref> that will be displayed for characters entered into a password string.\n    - id: restrictToAscii\n      type: System.Boolean\n      description: '`true` to restrict input to ASCII-compatible characters; otherwise `false` to allow the entire Unicode set.'\n  overload: System.ComponentModel.MaskedTextProvider.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The mask parameter is `null` or <xref href=\\\"System.String.Empty\\\"></xref>.  \\n  \\n -or-  \\n  \\n The mask contains one or more non-printable characters.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  commentId: M:System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  id: Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: Add(String, Int32, MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.Add(String, Int32, MaskedTextResultHint)\n  fullName: MaskedTextProvider.Add(String, Int32, MaskedTextResultHint)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Adds the characters in the specified input string to the end of the formatted string, and then outputs position and descriptive information.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method adds the characters from the `input` string to the formatted string, starting with the first available position after <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>. This method will fail for any of the following reasons:  \\n  \\n-   Any of the characters in the input value, `input`, are not printable, or the input value does not match its corresponding mask element.  \\n  \\n-   There are not enough available edit positions in the formatted string after the last assigned position.  \\n  \\n If this method fails, no additions are made and the method returns `false`.  \\n  \\n This method functions the same as the overridden version taking a single <xref:System.String> parameter, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29>, except that it outputs additional information.\"\n  syntax:\n    content: public bool Add (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);\n    parameters:\n    - id: input\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> containing character values to be appended to the formatted string.\n    - id: testPosition\n      type: System.Int32\n      description: The zero-based position in the formatted string where the attempt was made to add the character. An output parameter.\n    - id: resultHint\n      type: System.ComponentModel.MaskedTextResultHint\n      description: A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the operation. An output parameter.\n    return:\n      type: System.Boolean\n      description: '`true` if all the characters from the input string were added successfully; otherwise `false` to indicate that no characters were added.'\n  overload: System.ComponentModel.MaskedTextProvider.Add*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  commentId: M:System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  id: Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: Add(Char, Int32, MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.Add(Char, Int32, MaskedTextResultHint)\n  fullName: MaskedTextProvider.Add(Char, Int32, MaskedTextResultHint)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Adds the specified input character to the end of the formatted string, and then outputs position and descriptive information.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method attempts to add the `input` character value to the first available position in the formatted string after the position that was last assigned, which is represented by the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property. This method will fail if all available positions are before the last assigned position. This method will fail for any of the following reasons:  \\n  \\n-   The input value, `input`, is not printable, or it does not match its corresponding mask element.  \\n  \\n-   There are zero available edit positions in the formatted string, or there are no available edit positions after the last assigned position.  \\n  \\n This method functions the same as the overridden version taking a single <xref:System.Char> parameter, <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29>, except that it outputs additional information.\"\n  syntax:\n    content: public bool Add (char input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);\n    parameters:\n    - id: input\n      type: System.Char\n      description: A <xref href=\"System.Char\"></xref> value to be appended to the formatted string.\n    - id: testPosition\n      type: System.Int32\n      description: The zero-based position in the formatted string where the attempt was made to add the character. An output parameter.\n    - id: resultHint\n      type: System.ComponentModel.MaskedTextResultHint\n      description: A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the operation. An output parameter.\n    return:\n      type: System.Boolean\n      description: '`true` if the input character was added successfully; otherwise `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.Add*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.Add(System.Char)\n  commentId: M:System.ComponentModel.MaskedTextProvider.Add(System.Char)\n  id: Add(System.Char)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: Add(Char)\n  nameWithType: MaskedTextProvider.Add(Char)\n  fullName: MaskedTextProvider.Add(Char)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Adds the specified input character to the end of the formatted string.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29> method adds the `input` character value to the first available position in the formatted string after the position that was last assigned, which is represented by the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property. This method will fail for any of the following reasons:  \\n  \\n-   The input value, `input`, is not printable, or it does not match its corresponding mask element.  \\n  \\n-   There are zero available edit positions in the formatted string, or there are no available edit positions after the last assigned position.\"\n  syntax:\n    content: public bool Add (char input);\n    parameters:\n    - id: input\n      type: System.Char\n      description: A <xref href=\"System.Char\"></xref> value to be appended to the formatted string.\n    return:\n      type: System.Boolean\n      description: '`true` if the input character was added successfully; otherwise `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.Add*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.Add(System.String)\n  commentId: M:System.ComponentModel.MaskedTextProvider.Add(System.String)\n  id: Add(System.String)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: Add(String)\n  nameWithType: MaskedTextProvider.Add(String)\n  fullName: MaskedTextProvider.Add(String)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Adds the characters in the specified input string to the end of the formatted string.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29> method adds the characters from the `input` string to the formatted string, starting with the first available position after <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>. This method will fail for any of the following reasons:  \\n  \\n-   Any of the characters in the input value, `input`, are not printable, or the input value does not match its corresponding mask element.  \\n  \\n-   There are not enough available edit positions in the formatted string after the last assigned position.  \\n  \\n If this method fails, no additions are made and the method returns `false`.\"\n  syntax:\n    content: public bool Add (string input);\n    parameters:\n    - id: input\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> containing character values to be appended to the formatted string.\n    return:\n      type: System.Boolean\n      description: '`true` if all the characters from the input string were added successfully; otherwise `false` to indicate that no characters were added.'\n  overload: System.ComponentModel.MaskedTextProvider.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>input</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput\n  commentId: P:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput\n  id: AllowPromptAsInput\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: AllowPromptAsInput\n  nameWithType: MaskedTextProvider.AllowPromptAsInput\n  fullName: MaskedTextProvider.AllowPromptAsInput\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether the prompt character should be treated as a valid input character or not.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property's value is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.  \\n  \\n Even when <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> is `true`, the prompt character must be valid for the current location in the mask in order to be accepted.\"\n  syntax:\n    content: public bool AllowPromptAsInput { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the user can enter <xref href=\"System.ComponentModel.MaskedTextProvider.PromptChar\"></xref> into the control; otherwise, `false`. The default is `true`.'\n  overload: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.AsciiOnly\n  commentId: P:System.ComponentModel.MaskedTextProvider.AsciiOnly\n  id: AsciiOnly\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: AsciiOnly\n  nameWithType: MaskedTextProvider.AsciiOnly\n  fullName: MaskedTextProvider.AsciiOnly\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether the mask accepts characters outside of the ASCII character set.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> property's value is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.  \\n  \\n If `true`, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> restricts user input to the ASCII character set.\"\n  syntax:\n    content: public bool AsciiOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if only ASCII is accepted; `false` if <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> can accept any arbitrary Unicode character. The default is `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.AsciiOnly*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount\n  commentId: P:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount\n  id: AssignedEditPositionCount\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: AssignedEditPositionCount\n  nameWithType: MaskedTextProvider.AssignedEditPositionCount\n  fullName: MaskedTextProvider.AssignedEditPositionCount\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets the number of editable character positions that have already been successfully assigned an input value.\n  remarks: The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, should equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties.\n  syntax:\n    content: public int AssignedEditPositionCount { get; }\n    return:\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> containing the number of editable character positions in the input mask that have already been assigned a character value in the formatted string.\n  overload: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount\n  commentId: P:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount\n  id: AvailableEditPositionCount\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: AvailableEditPositionCount\n  nameWithType: MaskedTextProvider.AvailableEditPositionCount\n  fullName: MaskedTextProvider.AvailableEditPositionCount\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets the number of editable character positions in the input mask that have not yet been assigned an input value.\n  remarks: The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, should equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties.\n  syntax:\n    content: public int AvailableEditPositionCount { get; }\n    return:\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> containing the number of editable character positions that not yet been assigned a character value.\n  overload: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.Clear\n  commentId: M:System.ComponentModel.MaskedTextProvider.Clear\n  id: Clear\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: MaskedTextProvider.Clear()\n  fullName: MaskedTextProvider.Clear()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Clears all the editable input characters from the formatted string, replacing them with prompt characters.\n  remarks: The <xref:System.ComponentModel.MaskedTextProvider.Clear> method reinitializes the formatted string, inserting the prompt character into all editable positions.\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.ComponentModel.MaskedTextProvider.Clear*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)\n  commentId: M:System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)\n  id: Clear(System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: Clear(MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.Clear(MaskedTextResultHint)\n  fullName: MaskedTextProvider.Clear(MaskedTextResultHint)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Clears all the editable input characters from the formatted string, replacing them with prompt characters, and then outputs descriptive information.\n  remarks: The <xref:System.ComponentModel.MaskedTextProvider.Clear%28System.ComponentModel.MaskedTextResultHint%40%29> method reinitializes the formatted string, inserting the prompt character into all editable positions. It functions equivalently to the overridden version that takes no parameters, <xref:System.ComponentModel.MaskedTextProvider.Clear>, except it outputs additional information.\n  syntax:\n    content: public void Clear (out System.ComponentModel.MaskedTextResultHint resultHint);\n    parameters:\n    - id: resultHint\n      type: System.ComponentModel.MaskedTextResultHint\n      description: A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the operation. An output parameter.\n  overload: System.ComponentModel.MaskedTextProvider.Clear*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.Clone\n  commentId: M:System.ComponentModel.MaskedTextProvider.Clone\n  id: Clone\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: MaskedTextProvider.Clone()\n  fullName: MaskedTextProvider.Clone()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Creates a copy of the current <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref>.\n  remarks: The <xref:System.ComponentModel.MaskedTextProvider.Clone%2A> method returns a new copy of the current <xref:System.ComponentModel.MaskedTextProvider>.\n  syntax:\n    content: public object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The <xref href=\"System.ComponentModel.MaskedTextProvider\"></xref> object this method creates, cast as an object.\n  overload: System.ComponentModel.MaskedTextProvider.Clone*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.Culture\n  commentId: P:System.ComponentModel.MaskedTextProvider.Culture\n  id: Culture\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: Culture\n  nameWithType: MaskedTextProvider.Culture\n  fullName: MaskedTextProvider.Culture\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets the culture that determines the value of the localizable separators and placeholders in the input mask.\n  remarks: The <xref:System.ComponentModel.MaskedTextProvider.Culture%2A> property is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor.\n  syntax:\n    content: public System.Globalization.CultureInfo Culture { get; }\n    return:\n      type: System.Globalization.CultureInfo\n      description: A <xref href=\"System.Globalization.CultureInfo\"></xref> containing the culture information associated with the input mask.\n  overload: System.ComponentModel.MaskedTextProvider.Culture*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar\n  commentId: P:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar\n  id: DefaultPasswordChar\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: DefaultPasswordChar\n  nameWithType: MaskedTextProvider.DefaultPasswordChar\n  fullName: MaskedTextProvider.DefaultPasswordChar\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets the default password character used obscure user input.\n  remarks: The <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> property is defined in the <xref:System.ComponentModel.MaskedTextProvider> class to be the asterisk character (*).\n  syntax:\n    content: public static char DefaultPasswordChar { get; }\n    return:\n      type: System.Char\n      description: A <xref href=\"System.Char\"></xref> that represents the default password character.\n  overload: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.EditPositionCount\n  commentId: P:System.ComponentModel.MaskedTextProvider.EditPositionCount\n  id: EditPositionCount\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: EditPositionCount\n  nameWithType: MaskedTextProvider.EditPositionCount\n  fullName: MaskedTextProvider.EditPositionCount\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets the number of editable positions in the formatted string.\n  remarks: The total number of editable character positions, represented by the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> property, must equal the sum of the <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> and the <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> properties. This value includes both the required and the optional editable characters.\n  syntax:\n    content: public int EditPositionCount { get; }\n    return:\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> containing the number of editable positions in the formatted string.\n  overload: System.ComponentModel.MaskedTextProvider.EditPositionCount*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.EditPositions\n  commentId: P:System.ComponentModel.MaskedTextProvider.EditPositions\n  id: EditPositions\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: EditPositions\n  nameWithType: MaskedTextProvider.EditPositions\n  fullName: MaskedTextProvider.EditPositions\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets a newly created enumerator for the editable positions in the formatted string.\n  remarks: \"On every access of the <xref:System.ComponentModel.MaskedTextProvider.EditPositions%2A> property, a temporary collection of editable positions is created that the retrieved <xref:System.Collections.IEnumerator> operates on.  \\n  \\n This collection is read-only.\"\n  syntax:\n    content: public System.Collections.IEnumerator EditPositions { get; }\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref href=\"System.Collections.IEnumerator\"></xref> that supports enumeration over the editable positions in the formatted string.\n  overload: System.ComponentModel.MaskedTextProvider.EditPositions*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)\n  commentId: M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)\n  id: FindAssignedEditPositionFrom(System.Int32,System.Boolean)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: FindAssignedEditPositionFrom(Int32, Boolean)\n  nameWithType: MaskedTextProvider.FindAssignedEditPositionFrom(Int32, Boolean)\n  fullName: MaskedTextProvider.FindAssignedEditPositionFrom(Int32, Boolean)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Returns the position of the first assigned editable position after the specified position using the specified search direction.\n  remarks: \"The formatted string is composed of editable characters and literals copied from the mask. The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.  \\n  \\n The <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> method is used to search for the first assigned character after a specified position and search direction. The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.  \\n  \\n The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> methods are complements of this method.\"\n  syntax:\n    content: public int FindAssignedEditPositionFrom (int position, bool direction);\n    parameters:\n    - id: position\n      type: System.Int32\n      description: The zero-based position in the formatted string to start the search.\n    - id: direction\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> indicating the search direction; either `true` to search forward or `false` to search backward.\n    return:\n      type: System.Int32\n      description: If successful, an <xref href=\"System.Int32\"></xref> representing the zero-based position of the first assigned editable position encountered; otherwise <xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"></xref>.\n  overload: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)\n  commentId: M:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)\n  id: FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: FindAssignedEditPositionInRange(Int32, Int32, Boolean)\n  nameWithType: MaskedTextProvider.FindAssignedEditPositionInRange(Int32, Int32, Boolean)\n  fullName: MaskedTextProvider.FindAssignedEditPositionInRange(Int32, Int32, Boolean)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Returns the position of the first assigned editable position between the specified positions using the specified search direction.\n  remarks: \"The formatted string is composed of editable characters and literals copied from the mask. The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.  \\n  \\n The <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> method is used to search for the first assigned character between two specified positions, inclusive, using the specified search direction. The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.  \\n  \\n The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> methods are complements of this method.\"\n  syntax:\n    content: public int FindAssignedEditPositionInRange (int startPosition, int endPosition, bool direction);\n    parameters:\n    - id: startPosition\n      type: System.Int32\n      description: The zero-based position in the formatted string where the search starts.\n    - id: endPosition\n      type: System.Int32\n      description: The zero-based position in the formatted string where the search ends.\n    - id: direction\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> indicating the search direction; either `true` to search forward or `false` to search backward.\n    return:\n      type: System.Int32\n      description: If successful, an <xref href=\"System.Int32\"></xref> representing the zero-based position of the first assigned editable position encountered; otherwise <xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"></xref>.\n  overload: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)\n  commentId: M:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)\n  id: FindEditPositionFrom(System.Int32,System.Boolean)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: FindEditPositionFrom(Int32, Boolean)\n  nameWithType: MaskedTextProvider.FindEditPositionFrom(Int32, Boolean)\n  fullName: MaskedTextProvider.FindEditPositionFrom(Int32, Boolean)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Returns the position of the first editable position after the specified position using the specified search direction.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> method is used to search for the next assigned or unassigned editable position in the formatted string after the specified position.  \\n  \\n The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> method is the complement of this method.\"\n  syntax:\n    content: public int FindEditPositionFrom (int position, bool direction);\n    parameters:\n    - id: position\n      type: System.Int32\n      description: The zero-based position in the formatted string to start the search.\n    - id: direction\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> indicating the search direction; either `true` to search forward or `false` to search backward.\n    return:\n      type: System.Int32\n      description: If successful, an <xref href=\"System.Int32\"></xref> representing the zero-based position of the first editable position encountered; otherwise <xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"></xref>.\n  overload: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)\n  commentId: M:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)\n  id: FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: FindEditPositionInRange(Int32, Int32, Boolean)\n  nameWithType: MaskedTextProvider.FindEditPositionInRange(Int32, Int32, Boolean)\n  fullName: MaskedTextProvider.FindEditPositionInRange(Int32, Int32, Boolean)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Returns the position of the first editable position between the specified positions using the specified search direction.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> method is used to search for the first editable character between two specified positions, inclusive, using the specified search direction. The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the assigned value at this position.  \\n  \\n The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> method is the complement of this method.\"\n  syntax:\n    content: public int FindEditPositionInRange (int startPosition, int endPosition, bool direction);\n    parameters:\n    - id: startPosition\n      type: System.Int32\n      description: The zero-based position in the formatted string where the search starts.\n    - id: endPosition\n      type: System.Int32\n      description: The zero-based position in the formatted string where the search ends.\n    - id: direction\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> indicating the search direction; either `true` to search forward or `false` to search backward.\n    return:\n      type: System.Int32\n      description: If successful, an <xref href=\"System.Int32\"></xref> representing the zero-based position of the first editable position encountered; otherwise <xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"></xref>.\n  overload: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)\n  commentId: M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)\n  id: FindNonEditPositionFrom(System.Int32,System.Boolean)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: FindNonEditPositionFrom(Int32, Boolean)\n  nameWithType: MaskedTextProvider.FindNonEditPositionFrom(Int32, Boolean)\n  fullName: MaskedTextProvider.FindNonEditPositionFrom(Int32, Boolean)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Returns the position of the first non-editable position after the specified position using the specified search direction.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> method is used to search for the next literal character in the formatted string after the specified position. The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the literal value at this position.  \\n  \\n The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> method is the complement of this method.\"\n  syntax:\n    content: public int FindNonEditPositionFrom (int position, bool direction);\n    parameters:\n    - id: position\n      type: System.Int32\n      description: The zero-based position in the formatted string to start the search.\n    - id: direction\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> indicating the search direction; either `true` to search forward or `false` to search backward.\n    return:\n      type: System.Int32\n      description: If successful, an <xref href=\"System.Int32\"></xref> representing the zero-based position of the first literal position encountered; otherwise <xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"></xref>.\n  overload: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)\n  commentId: M:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)\n  id: FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: FindNonEditPositionInRange(Int32, Int32, Boolean)\n  nameWithType: MaskedTextProvider.FindNonEditPositionInRange(Int32, Int32, Boolean)\n  fullName: MaskedTextProvider.FindNonEditPositionInRange(Int32, Int32, Boolean)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Returns the position of the first non-editable position between the specified positions using the specified search direction.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> method is used to search for the first literal character between two specified positions, inclusive, using the specified search direction. The result can subsequently be passed as a parameter to the <xref:System.ComponentModel.MaskedTextProvider.Item%2A> indexer to obtain the literal value at this position.  \\n  \\n The <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A> method is the complement of this method.\"\n  syntax:\n    content: public int FindNonEditPositionInRange (int startPosition, int endPosition, bool direction);\n    parameters:\n    - id: startPosition\n      type: System.Int32\n      description: The zero-based position in the formatted string where the search starts.\n    - id: endPosition\n      type: System.Int32\n      description: The zero-based position in the formatted string where the search ends.\n    - id: direction\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> indicating the search direction; either `true` to search forward or `false` to search backward.\n    return:\n      type: System.Int32\n      description: If successful, an <xref href=\"System.Int32\"></xref> representing the zero-based position of the first literal position encountered; otherwise <xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"></xref>.\n  overload: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)\n  commentId: M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)\n  id: FindUnassignedEditPositionFrom(System.Int32,System.Boolean)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: FindUnassignedEditPositionFrom(Int32, Boolean)\n  nameWithType: MaskedTextProvider.FindUnassignedEditPositionFrom(Int32, Boolean)\n  fullName: MaskedTextProvider.FindUnassignedEditPositionFrom(Int32, Boolean)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Returns the position of the first unassigned editable position after the specified position using the specified search direction.\n  remarks: \"The formatted string is composed of editable characters and literals copied from the mask. The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.  \\n  \\n The <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> method is used to search for the first unassigned character after a specified position and search direction. The prompt character should occupy this position.  \\n  \\n The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> methods are complements of this method.\"\n  syntax:\n    content: public int FindUnassignedEditPositionFrom (int position, bool direction);\n    parameters:\n    - id: position\n      type: System.Int32\n      description: The zero-based position in the formatted string to start the search.\n    - id: direction\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> indicating the search direction; either `true` to search forward or `false` to search backward.\n    return:\n      type: System.Int32\n      description: If successful, an <xref href=\"System.Int32\"></xref> representing the zero-based position of the first unassigned editable position encountered; otherwise <xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"></xref>.\n  overload: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)\n  commentId: M:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)\n  id: FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: FindUnassignedEditPositionInRange(Int32, Int32, Boolean)\n  nameWithType: MaskedTextProvider.FindUnassignedEditPositionInRange(Int32, Int32, Boolean)\n  fullName: MaskedTextProvider.FindUnassignedEditPositionInRange(Int32, Int32, Boolean)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Returns the position of the first unassigned editable position between the specified positions using the specified search direction.\n  remarks: \"The formatted string is composed of editable characters and literals copied from the mask. The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.  \\n  \\n The <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> method is used to search for the first unassigned character between two specified positions, inclusive, using the specified search direction. The prompt character should occupy this position.  \\n  \\n The <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A> and <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> methods are complements of this method.\"\n  syntax:\n    content: public int FindUnassignedEditPositionInRange (int startPosition, int endPosition, bool direction);\n    parameters:\n    - id: startPosition\n      type: System.Int32\n      description: The zero-based position in the formatted string where the search starts.\n    - id: endPosition\n      type: System.Int32\n      description: The zero-based position in the formatted string where the search ends.\n    - id: direction\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> indicating the search direction; either `true` to search forward or `false` to search backward.\n    return:\n      type: System.Int32\n      description: If successful, an <xref href=\"System.Int32\"></xref> representing the zero-based position of the first unassigned editable position encountered; otherwise <xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"></xref>.\n  overload: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)\n  commentId: M:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)\n  id: GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: GetOperationResultFromHint(MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.GetOperationResultFromHint(MaskedTextResultHint)\n  fullName: MaskedTextProvider.GetOperationResultFromHint(MaskedTextResultHint)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Determines whether the specified <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> denotes success or failure.\n  remarks: 'The following methods of the <xref:System.ComponentModel.MaskedTextProvider> class contain a parameter of type <xref:System.ComponentModel.MaskedTextResultHint> that is used to output information about the operation of the method: <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Clear%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>, <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.Set%2A>, <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A>, and <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>. The <xref:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint%2A> method interprets this value and returns a Boolean value that indicates whether the <xref:System.ComponentModel.MaskedTextResultHint> has signaled that the operation was a success or failure.'\n  syntax:\n    content: public static bool GetOperationResultFromHint (System.ComponentModel.MaskedTextResultHint hint);\n    parameters:\n    - id: hint\n      type: System.ComponentModel.MaskedTextResultHint\n      description: A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> value typically obtained as an output parameter from a previous operation.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> value represents a success; otherwise, `false` if it represents failure.'\n  overload: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.IncludeLiterals\n  commentId: P:System.ComponentModel.MaskedTextProvider.IncludeLiterals\n  id: IncludeLiterals\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: IncludeLiterals\n  nameWithType: MaskedTextProvider.IncludeLiterals\n  fullName: MaskedTextProvider.IncludeLiterals\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets or sets a value that indicates whether literal characters in the input mask should be included in the formatted string.\n  remarks: The <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties will determine whether prompt and literal characters appear when calling the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method. By setting both of these properties to `false`, the parsed string will represent only the characters entered by the user.\n  syntax:\n    content: public bool IncludeLiterals { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if literals are included; otherwise, `false`. The default is `true`.'\n  overload: System.ComponentModel.MaskedTextProvider.IncludeLiterals*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.IncludePrompt\n  commentId: P:System.ComponentModel.MaskedTextProvider.IncludePrompt\n  id: IncludePrompt\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: IncludePrompt\n  nameWithType: MaskedTextProvider.IncludePrompt\n  fullName: MaskedTextProvider.IncludePrompt\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets or sets a value indicating whether <xref href=\"System.Windows.Forms.MaskedTextBox.PromptChar\"></xref> is used to represent the absence of user input when displaying the formatted string.\n  remarks: The <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties will determine whether prompt and literal characters appear when calling the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method. By setting both of these properties to `false`, the parsed string will represent only the characters entered by the user.\n  syntax:\n    content: public bool IncludePrompt { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the prompt character is used to represent the positions where no user input was provided; otherwise, `false`. The default is `true`.'\n  overload: System.ComponentModel.MaskedTextProvider.IncludePrompt*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)\n  commentId: M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)\n  id: InsertAt(System.Char,System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: InsertAt(Char, Int32)\n  nameWithType: MaskedTextProvider.InsertAt(Char, Int32)\n  fullName: MaskedTextProvider.InsertAt(Char, Int32)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Inserts the specified character at the specified position within the formatted string.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts a character into the first edit position at or beyond that specified by the `pos` parameter. This method will shift all existing characters after the insertion point over by one position to make room for the inserted `input` character. If one of the following errors occurs, the insertion is not performed, and the method returns `false`.  \\n  \\n-   The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.  \\n  \\n-   An editable character was not found in the formatted string at or beyond the specified position, `pos`.  \\n  \\n-   The insertion character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.  \\n  \\n-   There are no available positions to the right of the insertion point, so that existing characters cannot be shifted.  \\n  \\n-   Shifting the existing characters would produce a violation of the mask.  \\n  \\n An empty `input` string will cause no change in the formatted string, but will return `true`.\"\n  syntax:\n    content: public bool InsertAt (char input, int position);\n    parameters:\n    - id: input\n      type: System.Char\n      description: The <xref href=\"System.Char\"></xref> to be inserted.\n    - id: position\n      type: System.Int32\n      description: The zero-based position in the formatted string to insert the character.\n    return:\n      type: System.Boolean\n      description: '`true` if the insertion was successful; otherwise, `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.InsertAt*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)\n  commentId: M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)\n  id: InsertAt(System.String,System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: InsertAt(String, Int32)\n  nameWithType: MaskedTextProvider.InsertAt(String, Int32)\n  fullName: MaskedTextProvider.InsertAt(String, Int32)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Inserts the specified string at a specified position within the formatted string.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts each character from the `input` string into the edit positions located at position `pos` and beyond. This method will shift all existing characters after the insertion point over by one position for each inserted character. If one of the following errors occurs, no insertion is performed, and the method returns `false`.  \\n  \\n-   The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.  \\n  \\n-   Not enough editable characters exist in the formatted string at or beyond the specified position, `pos`, to insert all of the characters from the `input` string.  \\n  \\n-   One or more of the insertion characters are not a valid input character because they are not printable or do not match their corresponding mask element.  \\n  \\n-   There are not enough available positions to the right of the insertion point, so that existing characters cannot be shifted.  \\n  \\n-   Shifting the existing characters would produce a violation of the mask. Note that this shifting occurs during the insertion of each individual character.  \\n  \\n An empty `input` string will cause no change in the formatted string, but will return `true`.\"\n  syntax:\n    content: public bool InsertAt (string input, int position);\n    parameters:\n    - id: input\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> to be inserted.\n    - id: position\n      type: System.Int32\n      description: The zero-based position in the formatted string to insert the input string.\n    return:\n      type: System.Boolean\n      description: '`true` if the insertion was successful; otherwise, `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.InsertAt*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>input</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  commentId: M:System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  id: InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: InsertAt(Char, Int32, Int32, MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.InsertAt(Char, Int32, Int32, MaskedTextResultHint)\n  fullName: MaskedTextProvider.InsertAt(Char, Int32, Int32, MaskedTextResultHint)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Inserts the specified character at the specified position within the formatted string, returning the last insertion position and the status of the operation.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts a character into the first edit position at or beyond that specified by the `pos` parameter. This method will shift all existing characters after the insertion point over by one position to make room for the inserted `input` character. If one of the following errors occurs, the insertion is not performed, and the method returns `false`.  \\n  \\n-   The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.  \\n  \\n-   An editable character was not found in the formatted string at or beyond the specified position, `pos`.  \\n  \\n-   The insertion character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.  \\n  \\n-   There are no available positions to the right of the insertion point, so that existing characters cannot be shifted.  \\n  \\n-   Shifting the existing characters would produce a violation of the mask.  \\n  \\n An empty `input` string will cause no change in the formatted string, but will return `true`.\"\n  syntax:\n    content: public bool InsertAt (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);\n    parameters:\n    - id: input\n      type: System.Char\n      description: The <xref href=\"System.Char\"></xref> to be inserted.\n    - id: position\n      type: System.Int32\n      description: The zero-based position in the formatted string to insert the character.\n    - id: testPosition\n      type: System.Int32\n      description: If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed. An output parameter.\n    - id: resultHint\n      type: System.ComponentModel.MaskedTextResultHint\n      description: A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the insertion operation. An output parameter.\n    return:\n      type: System.Boolean\n      description: '`true` if the insertion was successful; otherwise, `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.InsertAt*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  commentId: M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  id: InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: InsertAt(String, Int32, Int32, MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.InsertAt(String, Int32, Int32, MaskedTextResultHint)\n  fullName: MaskedTextProvider.InsertAt(String, Int32, Int32, MaskedTextResultHint)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Inserts the specified string at a specified position within the formatted string, returning the last insertion position and the status of the operation.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> method inserts each character from the `input` string into the edit positions located at position `pos` and beyond. This method will shift all existing characters after the insertion point over by one position for each inserted character. If one of the following errors occurs, no insertion is performed, and the method returns `false`.  \\n  \\n-   The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.  \\n  \\n-   Not enough editable characters exist in the formatted string at or beyond the specified position, `pos`, to insert all of the characters from the `input` string.  \\n  \\n-   One or more of the insertion characters are not a valid input character because they are not printable or do not match their corresponding mask element.  \\n  \\n-   There are not enough available positions to the right of the insertion point, so that existing characters cannot be shifted.  \\n  \\n-   Shifting the existing characters would produce a violation of the mask. Note that this shifting occurs during the insertion of each individual character.  \\n  \\n An empty `input` string will cause no change in the formatted string, but will return `true`.\"\n  syntax:\n    content: public bool InsertAt (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);\n    parameters:\n    - id: input\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> to be inserted.\n    - id: position\n      type: System.Int32\n      description: The zero-based position in the formatted string to insert the input string.\n    - id: testPosition\n      type: System.Int32\n      description: If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed. An output parameter.\n    - id: resultHint\n      type: System.ComponentModel.MaskedTextResultHint\n      description: A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the insertion operation. An output parameter.\n    return:\n      type: System.Boolean\n      description: '`true` if the insertion was successful; otherwise, `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.InsertAt*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>input</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.InvalidIndex\n  commentId: P:System.ComponentModel.MaskedTextProvider.InvalidIndex\n  id: InvalidIndex\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: InvalidIndex\n  nameWithType: MaskedTextProvider.InvalidIndex\n  fullName: MaskedTextProvider.InvalidIndex\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets the upper bound of the range of invalid indexes.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex%2A> property is used to represent a result that is not valid for indexing operations, such as the <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> method.  \\n  \\n When you use the provider or implement your own, you should use this property to decide if an index is invalid, rather than hard-coding knowledge of invalid values.\"\n  syntax:\n    content: public static int InvalidIndex { get; }\n    return:\n      type: System.Int32\n      description: A value representing the largest invalid index, as determined by the provider implementation. For example, if the lowest valid index is 0, this property will return -1.\n  overload: System.ComponentModel.MaskedTextProvider.InvalidIndex*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)\n  commentId: M:System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)\n  id: IsAvailablePosition(System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: IsAvailablePosition(Int32)\n  nameWithType: MaskedTextProvider.IsAvailablePosition(Int32)\n  fullName: MaskedTextProvider.IsAvailablePosition(Int32)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Determines whether the specified position is available for assignment.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.IsAvailablePosition%2A> method returns `true` only if all of the following conditions are true:  \\n  \\n-   The `pos` parameter is within the bounds of the formatted string; that is, its value is greater than or equal to zero and less than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.  \\n  \\n-   The specified position is an editable character.  \\n  \\n-   A character has not already been assigned to this position.\"\n  syntax:\n    content: public bool IsAvailablePosition (int position);\n    parameters:\n    - id: position\n      type: System.Int32\n      description: The zero-based position in the mask to test.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified position in the formatted string is editable and has not been assigned to yet; otherwise `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.IsAvailablePosition*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)\n  commentId: M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)\n  id: IsEditPosition(System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: IsEditPosition(Int32)\n  nameWithType: MaskedTextProvider.IsEditPosition(Int32)\n  fullName: MaskedTextProvider.IsEditPosition(Int32)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Determines whether the specified position is editable.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.IsEditPosition%2A> method returns `true` only if both of the following conditions are true:  \\n  \\n-   The `pos` parameter is within the bounds of the formatted string; that is, its value is greater than or equal to zero and less than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.  \\n  \\n-   The specified position is an editable character.\"\n  syntax:\n    content: public bool IsEditPosition (int position);\n    parameters:\n    - id: position\n      type: System.Int32\n      description: The zero-based position in the mask to test.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified position in the formatted string is editable; otherwise `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.IsEditPosition*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.IsPassword\n  commentId: P:System.ComponentModel.MaskedTextProvider.IsPassword\n  id: IsPassword\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: IsPassword\n  nameWithType: MaskedTextProvider.IsPassword\n  fullName: MaskedTextProvider.IsPassword\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets or sets a value that determines whether password protection should be applied to the formatted string.\n  remarks: \"Password protection can be initiated using one of the following two ways:  \\n  \\n-   Setting the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property to a non-`null` value.  \\n  \\n-   Setting the <xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> property to `true`., which also sets the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property to the <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> value.  \\n  \\n <xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A> is used by the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods to determine whether to reveal the actual input characters or obscure them with <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>.\"\n  syntax:\n    content: public bool IsPassword { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the input string is to be treated as a password string; otherwise, `false`. The default is `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.IsPassword*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)\n  commentId: M:System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)\n  id: IsValidInputChar(System.Char)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: IsValidInputChar(Char)\n  nameWithType: MaskedTextProvider.IsValidInputChar(Char)\n  fullName: MaskedTextProvider.IsValidInputChar(Char)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Determines whether the specified character is a valid input character.\n  remarks: Valid input characters include all printable characters, which include letters, digits, punctuation, symbols and the space character.\n  syntax:\n    content: public static bool IsValidInputChar (char c);\n    parameters:\n    - id: c\n      type: System.Char\n      description: The <xref href=\"System.Char\"></xref> value to test.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified character contains a valid input value; otherwise `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.IsValidInputChar*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)\n  commentId: M:System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)\n  id: IsValidMaskChar(System.Char)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: IsValidMaskChar(Char)\n  nameWithType: MaskedTextProvider.IsValidMaskChar(Char)\n  fullName: MaskedTextProvider.IsValidMaskChar(Char)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Determines whether the specified character is a valid mask character.\n  remarks: Valid mask characters include all printable characters, which include letters, digits, punctuation, symbols and the space character.\n  syntax:\n    content: public static bool IsValidMaskChar (char c);\n    parameters:\n    - id: c\n      type: System.Char\n      description: The <xref href=\"System.Char\"></xref> value to test.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified character contains a valid mask value; otherwise `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.IsValidMaskChar*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)\n  commentId: M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)\n  id: IsValidPasswordChar(System.Char)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: IsValidPasswordChar(Char)\n  nameWithType: MaskedTextProvider.IsValidPasswordChar(Char)\n  fullName: MaskedTextProvider.IsValidPasswordChar(Char)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Determines whether the specified character is a valid password character.\n  remarks: Valid password characters include all printable characters and the null character, which is used to disable password functionality. Printable characters include letters, digits, punctuation, symbols and the space character.\n  syntax:\n    content: public static bool IsValidPasswordChar (char c);\n    parameters:\n    - id: c\n      type: System.Char\n      description: The <xref href=\"System.Char\"></xref> value to test.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified character contains a valid password value; otherwise `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.Item(System.Int32)\n  commentId: P:System.ComponentModel.MaskedTextProvider.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: MaskedTextProvider.Item(Int32)\n  fullName: MaskedTextProvider.Item(Int32)\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets the element at the specified position in the formatted string.\n  remarks: The <xref:System.ComponentModel.MaskedTextProvider.Item%2A> property is the standard indexer for the <xref:System.ComponentModel.MaskedTextProvider> class.\n  syntax:\n    content: public char this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: A zero-based index of the element to retrieve.\n    return:\n      type: System.Char\n      description: The <xref href=\"System.Char\"></xref> at the specified position in the formatted string.\n  overload: System.ComponentModel.MaskedTextProvider.Item*\n  exceptions:\n  - type: System.IndexOutOfRangeException\n    commentId: T:System.IndexOutOfRangeException\n    description: <code>index</code> is less than zero or greater than or equal to the <xref href=\"System.ComponentModel.MaskedTextProvider.Length\"></xref> of the mask.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.LastAssignedPosition\n  commentId: P:System.ComponentModel.MaskedTextProvider.LastAssignedPosition\n  id: LastAssignedPosition\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: LastAssignedPosition\n  nameWithType: MaskedTextProvider.LastAssignedPosition\n  fullName: MaskedTextProvider.LastAssignedPosition\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets the index in the mask of the rightmost input character that has been assigned to the mask.\n  remarks: The <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> property represents the farthest edit position in the mask, relative to the origin, that has been assigned an input character. For languages read left-to-right (LTR), such as English, this is the rightmost assigned position; for languages read right-to-left (RTL), this would be the leftmost position.\n  syntax:\n    content: public int LastAssignedPosition { get; }\n    return:\n      type: System.Int32\n      description: If at least one input character has been assigned to the mask, an <xref href=\"System.Int32\"></xref> containing the index of rightmost assigned position; otherwise, if no position has been assigned, <xref href=\"System.ComponentModel.MaskedTextProvider.InvalidIndex\"></xref>.\n  overload: System.ComponentModel.MaskedTextProvider.LastAssignedPosition*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.Length\n  commentId: P:System.ComponentModel.MaskedTextProvider.Length\n  id: Length\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: Length\n  nameWithType: MaskedTextProvider.Length\n  fullName: MaskedTextProvider.Length\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets the length of the mask, absent any mask modifier characters.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.Length%2A> property represents the total number of characters in the mask, including both the literal and editable characters. The number of literal characters can be determined by subtracting the value of the <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A> from the <xref:System.ComponentModel.MaskedTextProvider.Length%2A>.  \\n  \\n <xref:System.ComponentModel.MaskedTextProvider.Length%2A> also describes the length of the formatted string, including input characters, literals, and prompt characters.\"\n  syntax:\n    content: public int Length { get; }\n    return:\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> containing the number of positions in the mask, excluding characters that modify mask input.\n  overload: System.ComponentModel.MaskedTextProvider.Length*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.Mask\n  commentId: P:System.ComponentModel.MaskedTextProvider.Mask\n  id: Mask\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: Mask\n  nameWithType: MaskedTextProvider.Mask\n  fullName: MaskedTextProvider.Mask\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets the input mask.\n  remarks: The <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property is set in the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> constructor. This mask must contain only valid characters as defined by the masking language.\n  syntax:\n    content: public string Mask { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> containing the full mask.\n  overload: System.ComponentModel.MaskedTextProvider.Mask*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.MaskCompleted\n  commentId: P:System.ComponentModel.MaskedTextProvider.MaskCompleted\n  id: MaskCompleted\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: MaskCompleted\n  nameWithType: MaskedTextProvider.MaskCompleted\n  fullName: MaskedTextProvider.MaskCompleted\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether all required inputs have been entered into the formatted string.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> property checks only required input elements. To determine whether all required and optional input elements have been entered, use the <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=fullName> property of the <xref:System.Windows.Forms.MaskedTextBox> class instead.  \\n  \\n The current value of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property determines which formatting elements are considered required and which are optional.\"\n  syntax:\n    content: public bool MaskCompleted { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if all required input has been entered into the mask; otherwise, `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.MaskCompleted*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.MaskFull\n  commentId: P:System.ComponentModel.MaskedTextProvider.MaskFull\n  id: MaskFull\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: MaskFull\n  nameWithType: MaskedTextProvider.MaskFull\n  fullName: MaskedTextProvider.MaskFull\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether all required and optional inputs have been entered into the formatted string.\n  remarks: To verify if only required input elements have been entered, use the <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> property instead. The current value of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A> property determines which formatting elements are considered required and which are optional.\n  syntax:\n    content: public bool MaskFull { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if all required and optional inputs have been entered; otherwise, `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.MaskFull*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.PasswordChar\n  commentId: P:System.ComponentModel.MaskedTextProvider.PasswordChar\n  id: PasswordChar\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: PasswordChar\n  nameWithType: MaskedTextProvider.PasswordChar\n  fullName: MaskedTextProvider.PasswordChar\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets or sets the character to be substituted for the actual input characters.\n  remarks: For sensitive user input, it is common practice to conceal the actual information entered by the user during output operations. If the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a non-`null` character, output methods such as <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> will obscure the input characters with the specified password character. Setting this property to `null` will disable password protection functionality.\n  syntax:\n    content: public char PasswordChar { get; set; }\n    return:\n      type: System.Char\n      description: The <xref href=\"System.Char\"></xref> value used as the password character.\n  overload: System.ComponentModel.MaskedTextProvider.PasswordChar*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The password character specified when setting this property is the same as the current prompt character, <xref href=\"System.ComponentModel.MaskedTextProvider.PromptChar\"></xref>. The two are required to be different.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The character specified when setting this property is not a valid password character, as determined by the <xref href=\"System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)\"></xref> method.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.PromptChar\n  commentId: P:System.ComponentModel.MaskedTextProvider.PromptChar\n  id: PromptChar\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: PromptChar\n  nameWithType: MaskedTextProvider.PromptChar\n  fullName: MaskedTextProvider.PromptChar\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets or sets the character used to represent the absence of user input for all available edit positions.\n  remarks: The <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> property represents the prompt character that is used by the <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> and <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> methods to represent the current state of the formatted input string. A prompt character is placed in editable positions that have not yet been assigned an input value. Some versions of the <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method also depend on the value of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> property.\n  syntax:\n    content: public char PromptChar { get; set; }\n    return:\n      type: System.Char\n      description: The character used to prompt the user for input. The default is an underscore (_).\n  overload: System.ComponentModel.MaskedTextProvider.PromptChar*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The prompt character specified when setting this property is the same as the current password character, <xref href=\"System.ComponentModel.MaskedTextProvider.PasswordChar\"></xref>. The two are required to be different.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The character specified when setting this property is not a valid password character, as determined by the <xref href=\"System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)\"></xref> method.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.Remove\n  commentId: M:System.ComponentModel.MaskedTextProvider.Remove\n  id: Remove\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: Remove()\n  nameWithType: MaskedTextProvider.Remove()\n  fullName: MaskedTextProvider.Remove()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Removes the last assigned character from the formatted string.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> method has no effect if there are no characters assigned to the mask yet.  \\n  \\n When the last assigned character is removed from the formatted string, the editable mask character is reset for that position, allowing subsequent input.\"\n  syntax:\n    content: public bool Remove ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the character was successfully removed; otherwise, `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.Remove*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  commentId: M:System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  id: Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: Remove(Int32, MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.Remove(Int32, MaskedTextResultHint)\n  fullName: MaskedTextProvider.Remove(Int32, MaskedTextResultHint)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Removes the last assigned character from the formatted string, and then outputs the removal position and descriptive information.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.Remove%2A> method has no effect if there are no characters assigned to the mask yet.  \\n  \\n When the last assigned character is removed from the formatted string, the editable mask character is reset for that position, allowing subsequent input.\"\n  syntax:\n    content: public bool Remove (out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);\n    parameters:\n    - id: testPosition\n      type: System.Int32\n      description: The zero-based position in the formatted string where the character was actually removed. An output parameter.\n    - id: resultHint\n      type: System.ComponentModel.MaskedTextResultHint\n      description: A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the operation. An output parameter.\n    return:\n      type: System.Boolean\n      description: '`true` if the character was successfully removed; otherwise, `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.Remove*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)\n  commentId: M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: MaskedTextProvider.RemoveAt(Int32)\n  fullName: MaskedTextProvider.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Removes the assigned character at the specified position from the formatted string.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal position specified. Literal characters are not affected by this method.  \\n  \\n When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal. Vacated positions are reset for input. If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.  \\n  \\n This method call is exactly equivalent to the following call to the overloaded <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29> version:  \\n  \\n `RemoveAt(pos, pos);`\"\n  syntax:\n    content: public bool RemoveAt (int position);\n    parameters:\n    - id: position\n      type: System.Int32\n      description: The zero-based position of the assigned character to remove.\n    return:\n      type: System.Boolean\n      description: '`true` if the character was successfully removed; otherwise, `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.RemoveAt*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)\n  commentId: M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)\n  id: RemoveAt(System.Int32,System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: RemoveAt(Int32, Int32)\n  nameWithType: MaskedTextProvider.RemoveAt(Int32, Int32)\n  fullName: MaskedTextProvider.RemoveAt(Int32, Int32)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Removes the assigned characters between the specified positions from the formatted string.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal positions specified.  \\n  \\n When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal. Vacated positions are reset for input. If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.\"\n  syntax:\n    content: public bool RemoveAt (int startPosition, int endPosition);\n    parameters:\n    - id: startPosition\n      type: System.Int32\n      description: The zero-based index of the first assigned character to remove.\n    - id: endPosition\n      type: System.Int32\n      description: The zero-based index of the last assigned character to remove.\n    return:\n      type: System.Boolean\n      description: '`true` if the character was successfully removed; otherwise, `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.RemoveAt*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  commentId: M:System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  id: RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: RemoveAt(Int32, Int32, Int32, MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.RemoveAt(Int32, Int32, Int32, MaskedTextResultHint)\n  fullName: MaskedTextProvider.RemoveAt(Int32, Int32, Int32, MaskedTextResultHint)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Removes the assigned characters between the specified positions from the formatted string, and then outputs the removal position and descriptive information.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> method has no effect if there are no assigned characters at the removal positions specified.  \\n  \\n When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal. Vacated positions are reset for input. If movement of the characters is prevented by the mask definition, no removal occurs, and <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> returns `false`.  \\n  \\n This version of <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> provides two additional output parameters to convey more information about the operation of the method.\"\n  syntax:\n    content: public bool RemoveAt (int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);\n    parameters:\n    - id: startPosition\n      type: System.Int32\n      description: The zero-based index of the first assigned character to remove.\n    - id: endPosition\n      type: System.Int32\n      description: The zero-based index of the last assigned character to remove.\n    - id: testPosition\n      type: System.Int32\n      description: If successful, the zero-based position in the formatted string of where the characters were actually removed; otherwise, the first position where the operation failed. An output parameter.\n    - id: resultHint\n      type: System.ComponentModel.MaskedTextResultHint\n      description: A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the operation. An output parameter.\n    return:\n      type: System.Boolean\n      description: '`true` if the character was successfully removed; otherwise, `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.RemoveAt*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  commentId: M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  id: Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: Replace(String, Int32, Int32, Int32, MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.Replace(String, Int32, Int32, Int32, MaskedTextResultHint)\n  fullName: MaskedTextProvider.Replace(String, Int32, Int32, Int32, MaskedTextResultHint)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Replaces a range of editable characters between the specified starting and ending positions with the specified string, and then outputs the removal position and descriptive information.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> method searches for the first editable position in the formatted string between the specified starting and ending positions. Operating on the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.  \\n  \\n The following conditions are considered errors. When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%2A> returns `false`.  \\n  \\n-   The `startPos` or `endPos` parameters point before the start of the formatted string or beyond its end.  \\n  \\n-   There are not enough editable positions in the formatted string to hold the contents of the replacement string.  \\n  \\n-   One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.  \\n  \\n In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.\"\n  syntax:\n    content: public bool Replace (string input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);\n    parameters:\n    - id: input\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> value used to replace the existing editable characters.\n    - id: startPosition\n      type: System.Int32\n      description: The zero-based position in the formatted string where the replacement starts.\n    - id: endPosition\n      type: System.Int32\n      description: The zero-based position in the formatted string where the replacement ends.\n    - id: testPosition\n      type: System.Int32\n      description: If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed. An output parameter.\n    - id: resultHint\n      type: System.ComponentModel.MaskedTextResultHint\n      description: A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the replacement operation. An output parameter.\n    return:\n      type: System.Boolean\n      description: '`true` if all the characters were successfully replaced; otherwise, `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.Replace*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  commentId: M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  id: Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: Replace(Char, Int32, Int32, Int32, MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.Replace(Char, Int32, Int32, Int32, MaskedTextResultHint)\n  fullName: MaskedTextProvider.Replace(Char, Int32, Int32, Int32, MaskedTextResultHint)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Replaces a single character between the specified starting and ending positions with the specified character value, and then outputs the removal position and descriptive information.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position in the formatted string between the specified starting and ending positions. If one is found, the value of the editable position is changed to the specified character, `input`. Any of the following conditions will result in an error condition that causes no replacement to be performed and a value of `false` to be returned:  \\n  \\n-   The `startPos` or `endPos` parameters point before the start of the formatted string or beyond its end.  \\n  \\n-   An editable character was not found in the specified interval.  \\n  \\n-   The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.  \\n  \\n In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.\"\n  syntax:\n    content: public bool Replace (char input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);\n    parameters:\n    - id: input\n      type: System.Char\n      description: The <xref href=\"System.Char\"></xref> value that replaces the existing value.\n    - id: startPosition\n      type: System.Int32\n      description: The zero-based position in the formatted string where the replacement starts.\n    - id: endPosition\n      type: System.Int32\n      description: The zero-based position in the formatted string where the replacement ends.\n    - id: testPosition\n      type: System.Int32\n      description: If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed. An output parameter.\n    - id: resultHint\n      type: System.ComponentModel.MaskedTextResultHint\n      description: A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the replacement operation. An output parameter.\n    return:\n      type: System.Boolean\n      description: '`true` if the character was successfully replaced; otherwise, `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.Replace*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  commentId: M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  id: Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: Replace(String, Int32, Int32, MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.Replace(String, Int32, Int32, MaskedTextResultHint)\n  fullName: MaskedTextProvider.Replace(String, Int32, Int32, MaskedTextResultHint)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Replaces a range of editable characters starting at the specified position with the specified string, and then outputs the removal position and descriptive information.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position at or beyond the specified position, `pos`. Operating on the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.  \\n  \\n The following conditions are considered errors. When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> returns `false`.  \\n  \\n-   The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.  \\n  \\n-   There are not enough editable positions in the formatted string to hold the contents of the replacement string.  \\n  \\n-   One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.  \\n  \\n In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.\"\n  syntax:\n    content: public bool Replace (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);\n    parameters:\n    - id: input\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> value used to replace the existing editable characters.\n    - id: position\n      type: System.Int32\n      description: The zero-based position to search for the first editable character to replace.\n    - id: testPosition\n      type: System.Int32\n      description: If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed. An output parameter.\n    - id: resultHint\n      type: System.ComponentModel.MaskedTextResultHint\n      description: A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the replacement operation. An output parameter.\n    return:\n      type: System.Boolean\n      description: '`true` if all the characters were successfully replaced; otherwise, `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.Replace*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  commentId: M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  id: Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: Replace(Char, Int32, Int32, MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.Replace(Char, Int32, Int32, MaskedTextResultHint)\n  fullName: MaskedTextProvider.Replace(Char, Int32, Int32, MaskedTextResultHint)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Replaces a single character at or beyond the specified position with the specified character value, and then outputs the removal position and descriptive information.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29> method searches for the first editable position in the formatted string at or beyond the specified position, `pos`. If one is found, the value of the editable position is changed to the specified character, `input`. Any of the following conditions will result in an error condition that causes no replacement to be performed and a value of `false` to be returned:  \\n  \\n-   The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.  \\n  \\n-   An editable character was not found in the formatted string at or beyond the specified position, `pos`.  \\n  \\n-   The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.  \\n  \\n In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.\"\n  syntax:\n    content: public bool Replace (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);\n    parameters:\n    - id: input\n      type: System.Char\n      description: The <xref href=\"System.Char\"></xref> value that replaces the existing value.\n    - id: position\n      type: System.Int32\n      description: The zero-based position to search for the first editable character to replace.\n    - id: testPosition\n      type: System.Int32\n      description: If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed. An output parameter.\n    - id: resultHint\n      type: System.ComponentModel.MaskedTextResultHint\n      description: A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the replacement operation. An output parameter.\n    return:\n      type: System.Boolean\n      description: '`true` if the character was successfully replaced; otherwise, `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.Replace*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)\n  commentId: M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)\n  id: Replace(System.String,System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: Replace(String, Int32)\n  nameWithType: MaskedTextProvider.Replace(String, Int32)\n  fullName: MaskedTextProvider.Replace(String, Int32)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Replaces a range of editable characters starting at the specified position with the specified string.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> method searches for the first editable position at or beyond the specified position, `pos`. Operating under the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, `input`.  \\n  \\n The following conditions are considered errors. When an error occurs, no replacement occurs and <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29> returns `false`.  \\n  \\n-   The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.  \\n  \\n-   There are not enough editable positions in the formatted string to hold the contents of the replacement string.  \\n  \\n-   One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.\"\n  syntax:\n    content: public bool Replace (string input, int position);\n    parameters:\n    - id: input\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> value used to replace the existing editable characters.\n    - id: position\n      type: System.Int32\n      description: The zero-based position to search for the first editable character to replace.\n    return:\n      type: System.Boolean\n      description: '`true` if all the characters were successfully replaced; otherwise, `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.Replace*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>input</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)\n  commentId: M:System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)\n  id: Replace(System.Char,System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: Replace(Char, Int32)\n  nameWithType: MaskedTextProvider.Replace(Char, Int32)\n  fullName: MaskedTextProvider.Replace(Char, Int32)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Replaces a single character at or beyond the specified position with the specified character value.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%29> method searches for the first editable position in the formatted string at or beyond the specified position, `pos`. If one is found, the value of the editable position is changed to the specified character, `input`. Any of the following conditions will result in an error that causes no replacement to be performed and a value of `false` to be returned:  \\n  \\n-   The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string.  \\n  \\n-   An editable character was not found in the formatted string at or beyond the specified position, `pos`.  \\n  \\n-   The replacement character, `input`, is not a valid input character because it is not printable or does not match its corresponding mask element.\"\n  syntax:\n    content: public bool Replace (char input, int position);\n    parameters:\n    - id: input\n      type: System.Char\n      description: The <xref href=\"System.Char\"></xref> value that replaces the existing value.\n    - id: position\n      type: System.Int32\n      description: The zero-based position to search for the first editable character to replace.\n    return:\n      type: System.Boolean\n      description: '`true` if the character was successfully replaced; otherwise, `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.Replace*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.ResetOnPrompt\n  commentId: P:System.ComponentModel.MaskedTextProvider.ResetOnPrompt\n  id: ResetOnPrompt\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: ResetOnPrompt\n  nameWithType: MaskedTextProvider.ResetOnPrompt\n  fullName: MaskedTextProvider.ResetOnPrompt\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets or sets a value that determines how an input character that matches the prompt character should be handled.\n  remarks: \"<xref:System.ComponentModel.MaskedTextProvider> can treat two categories of characters, paces and prompt characters, in a special manner. Normally, each input character will be tested against the mask and either accepted or rejected. Operating on the assumption that the <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> property is set to a value other than `null`, then setting the <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> property to `true` will result in special processing for the prompt character. When a prompt character is added, it causes the current mask character position to be cleared and the current position to be advanced to the next editable character.  \\n  \\n <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> takes precedence over the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property as described in the following table.  \\n  \\n|<xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>|<xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>|Resulting behavior|  \\n|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------|  \\n|`true`|`true`|The prompt character can be added and it causes the current mask position to be reset. The default.|  \\n|`true`|`false`|The prompt character can be added and it causes the current mask position to be reset.|  \\n|`false`|`true`|The prompt character is processed as a normal input character.|  \\n|`false`|`false`|The prompt character is not valid and methods attempting to add the character will fail.|\"\n  syntax:\n    content: public bool ResetOnPrompt { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the prompt character entered as input causes the current editable position in the mask to be reset; otherwise, `false` to indicate that the prompt character is to be processed as a normal input character. The default is `true`.'\n  overload: System.ComponentModel.MaskedTextProvider.ResetOnPrompt*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.ResetOnSpace\n  commentId: P:System.ComponentModel.MaskedTextProvider.ResetOnSpace\n  id: ResetOnSpace\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: ResetOnSpace\n  nameWithType: MaskedTextProvider.ResetOnSpace\n  fullName: MaskedTextProvider.ResetOnSpace\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets or sets a value that determines how a space input character should be handled.\n  remarks: \"<xref:System.ComponentModel.MaskedTextProvider> can treat two categories of characters, spaces and prompt characters, in a special manner. Normally, each input character will be tested against the mask and either accepted or rejected. Setting the <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> property to `true` will result in the current mask character position being cleared and the current position being advanced to the next editable character.  \\n  \\n <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> is useful when assigning text that was saved excluding the prompt, where the prompt is replaced with a space. Before restoring such a string, setting <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> to `true` will reset the prompt characters at the positions occupied by spaces in the input string.\"\n  syntax:\n    content: public bool ResetOnSpace { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the space input character causes the current editable position in the mask to be reset; otherwise, `false` to indicate that it is to be processed as a normal input character. The default is `true`.'\n  overload: System.ComponentModel.MaskedTextProvider.ResetOnSpace*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.Set(System.String)\n  commentId: M:System.ComponentModel.MaskedTextProvider.Set(System.String)\n  id: Set(System.String)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: Set(String)\n  nameWithType: MaskedTextProvider.Set(String)\n  fullName: MaskedTextProvider.Set(String)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Sets the formatted string to the specified input string.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.Set%2A> method clears the existing contents of the formatted string and then applies the mask against the `input` string to update the contents of the formatted string.  \\n  \\n The following conditions are considered errors. When an error occurs, the formatted string remains unaltered and <xref:System.ComponentModel.MaskedTextProvider.Set%2A> returns `false`.  \\n  \\n-   There are not enough editable positions in the formatted string to hold the contents of the replacement string.  \\n  \\n-   One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.\"\n  syntax:\n    content: public bool Set (string input);\n    parameters:\n    - id: input\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> value used to set the formatted string.\n    return:\n      type: System.Boolean\n      description: '`true` if all the characters were successfully set; otherwise, `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.Set*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>input</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  commentId: M:System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  id: Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: Set(String, Int32, MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.Set(String, Int32, MaskedTextResultHint)\n  fullName: MaskedTextProvider.Set(String, Int32, MaskedTextResultHint)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Sets the formatted string to the specified input string, and then outputs the removal position and descriptive information.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.Set%2A> method clears the existing contents of the formatted string and then applies the mask against the `input` string to update the contents of the formatted string.  \\n  \\n The following conditions are considered errors. When an error occurs, the formatted string remains unaltered and <xref:System.ComponentModel.MaskedTextProvider.Set%2A> returns `false`.  \\n  \\n-   There are not enough editable positions in the formatted string to hold the contents of the replacement string.  \\n  \\n-   One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.  \\n  \\n This version of <xref:System.ComponentModel.MaskedTextProvider.Set%2A> provides two additional output parameters to convey more information about the operation of the method.\"\n  syntax:\n    content: public bool Set (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);\n    parameters:\n    - id: input\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> value used to set the formatted string.\n    - id: testPosition\n      type: System.Int32\n      description: If successful, the zero-based position in the formatted string where the last character was actually set; otherwise, the first position where the operation failed. An output parameter.\n    - id: resultHint\n      type: System.ComponentModel.MaskedTextResultHint\n      description: A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the set operation. An output parameter.\n    return:\n      type: System.Boolean\n      description: '`true` if all the characters were successfully set; otherwise, `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.Set*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>input</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.SkipLiterals\n  commentId: P:System.ComponentModel.MaskedTextProvider.SkipLiterals\n  id: SkipLiterals\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: SkipLiterals\n  nameWithType: MaskedTextProvider.SkipLiterals\n  fullName: MaskedTextProvider.SkipLiterals\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets or sets a value indicating whether literal character positions in the mask can be overwritten by their same values.\n  remarks: \"Input masks can contain literal and editable characters. If an attempt is made to add an input character to the position in a mask occupied by a literal, the value of the <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> property determines the result.  \\n  \\n-   If this property is `true`, it is valid to overwrite a literal with the same value when adding input characters. For example, a forward slash character value, `'/'`, could be added to the third position of the mask `\\\"00/00/000\\\"`.  \\n  \\n-   If this property is `false`, it is not valid to assign any value to a mask position occupied by a literal character.\"\n  syntax:\n    content: public bool SkipLiterals { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to allow literals to be added back; otherwise, `false` to not allow the user to overwrite literal characters. The default is `true`.'\n  overload: System.ComponentModel.MaskedTextProvider.SkipLiterals*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.ToDisplayString\n  commentId: M:System.ComponentModel.MaskedTextProvider.ToDisplayString\n  id: ToDisplayString\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: ToDisplayString()\n  nameWithType: MaskedTextProvider.ToDisplayString()\n  fullName: MaskedTextProvider.ToDisplayString()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Returns the formatted string in a displayable form.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> method will always include prompt and literal characters in the return value, regardless of the value of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> or <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties. This method will always display password characters if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a character value other than `null`.  \\n  \\n <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> is commonly used to obtain the string to display in associated user interface elements, such as <xref:System.Windows.Forms.MaskedTextBox>.\"\n  syntax:\n    content: public string ToDisplayString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The formatted <xref href=\"System.String\"></xref> that includes prompts and mask literals.\n  overload: System.ComponentModel.MaskedTextProvider.ToDisplayString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)\n  commentId: M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)\n  id: ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: ToString(Boolean, Boolean, Boolean, Int32, Int32)\n  nameWithType: MaskedTextProvider.ToString(Boolean, Boolean, Boolean, Int32, Int32)\n  fullName: MaskedTextProvider.ToString(Boolean, Boolean, Boolean, Int32, Int32)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Returns a substring of the formatted string, optionally including prompt, literal, and password characters.\n  remarks: \"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter. The return string includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively. Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and  <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties. If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property. If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.  \\n  \\n> [!IMPORTANT]\\n>  Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.  \\n  \\n <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:  \\n  \\n-   If `startPos` is less than zero, the starting position is set to zero.  \\n  \\n-   If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.  \\n  \\n-   If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.  \\n  \\n-   If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.\"\n  syntax:\n    content: public string ToString (bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int startPosition, int length);\n    parameters:\n    - id: ignorePasswordChar\n      type: System.Boolean\n      description: '`true` to return the actual editable characters; otherwise, `false` to indicate that the <xref href=\"System.ComponentModel.MaskedTextProvider.PasswordChar\"></xref> property is to be honored.'\n    - id: includePrompt\n      type: System.Boolean\n      description: '`true` to include prompt characters in the return string; otherwise, `false`.'\n    - id: includeLiterals\n      type: System.Boolean\n      description: '`true` to return literal characters in the return string; otherwise, `false`.'\n    - id: startPosition\n      type: System.Int32\n      description: The zero-based position in the formatted string where the output begins.\n    - id: length\n      type: System.Int32\n      description: The number of characters to return.\n    return:\n      type: System.String\n      description: If successful, a substring of the formatted <xref href=\"System.String\"></xref>, which includes all the assigned character values and optionally includes literals, prompts, and password characters; otherwise the <xref href=\"System.String.Empty\"></xref> string.\n  overload: System.ComponentModel.MaskedTextProvider.ToString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)\n  commentId: M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)\n  id: ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: ToString(Boolean, Boolean, Int32, Int32)\n  nameWithType: MaskedTextProvider.ToString(Boolean, Boolean, Int32, Int32)\n  fullName: MaskedTextProvider.ToString(Boolean, Boolean, Int32, Int32)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Returns a substring of the formatted string, optionally including prompt and literal characters.\n  remarks: \"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter. The return string includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively. Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties. This method will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.  \\n  \\n> [!IMPORTANT]\\n>  Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.  \\n  \\n <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:  \\n  \\n-   If `startPos` is less than zero, the starting position is set to zero.  \\n  \\n-   If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.  \\n  \\n-   If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.  \\n  \\n-   If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.\"\n  syntax:\n    content: public string ToString (bool includePrompt, bool includeLiterals, int startPosition, int length);\n    parameters:\n    - id: includePrompt\n      type: System.Boolean\n      description: '`true` to include prompt characters in the return string; otherwise, `false`.'\n    - id: includeLiterals\n      type: System.Boolean\n      description: '`true` to include literal characters in the return string; otherwise, `false`.'\n    - id: startPosition\n      type: System.Int32\n      description: The zero-based position in the formatted string where the output begins.\n    - id: length\n      type: System.Int32\n      description: The number of characters to return.\n    return:\n      type: System.String\n      description: If successful, a substring of the formatted <xref href=\"System.String\"></xref>, which includes all the assigned character values and optionally includes literals and prompts; otherwise the <xref href=\"System.String.Empty\"></xref> string.\n  overload: System.ComponentModel.MaskedTextProvider.ToString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)\n  commentId: M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)\n  id: ToString(System.Boolean,System.Int32,System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: ToString(Boolean, Int32, Int32)\n  nameWithType: MaskedTextProvider.ToString(Boolean, Int32, Int32)\n  fullName: MaskedTextProvider.ToString(Boolean, Int32, Int32)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Returns a substring of the formatted string, optionally including password characters.\n  remarks: \"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter. The returned string includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively. If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property. If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.  \\n  \\n> [!IMPORTANT]\\n>  Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.  \\n  \\n <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:  \\n  \\n-   If `startPos` is less than zero, the starting position is set to zero.  \\n  \\n-   If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.  \\n  \\n-   If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.  \\n  \\n-   If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.\"\n  syntax:\n    content: public string ToString (bool ignorePasswordChar, int startPosition, int length);\n    parameters:\n    - id: ignorePasswordChar\n      type: System.Boolean\n      description: '`true` to return the actual editable characters; otherwise, `false` to indicate that the <xref href=\"System.ComponentModel.MaskedTextProvider.PasswordChar\"></xref> property is to be honored.'\n    - id: startPosition\n      type: System.Int32\n      description: The zero-based position in the formatted string where the output begins.\n    - id: length\n      type: System.Int32\n      description: The number of characters to return.\n    return:\n      type: System.String\n      description: If successful, a substring of the formatted <xref href=\"System.String\"></xref>, which includes literals, prompts, and optionally password characters; otherwise the <xref href=\"System.String.Empty\"></xref> string.\n  overload: System.ComponentModel.MaskedTextProvider.ToString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)\n  commentId: M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)\n  id: ToString(System.Boolean)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: ToString(Boolean)\n  nameWithType: MaskedTextProvider.ToString(Boolean)\n  fullName: MaskedTextProvider.ToString(Boolean)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Returns the formatted string, optionally including password characters.\n  remarks: \"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively. If the `ignorePasswordChar` parameter is `true`, it will return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property. If this parameter is `false`, it will use the password character to obscure editable user input if the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is set to a value other than `null`.  \\n  \\n> [!IMPORTANT]\\n>  Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.\"\n  syntax:\n    content: public string ToString (bool ignorePasswordChar);\n    parameters:\n    - id: ignorePasswordChar\n      type: System.Boolean\n      description: '`true` to return the actual editable characters; otherwise, `false` to indicate that the <xref href=\"System.ComponentModel.MaskedTextProvider.PasswordChar\"></xref> property is to be honored.'\n    return:\n      type: System.String\n      description: The formatted <xref href=\"System.String\"></xref> that includes literals, prompts, and optionally password characters.\n  overload: System.ComponentModel.MaskedTextProvider.ToString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)\n  commentId: M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)\n  id: ToString(System.Boolean,System.Boolean)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: ToString(Boolean, Boolean)\n  nameWithType: MaskedTextProvider.ToString(Boolean, Boolean)\n  fullName: MaskedTextProvider.ToString(Boolean, Boolean)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Returns the formatted string, optionally including prompt and literal characters.\n  remarks: \"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the values of the `IncludePrompt` and `IncludeLiterals` parameters, respectively. Notice that these parameters override the values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A><xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties. This method will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.  \\n  \\n> [!IMPORTANT]\\n>  Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.\"\n  syntax:\n    content: public string ToString (bool includePrompt, bool includeLiterals);\n    parameters:\n    - id: includePrompt\n      type: System.Boolean\n      description: '`true` to include prompt characters in the return string; otherwise, `false`.'\n    - id: includeLiterals\n      type: System.Boolean\n      description: '`true` to include literal characters in the return string; otherwise, `false`.'\n    return:\n      type: System.String\n      description: The formatted <xref href=\"System.String\"></xref> that includes all the assigned character values and optionally includes literals and prompts.\n  overload: System.ComponentModel.MaskedTextProvider.ToString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.ToString\n  commentId: M:System.ComponentModel.MaskedTextProvider.ToString\n  id: ToString\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: MaskedTextProvider.ToString()\n  fullName: MaskedTextProvider.ToString()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Returns the formatted string that includes all the assigned character values.\n  remarks: \"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively. It will always return the original input characters, ignoring the value of the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property.  \\n  \\n> [!IMPORTANT]\\n>  Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.\"\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The formatted <xref href=\"System.String\"></xref> that includes all the assigned character values.\n  overload: System.ComponentModel.MaskedTextProvider.ToString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)\n  commentId: M:System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)\n  id: ToString(System.Int32,System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: ToString(Int32, Int32)\n  nameWithType: MaskedTextProvider.ToString(Int32, Int32)\n  fullName: MaskedTextProvider.ToString(Int32, Int32)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Returns a substring of the formatted string.\n  remarks: \"This version of the overloaded <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> method returns a substring of the formatted string, starting at the position `startPos` and including the subsequent number of characters specified by the `length` parameter. The returned string includes prompts and literals according to the current values of the <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> and <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> properties, respectively. The return string will contain the original input characters; the <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> property is always ignored.  \\n  \\n> [!IMPORTANT]\\n>  Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.  \\n  \\n <xref:System.ComponentModel.MaskedTextProvider.ToString%2A> performs the following actions when there are discrepancies in the input parameters:  \\n  \\n-   If `startPos` is less than zero, the starting position is set to zero.  \\n  \\n-   If `startPos` is greater than or equal to the actual <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the formatted string, the <xref:System.String.Empty> string is returned.  \\n  \\n-   If `length` is greater than the remaining number of characters past the starting position, only the remaining characters are returned.  \\n  \\n-   If `length` is less than or equal to zero, the <xref:System.String.Empty> string is returned.\"\n  syntax:\n    content: public string ToString (int startPosition, int length);\n    parameters:\n    - id: startPosition\n      type: System.Int32\n      description: The zero-based position in the formatted string where the output begins.\n    - id: length\n      type: System.Int32\n      description: The number of characters to return.\n    return:\n      type: System.String\n      description: If successful, a substring of the formatted <xref href=\"System.String\"></xref>, which includes all the assigned character values; otherwise the <xref href=\"System.String.Empty\"></xref> string.\n  overload: System.ComponentModel.MaskedTextProvider.ToString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)\n  commentId: M:System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)\n  id: VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: VerifyChar(Char, Int32, MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.VerifyChar(Char, Int32, MaskedTextResultHint)\n  fullName: MaskedTextProvider.VerifyChar(Char, Int32, MaskedTextResultHint)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Tests whether the specified character could be set successfully at the specified position.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A> method tests whether a single character value represents valid input at the specified position in the formatted string. This method will return `false` for the following reasons:  \\n  \\n-   The `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.  \\n  \\n-   The character `input` is not a valid input character, as determined by the <xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A> method.  \\n  \\n-   The `input` is not compatible with the mask element at the specified position, `pos`.  \\n  \\n The last condition may depend on the current value of the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> and <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> properties.  \\n  \\n To test an entire input string against the mask, use one of the <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> methods instead.\"\n  syntax:\n    content: public bool VerifyChar (char input, int position, out System.ComponentModel.MaskedTextResultHint hint);\n    parameters:\n    - id: input\n      type: System.Char\n      description: The <xref href=\"System.Char\"></xref> value to test.\n    - id: position\n      type: System.Int32\n      description: The position in the mask to test the input character against.\n    - id: hint\n      type: System.ComponentModel.MaskedTextResultHint\n      description: A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the operation. An output parameter.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified character is valid for the specified position; otherwise, `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.VerifyChar*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)\n  commentId: M:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)\n  id: VerifyEscapeChar(System.Char,System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: VerifyEscapeChar(Char, Int32)\n  nameWithType: MaskedTextProvider.VerifyEscapeChar(Char, Int32)\n  fullName: MaskedTextProvider.VerifyEscapeChar(Char, Int32)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Tests whether the specified character would be escaped at the specified position.\n  remarks: \"A character is said to be *escaped* if it is valid input, but is not assigned to that position in the formatted string. Escaped characters fall into the following three categories:  \\n  \\n-   Prompt characters are escaped if the <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> property is `true`.  \\n  \\n-   Input characters are escaped if they have the same value as the literal in the mask, and if the <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> property is `true`.  \\n  \\n-   Space characters are escaped if the <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> property is `true`.  \\n  \\n The <xref:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar%2A> method will also return `false` if the `pos` parameter is less than zero or greater than the <xref:System.ComponentModel.MaskedTextProvider.Length%2A> of the <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.\"\n  syntax:\n    content: public bool VerifyEscapeChar (char input, int position);\n    parameters:\n    - id: input\n      type: System.Char\n      description: The <xref href=\"System.Char\"></xref> value to test.\n    - id: position\n      type: System.Int32\n      description: The position in the mask to test the input character against.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified character would be escaped at the specified position; otherwise, `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.VerifyString(System.String)\n  commentId: M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String)\n  id: VerifyString(System.String)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: VerifyString(String)\n  nameWithType: MaskedTextProvider.VerifyString(String)\n  fullName: MaskedTextProvider.VerifyString(String)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Tests whether the specified string could be set successfully.\n  remarks: The <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> applies the `input` string against the mask, without actually changing the formatted string, to test whether `input` would be valid in a corresponding <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operation. This method also returns `true` if input is `null` or has zero length.\n  syntax:\n    content: public bool VerifyString (string input);\n    parameters:\n    - id: input\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> value to test.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified string represents valid input; otherwise, `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.VerifyString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  commentId: M:System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  id: VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  langs:\n  - csharp\n  name: VerifyString(String, Int32, MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.VerifyString(String, Int32, MaskedTextResultHint)\n  fullName: MaskedTextProvider.VerifyString(String, Int32, MaskedTextResultHint)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Tests whether the specified string could be set successfully, and then outputs position and descriptive information.\n  remarks: \"The <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> applies the `input` string against the mask, without actually changing the formatted string, to test whether `input` would be valid in a corresponding <xref:System.ComponentModel.MaskedTextProvider.Set%2A> operation. This method also returns `true` if input is `null` or has zero length.  \\n  \\n This version of <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> provides two additional output parameters to convey more information about the operation of the method.\"\n  syntax:\n    content: public bool VerifyString (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);\n    parameters:\n    - id: input\n      type: System.String\n      description: The <xref href=\"System.String\"></xref> value to test.\n    - id: testPosition\n      type: System.Int32\n      description: If successful, the zero-based position of the last character actually tested; otherwise, the first position where the test failed. An output parameter.\n    - id: resultHint\n      type: System.ComponentModel.MaskedTextResultHint\n      description: A <xref href=\"System.ComponentModel.MaskedTextResultHint\"></xref> that succinctly describes the result of the test operation. An output parameter.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified string represents valid input; otherwise, `false`.'\n  overload: System.ComponentModel.MaskedTextProvider.VerifyString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.IndexOutOfRangeException\n  parent: System\n  isExternal: false\n  name: IndexOutOfRangeException\n  nameWithType: IndexOutOfRangeException\n  fullName: System.IndexOutOfRangeException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: MaskedTextProvider(String)\n  nameWithType: MaskedTextProvider.MaskedTextProvider(String)\n  fullName: MaskedTextProvider.MaskedTextProvider(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: MaskedTextProvider(String, Boolean)\n  nameWithType: MaskedTextProvider.MaskedTextProvider(String, Boolean)\n  fullName: MaskedTextProvider.MaskedTextProvider(String, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: MaskedTextProvider(String, CultureInfo)\n  nameWithType: MaskedTextProvider.MaskedTextProvider(String, CultureInfo)\n  fullName: MaskedTextProvider.MaskedTextProvider(String, CultureInfo)\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: MaskedTextProvider(String, Char, Boolean)\n  nameWithType: MaskedTextProvider.MaskedTextProvider(String, Char, Boolean)\n  fullName: MaskedTextProvider.MaskedTextProvider(String, Char, Boolean)\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: MaskedTextProvider(String, CultureInfo, Boolean)\n  nameWithType: MaskedTextProvider.MaskedTextProvider(String, CultureInfo, Boolean)\n  fullName: MaskedTextProvider.MaskedTextProvider(String, CultureInfo, Boolean)\n- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: MaskedTextProvider(String, CultureInfo, Char, Boolean)\n  nameWithType: MaskedTextProvider.MaskedTextProvider(String, CultureInfo, Char, Boolean)\n  fullName: MaskedTextProvider.MaskedTextProvider(String, CultureInfo, Char, Boolean)\n- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: MaskedTextProvider(String, CultureInfo, Boolean, Char, Char, Boolean)\n  nameWithType: MaskedTextProvider.MaskedTextProvider(String, CultureInfo, Boolean, Char, Char, Boolean)\n  fullName: MaskedTextProvider.MaskedTextProvider(String, CultureInfo, Boolean, Char, Char, Boolean)\n- uid: System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Add(String, Int32, MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.Add(String, Int32, MaskedTextResultHint)\n  fullName: MaskedTextProvider.Add(String, Int32, MaskedTextResultHint)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.MaskedTextResultHint\n  parent: System.ComponentModel\n  isExternal: false\n  name: MaskedTextResultHint\n  nameWithType: MaskedTextResultHint\n  fullName: System.ComponentModel.MaskedTextResultHint\n- uid: System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Add(Char, Int32, MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.Add(Char, Int32, MaskedTextResultHint)\n  fullName: MaskedTextProvider.Add(Char, Int32, MaskedTextResultHint)\n- uid: System.ComponentModel.MaskedTextProvider.Add(System.Char)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Add(Char)\n  nameWithType: MaskedTextProvider.Add(Char)\n  fullName: MaskedTextProvider.Add(Char)\n- uid: System.ComponentModel.MaskedTextProvider.Add(System.String)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Add(String)\n  nameWithType: MaskedTextProvider.Add(String)\n  fullName: MaskedTextProvider.Add(String)\n- uid: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: AllowPromptAsInput\n  nameWithType: MaskedTextProvider.AllowPromptAsInput\n  fullName: MaskedTextProvider.AllowPromptAsInput\n- uid: System.ComponentModel.MaskedTextProvider.AsciiOnly\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: AsciiOnly\n  nameWithType: MaskedTextProvider.AsciiOnly\n  fullName: MaskedTextProvider.AsciiOnly\n- uid: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: AssignedEditPositionCount\n  nameWithType: MaskedTextProvider.AssignedEditPositionCount\n  fullName: MaskedTextProvider.AssignedEditPositionCount\n- uid: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: AvailableEditPositionCount\n  nameWithType: MaskedTextProvider.AvailableEditPositionCount\n  fullName: MaskedTextProvider.AvailableEditPositionCount\n- uid: System.ComponentModel.MaskedTextProvider.Clear\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Clear()\n  nameWithType: MaskedTextProvider.Clear()\n  fullName: MaskedTextProvider.Clear()\n- uid: System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Clear(MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.Clear(MaskedTextResultHint)\n  fullName: MaskedTextProvider.Clear(MaskedTextResultHint)\n- uid: System.ComponentModel.MaskedTextProvider.Clone\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Clone()\n  nameWithType: MaskedTextProvider.Clone()\n  fullName: MaskedTextProvider.Clone()\n- uid: System.ComponentModel.MaskedTextProvider.Culture\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Culture\n  nameWithType: MaskedTextProvider.Culture\n  fullName: MaskedTextProvider.Culture\n- uid: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: DefaultPasswordChar\n  nameWithType: MaskedTextProvider.DefaultPasswordChar\n  fullName: MaskedTextProvider.DefaultPasswordChar\n- uid: System.ComponentModel.MaskedTextProvider.EditPositionCount\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: EditPositionCount\n  nameWithType: MaskedTextProvider.EditPositionCount\n  fullName: MaskedTextProvider.EditPositionCount\n- uid: System.ComponentModel.MaskedTextProvider.EditPositions\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: EditPositions\n  nameWithType: MaskedTextProvider.EditPositions\n  fullName: MaskedTextProvider.EditPositions\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: FindAssignedEditPositionFrom(Int32, Boolean)\n  nameWithType: MaskedTextProvider.FindAssignedEditPositionFrom(Int32, Boolean)\n  fullName: MaskedTextProvider.FindAssignedEditPositionFrom(Int32, Boolean)\n- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: FindAssignedEditPositionInRange(Int32, Int32, Boolean)\n  nameWithType: MaskedTextProvider.FindAssignedEditPositionInRange(Int32, Int32, Boolean)\n  fullName: MaskedTextProvider.FindAssignedEditPositionInRange(Int32, Int32, Boolean)\n- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: FindEditPositionFrom(Int32, Boolean)\n  nameWithType: MaskedTextProvider.FindEditPositionFrom(Int32, Boolean)\n  fullName: MaskedTextProvider.FindEditPositionFrom(Int32, Boolean)\n- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: FindEditPositionInRange(Int32, Int32, Boolean)\n  nameWithType: MaskedTextProvider.FindEditPositionInRange(Int32, Int32, Boolean)\n  fullName: MaskedTextProvider.FindEditPositionInRange(Int32, Int32, Boolean)\n- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: FindNonEditPositionFrom(Int32, Boolean)\n  nameWithType: MaskedTextProvider.FindNonEditPositionFrom(Int32, Boolean)\n  fullName: MaskedTextProvider.FindNonEditPositionFrom(Int32, Boolean)\n- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: FindNonEditPositionInRange(Int32, Int32, Boolean)\n  nameWithType: MaskedTextProvider.FindNonEditPositionInRange(Int32, Int32, Boolean)\n  fullName: MaskedTextProvider.FindNonEditPositionInRange(Int32, Int32, Boolean)\n- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: FindUnassignedEditPositionFrom(Int32, Boolean)\n  nameWithType: MaskedTextProvider.FindUnassignedEditPositionFrom(Int32, Boolean)\n  fullName: MaskedTextProvider.FindUnassignedEditPositionFrom(Int32, Boolean)\n- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: FindUnassignedEditPositionInRange(Int32, Int32, Boolean)\n  nameWithType: MaskedTextProvider.FindUnassignedEditPositionInRange(Int32, Int32, Boolean)\n  fullName: MaskedTextProvider.FindUnassignedEditPositionInRange(Int32, Int32, Boolean)\n- uid: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: GetOperationResultFromHint(MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.GetOperationResultFromHint(MaskedTextResultHint)\n  fullName: MaskedTextProvider.GetOperationResultFromHint(MaskedTextResultHint)\n- uid: System.ComponentModel.MaskedTextProvider.IncludeLiterals\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: IncludeLiterals\n  nameWithType: MaskedTextProvider.IncludeLiterals\n  fullName: MaskedTextProvider.IncludeLiterals\n- uid: System.ComponentModel.MaskedTextProvider.IncludePrompt\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: IncludePrompt\n  nameWithType: MaskedTextProvider.IncludePrompt\n  fullName: MaskedTextProvider.IncludePrompt\n- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: InsertAt(Char, Int32)\n  nameWithType: MaskedTextProvider.InsertAt(Char, Int32)\n  fullName: MaskedTextProvider.InsertAt(Char, Int32)\n- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: InsertAt(String, Int32)\n  nameWithType: MaskedTextProvider.InsertAt(String, Int32)\n  fullName: MaskedTextProvider.InsertAt(String, Int32)\n- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: InsertAt(Char, Int32, Int32, MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.InsertAt(Char, Int32, Int32, MaskedTextResultHint)\n  fullName: MaskedTextProvider.InsertAt(Char, Int32, Int32, MaskedTextResultHint)\n- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: InsertAt(String, Int32, Int32, MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.InsertAt(String, Int32, Int32, MaskedTextResultHint)\n  fullName: MaskedTextProvider.InsertAt(String, Int32, Int32, MaskedTextResultHint)\n- uid: System.ComponentModel.MaskedTextProvider.InvalidIndex\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: InvalidIndex\n  nameWithType: MaskedTextProvider.InvalidIndex\n  fullName: MaskedTextProvider.InvalidIndex\n- uid: System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: IsAvailablePosition(Int32)\n  nameWithType: MaskedTextProvider.IsAvailablePosition(Int32)\n  fullName: MaskedTextProvider.IsAvailablePosition(Int32)\n- uid: System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: IsEditPosition(Int32)\n  nameWithType: MaskedTextProvider.IsEditPosition(Int32)\n  fullName: MaskedTextProvider.IsEditPosition(Int32)\n- uid: System.ComponentModel.MaskedTextProvider.IsPassword\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: IsPassword\n  nameWithType: MaskedTextProvider.IsPassword\n  fullName: MaskedTextProvider.IsPassword\n- uid: System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: IsValidInputChar(Char)\n  nameWithType: MaskedTextProvider.IsValidInputChar(Char)\n  fullName: MaskedTextProvider.IsValidInputChar(Char)\n- uid: System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: IsValidMaskChar(Char)\n  nameWithType: MaskedTextProvider.IsValidMaskChar(Char)\n  fullName: MaskedTextProvider.IsValidMaskChar(Char)\n- uid: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: IsValidPasswordChar(Char)\n  nameWithType: MaskedTextProvider.IsValidPasswordChar(Char)\n  fullName: MaskedTextProvider.IsValidPasswordChar(Char)\n- uid: System.ComponentModel.MaskedTextProvider.Item(System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: MaskedTextProvider.Item(Int32)\n  fullName: MaskedTextProvider.Item(Int32)\n- uid: System.ComponentModel.MaskedTextProvider.LastAssignedPosition\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: LastAssignedPosition\n  nameWithType: MaskedTextProvider.LastAssignedPosition\n  fullName: MaskedTextProvider.LastAssignedPosition\n- uid: System.ComponentModel.MaskedTextProvider.Length\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Length\n  nameWithType: MaskedTextProvider.Length\n  fullName: MaskedTextProvider.Length\n- uid: System.ComponentModel.MaskedTextProvider.Mask\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Mask\n  nameWithType: MaskedTextProvider.Mask\n  fullName: MaskedTextProvider.Mask\n- uid: System.ComponentModel.MaskedTextProvider.MaskCompleted\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: MaskCompleted\n  nameWithType: MaskedTextProvider.MaskCompleted\n  fullName: MaskedTextProvider.MaskCompleted\n- uid: System.ComponentModel.MaskedTextProvider.MaskFull\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: MaskFull\n  nameWithType: MaskedTextProvider.MaskFull\n  fullName: MaskedTextProvider.MaskFull\n- uid: System.ComponentModel.MaskedTextProvider.PasswordChar\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: PasswordChar\n  nameWithType: MaskedTextProvider.PasswordChar\n  fullName: MaskedTextProvider.PasswordChar\n- uid: System.ComponentModel.MaskedTextProvider.PromptChar\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: PromptChar\n  nameWithType: MaskedTextProvider.PromptChar\n  fullName: MaskedTextProvider.PromptChar\n- uid: System.ComponentModel.MaskedTextProvider.Remove\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Remove()\n  nameWithType: MaskedTextProvider.Remove()\n  fullName: MaskedTextProvider.Remove()\n- uid: System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Remove(Int32, MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.Remove(Int32, MaskedTextResultHint)\n  fullName: MaskedTextProvider.Remove(Int32, MaskedTextResultHint)\n- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: MaskedTextProvider.RemoveAt(Int32)\n  fullName: MaskedTextProvider.RemoveAt(Int32)\n- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: RemoveAt(Int32, Int32)\n  nameWithType: MaskedTextProvider.RemoveAt(Int32, Int32)\n  fullName: MaskedTextProvider.RemoveAt(Int32, Int32)\n- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: RemoveAt(Int32, Int32, Int32, MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.RemoveAt(Int32, Int32, Int32, MaskedTextResultHint)\n  fullName: MaskedTextProvider.RemoveAt(Int32, Int32, Int32, MaskedTextResultHint)\n- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Replace(String, Int32, Int32, Int32, MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.Replace(String, Int32, Int32, Int32, MaskedTextResultHint)\n  fullName: MaskedTextProvider.Replace(String, Int32, Int32, Int32, MaskedTextResultHint)\n- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Replace(Char, Int32, Int32, Int32, MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.Replace(Char, Int32, Int32, Int32, MaskedTextResultHint)\n  fullName: MaskedTextProvider.Replace(Char, Int32, Int32, Int32, MaskedTextResultHint)\n- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Replace(String, Int32, Int32, MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.Replace(String, Int32, Int32, MaskedTextResultHint)\n  fullName: MaskedTextProvider.Replace(String, Int32, Int32, MaskedTextResultHint)\n- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Replace(Char, Int32, Int32, MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.Replace(Char, Int32, Int32, MaskedTextResultHint)\n  fullName: MaskedTextProvider.Replace(Char, Int32, Int32, MaskedTextResultHint)\n- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Replace(String, Int32)\n  nameWithType: MaskedTextProvider.Replace(String, Int32)\n  fullName: MaskedTextProvider.Replace(String, Int32)\n- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Replace(Char, Int32)\n  nameWithType: MaskedTextProvider.Replace(Char, Int32)\n  fullName: MaskedTextProvider.Replace(Char, Int32)\n- uid: System.ComponentModel.MaskedTextProvider.ResetOnPrompt\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: ResetOnPrompt\n  nameWithType: MaskedTextProvider.ResetOnPrompt\n  fullName: MaskedTextProvider.ResetOnPrompt\n- uid: System.ComponentModel.MaskedTextProvider.ResetOnSpace\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: ResetOnSpace\n  nameWithType: MaskedTextProvider.ResetOnSpace\n  fullName: MaskedTextProvider.ResetOnSpace\n- uid: System.ComponentModel.MaskedTextProvider.Set(System.String)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Set(String)\n  nameWithType: MaskedTextProvider.Set(String)\n  fullName: MaskedTextProvider.Set(String)\n- uid: System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Set(String, Int32, MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.Set(String, Int32, MaskedTextResultHint)\n  fullName: MaskedTextProvider.Set(String, Int32, MaskedTextResultHint)\n- uid: System.ComponentModel.MaskedTextProvider.SkipLiterals\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: SkipLiterals\n  nameWithType: MaskedTextProvider.SkipLiterals\n  fullName: MaskedTextProvider.SkipLiterals\n- uid: System.ComponentModel.MaskedTextProvider.ToDisplayString\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: ToDisplayString()\n  nameWithType: MaskedTextProvider.ToDisplayString()\n  fullName: MaskedTextProvider.ToDisplayString()\n- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: ToString(Boolean, Boolean, Boolean, Int32, Int32)\n  nameWithType: MaskedTextProvider.ToString(Boolean, Boolean, Boolean, Int32, Int32)\n  fullName: MaskedTextProvider.ToString(Boolean, Boolean, Boolean, Int32, Int32)\n- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: ToString(Boolean, Boolean, Int32, Int32)\n  nameWithType: MaskedTextProvider.ToString(Boolean, Boolean, Int32, Int32)\n  fullName: MaskedTextProvider.ToString(Boolean, Boolean, Int32, Int32)\n- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: ToString(Boolean, Int32, Int32)\n  nameWithType: MaskedTextProvider.ToString(Boolean, Int32, Int32)\n  fullName: MaskedTextProvider.ToString(Boolean, Int32, Int32)\n- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: ToString(Boolean)\n  nameWithType: MaskedTextProvider.ToString(Boolean)\n  fullName: MaskedTextProvider.ToString(Boolean)\n- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: ToString(Boolean, Boolean)\n  nameWithType: MaskedTextProvider.ToString(Boolean, Boolean)\n  fullName: MaskedTextProvider.ToString(Boolean, Boolean)\n- uid: System.ComponentModel.MaskedTextProvider.ToString\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: ToString()\n  nameWithType: MaskedTextProvider.ToString()\n  fullName: MaskedTextProvider.ToString()\n- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: ToString(Int32, Int32)\n  nameWithType: MaskedTextProvider.ToString(Int32, Int32)\n  fullName: MaskedTextProvider.ToString(Int32, Int32)\n- uid: System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: VerifyChar(Char, Int32, MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.VerifyChar(Char, Int32, MaskedTextResultHint)\n  fullName: MaskedTextProvider.VerifyChar(Char, Int32, MaskedTextResultHint)\n- uid: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: VerifyEscapeChar(Char, Int32)\n  nameWithType: MaskedTextProvider.VerifyEscapeChar(Char, Int32)\n  fullName: MaskedTextProvider.VerifyEscapeChar(Char, Int32)\n- uid: System.ComponentModel.MaskedTextProvider.VerifyString(System.String)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: VerifyString(String)\n  nameWithType: MaskedTextProvider.VerifyString(String)\n  fullName: MaskedTextProvider.VerifyString(String)\n- uid: System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: VerifyString(String, Int32, MaskedTextResultHint)\n  nameWithType: MaskedTextProvider.VerifyString(String, Int32, MaskedTextResultHint)\n  fullName: MaskedTextProvider.VerifyString(String, Int32, MaskedTextResultHint)\n- uid: System.ComponentModel.MaskedTextProvider.#ctor*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: MaskedTextProvider\n  nameWithType: MaskedTextProvider.MaskedTextProvider\n  fullName: MaskedTextProvider.MaskedTextProvider\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.Add*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Add\n  nameWithType: MaskedTextProvider.Add\n  fullName: MaskedTextProvider.Add\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: AllowPromptAsInput\n  nameWithType: MaskedTextProvider.AllowPromptAsInput\n  fullName: MaskedTextProvider.AllowPromptAsInput\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.AsciiOnly*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: AsciiOnly\n  nameWithType: MaskedTextProvider.AsciiOnly\n  fullName: MaskedTextProvider.AsciiOnly\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: AssignedEditPositionCount\n  nameWithType: MaskedTextProvider.AssignedEditPositionCount\n  fullName: MaskedTextProvider.AssignedEditPositionCount\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: AvailableEditPositionCount\n  nameWithType: MaskedTextProvider.AvailableEditPositionCount\n  fullName: MaskedTextProvider.AvailableEditPositionCount\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.Clear*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Clear\n  nameWithType: MaskedTextProvider.Clear\n  fullName: MaskedTextProvider.Clear\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.Clone*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Clone\n  nameWithType: MaskedTextProvider.Clone\n  fullName: MaskedTextProvider.Clone\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.Culture*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Culture\n  nameWithType: MaskedTextProvider.Culture\n  fullName: MaskedTextProvider.Culture\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: DefaultPasswordChar\n  nameWithType: MaskedTextProvider.DefaultPasswordChar\n  fullName: MaskedTextProvider.DefaultPasswordChar\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.EditPositionCount*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: EditPositionCount\n  nameWithType: MaskedTextProvider.EditPositionCount\n  fullName: MaskedTextProvider.EditPositionCount\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.EditPositions*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: EditPositions\n  nameWithType: MaskedTextProvider.EditPositions\n  fullName: MaskedTextProvider.EditPositions\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: FindAssignedEditPositionFrom\n  nameWithType: MaskedTextProvider.FindAssignedEditPositionFrom\n  fullName: MaskedTextProvider.FindAssignedEditPositionFrom\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: FindAssignedEditPositionInRange\n  nameWithType: MaskedTextProvider.FindAssignedEditPositionInRange\n  fullName: MaskedTextProvider.FindAssignedEditPositionInRange\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: FindEditPositionFrom\n  nameWithType: MaskedTextProvider.FindEditPositionFrom\n  fullName: MaskedTextProvider.FindEditPositionFrom\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: FindEditPositionInRange\n  nameWithType: MaskedTextProvider.FindEditPositionInRange\n  fullName: MaskedTextProvider.FindEditPositionInRange\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: FindNonEditPositionFrom\n  nameWithType: MaskedTextProvider.FindNonEditPositionFrom\n  fullName: MaskedTextProvider.FindNonEditPositionFrom\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: FindNonEditPositionInRange\n  nameWithType: MaskedTextProvider.FindNonEditPositionInRange\n  fullName: MaskedTextProvider.FindNonEditPositionInRange\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: FindUnassignedEditPositionFrom\n  nameWithType: MaskedTextProvider.FindUnassignedEditPositionFrom\n  fullName: MaskedTextProvider.FindUnassignedEditPositionFrom\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: FindUnassignedEditPositionInRange\n  nameWithType: MaskedTextProvider.FindUnassignedEditPositionInRange\n  fullName: MaskedTextProvider.FindUnassignedEditPositionInRange\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: GetOperationResultFromHint\n  nameWithType: MaskedTextProvider.GetOperationResultFromHint\n  fullName: MaskedTextProvider.GetOperationResultFromHint\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.IncludeLiterals*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: IncludeLiterals\n  nameWithType: MaskedTextProvider.IncludeLiterals\n  fullName: MaskedTextProvider.IncludeLiterals\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.IncludePrompt*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: IncludePrompt\n  nameWithType: MaskedTextProvider.IncludePrompt\n  fullName: MaskedTextProvider.IncludePrompt\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.InsertAt*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: InsertAt\n  nameWithType: MaskedTextProvider.InsertAt\n  fullName: MaskedTextProvider.InsertAt\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.InvalidIndex*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: InvalidIndex\n  nameWithType: MaskedTextProvider.InvalidIndex\n  fullName: MaskedTextProvider.InvalidIndex\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.IsAvailablePosition*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: IsAvailablePosition\n  nameWithType: MaskedTextProvider.IsAvailablePosition\n  fullName: MaskedTextProvider.IsAvailablePosition\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.IsEditPosition*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: IsEditPosition\n  nameWithType: MaskedTextProvider.IsEditPosition\n  fullName: MaskedTextProvider.IsEditPosition\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.IsPassword*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: IsPassword\n  nameWithType: MaskedTextProvider.IsPassword\n  fullName: MaskedTextProvider.IsPassword\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.IsValidInputChar*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: IsValidInputChar\n  nameWithType: MaskedTextProvider.IsValidInputChar\n  fullName: MaskedTextProvider.IsValidInputChar\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.IsValidMaskChar*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: IsValidMaskChar\n  nameWithType: MaskedTextProvider.IsValidMaskChar\n  fullName: MaskedTextProvider.IsValidMaskChar\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: IsValidPasswordChar\n  nameWithType: MaskedTextProvider.IsValidPasswordChar\n  fullName: MaskedTextProvider.IsValidPasswordChar\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.Item*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Item\n  nameWithType: MaskedTextProvider.Item\n  fullName: MaskedTextProvider.Item\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.LastAssignedPosition*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: LastAssignedPosition\n  nameWithType: MaskedTextProvider.LastAssignedPosition\n  fullName: MaskedTextProvider.LastAssignedPosition\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.Length*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Length\n  nameWithType: MaskedTextProvider.Length\n  fullName: MaskedTextProvider.Length\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.Mask*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Mask\n  nameWithType: MaskedTextProvider.Mask\n  fullName: MaskedTextProvider.Mask\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.MaskCompleted*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: MaskCompleted\n  nameWithType: MaskedTextProvider.MaskCompleted\n  fullName: MaskedTextProvider.MaskCompleted\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.MaskFull*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: MaskFull\n  nameWithType: MaskedTextProvider.MaskFull\n  fullName: MaskedTextProvider.MaskFull\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.PasswordChar*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: PasswordChar\n  nameWithType: MaskedTextProvider.PasswordChar\n  fullName: MaskedTextProvider.PasswordChar\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.PromptChar*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: PromptChar\n  nameWithType: MaskedTextProvider.PromptChar\n  fullName: MaskedTextProvider.PromptChar\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.Remove*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Remove\n  nameWithType: MaskedTextProvider.Remove\n  fullName: MaskedTextProvider.Remove\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.RemoveAt*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: RemoveAt\n  nameWithType: MaskedTextProvider.RemoveAt\n  fullName: MaskedTextProvider.RemoveAt\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.Replace*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Replace\n  nameWithType: MaskedTextProvider.Replace\n  fullName: MaskedTextProvider.Replace\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.ResetOnPrompt*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: ResetOnPrompt\n  nameWithType: MaskedTextProvider.ResetOnPrompt\n  fullName: MaskedTextProvider.ResetOnPrompt\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.ResetOnSpace*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: ResetOnSpace\n  nameWithType: MaskedTextProvider.ResetOnSpace\n  fullName: MaskedTextProvider.ResetOnSpace\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.Set*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: Set\n  nameWithType: MaskedTextProvider.Set\n  fullName: MaskedTextProvider.Set\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.SkipLiterals*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: SkipLiterals\n  nameWithType: MaskedTextProvider.SkipLiterals\n  fullName: MaskedTextProvider.SkipLiterals\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.ToDisplayString*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: ToDisplayString\n  nameWithType: MaskedTextProvider.ToDisplayString\n  fullName: MaskedTextProvider.ToDisplayString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.ToString*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: ToString\n  nameWithType: MaskedTextProvider.ToString\n  fullName: MaskedTextProvider.ToString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.VerifyChar*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: VerifyChar\n  nameWithType: MaskedTextProvider.VerifyChar\n  fullName: MaskedTextProvider.VerifyChar\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: VerifyEscapeChar\n  nameWithType: MaskedTextProvider.VerifyEscapeChar\n  fullName: MaskedTextProvider.VerifyEscapeChar\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.ComponentModel.MaskedTextProvider.VerifyString*\n  parent: System.ComponentModel.MaskedTextProvider\n  isExternal: false\n  name: VerifyString\n  nameWithType: MaskedTextProvider.VerifyString\n  fullName: MaskedTextProvider.VerifyString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/MaskedTextProvider.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.ICloneable\n  parent: System\n  isExternal: false\n  name: ICloneable\n  nameWithType: ICloneable\n  fullName: System.ICloneable\n"}