### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.OperationContextScope
  commentId: T:System.ServiceModel.OperationContextScope
  id: OperationContextScope
  children:
  - System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)
  - System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)
  - System.ServiceModel.OperationContextScope.Dispose
  langs:
  - csharp
  name: OperationContextScope
  nameWithType: OperationContextScope
  fullName: System.ServiceModel.OperationContextScope
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Creates a block within which an <xref href="System.ServiceModel.OperationContext"></xref> object is in scope.
  remarks: "Use the <xref:System.ServiceModel.OperationContextScope> class to create a scope for a specific <xref:System.ServiceModel.OperationContext> object or a scope for a new <xref:System.ServiceModel.OperationContext> object using a specified <xref:System.ServiceModel.IContextChannel> object. An <xref:System.ServiceModel.OperationContextScope> can be used in a [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service or [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client application.  \n  \n Once the <xref:System.ServiceModel.OperationContextScope> object has established the current operation context, you can use the <xref:System.ServiceModel.OperationContext> to:  \n  \n-   Access and modify incoming and outgoing message headers and other properties.  \n  \n-   Access the runtime, including dispatchers, the host, channel, and extensions.  \n  \n-   Access other types of contexts, such as security, instance, and request contexts.  \n  \n-   Access the channel associated with the <xref:System.ServiceModel.OperationContext> object or (if the channel implements <xref:System.ServiceModel.Channels.ISession?displayProperty=fullName>) the associated channel's session identifier.  \n  \n When an <xref:System.ServiceModel.OperationContextScope> is created, the current <xref:System.ServiceModel.OperationContext> is stored and the new <xref:System.ServiceModel.OperationContext> becomes the one returned by the <xref:System.ServiceModel.OperationContext.Current%2A> property. When the <xref:System.ServiceModel.OperationContextScope> is disposed, the original <xref:System.ServiceModel.OperationContext> is restored.  \n  \n> [!WARNING]\n>  Do not use the asynchronous \"await\" pattern within a OperationContextScope block. When the continuation occurs, it may run on a different thread and OperationContextScope is thread specific. If you need to call \"await\" for an async call, use it outside of the OperationContextScope block."
  example:
  - "The following example shows how to use the <xref:System.ServiceModel.OperationContextScope> to create a new context in a client application to add a custom header to the outgoing message.  \n  \n [!code-csharp[OperationContextScope#3](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#3)]\n [!code-vb[OperationContextScope#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#3)]"
  syntax:
    content: 'public sealed class OperationContextScope : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContextScope.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)
  commentId: M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)
  id: '#ctor(System.ServiceModel.IContextChannel)'
  parent: System.ServiceModel.OperationContextScope
  langs:
  - csharp
  name: OperationContextScope(IContextChannel)
  nameWithType: OperationContextScope.OperationContextScope(IContextChannel)
  fullName: OperationContextScope.OperationContextScope(IContextChannel)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Initializes a new instance of the <xref href="System.ServiceModel.OperationContextScope"></xref> class that uses the specified <xref href="System.ServiceModel.IContextChannel"></xref> to create a new <xref href="System.ServiceModel.OperationContext"></xref> for the scope.
  remarks: "Use the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor to create a new <xref:System.ServiceModel.OperationContext> for a client channel that can be used to add or modify outbound message headers, read incoming message headers, or access other run-time properties of the <xref:System.ServiceModel.OperationContext>.  \n  \n The headers added to the <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A?displayProperty=fullName> property of the newly created <xref:System.ServiceModel.OperationContext> apply only to the channel that was passed to the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor. If the user creates a new channel within its scope then the headers are not applied to messages sent on the new channel."
  example:
  - "The following example shows how to use the <xref:System.ServiceModel.OperationContextScope> to create a new context in a client application in order to add a custom header to the outgoing message.  \n  \n [!code-csharp[OperationContextScope#4](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#4)]\n [!code-vb[OperationContextScope#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#4)]"
  syntax:
    content: public OperationContextScope (System.ServiceModel.IContextChannel channel);
    parameters:
    - id: channel
      type: System.ServiceModel.IContextChannel
      description: The channel to use when creating the scope for a new <xref href="System.ServiceModel.OperationContext"></xref>.
  overload: System.ServiceModel.OperationContextScope.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContextScope.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)
  commentId: M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)
  id: '#ctor(System.ServiceModel.OperationContext)'
  parent: System.ServiceModel.OperationContextScope
  langs:
  - csharp
  name: OperationContextScope(OperationContext)
  nameWithType: OperationContextScope.OperationContextScope(OperationContext)
  fullName: OperationContextScope.OperationContextScope(OperationContext)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Initializes a new instance of the <xref href="System.ServiceModel.OperationContextScope"></xref> class to create a scope for the specified <xref href="System.ServiceModel.OperationContext"></xref> object.
  remarks: Use the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor to create a code block within which the specified <xref:System.ServiceModel.OperationContextScope> object is the current scope.
  syntax:
    content: public OperationContextScope (System.ServiceModel.OperationContext context);
    parameters:
    - id: context
      type: System.ServiceModel.OperationContext
      description: The active <xref href="System.ServiceModel.OperationContext"></xref> in the created scope.
  overload: System.ServiceModel.OperationContextScope.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContextScope.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.OperationContextScope.Dispose
  commentId: M:System.ServiceModel.OperationContextScope.Dispose
  id: Dispose
  parent: System.ServiceModel.OperationContextScope
  langs:
  - csharp
  name: Dispose()
  nameWithType: OperationContextScope.Dispose()
  fullName: OperationContextScope.Dispose()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Restores the original <xref href="System.ServiceModel.OperationContext"></xref> to the active context and recycles the <xref href="System.ServiceModel.OperationContextScope"></xref> object.
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ServiceModel.OperationContextScope.Dispose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContextScope.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)
  parent: System.ServiceModel.OperationContextScope
  isExternal: false
  name: OperationContextScope(IContextChannel)
  nameWithType: OperationContextScope.OperationContextScope(IContextChannel)
  fullName: OperationContextScope.OperationContextScope(IContextChannel)
- uid: System.ServiceModel.IContextChannel
  parent: System.ServiceModel
  isExternal: false
  name: IContextChannel
  nameWithType: IContextChannel
  fullName: System.ServiceModel.IContextChannel
- uid: System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)
  parent: System.ServiceModel.OperationContextScope
  isExternal: false
  name: OperationContextScope(OperationContext)
  nameWithType: OperationContextScope.OperationContextScope(OperationContext)
  fullName: OperationContextScope.OperationContextScope(OperationContext)
- uid: System.ServiceModel.OperationContext
  parent: System.ServiceModel
  isExternal: false
  name: OperationContext
  nameWithType: OperationContext
  fullName: System.ServiceModel.OperationContext
- uid: System.ServiceModel.OperationContextScope.Dispose
  parent: System.ServiceModel.OperationContextScope
  isExternal: false
  name: Dispose()
  nameWithType: OperationContextScope.Dispose()
  fullName: OperationContextScope.Dispose()
- uid: System.ServiceModel.OperationContextScope.#ctor*
  parent: System.ServiceModel.OperationContextScope
  isExternal: false
  name: OperationContextScope
  nameWithType: OperationContextScope.OperationContextScope
  fullName: OperationContextScope.OperationContextScope
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContextScope.xml
- uid: System.ServiceModel.OperationContextScope.Dispose*
  parent: System.ServiceModel.OperationContextScope
  isExternal: false
  name: Dispose
  nameWithType: OperationContextScope.Dispose
  fullName: OperationContextScope.Dispose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/OperationContextScope.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
