{"nodes":[{"content":"Abstract class that provides animation support.","nodes":[{"pos":[0,47],"content":"Abstract class that provides animation support.","nodes":[{"content":"Abstract class that provides animation support.","pos":[0,47]}]}],"pos":[1535,1583],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.Animatable\"></xref> class.","nodes":[{"pos":[0,103],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Animatable\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.Animatable\"></xref> class."}],"pos":[7547,7651],"yaml":true},{"content":"Applies an <xref href=\"System.Windows.Media.Animation.AnimationClock\"></xref> to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>. If the property is already animated, the <xref href=\"System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace\"></xref> handoff behavior is used.","nodes":[{"pos":[0,304],"content":"Applies an <xref href=\"System.Windows.Media.Animation.AnimationClock\"></xref> to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>. If the property is already animated, the <xref href=\"System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace\"></xref> handoff behavior is used.","nodes":[{"content":"Applies an <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.AnimationClock\"&gt;&lt;/xref&gt;</ph> to the specified <ph id=\"ph2\">&lt;xref href=\"System.Windows.DependencyProperty\"&gt;&lt;/xref&gt;</ph>.","pos":[0,150],"source":"Applies an <xref href=\"System.Windows.Media.Animation.AnimationClock\"></xref> to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>."},{"content":"If the property is already animated, the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace\"&gt;&lt;/xref&gt;</ph> handoff behavior is used.","pos":[151,304],"source":" If the property is already animated, the <xref href=\"System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace\"></xref> handoff behavior is used."}]}],"pos":[9150,9455],"yaml":true},{"content":"Note that using this method to removing clocks from a property does not stop those clocks.","nodes":[{"pos":[0,90],"content":"Note that using this method to removing clocks from a property does not stop those clocks.","nodes":[{"content":"Note that using this method to removing clocks from a property does not stop those clocks.","pos":[0,90]}]}],"pos":[9466,9557],"yaml":true,"extradata":"MT"},{"content":"The property to animate.","nodes":[{"pos":[0,24],"content":"The property to animate.","nodes":[{"content":"The property to animate.","pos":[0,24]}]}],"pos":[9799,9824],"yaml":true},{"content":"The clock with which to animate the specified property. If <code>clock</code> is `null`, all animations will be removed from the specified property (but not stopped).","nodes":[{"pos":[0,166],"content":"The clock with which to animate the specified property. If <code>clock</code> is `null`, all animations will be removed from the specified property (but not stopped).","nodes":[{"content":"The clock with which to animate the specified property.","pos":[0,55]},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">clock</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>, all animations will be removed from the specified property (but not stopped).","pos":[56,166],"source":" If <code>clock</code> is `null`, all animations will be removed from the specified property (but not stopped)."}]}],"pos":[9917,10084],"yaml":true},{"content":"Applies an <xref href=\"System.Windows.Media.Animation.AnimationClock\"></xref> to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>. If the property is already animated, the specified <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> is used.","nodes":[{"pos":[0,278],"content":"Applies an <xref href=\"System.Windows.Media.Animation.AnimationClock\"></xref> to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>. If the property is already animated, the specified <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> is used.","nodes":[{"content":"Applies an <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.AnimationClock\"&gt;&lt;/xref&gt;</ph> to the specified <ph id=\"ph2\">&lt;xref href=\"System.Windows.DependencyProperty\"&gt;&lt;/xref&gt;</ph>.","pos":[0,150],"source":"Applies an <xref href=\"System.Windows.Media.Animation.AnimationClock\"></xref> to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>."},{"content":"If the property is already animated, the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.HandoffBehavior\"&gt;&lt;/xref&gt;</ph> is used.","pos":[151,278],"source":" If the property is already animated, the specified <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> is used."}]}],"pos":[11722,12001],"yaml":true},{"content":"Note that using this method to remove clocks from a property does not stop those clocks.  \n  \n## Using the Compose HandoffBehavior  \n When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.  \n  \n To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.  \n  \n-   To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This will remove all animation clocks from the property.  \n  \n-   To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock will return `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be called if the effective duration of the clock is forever.  In that case, the user will need to determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  \n  \n This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks will also be disconnected and garbage collected.  \n  \n For more information about clock objects, see the [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).","nodes":[{"pos":[0,88],"content":"Note that using this method to remove clocks from a property does not stop those clocks.","nodes":[{"content":"Note that using this method to remove clocks from a property does not stop those clocks.","pos":[0,88]}]},{"pos":[97,130],"content":"Using the Compose HandoffBehavior","linkify":"Using the Compose HandoffBehavior","nodes":[{"content":"Using the Compose HandoffBehavior","pos":[0,33]}]},{"pos":[134,651],"content":"When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.","nodes":[{"content":"When you apply a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to a property using the <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id=\"ph5\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, any <ph id=\"ph6\">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.","pos":[0,517],"source":"When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically."}]},{"pos":[658,919],"content":"To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.","nodes":[{"content":"To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.","pos":[0,261],"nodes":[{"content":"To avoid performance issues when you apply a large number of clocks using <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, you should remove composing clocks from the animated property after they complete.","pos":[0,219],"source":"To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete."},{"content":"There are several ways to remove a clock.","pos":[220,261]}]}]},{"pos":[929,1461],"content":"To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This will remove all animation clocks from the property.","nodes":[{"content":"To remove all clocks from a property, use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> method of the animated object.","pos":[0,389],"source":"To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object."},{"content":"Specify the property being animated as the first parameter, and <ph id=\"ph1\">`null`</ph> as the second.","pos":[390,475],"source":" Specify the property being animated as the first parameter, and `null` as the second."},{"content":"This will remove all animation clocks from the property.","pos":[476,532]}]},{"pos":[1471,2516],"content":"To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock will return `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be called if the effective duration of the clock is forever.  In that case, the user will need to determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.","nodes":[{"content":"To remove a specific <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> from a list of clocks, use the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to retrieve a <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, then call the <ph id=\"ph5\">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> method of the <ph id=\"ph6\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.","pos":[0,447],"source":"To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>."},{"content":"This is typically done in the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event handler for a clock.","pos":[448,558],"source":" This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock."},{"content":"Note that only root clocks can be controlled by a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of a child clock will return <ph id=\"ph3\">`null`</ph>.","pos":[559,771],"source":" Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock will return `null`."},{"content":"Note also that the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event will not be called if the effective duration of the clock is forever.","pos":[772,920],"source":" Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be called if the effective duration of the clock is forever."},{"content":"In that case, the user will need to determine when to call <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.","pos":[922,1045],"source":"  In that case, the user will need to determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>."}]},{"pos":[2523,2700],"content":"This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks will also be disconnected and garbage collected.","nodes":[{"content":"This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks will also be disconnected and garbage collected.","pos":[0,177],"nodes":[{"content":"This is primarily an issue for animations on objects that have a long lifetime.","pos":[0,79]},{"content":"When an object is garbage collected, its clocks will also be disconnected and garbage collected.","pos":[81,177]}]}]},{"pos":[2707,2878],"content":"For more information about clock objects, see the <bpt id=\"p1\">[</bpt>Animation and Timing System Overview<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.","source":"For more information about clock objects, see the [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)."}],"pos":[12012,14906],"yaml":true,"extradata":"MT"},{"content":"The property to animate.","nodes":[{"pos":[0,24],"content":"The property to animate.","nodes":[{"content":"The property to animate.","pos":[0,24]}]}],"pos":[15365,15390],"yaml":true},{"content":"The clock with which to animate the specified property. If <code>handoffBehavior</code> is <xref href=\"System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace\"></xref> and <code>clock</code> is `null`, all animations will be removed from the specified property (but not stopped). If <code>handoffBehavior</code> is <xref href=\"System.Windows.Media.Animation.HandoffBehavior.Compose\"></xref> and clock is `null`, this method has no effect.","nodes":[{"pos":[0,448],"content":"The clock with which to animate the specified property. If <code>handoffBehavior</code> is <xref href=\"System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace\"></xref> and <code>clock</code> is `null`, all animations will be removed from the specified property (but not stopped). If <code>handoffBehavior</code> is <xref href=\"System.Windows.Media.Animation.HandoffBehavior.Compose\"></xref> and clock is `null`, this method has no effect.","nodes":[{"content":"The clock with which to animate the specified property.","pos":[0,55]},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">handoffBehavior</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace\"&gt;&lt;/xref&gt;</ph> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">clock</ph><ept id=\"p2\">&lt;/code&gt;</ept> is <ph id=\"ph4\">`null`</ph>, all animations will be removed from the specified property (but not stopped).","pos":[56,289],"source":" If <code>handoffBehavior</code> is <xref href=\"System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace\"></xref> and <code>clock</code> is `null`, all animations will be removed from the specified property (but not stopped)."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">handoffBehavior</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.HandoffBehavior.Compose\"&gt;&lt;/xref&gt;</ph> and clock is <ph id=\"ph3\">`null`</ph>, this method has no effect.","pos":[290,448],"source":" If <code>handoffBehavior</code> is <xref href=\"System.Windows.Media.Animation.HandoffBehavior.Compose\"></xref> and clock is `null`, this method has no effect."}]}],"pos":[15483,15932],"yaml":true},{"content":"A value that specifies how the new animation should interact with any current animations already affecting the property value.","nodes":[{"pos":[0,126],"content":"A value that specifies how the new animation should interact with any current animations already affecting the property value.","nodes":[{"content":"A value that specifies how the new animation should interact with any current animations already affecting the property value.","pos":[0,126]}]}],"pos":[16036,16163],"yaml":true},{"content":"Applies an animation to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>. The animation is started when the next frame is rendered. If the specified property is already animated, the <xref href=\"System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace\"></xref> handoff behavior is used.","nodes":[{"pos":[0,315],"content":"Applies an animation to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>. The animation is started when the next frame is rendered. If the specified property is already animated, the <xref href=\"System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace\"></xref> handoff behavior is used.","nodes":[{"content":"Applies an animation to the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.DependencyProperty\"&gt;&lt;/xref&gt;</ph>.","pos":[0,93],"source":"Applies an animation to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>."},{"content":"The animation is started when the next frame is rendered.","pos":[94,151]},{"content":"If the specified property is already animated, the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace\"&gt;&lt;/xref&gt;</ph> handoff behavior is used.","pos":[152,315],"source":" If the specified property is already animated, the <xref href=\"System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace\"></xref> handoff behavior is used."}]}],"pos":[17597,17913],"yaml":true},{"content":"If the animation has a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.","nodes":[{"pos":[0,210],"content":"If the animation has a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.","nodes":[{"content":"If the animation has a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.","pos":[0,210],"source":"If the animation has a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered."}]}],"pos":[17924,18135],"yaml":true,"extradata":"MT"},{"content":"The property to animate.","nodes":[{"pos":[0,24],"content":"The property to animate.","nodes":[{"content":"The property to animate.","pos":[0,24]}]}],"pos":[18379,18404],"yaml":true},{"content":"The animation used to animate the specified property.  \n  \n If the animation's <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref> is `null`, any current animations will be removed and the current value of the property will be held.  \n  \n If <code>animation</code> is `null`, all animations will be removed from the property and the property value will revert back to its base value.","nodes":[{"pos":[0,53],"content":"The animation used to animate the specified property.","nodes":[{"content":"The animation used to animate the specified property.","pos":[0,53]}]},{"pos":[60,251],"content":"If the animation's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`null`</ph>, any current animations will be removed and the current value of the property will be held.","source":"If the animation's <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref> is `null`, any current animations will be removed and the current value of the property will be held."},{"pos":[258,402],"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">animation</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>, all animations will be removed from the property and the property value will revert back to its base value.","source":"If <code>animation</code> is `null`, all animations will be removed from the property and the property value will revert back to its base value."}],"pos":[18504,18915],"yaml":true},{"content":"Applies an animation to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>. The animation is started when the next frame is rendered. If the specified property is already animated, the specified <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> is used.","nodes":[{"pos":[0,289],"content":"Applies an animation to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>. The animation is started when the next frame is rendered. If the specified property is already animated, the specified <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> is used.","nodes":[{"content":"Applies an animation to the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.DependencyProperty\"&gt;&lt;/xref&gt;</ph>.","pos":[0,93],"source":"Applies an animation to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>."},{"content":"The animation is started when the next frame is rendered.","pos":[94,151]},{"content":"If the specified property is already animated, the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.HandoffBehavior\"&gt;&lt;/xref&gt;</ph> is used.","pos":[152,289],"source":" If the specified property is already animated, the specified <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> is used."}]}],"pos":[20536,20826],"yaml":true},{"content":"If the animation has a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.  \n  \n## Using the Compose HandoffBehavior  \n When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.  \n  \n To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.  \n  \n-   To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This will remove all animation clocks from the property.  \n  \n-   To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock will return `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be called if the effective duration of the clock is forever.  In that case, the user will need to determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  \n  \n This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks will also be disconnected and garbage collected.  \n  \n For more information about clock objects, see the [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).","nodes":[{"pos":[0,210],"content":"If the animation has a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.","nodes":[{"content":"If the animation has a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.","pos":[0,210],"source":"If the animation has a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered."}]},{"pos":[219,252],"content":"Using the Compose HandoffBehavior","linkify":"Using the Compose HandoffBehavior","nodes":[{"content":"Using the Compose HandoffBehavior","pos":[0,33]}]},{"pos":[256,773],"content":"When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.","nodes":[{"content":"When you apply a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to a property using the <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id=\"ph5\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, any <ph id=\"ph6\">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.","pos":[0,517],"source":"When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically."}]},{"pos":[780,1041],"content":"To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.","nodes":[{"content":"To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.","pos":[0,261],"nodes":[{"content":"To avoid performance issues when you apply a large number of clocks using <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, you should remove composing clocks from the animated property after they complete.","pos":[0,219],"source":"To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete."},{"content":"There are several ways to remove a clock.","pos":[220,261]}]}]},{"pos":[1051,1583],"content":"To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This will remove all animation clocks from the property.","nodes":[{"content":"To remove all clocks from a property, use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> method of the animated object.","pos":[0,389],"source":"To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object."},{"content":"Specify the property being animated as the first parameter, and <ph id=\"ph1\">`null`</ph> as the second.","pos":[390,475],"source":" Specify the property being animated as the first parameter, and `null` as the second."},{"content":"This will remove all animation clocks from the property.","pos":[476,532]}]},{"pos":[1593,2638],"content":"To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock will return `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be called if the effective duration of the clock is forever.  In that case, the user will need to determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.","nodes":[{"content":"To remove a specific <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> from a list of clocks, use the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to retrieve a <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, then call the <ph id=\"ph5\">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> method of the <ph id=\"ph6\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.","pos":[0,447],"source":"To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>."},{"content":"This is typically done in the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event handler for a clock.","pos":[448,558],"source":" This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock."},{"content":"Note that only root clocks can be controlled by a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of a child clock will return <ph id=\"ph3\">`null`</ph>.","pos":[559,771],"source":" Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock will return `null`."},{"content":"Note also that the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event will not be called if the effective duration of the clock is forever.","pos":[772,920],"source":" Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be called if the effective duration of the clock is forever."},{"content":"In that case, the user will need to determine when to call <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.","pos":[922,1045],"source":"  In that case, the user will need to determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>."}]},{"pos":[2645,2822],"content":"This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks will also be disconnected and garbage collected.","nodes":[{"content":"This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks will also be disconnected and garbage collected.","pos":[0,177],"nodes":[{"content":"This is primarily an issue for animations on objects that have a long lifetime.","pos":[0,79]},{"content":"When an object is garbage collected, its clocks will also be disconnected and garbage collected.","pos":[81,177]}]}]},{"pos":[2829,3000],"content":"For more information about clock objects, see the <bpt id=\"p1\">[</bpt>Animation and Timing System Overview<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.","source":"For more information about clock objects, see the [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)."}],"pos":[20837,23853],"yaml":true,"extradata":"MT"},{"content":"The property to animate.","nodes":[{"pos":[0,24],"content":"The property to animate.","nodes":[{"content":"The property to animate.","pos":[0,24]}]}],"pos":[24902,24927],"yaml":true},{"content":"The animation used to animate the specified property.  \n  \n If <code>handoffBehavior</code> is <xref href=\"System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace\"></xref> and the animation's <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref> is `null`, any current animations will be removed and the current value of the property will be held.  \n  \n If <code>handoffBehavior</code> is <xref href=\"System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace\"></xref> and <code>animation</code> is a `null` reference, all animations will be removed from the property and the property value will revert back to its base value.  \n  \n If <code>handoffBehavior</code> is <xref href=\"System.Windows.Media.Animation.HandoffBehavior.Compose\"></xref>, this method will have no effect if the animation or its <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref> is `null`.","nodes":[{"pos":[0,53],"content":"The animation used to animate the specified property.","nodes":[{"content":"The animation used to animate the specified property.","pos":[0,53]}]},{"pos":[60,374],"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">handoffBehavior</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace\"&gt;&lt;/xref&gt;</ph> and the animation's <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph4\">`null`</ph>, any current animations will be removed and the current value of the property will be held.","source":"If <code>handoffBehavior</code> is <xref href=\"System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace\"></xref> and the animation's <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref> is `null`, any current animations will be removed and the current value of the property will be held."},{"pos":[381,660],"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">handoffBehavior</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace\"&gt;&lt;/xref&gt;</ph> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">animation</ph><ept id=\"p2\">&lt;/code&gt;</ept> is a <ph id=\"ph4\">`null`</ph> reference, all animations will be removed from the property and the property value will revert back to its base value.","source":"If <code>handoffBehavior</code> is <xref href=\"System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace\"></xref> and <code>animation</code> is a `null` reference, all animations will be removed from the property and the property value will revert back to its base value."},{"pos":[667,916],"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">handoffBehavior</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.HandoffBehavior.Compose\"&gt;&lt;/xref&gt;</ph>, this method will have no effect if the animation or its <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph4\">`null`</ph>.","source":"If <code>handoffBehavior</code> is <xref href=\"System.Windows.Media.Animation.HandoffBehavior.Compose\"></xref>, this method will have no effect if the animation or its <xref href=\"System.Windows.Media.Animation.Timeline.BeginTime\"></xref> is `null`."}],"pos":[25027,25962],"yaml":true},{"content":"A value that specifies how the new animation should interact with any current animations already affecting the property value.","nodes":[{"pos":[0,126],"content":"A value that specifies how the new animation should interact with any current animations already affecting the property value.","nodes":[{"content":"A value that specifies how the new animation should interact with any current animations already affecting the property value.","pos":[0,126]}]}],"pos":[26066,26193],"yaml":true},{"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.Animatable\"></xref>, making deep copies of this object's values. When copying this object's dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","nodes":[{"pos":[0,328],"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.Animatable\"></xref>, making deep copies of this object's values. When copying this object's dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","nodes":[{"content":"Creates a modifiable clone of this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Animatable\"&gt;&lt;/xref&gt;</ph>, making deep copies of this object's values.","pos":[0,142],"source":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.Animatable\"></xref>, making deep copies of this object's values."},{"content":"When copying this object's dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","pos":[143,328]}]}],"pos":[27205,27534],"yaml":true},{"content":"The <xref:System.Windows.Media.Animation.Animatable.Clone%2A> method can be used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects. For convenience, this method shadows the inherited <xref:System.Windows.Freezable.Clone%2A> method to provide a strongly typed implementation.","nodes":[{"pos":[0,303],"content":"The <xref:System.Windows.Media.Animation.Animatable.Clone%2A> method can be used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects. For convenience, this method shadows the inherited <xref:System.Windows.Freezable.Clone%2A> method to provide a strongly typed implementation.","nodes":[{"content":"The <xref:System.Windows.Media.Animation.Animatable.Clone%2A> method can be used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects. For convenience, this method shadows the inherited <xref:System.Windows.Freezable.Clone%2A> method to provide a strongly typed implementation.","pos":[0,303],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Animatable.Clone%2A&gt;</ph> method can be used to produce modifiable copies of frozen <ph id=\"ph2\">&lt;xref:System.Windows.Freezable&gt;</ph> objects.","pos":[0,160],"source":"The <xref:System.Windows.Media.Animation.Animatable.Clone%2A> method can be used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects."},{"content":"For convenience, this method shadows the inherited <ph id=\"ph1\">&lt;xref:System.Windows.Freezable.Clone%2A&gt;</ph> method to provide a strongly typed implementation.","pos":[161,303],"source":" For convenience, this method shadows the inherited <xref:System.Windows.Freezable.Clone%2A> method to provide a strongly typed implementation."}]}]}],"pos":[27545,27849],"yaml":true,"extradata":"MT"},{"content":"A modifiable clone of this instance. The returned clone is effectively a deep copy of the current object. The clone's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is **false**.","nodes":[{"pos":[0,195],"content":"A modifiable clone of this instance. The returned clone is effectively a deep copy of the current object. The clone's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is **false**.","nodes":[{"content":"A modifiable clone of this instance.","pos":[0,36]},{"content":"The returned clone is effectively a deep copy of the current object.","pos":[37,105]},{"content":"The clone's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property is <bpt id=\"p1\">**</bpt>false<ept id=\"p1\">**</ept>.","pos":[106,195],"source":" The clone's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is **false**."}]}],"pos":[28035,28231],"yaml":true},{"content":"Makes this <xref href=\"System.Windows.Media.Animation.Animatable\"></xref> object unmodifiable or determines whether it can be made unmodifiable.","nodes":[{"pos":[0,144],"content":"Makes this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.Animatable\"&gt;&lt;/xref&gt;</ph> object unmodifiable or determines whether it can be made unmodifiable.","source":"Makes this <xref href=\"System.Windows.Media.Animation.Animatable\"></xref> object unmodifiable or determines whether it can be made unmodifiable."}],"pos":[29333,29478],"yaml":true},{"content":"This method will return **false** when <xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A> is **true**.  \n  \n Do not call this method directly (except when calling base in an implementation). This method is called internally by <xref:System.Windows.Freezable.CanFreeze%2A> (with `isChecking` equal to `true`) and  <xref:System.Windows.Freezable.Freeze%2A> (with `isChecking` equal to `false`).","nodes":[{"pos":[0,125],"content":"This method will return <bpt id=\"p1\">**</bpt>false<ept id=\"p1\">**</ept> when <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A&gt;</ph> is <bpt id=\"p2\">**</bpt>true<ept id=\"p2\">**</ept>.","source":"This method will return **false** when <xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A> is **true**."},{"pos":[132,415],"content":"Do not call this method directly (except when calling base in an implementation). This method is called internally by <xref:System.Windows.Freezable.CanFreeze%2A> (with `isChecking` equal to `true`) and  <xref:System.Windows.Freezable.Freeze%2A> (with `isChecking` equal to `false`).","nodes":[{"content":"Do not call this method directly (except when calling base in an implementation).","pos":[0,81]},{"content":"This method is called internally by <ph id=\"ph1\">&lt;xref:System.Windows.Freezable.CanFreeze%2A&gt;</ph> (with <ph id=\"ph2\">`isChecking`</ph> equal to <ph id=\"ph3\">`true`</ph>) and  <ph id=\"ph4\">&lt;xref:System.Windows.Freezable.Freeze%2A&gt;</ph> (with <ph id=\"ph5\">`isChecking`</ph> equal to <ph id=\"ph6\">`false`</ph>).","pos":[82,283],"source":" This method is called internally by <xref:System.Windows.Freezable.CanFreeze%2A> (with `isChecking` equal to `true`) and  <xref:System.Windows.Freezable.Freeze%2A> (with `isChecking` equal to `false`)."}]}],"pos":[29489,29909],"yaml":true,"extradata":"MT"},{"content":"`true` if this method should simply determine whether this instance can be frozen. `false` if this instance should actually freeze itself when this method is called.","nodes":[{"pos":[0,165],"content":"`true` if this method should simply determine whether this instance can be frozen. `false` if this instance should actually freeze itself when this method is called.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if this method should simply determine whether this instance can be frozen.","pos":[0,82],"source":"`true` if this method should simply determine whether this instance can be frozen."},{"content":"<ph id=\"ph1\">`false`</ph> if this instance should actually freeze itself when this method is called.","pos":[83,165],"source":"`false` if this instance should actually freeze itself when this method is called."}]}],"pos":[30069,30237],"yaml":true},{"content":"If <code>isChecking</code> is `true`, this method returns `true` if this <xref href=\"System.Windows.Media.Animation.Animatable\"></xref> can be made unmodifiable, or `false` if it cannot be made unmodifiable.  \n  \n If <code>isChecking</code> is `false`, this method returns `true` if the if this <xref href=\"System.Windows.Media.Animation.Animatable\"></xref> is now unmodifiable, or `false` if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.","nodes":[{"pos":[0,207],"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">isChecking</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`true`</ph>, this method returns <ph id=\"ph3\">`true`</ph> if this <ph id=\"ph4\">&lt;xref href=\"System.Windows.Media.Animation.Animatable\"&gt;&lt;/xref&gt;</ph> can be made unmodifiable, or <ph id=\"ph5\">`false`</ph> if it cannot be made unmodifiable.","source":"If <code>isChecking</code> is `true`, this method returns `true` if this <xref href=\"System.Windows.Media.Animation.Animatable\"></xref> can be made unmodifiable, or `false` if it cannot be made unmodifiable."},{"pos":[214,505],"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">isChecking</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`false`</ph>, this method returns <ph id=\"ph3\">`true`</ph> if the if this <ph id=\"ph4\">&lt;xref href=\"System.Windows.Media.Animation.Animatable\"&gt;&lt;/xref&gt;</ph> is now unmodifiable, or <ph id=\"ph5\">`false`</ph> if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.","source":"If <code>isChecking</code> is `false`, this method returns `true` if the if this <xref href=\"System.Windows.Media.Animation.Animatable\"></xref> is now unmodifiable, or `false` if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object."}],"pos":[30295,30809],"yaml":true},{"content":"Returns the non-animated value of the specified <xref href=\"System.Windows.DependencyProperty\"></xref>.","nodes":[{"pos":[0,103],"content":"Returns the non-animated value of the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.DependencyProperty\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the non-animated value of the specified <xref href=\"System.Windows.DependencyProperty\"></xref>."}],"pos":[32072,32176],"yaml":true},{"content":"If the specified property is not animated, this method returns the same result as <xref:System.Windows.DependencyObject.GetValue%2A>.","nodes":[{"pos":[0,133],"content":"If the specified property is not animated, this method returns the same result as <xref:System.Windows.DependencyObject.GetValue%2A>.","nodes":[{"content":"If the specified property is not animated, this method returns the same result as <ph id=\"ph1\">&lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;</ph>.","pos":[0,133],"source":"If the specified property is not animated, this method returns the same result as <xref:System.Windows.DependencyObject.GetValue%2A>."}]}],"pos":[32187,32321],"yaml":true,"extradata":"MT"},{"content":"Identifies the property whose base (non-animated) value should be retrieved.","nodes":[{"pos":[0,76],"content":"Identifies the property whose base (non-animated) value should be retrieved.","nodes":[{"content":"Identifies the property whose base (non-animated) value should be retrieved.","pos":[0,76]}]}],"pos":[33125,33202],"yaml":true},{"content":"The value that would be returned if the specified property were not animated.","nodes":[{"pos":[0,77],"content":"The value that would be returned if the specified property were not animated.","nodes":[{"content":"The value that would be returned if the specified property were not animated.","pos":[0,77]}]}],"pos":[33259,33337],"yaml":true},{"content":"Gets a value that indicates whether one or more <xref href=\"System.Windows.Media.Animation.AnimationClock\"></xref> objects is associated with any of this object's dependency properties.","nodes":[{"pos":[0,185],"content":"Gets a value that indicates whether one or more <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.AnimationClock\"&gt;&lt;/xref&gt;</ph> objects is associated with any of this object's dependency properties.","source":"Gets a value that indicates whether one or more <xref href=\"System.Windows.Media.Animation.AnimationClock\"></xref> objects is associated with any of this object's dependency properties."}],"pos":[34448,34634],"yaml":true},{"content":"This property does not indicate whether this object contains animated sub-objects.","nodes":[{"pos":[0,82],"content":"This property does not indicate whether this object contains animated sub-objects.","nodes":[{"content":"This property does not indicate whether this object contains animated sub-objects.","pos":[0,82]}]}],"pos":[34645,34728],"yaml":true,"extradata":"MT"},{"content":"**true** if one or more <xref href=\"System.Windows.Media.Animation.AnimationClock\"></xref> objects is associated with any of this object's dependency properties; otherwise, **false**.","nodes":[{"pos":[0,183],"content":"<bpt id=\"p1\">**</bpt>true<ept id=\"p1\">**</ept> if one or more <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.AnimationClock\"&gt;&lt;/xref&gt;</ph> objects is associated with any of this object's dependency properties; otherwise, <bpt id=\"p2\">**</bpt>false<ept id=\"p2\">**</ept>.","source":"**true** if one or more <xref href=\"System.Windows.Media.Animation.AnimationClock\"></xref> objects is associated with any of this object's dependency properties; otherwise, **false**."}],"pos":[34852,35040],"yaml":true},{"content":"Specifies whether a dependency object should be serialized.","nodes":[{"pos":[0,59],"content":"Specifies whether a dependency object should be serialized.","nodes":[{"content":"Specifies whether a dependency object should be serialized.","pos":[0,59]}]}],"pos":[36380,36440],"yaml":true},{"content":"The <xref:System.ComponentModel.TypeDescriptor> class uses the <xref:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference%2A> method to determine if a property should be serialized.","nodes":[{"pos":[0,205],"content":"The <xref:System.ComponentModel.TypeDescriptor> class uses the <xref:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference%2A> method to determine if a property should be serialized.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class uses the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference%2A&gt;</ph> method to determine if a property should be serialized.","pos":[0,205],"source":"The <xref:System.ComponentModel.TypeDescriptor> class uses the <xref:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference%2A> method to determine if a property should be serialized."}]}],"pos":[36451,36657],"yaml":true,"extradata":"MT"},{"content":"Represents an object that participates in the dependency property system.","nodes":[{"pos":[0,73],"content":"Represents an object that participates in the dependency property system.","nodes":[{"content":"Represents an object that participates in the dependency property system.","pos":[0,73]}]}],"pos":[36872,36946],"yaml":true},{"content":"`true` to serialize <code>target</code>; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,84],"content":"`true` to serialize <code>target</code>; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to serialize <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,60],"source":"`true` to serialize <code>target</code>; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[61,84],"source":" The default is `false`."}]}],"pos":[37004,37091],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Animation.Animatable\n  commentId: T:System.Windows.Media.Animation.Animatable\n  id: Animatable\n  children:\n  - System.Windows.Media.Animation.Animatable.#ctor\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.Clone\n  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  langs:\n  - csharp\n  name: Animatable\n  nameWithType: Animatable\n  fullName: System.Windows.Media.Animation.Animatable\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Abstract class that provides animation support.\n  syntax:\n    content: 'public abstract class Animatable : System.Windows.Freezable, System.Windows.Media.Animation.IAnimatable'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Freezable\n  derivedClasses:\n  - System.Windows.FreezableCollection`1\n  - System.Windows.TextDecoration\n  - System.Windows.TextDecorationCollection\n  - System.Windows.Media.Brush\n  - System.Windows.Media.CacheMode\n  - System.Windows.Media.DashStyle\n  - System.Windows.Media.Drawing\n  - System.Windows.Media.DrawingCollection\n  - System.Windows.Media.GeneralTransform\n  - System.Windows.Media.GeneralTransformCollection\n  - System.Windows.Media.Geometry\n  - System.Windows.Media.GeometryCollection\n  - System.Windows.Media.GradientStop\n  - System.Windows.Media.GradientStopCollection\n  - System.Windows.Media.GuidelineSet\n  - System.Windows.Media.ImageSource\n  - System.Windows.Media.MediaPlayer\n  - System.Windows.Media.PathFigure\n  - System.Windows.Media.PathFigureCollection\n  - System.Windows.Media.PathSegment\n  - System.Windows.Media.PathSegmentCollection\n  - System.Windows.Media.Pen\n  - System.Windows.Media.TextEffect\n  - System.Windows.Media.TextEffectCollection\n  - System.Windows.Media.TransformCollection\n  - System.Windows.Media.Animation.Timeline\n  - System.Windows.Media.Animation.TimelineCollection\n  - System.Windows.Media.Effects.BitmapEffect\n  - System.Windows.Media.Effects.BitmapEffectCollection\n  - System.Windows.Media.Effects.BitmapEffectInput\n  - System.Windows.Media.Effects.Effect\n  - System.Windows.Media.Effects.PixelShader\n  - System.Windows.Media.Media3D.Camera\n  - System.Windows.Media.Media3D.GeneralTransform3D\n  - System.Windows.Media.Media3D.GeneralTransform3DCollection\n  - System.Windows.Media.Media3D.Geometry3D\n  - System.Windows.Media.Media3D.Material\n  - System.Windows.Media.Media3D.MaterialCollection\n  - System.Windows.Media.Media3D.Model3D\n  - System.Windows.Media.Media3D.Model3DCollection\n  - System.Windows.Media.Media3D.Rotation3D\n  - System.Windows.Media.Media3D.Transform3DCollection\n  implements:\n  - System.Windows.Media.Animation.IAnimatable\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Freezable.CanFreeze\n  - System.Windows.Freezable.Changed\n  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CloneCurrentValue\n  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CreateInstance\n  - System.Windows.Freezable.CreateInstanceCore\n  - System.Windows.Freezable.Freeze\n  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  - System.Windows.Freezable.GetAsFrozen\n  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.GetCurrentValueAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.IsFrozen\n  - System.Windows.Freezable.OnChanged\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Freezable.ReadPreamble\n  - System.Windows.Freezable.WritePostscript\n  - System.Windows.Freezable.WritePreamble\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Animatable.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Animatable.#ctor\n  commentId: M:System.Windows.Media.Animation.Animatable.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.Animation.Animatable\n  langs:\n  - csharp\n  name: Animatable()\n  nameWithType: Animatable.Animatable()\n  fullName: Animatable.Animatable()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.Animatable\"></xref> class.\n  syntax:\n    content: protected Animatable ();\n    parameters: []\n  overload: System.Windows.Media.Animation.Animatable.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Animatable.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  commentId: M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  id: ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  parent: System.Windows.Media.Animation.Animatable\n  langs:\n  - csharp\n  name: ApplyAnimationClock(DependencyProperty, AnimationClock)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock)\n  fullName: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Applies an <xref href=\"System.Windows.Media.Animation.AnimationClock\"></xref> to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>. If the property is already animated, the <xref href=\"System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace\"></xref> handoff behavior is used.\n  remarks: Note that using this method to removing clocks from a property does not stop those clocks.\n  syntax:\n    content: public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);\n    parameters:\n    - id: dp\n      type: System.Windows.DependencyProperty\n      description: The property to animate.\n    - id: clock\n      type: System.Windows.Media.Animation.AnimationClock\n      description: The clock with which to animate the specified property. If <code>clock</code> is `null`, all animations will be removed from the specified property (but not stopped).\n  overload: System.Windows.Media.Animation.Animatable.ApplyAnimationClock*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Animatable.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  commentId: M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  id: ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  langs:\n  - csharp\n  name: ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n  fullName: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Applies an <xref href=\"System.Windows.Media.Animation.AnimationClock\"></xref> to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>. If the property is already animated, the specified <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> is used.\n  remarks: \"Note that using this method to remove clocks from a property does not stop those clocks.  \\n  \\n## Using the Compose HandoffBehavior  \\n When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.  \\n  \\n To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.  \\n  \\n-   To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This will remove all animation clocks from the property.  \\n  \\n-   To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock will return `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be called if the effective duration of the clock is forever.  In that case, the user will need to determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  \\n  \\n This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks will also be disconnected and garbage collected.  \\n  \\n For more information about clock objects, see the [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).\"\n  example:\n  - The following example shows how to apply animation clocks using different <xref:System.Windows.Media.Animation.HandoffBehavior> settings.\n  syntax:\n    content: public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);\n    parameters:\n    - id: dp\n      type: System.Windows.DependencyProperty\n      description: The property to animate.\n    - id: clock\n      type: System.Windows.Media.Animation.AnimationClock\n      description: The clock with which to animate the specified property. If <code>handoffBehavior</code> is <xref href=\"System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace\"></xref> and <code>clock</code> is `null`, all animations will be removed from the specified property (but not stopped). If <code>handoffBehavior</code> is <xref href=\"System.Windows.Media.Animation.HandoffBehavior.Compose\"></xref> and clock is `null`, this method has no effect.\n    - id: handoffBehavior\n      type: System.Windows.Media.Animation.HandoffBehavior\n      description: A value that specifies how the new animation should interact with any current animations already affecting the property value.\n  overload: System.Windows.Media.Animation.Animatable.ApplyAnimationClock*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Animatable.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  commentId: M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  id: BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  parent: System.Windows.Media.Animation.Animatable\n  langs:\n  - csharp\n  name: BeginAnimation(DependencyProperty, AnimationTimeline)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline)\n  fullName: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Applies an animation to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>. The animation is started when the next frame is rendered. If the specified property is already animated, the <xref href=\"System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace\"></xref> handoff behavior is used.\n  remarks: If the animation has a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.\n  syntax:\n    content: public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);\n    parameters:\n    - id: dp\n      type: System.Windows.DependencyProperty\n      description: The property to animate.\n    - id: animation\n      type: System.Windows.Media.Animation.AnimationTimeline\n      description: \"The animation used to animate the specified property.  \\n  \\n If the animation's <xref href=\\\"System.Windows.Media.Animation.Timeline.BeginTime\\\"></xref> is `null`, any current animations will be removed and the current value of the property will be held.  \\n  \\n If <code>animation</code> is `null`, all animations will be removed from the property and the property value will revert back to its base value.\"\n  overload: System.Windows.Media.Animation.Animatable.BeginAnimation*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Animatable.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  commentId: M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  id: BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  langs:\n  - csharp\n  name: BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n  fullName: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Applies an animation to the specified <xref href=\"System.Windows.DependencyProperty\"></xref>. The animation is started when the next frame is rendered. If the specified property is already animated, the specified <xref href=\"System.Windows.Media.Animation.HandoffBehavior\"></xref> is used.\n  remarks: \"If the animation has a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.  \\n  \\n## Using the Compose HandoffBehavior  \\n When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.  \\n  \\n To avoid performance issues when you apply a large number of clocks using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock.  \\n  \\n-   To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This will remove all animation clocks from the property.  \\n  \\n-   To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock will return `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be called if the effective duration of the clock is forever.  In that case, the user will need to determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  \\n  \\n This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks will also be disconnected and garbage collected.  \\n  \\n For more information about clock objects, see the [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).\"\n  example:\n  - \"The following example shows how to apply animations using different <xref:System.Windows.Media.Animation.HandoffBehavior> settings.  \\n  \\n [!code-cpp[animateproperty#InteractiveAnimationExampleWholePage](~/samples/snippets/cpp/VS_Snippets_Wpf/animateproperty/CPP/InteractiveExample.cpp#interactiveanimationexamplewholepage)]\\n [!code-csharp[animateproperty#InteractiveAnimationExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/animateproperty/CSharp/InteractiveExample.cs#interactiveanimationexamplewholepage)]\\n [!code-vb[animateproperty#InteractiveAnimationExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/animateproperty/VisualBasic/InteractiveExample.vb#interactiveanimationexamplewholepage)]\"\n  syntax:\n    content: public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);\n    parameters:\n    - id: dp\n      type: System.Windows.DependencyProperty\n      description: The property to animate.\n    - id: animation\n      type: System.Windows.Media.Animation.AnimationTimeline\n      description: \"The animation used to animate the specified property.  \\n  \\n If <code>handoffBehavior</code> is <xref href=\\\"System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace\\\"></xref> and the animation's <xref href=\\\"System.Windows.Media.Animation.Timeline.BeginTime\\\"></xref> is `null`, any current animations will be removed and the current value of the property will be held.  \\n  \\n If <code>handoffBehavior</code> is <xref href=\\\"System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace\\\"></xref> and <code>animation</code> is a `null` reference, all animations will be removed from the property and the property value will revert back to its base value.  \\n  \\n If <code>handoffBehavior</code> is <xref href=\\\"System.Windows.Media.Animation.HandoffBehavior.Compose\\\"></xref>, this method will have no effect if the animation or its <xref href=\\\"System.Windows.Media.Animation.Timeline.BeginTime\\\"></xref> is `null`.\"\n    - id: handoffBehavior\n      type: System.Windows.Media.Animation.HandoffBehavior\n      description: A value that specifies how the new animation should interact with any current animations already affecting the property value.\n  overload: System.Windows.Media.Animation.Animatable.BeginAnimation*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Animatable.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Animatable.Clone\n  commentId: M:System.Windows.Media.Animation.Animatable.Clone\n  id: Clone\n  parent: System.Windows.Media.Animation.Animatable\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: Animatable.Clone()\n  fullName: Animatable.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.Animatable\"></xref>, making deep copies of this object's values. When copying this object's dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.\n  remarks: The <xref:System.Windows.Media.Animation.Animatable.Clone%2A> method can be used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects. For convenience, this method shadows the inherited <xref:System.Windows.Freezable.Clone%2A> method to provide a strongly typed implementation.\n  syntax:\n    content: public System.Windows.Media.Animation.Animatable Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Animation.Animatable\n      description: A modifiable clone of this instance. The returned clone is effectively a deep copy of the current object. The clone's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is **false**.\n  overload: System.Windows.Media.Animation.Animatable.Clone*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Animatable.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  commentId: M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  id: FreezeCore(System.Boolean)\n  parent: System.Windows.Media.Animation.Animatable\n  langs:\n  - csharp\n  name: FreezeCore(Boolean)\n  nameWithType: Animatable.FreezeCore(Boolean)\n  fullName: Animatable.FreezeCore(Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Makes this <xref href=\"System.Windows.Media.Animation.Animatable\"></xref> object unmodifiable or determines whether it can be made unmodifiable.\n  remarks: \"This method will return **false** when <xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A> is **true**.  \\n  \\n Do not call this method directly (except when calling base in an implementation). This method is called internally by <xref:System.Windows.Freezable.CanFreeze%2A> (with `isChecking` equal to `true`) and  <xref:System.Windows.Freezable.Freeze%2A> (with `isChecking` equal to `false`).\"\n  syntax:\n    content: protected override bool FreezeCore (bool isChecking);\n    parameters:\n    - id: isChecking\n      type: System.Boolean\n      description: '`true` if this method should simply determine whether this instance can be frozen. `false` if this instance should actually freeze itself when this method is called.'\n    return:\n      type: System.Boolean\n      description: \"If <code>isChecking</code> is `true`, this method returns `true` if this <xref href=\\\"System.Windows.Media.Animation.Animatable\\\"></xref> can be made unmodifiable, or `false` if it cannot be made unmodifiable.  \\n  \\n If <code>isChecking</code> is `false`, this method returns `true` if the if this <xref href=\\\"System.Windows.Media.Animation.Animatable\\\"></xref> is now unmodifiable, or `false` if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.\"\n  overload: System.Windows.Media.Animation.Animatable.FreezeCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Animatable.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  commentId: M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  id: GetAnimationBaseValue(System.Windows.DependencyProperty)\n  parent: System.Windows.Media.Animation.Animatable\n  langs:\n  - csharp\n  name: GetAnimationBaseValue(DependencyProperty)\n  nameWithType: Animatable.GetAnimationBaseValue(DependencyProperty)\n  fullName: Animatable.GetAnimationBaseValue(DependencyProperty)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Returns the non-animated value of the specified <xref href=\"System.Windows.DependencyProperty\"></xref>.\n  remarks: If the specified property is not animated, this method returns the same result as <xref:System.Windows.DependencyObject.GetValue%2A>.\n  example:\n  - \"In the following example, the non-animated values of animated properties are retrieved and displayed.  \\n  \\n [!code-csharp[timingbehaviors_procedural_snip#GetAnimationBaseValueExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/GetAnimationBaseValueExample.cs#getanimationbasevalueexamplewholepage)]\\n [!code-vb[timingbehaviors_procedural_snip#GetAnimationBaseValueExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/getanimationbasevalueexample.vb#getanimationbasevalueexamplewholepage)]\"\n  syntax:\n    content: public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);\n    parameters:\n    - id: dp\n      type: System.Windows.DependencyProperty\n      description: Identifies the property whose base (non-animated) value should be retrieved.\n    return:\n      type: System.Object\n      description: The value that would be returned if the specified property were not animated.\n  overload: System.Windows.Media.Animation.Animatable.GetAnimationBaseValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Animatable.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  commentId: P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  id: HasAnimatedProperties\n  parent: System.Windows.Media.Animation.Animatable\n  langs:\n  - csharp\n  name: HasAnimatedProperties\n  nameWithType: Animatable.HasAnimatedProperties\n  fullName: Animatable.HasAnimatedProperties\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets a value that indicates whether one or more <xref href=\"System.Windows.Media.Animation.AnimationClock\"></xref> objects is associated with any of this object's dependency properties.\n  remarks: This property does not indicate whether this object contains animated sub-objects.\n  syntax:\n    content: public bool HasAnimatedProperties { get; }\n    return:\n      type: System.Boolean\n      description: \"**true** if one or more <xref href=\\\"System.Windows.Media.Animation.AnimationClock\\\"></xref> objects is associated with any of this object's dependency properties; otherwise, **false**.\"\n  overload: System.Windows.Media.Animation.Animatable.HasAnimatedProperties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Animatable.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  commentId: M:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  id: ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  parent: System.Windows.Media.Animation.Animatable\n  langs:\n  - csharp\n  name: ShouldSerializeStoredWeakReference(DependencyObject)\n  nameWithType: Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n  fullName: Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Specifies whether a dependency object should be serialized.\n  remarks: The <xref:System.ComponentModel.TypeDescriptor> class uses the <xref:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference%2A> method to determine if a property should be serialized.\n  syntax:\n    content: public static bool ShouldSerializeStoredWeakReference (System.Windows.DependencyObject target);\n    parameters:\n    - id: target\n      type: System.Windows.DependencyObject\n      description: Represents an object that participates in the dependency property system.\n    return:\n      type: System.Boolean\n      description: '`true` to serialize <code>target</code>; otherwise, `false`. The default is `false`.'\n  overload: System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Animatable.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: false\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.Animation.Animatable.#ctor\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: Animatable()\n  nameWithType: Animatable.Animatable()\n  fullName: Animatable.Animatable()\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ApplyAnimationClock(DependencyProperty, AnimationClock)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock)\n  fullName: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock)\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Media.Animation.AnimationClock\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: AnimationClock\n  nameWithType: AnimationClock\n  fullName: System.Windows.Media.Animation.AnimationClock\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n  fullName: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n- uid: System.Windows.Media.Animation.HandoffBehavior\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: HandoffBehavior\n  nameWithType: HandoffBehavior\n  fullName: System.Windows.Media.Animation.HandoffBehavior\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: BeginAnimation(DependencyProperty, AnimationTimeline)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline)\n  fullName: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline)\n- uid: System.Windows.Media.Animation.AnimationTimeline\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: AnimationTimeline\n  nameWithType: AnimationTimeline\n  fullName: System.Windows.Media.Animation.AnimationTimeline\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n  fullName: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n- uid: System.Windows.Media.Animation.Animatable.Clone\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: Clone()\n  nameWithType: Animatable.Clone()\n  fullName: Animatable.Clone()\n- uid: System.Windows.Media.Animation.Animatable\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: Animatable\n  nameWithType: Animatable\n  fullName: System.Windows.Media.Animation.Animatable\n- uid: System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: FreezeCore(Boolean)\n  nameWithType: Animatable.FreezeCore(Boolean)\n  fullName: Animatable.FreezeCore(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: GetAnimationBaseValue(DependencyProperty)\n  nameWithType: Animatable.GetAnimationBaseValue(DependencyProperty)\n  fullName: Animatable.GetAnimationBaseValue(DependencyProperty)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: HasAnimatedProperties\n  nameWithType: Animatable.HasAnimatedProperties\n  fullName: Animatable.HasAnimatedProperties\n- uid: System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ShouldSerializeStoredWeakReference(DependencyObject)\n  nameWithType: Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n  fullName: Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n- uid: System.Windows.DependencyObject\n  parent: System.Windows\n  isExternal: false\n  name: DependencyObject\n  nameWithType: DependencyObject\n  fullName: System.Windows.DependencyObject\n- uid: System.Windows.Media.Animation.Animatable.#ctor*\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: Animatable\n  nameWithType: Animatable.Animatable\n  fullName: Animatable.Animatable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Animatable.xml\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock*\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ApplyAnimationClock\n  nameWithType: Animatable.ApplyAnimationClock\n  fullName: Animatable.ApplyAnimationClock\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Animatable.xml\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation*\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: BeginAnimation\n  nameWithType: Animatable.BeginAnimation\n  fullName: Animatable.BeginAnimation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Animatable.xml\n- uid: System.Windows.Media.Animation.Animatable.Clone*\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: Clone\n  nameWithType: Animatable.Clone\n  fullName: Animatable.Clone\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Animatable.xml\n- uid: System.Windows.Media.Animation.Animatable.FreezeCore*\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: FreezeCore\n  nameWithType: Animatable.FreezeCore\n  fullName: Animatable.FreezeCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Animatable.xml\n- uid: System.Windows.Media.Animation.Animatable.GetAnimationBaseValue*\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: GetAnimationBaseValue\n  nameWithType: Animatable.GetAnimationBaseValue\n  fullName: Animatable.GetAnimationBaseValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Animatable.xml\n- uid: System.Windows.Media.Animation.Animatable.HasAnimatedProperties*\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: HasAnimatedProperties\n  nameWithType: Animatable.HasAnimatedProperties\n  fullName: Animatable.HasAnimatedProperties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Animatable.xml\n- uid: System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference*\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ShouldSerializeStoredWeakReference\n  nameWithType: Animatable.ShouldSerializeStoredWeakReference\n  fullName: Animatable.ShouldSerializeStoredWeakReference\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/Animatable.xml\n- uid: System.Windows.DependencyObject.Equals(System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DependencyObject.Equals(Object)\n  fullName: DependencyObject.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Windows.DependencyObject.GetHashCode\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DependencyObject.GetHashCode()\n  fullName: DependencyObject.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyProperty)\n  nameWithType: DependencyObject.ClearValue(DependencyProperty)\n  fullName: DependencyObject.ClearValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyPropertyKey)\n  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)\n  fullName: DependencyObject.ClearValue(DependencyPropertyKey)\n- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: CoerceValue(DependencyProperty)\n  nameWithType: DependencyObject.CoerceValue(DependencyProperty)\n  fullName: DependencyObject.CoerceValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.DependencyObjectType\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: DependencyObjectType\n  nameWithType: DependencyObject.DependencyObjectType\n  fullName: DependencyObject.DependencyObjectType\n- uid: System.Windows.DependencyObject.GetLocalValueEnumerator\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetLocalValueEnumerator()\n  nameWithType: DependencyObject.GetLocalValueEnumerator()\n  fullName: DependencyObject.GetLocalValueEnumerator()\n- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: InvalidateProperty(DependencyProperty)\n  nameWithType: DependencyObject.InvalidateProperty(DependencyProperty)\n  fullName: DependencyObject.InvalidateProperty(DependencyProperty)\n- uid: System.Windows.DependencyObject.IsSealed\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: IsSealed\n  nameWithType: DependencyObject.IsSealed\n  fullName: DependencyObject.IsSealed\n- uid: System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ReadLocalValue(DependencyProperty)\n  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)\n  fullName: DependencyObject.ReadLocalValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetCurrentValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyPropertyKey, Object)\n  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)\n  fullName: DependencyObject.SetValue(DependencyPropertyKey, Object)\n- uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ShouldSerializeProperty(DependencyProperty)\n  nameWithType: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n  fullName: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n- uid: System.Windows.Freezable.CanFreeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CanFreeze\n  nameWithType: Freezable.CanFreeze\n  fullName: Freezable.CanFreeze\n- uid: System.Windows.Freezable.Changed\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Changed\n  nameWithType: Freezable.Changed\n  fullName: Freezable.Changed\n- uid: System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: Freezable.CloneCore(Freezable)\n  fullName: Freezable.CloneCore(Freezable)\n- uid: System.Windows.Freezable.CloneCurrentValue\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: Freezable.CloneCurrentValue()\n  fullName: Freezable.CloneCurrentValue()\n- uid: System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: Freezable.CloneCurrentValueCore(Freezable)\n  fullName: Freezable.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Freezable.CreateInstance\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CreateInstance()\n  nameWithType: Freezable.CreateInstance()\n  fullName: Freezable.CreateInstance()\n- uid: System.Windows.Freezable.CreateInstanceCore\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: Freezable.CreateInstanceCore()\n  fullName: Freezable.CreateInstanceCore()\n- uid: System.Windows.Freezable.Freeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze()\n  nameWithType: Freezable.Freeze()\n  fullName: Freezable.Freeze()\n- uid: System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze(Freezable, Boolean)\n  nameWithType: Freezable.Freeze(Freezable, Boolean)\n  fullName: Freezable.Freeze(Freezable, Boolean)\n- uid: System.Windows.Freezable.GetAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozen()\n  nameWithType: Freezable.GetAsFrozen()\n  fullName: Freezable.GetAsFrozen()\n- uid: System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: Freezable.GetAsFrozenCore(Freezable)\n  fullName: Freezable.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozen()\n  nameWithType: Freezable.GetCurrentValueAsFrozen()\n  fullName: Freezable.GetCurrentValueAsFrozen()\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: Freezable.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: Freezable.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.IsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: IsFrozen\n  nameWithType: Freezable.IsFrozen\n  fullName: Freezable.IsFrozen\n- uid: System.Windows.Freezable.OnChanged\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnChanged()\n  nameWithType: Freezable.OnChanged()\n  fullName: Freezable.OnChanged()\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n- uid: System.Windows.Freezable.ReadPreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: ReadPreamble()\n  nameWithType: Freezable.ReadPreamble()\n  fullName: Freezable.ReadPreamble()\n- uid: System.Windows.Freezable.WritePostscript\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePostscript()\n  nameWithType: Freezable.WritePostscript()\n  fullName: Freezable.WritePostscript()\n- uid: System.Windows.Freezable.WritePreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePreamble()\n  nameWithType: Freezable.WritePreamble()\n  fullName: Freezable.WritePreamble()\n- uid: System.Windows.Media.Animation.IAnimatable\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: IAnimatable\n  nameWithType: IAnimatable\n  fullName: System.Windows.Media.Animation.IAnimatable\n"}