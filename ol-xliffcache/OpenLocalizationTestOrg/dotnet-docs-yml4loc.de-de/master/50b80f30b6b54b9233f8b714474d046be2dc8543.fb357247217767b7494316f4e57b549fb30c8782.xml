{"nodes":[{"content":"Defines an iterator that can access elements in a container in the forward direction by using the increment operator and in the backward direction by using the decrement operator. The element that the iterator points to can be both written to and read from any number of times. Bidirectional iterators can be used anywhere that an input or output iterator is required.","nodes":[{"pos":[0,368],"content":"Defines an iterator that can access elements in a container in the forward direction by using the increment operator and in the backward direction by using the decrement operator. The element that the iterator points to can be both written to and read from any number of times. Bidirectional iterators can be used anywhere that an input or output iterator is required.","nodes":[{"content":"Defines an iterator that can access elements in a container in the forward direction by using the increment operator and in the backward direction by using the decrement operator. The element that the iterator points to can be both written to and read from any number of times. Bidirectional iterators can be used anywhere that an input or output iterator is required.","pos":[0,368],"nodes":[{"content":"Defines an iterator that can access elements in a container in the forward direction by using the increment operator and in the backward direction by using the decrement operator.","pos":[0,179]},{"content":"The element that the iterator points to can be both written to and read from any number of times.","pos":[180,277]},{"content":"Bidirectional iterators can be used anywhere that an input or output iterator is required.","pos":[278,368]}]}]}],"pos":[3300,3669],"yaml":true},{"content":"[!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]","nodes":[],"pos":[3680,3738],"yaml":true,"extradata":"MT"},{"content":"[!INCLUDE[cpp_iter_arg](~/includes/cpp-iter-arg-md.md)]","nodes":[],"pos":[3937,3995],"yaml":true},{"content":"Allocates and initializes a new <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object.","nodes":[{"pos":[0,126],"content":"Allocates and initializes a new <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"&gt;&lt;/xref&gt;</ph> object.","source":"Allocates and initializes a new <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object."}],"pos":[5544,5671],"yaml":true},{"content":"Allocates and initializes a new <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object that points to the given node.","nodes":[{"pos":[0,156],"content":"Allocates and initializes a new <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"&gt;&lt;/xref&gt;</ph> object that points to the given node.","source":"Allocates and initializes a new <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object that points to the given node."}],"pos":[8973,9130],"yaml":true},{"content":"The node that the iterator will point to.","nodes":[{"pos":[0,41],"content":"The node that the iterator will point to.","nodes":[{"content":"The node that the iterator will point to.","pos":[0,41]}]}],"pos":[9351,9393],"yaml":true},{"content":"Returns a copy of the current <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object.","nodes":[{"pos":[0,124],"content":"Returns a copy of the current <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns a copy of the current <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object."}],"pos":[10529,10654],"yaml":true},{"content":"A copy of the current <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object.","nodes":[{"pos":[0,116],"content":"A copy of the current <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"&gt;&lt;/xref&gt;</ph> object.","source":"A copy of the current <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object."}],"pos":[10785,10902],"yaml":true},{"content":"Gets the container that the iterator is traversing.","nodes":[{"pos":[0,51],"content":"Gets the container that the iterator is traversing.","nodes":[{"content":"Gets the container that the iterator is traversing.","pos":[0,51]}]}],"pos":[12062,12114],"yaml":true},{"content":"The container that the iterator is traversing.","nodes":[{"pos":[0,46],"content":"The container that the iterator is traversing.","nodes":[{"content":"The container that the iterator is traversing.","pos":[0,46]}]}],"pos":[12249,12296],"yaml":true},{"content":"Determines if the given <xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"></xref> object is the same as the current <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object.","nodes":[{"pos":[0,223],"content":"Determines if the given <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"&gt;&lt;/xref&gt;</ph> object is the same as the current <ph id=\"ph2\">&lt;xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"&gt;&lt;/xref&gt;</ph> object.","source":"Determines if the given <xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"></xref> object is the same as the current <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object."}],"pos":[15443,15667],"yaml":true},{"content":"The <xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"></xref> object to compare with the current <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object.","nodes":[{"pos":[0,204],"content":"The <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"&gt;&lt;/xref&gt;</ph> object to compare with the current <ph id=\"ph2\">&lt;xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"&gt;&lt;/xref&gt;</ph> object.","source":"The <xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"></xref> object to compare with the current <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object."}],"pos":[15899,16104],"yaml":true},{"content":"`true` if the two iterators are the same object; otherwise, `false`.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">`true`</ph> if the two iterators are the same object; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the two iterators are the same object; otherwise, `false`."}],"pos":[16162,16233],"yaml":true},{"content":"Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.","nodes":[{"pos":[0,174],"content":"Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.","nodes":[{"content":"Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.","pos":[0,174]}]}],"pos":[17366,17541],"yaml":true},{"content":"Decrements the iterator by one element. This is the postfix version of the decrement operator.","nodes":[{"pos":[0,94],"content":"Decrements the iterator by one element. This is the postfix version of the decrement operator.","nodes":[{"content":"Decrements the iterator by one element. This is the postfix version of the decrement operator.","pos":[0,94],"nodes":[{"content":"Decrements the iterator by one element.","pos":[0,39]},{"content":"This is the postfix version of the decrement operator.","pos":[40,94]}]}]}],"pos":[21057,21152],"yaml":true},{"content":"An unused parameter that indicates this is the postfix version of the operator.","nodes":[{"pos":[0,79],"content":"An unused parameter that indicates this is the postfix version of the operator.","nodes":[{"content":"An unused parameter that indicates this is the postfix version of the operator.","pos":[0,79]}]}],"pos":[21528,21608],"yaml":true},{"content":"An iterator.","nodes":[{"pos":[0,12],"content":"An iterator.","nodes":[{"content":"An iterator.","pos":[0,12]}]}],"pos":[21715,21728],"yaml":true},{"content":"Decrements the iterator by one element. This is the prefix version of the decrement operator.","nodes":[{"pos":[0,93],"content":"Decrements the iterator by one element. This is the prefix version of the decrement operator.","nodes":[{"content":"Decrements the iterator by one element. This is the prefix version of the decrement operator.","pos":[0,93],"nodes":[{"content":"Decrements the iterator by one element.","pos":[0,39]},{"content":"This is the prefix version of the decrement operator.","pos":[40,93]}]}]}],"pos":[23239,23333],"yaml":true},{"content":"An iterator.","nodes":[{"pos":[0,12],"content":"An iterator.","nodes":[{"content":"An iterator.","pos":[0,12]}]}],"pos":[23749,23762],"yaml":true},{"content":"Determines whether the given <xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"></xref> object is the same as the current <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object.","nodes":[{"pos":[0,228],"content":"Determines whether the given <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"&gt;&lt;/xref&gt;</ph> object is the same as the current <ph id=\"ph2\">&lt;xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"&gt;&lt;/xref&gt;</ph> object.","source":"Determines whether the given <xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"></xref> object is the same as the current <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object."}],"pos":[27168,27397],"yaml":true},{"content":"The equivalent method for this operator is <xref:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator%601.Equals%28Microsoft.VisualC.StlClr.Generic.IInputIterator%7B%600%7D%29?displayProperty=fullName>","nodes":[{"pos":[0,212],"content":"The equivalent method for this operator is <xref:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator%601.Equals%28Microsoft.VisualC.StlClr.Generic.IInputIterator%7B%600%7D%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator%601.Equals%28Microsoft.VisualC.StlClr.Generic.IInputIterator%7B%600%7D%29?displayProperty=fullName&gt;</ph>","pos":[0,212],"source":"The equivalent method for this operator is <xref:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator%601.Equals%28Microsoft.VisualC.StlClr.Generic.IInputIterator%7B%600%7D%29?displayProperty=fullName>"}]}],"pos":[27408,27621],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"></xref> object to compare with the current <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object.","nodes":[{"pos":[0,204],"content":"The <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"&gt;&lt;/xref&gt;</ph> object to compare with the current <ph id=\"ph2\">&lt;xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"&gt;&lt;/xref&gt;</ph> object.","source":"The <xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"></xref> object to compare with the current <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object."}],"pos":[27987,28192],"yaml":true},{"content":"`true` if the two iterators are the same object; otherwise, `false`.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">`true`</ph> if the two iterators are the same object; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the two iterators are the same object; otherwise, `false`."}],"pos":[28250,28321],"yaml":true},{"content":"Increments the iterator by one element. This is the prefix version of the increment operator.","nodes":[{"pos":[0,93],"content":"Increments the iterator by one element. This is the prefix version of the increment operator.","nodes":[{"content":"Increments the iterator by one element. This is the prefix version of the increment operator.","pos":[0,93],"nodes":[{"content":"Increments the iterator by one element.","pos":[0,39]},{"content":"This is the prefix version of the increment operator.","pos":[40,93]}]}]}],"pos":[31320,31414],"yaml":true},{"content":"An iterator.","nodes":[{"pos":[0,12],"content":"An iterator.","nodes":[{"content":"An iterator.","pos":[0,12]}]}],"pos":[31830,31843],"yaml":true},{"content":"Increments the iterator by one element. This is the postfix version of the increment operator.","nodes":[{"pos":[0,94],"content":"Increments the iterator by one element. This is the postfix version of the increment operator.","nodes":[{"content":"Increments the iterator by one element. This is the postfix version of the increment operator.","pos":[0,94],"nodes":[{"content":"Increments the iterator by one element.","pos":[0,39]},{"content":"This is the postfix version of the increment operator.","pos":[40,94]}]}]}],"pos":[33414,33509],"yaml":true},{"content":"An iterator.","nodes":[{"pos":[0,12],"content":"An iterator.","nodes":[{"content":"An iterator.","pos":[0,12]}]}],"pos":[33995,34008],"yaml":true},{"content":"Determines whether the given <xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"></xref> object differs from the current <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object.","nodes":[{"pos":[0,226],"content":"Determines whether the given <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"&gt;&lt;/xref&gt;</ph> object differs from the current <ph id=\"ph2\">&lt;xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"&gt;&lt;/xref&gt;</ph> object.","source":"Determines whether the given <xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"></xref> object differs from the current <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object."}],"pos":[37232,37459],"yaml":true},{"content":"The equivalent method for this operator is <xref:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator%601.Compare%28Microsoft.VisualC.StlClr.Generic.IInputIterator%7B%600%7D%29?displayProperty=fullName>","nodes":[{"pos":[0,213],"content":"The equivalent method for this operator is <xref:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator%601.Compare%28Microsoft.VisualC.StlClr.Generic.IInputIterator%7B%600%7D%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator%601.Compare%28Microsoft.VisualC.StlClr.Generic.IInputIterator%7B%600%7D%29?displayProperty=fullName&gt;</ph>","pos":[0,213],"source":"The equivalent method for this operator is <xref:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator%601.Compare%28Microsoft.VisualC.StlClr.Generic.IInputIterator%7B%600%7D%29?displayProperty=fullName>"}]}],"pos":[37470,37684],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"></xref> object to compare with the current <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object.","nodes":[{"pos":[0,204],"content":"The <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"&gt;&lt;/xref&gt;</ph> object to compare with the current <ph id=\"ph2\">&lt;xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"&gt;&lt;/xref&gt;</ph> object.","source":"The <xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"></xref> object to compare with the current <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object."}],"pos":[37913,38118],"yaml":true},{"content":"`true` if the two iterators are different objects; otherwise, `false`.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">`true`</ph> if the two iterators are different objects; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the two iterators are different objects; otherwise, `false`."}],"pos":[38176,38249],"yaml":true},{"content":"Positions the iterator to the element immediately before the current element.","nodes":[{"pos":[0,77],"content":"Positions the iterator to the element immediately before the current element.","nodes":[{"content":"Positions the iterator to the element immediately before the current element.","pos":[0,77]}]}],"pos":[43523,43601],"yaml":true},{"content":"Determines whether the iterator is valid and can be safely used to traverse the underlying container.","nodes":[{"pos":[0,101],"content":"Determines whether the iterator is valid and can be safely used to traverse the underlying container.","nodes":[{"content":"Determines whether the iterator is valid and can be safely used to traverse the underlying container.","pos":[0,101]}]}],"pos":[44807,44909],"yaml":true},{"content":"`true` if the iterator is valid and safe to use; otherwise, `false`.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">`true`</ph> if the iterator is valid and safe to use; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the iterator is valid and safe to use; otherwise, `false`."}],"pos":[45039,45110],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  commentId: T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  id: ContainerBidirectionalIterator`1\n  children:\n  - Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor\n  - Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})\n  - Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.Clone\n  - Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.container\n  - Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  - Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.next\n  - Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)\n  - Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  - Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Implicit\n  - Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)\n  - Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  - Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.prev\n  - Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.valid\n  langs:\n  - csharp\n  name: ContainerBidirectionalIterator<TValue>\n  nameWithType: ContainerBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>\n  type: Class\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  summary: Defines an iterator that can access elements in a container in the forward direction by using the increment operator and in the backward direction by using the decrement operator. The element that the iterator points to can be both written to and read from any number of times. Bidirectional iterators can be used anywhere that an input or output iterator is required.\n  remarks: '[!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]'\n  syntax:\n    content: 'public class ContainerBidirectionalIterator<TValue> : Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue>'\n    typeParameters:\n    - id: TValue\n      description: '[!INCLUDE[cpp_iter_arg](~/includes/cpp-iter-arg-md.md)]'\n  inheritance:\n  - System.Object\n  implements:\n  - Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{TValue}\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor\n  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: ContainerBidirectionalIterator<TValue>()\n  nameWithType: ContainerBidirectionalIterator<TValue>.ContainerBidirectionalIterator<TValue>()\n  fullName: ContainerBidirectionalIterator<TValue>.ContainerBidirectionalIterator<TValue>()\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  summary: Allocates and initializes a new <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object.\n  syntax:\n    content: public ContainerBidirectionalIterator ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)'\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: ContainerBidirectionalIterator<TValue>(ContainerBidirectionalIterator)\n  nameWithType: ContainerBidirectionalIterator<TValue>.ContainerBidirectionalIterator<TValue>(ContainerBidirectionalIterator)\n  fullName: ContainerBidirectionalIterator<TValue>.ContainerBidirectionalIterator<TValue>(ContainerBidirectionalIterator)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ContainerBidirectionalIterator (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: ''\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})\n  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})'\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: ContainerBidirectionalIterator<TValue>(INode<TValue>)\n  nameWithType: ContainerBidirectionalIterator<TValue>.ContainerBidirectionalIterator<TValue>(INode<TValue>)\n  fullName: ContainerBidirectionalIterator<TValue>.ContainerBidirectionalIterator<TValue>(INode<TValue>)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  summary: Allocates and initializes a new <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object that points to the given node.\n  syntax:\n    content: public ContainerBidirectionalIterator (Microsoft.VisualC.StlClr.Generic.INode<TValue> _Node);\n    parameters:\n    - id: _Node\n      type: Microsoft.VisualC.StlClr.Generic.INode`1\n      description: The node that the iterator will point to.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.Clone\n  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.Clone\n  id: Clone\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: ContainerBidirectionalIterator<TValue>.Clone()\n  fullName: ContainerBidirectionalIterator<TValue>.Clone()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  summary: Returns a copy of the current <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object.\n  syntax:\n    content: public virtual object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: A copy of the current <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.Clone*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.container\n  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.container\n  id: container\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: container()\n  nameWithType: ContainerBidirectionalIterator<TValue>.container()\n  fullName: ContainerBidirectionalIterator<TValue>.container()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  summary: Gets the container that the iterator is traversing.\n  syntax:\n    content: public virtual object container ();\n    parameters: []\n    return:\n      type: System.Object\n      description: The container that the iterator is traversing.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.container*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)\n  id: equal_to(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: equal_to(ContainerBidirectionalIterator)\n  nameWithType: ContainerBidirectionalIterator<TValue>.equal_to(ContainerBidirectionalIterator)\n  fullName: ContainerBidirectionalIterator<TValue>.equal_to(ContainerBidirectionalIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool equal_to (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: ''\n    return:\n      type: System.Boolean\n      description: ''\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  id: equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: equal_to(IInputIterator<TValue>)\n  nameWithType: ContainerBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)\n  fullName: ContainerBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  summary: Determines if the given <xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"></xref> object is the same as the current <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object.\n  syntax:\n    content: public virtual bool equal_to (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: The <xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"></xref> object to compare with the current <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object.\n    return:\n      type: System.Boolean\n      description: '`true` if the two iterators are the same object; otherwise, `false`.'\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.next\n  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.next\n  id: next\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: next()\n  nameWithType: ContainerBidirectionalIterator<TValue>.next()\n  fullName: ContainerBidirectionalIterator<TValue>.next()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  summary: Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.\n  syntax:\n    content: public virtual void next ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.next*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)\n  id: op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Assign(ContainerBidirectionalIterator)\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_Assign(ContainerBidirectionalIterator)\n  fullName: ContainerBidirectionalIterator<TValue>.op_Assign(ContainerBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator op_Assign (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: ''\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: ''\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Assign*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)\n  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)\n  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Decrement(ContainerBidirectionalIterator<TValue>, Int32)\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_Decrement(ContainerBidirectionalIterator<TValue>, Int32)\n  fullName: ContainerBidirectionalIterator<TValue>.op_Decrement(ContainerBidirectionalIterator<TValue>, Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  summary: Decrements the iterator by one element. This is the postfix version of the decrement operator.\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , int A_0);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n      description: ''\n    - id: A_0\n      type: System.Int32\n      description: An unused parameter that indicates this is the postfix version of the operator.\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: An iterator.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)\n  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)\n  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Decrement(ContainerBidirectionalIterator<TValue>)\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_Decrement(ContainerBidirectionalIterator<TValue>)\n  fullName: ContainerBidirectionalIterator<TValue>.op_Decrement(ContainerBidirectionalIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  summary: Decrements the iterator by one element. This is the prefix version of the decrement operator.\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n      description: ''\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: An iterator.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)\n  id: op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Equality(ContainerBidirectionalIterator)\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_Equality(ContainerBidirectionalIterator)\n  fullName: ContainerBidirectionalIterator<TValue>.op_Equality(ContainerBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: >-\n      [System.Runtime.TargetedPatchingOptOut(\"Performance critical to inline this type of method across NGen image boundaries\")]\n\n      public bool op_Equality (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: ''\n    return:\n      type: System.Boolean\n      description: ''\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.TargetedPatchingOptOutAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  id: op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Equality(IInputIterator<TValue>)\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)\n  fullName: ContainerBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  summary: Determines whether the given <xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"></xref> object is the same as the current <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object.\n  remarks: The equivalent method for this operator is <xref:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator%601.Equals%28Microsoft.VisualC.StlClr.Generic.IInputIterator%7B%600%7D%29?displayProperty=fullName>\n  syntax:\n    content: >-\n      [System.Runtime.TargetedPatchingOptOut(\"Performance critical to inline this type of method across NGen image boundaries\")]\n\n      public bool op_Equality (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: The <xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"></xref> object to compare with the current <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object.\n    return:\n      type: System.Boolean\n      description: '`true` if the two iterators are the same object; otherwise, `false`.'\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.TargetedPatchingOptOutAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Implicit\n  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}\n  id: op_Implicit\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Implicit\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_Implicit\n  fullName: ContainerBidirectionalIterator<TValue>.op_Implicit\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue> op_Implicit ();\n    parameters: []\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1\n      description: ''\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Implicit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)\n  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)\n  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Increment(ContainerBidirectionalIterator<TValue>)\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_Increment(ContainerBidirectionalIterator<TValue>)\n  fullName: ContainerBidirectionalIterator<TValue>.op_Increment(ContainerBidirectionalIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  summary: Increments the iterator by one element. This is the prefix version of the increment operator.\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n      description: ''\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: An iterator.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)\n  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)\n  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Increment(ContainerBidirectionalIterator<TValue>, Int32)\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_Increment(ContainerBidirectionalIterator<TValue>, Int32)\n  fullName: ContainerBidirectionalIterator<TValue>.op_Increment(ContainerBidirectionalIterator<TValue>, Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  summary: Increments the iterator by one element. This is the postfix version of the increment operator.\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , int A_0);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n      description: ''\n    - id: A_0\n      type: System.Int32\n      description: ''\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: An iterator.\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)\n  id: op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Inequality(ContainerBidirectionalIterator)\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_Inequality(ContainerBidirectionalIterator)\n  fullName: ContainerBidirectionalIterator<TValue>.op_Inequality(ContainerBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Inequality (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: ''\n    return:\n      type: System.Boolean\n      description: ''\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  id: op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Inequality(IInputIterator<TValue>)\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n  fullName: ContainerBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  summary: Determines whether the given <xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"></xref> object differs from the current <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object.\n  remarks: The equivalent method for this operator is <xref:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator%601.Compare%28Microsoft.VisualC.StlClr.Generic.IInputIterator%7B%600%7D%29?displayProperty=fullName>\n  syntax:\n    content: public bool op_Inequality (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: The <xref href=\"Microsoft.VisualC.StlClr.Generic.IInputIterator`1\"></xref> object to compare with the current <xref href=\"Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\"></xref> object.\n    return:\n      type: System.Boolean\n      description: '`true` if the two iterators are different objects; otherwise, `false`.'\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)\n  id: op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_MemberSelection(ContainerBidirectionalIterator)\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_MemberSelection(ContainerBidirectionalIterator)\n  fullName: ContainerBidirectionalIterator<TValue>.op_MemberSelection(ContainerBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: >-\n      [System.Runtime.TargetedPatchingOptOut(\"Performance critical to inline this type of method across NGen image boundaries\")]\n\n      public static TValue op_MemberSelection (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Left);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: ''\n    return:\n      type: TValue@\n      description: ''\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_MemberSelection*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.TargetedPatchingOptOutAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)\n  id: op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_PointerDereference(ContainerBidirectionalIterator)\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_PointerDereference(ContainerBidirectionalIterator)\n  fullName: ContainerBidirectionalIterator<TValue>.op_PointerDereference(ContainerBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: >-\n      [System.Runtime.TargetedPatchingOptOut(\"Performance critical to inline this type of method across NGen image boundaries\")]\n\n      public static TValue op_PointerDereference (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Left);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: ''\n    return:\n      type: TValue@\n      description: ''\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_PointerDereference*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.TargetedPatchingOptOutAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.prev\n  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.prev\n  id: prev\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: prev()\n  nameWithType: ContainerBidirectionalIterator<TValue>.prev()\n  fullName: ContainerBidirectionalIterator<TValue>.prev()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  summary: Positions the iterator to the element immediately before the current element.\n  syntax:\n    content: public virtual void prev ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.prev*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n  ms.author: mblome\n  manager: ghogen\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.valid\n  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.valid\n  id: valid\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: valid()\n  nameWithType: ContainerBidirectionalIterator<TValue>.valid()\n  fullName: ContainerBidirectionalIterator<TValue>.valid()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  summary: Determines whether the iterator is valid and can be safely used to traverse the underlying container.\n  syntax:\n    content: public virtual bool valid ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the iterator is valid and safe to use; otherwise, `false`.'\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.valid*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n  ms.author: mblome\n  manager: ghogen\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: ContainerBidirectionalIterator<TValue>()\n  nameWithType: ContainerBidirectionalIterator<TValue>.ContainerBidirectionalIterator<TValue>()\n  fullName: ContainerBidirectionalIterator<TValue>.ContainerBidirectionalIterator<TValue>()\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: ContainerBidirectionalIterator<TValue>(ContainerBidirectionalIterator)\n  nameWithType: ContainerBidirectionalIterator<TValue>.ContainerBidirectionalIterator<TValue>(ContainerBidirectionalIterator)\n  fullName: ContainerBidirectionalIterator<TValue>.ContainerBidirectionalIterator<TValue>(ContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerBidirectionalIterator\n  nameWithType: ContainerBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: ContainerBidirectionalIterator<TValue>(INode<TValue>)\n  nameWithType: ContainerBidirectionalIterator<TValue>.ContainerBidirectionalIterator<TValue>(INode<TValue>)\n  fullName: ContainerBidirectionalIterator<TValue>.ContainerBidirectionalIterator<TValue>(INode<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.INode`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: INode<TValue>\n  nameWithType: INode<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.INode<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.Clone\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: Clone()\n  nameWithType: ContainerBidirectionalIterator<TValue>.Clone()\n  fullName: ContainerBidirectionalIterator<TValue>.Clone()\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.container\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: container()\n  nameWithType: ContainerBidirectionalIterator<TValue>.container()\n  fullName: ContainerBidirectionalIterator<TValue>.container()\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: equal_to(ContainerBidirectionalIterator)\n  nameWithType: ContainerBidirectionalIterator<TValue>.equal_to(ContainerBidirectionalIterator)\n  fullName: ContainerBidirectionalIterator<TValue>.equal_to(ContainerBidirectionalIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: equal_to(IInputIterator<TValue>)\n  nameWithType: ContainerBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)\n  fullName: ContainerBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.next\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: next()\n  nameWithType: ContainerBidirectionalIterator<TValue>.next()\n  fullName: ContainerBidirectionalIterator<TValue>.next()\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Assign(ContainerBidirectionalIterator)\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_Assign(ContainerBidirectionalIterator)\n  fullName: ContainerBidirectionalIterator<TValue>.op_Assign(ContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Decrement(ContainerBidirectionalIterator<TValue>, Int32)\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_Decrement(ContainerBidirectionalIterator<TValue>, Int32)\n  fullName: ContainerBidirectionalIterator<TValue>.op_Decrement(ContainerBidirectionalIterator<TValue>, Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ContainerBidirectionalIterator<TValue>\n  nameWithType: ContainerBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Decrement(ContainerBidirectionalIterator<TValue>)\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_Decrement(ContainerBidirectionalIterator<TValue>)\n  fullName: ContainerBidirectionalIterator<TValue>.op_Decrement(ContainerBidirectionalIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Equality(ContainerBidirectionalIterator)\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_Equality(ContainerBidirectionalIterator)\n  fullName: ContainerBidirectionalIterator<TValue>.op_Equality(ContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Equality(IInputIterator<TValue>)\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)\n  fullName: ContainerBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Implicit\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Implicit\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_Implicit\n  fullName: ContainerBidirectionalIterator<TValue>.op_Implicit\n- uid: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IBidirectionalIterator<TValue>\n  nameWithType: IBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Increment(ContainerBidirectionalIterator<TValue>)\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_Increment(ContainerBidirectionalIterator<TValue>)\n  fullName: ContainerBidirectionalIterator<TValue>.op_Increment(ContainerBidirectionalIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Increment(ContainerBidirectionalIterator<TValue>, Int32)\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_Increment(ContainerBidirectionalIterator<TValue>, Int32)\n  fullName: ContainerBidirectionalIterator<TValue>.op_Increment(ContainerBidirectionalIterator<TValue>, Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Inequality(ContainerBidirectionalIterator)\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_Inequality(ContainerBidirectionalIterator)\n  fullName: ContainerBidirectionalIterator<TValue>.op_Inequality(ContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Inequality(IInputIterator<TValue>)\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n  fullName: ContainerBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_MemberSelection(ContainerBidirectionalIterator)\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_MemberSelection(ContainerBidirectionalIterator)\n  fullName: ContainerBidirectionalIterator<TValue>.op_MemberSelection(ContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_PointerDereference(ContainerBidirectionalIterator)\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_PointerDereference(ContainerBidirectionalIterator)\n  fullName: ContainerBidirectionalIterator<TValue>.op_PointerDereference(ContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.prev\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: prev()\n  nameWithType: ContainerBidirectionalIterator<TValue>.prev()\n  fullName: ContainerBidirectionalIterator<TValue>.prev()\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.valid\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: valid()\n  nameWithType: ContainerBidirectionalIterator<TValue>.valid()\n  fullName: ContainerBidirectionalIterator<TValue>.valid()\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: ContainerBidirectionalIterator<TValue>\n  nameWithType: ContainerBidirectionalIterator<TValue>.ContainerBidirectionalIterator<TValue>\n  fullName: ContainerBidirectionalIterator<TValue>.ContainerBidirectionalIterator<TValue>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.Clone*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: Clone\n  nameWithType: ContainerBidirectionalIterator<TValue>.Clone\n  fullName: ContainerBidirectionalIterator<TValue>.Clone\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.container*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: container\n  nameWithType: ContainerBidirectionalIterator<TValue>.container\n  fullName: ContainerBidirectionalIterator<TValue>.container\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: equal_to\n  nameWithType: ContainerBidirectionalIterator<TValue>.equal_to\n  fullName: ContainerBidirectionalIterator<TValue>.equal_to\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.next*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: next\n  nameWithType: ContainerBidirectionalIterator<TValue>.next\n  fullName: ContainerBidirectionalIterator<TValue>.next\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Assign*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Assign\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_Assign\n  fullName: ContainerBidirectionalIterator<TValue>.op_Assign\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Decrement\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_Decrement\n  fullName: ContainerBidirectionalIterator<TValue>.op_Decrement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Equality\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_Equality\n  fullName: ContainerBidirectionalIterator<TValue>.op_Equality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Implicit*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Implicit\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_Implicit\n  fullName: ContainerBidirectionalIterator<TValue>.op_Implicit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Increment\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_Increment\n  fullName: ContainerBidirectionalIterator<TValue>.op_Increment\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Inequality\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_Inequality\n  fullName: ContainerBidirectionalIterator<TValue>.op_Inequality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_MemberSelection*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_MemberSelection\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_MemberSelection\n  fullName: ContainerBidirectionalIterator<TValue>.op_MemberSelection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_PointerDereference*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_PointerDereference\n  nameWithType: ContainerBidirectionalIterator<TValue>.op_PointerDereference\n  fullName: ContainerBidirectionalIterator<TValue>.op_PointerDereference\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.prev*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: prev\n  nameWithType: ContainerBidirectionalIterator<TValue>.prev\n  fullName: ContainerBidirectionalIterator<TValue>.prev\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.valid*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  isExternal: false\n  name: valid\n  nameWithType: ContainerBidirectionalIterator<TValue>.valid\n  fullName: ContainerBidirectionalIterator<TValue>.valid\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerBidirectionalIterator`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}