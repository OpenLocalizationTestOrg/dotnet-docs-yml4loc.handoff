{"nodes":[{"content":"Provides the base functionality for creating data-related collections in the <xref href=\"System.Windows.Forms\"></xref> namespace.","nodes":[{"pos":[0,129],"content":"Provides the base functionality for creating data-related collections in the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms\"&gt;&lt;/xref&gt;</ph> namespace.","source":"Provides the base functionality for creating data-related collections in the <xref href=\"System.Windows.Forms\"></xref> namespace."}],"pos":[803,933],"yaml":true},{"content":"The <xref:System.Windows.Forms.BaseCollection> class is not intended for use by application developers. Application developers should use <xref:System.Collections.CollectionBase> instead.  \n  \n The <xref:System.Windows.Forms.BaseCollection> class implements the <xref:System.Collections.ICollection> interface.  \n  \n Classes that derive from the <xref:System.Windows.Forms.BaseCollection> class include:  \n  \n-   <xref:System.Windows.Forms.BindingsCollection>  \n  \n-   <xref:System.Windows.Forms.GridColumnStylesCollection>  \n  \n-   <xref:System.Windows.Forms.GridTableStylesCollection>","nodes":[{"pos":[0,187],"content":"The <xref:System.Windows.Forms.BaseCollection> class is not intended for use by application developers. Application developers should use <xref:System.Collections.CollectionBase> instead.","nodes":[{"content":"The <xref:System.Windows.Forms.BaseCollection> class is not intended for use by application developers. Application developers should use <xref:System.Collections.CollectionBase> instead.","pos":[0,187],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BaseCollection&gt;</ph> class is not intended for use by application developers.","pos":[0,103],"source":"The <xref:System.Windows.Forms.BaseCollection> class is not intended for use by application developers."},{"content":"Application developers should use <ph id=\"ph1\">&lt;xref:System.Collections.CollectionBase&gt;</ph> instead.","pos":[104,187],"source":" Application developers should use <xref:System.Collections.CollectionBase> instead."}]}]},{"pos":[194,310],"content":"The <xref:System.Windows.Forms.BaseCollection> class implements the <xref:System.Collections.ICollection> interface.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BaseCollection&gt;</ph> class implements the <ph id=\"ph2\">&lt;xref:System.Collections.ICollection&gt;</ph> interface.","pos":[0,116],"source":"The <xref:System.Windows.Forms.BaseCollection> class implements the <xref:System.Collections.ICollection> interface."}]},{"pos":[317,403],"content":"Classes that derive from the <xref:System.Windows.Forms.BaseCollection> class include:","nodes":[{"content":"Classes that derive from the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BaseCollection&gt;</ph> class include:","pos":[0,86],"source":"Classes that derive from the <xref:System.Windows.Forms.BaseCollection> class include:"}]},{"pos":[413,459],"content":"<xref:System.Windows.Forms.BindingsCollection>","nodes":[]},{"pos":[469,523],"content":"<xref:System.Windows.Forms.GridColumnStylesCollection>","nodes":[]},{"pos":[533,586],"content":"<xref:System.Windows.Forms.GridTableStylesCollection>","nodes":[]}],"pos":[944,1543],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Forms.BaseCollection\"></xref> class.","nodes":[{"pos":[0,97],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.BaseCollection\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.BaseCollection\"></xref> class."}],"pos":[3976,4074],"yaml":true},{"content":"Copies all the elements of the current one-dimensional <xref href=\"System.Array\"></xref> to the specified one-dimensional <xref href=\"System.Array\"></xref> starting at the specified destination <xref href=\"System.Array\"></xref> index.","nodes":[{"pos":[0,234],"content":"Copies all the elements of the current one-dimensional <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> to the specified one-dimensional <ph id=\"ph2\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> starting at the specified destination <ph id=\"ph3\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> index.","source":"Copies all the elements of the current one-dimensional <xref href=\"System.Array\"></xref> to the specified one-dimensional <xref href=\"System.Array\"></xref> starting at the specified destination <xref href=\"System.Array\"></xref> index."}],"pos":[5245,5480],"yaml":true},{"content":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from the current `Array`.","nodes":[{"pos":[0,126],"content":"The one-dimensional <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> that is the destination of the elements copied from the current <ph id=\"ph2\">`Array`</ph>.","source":"The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from the current `Array`."}],"pos":[5618,5745],"yaml":true},{"content":"The zero-based relative index in <code>ar</code> at which copying begins.","nodes":[{"pos":[0,73],"content":"The zero-based relative index in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">ar</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which copying begins.","source":"The zero-based relative index in <code>ar</code> at which copying begins."}],"pos":[5805,5879],"yaml":true},{"content":"Gets the total number of elements in the collection.","nodes":[{"pos":[0,52],"content":"Gets the total number of elements in the collection.","nodes":[{"content":"Gets the total number of elements in the collection.","pos":[0,52]}]}],"pos":[6834,6887],"yaml":true},{"content":"The total number of elements in the collection.","nodes":[{"pos":[0,47],"content":"The total number of elements in the collection.","nodes":[{"content":"The total number of elements in the collection.","pos":[0,47]}]}],"pos":[7057,7105],"yaml":true},{"content":"Gets the object that enables iterating through the members of the collection.","nodes":[{"pos":[0,77],"content":"Gets the object that enables iterating through the members of the collection.","nodes":[{"content":"Gets the object that enables iterating through the members of the collection.","pos":[0,77]}]}],"pos":[8198,8276],"yaml":true},{"content":"An object that implements the <xref href=\"System.Collections.IEnumerator\"></xref> interface.","nodes":[{"pos":[0,92],"content":"An object that implements the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph> interface.","source":"An object that implements the <xref href=\"System.Collections.IEnumerator\"></xref> interface."}],"pos":[8448,8541],"yaml":true},{"content":"Gets a value indicating whether the collection is read-only.","nodes":[{"pos":[0,60],"content":"Gets a value indicating whether the collection is read-only.","nodes":[{"content":"Gets a value indicating whether the collection is read-only.","pos":[0,60]}]}],"pos":[9555,9616],"yaml":true},{"content":"The collections that derive from the <xref:System.Windows.Forms.BaseCollection> class are always writable, which is why this property always returns `false`.","nodes":[{"pos":[0,157],"content":"The collections that derive from the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BaseCollection&gt;</ph> class are always writable, which is why this property always returns <ph id=\"ph2\">`false`</ph>.","source":"The collections that derive from the <xref:System.Windows.Forms.BaseCollection> class are always writable, which is why this property always returns `false`."}],"pos":[9627,9785],"yaml":true,"extradata":"MT"},{"content":"This property is always `false`.","nodes":[{"pos":[0,32],"content":"This property is always <ph id=\"ph1\">`false`</ph>.","source":"This property is always `false`."}],"pos":[9955,9988],"yaml":true},{"content":"Gets a value indicating whether access to the <xref href=\"System.Collections.ICollection\"></xref> is synchronized.","nodes":[{"pos":[0,114],"content":"Gets a value indicating whether access to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> is synchronized.","source":"Gets a value indicating whether access to the <xref href=\"System.Collections.ICollection\"></xref> is synchronized."}],"pos":[11088,11203],"yaml":true},{"content":"If a collection is thread safe, the <xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A> property returns `true`, and the programmer does not have to do anything to keep the collection thread safe.  \n  \n If, as is the case with the <xref:System.Windows.Forms.BaseCollection>, the <xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A> property returns `false`, then the <xref:System.Windows.Forms.BaseCollection.SyncRoot%2A> property returns an object that can be used with the C# `lock` keyword. Use the static <xref:System.Threading.Monitor.Enter%2A> and <xref:System.Threading.Monitor.Exit%2A> methods of the <xref:System.Threading.Monitor> class to manually lock and unlock the synchronization object.","nodes":[{"pos":[0,205],"content":"If a collection is thread safe, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A&gt;</ph> property returns <ph id=\"ph2\">`true`</ph>, and the programmer does not have to do anything to keep the collection thread safe.","source":"If a collection is thread safe, the <xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A> property returns `true`, and the programmer does not have to do anything to keep the collection thread safe."},{"pos":[212,719],"content":"If, as is the case with the <xref:System.Windows.Forms.BaseCollection>, the <xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A> property returns `false`, then the <xref:System.Windows.Forms.BaseCollection.SyncRoot%2A> property returns an object that can be used with the C# `lock` keyword. Use the static <xref:System.Threading.Monitor.Enter%2A> and <xref:System.Threading.Monitor.Exit%2A> methods of the <xref:System.Threading.Monitor> class to manually lock and unlock the synchronization object.","nodes":[{"content":"If, as is the case with the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BaseCollection&gt;</ph>, the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A&gt;</ph> property returns <ph id=\"ph3\">`false`</ph>, then the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.BaseCollection.SyncRoot%2A&gt;</ph> property returns an object that can be used with the C# <ph id=\"ph5\">`lock`</ph> keyword.","pos":[0,298],"source":"If, as is the case with the <xref:System.Windows.Forms.BaseCollection>, the <xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A> property returns `false`, then the <xref:System.Windows.Forms.BaseCollection.SyncRoot%2A> property returns an object that can be used with the C# `lock` keyword."},{"content":"Use the static <ph id=\"ph1\">&lt;xref:System.Threading.Monitor.Enter%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Threading.Monitor.Exit%2A&gt;</ph> methods of the <ph id=\"ph3\">&lt;xref:System.Threading.Monitor&gt;</ph> class to manually lock and unlock the synchronization object.","pos":[299,507],"source":" Use the static <xref:System.Threading.Monitor.Enter%2A> and <xref:System.Threading.Monitor.Exit%2A> methods of the <xref:System.Threading.Monitor> class to manually lock and unlock the synchronization object."}]}],"pos":[11214,11938],"yaml":true,"extradata":"MT"},{"content":"This property always returns `false`.","nodes":[{"pos":[0,37],"content":"This property always returns <ph id=\"ph1\">`false`</ph>.","source":"This property always returns `false`."}],"pos":[12112,12150],"yaml":true},{"content":"Gets the list of elements contained in the <xref href=\"System.Windows.Forms.BaseCollection\"></xref> instance.","nodes":[{"pos":[0,109],"content":"Gets the list of elements contained in the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.BaseCollection\"&gt;&lt;/xref&gt;</ph> instance.","source":"Gets the list of elements contained in the <xref href=\"System.Windows.Forms.BaseCollection\"></xref> instance."}],"pos":[13194,13304],"yaml":true},{"content":"An <xref href=\"System.Collections.ArrayList\"></xref> containing the elements of the collection. This property returns `null` unless overridden in a derived class.","nodes":[{"pos":[0,162],"content":"An <xref href=\"System.Collections.ArrayList\"></xref> containing the elements of the collection. This property returns `null` unless overridden in a derived class.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.ArrayList\"&gt;&lt;/xref&gt;</ph> containing the elements of the collection.","pos":[0,95],"source":"An <xref href=\"System.Collections.ArrayList\"></xref> containing the elements of the collection."},{"content":"This property returns <ph id=\"ph1\">`null`</ph> unless overridden in a derived class.","pos":[96,162],"source":" This property returns `null` unless overridden in a derived class."}]}],"pos":[13460,13623],"yaml":true},{"content":"Gets an object that can be used to synchronize access to the <xref href=\"System.Windows.Forms.BaseCollection\"></xref>.","nodes":[{"pos":[0,118],"content":"Gets an object that can be used to synchronize access to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.BaseCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Gets an object that can be used to synchronize access to the <xref href=\"System.Windows.Forms.BaseCollection\"></xref>."}],"pos":[14616,14735],"yaml":true},{"content":"If, as is the case with the <xref:System.Windows.Forms.BaseCollection>, the <xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A> property returns `false`, then the <xref:System.Windows.Forms.BaseCollection.SyncRoot%2A> property returns an object that can be used with the C# `lock` keyword.","nodes":[{"pos":[0,298],"content":"If, as is the case with the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.BaseCollection&gt;</ph>, the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A&gt;</ph> property returns <ph id=\"ph3\">`false`</ph>, then the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.BaseCollection.SyncRoot%2A&gt;</ph> property returns an object that can be used with the C# <ph id=\"ph5\">`lock`</ph> keyword.","source":"If, as is the case with the <xref:System.Windows.Forms.BaseCollection>, the <xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A> property returns `false`, then the <xref:System.Windows.Forms.BaseCollection.SyncRoot%2A> property returns an object that can be used with the C# `lock` keyword."}],"pos":[14746,15045],"yaml":true,"extradata":"MT"},{"content":"An object that can be used to synchronize the <xref href=\"System.Windows.Forms.BaseCollection\"></xref>.","nodes":[{"pos":[0,103],"content":"An object that can be used to synchronize the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.BaseCollection\"&gt;&lt;/xref&gt;</ph>.","source":"An object that can be used to synchronize the <xref href=\"System.Windows.Forms.BaseCollection\"></xref>."}],"pos":[15214,15318],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.BaseCollection\n  commentId: T:System.Windows.Forms.BaseCollection\n  id: BaseCollection\n  children:\n  - System.Windows.Forms.BaseCollection.#ctor\n  - System.Windows.Forms.BaseCollection.CopyTo(System.Array,System.Int32)\n  - System.Windows.Forms.BaseCollection.Count\n  - System.Windows.Forms.BaseCollection.GetEnumerator\n  - System.Windows.Forms.BaseCollection.IsReadOnly\n  - System.Windows.Forms.BaseCollection.IsSynchronized\n  - System.Windows.Forms.BaseCollection.List\n  - System.Windows.Forms.BaseCollection.SyncRoot\n  langs:\n  - csharp\n  name: BaseCollection\n  nameWithType: BaseCollection\n  fullName: System.Windows.Forms.BaseCollection\n  type: Class\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Provides the base functionality for creating data-related collections in the <xref href=\"System.Windows.Forms\"></xref> namespace.\n  remarks: \"The <xref:System.Windows.Forms.BaseCollection> class is not intended for use by application developers. Application developers should use <xref:System.Collections.CollectionBase> instead.  \\n  \\n The <xref:System.Windows.Forms.BaseCollection> class implements the <xref:System.Collections.ICollection> interface.  \\n  \\n Classes that derive from the <xref:System.Windows.Forms.BaseCollection> class include:  \\n  \\n-   <xref:System.Windows.Forms.BindingsCollection>  \\n  \\n-   <xref:System.Windows.Forms.GridColumnStylesCollection>  \\n  \\n-   <xref:System.Windows.Forms.GridTableStylesCollection>\"\n  syntax:\n    content: 'public class BaseCollection : MarshalByRefObject, System.Collections.ICollection'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  derivedClasses:\n  - System.Windows.Forms.BindingsCollection\n  - System.Windows.Forms.DataGridViewCellCollection\n  - System.Windows.Forms.DataGridViewColumnCollection\n  - System.Windows.Forms.DataGridViewSelectedCellCollection\n  - System.Windows.Forms.DataGridViewSelectedColumnCollection\n  - System.Windows.Forms.DataGridViewSelectedRowCollection\n  - System.Windows.Forms.GridColumnStylesCollection\n  - System.Windows.Forms.GridTableStylesCollection\n  implements:\n  - System.Collections.ICollection\n  inheritedMembers:\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/BaseCollection.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.BaseCollection.#ctor\n  commentId: M:System.Windows.Forms.BaseCollection.#ctor\n  id: '#ctor'\n  parent: System.Windows.Forms.BaseCollection\n  langs:\n  - csharp\n  name: BaseCollection()\n  nameWithType: BaseCollection.BaseCollection()\n  fullName: BaseCollection.BaseCollection()\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.BaseCollection\"></xref> class.\n  syntax:\n    content: public BaseCollection ();\n    parameters: []\n  overload: System.Windows.Forms.BaseCollection.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/BaseCollection.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.BaseCollection.CopyTo(System.Array,System.Int32)\n  commentId: M:System.Windows.Forms.BaseCollection.CopyTo(System.Array,System.Int32)\n  id: CopyTo(System.Array,System.Int32)\n  parent: System.Windows.Forms.BaseCollection\n  langs:\n  - csharp\n  name: CopyTo(Array, Int32)\n  nameWithType: BaseCollection.CopyTo(Array, Int32)\n  fullName: BaseCollection.CopyTo(Array, Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Copies all the elements of the current one-dimensional <xref href=\"System.Array\"></xref> to the specified one-dimensional <xref href=\"System.Array\"></xref> starting at the specified destination <xref href=\"System.Array\"></xref> index.\n  syntax:\n    content: public void CopyTo (Array ar, int index);\n    parameters:\n    - id: ar\n      type: System.Array\n      description: The one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from the current `Array`.\n    - id: index\n      type: System.Int32\n      description: The zero-based relative index in <code>ar</code> at which copying begins.\n  overload: System.Windows.Forms.BaseCollection.CopyTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/BaseCollection.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.BaseCollection.Count\n  commentId: P:System.Windows.Forms.BaseCollection.Count\n  id: Count\n  parent: System.Windows.Forms.BaseCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: BaseCollection.Count\n  fullName: BaseCollection.Count\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the total number of elements in the collection.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public virtual int Count { get; }\n    return:\n      type: System.Int32\n      description: The total number of elements in the collection.\n  overload: System.Windows.Forms.BaseCollection.Count*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/BaseCollection.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.BaseCollection.GetEnumerator\n  commentId: M:System.Windows.Forms.BaseCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Windows.Forms.BaseCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: BaseCollection.GetEnumerator()\n  fullName: BaseCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the object that enables iterating through the members of the collection.\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An object that implements the <xref href=\"System.Collections.IEnumerator\"></xref> interface.\n  overload: System.Windows.Forms.BaseCollection.GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/BaseCollection.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.BaseCollection.IsReadOnly\n  commentId: P:System.Windows.Forms.BaseCollection.IsReadOnly\n  id: IsReadOnly\n  parent: System.Windows.Forms.BaseCollection\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: BaseCollection.IsReadOnly\n  fullName: BaseCollection.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the collection is read-only.\n  remarks: The collections that derive from the <xref:System.Windows.Forms.BaseCollection> class are always writable, which is why this property always returns `false`.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: This property is always `false`.\n  overload: System.Windows.Forms.BaseCollection.IsReadOnly*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/BaseCollection.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.BaseCollection.IsSynchronized\n  commentId: P:System.Windows.Forms.BaseCollection.IsSynchronized\n  id: IsSynchronized\n  parent: System.Windows.Forms.BaseCollection\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: BaseCollection.IsSynchronized\n  fullName: BaseCollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether access to the <xref href=\"System.Collections.ICollection\"></xref> is synchronized.\n  remarks: \"If a collection is thread safe, the <xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A> property returns `true`, and the programmer does not have to do anything to keep the collection thread safe.  \\n  \\n If, as is the case with the <xref:System.Windows.Forms.BaseCollection>, the <xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A> property returns `false`, then the <xref:System.Windows.Forms.BaseCollection.SyncRoot%2A> property returns an object that can be used with the C# `lock` keyword. Use the static <xref:System.Threading.Monitor.Enter%2A> and <xref:System.Threading.Monitor.Exit%2A> methods of the <xref:System.Threading.Monitor> class to manually lock and unlock the synchronization object.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: This property always returns `false`.\n  overload: System.Windows.Forms.BaseCollection.IsSynchronized*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/BaseCollection.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.BaseCollection.List\n  commentId: P:System.Windows.Forms.BaseCollection.List\n  id: List\n  parent: System.Windows.Forms.BaseCollection\n  langs:\n  - csharp\n  name: List\n  nameWithType: BaseCollection.List\n  fullName: BaseCollection.List\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the list of elements contained in the <xref href=\"System.Windows.Forms.BaseCollection\"></xref> instance.\n  syntax:\n    content: protected virtual System.Collections.ArrayList List { get; }\n    return:\n      type: System.Collections.ArrayList\n      description: An <xref href=\"System.Collections.ArrayList\"></xref> containing the elements of the collection. This property returns `null` unless overridden in a derived class.\n  overload: System.Windows.Forms.BaseCollection.List*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/BaseCollection.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.BaseCollection.SyncRoot\n  commentId: P:System.Windows.Forms.BaseCollection.SyncRoot\n  id: SyncRoot\n  parent: System.Windows.Forms.BaseCollection\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: BaseCollection.SyncRoot\n  fullName: BaseCollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets an object that can be used to synchronize access to the <xref href=\"System.Windows.Forms.BaseCollection\"></xref>.\n  remarks: If, as is the case with the <xref:System.Windows.Forms.BaseCollection>, the <xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A> property returns `false`, then the <xref:System.Windows.Forms.BaseCollection.SyncRoot%2A> property returns an object that can be used with the C# `lock` keyword.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: An object that can be used to synchronize the <xref href=\"System.Windows.Forms.BaseCollection\"></xref>.\n  overload: System.Windows.Forms.BaseCollection.SyncRoot*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/BaseCollection.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.MarshalByRefObject\n  parent: System\n  isExternal: false\n  name: MarshalByRefObject\n  nameWithType: MarshalByRefObject\n  fullName: System.MarshalByRefObject\n- uid: System.Windows.Forms.BaseCollection.#ctor\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: BaseCollection()\n  nameWithType: BaseCollection.BaseCollection()\n  fullName: BaseCollection.BaseCollection()\n- uid: System.Windows.Forms.BaseCollection.CopyTo(System.Array,System.Int32)\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: CopyTo(Array, Int32)\n  nameWithType: BaseCollection.CopyTo(Array, Int32)\n  fullName: BaseCollection.CopyTo(Array, Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Forms.BaseCollection.Count\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: Count\n  nameWithType: BaseCollection.Count\n  fullName: BaseCollection.Count\n- uid: System.Windows.Forms.BaseCollection.GetEnumerator\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: BaseCollection.GetEnumerator()\n  fullName: BaseCollection.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.Forms.BaseCollection.IsReadOnly\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: BaseCollection.IsReadOnly\n  fullName: BaseCollection.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.BaseCollection.IsSynchronized\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: BaseCollection.IsSynchronized\n  fullName: BaseCollection.IsSynchronized\n- uid: System.Windows.Forms.BaseCollection.List\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: List\n  nameWithType: BaseCollection.List\n  fullName: BaseCollection.List\n- uid: System.Collections.ArrayList\n  parent: System.Collections\n  isExternal: false\n  name: ArrayList\n  nameWithType: ArrayList\n  fullName: System.Collections.ArrayList\n- uid: System.Windows.Forms.BaseCollection.SyncRoot\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: BaseCollection.SyncRoot\n  fullName: BaseCollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Forms.BaseCollection.#ctor*\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: BaseCollection\n  nameWithType: BaseCollection.BaseCollection\n  fullName: BaseCollection.BaseCollection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/BaseCollection.xml\n- uid: System.Windows.Forms.BaseCollection.CopyTo*\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: BaseCollection.CopyTo\n  fullName: BaseCollection.CopyTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/BaseCollection.xml\n- uid: System.Windows.Forms.BaseCollection.Count*\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: Count\n  nameWithType: BaseCollection.Count\n  fullName: BaseCollection.Count\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/BaseCollection.xml\n- uid: System.Windows.Forms.BaseCollection.GetEnumerator*\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: BaseCollection.GetEnumerator\n  fullName: BaseCollection.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/BaseCollection.xml\n- uid: System.Windows.Forms.BaseCollection.IsReadOnly*\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: BaseCollection.IsReadOnly\n  fullName: BaseCollection.IsReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/BaseCollection.xml\n- uid: System.Windows.Forms.BaseCollection.IsSynchronized*\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: BaseCollection.IsSynchronized\n  fullName: BaseCollection.IsSynchronized\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/BaseCollection.xml\n- uid: System.Windows.Forms.BaseCollection.List*\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: List\n  nameWithType: BaseCollection.List\n  fullName: BaseCollection.List\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/BaseCollection.xml\n- uid: System.Windows.Forms.BaseCollection.SyncRoot*\n  parent: System.Windows.Forms.BaseCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: BaseCollection.SyncRoot\n  fullName: BaseCollection.SyncRoot\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/BaseCollection.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: CreateObjRef(Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  fullName: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: GetLifetimeService()\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  fullName: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n  fullName: MarshalByRefObject.InitializeLifetimeService()\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MemberwiseClone(Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  fullName: MarshalByRefObject.MemberwiseClone(Boolean)\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n"}