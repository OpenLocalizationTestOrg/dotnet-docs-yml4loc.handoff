{"nodes":[{"content":"Specifies a set of features to support on the <xref href=\"System.Xml.XmlWriter\"></xref> object created by the <xref href=\"System.Xml.XmlWriter.Create*\"></xref> method.","nodes":[{"pos":[0,167],"content":"Specifies a set of features to support on the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlWriter\"&gt;&lt;/xref&gt;</ph> object created by the <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlWriter.Create*\"&gt;&lt;/xref&gt;</ph> method.","source":"Specifies a set of features to support on the <xref href=\"System.Xml.XmlWriter\"></xref> object created by the <xref href=\"System.Xml.XmlWriter.Create*\"></xref> method."}],"pos":[1234,1402],"yaml":true},{"content":"The <xref:System.Xml.XmlWriter.Create%2A> method is the preferred mechanism for obtaining <xref:System.Xml.XmlWriter> instances. The <xref:System.Xml.XmlWriter.Create%2A> method uses the <xref:System.Xml.XmlWriterSettings> class to specify which features to implement in the <xref:System.Xml.XmlWriter> object that is created.  \n  \n> [!NOTE]\n>  If you're using the <xref:System.Xml.XmlWriter> object with the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method, you should use the <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> property to obtain an <xref:System.Xml.XmlWriterSettings> object with the correct settings. This ensures that the created <xref:System.Xml.XmlWriter> object has the correct output settings.  \n  \n The <xref:System.Xml.XmlWriterSettings> class provides properties that control data conformance and output format.  \n  \n For data conformance checks and auto-corrections, use these properties:  \n  \n|Property|Specifies|Value|Default|  \n|--------------|---------------|-----------|-------------|  \n|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|Whether to check that characters are in the legal XML character set, as defined by W3C.|`true` or `false`|`true`|  \n|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|Whether to check that output is a well-formed XML 1.0 document or fragment.|<xref:System.Xml.ConformanceLevel?displayProperty=fullName> (document-level), <xref:System.Xml.ConformanceLevel.Fragment> (fragment-level), or <xref:System.Xml.ConformanceLevel.Auto> (auto-detection)|<xref:System.Xml.ConformanceLevel?displayProperty=fullName> (document-level conformance)|  \n|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|Whether to add closing tags to all unclosed elements when the <xref:System.Xml.XmlWriter.Close%2A> method is called.|`true` or `false`|`true`|  \n  \n To specify output format, use these properties:  \n  \n|Property|Specifies|Value|Default|  \n|--------------|---------------|-----------|-------------|  \n|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|Text encoding to use.|<xref:System.Text.Encoding?displayProperty=fullName> value|<xref:System.Text.Encoding.UTF8?displayProperty=fullName>|  \n|<xref:System.Xml.XmlWriterSettings.Indent%2A>|Whether to indent elements|`true` or `false`|`false` (no indentation)|  \n|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Character string to use when indenting (used when <xref:System.Xml.XmlWriterSettings.Indent%2A> is set to `true`).|String|Two spaces|  \n|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|Character string to use for line breaks.|String|`\\r\\n` (carriage return, line feed)|  \n|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|How to handle newline characters.|<xref:System.Xml.NewLineHandling?displayProperty=fullName> value: <xref:System.Xml.NewLineHandling.Entitize> (normalize), <xref:System.Xml.NewLineHandling.Replace> (replace), or <xref:System.Xml.NewLineHandling.None> (leave unchanged)|<xref:System.Xml.NewLineHandling.Replace> (replace with characters specified by <xref:System.Xml.XmlWriterSettings.NewLineChars%2A>)|  \n|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|Whether to write attributes on individual lines (has no effect when <xref:System.Xml.XmlWriterSettings.Indent%2A> is `false`).|`true` or `false`|`false`|  \n|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|Whether to write an XML declaration.|`true` or `false`|`false`|","nodes":[{"pos":[0,326],"content":"The <xref:System.Xml.XmlWriter.Create%2A> method is the preferred mechanism for obtaining <xref:System.Xml.XmlWriter> instances. The <xref:System.Xml.XmlWriter.Create%2A> method uses the <xref:System.Xml.XmlWriterSettings> class to specify which features to implement in the <xref:System.Xml.XmlWriter> object that is created.","nodes":[{"content":"The <xref:System.Xml.XmlWriter.Create%2A> method is the preferred mechanism for obtaining <xref:System.Xml.XmlWriter> instances. The <xref:System.Xml.XmlWriter.Create%2A> method uses the <xref:System.Xml.XmlWriterSettings> class to specify which features to implement in the <xref:System.Xml.XmlWriter> object that is created.","pos":[0,326],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> method is the preferred mechanism for obtaining <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances.","pos":[0,128],"source":"The <xref:System.Xml.XmlWriter.Create%2A> method is the preferred mechanism for obtaining <xref:System.Xml.XmlWriter> instances."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> method uses the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to specify which features to implement in the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriter&gt;</ph> object that is created.","pos":[129,326],"source":" The <xref:System.Xml.XmlWriter.Create%2A> method uses the <xref:System.Xml.XmlWriterSettings> class to specify which features to implement in the <xref:System.Xml.XmlWriter> object that is created."}]}]},{"pos":[334,742],"content":"[!NOTE]\n If you're using the <xref:System.Xml.XmlWriter> object with the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method, you should use the <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> property to obtain an <xref:System.Xml.XmlWriterSettings> object with the correct settings. This ensures that the created <xref:System.Xml.XmlWriter> object has the correct output settings.","leadings":["","> "],"nodes":[{"content":" If you're using the <xref:System.Xml.XmlWriter> object with the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method, you should use the <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> property to obtain an <xref:System.Xml.XmlWriterSettings> object with the correct settings. This ensures that the created <xref:System.Xml.XmlWriter> object has the correct output settings.","pos":[8,406],"nodes":[{"content":"If you're using the <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> object with the <ph id=\"ph2\">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A&gt;</ph> method, you should use the <ph id=\"ph3\">&lt;xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A&gt;</ph> property to obtain an <ph id=\"ph4\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object with the correct settings.","pos":[1,300],"source":" If you're using the <xref:System.Xml.XmlWriter> object with the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method, you should use the <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> property to obtain an <xref:System.Xml.XmlWriterSettings> object with the correct settings."},{"content":"This ensures that the created <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> object has the correct output settings.","pos":[301,398],"source":" This ensures that the created <xref:System.Xml.XmlWriter> object has the correct output settings."}]}]},{"pos":[749,863],"content":"The <xref:System.Xml.XmlWriterSettings> class provides properties that control data conformance and output format.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class provides properties that control data conformance and output format.","pos":[0,114],"source":"The <xref:System.Xml.XmlWriterSettings> class provides properties that control data conformance and output format."}]},{"pos":[870,941],"content":"For data conformance checks and auto-corrections, use these properties:","nodes":[{"content":"For data conformance checks and auto-corrections, use these properties:","pos":[0,71]}]},{"pos":[948,956],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[957,966],"content":"Specifies","nodes":[{"content":"Specifies","pos":[0,9]}]},{"pos":[967,972],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[973,980],"content":"Default","nodes":[{"content":"Default","pos":[0,7]}]},{"pos":[1046,1100],"content":"<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>","nodes":[]},{"pos":[1101,1188],"content":"Whether to check that characters are in the legal XML character set, as defined by W3C.","nodes":[{"content":"Whether to check that characters are in the legal XML character set, as defined by W3C.","pos":[0,87]}]},{"pos":[1189,1206],"content":"<ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph>","source":"`true` or `false`"},{"pos":[1218,1273],"content":"<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>","nodes":[]},{"pos":[1274,1349],"content":"Whether to check that output is a well-formed XML 1.0 document or fragment.","nodes":[{"content":"Whether to check that output is a well-formed XML 1.0 document or fragment.","pos":[0,75]}]},{"pos":[1350,1549],"content":"<xref:System.Xml.ConformanceLevel?displayProperty=fullName> (document-level), <xref:System.Xml.ConformanceLevel.Fragment> (fragment-level), or <xref:System.Xml.ConformanceLevel.Auto> (auto-detection)","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.ConformanceLevel?displayProperty=fullName&gt;</ph> (document-level), <ph id=\"ph2\">&lt;xref:System.Xml.ConformanceLevel.Fragment&gt;</ph> (fragment-level), or <ph id=\"ph3\">&lt;xref:System.Xml.ConformanceLevel.Auto&gt;</ph> (auto-detection)","pos":[0,199],"source":"<xref:System.Xml.ConformanceLevel?displayProperty=fullName> (document-level), <xref:System.Xml.ConformanceLevel.Fragment> (fragment-level), or <xref:System.Xml.ConformanceLevel.Auto> (auto-detection)"}]},{"pos":[1550,1638],"content":"<xref:System.Xml.ConformanceLevel?displayProperty=fullName> (document-level conformance)","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.ConformanceLevel?displayProperty=fullName&gt;</ph> (document-level conformance)","pos":[0,88],"source":"<xref:System.Xml.ConformanceLevel?displayProperty=fullName> (document-level conformance)"}]},{"pos":[1643,1705],"content":"<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>","nodes":[]},{"pos":[1706,1822],"content":"Whether to add closing tags to all unclosed elements when the <xref:System.Xml.XmlWriter.Close%2A> method is called.","nodes":[{"content":"Whether to add closing tags to all unclosed elements when the <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> method is called.","pos":[0,116],"source":"Whether to add closing tags to all unclosed elements when the <xref:System.Xml.XmlWriter.Close%2A> method is called."}]},{"pos":[1823,1840],"content":"<ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph>","source":"`true` or `false`"},{"pos":[1855,1902],"content":"To specify output format, use these properties:","nodes":[{"content":"To specify output format, use these properties:","pos":[0,47]}]},{"pos":[1909,1917],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[1918,1927],"content":"Specifies","nodes":[{"content":"Specifies","pos":[0,9]}]},{"pos":[1928,1933],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[1934,1941],"content":"Default","nodes":[{"content":"Default","pos":[0,7]}]},{"pos":[2007,2054],"content":"<xref:System.Xml.XmlWriterSettings.Encoding%2A>","nodes":[]},{"pos":[2055,2076],"content":"Text encoding to use.","nodes":[{"content":"Text encoding to use.","pos":[0,21]}]},{"pos":[2077,2135],"content":"<xref:System.Text.Encoding?displayProperty=fullName> value","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Text.Encoding?displayProperty=fullName&gt;</ph> value","pos":[0,58],"source":"<xref:System.Text.Encoding?displayProperty=fullName> value"}]},{"pos":[2136,2193],"content":"<xref:System.Text.Encoding.UTF8?displayProperty=fullName>","nodes":[]},{"pos":[2198,2243],"content":"<xref:System.Xml.XmlWriterSettings.Indent%2A>","nodes":[]},{"pos":[2244,2270],"content":"Whether to indent elements","nodes":[{"content":"Whether to indent elements","pos":[0,26]}]},{"pos":[2271,2288],"content":"<ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph>","source":"`true` or `false`"},{"pos":[2289,2313],"content":"<ph id=\"ph1\">`false`</ph> (no indentation)","source":"`false` (no indentation)"},{"pos":[2318,2368],"content":"<xref:System.Xml.XmlWriterSettings.IndentChars%2A>","nodes":[]},{"pos":[2369,2483],"content":"Character string to use when indenting (used when <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriterSettings.Indent%2A&gt;</ph> is set to <ph id=\"ph2\">`true`</ph>).","source":"Character string to use when indenting (used when <xref:System.Xml.XmlWriterSettings.Indent%2A> is set to `true`)."},{"pos":[2484,2490],"content":"String","nodes":[{"content":"String","pos":[0,6]}]},{"pos":[2491,2501],"content":"Two spaces","nodes":[{"content":"Two spaces","pos":[0,10]}]},{"pos":[2506,2557],"content":"<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>","nodes":[]},{"pos":[2558,2598],"content":"Character string to use for line breaks.","nodes":[{"content":"Character string to use for line breaks.","pos":[0,40]}]},{"pos":[2599,2605],"content":"String","nodes":[{"content":"String","pos":[0,6]}]},{"pos":[2606,2641],"content":"<ph id=\"ph1\">`\\r\\n`</ph> (carriage return, line feed)","source":"`\\r\\n` (carriage return, line feed)"},{"pos":[2646,2700],"content":"<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>","nodes":[]},{"pos":[2701,2734],"content":"How to handle newline characters.","nodes":[{"content":"How to handle newline characters.","pos":[0,33]}]},{"pos":[2735,2969],"content":"<xref:System.Xml.NewLineHandling?displayProperty=fullName> value: <xref:System.Xml.NewLineHandling.Entitize> (normalize), <xref:System.Xml.NewLineHandling.Replace> (replace), or <xref:System.Xml.NewLineHandling.None> (leave unchanged)","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.NewLineHandling?displayProperty=fullName&gt;</ph> value: <ph id=\"ph2\">&lt;xref:System.Xml.NewLineHandling.Entitize&gt;</ph> (normalize), <ph id=\"ph3\">&lt;xref:System.Xml.NewLineHandling.Replace&gt;</ph> (replace), or <ph id=\"ph4\">&lt;xref:System.Xml.NewLineHandling.None&gt;</ph> (leave unchanged)","pos":[0,234],"source":"<xref:System.Xml.NewLineHandling?displayProperty=fullName> value: <xref:System.Xml.NewLineHandling.Entitize> (normalize), <xref:System.Xml.NewLineHandling.Replace> (replace), or <xref:System.Xml.NewLineHandling.None> (leave unchanged)"}]},{"pos":[2970,3102],"content":"<xref:System.Xml.NewLineHandling.Replace> (replace with characters specified by <xref:System.Xml.XmlWriterSettings.NewLineChars%2A>)","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.NewLineHandling.Replace&gt;</ph> (replace with characters specified by <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriterSettings.NewLineChars%2A&gt;</ph>)","pos":[0,132],"source":"<xref:System.Xml.NewLineHandling.Replace> (replace with characters specified by <xref:System.Xml.XmlWriterSettings.NewLineChars%2A>)"}]},{"pos":[3107,3165],"content":"<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>","nodes":[]},{"pos":[3166,3292],"content":"Whether to write attributes on individual lines (has no effect when <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriterSettings.Indent%2A&gt;</ph> is <ph id=\"ph2\">`false`</ph>).","source":"Whether to write attributes on individual lines (has no effect when <xref:System.Xml.XmlWriterSettings.Indent%2A> is `false`)."},{"pos":[3293,3310],"content":"<ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph>","source":"`true` or `false`"},{"pos":[3323,3380],"content":"<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>","nodes":[]},{"pos":[3381,3417],"content":"Whether to write an XML declaration.","nodes":[{"content":"Whether to write an XML declaration.","pos":[0,36]}]},{"pos":[3418,3435],"content":"<ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph>","source":"`true` or `false`"}],"pos":[1413,4887],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Xml.XmlWriterSettings\"></xref> class.","nodes":[{"pos":[0,90],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlWriterSettings\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Xml.XmlWriterSettings\"></xref> class."}],"pos":[7394,7485],"yaml":true},{"content":"The following table shows initial property values for an instance of <xref:System.Xml.XmlWriterSettings>.  \n  \n|Property|Initial Value|  \n|--------------|-------------------|  \n|<xref:System.Xml.XmlWriterSettings.Async%2A>|`false`.|  \n|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`.|  \n|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`.|  \n|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  \n|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|`Encoding.UTF8`.|  \n|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`.|  \n|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Two spaces.|  \n|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\\r\\n` (carriage return, new line).|  \n|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace>.|  \n|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`.|  \n|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`.|  \n|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`.|","nodes":[{"pos":[0,105],"content":"The following table shows initial property values for an instance of <xref:System.Xml.XmlWriterSettings>.","nodes":[{"content":"The following table shows initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph>.","pos":[0,105],"source":"The following table shows initial property values for an instance of <xref:System.Xml.XmlWriterSettings>."}]},{"pos":[112,120],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[121,134],"content":"Initial Value","nodes":[{"content":"Initial Value","pos":[0,13]}]},{"pos":[178,222],"content":"<xref:System.Xml.XmlWriterSettings.Async%2A>","nodes":[]},{"pos":[223,231],"content":"<ph id=\"ph1\">`false`</ph>.","source":"`false`."},{"pos":[236,290],"content":"<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>","nodes":[]},{"pos":[291,298],"content":"<ph id=\"ph1\">`true`</ph>.","source":"`true`."},{"pos":[303,353],"content":"<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>","nodes":[]},{"pos":[354,362],"content":"<ph id=\"ph1\">`false`</ph>.","source":"`false`."},{"pos":[367,422],"content":"<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>","nodes":[]},{"pos":[423,467],"content":"<xref:System.Xml.ConformanceLevel.Document>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.ConformanceLevel.Document&gt;</ph>.","pos":[0,44],"source":"<xref:System.Xml.ConformanceLevel.Document>."}]},{"pos":[472,519],"content":"<xref:System.Xml.XmlWriterSettings.Encoding%2A>","nodes":[]},{"pos":[520,536],"content":"<ph id=\"ph1\">`Encoding.UTF8`</ph>.","source":"`Encoding.UTF8`."},{"pos":[541,586],"content":"<xref:System.Xml.XmlWriterSettings.Indent%2A>","nodes":[]},{"pos":[587,595],"content":"<ph id=\"ph1\">`false`</ph>.","source":"`false`."},{"pos":[600,650],"content":"<xref:System.Xml.XmlWriterSettings.IndentChars%2A>","nodes":[]},{"pos":[651,662],"content":"Two spaces.","nodes":[{"content":"Two spaces.","pos":[0,11]}]},{"pos":[667,718],"content":"<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>","nodes":[]},{"pos":[719,754],"content":"<ph id=\"ph1\">`\\r\\n`</ph> (carriage return, new line).","source":"`\\r\\n` (carriage return, new line)."},{"pos":[759,813],"content":"<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>","nodes":[]},{"pos":[814,856],"content":"<xref:System.Xml.NewLineHandling.Replace>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.NewLineHandling.Replace&gt;</ph>.","pos":[0,42],"source":"<xref:System.Xml.NewLineHandling.Replace>."}]},{"pos":[861,919],"content":"<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>","nodes":[]},{"pos":[920,928],"content":"<ph id=\"ph1\">`false`</ph>.","source":"`false`."},{"pos":[933,990],"content":"<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>","nodes":[]},{"pos":[991,999],"content":"<ph id=\"ph1\">`false`</ph>.","source":"`false`."},{"pos":[1004,1066],"content":"<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>","nodes":[]},{"pos":[1067,1074],"content":"<ph id=\"ph1\">`true`</ph>.","source":"`true`."}],"pos":[7496,8591],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a value that indicates whether asynchronous <xref href=\"System.Xml.XmlWriter\"></xref> methods can be used on a particular <xref href=\"System.Xml.XmlWriter\"></xref> instance.","nodes":[{"pos":[0,186],"content":"Gets or sets a value that indicates whether asynchronous <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlWriter\"&gt;&lt;/xref&gt;</ph> methods can be used on a particular <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlWriter\"&gt;&lt;/xref&gt;</ph> instance.","source":"Gets or sets a value that indicates whether asynchronous <xref href=\"System.Xml.XmlWriter\"></xref> methods can be used on a particular <xref href=\"System.Xml.XmlWriter\"></xref> instance."}],"pos":[10536,10723],"yaml":true},{"content":"You must set this value to `true` when you create a new <xref:System.Xml.XmlWriter> instance if you want to use asynchronous <xref:System.Xml.XmlWriter> methods on that instance. After the <xref:System.Xml.XmlWriter> instance is created, the <xref:System.Xml.XmlWriterSettings.Async%2A> property is read-only. The default value of this property is `false`.  \n  \n This flag is ignored by the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> overload. This means that if you create a new <xref:System.Xml.XmlWriter> based on an existing <xref:System.Xml.XmlWriter>, the async behavior depends on the input <xref:System.Xml.XmlWriter>, and you cannot use the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to change the async behavior.","nodes":[{"pos":[0,356],"content":"You must set this value to `true` when you create a new <xref:System.Xml.XmlWriter> instance if you want to use asynchronous <xref:System.Xml.XmlWriter> methods on that instance. After the <xref:System.Xml.XmlWriter> instance is created, the <xref:System.Xml.XmlWriterSettings.Async%2A> property is read-only. The default value of this property is `false`.","nodes":[{"content":"You must set this value to <ph id=\"ph1\">`true`</ph> when you create a new <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance if you want to use asynchronous <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriter&gt;</ph> methods on that instance.","pos":[0,178],"source":"You must set this value to `true` when you create a new <xref:System.Xml.XmlWriter> instance if you want to use asynchronous <xref:System.Xml.XmlWriter> methods on that instance."},{"content":"After the <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance is created, the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> property is read-only.","pos":[179,309],"source":" After the <xref:System.Xml.XmlWriter> instance is created, the <xref:System.Xml.XmlWriterSettings.Async%2A> property is read-only."},{"content":"The default value of this property is <ph id=\"ph1\">`false`</ph>.","pos":[310,356],"source":" The default value of this property is `false`."}]},{"pos":[363,749],"content":"This flag is ignored by the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> overload. This means that if you create a new <xref:System.Xml.XmlWriter> based on an existing <xref:System.Xml.XmlWriter>, the async behavior depends on the input <xref:System.Xml.XmlWriter>, and you cannot use the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to change the async behavior.","nodes":[{"content":"This flag is ignored by the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> overload. This means that if you create a new <xref:System.Xml.XmlWriter> based on an existing <xref:System.Xml.XmlWriter>, the async behavior depends on the input <xref:System.Xml.XmlWriter>, and you cannot use the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to change the async behavior.","pos":[0,386],"nodes":[{"content":"This flag is ignored by the <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> overload.","pos":[0,100],"source":"This flag is ignored by the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> overload."},{"content":"This means that if you create a new <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> based on an existing <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter&gt;</ph>, the async behavior depends on the input <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriter&gt;</ph>, and you cannot use the <ph id=\"ph4\">&lt;xref:System.Xml.XmlWriterSettings.Async%2A&gt;</ph> flag to change the async behavior.","pos":[101,386],"source":" This means that if you create a new <xref:System.Xml.XmlWriter> based on an existing <xref:System.Xml.XmlWriter>, the async behavior depends on the input <xref:System.Xml.XmlWriter>, and you cannot use the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to change the async behavior."}]}]}],"pos":[10734,11488],"yaml":true,"extradata":"MT"},{"content":"`true` if asynchronous methods can be used; otherwise, `false`.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">`true`</ph> if asynchronous methods can be used; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if asynchronous methods can be used; otherwise, `false`."}],"pos":[11601,11667],"yaml":true},{"content":"Gets or sets a value that indicates whether the XML writer should check to ensure that all characters in the document conform to the \"2.2 Characters\" section of the W3C [XML 1.0 Recommendation](http://www.w3.org/TR/REC-xml/#charsets).","nodes":[{"pos":[0,234],"content":"Gets or sets a value that indicates whether the XML writer should check to ensure that all characters in the document conform to the \"2.2 Characters\" section of the W3C <bpt id=\"p1\">[</bpt>XML 1.0 Recommendation<ept id=\"p1\">](http://www.w3.org/TR/REC-xml/#charsets)</ept>.","source":"Gets or sets a value that indicates whether the XML writer should check to ensure that all characters in the document conform to the \"2.2 Characters\" section of the W3C [XML 1.0 Recommendation](http://www.w3.org/TR/REC-xml/#charsets)."}],"pos":[13196,13431],"yaml":true},{"content":"If the <xref:System.Xml.XmlWriter> object supports character checking, it throws an exception if any characters are outside the range of legal XML characters specified by the \"2.2 Characters\" section of the W3C [XML 1.0 Recommendation](http://www.w3.org/TR/REC-xml/#charsets).  \n  \n Character checking does not include checking for illegal characters in XML names or checking that all XML names are valid. These checks are part of conformance checking and are always performed.","nodes":[{"pos":[0,276],"content":"If the <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> object supports character checking, it throws an exception if any characters are outside the range of legal XML characters specified by the \"2.2 Characters\" section of the W3C <bpt id=\"p1\">[</bpt>XML 1.0 Recommendation<ept id=\"p1\">](http://www.w3.org/TR/REC-xml/#charsets)</ept>.","source":"If the <xref:System.Xml.XmlWriter> object supports character checking, it throws an exception if any characters are outside the range of legal XML characters specified by the \"2.2 Characters\" section of the W3C [XML 1.0 Recommendation](http://www.w3.org/TR/REC-xml/#charsets)."},{"pos":[283,477],"content":"Character checking does not include checking for illegal characters in XML names or checking that all XML names are valid. These checks are part of conformance checking and are always performed.","nodes":[{"content":"Character checking does not include checking for illegal characters in XML names or checking that all XML names are valid. These checks are part of conformance checking and are always performed.","pos":[0,194],"nodes":[{"content":"Character checking does not include checking for illegal characters in XML names or checking that all XML names are valid.","pos":[0,122]},{"content":"These checks are part of conformance checking and are always performed.","pos":[123,194]}]}]}],"pos":[13442,13926],"yaml":true,"extradata":"MT"},{"content":"`true` to do character checking; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,75],"content":"`true` to do character checking; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to do character checking; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,52],"source":"`true` to do character checking; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[53,75],"source":" The default is `true`."}]}],"pos":[14049,14127],"yaml":true},{"content":"Creates a copy of the <xref href=\"System.Xml.XmlWriterSettings\"></xref> instance.","nodes":[{"pos":[0,81],"content":"Creates a copy of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlWriterSettings\"&gt;&lt;/xref&gt;</ph> instance.","source":"Creates a copy of the <xref href=\"System.Xml.XmlWriterSettings\"></xref> instance."}],"pos":[15610,15692],"yaml":true},{"content":"The cloned <xref:System.Xml.XmlWriterSettings> object can be modified without affecting the settings on the original object.","nodes":[{"pos":[0,124],"content":"The cloned <xref:System.Xml.XmlWriterSettings> object can be modified without affecting the settings on the original object.","nodes":[{"content":"The cloned <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object can be modified without affecting the settings on the original object.","pos":[0,124],"source":"The cloned <xref:System.Xml.XmlWriterSettings> object can be modified without affecting the settings on the original object."}]}],"pos":[15703,15828],"yaml":true,"extradata":"MT"},{"content":"The cloned <xref href=\"System.Xml.XmlWriterSettings\"></xref> object.","nodes":[{"pos":[0,68],"content":"The cloned <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlWriterSettings\"&gt;&lt;/xref&gt;</ph> object.","source":"The cloned <xref href=\"System.Xml.XmlWriterSettings\"></xref> object."}],"pos":[15988,16057],"yaml":true},{"content":"Gets or sets a value indicating whether the <xref href=\"System.Xml.XmlWriter\"></xref> should also close the underlying stream or <xref href=\"System.IO.TextWriter\"></xref> when the <xref href=\"System.Xml.XmlWriter.Close\"></xref> method is called.","nodes":[{"pos":[0,245],"content":"Gets or sets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlWriter\"&gt;&lt;/xref&gt;</ph> should also close the underlying stream or <ph id=\"ph2\">&lt;xref href=\"System.IO.TextWriter\"&gt;&lt;/xref&gt;</ph> when the <ph id=\"ph3\">&lt;xref href=\"System.Xml.XmlWriter.Close\"&gt;&lt;/xref&gt;</ph> method is called.","source":"Gets or sets a value indicating whether the <xref href=\"System.Xml.XmlWriter\"></xref> should also close the underlying stream or <xref href=\"System.IO.TextWriter\"></xref> when the <xref href=\"System.Xml.XmlWriter.Close\"></xref> method is called."}],"pos":[17562,17808],"yaml":true},{"content":"This setting is useful when you wish to write XML to a stream, and then add extra information to the end of the stream after the <xref:System.Xml.XmlWriter> has finished writing.  \n  \n This property only applies to <xref:System.Xml.XmlWriter> instances that output XML content to a stream or <xref:System.IO.TextWriter>; otherwise, this setting is ignored.","nodes":[{"pos":[0,178],"content":"This setting is useful when you wish to write XML to a stream, and then add extra information to the end of the stream after the <xref:System.Xml.XmlWriter> has finished writing.","nodes":[{"content":"This setting is useful when you wish to write XML to a stream, and then add extra information to the end of the stream after the <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> has finished writing.","pos":[0,178],"source":"This setting is useful when you wish to write XML to a stream, and then add extra information to the end of the stream after the <xref:System.Xml.XmlWriter> has finished writing."}]},{"pos":[185,356],"content":"This property only applies to <xref:System.Xml.XmlWriter> instances that output XML content to a stream or <xref:System.IO.TextWriter>; otherwise, this setting is ignored.","nodes":[{"content":"This property only applies to <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances that output XML content to a stream or <ph id=\"ph2\">&lt;xref:System.IO.TextWriter&gt;</ph>; otherwise, this setting is ignored.","pos":[0,171],"source":"This property only applies to <xref:System.Xml.XmlWriter> instances that output XML content to a stream or <xref:System.IO.TextWriter>; otherwise, this setting is ignored."}]}],"pos":[17819,18180],"yaml":true,"extradata":"MT"},{"content":"`true` to also close the underlying stream or <xref href=\"System.IO.TextWriter\"></xref>; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,132],"content":"`true` to also close the underlying stream or <xref href=\"System.IO.TextWriter\"></xref>; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to also close the underlying stream or <ph id=\"ph2\">&lt;xref href=\"System.IO.TextWriter\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","pos":[0,108],"source":"`true` to also close the underlying stream or <xref href=\"System.IO.TextWriter\"></xref>; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[109,132],"source":" The default is `false`."}]}],"pos":[18678,18813],"yaml":true},{"content":"Gets or sets the level of conformance that the XML writer checks the XML output for.","nodes":[{"pos":[0,84],"content":"Gets or sets the level of conformance that the XML writer checks the XML output for.","nodes":[{"content":"Gets or sets the level of conformance that the XML writer checks the XML output for.","pos":[0,84]}]}],"pos":[20354,20439],"yaml":true},{"content":"The <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=fullName> property configures the XML writer to check and guarantee that the stream being written complies with a certain set of rules. The XML data can be checked to see that it conforms to the rules for a well-formed XML 1.0 document or a document fragment. The following table describes the three settings. The default is document-level conformance.  \n  \n|Setting|Description|  \n|-------------|-----------------|  \n|<xref:System.Xml.ConformanceLevel.Document>|Ensures that the XML output conforms to the [rules for a well-formed XML 1.0 document](http://www.w3.org/TR/REC-xml/#sec-well-formed) and can be processed by any conforming processor.<br /><br /> The document conformance checks include most of the fragment-level checks and also ensure the following:<br /><br /> -   The top-level item doesn't have any nodes other than XML Declaration, DTD, element, comment, white space, or processing instruction.<br />-   The XML data has one and only one top-level element node.<br /><br /> The XML writer doesn't parse DTD information that is written. The user is responsible for ensuring that the DTD is well-formed.|  \n|<xref:System.Xml.ConformanceLevel.Fragment>|Ensures that the XML output conforms to the [rules for a well-formed XML 1.0 document fragment](http://www.w3.org/TR/REC-xml/#wf-entities).<br /><br /> This setting accepts XML data that has multiple root elements or text nodes at the top level. This level of checking ensures that any processor can consume the stream being read as an XML 1.0 external parsed entity.<br /><br /> DTD information isn't allowed in document fragments.|  \n|<xref:System.Xml.ConformanceLevel.Auto>|Specifies that the XML writer should determine the level of conformance checking based on the incoming data. This setting can be useful when you don't know whether the generated XML will be a well-formed XML document or a fragment.<br /><br /> Document conformance checking is applied in the following cases:<br /><br /> -   If the <xref:System.Xml.XmlWriter.WriteStartDocument%2A> method is called.<br />-   If DTD information is written.<br /><br /> Fragment conformance checking is applied if the XML data contains one of these:<br /><br /> -   Text, CDATA, or EntityReference node at the root level.<br />-   More than one element at the root level.<br />-   No element at the root level.<br /><br /> An <xref:System.Xml.XmlException> is thrown if there is a conflict, such as when you try to write a text node and a DTD at the root level.<br /><br /> If you are wrapping another <xref:System.Xml.XmlWriter> object, the outer object doesn't do any additional conformance checking; this is left to the underlying object.|  \n  \n If the XML writer detects any information that would violate the specified level of conformance, it throws an exception. In some cases, the XML writer automatically corrects the conformance error. For example, the writer closes an unclosed attribute without throwing an exception. The following table shows how various conformance violations are handled in each setting.  \n  \n|Condition|<xref:System.Xml.ConformanceLevel.Document>|<xref:System.Xml.ConformanceLevel.Fragment>|<xref:System.Xml.ConformanceLevel.Auto>|  \n|---------------|---------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|  \n|DTD information is found.|Not a violation for this setting. However, the XML writer doesn't check the DTD; the user must ensure that the DTD is well-formed.|<xref:System.Xml.XmlException> is thrown.|Document conformance checking is applied.|  \n|<xref:System.Xml.XmlWriter.WriteStartDocument%2A> is called.|Not considered a violation for this setting.|<xref:System.Xml.XmlException> is thrown.|Document conformance checking is applied.|  \n|<xref:System.Xml.XmlWriter.WriteStartDocument%2A> is called multiple times.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|  \n|A text value appears at the top level (not below an element or attribute node).|<xref:System.Xml.XmlException> is thrown.|Not considered a violation.|Fragment conformance checking is applied.|  \n|Multiple elements or no elements appear at the top level.|<xref:System.Xml.XmlException> is thrown.|Not considered a violation.|Fragment conformance checking is applied.|  \n|Top-level item is white space.|Not considered a violation.|Not considered a violation.|Not considered a violation.|  \n|<xref:System.Xml.XmlWriter.WriteEndAttribute%2A> isn't called to end an attribute node.|Fixed by XML writer.|Fixed by XML writer.|Fixed by XML writer.|  \n|The XML writer is in an improperly nested state (for example, a <xref:System.Xml.XmlWriter.WriteStartElement%2A> call is followed by a <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>).|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|  \n|Top-level item is an attribute.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|  \n|Multiple, contiguous text nodes are found.|Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.|Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.|Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.|  \n|The same namespace prefix is declared twice in an element.|The XML writer generates a new prefix for the second namespace.|The XML writer generates a new prefix for the second namespace.|The XML writer generates a new prefix for the second namespace.|  \n|<xref:System.Xml.XmlWriter.WriteStartElement%2A> specifies a prefix and a namespace that isn't declared within that scope, or the prefix is associated with a different namespace.|The XML writer writes the necessary namespace node.|The XML writer writes the necessary namespace node.|The XML writer writes the necessary namespace node.|  \n|<xref:System.Xml.XmlWriter.WriteStartAttribute%2A> specifies a prefix and a namespace that isn't declared within that scope.|The XML writer writes the necessary namespace node.|The XML writer writes the necessary namespace node.|The XML writer writes the necessary namespace node.|  \n|<xref:System.Xml.XmlWriter.WriteStartAttribute%2A> specifies a prefix and a namespace, but the prefix is associated with a different in-scope namespace.|The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.|The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.|The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.|  \n|<xref:System.Xml.XmlWriter.WriteQualifiedName%2A> is used to write element content by using a namespace that doesn't exist within the scope.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|  \n|<xref:System.Xml.XmlWriter.WriteQualifiedName%2A> is used to write attribute content by using a namespace that doesn't exist within the scope.|The XML writer writes the necessary namespace declaration.|The XML writer writes the necessary namespace declaration.|The XML writer writes the necessary namespace declaration.|  \n|The `xml:space` attribute doesn't contain a valid value.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|  \n|An invalid name is encountered.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|  \n|The `xml` prefix isn't matched to a URI.|The XML writer doesn't check for this type of violation.|The XML writer doesn't check for this type of violation.|The XML writer doesn't check for this type of violation.|  \n|The `xml` prefix isn't matched to the http://www.w3.org/XML/1998/namespace URI.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|  \n|The `xmlns` prefix or local name isn't matched to a URI.|The XML writer doesn't check for this type of violation.|The XML writer doesn't check for this type of violation.|The XML writer doesn't check for this type of violation.|  \n|The `xmlns` prefix or local name isn't matched to the http://www.w3.org/2000/xmlns URI.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|","nodes":[{"pos":[0,427],"content":"The <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=fullName> property configures the XML writer to check and guarantee that the stream being written complies with a certain set of rules. The XML data can be checked to see that it conforms to the rules for a well-formed XML 1.0 document or a document fragment. The following table describes the three settings. The default is document-level conformance.","nodes":[{"content":"The <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=fullName> property configures the XML writer to check and guarantee that the stream being written complies with a certain set of rules. The XML data can be checked to see that it conforms to the rules for a well-formed XML 1.0 document or a document fragment. The following table describes the three settings. The default is document-level conformance.","pos":[0,427],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=fullName&gt;</ph> property configures the XML writer to check and guarantee that the stream being written complies with a certain set of rules.","pos":[0,210],"source":"The <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=fullName> property configures the XML writer to check and guarantee that the stream being written complies with a certain set of rules."},{"content":"The XML data can be checked to see that it conforms to the rules for a well-formed XML 1.0 document or a document fragment.","pos":[211,334]},{"content":"The following table describes the three settings.","pos":[335,384]},{"content":"The default is document-level conformance.","pos":[385,427]}]}]},{"pos":[434,441],"content":"Setting","nodes":[{"content":"Setting","pos":[0,7]}]},{"pos":[442,453],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[494,537],"content":"<xref:System.Xml.ConformanceLevel.Document>","nodes":[]},{"pos":[538,1194],"content":"Ensures that the XML output conforms to the [rules for a well-formed XML 1.0 document](http://www.w3.org/TR/REC-xml/#sec-well-formed) and can be processed by any conforming processor.<br /><br /> The document conformance checks include most of the fragment-level checks and also ensure the following:<br /><br /> -   The top-level item doesn't have any nodes other than XML Declaration, DTD, element, comment, white space, or processing instruction.<br />-   The XML data has one and only one top-level element node.<br /><br /> The XML writer doesn't parse DTD information that is written. The user is responsible for ensuring that the DTD is well-formed.","nodes":[{"content":"Ensures that the XML output conforms to the <bpt id=\"p1\">[</bpt>rules for a well-formed XML 1.0 document<ept id=\"p1\">](http://www.w3.org/TR/REC-xml/#sec-well-formed)</ept> and can be processed by any conforming processor.","pos":[0,183],"source":"Ensures that the XML output conforms to the [rules for a well-formed XML 1.0 document](http://www.w3.org/TR/REC-xml/#sec-well-formed) and can be processed by any conforming processor."},{"content":"The document conformance checks include most of the fragment-level checks and also ensure the following:","pos":[196,300]},{"content":"-   The top-level item doesn't have any nodes other than XML Declaration, DTD, element, comment, white space, or processing instruction.","pos":[313,449]},{"content":"-   The XML data has one and only one top-level element node.","pos":[455,516]},{"content":" The XML writer doesn't parse DTD information that is written. The user is responsible for ensuring that the DTD is well-formed.","pos":[528,656],"nodes":[{"content":"The XML writer doesn't parse DTD information that is written.","pos":[1,62]},{"content":"The user is responsible for ensuring that the DTD is well-formed.","pos":[63,128]}]}]},{"pos":[1199,1242],"content":"<xref:System.Xml.ConformanceLevel.Fragment>","nodes":[]},{"pos":[1243,1675],"content":"Ensures that the XML output conforms to the [rules for a well-formed XML 1.0 document fragment](http://www.w3.org/TR/REC-xml/#wf-entities).<br /><br /> This setting accepts XML data that has multiple root elements or text nodes at the top level. This level of checking ensures that any processor can consume the stream being read as an XML 1.0 external parsed entity.<br /><br /> DTD information isn't allowed in document fragments.","nodes":[{"content":"Ensures that the XML output conforms to the <bpt id=\"p1\">[</bpt>rules for a well-formed XML 1.0 document fragment<ept id=\"p1\">](http://www.w3.org/TR/REC-xml/#wf-entities)</ept>.","pos":[0,139],"source":"Ensures that the XML output conforms to the [rules for a well-formed XML 1.0 document fragment](http://www.w3.org/TR/REC-xml/#wf-entities)."},{"content":" This setting accepts XML data that has multiple root elements or text nodes at the top level. This level of checking ensures that any processor can consume the stream being read as an XML 1.0 external parsed entity.","pos":[151,367],"nodes":[{"content":"This setting accepts XML data that has multiple root elements or text nodes at the top level.","pos":[1,94]},{"content":"This level of checking ensures that any processor can consume the stream being read as an XML 1.0 external parsed entity.","pos":[95,216]}]},{"content":"DTD information isn't allowed in document fragments.","pos":[380,432]}]},{"pos":[1680,1719],"content":"<xref:System.Xml.ConformanceLevel.Auto>","nodes":[]},{"pos":[1720,2743],"content":"Specifies that the XML writer should determine the level of conformance checking based on the incoming data. This setting can be useful when you don't know whether the generated XML will be a well-formed XML document or a fragment.<br /><br /> Document conformance checking is applied in the following cases:<br /><br /> -   If the <xref:System.Xml.XmlWriter.WriteStartDocument%2A> method is called.<br />-   If DTD information is written.<br /><br /> Fragment conformance checking is applied if the XML data contains one of these:<br /><br /> -   Text, CDATA, or EntityReference node at the root level.<br />-   More than one element at the root level.<br />-   No element at the root level.<br /><br /> An <xref:System.Xml.XmlException> is thrown if there is a conflict, such as when you try to write a text node and a DTD at the root level.<br /><br /> If you are wrapping another <xref:System.Xml.XmlWriter> object, the outer object doesn't do any additional conformance checking; this is left to the underlying object.","nodes":[{"content":"Specifies that the XML writer should determine the level of conformance checking based on the incoming data. This setting can be useful when you don't know whether the generated XML will be a well-formed XML document or a fragment.","pos":[0,231],"nodes":[{"content":"Specifies that the XML writer should determine the level of conformance checking based on the incoming data.","pos":[0,108]},{"content":"This setting can be useful when you don't know whether the generated XML will be a well-formed XML document or a fragment.","pos":[109,231]}]},{"content":"Document conformance checking is applied in the following cases:","pos":[244,308]},{"content":"-   If the <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter.WriteStartDocument%2A&gt;</ph> method is called.","pos":[321,399],"source":"-   If the <xref:System.Xml.XmlWriter.WriteStartDocument%2A> method is called."},{"content":"-   If DTD information is written.","pos":[405,439]},{"content":"Fragment conformance checking is applied if the XML data contains one of these:","pos":[452,531]},{"content":"-   Text, CDATA, or EntityReference node at the root level.","pos":[544,603]},{"content":"-   More than one element at the root level.","pos":[609,653]},{"content":"-   No element at the root level.","pos":[659,692]},{"content":"An <ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown if there is a conflict, such as when you try to write a text node and a DTD at the root level.","pos":[705,843],"source":"An <xref:System.Xml.XmlException> is thrown if there is a conflict, such as when you try to write a text node and a DTD at the root level."},{"content":"If you are wrapping another <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> object, the outer object doesn't do any additional conformance checking; this is left to the underlying object.","pos":[856,1023],"source":"If you are wrapping another <xref:System.Xml.XmlWriter> object, the outer object doesn't do any additional conformance checking; this is left to the underlying object."}]},{"pos":[2751,3121],"content":"If the XML writer detects any information that would violate the specified level of conformance, it throws an exception. In some cases, the XML writer automatically corrects the conformance error. For example, the writer closes an unclosed attribute without throwing an exception. The following table shows how various conformance violations are handled in each setting.","nodes":[{"content":"If the XML writer detects any information that would violate the specified level of conformance, it throws an exception. In some cases, the XML writer automatically corrects the conformance error. For example, the writer closes an unclosed attribute without throwing an exception. The following table shows how various conformance violations are handled in each setting.","pos":[0,370],"nodes":[{"content":"If the XML writer detects any information that would violate the specified level of conformance, it throws an exception.","pos":[0,120]},{"content":"In some cases, the XML writer automatically corrects the conformance error.","pos":[121,196]},{"content":"For example, the writer closes an unclosed attribute without throwing an exception.","pos":[197,280]},{"content":"The following table shows how various conformance violations are handled in each setting.","pos":[281,370]}]}]},{"pos":[3128,3137],"content":"Condition","nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[3138,3181],"content":"<xref:System.Xml.ConformanceLevel.Document>","nodes":[]},{"pos":[3182,3225],"content":"<xref:System.Xml.ConformanceLevel.Fragment>","nodes":[]},{"pos":[3226,3265],"content":"<xref:System.Xml.ConformanceLevel.Auto>","nodes":[]},{"pos":[3730,3755],"content":"DTD information is found.","nodes":[{"content":"DTD information is found.","pos":[0,25]}]},{"pos":[3756,3886],"content":"Not a violation for this setting. However, the XML writer doesn't check the DTD; the user must ensure that the DTD is well-formed.","nodes":[{"content":"Not a violation for this setting. However, the XML writer doesn't check the DTD; the user must ensure that the DTD is well-formed.","pos":[0,130],"nodes":[{"content":"Not a violation for this setting.","pos":[0,33]},{"content":"However, the XML writer doesn't check the DTD; the user must ensure that the DTD is well-formed.","pos":[34,130]}]}]},{"pos":[3887,3928],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]},{"pos":[3929,3970],"content":"Document conformance checking is applied.","nodes":[{"content":"Document conformance checking is applied.","pos":[0,41]}]},{"pos":[3975,4035],"content":"<xref:System.Xml.XmlWriter.WriteStartDocument%2A> is called.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter.WriteStartDocument%2A&gt;</ph> is called.","pos":[0,60],"source":"<xref:System.Xml.XmlWriter.WriteStartDocument%2A> is called."}]},{"pos":[4036,4080],"content":"Not considered a violation for this setting.","nodes":[{"content":"Not considered a violation for this setting.","pos":[0,44]}]},{"pos":[4081,4122],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]},{"pos":[4123,4164],"content":"Document conformance checking is applied.","nodes":[{"content":"Document conformance checking is applied.","pos":[0,41]}]},{"pos":[4169,4244],"content":"<xref:System.Xml.XmlWriter.WriteStartDocument%2A> is called multiple times.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter.WriteStartDocument%2A&gt;</ph> is called multiple times.","pos":[0,75],"source":"<xref:System.Xml.XmlWriter.WriteStartDocument%2A> is called multiple times."}]},{"pos":[4245,4286],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]},{"pos":[4287,4328],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]},{"pos":[4329,4370],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]},{"pos":[4375,4454],"content":"A text value appears at the top level (not below an element or attribute node).","nodes":[{"content":"A text value appears at the top level (not below an element or attribute node).","pos":[0,79]}]},{"pos":[4455,4496],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]},{"pos":[4497,4524],"content":"Not considered a violation.","nodes":[{"content":"Not considered a violation.","pos":[0,27]}]},{"pos":[4525,4566],"content":"Fragment conformance checking is applied.","nodes":[{"content":"Fragment conformance checking is applied.","pos":[0,41]}]},{"pos":[4571,4628],"content":"Multiple elements or no elements appear at the top level.","nodes":[{"content":"Multiple elements or no elements appear at the top level.","pos":[0,57]}]},{"pos":[4629,4670],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]},{"pos":[4671,4698],"content":"Not considered a violation.","nodes":[{"content":"Not considered a violation.","pos":[0,27]}]},{"pos":[4699,4740],"content":"Fragment conformance checking is applied.","nodes":[{"content":"Fragment conformance checking is applied.","pos":[0,41]}]},{"pos":[4745,4775],"content":"Top-level item is white space.","nodes":[{"content":"Top-level item is white space.","pos":[0,30]}]},{"pos":[4776,4803],"content":"Not considered a violation.","nodes":[{"content":"Not considered a violation.","pos":[0,27]}]},{"pos":[4804,4831],"content":"Not considered a violation.","nodes":[{"content":"Not considered a violation.","pos":[0,27]}]},{"pos":[4832,4859],"content":"Not considered a violation.","nodes":[{"content":"Not considered a violation.","pos":[0,27]}]},{"pos":[4864,4951],"content":"<xref:System.Xml.XmlWriter.WriteEndAttribute%2A> isn't called to end an attribute node.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter.WriteEndAttribute%2A&gt;</ph> isn't called to end an attribute node.","pos":[0,87],"source":"<xref:System.Xml.XmlWriter.WriteEndAttribute%2A> isn't called to end an attribute node."}]},{"pos":[4952,4972],"content":"Fixed by XML writer.","nodes":[{"content":"Fixed by XML writer.","pos":[0,20]}]},{"pos":[4973,4993],"content":"Fixed by XML writer.","nodes":[{"content":"Fixed by XML writer.","pos":[0,20]}]},{"pos":[4994,5014],"content":"Fixed by XML writer.","nodes":[{"content":"Fixed by XML writer.","pos":[0,20]}]},{"pos":[5019,5204],"content":"The XML writer is in an improperly nested state (for example, a <xref:System.Xml.XmlWriter.WriteStartElement%2A> call is followed by a <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>).","nodes":[{"content":"The XML writer is in an improperly nested state (for example, a <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter.WriteStartElement%2A&gt;</ph> call is followed by a <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.WriteEndAttribute%2A&gt;</ph>).","pos":[0,185],"source":"The XML writer is in an improperly nested state (for example, a <xref:System.Xml.XmlWriter.WriteStartElement%2A> call is followed by a <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>)."}]},{"pos":[5205,5246],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]},{"pos":[5247,5288],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]},{"pos":[5289,5330],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]},{"pos":[5335,5366],"content":"Top-level item is an attribute.","nodes":[{"content":"Top-level item is an attribute.","pos":[0,31]}]},{"pos":[5367,5408],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]},{"pos":[5409,5450],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]},{"pos":[5451,5492],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]},{"pos":[5497,5539],"content":"Multiple, contiguous text nodes are found.","nodes":[{"content":"Multiple, contiguous text nodes are found.","pos":[0,42]}]},{"pos":[5540,5638],"content":"Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.","nodes":[{"content":"Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.","pos":[0,98]}]},{"pos":[5639,5737],"content":"Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.","nodes":[{"content":"Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.","pos":[0,98]}]},{"pos":[5738,5836],"content":"Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.","nodes":[{"content":"Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.","pos":[0,98]}]},{"pos":[5841,5899],"content":"The same namespace prefix is declared twice in an element.","nodes":[{"content":"The same namespace prefix is declared twice in an element.","pos":[0,58]}]},{"pos":[5900,5963],"content":"The XML writer generates a new prefix for the second namespace.","nodes":[{"content":"The XML writer generates a new prefix for the second namespace.","pos":[0,63]}]},{"pos":[5964,6027],"content":"The XML writer generates a new prefix for the second namespace.","nodes":[{"content":"The XML writer generates a new prefix for the second namespace.","pos":[0,63]}]},{"pos":[6028,6091],"content":"The XML writer generates a new prefix for the second namespace.","nodes":[{"content":"The XML writer generates a new prefix for the second namespace.","pos":[0,63]}]},{"pos":[6096,6274],"content":"<xref:System.Xml.XmlWriter.WriteStartElement%2A> specifies a prefix and a namespace that isn't declared within that scope, or the prefix is associated with a different namespace.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter.WriteStartElement%2A&gt;</ph> specifies a prefix and a namespace that isn't declared within that scope, or the prefix is associated with a different namespace.","pos":[0,178],"source":"<xref:System.Xml.XmlWriter.WriteStartElement%2A> specifies a prefix and a namespace that isn't declared within that scope, or the prefix is associated with a different namespace."}]},{"pos":[6275,6326],"content":"The XML writer writes the necessary namespace node.","nodes":[{"content":"The XML writer writes the necessary namespace node.","pos":[0,51]}]},{"pos":[6327,6378],"content":"The XML writer writes the necessary namespace node.","nodes":[{"content":"The XML writer writes the necessary namespace node.","pos":[0,51]}]},{"pos":[6379,6430],"content":"The XML writer writes the necessary namespace node.","nodes":[{"content":"The XML writer writes the necessary namespace node.","pos":[0,51]}]},{"pos":[6435,6559],"content":"<xref:System.Xml.XmlWriter.WriteStartAttribute%2A> specifies a prefix and a namespace that isn't declared within that scope.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter.WriteStartAttribute%2A&gt;</ph> specifies a prefix and a namespace that isn't declared within that scope.","pos":[0,124],"source":"<xref:System.Xml.XmlWriter.WriteStartAttribute%2A> specifies a prefix and a namespace that isn't declared within that scope."}]},{"pos":[6560,6611],"content":"The XML writer writes the necessary namespace node.","nodes":[{"content":"The XML writer writes the necessary namespace node.","pos":[0,51]}]},{"pos":[6612,6663],"content":"The XML writer writes the necessary namespace node.","nodes":[{"content":"The XML writer writes the necessary namespace node.","pos":[0,51]}]},{"pos":[6664,6715],"content":"The XML writer writes the necessary namespace node.","nodes":[{"content":"The XML writer writes the necessary namespace node.","pos":[0,51]}]},{"pos":[6720,6872],"content":"<xref:System.Xml.XmlWriter.WriteStartAttribute%2A> specifies a prefix and a namespace, but the prefix is associated with a different in-scope namespace.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter.WriteStartAttribute%2A&gt;</ph> specifies a prefix and a namespace, but the prefix is associated with a different in-scope namespace.","pos":[0,152],"source":"<xref:System.Xml.XmlWriter.WriteStartAttribute%2A> specifies a prefix and a namespace, but the prefix is associated with a different in-scope namespace."}]},{"pos":[6873,6982],"content":"The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.","nodes":[{"content":"The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.","pos":[0,109]}]},{"pos":[6983,7092],"content":"The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.","nodes":[{"content":"The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.","pos":[0,109]}]},{"pos":[7093,7202],"content":"The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.","nodes":[{"content":"The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.","pos":[0,109]}]},{"pos":[7207,7347],"content":"<xref:System.Xml.XmlWriter.WriteQualifiedName%2A> is used to write element content by using a namespace that doesn't exist within the scope.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter.WriteQualifiedName%2A&gt;</ph> is used to write element content by using a namespace that doesn't exist within the scope.","pos":[0,140],"source":"<xref:System.Xml.XmlWriter.WriteQualifiedName%2A> is used to write element content by using a namespace that doesn't exist within the scope."}]},{"pos":[7348,7389],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]},{"pos":[7390,7431],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]},{"pos":[7432,7473],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]},{"pos":[7478,7620],"content":"<xref:System.Xml.XmlWriter.WriteQualifiedName%2A> is used to write attribute content by using a namespace that doesn't exist within the scope.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter.WriteQualifiedName%2A&gt;</ph> is used to write attribute content by using a namespace that doesn't exist within the scope.","pos":[0,142],"source":"<xref:System.Xml.XmlWriter.WriteQualifiedName%2A> is used to write attribute content by using a namespace that doesn't exist within the scope."}]},{"pos":[7621,7679],"content":"The XML writer writes the necessary namespace declaration.","nodes":[{"content":"The XML writer writes the necessary namespace declaration.","pos":[0,58]}]},{"pos":[7680,7738],"content":"The XML writer writes the necessary namespace declaration.","nodes":[{"content":"The XML writer writes the necessary namespace declaration.","pos":[0,58]}]},{"pos":[7739,7797],"content":"The XML writer writes the necessary namespace declaration.","nodes":[{"content":"The XML writer writes the necessary namespace declaration.","pos":[0,58]}]},{"pos":[7802,7858],"content":"The <ph id=\"ph1\">`xml:space`</ph> attribute doesn't contain a valid value.","source":"The `xml:space` attribute doesn't contain a valid value."},{"pos":[7859,7900],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]},{"pos":[7901,7942],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]},{"pos":[7943,7984],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]},{"pos":[7989,8020],"content":"An invalid name is encountered.","nodes":[{"content":"An invalid name is encountered.","pos":[0,31]}]},{"pos":[8021,8062],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]},{"pos":[8063,8104],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]},{"pos":[8105,8146],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]},{"pos":[8151,8191],"content":"The <ph id=\"ph1\">`xml`</ph> prefix isn't matched to a URI.","source":"The `xml` prefix isn't matched to a URI."},{"pos":[8192,8248],"content":"The XML writer doesn't check for this type of violation.","nodes":[{"content":"The XML writer doesn't check for this type of violation.","pos":[0,56]}]},{"pos":[8249,8305],"content":"The XML writer doesn't check for this type of violation.","nodes":[{"content":"The XML writer doesn't check for this type of violation.","pos":[0,56]}]},{"pos":[8306,8362],"content":"The XML writer doesn't check for this type of violation.","nodes":[{"content":"The XML writer doesn't check for this type of violation.","pos":[0,56]}]},{"pos":[8367,8446],"content":"The <ph id=\"ph1\">`xml`</ph> prefix isn't matched to the http://www.w3.org/XML/1998/namespace URI.","source":"The `xml` prefix isn't matched to the http://www.w3.org/XML/1998/namespace URI."},{"pos":[8447,8488],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]},{"pos":[8489,8530],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]},{"pos":[8531,8572],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]},{"pos":[8577,8633],"content":"The <ph id=\"ph1\">`xmlns`</ph> prefix or local name isn't matched to a URI.","source":"The `xmlns` prefix or local name isn't matched to a URI."},{"pos":[8634,8690],"content":"The XML writer doesn't check for this type of violation.","nodes":[{"content":"The XML writer doesn't check for this type of violation.","pos":[0,56]}]},{"pos":[8691,8747],"content":"The XML writer doesn't check for this type of violation.","nodes":[{"content":"The XML writer doesn't check for this type of violation.","pos":[0,56]}]},{"pos":[8748,8804],"content":"The XML writer doesn't check for this type of violation.","nodes":[{"content":"The XML writer doesn't check for this type of violation.","pos":[0,56]}]},{"pos":[8809,8896],"content":"The <ph id=\"ph1\">`xmlns`</ph> prefix or local name isn't matched to the http://www.w3.org/2000/xmlns URI.","source":"The `xmlns` prefix or local name isn't matched to the http://www.w3.org/2000/xmlns URI."},{"pos":[8897,8938],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]},{"pos":[8939,8980],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]},{"pos":[8981,9022],"content":"<xref:System.Xml.XmlException> is thrown.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.","pos":[0,41],"source":"<xref:System.Xml.XmlException> is thrown."}]}],"pos":[20450,29509],"yaml":true,"extradata":"MT"},{"content":"One of the enumeration values that specifies the level of conformance (document, fragment, or automatic detection). The default is <xref href=\"System.Xml.ConformanceLevel.Document\"></xref>.","nodes":[{"pos":[0,189],"content":"One of the enumeration values that specifies the level of conformance (document, fragment, or automatic detection). The default is <xref href=\"System.Xml.ConformanceLevel.Document\"></xref>.","nodes":[{"content":"One of the enumeration values that specifies the level of conformance (document, fragment, or automatic detection).","pos":[0,115]},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Xml.ConformanceLevel.Document\"&gt;&lt;/xref&gt;</ph>.","pos":[116,189],"source":" The default is <xref href=\"System.Xml.ConformanceLevel.Document\"></xref>."}]}],"pos":[30048,30238],"yaml":true},{"content":"Gets or sets a value that indicates whether the <xref href=\"System.Xml.XmlWriter\"></xref> does not escape URI attributes.","nodes":[{"pos":[0,121],"content":"Gets or sets a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlWriter\"&gt;&lt;/xref&gt;</ph> does not escape URI attributes.","source":"Gets or sets a value that indicates whether the <xref href=\"System.Xml.XmlWriter\"></xref> does not escape URI attributes."}],"pos":[31832,31954],"yaml":true},{"content":"`true` if the <xref href=\"System.Xml.XmlWriter\"></xref> do not escape URI attributes; otherwise, `false`.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlWriter\"&gt;&lt;/xref&gt;</ph> do not escape URI attributes; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Xml.XmlWriter\"></xref> do not escape URI attributes; otherwise, `false`."}],"pos":[32086,32194],"yaml":true},{"content":"Gets or sets the type of text encoding to use.","nodes":[{"pos":[0,46],"content":"Gets or sets the type of text encoding to use.","nodes":[{"content":"Gets or sets the type of text encoding to use.","pos":[0,46]}]}],"pos":[33396,33443],"yaml":true},{"content":"The <xref:System.Xml.XmlWriter> encodes a buffer of characters all at once, rather than character by character. An exception is thrown when the <xref:System.Xml.XmlWriter.Flush%2A> method is called if any encoding errors are encountered.  \n  \n The <xref:System.Xml.XmlWriterSettings.Encoding%2A> property only applies to the <xref:System.Xml.XmlWriter> instances that are created either with the specified <xref:System.IO.Stream> or with the specified file name. If the <xref:System.Xml.XmlWriter> instance is created with the specified <xref:System.IO.TextWriter>, the <xref:System.Xml.XmlWriterSettings.Encoding%2A> property is overridden by the encoding of the underlying <xref:System.IO.TextWriter>. For example, if this property is set to Unicode (UTF-16) for a particular <xref:System.Xml.XmlWriter>, but the underlying writer is a <xref:System.IO.StreamWriter> (which derives from <xref:System.IO.TextWriter>) with its encoding set to UTF8, the output will be UTF-8 encoded.  \n  \n If the <xref:System.Xml.XmlWriter> instance is created with other output parameters, the <xref:System.Xml.XmlWriterSettings.Encoding%2A> property is ignored.  \n  \n In the following example:  \n  \n-   The default value of <xref:System.Xml.XmlWriterSettings.Encoding%2A> is `Encoding.UTF8`.  \n  \n-   The <xref:System.IO.StreamWriter> is set to `Encoding.Unicode` and the <xref:System.IO.StreamWriter>’s encoding overrides the <xref:System.Xml.XmlWriterSettings.Encoding%2A> setting.  \n  \n-   The output will be `Encoding.Unicode`.  \n  \n```csharp  \nusing (StreamWriter output =  \n    new StreamWriter(new FileStream(\"Xml01.xml\", FileMode.Create), Encoding.Unicode))  \n{  \n    using (XmlWriter xmlWriter =  \n        XmlWriter.Create(output, new XmlWriterSettings()))  \n    {  \n        xmlWriter.WriteStartDocument();  \n        xmlWriter.WriteStartElement(\"Root\");  \n        xmlWriter.WriteEndElement();  \n        xmlWriter.WriteEndDocument();  \n    }  \n}  \n```  \n  \n> [!IMPORTANT]\n>  Do not accept an <xref:System.Text.Encoding> object from an untrusted source.","nodes":[{"pos":[0,237],"content":"The <xref:System.Xml.XmlWriter> encodes a buffer of characters all at once, rather than character by character. An exception is thrown when the <xref:System.Xml.XmlWriter.Flush%2A> method is called if any encoding errors are encountered.","nodes":[{"content":"The <xref:System.Xml.XmlWriter> encodes a buffer of characters all at once, rather than character by character. An exception is thrown when the <xref:System.Xml.XmlWriter.Flush%2A> method is called if any encoding errors are encountered.","pos":[0,237],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> encodes a buffer of characters all at once, rather than character by character.","pos":[0,111],"source":"The <xref:System.Xml.XmlWriter> encodes a buffer of characters all at once, rather than character by character."},{"content":"An exception is thrown when the <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter.Flush%2A&gt;</ph> method is called if any encoding errors are encountered.","pos":[112,237],"source":" An exception is thrown when the <xref:System.Xml.XmlWriter.Flush%2A> method is called if any encoding errors are encountered."}]}]},{"pos":[244,981],"content":"The <xref:System.Xml.XmlWriterSettings.Encoding%2A> property only applies to the <xref:System.Xml.XmlWriter> instances that are created either with the specified <xref:System.IO.Stream> or with the specified file name. If the <xref:System.Xml.XmlWriter> instance is created with the specified <xref:System.IO.TextWriter>, the <xref:System.Xml.XmlWriterSettings.Encoding%2A> property is overridden by the encoding of the underlying <xref:System.IO.TextWriter>. For example, if this property is set to Unicode (UTF-16) for a particular <xref:System.Xml.XmlWriter>, but the underlying writer is a <xref:System.IO.StreamWriter> (which derives from <xref:System.IO.TextWriter>) with its encoding set to UTF8, the output will be UTF-8 encoded.","nodes":[{"content":"The <xref:System.Xml.XmlWriterSettings.Encoding%2A> property only applies to the <xref:System.Xml.XmlWriter> instances that are created either with the specified <xref:System.IO.Stream> or with the specified file name. If the <xref:System.Xml.XmlWriter> instance is created with the specified <xref:System.IO.TextWriter>, the <xref:System.Xml.XmlWriterSettings.Encoding%2A> property is overridden by the encoding of the underlying <xref:System.IO.TextWriter>. For example, if this property is set to Unicode (UTF-16) for a particular <xref:System.Xml.XmlWriter>, but the underlying writer is a <xref:System.IO.StreamWriter> (which derives from <xref:System.IO.TextWriter>) with its encoding set to UTF8, the output will be UTF-8 encoded.","pos":[0,737],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriterSettings.Encoding%2A&gt;</ph> property only applies to the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances that are created either with the specified <ph id=\"ph3\">&lt;xref:System.IO.Stream&gt;</ph> or with the specified file name.","pos":[0,218],"source":"The <xref:System.Xml.XmlWriterSettings.Encoding%2A> property only applies to the <xref:System.Xml.XmlWriter> instances that are created either with the specified <xref:System.IO.Stream> or with the specified file name."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance is created with the specified <ph id=\"ph2\">&lt;xref:System.IO.TextWriter&gt;</ph>, the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings.Encoding%2A&gt;</ph> property is overridden by the encoding of the underlying <ph id=\"ph4\">&lt;xref:System.IO.TextWriter&gt;</ph>.","pos":[219,459],"source":" If the <xref:System.Xml.XmlWriter> instance is created with the specified <xref:System.IO.TextWriter>, the <xref:System.Xml.XmlWriterSettings.Encoding%2A> property is overridden by the encoding of the underlying <xref:System.IO.TextWriter>."},{"content":"For example, if this property is set to Unicode (UTF-16) for a particular <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph>, but the underlying writer is a <ph id=\"ph2\">&lt;xref:System.IO.StreamWriter&gt;</ph> (which derives from <ph id=\"ph3\">&lt;xref:System.IO.TextWriter&gt;</ph>) with its encoding set to UTF8, the output will be UTF-8 encoded.","pos":[460,737],"source":" For example, if this property is set to Unicode (UTF-16) for a particular <xref:System.Xml.XmlWriter>, but the underlying writer is a <xref:System.IO.StreamWriter> (which derives from <xref:System.IO.TextWriter>) with its encoding set to UTF8, the output will be UTF-8 encoded."}]}]},{"pos":[988,1145],"content":"If the <xref:System.Xml.XmlWriter> instance is created with other output parameters, the <xref:System.Xml.XmlWriterSettings.Encoding%2A> property is ignored.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instance is created with other output parameters, the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriterSettings.Encoding%2A&gt;</ph> property is ignored.","pos":[0,157],"source":"If the <xref:System.Xml.XmlWriter> instance is created with other output parameters, the <xref:System.Xml.XmlWriterSettings.Encoding%2A> property is ignored."}]},{"pos":[1152,1177],"content":"In the following example:","nodes":[{"content":"In the following example:","pos":[0,25]}]},{"pos":[1187,1275],"content":"The default value of <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriterSettings.Encoding%2A&gt;</ph> is <ph id=\"ph2\">`Encoding.UTF8`</ph>.","source":"The default value of <xref:System.Xml.XmlWriterSettings.Encoding%2A> is `Encoding.UTF8`."},{"pos":[1285,1467],"content":"The <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter&gt;</ph> is set to <ph id=\"ph2\">`Encoding.Unicode`</ph> and the <ph id=\"ph3\">&lt;xref:System.IO.StreamWriter&gt;</ph>’s encoding overrides the <ph id=\"ph4\">&lt;xref:System.Xml.XmlWriterSettings.Encoding%2A&gt;</ph> setting.","source":"The <xref:System.IO.StreamWriter> is set to `Encoding.Unicode` and the <xref:System.IO.StreamWriter>’s encoding overrides the <xref:System.Xml.XmlWriterSettings.Encoding%2A> setting."},{"pos":[1477,1515],"content":"The output will be <ph id=\"ph1\">`Encoding.Unicode`</ph>.","source":"The output will be `Encoding.Unicode`."},{"pos":[1951,2044],"content":"[!IMPORTANT]\n Do not accept an <xref:System.Text.Encoding> object from an untrusted source.","leadings":["","> "],"nodes":[{"content":"Do not accept an <ph id=\"ph1\">&lt;xref:System.Text.Encoding&gt;</ph> object from an untrusted source.","pos":[14,91],"source":" Do not accept an <xref:System.Text.Encoding> object from an untrusted source."}]}],"pos":[33454,35535],"yaml":true,"extradata":"MT"},{"content":"The text encoding to use. The default is `Encoding.UTF8`.","nodes":[{"pos":[0,57],"content":"The text encoding to use. The default is `Encoding.UTF8`.","nodes":[{"content":"The text encoding to use.","pos":[0,25]},{"content":"The default is <ph id=\"ph1\">`Encoding.UTF8`</ph>.","pos":[26,57],"source":" The default is `Encoding.UTF8`."}]}],"pos":[36052,36110],"yaml":true},{"content":"Gets or sets a value indicating whether to indent elements.","nodes":[{"pos":[0,59],"content":"Gets or sets a value indicating whether to indent elements.","nodes":[{"content":"Gets or sets a value indicating whether to indent elements.","pos":[0,59]}]}],"pos":[37588,37648],"yaml":true},{"content":"This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.  \n  \n The elements are indented as long as the element does not contain mixed content. Once the <xref:System.Xml.XmlWriter.WriteString%2A> or <xref:System.Xml.XmlWriter.WriteWhitespace%2A> method is called to write out a mixed element content, the <xref:System.Xml.XmlWriter> stops indenting. The indenting resumes once the mixed content element is closed.","nodes":[{"pos":[0,129],"content":"This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.","nodes":[{"content":"This property only applies to <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances that output text content; otherwise, this setting is ignored.","pos":[0,129],"source":"This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored."}]},{"pos":[136,486],"content":"The elements are indented as long as the element does not contain mixed content. Once the <xref:System.Xml.XmlWriter.WriteString%2A> or <xref:System.Xml.XmlWriter.WriteWhitespace%2A> method is called to write out a mixed element content, the <xref:System.Xml.XmlWriter> stops indenting. The indenting resumes once the mixed content element is closed.","nodes":[{"content":"The elements are indented as long as the element does not contain mixed content. Once the <xref:System.Xml.XmlWriter.WriteString%2A> or <xref:System.Xml.XmlWriter.WriteWhitespace%2A> method is called to write out a mixed element content, the <xref:System.Xml.XmlWriter> stops indenting. The indenting resumes once the mixed content element is closed.","pos":[0,350],"nodes":[{"content":"The elements are indented as long as the element does not contain mixed content.","pos":[0,80]},{"content":"Once the <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.WriteWhitespace%2A&gt;</ph> method is called to write out a mixed element content, the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriter&gt;</ph> stops indenting.","pos":[81,286],"source":" Once the <xref:System.Xml.XmlWriter.WriteString%2A> or <xref:System.Xml.XmlWriter.WriteWhitespace%2A> method is called to write out a mixed element content, the <xref:System.Xml.XmlWriter> stops indenting."},{"content":"The indenting resumes once the mixed content element is closed.","pos":[287,350]}]}]}],"pos":[37659,38150],"yaml":true,"extradata":"MT"},{"content":"`true` to write individual elements on new lines and indent; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,104],"content":"`true` to write individual elements on new lines and indent; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to write individual elements on new lines and indent; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,80],"source":"`true` to write individual elements on new lines and indent; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[81,104],"source":" The default is `false`."}]}],"pos":[38669,38776],"yaml":true},{"content":"Gets or sets the character string to use when indenting. This setting is used when the <xref href=\"System.Xml.XmlWriterSettings.Indent\"></xref> property is set to `true`.","nodes":[{"pos":[0,170],"content":"Gets or sets the character string to use when indenting. This setting is used when the <xref href=\"System.Xml.XmlWriterSettings.Indent\"></xref> property is set to `true`.","nodes":[{"content":"Gets or sets the character string to use when indenting.","pos":[0,56]},{"content":"This setting is used when the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlWriterSettings.Indent\"&gt;&lt;/xref&gt;</ph> property is set to <ph id=\"ph2\">`true`</ph>.","pos":[57,170],"source":" This setting is used when the <xref href=\"System.Xml.XmlWriterSettings.Indent\"></xref> property is set to `true`."}]}],"pos":[40282,40453],"yaml":true},{"content":"This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored. The <xref:System.Xml.XmlWriter> throws an exception if the indent characters would result in invalid XML.","nodes":[{"pos":[0,235],"content":"This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored. The <xref:System.Xml.XmlWriter> throws an exception if the indent characters would result in invalid XML.","nodes":[{"content":"This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored. The <xref:System.Xml.XmlWriter> throws an exception if the indent characters would result in invalid XML.","pos":[0,235],"nodes":[{"content":"This property only applies to <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances that output text content; otherwise, this setting is ignored.","pos":[0,129],"source":"This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> throws an exception if the indent characters would result in invalid XML.","pos":[130,235],"source":" The <xref:System.Xml.XmlWriter> throws an exception if the indent characters would result in invalid XML."}]}]}],"pos":[40464,40700],"yaml":true,"extradata":"MT"},{"content":"The character string to use when indenting. This can be set to any string value. However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds. The default is two spaces.","nodes":[{"pos":[0,256],"content":"The character string to use when indenting. This can be set to any string value. However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds. The default is two spaces.","nodes":[{"content":"The character string to use when indenting. This can be set to any string value. However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds. The default is two spaces.","pos":[0,256],"nodes":[{"content":"The character string to use when indenting.","pos":[0,43]},{"content":"This can be set to any string value.","pos":[44,80]},{"content":"However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds.","pos":[81,229]},{"content":"The default is two spaces.","pos":[230,256]}]}]}],"pos":[41225,41482],"yaml":true},{"content":"The value assigned to the <xref href=\"System.Xml.XmlWriterSettings.IndentChars\"></xref> is `null`.","nodes":[{"pos":[0,98],"content":"The value assigned to the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlWriterSettings.IndentChars\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"The value assigned to the <xref href=\"System.Xml.XmlWriterSettings.IndentChars\"></xref> is `null`."}],"pos":[41652,41751],"yaml":true},{"content":"Gets or sets a value that indicates whether the <xref href=\"System.Xml.XmlWriter\"></xref> should remove duplicate namespace declarations when writing XML content. The default behavior is for the writer to output all namespace declarations that are present in the writer's namespace resolver.","nodes":[{"pos":[0,291],"content":"Gets or sets a value that indicates whether the <xref href=\"System.Xml.XmlWriter\"></xref> should remove duplicate namespace declarations when writing XML content. The default behavior is for the writer to output all namespace declarations that are present in the writer's namespace resolver.","nodes":[{"content":"Gets or sets a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlWriter\"&gt;&lt;/xref&gt;</ph> should remove duplicate namespace declarations when writing XML content.","pos":[0,162],"source":"Gets or sets a value that indicates whether the <xref href=\"System.Xml.XmlWriter\"></xref> should remove duplicate namespace declarations when writing XML content."},{"content":"The default behavior is for the writer to output all namespace declarations that are present in the writer's namespace resolver.","pos":[163,291]}]}],"pos":[43227,43519],"yaml":true},{"content":"The <xref href=\"System.Xml.NamespaceHandling\"></xref> enumeration used to specify whether to remove duplicate namespace declarations in the <xref href=\"System.Xml.XmlWriter\"></xref>.","nodes":[{"pos":[0,182],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.NamespaceHandling\"&gt;&lt;/xref&gt;</ph> enumeration used to specify whether to remove duplicate namespace declarations in the <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlWriter\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Xml.NamespaceHandling\"></xref> enumeration used to specify whether to remove duplicate namespace declarations in the <xref href=\"System.Xml.XmlWriter\"></xref>."}],"pos":[43682,43865],"yaml":true},{"content":"Gets or sets the character string to use for line breaks.","nodes":[{"pos":[0,57],"content":"Gets or sets the character string to use for line breaks.","nodes":[{"content":"Gets or sets the character string to use for line breaks.","pos":[0,57]}]}],"pos":[45388,45446],"yaml":true},{"content":"This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored. The <xref:System.Xml.XmlWriter> throws an exception if the line break characters would result in invalid XML.","nodes":[{"pos":[0,239],"content":"This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored. The <xref:System.Xml.XmlWriter> throws an exception if the line break characters would result in invalid XML.","nodes":[{"content":"This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored. The <xref:System.Xml.XmlWriter> throws an exception if the line break characters would result in invalid XML.","pos":[0,239],"nodes":[{"content":"This property only applies to <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances that output text content; otherwise, this setting is ignored.","pos":[0,129],"source":"This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> throws an exception if the line break characters would result in invalid XML.","pos":[130,239],"source":" The <xref:System.Xml.XmlWriter> throws an exception if the line break characters would result in invalid XML."}]}]}],"pos":[45457,45697],"yaml":true,"extradata":"MT"},{"content":"The character string to use for line breaks. This can be set to any string value. However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds. The default is <code>\\r\\n</code> (carriage return, new line).","nodes":[{"pos":[0,292],"content":"The character string to use for line breaks. This can be set to any string value. However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds. The default is <code>\\r\\n</code> (carriage return, new line).","nodes":[{"content":"The character string to use for line breaks.","pos":[0,44]},{"content":"This can be set to any string value.","pos":[45,81]},{"content":"However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds.","pos":[82,230]},{"content":"The default is <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">\\r\\n</ph><ept id=\"p1\">&lt;/code&gt;</ept> (carriage return, new line).","pos":[231,292],"source":" The default is <code>\\r\\n</code> (carriage return, new line)."}]}],"pos":[45818,46111],"yaml":true},{"content":"The value assigned to the <xref href=\"System.Xml.XmlWriterSettings.NewLineChars\"></xref> is `null`.","nodes":[{"pos":[0,99],"content":"The value assigned to the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlWriterSettings.NewLineChars\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"The value assigned to the <xref href=\"System.Xml.XmlWriterSettings.NewLineChars\"></xref> is `null`."}],"pos":[46282,46382],"yaml":true},{"content":"Gets or sets a value indicating whether to normalize line breaks in the output.","nodes":[{"pos":[0,79],"content":"Gets or sets a value indicating whether to normalize line breaks in the output.","nodes":[{"content":"Gets or sets a value indicating whether to normalize line breaks in the output.","pos":[0,79]}]}],"pos":[47846,47926],"yaml":true},{"content":"This setting applies when writing text content or attribute values. Each of the <xref:System.Xml.NewLineHandling> values is described below:  \n  \n-   The <xref:System.Xml.NewLineHandling.Entitize> setting tells the <xref:System.Xml.XmlWriter> to replace new line characters that would not be otherwise preserved by a normalizing <xref:System.Xml.XmlReader> with character entities. This is useful in round-trip scenarios where the output is read by a normalizing <xref:System.Xml.XmlReader>. Additional normalization rules apply for attribute values when round tripping since `\\t`, `\\n` and `\\r` are replaced with a space in attribute values when normalized in an <xref:System.Xml.XmlReader>.  \n  \n-   The <xref:System.Xml.NewLineHandling.Replace> setting tells the <xref:System.Xml.XmlWriter> to replace new line characters with `\\r\\n`, which is the new line format used by the Microsoft Windows operating system. This helps to ensure that the file can be correctly displayed by the Notepad or Microsoft Word applications. This setting also replaces new lines in attributes with character entities to preserve the characters. This is the default value.  \n  \n-   The <xref:System.Xml.NewLineHandling.None> setting tells the <xref:System.Xml.XmlWriter> to leave the input unchanged. This setting is used when you not want any new-line processing. This is useful when the output is read by an <xref:System.Xml.XmlReader> that does not do any normalization (for example, an <xref:System.Xml.XmlTextReader> with default settings.)  \n  \n The following tables show the output of the <xref:System.Xml.XmlWriter.WriteString%2A> method when supplied with the input value depending on the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property setting. The tables show the output when writing text content and also when writing an attribute value.  \n  \n `Text Node Value:`  \n  \n||\\r\\n|\\n|\\r|\\t|  \n|-|------------|---------|---------|---------|  \n|Entitize|&#D;\\n|\\n|&#D;|\\t|  \n|Replace|\\r\\n|\\r\\n|\\r\\n|\\t|  \n|None|\\r\\n|\\n|\\r|\\t|  \n  \n `Attribute Value:`  \n  \n||\\r\\n|\\n|\\r|\\t|  \n|-|------------|---------|---------|---------|  \n|Entitize|&#D;&#A;|&#A;|&#D;|&\\#9;|  \n|Replace|&#D;&#A;|&#A;|&#D;|&\\#9;|  \n|None|\\r\\n|\\n|\\r|\\t|  \n  \n> [!NOTE]\n>  The <xref:System.Xml.XmlWriter> has the following behavior when writing content within a CDATA section, comment, or processing instruction. New lines are never replaced with their character entities, even when the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property is set to <xref:System.Xml.NewLineHandling.Entitize>. This is because character entities are not recognized in CDATA sections, comments or processing instructions. If the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property is set to <xref:System.Xml.NewLineHandling.None> or <xref:System.Xml.NewLineHandling.Replace>, the behavior is the same as when writing a text node value.  \n  \n The following table describes what a normalizing <xref:System.Xml.XmlReader> returns for each white space input. For more information, see sections 2.11 and 3.3.3 of the W3C [XML 1.0 Recommendation](http://www.w3.org/TR/REC-xml/).  \n  \n> [!NOTE]\n>  A normalizing reader is any <xref:System.Xml.XmlReader> object created by the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method. These objects always perform line break normalization and full normalization of attributes. The <xref:System.Xml.XmlTextReader> object can also be a normalizing reader if it's <xref:System.Xml.XmlTextReader.Normalization%2A> property is set to `true`.  \n  \n||\\r\\n|\\n|\\r|\\t|  \n|-|------------|---------|---------|---------|  \n|Text Node Value|\\n|\\n|\\n|\\t|  \n|Attribute Value|single space|single space|single space|single space|","nodes":[{"pos":[0,140],"content":"This setting applies when writing text content or attribute values. Each of the <xref:System.Xml.NewLineHandling> values is described below:","nodes":[{"content":"This setting applies when writing text content or attribute values. Each of the <xref:System.Xml.NewLineHandling> values is described below:","pos":[0,140],"nodes":[{"content":"This setting applies when writing text content or attribute values.","pos":[0,67]},{"content":"Each of the <ph id=\"ph1\">&lt;xref:System.Xml.NewLineHandling&gt;</ph> values is described below:","pos":[68,140],"source":" Each of the <xref:System.Xml.NewLineHandling> values is described below:"}]}]},{"pos":[150,692],"content":"The <xref:System.Xml.NewLineHandling.Entitize> setting tells the <xref:System.Xml.XmlWriter> to replace new line characters that would not be otherwise preserved by a normalizing <xref:System.Xml.XmlReader> with character entities. This is useful in round-trip scenarios where the output is read by a normalizing <xref:System.Xml.XmlReader>. Additional normalization rules apply for attribute values when round tripping since `\\t`, `\\n` and `\\r` are replaced with a space in attribute values when normalized in an <xref:System.Xml.XmlReader>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.NewLineHandling.Entitize&gt;</ph> setting tells the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter&gt;</ph> to replace new line characters that would not be otherwise preserved by a normalizing <ph id=\"ph3\">&lt;xref:System.Xml.XmlReader&gt;</ph> with character entities.","pos":[0,231],"source":"The <xref:System.Xml.NewLineHandling.Entitize> setting tells the <xref:System.Xml.XmlWriter> to replace new line characters that would not be otherwise preserved by a normalizing <xref:System.Xml.XmlReader> with character entities."},{"content":"This is useful in round-trip scenarios where the output is read by a normalizing <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph>.","pos":[232,341],"source":" This is useful in round-trip scenarios where the output is read by a normalizing <xref:System.Xml.XmlReader>."},{"content":"Additional normalization rules apply for attribute values when round tripping since <ph id=\"ph1\">`\\t`</ph>, <ph id=\"ph2\">`\\n`</ph> and <ph id=\"ph3\">`\\r`</ph> are replaced with a space in attribute values when normalized in an <ph id=\"ph4\">&lt;xref:System.Xml.XmlReader&gt;</ph>.","pos":[342,542],"source":" Additional normalization rules apply for attribute values when round tripping since `\\t`, `\\n` and `\\r` are replaced with a space in attribute values when normalized in an <xref:System.Xml.XmlReader>."}]},{"pos":[702,1153],"content":"The <xref:System.Xml.NewLineHandling.Replace> setting tells the <xref:System.Xml.XmlWriter> to replace new line characters with `\\r\\n`, which is the new line format used by the Microsoft Windows operating system. This helps to ensure that the file can be correctly displayed by the Notepad or Microsoft Word applications. This setting also replaces new lines in attributes with character entities to preserve the characters. This is the default value.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.NewLineHandling.Replace&gt;</ph> setting tells the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter&gt;</ph> to replace new line characters with <ph id=\"ph3\">`\\r\\n`</ph>, which is the new line format used by the Microsoft Windows operating system.","pos":[0,212],"source":"The <xref:System.Xml.NewLineHandling.Replace> setting tells the <xref:System.Xml.XmlWriter> to replace new line characters with `\\r\\n`, which is the new line format used by the Microsoft Windows operating system."},{"content":"This helps to ensure that the file can be correctly displayed by the Notepad or Microsoft Word applications.","pos":[213,321]},{"content":"This setting also replaces new lines in attributes with character entities to preserve the characters.","pos":[322,424]},{"content":"This is the default value.","pos":[425,451]}]},{"pos":[1163,1526],"content":"The <xref:System.Xml.NewLineHandling.None> setting tells the <xref:System.Xml.XmlWriter> to leave the input unchanged. This setting is used when you not want any new-line processing. This is useful when the output is read by an <xref:System.Xml.XmlReader> that does not do any normalization (for example, an <xref:System.Xml.XmlTextReader> with default settings.)","nodes":[{"content":"The <xref:System.Xml.NewLineHandling.None> setting tells the <xref:System.Xml.XmlWriter> to leave the input unchanged. This setting is used when you not want any new-line processing. This is useful when the output is read by an <xref:System.Xml.XmlReader> that does not do any normalization (for example, an <xref:System.Xml.XmlTextReader> with default settings.)","pos":[0,363],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.NewLineHandling.None&gt;</ph> setting tells the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter&gt;</ph> to leave the input unchanged.","pos":[0,118],"source":"The <xref:System.Xml.NewLineHandling.None> setting tells the <xref:System.Xml.XmlWriter> to leave the input unchanged."},{"content":"This setting is used when you not want any new-line processing.","pos":[119,182]},{"content":"This is useful when the output is read by an <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph> that does not do any normalization (for example, an <ph id=\"ph2\">&lt;xref:System.Xml.XmlTextReader&gt;</ph> with default settings.)","pos":[183,363],"source":" This is useful when the output is read by an <xref:System.Xml.XmlReader> that does not do any normalization (for example, an <xref:System.Xml.XmlTextReader> with default settings.)"}]}]},{"pos":[1533,1846],"content":"The following tables show the output of the <xref:System.Xml.XmlWriter.WriteString%2A> method when supplied with the input value depending on the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property setting. The tables show the output when writing text content and also when writing an attribute value.","nodes":[{"content":"The following tables show the output of the <xref:System.Xml.XmlWriter.WriteString%2A> method when supplied with the input value depending on the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property setting. The tables show the output when writing text content and also when writing an attribute value.","pos":[0,313],"nodes":[{"content":"The following tables show the output of the <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter.WriteString%2A&gt;</ph> method when supplied with the input value depending on the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriterSettings.NewLineHandling%2A&gt;</ph> property setting.","pos":[0,218],"source":"The following tables show the output of the <xref:System.Xml.XmlWriter.WriteString%2A> method when supplied with the input value depending on the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property setting."},{"content":"The tables show the output when writing text content and also when writing an attribute value.","pos":[219,313]}]}]},{"pos":[1879,1883],"content":"\\r\\n","nodes":[{"content":"\\r\\n","pos":[0,4]}]},{"pos":[1884,1886],"content":"\\n","nodes":[]},{"pos":[1887,1889],"content":"\\r","nodes":[{"content":"\\r","pos":[0,2]}]},{"pos":[1890,1892],"content":"\\t","nodes":[{"content":"\\t","pos":[0,2]}]},{"pos":[1946,1954],"content":"Entitize","nodes":[{"content":"Entitize","pos":[0,8]}]},{"pos":[1955,1961],"content":"&#D;\\n","nodes":[{"content":"&amp;#D;\\n","pos":[0,6],"source":"&#D;\\n"}]},{"pos":[1962,1964],"content":"\\n","nodes":[]},{"pos":[1965,1969],"content":"&#D;","nodes":[{"content":"&amp;#D;","pos":[0,4],"source":"&#D;"}]},{"pos":[1970,1972],"content":"\\t","nodes":[{"content":"\\t","pos":[0,2]}]},{"pos":[1977,1984],"content":"Replace","nodes":[{"content":"Replace","pos":[0,7]}]},{"pos":[1985,1989],"content":"\\r\\n","nodes":[{"content":"\\r\\n","pos":[0,4]}]},{"pos":[1990,1994],"content":"\\r\\n","nodes":[{"content":"\\r\\n","pos":[0,4]}]},{"pos":[1995,1999],"content":"\\r\\n","nodes":[{"content":"\\r\\n","pos":[0,4]}]},{"pos":[2000,2002],"content":"\\t","nodes":[{"content":"\\t","pos":[0,2]}]},{"pos":[2007,2011],"content":"None","nodes":[{"content":"None","pos":[0,4]}]},{"pos":[2012,2016],"content":"\\r\\n","nodes":[{"content":"\\r\\n","pos":[0,4]}]},{"pos":[2017,2019],"content":"\\n","nodes":[]},{"pos":[2020,2022],"content":"\\r","nodes":[{"content":"\\r","pos":[0,2]}]},{"pos":[2023,2025],"content":"\\t","nodes":[{"content":"\\t","pos":[0,2]}]},{"pos":[2059,2063],"content":"\\r\\n","nodes":[{"content":"\\r\\n","pos":[0,4]}]},{"pos":[2064,2066],"content":"\\n","nodes":[]},{"pos":[2067,2069],"content":"\\r","nodes":[{"content":"\\r","pos":[0,2]}]},{"pos":[2070,2072],"content":"\\t","nodes":[{"content":"\\t","pos":[0,2]}]},{"pos":[2126,2134],"content":"Entitize","nodes":[{"content":"Entitize","pos":[0,8]}]},{"pos":[2135,2143],"content":"&#D;&#A;","nodes":[{"content":"&amp;#D;&amp;#A;","pos":[0,8],"source":"&#D;&#A;"}]},{"pos":[2144,2148],"content":"&#A;","nodes":[{"content":"&amp;#A;","pos":[0,4],"source":"&#A;"}]},{"pos":[2149,2153],"content":"&#D;","nodes":[{"content":"&amp;#D;","pos":[0,4],"source":"&#D;"}]},{"pos":[2154,2159],"content":"&\\#9;","nodes":[{"content":"<ph id=\"ph1\">&amp;</ph><ph id=\"ph2\">\\#</ph>9;","pos":[0,5],"source":"&\\#9;"}]},{"pos":[2164,2171],"content":"Replace","nodes":[{"content":"Replace","pos":[0,7]}]},{"pos":[2172,2180],"content":"&#D;&#A;","nodes":[{"content":"&amp;#D;&amp;#A;","pos":[0,8],"source":"&#D;&#A;"}]},{"pos":[2181,2185],"content":"&#A;","nodes":[{"content":"&amp;#A;","pos":[0,4],"source":"&#A;"}]},{"pos":[2186,2190],"content":"&#D;","nodes":[{"content":"&amp;#D;","pos":[0,4],"source":"&#D;"}]},{"pos":[2191,2196],"content":"&\\#9;","nodes":[{"content":"<ph id=\"ph1\">&amp;</ph><ph id=\"ph2\">\\#</ph>9;","pos":[0,5],"source":"&\\#9;"}]},{"pos":[2201,2205],"content":"None","nodes":[{"content":"None","pos":[0,4]}]},{"pos":[2206,2210],"content":"\\r\\n","nodes":[{"content":"\\r\\n","pos":[0,4]}]},{"pos":[2211,2213],"content":"\\n","nodes":[]},{"pos":[2214,2216],"content":"\\r","nodes":[{"content":"\\r","pos":[0,2]}]},{"pos":[2217,2219],"content":"\\t","nodes":[{"content":"\\t","pos":[0,2]}]},{"pos":[2228,2906],"content":"[!NOTE]\n The <xref:System.Xml.XmlWriter> has the following behavior when writing content within a CDATA section, comment, or processing instruction. New lines are never replaced with their character entities, even when the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property is set to <xref:System.Xml.NewLineHandling.Entitize>. This is because character entities are not recognized in CDATA sections, comments or processing instructions. If the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property is set to <xref:System.Xml.NewLineHandling.None> or <xref:System.Xml.NewLineHandling.Replace>, the behavior is the same as when writing a text node value.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Xml.XmlWriter> has the following behavior when writing content within a CDATA section, comment, or processing instruction. New lines are never replaced with their character entities, even when the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property is set to <xref:System.Xml.NewLineHandling.Entitize>. This is because character entities are not recognized in CDATA sections, comments or processing instructions. If the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property is set to <xref:System.Xml.NewLineHandling.None> or <xref:System.Xml.NewLineHandling.Replace>, the behavior is the same as when writing a text node value.","pos":[8,676],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> has the following behavior when writing content within a CDATA section, comment, or processing instruction.","pos":[1,140],"source":" The <xref:System.Xml.XmlWriter> has the following behavior when writing content within a CDATA section, comment, or processing instruction."},{"content":"New lines are never replaced with their character entities, even when the <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriterSettings.NewLineHandling%2A&gt;</ph> property is set to <ph id=\"ph2\">&lt;xref:System.Xml.NewLineHandling.Entitize&gt;</ph>.","pos":[141,332],"source":" New lines are never replaced with their character entities, even when the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property is set to <xref:System.Xml.NewLineHandling.Entitize>."},{"content":"This is because character entities are not recognized in CDATA sections, comments or processing instructions.","pos":[333,442]},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriterSettings.NewLineHandling%2A&gt;</ph> property is set to <ph id=\"ph2\">&lt;xref:System.Xml.NewLineHandling.None&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Xml.NewLineHandling.Replace&gt;</ph>, the behavior is the same as when writing a text node value.","pos":[443,668],"source":" If the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property is set to <xref:System.Xml.NewLineHandling.None> or <xref:System.Xml.NewLineHandling.Replace>, the behavior is the same as when writing a text node value."}]}]},{"pos":[2913,3143],"content":"The following table describes what a normalizing <xref:System.Xml.XmlReader> returns for each white space input. For more information, see sections 2.11 and 3.3.3 of the W3C [XML 1.0 Recommendation](http://www.w3.org/TR/REC-xml/).","nodes":[{"content":"The following table describes what a normalizing <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph> returns for each white space input.","pos":[0,112],"source":"The following table describes what a normalizing <xref:System.Xml.XmlReader> returns for each white space input."},{"content":"For more information, see sections 2.11 and 3.3.3 of the W3C <bpt id=\"p1\">[</bpt>XML 1.0 Recommendation<ept id=\"p1\">](http://www.w3.org/TR/REC-xml/)</ept>.","pos":[113,230],"source":" For more information, see sections 2.11 and 3.3.3 of the W3C [XML 1.0 Recommendation](http://www.w3.org/TR/REC-xml/)."}]},{"pos":[3151,3562],"content":"[!NOTE]\n A normalizing reader is any <xref:System.Xml.XmlReader> object created by the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method. These objects always perform line break normalization and full normalization of attributes. The <xref:System.Xml.XmlTextReader> object can also be a normalizing reader if it's <xref:System.Xml.XmlTextReader.Normalization%2A> property is set to `true`.","leadings":["","> "],"nodes":[{"content":" A normalizing reader is any <xref:System.Xml.XmlReader> object created by the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method. These objects always perform line break normalization and full normalization of attributes. The <xref:System.Xml.XmlTextReader> object can also be a normalizing reader if it's <xref:System.Xml.XmlTextReader.Normalization%2A> property is set to `true`.","pos":[8,409],"nodes":[{"content":"A normalizing reader is any <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph> object created by the <ph id=\"ph2\">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName&gt;</ph> method.","pos":[1,149],"source":" A normalizing reader is any <xref:System.Xml.XmlReader> object created by the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method."},{"content":"These objects always perform line break normalization and full normalization of attributes.","pos":[150,241]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlTextReader&gt;</ph> object can also be a normalizing reader if it's <ph id=\"ph2\">&lt;xref:System.Xml.XmlTextReader.Normalization%2A&gt;</ph> property is set to <ph id=\"ph3\">`true`</ph>.","pos":[242,401],"source":" The <xref:System.Xml.XmlTextReader> object can also be a normalizing reader if it's <xref:System.Xml.XmlTextReader.Normalization%2A> property is set to `true`."}]}]},{"pos":[3570,3574],"content":"\\r\\n","nodes":[{"content":"\\r\\n","pos":[0,4]}]},{"pos":[3575,3577],"content":"\\n","nodes":[]},{"pos":[3578,3580],"content":"\\r","nodes":[{"content":"\\r","pos":[0,2]}]},{"pos":[3581,3583],"content":"\\t","nodes":[{"content":"\\t","pos":[0,2]}]},{"pos":[3637,3652],"content":"Text Node Value","nodes":[{"content":"Text Node Value","pos":[0,15]}]},{"pos":[3653,3655],"content":"\\n","nodes":[]},{"pos":[3656,3658],"content":"\\n","nodes":[]},{"pos":[3659,3661],"content":"\\n","nodes":[]},{"pos":[3662,3664],"content":"\\t","nodes":[{"content":"\\t","pos":[0,2]}]},{"pos":[3669,3684],"content":"Attribute Value","nodes":[{"content":"Attribute Value","pos":[0,15]}]},{"pos":[3685,3697],"content":"single space","nodes":[{"content":"single space","pos":[0,12]}]},{"pos":[3698,3710],"content":"single space","nodes":[{"content":"single space","pos":[0,12]}]},{"pos":[3711,3723],"content":"single space","nodes":[{"content":"single space","pos":[0,12]}]},{"pos":[3724,3736],"content":"single space","nodes":[{"content":"single space","pos":[0,12]}]}],"pos":[47937,51760],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Xml.NewLineHandling\"></xref> values. The default is <xref href=\"System.Xml.NewLineHandling.Replace\"></xref>.","nodes":[{"pos":[0,138],"content":"One of the <xref href=\"System.Xml.NewLineHandling\"></xref> values. The default is <xref href=\"System.Xml.NewLineHandling.Replace\"></xref>.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.NewLineHandling\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,66],"source":"One of the <xref href=\"System.Xml.NewLineHandling\"></xref> values."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Xml.NewLineHandling.Replace\"&gt;&lt;/xref&gt;</ph>.","pos":[67,138],"source":" The default is <xref href=\"System.Xml.NewLineHandling.Replace\"></xref>."}]}],"pos":[51917,52056],"yaml":true},{"content":"Gets or sets a value indicating whether to write attributes on a new line.","nodes":[{"pos":[0,74],"content":"Gets or sets a value indicating whether to write attributes on a new line.","nodes":[{"content":"Gets or sets a value indicating whether to write attributes on a new line.","pos":[0,74]}]}],"pos":[53619,53694],"yaml":true},{"content":"This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.","nodes":[{"pos":[0,129],"content":"This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.","nodes":[{"content":"This property only applies to <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances that output text content; otherwise, this setting is ignored.","pos":[0,129],"source":"This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored."}]}],"pos":[53705,53835],"yaml":true,"extradata":"MT"},{"content":"`true` to write attributes on individual lines; otherwise, `false`. The default is `false`.  \n  \n <block subset=\"none\" type=\"note\"><p>  \n This setting has no effect when the <xref href=\"System.Xml.XmlWriterSettings.Indent\"></xref> property value is `false`.  \n  \n</p></block>  \n  \n When <xref href=\"System.Xml.XmlWriterSettings.NewLineOnAttributes\"></xref> is set to `true`, each attribute is pre-pended with a new line and one extra level of indentation.","nodes":[{"pos":[0,91],"content":"`true` to write attributes on individual lines; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to write attributes on individual lines; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,67],"source":"`true` to write attributes on individual lines; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[68,91],"source":" The default is `false`."}]},{"pos":[98,257],"content":"<block subset=\"none\" type=\"note\"><p>  \n This setting has no effect when the <xref href=\"System.Xml.XmlWriterSettings.Indent\"></xref> property value is `false`.","nodes":[{"content":"This setting has no effect when the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlWriterSettings.Indent\"&gt;&lt;/xref&gt;</ph> property value is <ph id=\"ph2\">`false`</ph>.","pos":[40,159],"source":" This setting has no effect when the <xref href=\"System.Xml.XmlWriterSettings.Indent\"></xref> property value is `false`."}]},{"pos":[263,275],"content":"</p></block>","nodes":[]},{"pos":[282,455],"content":"When <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlWriterSettings.NewLineOnAttributes\"&gt;&lt;/xref&gt;</ph> is set to <ph id=\"ph2\">`true`</ph>, each attribute is pre-pended with a new line and one extra level of indentation.","source":"When <xref href=\"System.Xml.XmlWriterSettings.NewLineOnAttributes\"></xref> is set to `true`, each attribute is pre-pended with a new line and one extra level of indentation."}],"pos":[54613,55086],"yaml":true},{"content":"Gets or sets a value indicating whether to omit an XML declaration.","nodes":[{"pos":[0,67],"content":"Gets or sets a value indicating whether to omit an XML declaration.","nodes":[{"content":"Gets or sets a value indicating whether to omit an XML declaration.","pos":[0,67]}]}],"pos":[56647,56715],"yaml":true},{"content":"This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.  \n  \n If <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> is set to `false`, The XML declaration is written automatically  \n  \n The XML declaration is always written if <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> is set to <xref:System.Xml.ConformanceLevel.Document>, even if <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> is set to `true`.  \n  \n The XML declaration is never written if <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> is set to <xref:System.Xml.ConformanceLevel.Fragment>. You can call <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> to explicitly write out an XML declaration.","nodes":[{"pos":[0,129],"content":"This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.","nodes":[{"content":"This property only applies to <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances that output text content; otherwise, this setting is ignored.","pos":[0,129],"source":"This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored."}]},{"pos":[136,260],"content":"If <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A&gt;</ph> is set to <ph id=\"ph2\">`false`</ph>, The XML declaration is written automatically","source":"If <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> is set to `false`, The XML declaration is written automatically"},{"pos":[267,502],"content":"The XML declaration is always written if <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A&gt;</ph> is set to <ph id=\"ph2\">&lt;xref:System.Xml.ConformanceLevel.Document&gt;</ph>, even if <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A&gt;</ph> is set to <ph id=\"ph4\">`true`</ph>.","source":"The XML declaration is always written if <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> is set to <xref:System.Xml.ConformanceLevel.Document>, even if <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> is set to `true`."},{"pos":[509,774],"content":"The XML declaration is never written if <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> is set to <xref:System.Xml.ConformanceLevel.Fragment>. You can call <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> to explicitly write out an XML declaration.","nodes":[{"content":"The XML declaration is never written if <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> is set to <xref:System.Xml.ConformanceLevel.Fragment>. You can call <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> to explicitly write out an XML declaration.","pos":[0,265],"nodes":[{"content":"The XML declaration is never written if <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A&gt;</ph> is set to <ph id=\"ph2\">&lt;xref:System.Xml.ConformanceLevel.Fragment&gt;</ph>.","pos":[0,150],"source":"The XML declaration is never written if <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> is set to <xref:System.Xml.ConformanceLevel.Fragment>."},{"content":"You can call <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A&gt;</ph> to explicitly write out an XML declaration.","pos":[151,265],"source":" You can call <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> to explicitly write out an XML declaration."}]}]}],"pos":[56726,57509],"yaml":true,"extradata":"MT"},{"content":"`true` to omit the XML declaration; otherwise, `false`. The default is `false`, an XML declaration is written.","nodes":[{"pos":[0,110],"content":"`true` to omit the XML declaration; otherwise, `false`. The default is `false`, an XML declaration is written.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to omit the XML declaration; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,55],"source":"`true` to omit the XML declaration; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>, an XML declaration is written.","pos":[56,110],"source":" The default is `false`, an XML declaration is written."}]}],"pos":[58014,58127],"yaml":true},{"content":"Gets the method used to serialize the <xref href=\"System.Xml.XmlWriter\"></xref> output.","nodes":[{"pos":[0,87],"content":"Gets the method used to serialize the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlWriter\"&gt;&lt;/xref&gt;</ph> output.","source":"Gets the method used to serialize the <xref href=\"System.Xml.XmlWriter\"></xref> output."}],"pos":[59651,59739],"yaml":true},{"content":"This property specifies the method used to serialize the output. The output can be serialized using the HTML rules, the XML 1.0 rules, and so on. This setting is set by the XSLT processor and is used internally by Visual Studio.","nodes":[{"pos":[0,228],"content":"This property specifies the method used to serialize the output. The output can be serialized using the HTML rules, the XML 1.0 rules, and so on. This setting is set by the XSLT processor and is used internally by Visual Studio.","nodes":[{"content":"This property specifies the method used to serialize the output. The output can be serialized using the HTML rules, the XML 1.0 rules, and so on. This setting is set by the XSLT processor and is used internally by Visual Studio.","pos":[0,228],"nodes":[{"content":"This property specifies the method used to serialize the output.","pos":[0,64]},{"content":"The output can be serialized using the HTML rules, the XML 1.0 rules, and so on.","pos":[65,145]},{"content":"This setting is set by the XSLT processor and is used internally by Visual Studio.","pos":[146,228]}]}]}],"pos":[59750,59979],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Xml.XmlOutputMethod\"></xref> values. The default is <xref href=\"System.Xml.XmlOutputMethod.Xml\"></xref>.","nodes":[{"pos":[0,134],"content":"One of the <xref href=\"System.Xml.XmlOutputMethod\"></xref> values. The default is <xref href=\"System.Xml.XmlOutputMethod.Xml\"></xref>.","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlOutputMethod\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,66],"source":"One of the <xref href=\"System.Xml.XmlOutputMethod\"></xref> values."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlOutputMethod.Xml\"&gt;&lt;/xref&gt;</ph>.","pos":[67,134],"source":" The default is <xref href=\"System.Xml.XmlOutputMethod.Xml\"></xref>."}]}],"pos":[60128,60263],"yaml":true},{"content":"Resets the members of the settings class to their default values.","nodes":[{"pos":[0,65],"content":"Resets the members of the settings class to their default values.","nodes":[{"content":"Resets the members of the settings class to their default values.","pos":[0,65]}]}],"pos":[61439,61505],"yaml":true},{"content":"The following table shows the default property values for an instance of <xref:System.Xml.XmlWriterSettings>.  \n  \n|Property|Initial value|  \n|--------------|-------------------|  \n|<xref:System.Xml.XmlWriterSettings.Async%2A>|`false`.|  \n|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`.|  \n|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`.|  \n|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  \n|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|`Encoding.UTF8`.|  \n|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`.|  \n|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Two spaces.|  \n|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\\r\\n`.|  \n|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace>.|  \n|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`.|  \n|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`.|  \n|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`.|","nodes":[{"pos":[0,109],"content":"The following table shows the default property values for an instance of <xref:System.Xml.XmlWriterSettings>.","nodes":[{"content":"The following table shows the default property values for an instance of <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph>.","pos":[0,109],"source":"The following table shows the default property values for an instance of <xref:System.Xml.XmlWriterSettings>."}]},{"pos":[116,124],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[125,138],"content":"Initial value","nodes":[{"content":"Initial value","pos":[0,13]}]},{"pos":[182,226],"content":"<xref:System.Xml.XmlWriterSettings.Async%2A>","nodes":[]},{"pos":[227,235],"content":"<ph id=\"ph1\">`false`</ph>.","source":"`false`."},{"pos":[240,294],"content":"<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>","nodes":[]},{"pos":[295,302],"content":"<ph id=\"ph1\">`true`</ph>.","source":"`true`."},{"pos":[307,357],"content":"<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>","nodes":[]},{"pos":[358,366],"content":"<ph id=\"ph1\">`false`</ph>.","source":"`false`."},{"pos":[371,426],"content":"<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>","nodes":[]},{"pos":[427,471],"content":"<xref:System.Xml.ConformanceLevel.Document>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.ConformanceLevel.Document&gt;</ph>.","pos":[0,44],"source":"<xref:System.Xml.ConformanceLevel.Document>."}]},{"pos":[476,523],"content":"<xref:System.Xml.XmlWriterSettings.Encoding%2A>","nodes":[]},{"pos":[524,540],"content":"<ph id=\"ph1\">`Encoding.UTF8`</ph>.","source":"`Encoding.UTF8`."},{"pos":[545,590],"content":"<xref:System.Xml.XmlWriterSettings.Indent%2A>","nodes":[]},{"pos":[591,599],"content":"<ph id=\"ph1\">`false`</ph>.","source":"`false`."},{"pos":[604,654],"content":"<xref:System.Xml.XmlWriterSettings.IndentChars%2A>","nodes":[]},{"pos":[655,666],"content":"Two spaces.","nodes":[{"content":"Two spaces.","pos":[0,11]}]},{"pos":[671,722],"content":"<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>","nodes":[]},{"pos":[723,730],"content":"<ph id=\"ph1\">`\\r\\n`</ph>.","source":"`\\r\\n`."},{"pos":[735,789],"content":"<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>","nodes":[]},{"pos":[790,832],"content":"<xref:System.Xml.NewLineHandling.Replace>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.NewLineHandling.Replace&gt;</ph>.","pos":[0,42],"source":"<xref:System.Xml.NewLineHandling.Replace>."}]},{"pos":[837,895],"content":"<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>","nodes":[]},{"pos":[896,904],"content":"<ph id=\"ph1\">`false`</ph>.","source":"`false`."},{"pos":[909,966],"content":"<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>","nodes":[]},{"pos":[967,975],"content":"<ph id=\"ph1\">`false`</ph>.","source":"`false`."},{"pos":[980,1042],"content":"<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>","nodes":[]},{"pos":[1043,1050],"content":"<ph id=\"ph1\">`true`</ph>.","source":"`true`."}],"pos":[61516,62587],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a value that indicates whether the <xref href=\"System.Xml.XmlWriter\"></xref> will add closing tags to all unclosed element tags when the <xref href=\"System.Xml.XmlWriter.Close\"></xref> method is called.","nodes":[{"pos":[0,215],"content":"Gets or sets a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlWriter\"&gt;&lt;/xref&gt;</ph> will add closing tags to all unclosed element tags when the <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlWriter.Close\"&gt;&lt;/xref&gt;</ph> method is called.","source":"Gets or sets a value that indicates whether the <xref href=\"System.Xml.XmlWriter\"></xref> will add closing tags to all unclosed element tags when the <xref href=\"System.Xml.XmlWriter.Close\"></xref> method is called."}],"pos":[64228,64444],"yaml":true},{"content":"If you set this flag to `false`, the output XML file may not be well-formed.","nodes":[{"pos":[0,76],"content":"If you set this flag to <ph id=\"ph1\">`false`</ph>, the output XML file may not be well-formed.","source":"If you set this flag to `false`, the output XML file may not be well-formed."}],"pos":[64455,64532],"yaml":true,"extradata":"MT"},{"content":"`true` if all unclosed element tags will be closed out; otherwise, `false`. The default value is `true`.","nodes":[{"pos":[0,104],"content":"`true` if all unclosed element tags will be closed out; otherwise, `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if all unclosed element tags will be closed out; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,75],"source":"`true` if all unclosed element tags will be closed out; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[76,104],"source":" The default value is `true`."}]}],"pos":[64663,64770],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.XmlWriterSettings\n  commentId: T:System.Xml.XmlWriterSettings\n  id: XmlWriterSettings\n  children:\n  - System.Xml.XmlWriterSettings.#ctor\n  - System.Xml.XmlWriterSettings.Async\n  - System.Xml.XmlWriterSettings.CheckCharacters\n  - System.Xml.XmlWriterSettings.Clone\n  - System.Xml.XmlWriterSettings.CloseOutput\n  - System.Xml.XmlWriterSettings.ConformanceLevel\n  - System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes\n  - System.Xml.XmlWriterSettings.Encoding\n  - System.Xml.XmlWriterSettings.Indent\n  - System.Xml.XmlWriterSettings.IndentChars\n  - System.Xml.XmlWriterSettings.NamespaceHandling\n  - System.Xml.XmlWriterSettings.NewLineChars\n  - System.Xml.XmlWriterSettings.NewLineHandling\n  - System.Xml.XmlWriterSettings.NewLineOnAttributes\n  - System.Xml.XmlWriterSettings.OmitXmlDeclaration\n  - System.Xml.XmlWriterSettings.OutputMethod\n  - System.Xml.XmlWriterSettings.Reset\n  - System.Xml.XmlWriterSettings.WriteEndDocumentOnClose\n  langs:\n  - csharp\n  name: XmlWriterSettings\n  nameWithType: XmlWriterSettings\n  fullName: System.Xml.XmlWriterSettings\n  type: Class\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Specifies a set of features to support on the <xref href=\"System.Xml.XmlWriter\"></xref> object created by the <xref href=\"System.Xml.XmlWriter.Create*\"></xref> method.\n  remarks: \"The <xref:System.Xml.XmlWriter.Create%2A> method is the preferred mechanism for obtaining <xref:System.Xml.XmlWriter> instances. The <xref:System.Xml.XmlWriter.Create%2A> method uses the <xref:System.Xml.XmlWriterSettings> class to specify which features to implement in the <xref:System.Xml.XmlWriter> object that is created.  \\n  \\n> [!NOTE]\\n>  If you're using the <xref:System.Xml.XmlWriter> object with the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method, you should use the <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> property to obtain an <xref:System.Xml.XmlWriterSettings> object with the correct settings. This ensures that the created <xref:System.Xml.XmlWriter> object has the correct output settings.  \\n  \\n The <xref:System.Xml.XmlWriterSettings> class provides properties that control data conformance and output format.  \\n  \\n For data conformance checks and auto-corrections, use these properties:  \\n  \\n|Property|Specifies|Value|Default|  \\n|--------------|---------------|-----------|-------------|  \\n|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|Whether to check that characters are in the legal XML character set, as defined by W3C.|`true` or `false`|`true`|  \\n|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|Whether to check that output is a well-formed XML 1.0 document or fragment.|<xref:System.Xml.ConformanceLevel?displayProperty=fullName> (document-level), <xref:System.Xml.ConformanceLevel.Fragment> (fragment-level), or <xref:System.Xml.ConformanceLevel.Auto> (auto-detection)|<xref:System.Xml.ConformanceLevel?displayProperty=fullName> (document-level conformance)|  \\n|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|Whether to add closing tags to all unclosed elements when the <xref:System.Xml.XmlWriter.Close%2A> method is called.|`true` or `false`|`true`|  \\n  \\n To specify output format, use these properties:  \\n  \\n|Property|Specifies|Value|Default|  \\n|--------------|---------------|-----------|-------------|  \\n|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|Text encoding to use.|<xref:System.Text.Encoding?displayProperty=fullName> value|<xref:System.Text.Encoding.UTF8?displayProperty=fullName>|  \\n|<xref:System.Xml.XmlWriterSettings.Indent%2A>|Whether to indent elements|`true` or `false`|`false` (no indentation)|  \\n|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Character string to use when indenting (used when <xref:System.Xml.XmlWriterSettings.Indent%2A> is set to `true`).|String|Two spaces|  \\n|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|Character string to use for line breaks.|String|`\\\\r\\\\n` (carriage return, line feed)|  \\n|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|How to handle newline characters.|<xref:System.Xml.NewLineHandling?displayProperty=fullName> value: <xref:System.Xml.NewLineHandling.Entitize> (normalize), <xref:System.Xml.NewLineHandling.Replace> (replace), or <xref:System.Xml.NewLineHandling.None> (leave unchanged)|<xref:System.Xml.NewLineHandling.Replace> (replace with characters specified by <xref:System.Xml.XmlWriterSettings.NewLineChars%2A>)|  \\n|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|Whether to write attributes on individual lines (has no effect when <xref:System.Xml.XmlWriterSettings.Indent%2A> is `false`).|`true` or `false`|`false`|  \\n|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|Whether to write an XML declaration.|`true` or `false`|`false`|\"\n  example:\n  - \"The following example creates an <xref:System.Xml.XmlWriter> that writes to an XML file and writes each attribute on a new line.  \\n  \\n [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]\\n [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  \\n  \\n The sample produces the following output:  \\n  \\n```  \\n<order  \\n  orderID=\\\"367A54\\\"  \\n  date=\\\"2001-05-03\\\">  \\n  <price>19.95</price>  \\n</order>  \\n```\"\n  syntax:\n    content: public sealed class XmlWriterSettings\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlWriterSettings.#ctor\n  commentId: M:System.Xml.XmlWriterSettings.#ctor\n  id: '#ctor'\n  parent: System.Xml.XmlWriterSettings\n  langs:\n  - csharp\n  name: XmlWriterSettings()\n  nameWithType: XmlWriterSettings.XmlWriterSettings()\n  fullName: XmlWriterSettings.XmlWriterSettings()\n  type: Constructor\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Xml.XmlWriterSettings\"></xref> class.\n  remarks: \"The following table shows initial property values for an instance of <xref:System.Xml.XmlWriterSettings>.  \\n  \\n|Property|Initial Value|  \\n|--------------|-------------------|  \\n|<xref:System.Xml.XmlWriterSettings.Async%2A>|`false`.|  \\n|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`.|  \\n|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`.|  \\n|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  \\n|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|`Encoding.UTF8`.|  \\n|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`.|  \\n|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Two spaces.|  \\n|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\\\\r\\\\n` (carriage return, new line).|  \\n|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace>.|  \\n|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`.|  \\n|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`.|  \\n|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`.|\"\n  example:\n  - \"The following example creates an <xref:System.Xml.XmlWriter> object that uses the TAB character for indentation.  \\n  \\n [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]\\n [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]\"\n  syntax:\n    content: public XmlWriterSettings ();\n    parameters: []\n  overload: System.Xml.XmlWriterSettings.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlWriterSettings.Async\n  commentId: P:System.Xml.XmlWriterSettings.Async\n  id: Async\n  parent: System.Xml.XmlWriterSettings\n  langs:\n  - csharp\n  name: Async\n  nameWithType: XmlWriterSettings.Async\n  fullName: XmlWriterSettings.Async\n  type: Property\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Gets or sets a value that indicates whether asynchronous <xref href=\"System.Xml.XmlWriter\"></xref> methods can be used on a particular <xref href=\"System.Xml.XmlWriter\"></xref> instance.\n  remarks: \"You must set this value to `true` when you create a new <xref:System.Xml.XmlWriter> instance if you want to use asynchronous <xref:System.Xml.XmlWriter> methods on that instance. After the <xref:System.Xml.XmlWriter> instance is created, the <xref:System.Xml.XmlWriterSettings.Async%2A> property is read-only. The default value of this property is `false`.  \\n  \\n This flag is ignored by the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> overload. This means that if you create a new <xref:System.Xml.XmlWriter> based on an existing <xref:System.Xml.XmlWriter>, the async behavior depends on the input <xref:System.Xml.XmlWriter>, and you cannot use the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to change the async behavior.\"\n  syntax:\n    content: public bool Async { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if asynchronous methods can be used; otherwise, `false`.'\n  overload: System.Xml.XmlWriterSettings.Async*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlWriterSettings.CheckCharacters\n  commentId: P:System.Xml.XmlWriterSettings.CheckCharacters\n  id: CheckCharacters\n  parent: System.Xml.XmlWriterSettings\n  langs:\n  - csharp\n  name: CheckCharacters\n  nameWithType: XmlWriterSettings.CheckCharacters\n  fullName: XmlWriterSettings.CheckCharacters\n  type: Property\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Gets or sets a value that indicates whether the XML writer should check to ensure that all characters in the document conform to the \"2.2 Characters\" section of the W3C [XML 1.0 Recommendation](http://www.w3.org/TR/REC-xml/#charsets).\n  remarks: \"If the <xref:System.Xml.XmlWriter> object supports character checking, it throws an exception if any characters are outside the range of legal XML characters specified by the \\\"2.2 Characters\\\" section of the W3C [XML 1.0 Recommendation](http://www.w3.org/TR/REC-xml/#charsets).  \\n  \\n Character checking does not include checking for illegal characters in XML names or checking that all XML names are valid. These checks are part of conformance checking and are always performed.\"\n  syntax:\n    content: public bool CheckCharacters { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to do character checking; otherwise, `false`. The default is `true`.'\n  overload: System.Xml.XmlWriterSettings.CheckCharacters*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlWriterSettings.Clone\n  commentId: M:System.Xml.XmlWriterSettings.Clone\n  id: Clone\n  parent: System.Xml.XmlWriterSettings\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: XmlWriterSettings.Clone()\n  fullName: XmlWriterSettings.Clone()\n  type: Method\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Creates a copy of the <xref href=\"System.Xml.XmlWriterSettings\"></xref> instance.\n  remarks: The cloned <xref:System.Xml.XmlWriterSettings> object can be modified without affecting the settings on the original object.\n  syntax:\n    content: public System.Xml.XmlWriterSettings Clone ();\n    parameters: []\n    return:\n      type: System.Xml.XmlWriterSettings\n      description: The cloned <xref href=\"System.Xml.XmlWriterSettings\"></xref> object.\n  overload: System.Xml.XmlWriterSettings.Clone*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlWriterSettings.CloseOutput\n  commentId: P:System.Xml.XmlWriterSettings.CloseOutput\n  id: CloseOutput\n  parent: System.Xml.XmlWriterSettings\n  langs:\n  - csharp\n  name: CloseOutput\n  nameWithType: XmlWriterSettings.CloseOutput\n  fullName: XmlWriterSettings.CloseOutput\n  type: Property\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Gets or sets a value indicating whether the <xref href=\"System.Xml.XmlWriter\"></xref> should also close the underlying stream or <xref href=\"System.IO.TextWriter\"></xref> when the <xref href=\"System.Xml.XmlWriter.Close\"></xref> method is called.\n  remarks: \"This setting is useful when you wish to write XML to a stream, and then add extra information to the end of the stream after the <xref:System.Xml.XmlWriter> has finished writing.  \\n  \\n This property only applies to <xref:System.Xml.XmlWriter> instances that output XML content to a stream or <xref:System.IO.TextWriter>; otherwise, this setting is ignored.\"\n  example:\n  - \"The following example writes an XML fragment to a memory stream.  \\n  \\n [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]\\n [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]\"\n  syntax:\n    content: public bool CloseOutput { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to also close the underlying stream or <xref href=\"System.IO.TextWriter\"></xref>; otherwise, `false`. The default is `false`.'\n  overload: System.Xml.XmlWriterSettings.CloseOutput*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlWriterSettings.ConformanceLevel\n  commentId: P:System.Xml.XmlWriterSettings.ConformanceLevel\n  id: ConformanceLevel\n  parent: System.Xml.XmlWriterSettings\n  langs:\n  - csharp\n  name: ConformanceLevel\n  nameWithType: XmlWriterSettings.ConformanceLevel\n  fullName: XmlWriterSettings.ConformanceLevel\n  type: Property\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Gets or sets the level of conformance that the XML writer checks the XML output for.\n  remarks: \"The <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=fullName> property configures the XML writer to check and guarantee that the stream being written complies with a certain set of rules. The XML data can be checked to see that it conforms to the rules for a well-formed XML 1.0 document or a document fragment. The following table describes the three settings. The default is document-level conformance.  \\n  \\n|Setting|Description|  \\n|-------------|-----------------|  \\n|<xref:System.Xml.ConformanceLevel.Document>|Ensures that the XML output conforms to the [rules for a well-formed XML 1.0 document](http://www.w3.org/TR/REC-xml/#sec-well-formed) and can be processed by any conforming processor.<br /><br /> The document conformance checks include most of the fragment-level checks and also ensure the following:<br /><br /> -   The top-level item doesn't have any nodes other than XML Declaration, DTD, element, comment, white space, or processing instruction.<br />-   The XML data has one and only one top-level element node.<br /><br /> The XML writer doesn't parse DTD information that is written. The user is responsible for ensuring that the DTD is well-formed.|  \\n|<xref:System.Xml.ConformanceLevel.Fragment>|Ensures that the XML output conforms to the [rules for a well-formed XML 1.0 document fragment](http://www.w3.org/TR/REC-xml/#wf-entities).<br /><br /> This setting accepts XML data that has multiple root elements or text nodes at the top level. This level of checking ensures that any processor can consume the stream being read as an XML 1.0 external parsed entity.<br /><br /> DTD information isn't allowed in document fragments.|  \\n|<xref:System.Xml.ConformanceLevel.Auto>|Specifies that the XML writer should determine the level of conformance checking based on the incoming data. This setting can be useful when you don't know whether the generated XML will be a well-formed XML document or a fragment.<br /><br /> Document conformance checking is applied in the following cases:<br /><br /> -   If the <xref:System.Xml.XmlWriter.WriteStartDocument%2A> method is called.<br />-   If DTD information is written.<br /><br /> Fragment conformance checking is applied if the XML data contains one of these:<br /><br /> -   Text, CDATA, or EntityReference node at the root level.<br />-   More than one element at the root level.<br />-   No element at the root level.<br /><br /> An <xref:System.Xml.XmlException> is thrown if there is a conflict, such as when you try to write a text node and a DTD at the root level.<br /><br /> If you are wrapping another <xref:System.Xml.XmlWriter> object, the outer object doesn't do any additional conformance checking; this is left to the underlying object.|  \\n  \\n If the XML writer detects any information that would violate the specified level of conformance, it throws an exception. In some cases, the XML writer automatically corrects the conformance error. For example, the writer closes an unclosed attribute without throwing an exception. The following table shows how various conformance violations are handled in each setting.  \\n  \\n|Condition|<xref:System.Xml.ConformanceLevel.Document>|<xref:System.Xml.ConformanceLevel.Fragment>|<xref:System.Xml.ConformanceLevel.Auto>|  \\n|---------------|---------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|  \\n|DTD information is found.|Not a violation for this setting. However, the XML writer doesn't check the DTD; the user must ensure that the DTD is well-formed.|<xref:System.Xml.XmlException> is thrown.|Document conformance checking is applied.|  \\n|<xref:System.Xml.XmlWriter.WriteStartDocument%2A> is called.|Not considered a violation for this setting.|<xref:System.Xml.XmlException> is thrown.|Document conformance checking is applied.|  \\n|<xref:System.Xml.XmlWriter.WriteStartDocument%2A> is called multiple times.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|  \\n|A text value appears at the top level (not below an element or attribute node).|<xref:System.Xml.XmlException> is thrown.|Not considered a violation.|Fragment conformance checking is applied.|  \\n|Multiple elements or no elements appear at the top level.|<xref:System.Xml.XmlException> is thrown.|Not considered a violation.|Fragment conformance checking is applied.|  \\n|Top-level item is white space.|Not considered a violation.|Not considered a violation.|Not considered a violation.|  \\n|<xref:System.Xml.XmlWriter.WriteEndAttribute%2A> isn't called to end an attribute node.|Fixed by XML writer.|Fixed by XML writer.|Fixed by XML writer.|  \\n|The XML writer is in an improperly nested state (for example, a <xref:System.Xml.XmlWriter.WriteStartElement%2A> call is followed by a <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>).|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|  \\n|Top-level item is an attribute.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|  \\n|Multiple, contiguous text nodes are found.|Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.|Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.|Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.|  \\n|The same namespace prefix is declared twice in an element.|The XML writer generates a new prefix for the second namespace.|The XML writer generates a new prefix for the second namespace.|The XML writer generates a new prefix for the second namespace.|  \\n|<xref:System.Xml.XmlWriter.WriteStartElement%2A> specifies a prefix and a namespace that isn't declared within that scope, or the prefix is associated with a different namespace.|The XML writer writes the necessary namespace node.|The XML writer writes the necessary namespace node.|The XML writer writes the necessary namespace node.|  \\n|<xref:System.Xml.XmlWriter.WriteStartAttribute%2A> specifies a prefix and a namespace that isn't declared within that scope.|The XML writer writes the necessary namespace node.|The XML writer writes the necessary namespace node.|The XML writer writes the necessary namespace node.|  \\n|<xref:System.Xml.XmlWriter.WriteStartAttribute%2A> specifies a prefix and a namespace, but the prefix is associated with a different in-scope namespace.|The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.|The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.|The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.|  \\n|<xref:System.Xml.XmlWriter.WriteQualifiedName%2A> is used to write element content by using a namespace that doesn't exist within the scope.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|  \\n|<xref:System.Xml.XmlWriter.WriteQualifiedName%2A> is used to write attribute content by using a namespace that doesn't exist within the scope.|The XML writer writes the necessary namespace declaration.|The XML writer writes the necessary namespace declaration.|The XML writer writes the necessary namespace declaration.|  \\n|The `xml:space` attribute doesn't contain a valid value.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|  \\n|An invalid name is encountered.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|  \\n|The `xml` prefix isn't matched to a URI.|The XML writer doesn't check for this type of violation.|The XML writer doesn't check for this type of violation.|The XML writer doesn't check for this type of violation.|  \\n|The `xml` prefix isn't matched to the http://www.w3.org/XML/1998/namespace URI.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|  \\n|The `xmlns` prefix or local name isn't matched to a URI.|The XML writer doesn't check for this type of violation.|The XML writer doesn't check for this type of violation.|The XML writer doesn't check for this type of violation.|  \\n|The `xmlns` prefix or local name isn't matched to the http://www.w3.org/2000/xmlns URI.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|<xref:System.Xml.XmlException> is thrown.|\"\n  example:\n  - \"The following example writes an XML fragment to a memory stream.  \\n  \\n [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]\\n [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]\"\n  syntax:\n    content: public System.Xml.ConformanceLevel ConformanceLevel { get; set; }\n    return:\n      type: System.Xml.ConformanceLevel\n      description: One of the enumeration values that specifies the level of conformance (document, fragment, or automatic detection). The default is <xref href=\"System.Xml.ConformanceLevel.Document\"></xref>.\n  overload: System.Xml.XmlWriterSettings.ConformanceLevel*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes\n  commentId: P:System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes\n  id: DoNotEscapeUriAttributes\n  parent: System.Xml.XmlWriterSettings\n  langs:\n  - csharp\n  name: DoNotEscapeUriAttributes\n  nameWithType: XmlWriterSettings.DoNotEscapeUriAttributes\n  fullName: XmlWriterSettings.DoNotEscapeUriAttributes\n  type: Property\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Gets or sets a value that indicates whether the <xref href=\"System.Xml.XmlWriter\"></xref> does not escape URI attributes.\n  syntax:\n    content: public bool DoNotEscapeUriAttributes { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Xml.XmlWriter\"></xref> do not escape URI attributes; otherwise, `false`.'\n  overload: System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlWriterSettings.Encoding\n  commentId: P:System.Xml.XmlWriterSettings.Encoding\n  id: Encoding\n  parent: System.Xml.XmlWriterSettings\n  langs:\n  - csharp\n  name: Encoding\n  nameWithType: XmlWriterSettings.Encoding\n  fullName: XmlWriterSettings.Encoding\n  type: Property\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Gets or sets the type of text encoding to use.\n  remarks: \"The <xref:System.Xml.XmlWriter> encodes a buffer of characters all at once, rather than character by character. An exception is thrown when the <xref:System.Xml.XmlWriter.Flush%2A> method is called if any encoding errors are encountered.  \\n  \\n The <xref:System.Xml.XmlWriterSettings.Encoding%2A> property only applies to the <xref:System.Xml.XmlWriter> instances that are created either with the specified <xref:System.IO.Stream> or with the specified file name. If the <xref:System.Xml.XmlWriter> instance is created with the specified <xref:System.IO.TextWriter>, the <xref:System.Xml.XmlWriterSettings.Encoding%2A> property is overridden by the encoding of the underlying <xref:System.IO.TextWriter>. For example, if this property is set to Unicode (UTF-16) for a particular <xref:System.Xml.XmlWriter>, but the underlying writer is a <xref:System.IO.StreamWriter> (which derives from <xref:System.IO.TextWriter>) with its encoding set to UTF8, the output will be UTF-8 encoded.  \\n  \\n If the <xref:System.Xml.XmlWriter> instance is created with other output parameters, the <xref:System.Xml.XmlWriterSettings.Encoding%2A> property is ignored.  \\n  \\n In the following example:  \\n  \\n-   The default value of <xref:System.Xml.XmlWriterSettings.Encoding%2A> is `Encoding.UTF8`.  \\n  \\n-   The <xref:System.IO.StreamWriter> is set to `Encoding.Unicode` and the <xref:System.IO.StreamWriter>’s encoding overrides the <xref:System.Xml.XmlWriterSettings.Encoding%2A> setting.  \\n  \\n-   The output will be `Encoding.Unicode`.  \\n  \\n```csharp  \\nusing (StreamWriter output =  \\n    new StreamWriter(new FileStream(\\\"Xml01.xml\\\", FileMode.Create), Encoding.Unicode))  \\n{  \\n    using (XmlWriter xmlWriter =  \\n        XmlWriter.Create(output, new XmlWriterSettings()))  \\n    {  \\n        xmlWriter.WriteStartDocument();  \\n        xmlWriter.WriteStartElement(\\\"Root\\\");  \\n        xmlWriter.WriteEndElement();  \\n        xmlWriter.WriteEndDocument();  \\n    }  \\n}  \\n```  \\n  \\n> [!IMPORTANT]\\n>  Do not accept an <xref:System.Text.Encoding> object from an untrusted source.\"\n  example:\n  - \"The following example writes an XML fragment to a memory stream.  \\n  \\n [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]\\n [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]\"\n  syntax:\n    content: public System.Text.Encoding Encoding { get; set; }\n    return:\n      type: System.Text.Encoding\n      description: The text encoding to use. The default is `Encoding.UTF8`.\n  overload: System.Xml.XmlWriterSettings.Encoding*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlWriterSettings.Indent\n  commentId: P:System.Xml.XmlWriterSettings.Indent\n  id: Indent\n  parent: System.Xml.XmlWriterSettings\n  langs:\n  - csharp\n  name: Indent\n  nameWithType: XmlWriterSettings.Indent\n  fullName: XmlWriterSettings.Indent\n  type: Property\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Gets or sets a value indicating whether to indent elements.\n  remarks: \"This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.  \\n  \\n The elements are indented as long as the element does not contain mixed content. Once the <xref:System.Xml.XmlWriter.WriteString%2A> or <xref:System.Xml.XmlWriter.WriteWhitespace%2A> method is called to write out a mixed element content, the <xref:System.Xml.XmlWriter> stops indenting. The indenting resumes once the mixed content element is closed.\"\n  example:\n  - \"The following example creates an <xref:System.Xml.XmlWriter> object that uses the TAB character for indentation.  \\n  \\n [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]\\n [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]\"\n  syntax:\n    content: public bool Indent { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to write individual elements on new lines and indent; otherwise, `false`. The default is `false`.'\n  overload: System.Xml.XmlWriterSettings.Indent*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlWriterSettings.IndentChars\n  commentId: P:System.Xml.XmlWriterSettings.IndentChars\n  id: IndentChars\n  parent: System.Xml.XmlWriterSettings\n  langs:\n  - csharp\n  name: IndentChars\n  nameWithType: XmlWriterSettings.IndentChars\n  fullName: XmlWriterSettings.IndentChars\n  type: Property\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Gets or sets the character string to use when indenting. This setting is used when the <xref href=\"System.Xml.XmlWriterSettings.Indent\"></xref> property is set to `true`.\n  remarks: This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored. The <xref:System.Xml.XmlWriter> throws an exception if the indent characters would result in invalid XML.\n  example:\n  - \"The following example creates an <xref:System.Xml.XmlWriter> object that uses the TAB character for indentation.  \\n  \\n [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]\\n [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]\"\n  syntax:\n    content: public string IndentChars { get; set; }\n    return:\n      type: System.String\n      description: The character string to use when indenting. This can be set to any string value. However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds. The default is two spaces.\n  overload: System.Xml.XmlWriterSettings.IndentChars*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value assigned to the <xref href=\"System.Xml.XmlWriterSettings.IndentChars\"></xref> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlWriterSettings.NamespaceHandling\n  commentId: P:System.Xml.XmlWriterSettings.NamespaceHandling\n  id: NamespaceHandling\n  parent: System.Xml.XmlWriterSettings\n  langs:\n  - csharp\n  name: NamespaceHandling\n  nameWithType: XmlWriterSettings.NamespaceHandling\n  fullName: XmlWriterSettings.NamespaceHandling\n  type: Property\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Gets or sets a value that indicates whether the <xref href=\"System.Xml.XmlWriter\"></xref> should remove duplicate namespace declarations when writing XML content. The default behavior is for the writer to output all namespace declarations that are present in the writer's namespace resolver.\n  syntax:\n    content: public System.Xml.NamespaceHandling NamespaceHandling { get; set; }\n    return:\n      type: System.Xml.NamespaceHandling\n      description: The <xref href=\"System.Xml.NamespaceHandling\"></xref> enumeration used to specify whether to remove duplicate namespace declarations in the <xref href=\"System.Xml.XmlWriter\"></xref>.\n  overload: System.Xml.XmlWriterSettings.NamespaceHandling*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlWriterSettings.NewLineChars\n  commentId: P:System.Xml.XmlWriterSettings.NewLineChars\n  id: NewLineChars\n  parent: System.Xml.XmlWriterSettings\n  langs:\n  - csharp\n  name: NewLineChars\n  nameWithType: XmlWriterSettings.NewLineChars\n  fullName: XmlWriterSettings.NewLineChars\n  type: Property\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Gets or sets the character string to use for line breaks.\n  remarks: This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored. The <xref:System.Xml.XmlWriter> throws an exception if the line break characters would result in invalid XML.\n  syntax:\n    content: public string NewLineChars { get; set; }\n    return:\n      type: System.String\n      description: The character string to use for line breaks. This can be set to any string value. However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds. The default is <code>\\r\\n</code> (carriage return, new line).\n  overload: System.Xml.XmlWriterSettings.NewLineChars*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value assigned to the <xref href=\"System.Xml.XmlWriterSettings.NewLineChars\"></xref> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlWriterSettings.NewLineHandling\n  commentId: P:System.Xml.XmlWriterSettings.NewLineHandling\n  id: NewLineHandling\n  parent: System.Xml.XmlWriterSettings\n  langs:\n  - csharp\n  name: NewLineHandling\n  nameWithType: XmlWriterSettings.NewLineHandling\n  fullName: XmlWriterSettings.NewLineHandling\n  type: Property\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Gets or sets a value indicating whether to normalize line breaks in the output.\n  remarks: \"This setting applies when writing text content or attribute values. Each of the <xref:System.Xml.NewLineHandling> values is described below:  \\n  \\n-   The <xref:System.Xml.NewLineHandling.Entitize> setting tells the <xref:System.Xml.XmlWriter> to replace new line characters that would not be otherwise preserved by a normalizing <xref:System.Xml.XmlReader> with character entities. This is useful in round-trip scenarios where the output is read by a normalizing <xref:System.Xml.XmlReader>. Additional normalization rules apply for attribute values when round tripping since `\\\\t`, `\\\\n` and `\\\\r` are replaced with a space in attribute values when normalized in an <xref:System.Xml.XmlReader>.  \\n  \\n-   The <xref:System.Xml.NewLineHandling.Replace> setting tells the <xref:System.Xml.XmlWriter> to replace new line characters with `\\\\r\\\\n`, which is the new line format used by the Microsoft Windows operating system. This helps to ensure that the file can be correctly displayed by the Notepad or Microsoft Word applications. This setting also replaces new lines in attributes with character entities to preserve the characters. This is the default value.  \\n  \\n-   The <xref:System.Xml.NewLineHandling.None> setting tells the <xref:System.Xml.XmlWriter> to leave the input unchanged. This setting is used when you not want any new-line processing. This is useful when the output is read by an <xref:System.Xml.XmlReader> that does not do any normalization (for example, an <xref:System.Xml.XmlTextReader> with default settings.)  \\n  \\n The following tables show the output of the <xref:System.Xml.XmlWriter.WriteString%2A> method when supplied with the input value depending on the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property setting. The tables show the output when writing text content and also when writing an attribute value.  \\n  \\n `Text Node Value:`  \\n  \\n||\\\\r\\\\n|\\\\n|\\\\r|\\\\t|  \\n|-|------------|---------|---------|---------|  \\n|Entitize|&#D;\\\\n|\\\\n|&#D;|\\\\t|  \\n|Replace|\\\\r\\\\n|\\\\r\\\\n|\\\\r\\\\n|\\\\t|  \\n|None|\\\\r\\\\n|\\\\n|\\\\r|\\\\t|  \\n  \\n `Attribute Value:`  \\n  \\n||\\\\r\\\\n|\\\\n|\\\\r|\\\\t|  \\n|-|------------|---------|---------|---------|  \\n|Entitize|&#D;&#A;|&#A;|&#D;|&\\\\#9;|  \\n|Replace|&#D;&#A;|&#A;|&#D;|&\\\\#9;|  \\n|None|\\\\r\\\\n|\\\\n|\\\\r|\\\\t|  \\n  \\n> [!NOTE]\\n>  The <xref:System.Xml.XmlWriter> has the following behavior when writing content within a CDATA section, comment, or processing instruction. New lines are never replaced with their character entities, even when the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property is set to <xref:System.Xml.NewLineHandling.Entitize>. This is because character entities are not recognized in CDATA sections, comments or processing instructions. If the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property is set to <xref:System.Xml.NewLineHandling.None> or <xref:System.Xml.NewLineHandling.Replace>, the behavior is the same as when writing a text node value.  \\n  \\n The following table describes what a normalizing <xref:System.Xml.XmlReader> returns for each white space input. For more information, see sections 2.11 and 3.3.3 of the W3C [XML 1.0 Recommendation](http://www.w3.org/TR/REC-xml/).  \\n  \\n> [!NOTE]\\n>  A normalizing reader is any <xref:System.Xml.XmlReader> object created by the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method. These objects always perform line break normalization and full normalization of attributes. The <xref:System.Xml.XmlTextReader> object can also be a normalizing reader if it's <xref:System.Xml.XmlTextReader.Normalization%2A> property is set to `true`.  \\n  \\n||\\\\r\\\\n|\\\\n|\\\\r|\\\\t|  \\n|-|------------|---------|---------|---------|  \\n|Text Node Value|\\\\n|\\\\n|\\\\n|\\\\t|  \\n|Attribute Value|single space|single space|single space|single space|\"\n  syntax:\n    content: public System.Xml.NewLineHandling NewLineHandling { get; set; }\n    return:\n      type: System.Xml.NewLineHandling\n      description: One of the <xref href=\"System.Xml.NewLineHandling\"></xref> values. The default is <xref href=\"System.Xml.NewLineHandling.Replace\"></xref>.\n  overload: System.Xml.XmlWriterSettings.NewLineHandling*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlWriterSettings.NewLineOnAttributes\n  commentId: P:System.Xml.XmlWriterSettings.NewLineOnAttributes\n  id: NewLineOnAttributes\n  parent: System.Xml.XmlWriterSettings\n  langs:\n  - csharp\n  name: NewLineOnAttributes\n  nameWithType: XmlWriterSettings.NewLineOnAttributes\n  fullName: XmlWriterSettings.NewLineOnAttributes\n  type: Property\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Gets or sets a value indicating whether to write attributes on a new line.\n  remarks: This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.\n  example:\n  - \"The following example creates an <xref:System.Xml.XmlWriter> that writes to an XML file and writes each attribute on a new line.  \\n  \\n [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]\\n [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  \\n  \\n The sample produces the following output:  \\n  \\n```  \\n<order  \\n  orderID=\\\"367A54\\\"  \\n  date=\\\"2001-05-03\\\">  \\n  <price>19.95</price>  \\n</order>  \\n```\"\n  syntax:\n    content: public bool NewLineOnAttributes { get; set; }\n    return:\n      type: System.Boolean\n      description: \"`true` to write attributes on individual lines; otherwise, `false`. The default is `false`.  \\n  \\n <block subset=\\\"none\\\" type=\\\"note\\\"><p>  \\n This setting has no effect when the <xref href=\\\"System.Xml.XmlWriterSettings.Indent\\\"></xref> property value is `false`.  \\n  \\n</p></block>  \\n  \\n When <xref href=\\\"System.Xml.XmlWriterSettings.NewLineOnAttributes\\\"></xref> is set to `true`, each attribute is pre-pended with a new line and one extra level of indentation.\"\n  overload: System.Xml.XmlWriterSettings.NewLineOnAttributes*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlWriterSettings.OmitXmlDeclaration\n  commentId: P:System.Xml.XmlWriterSettings.OmitXmlDeclaration\n  id: OmitXmlDeclaration\n  parent: System.Xml.XmlWriterSettings\n  langs:\n  - csharp\n  name: OmitXmlDeclaration\n  nameWithType: XmlWriterSettings.OmitXmlDeclaration\n  fullName: XmlWriterSettings.OmitXmlDeclaration\n  type: Property\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Gets or sets a value indicating whether to omit an XML declaration.\n  remarks: \"This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.  \\n  \\n If <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> is set to `false`, The XML declaration is written automatically  \\n  \\n The XML declaration is always written if <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> is set to <xref:System.Xml.ConformanceLevel.Document>, even if <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> is set to `true`.  \\n  \\n The XML declaration is never written if <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> is set to <xref:System.Xml.ConformanceLevel.Fragment>. You can call <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> to explicitly write out an XML declaration.\"\n  example:\n  - \"The following example writes an XML fragment to a memory stream.  \\n  \\n [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]\\n [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]\"\n  syntax:\n    content: public bool OmitXmlDeclaration { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to omit the XML declaration; otherwise, `false`. The default is `false`, an XML declaration is written.'\n  overload: System.Xml.XmlWriterSettings.OmitXmlDeclaration*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlWriterSettings.OutputMethod\n  commentId: P:System.Xml.XmlWriterSettings.OutputMethod\n  id: OutputMethod\n  parent: System.Xml.XmlWriterSettings\n  langs:\n  - csharp\n  name: OutputMethod\n  nameWithType: XmlWriterSettings.OutputMethod\n  fullName: XmlWriterSettings.OutputMethod\n  type: Property\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Gets the method used to serialize the <xref href=\"System.Xml.XmlWriter\"></xref> output.\n  remarks: This property specifies the method used to serialize the output. The output can be serialized using the HTML rules, the XML 1.0 rules, and so on. This setting is set by the XSLT processor and is used internally by Visual Studio.\n  syntax:\n    content: public System.Xml.XmlOutputMethod OutputMethod { get; }\n    return:\n      type: System.Xml.XmlOutputMethod\n      description: One of the <xref href=\"System.Xml.XmlOutputMethod\"></xref> values. The default is <xref href=\"System.Xml.XmlOutputMethod.Xml\"></xref>.\n  overload: System.Xml.XmlWriterSettings.OutputMethod*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlWriterSettings.Reset\n  commentId: M:System.Xml.XmlWriterSettings.Reset\n  id: Reset\n  parent: System.Xml.XmlWriterSettings\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: XmlWriterSettings.Reset()\n  fullName: XmlWriterSettings.Reset()\n  type: Method\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Resets the members of the settings class to their default values.\n  remarks: \"The following table shows the default property values for an instance of <xref:System.Xml.XmlWriterSettings>.  \\n  \\n|Property|Initial value|  \\n|--------------|-------------------|  \\n|<xref:System.Xml.XmlWriterSettings.Async%2A>|`false`.|  \\n|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`.|  \\n|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`.|  \\n|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  \\n|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|`Encoding.UTF8`.|  \\n|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`.|  \\n|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Two spaces.|  \\n|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\\\\r\\\\n`.|  \\n|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace>.|  \\n|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`.|  \\n|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`.|  \\n|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`.|\"\n  syntax:\n    content: public void Reset ();\n    parameters: []\n  overload: System.Xml.XmlWriterSettings.Reset*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlWriterSettings.WriteEndDocumentOnClose\n  commentId: P:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose\n  id: WriteEndDocumentOnClose\n  parent: System.Xml.XmlWriterSettings\n  langs:\n  - csharp\n  name: WriteEndDocumentOnClose\n  nameWithType: XmlWriterSettings.WriteEndDocumentOnClose\n  fullName: XmlWriterSettings.WriteEndDocumentOnClose\n  type: Property\n  assemblies:\n  - System.Xml.ReaderWriter\n  - System.Xml\n  - netstandard\n  namespace: System.Xml\n  summary: Gets or sets a value that indicates whether the <xref href=\"System.Xml.XmlWriter\"></xref> will add closing tags to all unclosed element tags when the <xref href=\"System.Xml.XmlWriter.Close\"></xref> method is called.\n  remarks: If you set this flag to `false`, the output XML file may not be well-formed.\n  syntax:\n    content: public bool WriteEndDocumentOnClose { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if all unclosed element tags will be closed out; otherwise, `false`. The default value is `true`.'\n  overload: System.Xml.XmlWriterSettings.WriteEndDocumentOnClose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Xml.XmlWriterSettings.#ctor\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: XmlWriterSettings()\n  nameWithType: XmlWriterSettings.XmlWriterSettings()\n  fullName: XmlWriterSettings.XmlWriterSettings()\n- uid: System.Xml.XmlWriterSettings.Async\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: Async\n  nameWithType: XmlWriterSettings.Async\n  fullName: XmlWriterSettings.Async\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.XmlWriterSettings.CheckCharacters\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: CheckCharacters\n  nameWithType: XmlWriterSettings.CheckCharacters\n  fullName: XmlWriterSettings.CheckCharacters\n- uid: System.Xml.XmlWriterSettings.Clone\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: Clone()\n  nameWithType: XmlWriterSettings.Clone()\n  fullName: XmlWriterSettings.Clone()\n- uid: System.Xml.XmlWriterSettings\n  parent: System.Xml\n  isExternal: false\n  name: XmlWriterSettings\n  nameWithType: XmlWriterSettings\n  fullName: System.Xml.XmlWriterSettings\n- uid: System.Xml.XmlWriterSettings.CloseOutput\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: CloseOutput\n  nameWithType: XmlWriterSettings.CloseOutput\n  fullName: XmlWriterSettings.CloseOutput\n- uid: System.Xml.XmlWriterSettings.ConformanceLevel\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: ConformanceLevel\n  nameWithType: XmlWriterSettings.ConformanceLevel\n  fullName: XmlWriterSettings.ConformanceLevel\n- uid: System.Xml.ConformanceLevel\n  parent: System.Xml\n  isExternal: false\n  name: ConformanceLevel\n  nameWithType: ConformanceLevel\n  fullName: System.Xml.ConformanceLevel\n- uid: System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: DoNotEscapeUriAttributes\n  nameWithType: XmlWriterSettings.DoNotEscapeUriAttributes\n  fullName: XmlWriterSettings.DoNotEscapeUriAttributes\n- uid: System.Xml.XmlWriterSettings.Encoding\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: Encoding\n  nameWithType: XmlWriterSettings.Encoding\n  fullName: XmlWriterSettings.Encoding\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Xml.XmlWriterSettings.Indent\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: Indent\n  nameWithType: XmlWriterSettings.Indent\n  fullName: XmlWriterSettings.Indent\n- uid: System.Xml.XmlWriterSettings.IndentChars\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: IndentChars\n  nameWithType: XmlWriterSettings.IndentChars\n  fullName: XmlWriterSettings.IndentChars\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xml.XmlWriterSettings.NamespaceHandling\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: NamespaceHandling\n  nameWithType: XmlWriterSettings.NamespaceHandling\n  fullName: XmlWriterSettings.NamespaceHandling\n- uid: System.Xml.NamespaceHandling\n  parent: System.Xml\n  isExternal: false\n  name: NamespaceHandling\n  nameWithType: NamespaceHandling\n  fullName: System.Xml.NamespaceHandling\n- uid: System.Xml.XmlWriterSettings.NewLineChars\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: NewLineChars\n  nameWithType: XmlWriterSettings.NewLineChars\n  fullName: XmlWriterSettings.NewLineChars\n- uid: System.Xml.XmlWriterSettings.NewLineHandling\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: NewLineHandling\n  nameWithType: XmlWriterSettings.NewLineHandling\n  fullName: XmlWriterSettings.NewLineHandling\n- uid: System.Xml.NewLineHandling\n  parent: System.Xml\n  isExternal: false\n  name: NewLineHandling\n  nameWithType: NewLineHandling\n  fullName: System.Xml.NewLineHandling\n- uid: System.Xml.XmlWriterSettings.NewLineOnAttributes\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: NewLineOnAttributes\n  nameWithType: XmlWriterSettings.NewLineOnAttributes\n  fullName: XmlWriterSettings.NewLineOnAttributes\n- uid: System.Xml.XmlWriterSettings.OmitXmlDeclaration\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: OmitXmlDeclaration\n  nameWithType: XmlWriterSettings.OmitXmlDeclaration\n  fullName: XmlWriterSettings.OmitXmlDeclaration\n- uid: System.Xml.XmlWriterSettings.OutputMethod\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: OutputMethod\n  nameWithType: XmlWriterSettings.OutputMethod\n  fullName: XmlWriterSettings.OutputMethod\n- uid: System.Xml.XmlOutputMethod\n  parent: System.Xml\n  isExternal: false\n  name: XmlOutputMethod\n  nameWithType: XmlOutputMethod\n  fullName: System.Xml.XmlOutputMethod\n- uid: System.Xml.XmlWriterSettings.Reset\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: Reset()\n  nameWithType: XmlWriterSettings.Reset()\n  fullName: XmlWriterSettings.Reset()\n- uid: System.Xml.XmlWriterSettings.WriteEndDocumentOnClose\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: WriteEndDocumentOnClose\n  nameWithType: XmlWriterSettings.WriteEndDocumentOnClose\n  fullName: XmlWriterSettings.WriteEndDocumentOnClose\n- uid: System.Xml.XmlWriterSettings.#ctor*\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: XmlWriterSettings\n  nameWithType: XmlWriterSettings.XmlWriterSettings\n  fullName: XmlWriterSettings.XmlWriterSettings\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n- uid: System.Xml.XmlWriterSettings.Async*\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: Async\n  nameWithType: XmlWriterSettings.Async\n  fullName: XmlWriterSettings.Async\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n- uid: System.Xml.XmlWriterSettings.CheckCharacters*\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: CheckCharacters\n  nameWithType: XmlWriterSettings.CheckCharacters\n  fullName: XmlWriterSettings.CheckCharacters\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n- uid: System.Xml.XmlWriterSettings.Clone*\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: Clone\n  nameWithType: XmlWriterSettings.Clone\n  fullName: XmlWriterSettings.Clone\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n- uid: System.Xml.XmlWriterSettings.CloseOutput*\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: CloseOutput\n  nameWithType: XmlWriterSettings.CloseOutput\n  fullName: XmlWriterSettings.CloseOutput\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n- uid: System.Xml.XmlWriterSettings.ConformanceLevel*\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: ConformanceLevel\n  nameWithType: XmlWriterSettings.ConformanceLevel\n  fullName: XmlWriterSettings.ConformanceLevel\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n- uid: System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes*\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: DoNotEscapeUriAttributes\n  nameWithType: XmlWriterSettings.DoNotEscapeUriAttributes\n  fullName: XmlWriterSettings.DoNotEscapeUriAttributes\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n- uid: System.Xml.XmlWriterSettings.Encoding*\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: Encoding\n  nameWithType: XmlWriterSettings.Encoding\n  fullName: XmlWriterSettings.Encoding\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n- uid: System.Xml.XmlWriterSettings.Indent*\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: Indent\n  nameWithType: XmlWriterSettings.Indent\n  fullName: XmlWriterSettings.Indent\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n- uid: System.Xml.XmlWriterSettings.IndentChars*\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: IndentChars\n  nameWithType: XmlWriterSettings.IndentChars\n  fullName: XmlWriterSettings.IndentChars\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n- uid: System.Xml.XmlWriterSettings.NamespaceHandling*\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: NamespaceHandling\n  nameWithType: XmlWriterSettings.NamespaceHandling\n  fullName: XmlWriterSettings.NamespaceHandling\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n- uid: System.Xml.XmlWriterSettings.NewLineChars*\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: NewLineChars\n  nameWithType: XmlWriterSettings.NewLineChars\n  fullName: XmlWriterSettings.NewLineChars\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n- uid: System.Xml.XmlWriterSettings.NewLineHandling*\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: NewLineHandling\n  nameWithType: XmlWriterSettings.NewLineHandling\n  fullName: XmlWriterSettings.NewLineHandling\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n- uid: System.Xml.XmlWriterSettings.NewLineOnAttributes*\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: NewLineOnAttributes\n  nameWithType: XmlWriterSettings.NewLineOnAttributes\n  fullName: XmlWriterSettings.NewLineOnAttributes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n- uid: System.Xml.XmlWriterSettings.OmitXmlDeclaration*\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: OmitXmlDeclaration\n  nameWithType: XmlWriterSettings.OmitXmlDeclaration\n  fullName: XmlWriterSettings.OmitXmlDeclaration\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n- uid: System.Xml.XmlWriterSettings.OutputMethod*\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: OutputMethod\n  nameWithType: XmlWriterSettings.OutputMethod\n  fullName: XmlWriterSettings.OutputMethod\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n- uid: System.Xml.XmlWriterSettings.Reset*\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: Reset\n  nameWithType: XmlWriterSettings.Reset\n  fullName: XmlWriterSettings.Reset\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n- uid: System.Xml.XmlWriterSettings.WriteEndDocumentOnClose*\n  parent: System.Xml.XmlWriterSettings\n  isExternal: false\n  name: WriteEndDocumentOnClose\n  nameWithType: XmlWriterSettings.WriteEndDocumentOnClose\n  fullName: XmlWriterSettings.WriteEndDocumentOnClose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlWriterSettings.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}