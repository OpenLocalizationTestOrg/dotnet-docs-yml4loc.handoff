{"nodes":[{"content":"Provides an implementation of the <xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager\"></xref> interface.","nodes":[{"pos":[0,138],"content":"Provides an implementation of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager\"&gt;&lt;/xref&gt;</ph> interface.","source":"Provides an implementation of the <xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager\"></xref> interface."}],"pos":[4764,4903],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> interface is designed to be a format-independent interface to an object that controls serialization. It essentially provides context and services to serializers, which actually perform the deserialization. <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> assists in the deserialization process by keeping track of objects. This is similar in technique to the <xref:System.ComponentModel.Design.IDesignerHost> interface: designers actually provide the user interface (UI), and <xref:System.ComponentModel.Design.IDesignerHost> provides the glue that allows different designers to work together.  \n  \n The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class implements <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>. It is designed to provide a generic form of deserialization that is similar to run-time serializers like the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.  \n  \n The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class achieves three goals:  \n  \n-   It is a simple, turnkey object that can be used to deserialize a variety of formats.  \n  \n-   It is generic and not tied to any particular format. It can be used equally for CodeDOM deserialization as well as markup deserialization.  \n  \n-   It is extensible and supports different serialization methods that are used in copy/paste and undo/redo scenarios.  \n  \n Design-time serialization has the following differences from run-time object serialization:  \n  \n-   The object performing the serialization is generally separate from the run-time object, so that design-time logic can be removed from a component.  \n  \n-   The serialization scheme assumes the object will be created fully initialized, and then modified through property and method invocations during deserialization.  \n  \n-   Properties of an object that have values that were never set on the object (the properties contain the default values) are not serialized. Conversely, the deserialization stream may have holes.  \n  \n-   Emphasis is placed on the quality of the content within the serialization stream, rather than the full serialization of an object. This means that if there is no defined way to serialize an object, that object may be skipped rather than throwing an exception. The serialization engine may provide heuristics here to decide which failures can be ignored and which are unrecoverable.  \n  \n-   The serialization stream may have more data than is needed for deserialization. Source code serialization, for example, has user code mixed in with the code needed to deserialize an object graph. This user code must be ignored on deserialization and preserved on serialization.  \n  \n Because of these differences, a different serialization model applies to design-time serialization. This model utilizes a separate serializer object for each data type being serialized. Each serializer provides its small contribution to the problem as a whole. These serializers are all coordinated through a common serialization manager. The serialization manager is responsible for maintaining state between these different serializers. As an example, consider the following class:  \n  \n [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/Program.cs#2)]\n [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/Program.vb#2)]  \n  \n An instance of this class would utilize three different serializers: one for `SampleObject`, one for strings, and another for integers. The serializer for `SampleObject` is called the root serializer because `SampleObject` is the root of the serialization graph. More complex object graphs can be created as well. For example, consider what would happen if `SampleObject` were changed as follows:  \n  \n [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/SampleObject.cs#11)]\n [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/SampleObject.vb#11)]  \n  \n This allows `SampleObject` to have a child that is another instance of itself. The following code fills in the object graph:  \n  \n [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/SampleObject.cs#12)]\n [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/SampleObject.vb#12)]  \n  \n When `root` is serialized, there will be four serializers used: one root serializer, one serializer for the child `SampleObject`, one serializer for `int`, and one serializer for `string`. Serializers are cached based on type, so there is no need to create a serializer for each instance of `SampleObject`.  \n  \n The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class is based on the idea of a serialization session. A session maintains state that can be accessed by the various serializers. When a session is disposed, this state is destroyed. This helps to ensure that serializers remain largely stateless, and helps to clean up serializers that are have been corrupted. The following tables describe how state is managed in and among sessions.  \n  \n## Global State  \n This state is owned by the serialization manager object, but is independent of the current serialization session.  \n  \n|Object|Usage|  \n|------------|-----------|  \n|Serialization providers|Objects can add themselves as custom serialization providers. Because these providers are used to locate serializers, they outlive a serialization session.|  \n  \n## Session-Owned State  \n This state is owned by a session and is destroyed when a session is destroyed. Consequently, accessing any properties or methods that would manipulate this state will throw an exception if the serialization manager is not in an active session.  \n  \n|Object|Usage|  \n|------------|-----------|  \n|<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event|The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event is attached by a serializer to provide additional resolution of names. All handlers are detached from this event when a session terminates.|  \n|<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event|The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event is raised just before a session is disposed. Then, all handlers are detached from this event.|  \n|Name table|The serialization manager maintains a table that maps between objects and their names. Serializers may give objects names for easy identification. This name table is cleared when the session terminates.|  \n|Serializer cache|The serialization manager maintains a cache of serializers it has been asked to supply. This cache is cleared when the session terminates. The public <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> method can safely be called at any time, but its value is cached only if it is called from within a session.|  \n|Context stack|The serialization manager maintains an object called the context stack, which you can access with the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> property. Serializers can use this stack to store additional information that is available to other serializers. For example, a serializer that is serializing a property value can push the property name on the serialization stack before asking the value to serialize. This stack is cleared when the session is terminated.|  \n|Error list|The serialization manager maintains a list of errors that occurred during serialization. This list, which is accessed through the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property, is cleared when the session is terminated. Accessing the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property between sessions will result in an exception.|","nodes":[{"pos":[0,708],"content":"The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> interface is designed to be a format-independent interface to an object that controls serialization. It essentially provides context and services to serializers, which actually perform the deserialization. <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> assists in the deserialization process by keeping track of objects. This is similar in technique to the <xref:System.ComponentModel.Design.IDesignerHost> interface: designers actually provide the user interface (UI), and <xref:System.ComponentModel.Design.IDesignerHost> provides the glue that allows different designers to work together.","nodes":[{"content":"The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> interface is designed to be a format-independent interface to an object that controls serialization. It essentially provides context and services to serializers, which actually perform the deserialization. <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> assists in the deserialization process by keeping track of objects. This is similar in technique to the <xref:System.ComponentModel.Design.IDesignerHost> interface: designers actually provide the user interface (UI), and <xref:System.ComponentModel.Design.IDesignerHost> provides the glue that allows different designers to work together.","pos":[0,708],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</ph> interface is designed to be a format-independent interface to an object that controls serialization.","pos":[0,184],"source":"The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> interface is designed to be a format-independent interface to an object that controls serialization."},{"content":"It essentially provides context and services to serializers, which actually perform the deserialization.","pos":[185,289]},{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</ph> assists in the deserialization process by keeping track of objects.","pos":[290,437],"source":" <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> assists in the deserialization process by keeping track of objects."},{"content":"This is similar in technique to the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> interface: designers actually provide the user interface (UI), and <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> provides the glue that allows different designers to work together.","pos":[438,708],"source":" This is similar in technique to the <xref:System.ComponentModel.Design.IDesignerHost> interface: designers actually provide the user interface (UI), and <xref:System.ComponentModel.Design.IDesignerHost> provides the glue that allows different designers to work together."}]}]},{"pos":[715,1075],"content":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class implements <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>. It is designed to provide a generic form of deserialization that is similar to run-time serializers like the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.","nodes":[{"content":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class implements <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>. It is designed to provide a generic form of deserialization that is similar to run-time serializers like the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.","pos":[0,360],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager&gt;</ph> class implements <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</ph>.","pos":[0,180],"source":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class implements <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>."},{"content":"It is designed to provide a generic form of deserialization that is similar to run-time serializers like the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>.","pos":[181,360],"source":" It is designed to provide a generic form of deserialization that is similar to run-time serializers like the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>."}]}]},{"pos":[1082,1192],"content":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class achieves three goals:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager&gt;</ph> class achieves three goals:","pos":[0,110],"source":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class achieves three goals:"}]},{"pos":[1202,1286],"content":"It is a simple, turnkey object that can be used to deserialize a variety of formats.","nodes":[{"content":"It is a simple, turnkey object that can be used to deserialize a variety of formats.","pos":[0,84]}]},{"pos":[1296,1434],"content":"It is generic and not tied to any particular format. It can be used equally for CodeDOM deserialization as well as markup deserialization.","nodes":[{"content":"It is generic and not tied to any particular format. It can be used equally for CodeDOM deserialization as well as markup deserialization.","pos":[0,138],"nodes":[{"content":"It is generic and not tied to any particular format.","pos":[0,52]},{"content":"It can be used equally for CodeDOM deserialization as well as markup deserialization.","pos":[53,138]}]}]},{"pos":[1444,1558],"content":"It is extensible and supports different serialization methods that are used in copy/paste and undo/redo scenarios.","nodes":[{"content":"It is extensible and supports different serialization methods that are used in copy/paste and undo/redo scenarios.","pos":[0,114]}]},{"pos":[1565,1656],"content":"Design-time serialization has the following differences from run-time object serialization:","nodes":[{"content":"Design-time serialization has the following differences from run-time object serialization:","pos":[0,91]}]},{"pos":[1666,1812],"content":"The object performing the serialization is generally separate from the run-time object, so that design-time logic can be removed from a component.","nodes":[{"content":"The object performing the serialization is generally separate from the run-time object, so that design-time logic can be removed from a component.","pos":[0,146]}]},{"pos":[1822,1982],"content":"The serialization scheme assumes the object will be created fully initialized, and then modified through property and method invocations during deserialization.","nodes":[{"content":"The serialization scheme assumes the object will be created fully initialized, and then modified through property and method invocations during deserialization.","pos":[0,160]}]},{"pos":[1992,2185],"content":"Properties of an object that have values that were never set on the object (the properties contain the default values) are not serialized. Conversely, the deserialization stream may have holes.","nodes":[{"content":"Properties of an object that have values that were never set on the object (the properties contain the default values) are not serialized. Conversely, the deserialization stream may have holes.","pos":[0,193],"nodes":[{"content":"Properties of an object that have values that were never set on the object (the properties contain the default values) are not serialized.","pos":[0,138]},{"content":"Conversely, the deserialization stream may have holes.","pos":[139,193]}]}]},{"pos":[2195,2576],"content":"Emphasis is placed on the quality of the content within the serialization stream, rather than the full serialization of an object. This means that if there is no defined way to serialize an object, that object may be skipped rather than throwing an exception. The serialization engine may provide heuristics here to decide which failures can be ignored and which are unrecoverable.","nodes":[{"content":"Emphasis is placed on the quality of the content within the serialization stream, rather than the full serialization of an object. This means that if there is no defined way to serialize an object, that object may be skipped rather than throwing an exception. The serialization engine may provide heuristics here to decide which failures can be ignored and which are unrecoverable.","pos":[0,381],"nodes":[{"content":"Emphasis is placed on the quality of the content within the serialization stream, rather than the full serialization of an object.","pos":[0,130]},{"content":"This means that if there is no defined way to serialize an object, that object may be skipped rather than throwing an exception.","pos":[131,259]},{"content":"The serialization engine may provide heuristics here to decide which failures can be ignored and which are unrecoverable.","pos":[260,381]}]}]},{"pos":[2586,2863],"content":"The serialization stream may have more data than is needed for deserialization. Source code serialization, for example, has user code mixed in with the code needed to deserialize an object graph. This user code must be ignored on deserialization and preserved on serialization.","nodes":[{"content":"The serialization stream may have more data than is needed for deserialization. Source code serialization, for example, has user code mixed in with the code needed to deserialize an object graph. This user code must be ignored on deserialization and preserved on serialization.","pos":[0,277],"nodes":[{"content":"The serialization stream may have more data than is needed for deserialization.","pos":[0,79]},{"content":"Source code serialization, for example, has user code mixed in with the code needed to deserialize an object graph.","pos":[80,195]},{"content":"This user code must be ignored on deserialization and preserved on serialization.","pos":[196,277]}]}]},{"pos":[2870,3353],"content":"Because of these differences, a different serialization model applies to design-time serialization. This model utilizes a separate serializer object for each data type being serialized. Each serializer provides its small contribution to the problem as a whole. These serializers are all coordinated through a common serialization manager. The serialization manager is responsible for maintaining state between these different serializers. As an example, consider the following class:","nodes":[{"content":"Because of these differences, a different serialization model applies to design-time serialization. This model utilizes a separate serializer object for each data type being serialized. Each serializer provides its small contribution to the problem as a whole. These serializers are all coordinated through a common serialization manager. The serialization manager is responsible for maintaining state between these different serializers. As an example, consider the following class:","pos":[0,483],"nodes":[{"content":"Because of these differences, a different serialization model applies to design-time serialization.","pos":[0,99]},{"content":"This model utilizes a separate serializer object for each data type being serialized.","pos":[100,185]},{"content":"Each serializer provides its small contribution to the problem as a whole.","pos":[186,260]},{"content":"These serializers are all coordinated through a common serialization manager.","pos":[261,338]},{"content":"The serialization manager is responsible for maintaining state between these different serializers.","pos":[339,438]},{"content":"As an example, consider the following class:","pos":[439,483]}]}]},{"pos":[3360,3865],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/Program.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/Program.vb#2)</ept><ept id=\"p3\">]</ept>","leadings":[""," "],"source":"[!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/Program.cs#2)]\n[!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/Program.vb#2)]"},{"pos":[3872,4268],"content":"An instance of this class would utilize three different serializers: one for `SampleObject`, one for strings, and another for integers. The serializer for `SampleObject` is called the root serializer because `SampleObject` is the root of the serialization graph. More complex object graphs can be created as well. For example, consider what would happen if `SampleObject` were changed as follows:","nodes":[{"content":"An instance of this class would utilize three different serializers: one for <ph id=\"ph1\">`SampleObject`</ph>, one for strings, and another for integers.","pos":[0,135],"source":"An instance of this class would utilize three different serializers: one for `SampleObject`, one for strings, and another for integers."},{"content":"The serializer for <ph id=\"ph1\">`SampleObject`</ph> is called the root serializer because <ph id=\"ph2\">`SampleObject`</ph> is the root of the serialization graph.","pos":[136,262],"source":" The serializer for `SampleObject` is called the root serializer because `SampleObject` is the root of the serialization graph."},{"content":"More complex object graphs can be created as well.","pos":[263,313]},{"content":"For example, consider what would happen if <ph id=\"ph1\">`SampleObject`</ph> were changed as follows:","pos":[314,396],"source":" For example, consider what would happen if `SampleObject` were changed as follows:"}]},{"pos":[4275,4794],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/SampleObject.cs#11)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/SampleObject.vb#11)</ept><ept id=\"p3\">]</ept>","leadings":[""," "],"source":"[!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/SampleObject.cs#11)]\n[!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/SampleObject.vb#11)]"},{"pos":[4801,4925],"content":"This allows `SampleObject` to have a child that is another instance of itself. The following code fills in the object graph:","nodes":[{"content":"This allows <ph id=\"ph1\">`SampleObject`</ph> to have a child that is another instance of itself.","pos":[0,78],"source":"This allows `SampleObject` to have a child that is another instance of itself."},{"content":"The following code fills in the object graph:","pos":[79,124]}]},{"pos":[4932,5451],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/SampleObject.cs#12)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/SampleObject.vb#12)</ept><ept id=\"p3\">]</ept>","leadings":[""," "],"source":"[!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/SampleObject.cs#12)]\n[!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/SampleObject.vb#12)]"},{"pos":[5458,5764],"content":"When `root` is serialized, there will be four serializers used: one root serializer, one serializer for the child `SampleObject`, one serializer for `int`, and one serializer for `string`. Serializers are cached based on type, so there is no need to create a serializer for each instance of `SampleObject`.","nodes":[{"content":"When <ph id=\"ph1\">`root`</ph> is serialized, there will be four serializers used: one root serializer, one serializer for the child <ph id=\"ph2\">`SampleObject`</ph>, one serializer for <ph id=\"ph3\">`int`</ph>, and one serializer for <ph id=\"ph4\">`string`</ph>.","pos":[0,188],"source":"When `root` is serialized, there will be four serializers used: one root serializer, one serializer for the child `SampleObject`, one serializer for `int`, and one serializer for `string`."},{"content":"Serializers are cached based on type, so there is no need to create a serializer for each instance of <ph id=\"ph1\">`SampleObject`</ph>.","pos":[189,306],"source":" Serializers are cached based on type, so there is no need to create a serializer for each instance of `SampleObject`."}]},{"pos":[5771,6238],"content":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class is based on the idea of a serialization session. A session maintains state that can be accessed by the various serializers. When a session is disposed, this state is destroyed. This helps to ensure that serializers remain largely stateless, and helps to clean up serializers that are have been corrupted. The following tables describe how state is managed in and among sessions.","nodes":[{"content":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class is based on the idea of a serialization session. A session maintains state that can be accessed by the various serializers. When a session is disposed, this state is destroyed. This helps to ensure that serializers remain largely stateless, and helps to clean up serializers that are have been corrupted. The following tables describe how state is managed in and among sessions.","pos":[0,467],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager&gt;</ph> class is based on the idea of a serialization session.","pos":[0,137],"source":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class is based on the idea of a serialization session."},{"content":"A session maintains state that can be accessed by the various serializers.","pos":[138,212]},{"content":"When a session is disposed, this state is destroyed.","pos":[213,265]},{"content":"This helps to ensure that serializers remain largely stateless, and helps to clean up serializers that are have been corrupted.","pos":[266,393]},{"content":"The following tables describe how state is managed in and among sessions.","pos":[394,467]}]}]},{"pos":[6247,6259],"content":"Global State","linkify":"Global State","nodes":[{"content":"Global State","pos":[0,12]}]},{"pos":[6263,6376],"content":"This state is owned by the serialization manager object, but is independent of the current serialization session.","nodes":[{"content":"This state is owned by the serialization manager object, but is independent of the current serialization session.","pos":[0,113]}]},{"pos":[6383,6389],"content":"Object","nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6390,6395],"content":"Usage","nodes":[{"content":"Usage","pos":[0,5]}]},{"pos":[6429,6452],"content":"Serialization providers","nodes":[{"content":"Serialization providers","pos":[0,23]}]},{"pos":[6453,6608],"content":"Objects can add themselves as custom serialization providers. Because these providers are used to locate serializers, they outlive a serialization session.","nodes":[{"content":"Objects can add themselves as custom serialization providers. Because these providers are used to locate serializers, they outlive a serialization session.","pos":[0,155],"nodes":[{"content":"Objects can add themselves as custom serialization providers.","pos":[0,61]},{"content":"Because these providers are used to locate serializers, they outlive a serialization session.","pos":[62,155]}]}]},{"pos":[6618,6637],"content":"Session-Owned State","linkify":"Session-Owned State","nodes":[{"content":"Session-Owned State","pos":[0,19]}]},{"pos":[6641,6884],"content":"This state is owned by a session and is destroyed when a session is destroyed. Consequently, accessing any properties or methods that would manipulate this state will throw an exception if the serialization manager is not in an active session.","nodes":[{"content":"This state is owned by a session and is destroyed when a session is destroyed. Consequently, accessing any properties or methods that would manipulate this state will throw an exception if the serialization manager is not in an active session.","pos":[0,243],"nodes":[{"content":"This state is owned by a session and is destroyed when a session is destroyed.","pos":[0,78]},{"content":"Consequently, accessing any properties or methods that would manipulate this state will throw an exception if the serialization manager is not in an active session.","pos":[79,243]}]}]},{"pos":[6891,6897],"content":"Object","nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6898,6903],"content":"Usage","nodes":[{"content":"Usage","pos":[0,5]}]},{"pos":[6937,7034],"content":"<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&gt;</ph> event","pos":[0,97],"source":"<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event"}]},{"pos":[7035,7276],"content":"The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event is attached by a serializer to provide additional resolution of names. All handlers are detached from this event when a session terminates.","nodes":[{"content":"The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event is attached by a serializer to provide additional resolution of names. All handlers are detached from this event when a session terminates.","pos":[0,241],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&gt;</ph> event is attached by a serializer to provide additional resolution of names.","pos":[0,172],"source":"The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event is attached by a serializer to provide additional resolution of names."},{"content":"All handlers are detached from this event when a session terminates.","pos":[173,241]}]}]},{"pos":[7281,7388],"content":"<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete&gt;</ph> event","pos":[0,107],"source":"<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event"}]},{"pos":[7389,7594],"content":"The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event is raised just before a session is disposed. Then, all handlers are detached from this event.","nodes":[{"content":"The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event is raised just before a session is disposed. Then, all handlers are detached from this event.","pos":[0,205],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete&gt;</ph> event is raised just before a session is disposed.","pos":[0,156],"source":"The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event is raised just before a session is disposed."},{"content":"Then, all handlers are detached from this event.","pos":[157,205]}]}]},{"pos":[7599,7609],"content":"Name table","nodes":[{"content":"Name table","pos":[0,10]}]},{"pos":[7610,7812],"content":"The serialization manager maintains a table that maps between objects and their names. Serializers may give objects names for easy identification. This name table is cleared when the session terminates.","nodes":[{"content":"The serialization manager maintains a table that maps between objects and their names. Serializers may give objects names for easy identification. This name table is cleared when the session terminates.","pos":[0,202],"nodes":[{"content":"The serialization manager maintains a table that maps between objects and their names.","pos":[0,86]},{"content":"Serializers may give objects names for easy identification.","pos":[87,146]},{"content":"This name table is cleared when the session terminates.","pos":[147,202]}]}]},{"pos":[7817,7833],"content":"Serializer cache","nodes":[{"content":"Serializer cache","pos":[0,16]}]},{"pos":[7834,8188],"content":"The serialization manager maintains a cache of serializers it has been asked to supply. This cache is cleared when the session terminates. The public <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> method can safely be called at any time, but its value is cached only if it is called from within a session.","nodes":[{"content":"The serialization manager maintains a cache of serializers it has been asked to supply. This cache is cleared when the session terminates. The public <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> method can safely be called at any time, but its value is cached only if it is called from within a session.","pos":[0,354],"nodes":[{"content":"The serialization manager maintains a cache of serializers it has been asked to supply.","pos":[0,87]},{"content":"This cache is cleared when the session terminates.","pos":[88,138]},{"content":"The public <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A&gt;</ph> method can safely be called at any time, but its value is cached only if it is called from within a session.","pos":[139,354],"source":" The public <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> method can safely be called at any time, but its value is cached only if it is called from within a session."}]}]},{"pos":[8193,8206],"content":"Context stack","nodes":[{"content":"Context stack","pos":[0,13]}]},{"pos":[8207,8721],"content":"The serialization manager maintains an object called the context stack, which you can access with the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> property. Serializers can use this stack to store additional information that is available to other serializers. For example, a serializer that is serializing a property value can push the property name on the serialization stack before asking the value to serialize. This stack is cleared when the session is terminated.","nodes":[{"content":"The serialization manager maintains an object called the context stack, which you can access with the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> property. Serializers can use this stack to store additional information that is available to other serializers. For example, a serializer that is serializing a property value can push the property name on the serialization stack before asking the value to serialize. This stack is cleared when the session is terminated.","pos":[0,514],"nodes":[{"content":"The serialization manager maintains an object called the context stack, which you can access with the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A&gt;</ph> property.","pos":[0,202],"source":"The serialization manager maintains an object called the context stack, which you can access with the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> property."},{"content":"Serializers can use this stack to store additional information that is available to other serializers.","pos":[203,305]},{"content":"For example, a serializer that is serializing a property value can push the property name on the serialization stack before asking the value to serialize.","pos":[306,460]},{"content":"This stack is cleared when the session is terminated.","pos":[461,514]}]}]},{"pos":[8726,8736],"content":"Error list","nodes":[{"content":"Error list","pos":[0,10]}]},{"pos":[8737,9166],"content":"The serialization manager maintains a list of errors that occurred during serialization. This list, which is accessed through the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property, is cleared when the session is terminated. Accessing the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property between sessions will result in an exception.","nodes":[{"content":"The serialization manager maintains a list of errors that occurred during serialization. This list, which is accessed through the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property, is cleared when the session is terminated. Accessing the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property between sessions will result in an exception.","pos":[0,429],"nodes":[{"content":"The serialization manager maintains a list of errors that occurred during serialization.","pos":[0,88]},{"content":"This list, which is accessed through the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A&gt;</ph> property, is cleared when the session is terminated.","pos":[89,271],"source":" This list, which is accessed through the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property, is cleared when the session is terminated."},{"content":"Accessing the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A&gt;</ph> property between sessions will result in an exception.","pos":[272,429],"source":" Accessing the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property between sessions will result in an exception."}]}]}],"pos":[4914,14144],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager\"></xref> class.","nodes":[{"pos":[0,133],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager\"></xref> class."}],"pos":[15921,16055],"yaml":true},{"content":"This constructor sets the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> properties to `true`.","nodes":[{"pos":[0,251],"content":"This constructor sets the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt;</ph> properties to <ph id=\"ph3\">`true`</ph>.","source":"This constructor sets the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> properties to `true`."}],"pos":[16066,16318],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager\"></xref> class with the given service provider.","nodes":[{"pos":[0,165],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager\"&gt;&lt;/xref&gt;</ph> class with the given service provider.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager\"></xref> class with the given service provider."}],"pos":[17802,17968],"yaml":true},{"content":"If a serializer requests services that cannot be satisfied by the serialization manager, the default implementation will forward those requests to the `provider` parameter.  \n  \n This constructor sets the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> properties to `true`.","nodes":[{"pos":[0,172],"content":"If a serializer requests services that cannot be satisfied by the serialization manager, the default implementation will forward those requests to the <ph id=\"ph1\">`provider`</ph> parameter.","source":"If a serializer requests services that cannot be satisfied by the serialization manager, the default implementation will forward those requests to the `provider` parameter."},{"pos":[179,430],"content":"This constructor sets the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt;</ph> properties to <ph id=\"ph3\">`true`</ph>.","source":"This constructor sets the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> properties to `true`."}],"pos":[17979,18414],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.IServiceProvider\"></xref>.","nodes":[{"pos":[0,48],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IServiceProvider\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.IServiceProvider\"></xref>."}],"pos":[18592,18641],"yaml":true},{"content":"<code>provider</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;provider&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>provider</code> is `null`."}],"pos":[18848,18881],"yaml":true},{"content":"Gets or sets to the container for this serialization manager.","nodes":[{"pos":[0,61],"content":"Gets or sets to the container for this serialization manager.","nodes":[{"content":"Gets or sets to the container for this serialization manager.","pos":[0,61]}]}],"pos":[19996,20058],"yaml":true},{"content":"If a container exists, all components that are created by the serialization manager will be added to the container. The default implementation of this property will search the service provider for an <xref:System.ComponentModel.Design.IDesignerHost> and use the container provided by the designer host, should one exist. Otherwise, this property will return `null` and no components will be added to a container.","nodes":[{"pos":[0,412],"content":"If a container exists, all components that are created by the serialization manager will be added to the container. The default implementation of this property will search the service provider for an <xref:System.ComponentModel.Design.IDesignerHost> and use the container provided by the designer host, should one exist. Otherwise, this property will return `null` and no components will be added to a container.","nodes":[{"content":"If a container exists, all components that are created by the serialization manager will be added to the container.","pos":[0,115]},{"content":"The default implementation of this property will search the service provider for an <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> and use the container provided by the designer host, should one exist.","pos":[116,320],"source":" The default implementation of this property will search the service provider for an <xref:System.ComponentModel.Design.IDesignerHost> and use the container provided by the designer host, should one exist."},{"content":"Otherwise, this property will return <ph id=\"ph1\">`null`</ph> and no components will be added to a container.","pos":[321,412],"source":" Otherwise, this property will return `null` and no components will be added to a container."}]}],"pos":[20069,20482],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ComponentModel.IContainer\"></xref> to which the serialization manager will add components.","nodes":[{"pos":[0,113],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.IContainer\"&gt;&lt;/xref&gt;</ph> to which the serialization manager will add components.","source":"The <xref href=\"System.ComponentModel.IContainer\"></xref> to which the serialization manager will add components."}],"pos":[20645,20759],"yaml":true},{"content":"The serialization manager has an active serialization session.","nodes":[{"pos":[0,62],"content":"The serialization manager has an active serialization session.","nodes":[{"content":"The serialization manager has an active serialization session.","pos":[0,62]}]}],"pos":[20978,21041],"yaml":true},{"content":"Creates an instance of a type.","nodes":[{"pos":[0,30],"content":"Creates an instance of a type.","nodes":[{"content":"Creates an instance of a type.","pos":[0,30]}]}],"pos":[22511,22542],"yaml":true},{"content":"This method is called by serializers when they attempt to create an instance of a type. The default implementation creates a new instance of the type, or it may return an existing instance depending on the values of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> properties. The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> method uses reflection to create instances and will perform some generic <xref:System.IConvertible> transformations on parameters to find a matching constructor.","nodes":[{"pos":[0,694],"content":"This method is called by serializers when they attempt to create an instance of a type. The default implementation creates a new instance of the type, or it may return an existing instance depending on the values of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> properties. The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> method uses reflection to create instances and will perform some generic <xref:System.IConvertible> transformations on parameters to find a matching constructor.","nodes":[{"content":"This method is called by serializers when they attempt to create an instance of a type. The default implementation creates a new instance of the type, or it may return an existing instance depending on the values of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> properties. The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> method uses reflection to create instances and will perform some generic <xref:System.IConvertible> transformations on parameters to find a matching constructor.","pos":[0,694],"nodes":[{"content":"This method is called by serializers when they attempt to create an instance of a type.","pos":[0,87]},{"content":"The default implementation creates a new instance of the type, or it may return an existing instance depending on the values of the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A&gt;</ph> properties.","pos":[88,430],"source":" The default implementation creates a new instance of the type, or it may return an existing instance depending on the values of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> properties."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;</ph> method uses reflection to create instances and will perform some generic <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> transformations on parameters to find a matching constructor.","pos":[431,694],"source":" The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> method uses reflection to create instances and will perform some generic <xref:System.IConvertible> transformations on parameters to find a matching constructor."}]}]}],"pos":[22553,23248],"yaml":true,"extradata":"MT"},{"content":"The type to create an instance of.","nodes":[{"pos":[0,34],"content":"The type to create an instance of.","nodes":[{"content":"The type to create an instance of.","pos":[0,34]}]}],"pos":[23474,23509],"yaml":true},{"content":"The parameters of the type’s constructor. This can be `null` or an empty collection to invoke the default constructor.","nodes":[{"pos":[0,118],"content":"The parameters of the type’s constructor. This can be `null` or an empty collection to invoke the default constructor.","nodes":[{"content":"The parameters of the type’s constructor.","pos":[0,41]},{"content":"This can be <ph id=\"ph1\">`null`</ph> or an empty collection to invoke the default constructor.","pos":[42,118],"source":" This can be `null` or an empty collection to invoke the default constructor."}]}],"pos":[23591,23710],"yaml":true},{"content":"A name to give the object. If `null`, the object will not be given a name, unless the object is added to a container and the container gives the object a name.","nodes":[{"pos":[0,159],"content":"A name to give the object. If `null`, the object will not be given a name, unless the object is added to a container and the container gives the object a name.","nodes":[{"content":"A name to give the object.","pos":[0,26]},{"content":"If <ph id=\"ph1\">`null`</ph>, the object will not be given a name, unless the object is added to a container and the container gives the object a name.","pos":[27,159],"source":" If `null`, the object will not be given a name, unless the object is added to a container and the container gives the object a name."}]}],"pos":[23770,23930],"yaml":true},{"content":"`true` to add the object to the container if the object implements <xref href=\"System.ComponentModel.IComponent\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,141],"content":"<ph id=\"ph1\">`true`</ph> to add the object to the container if the object implements <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.IComponent\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to add the object to the container if the object implements <xref href=\"System.ComponentModel.IComponent\"></xref>; otherwise, `false`."}],"pos":[24001,24145],"yaml":true},{"content":"A new instance of the type specified by <code>type</code>.","nodes":[{"pos":[0,58],"content":"A new instance of the type specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A new instance of the type specified by <code>type</code>."}],"pos":[24202,24261],"yaml":true},{"content":"<code>type</code> does not have a constructor that takes parameters contained in <code>arguments</code>.","nodes":[{"pos":[0,104],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> does not have a constructor that takes parameters contained in <ph id=\"ph2\">&lt;code&gt;arguments&lt;/code&gt;</ph>.","source":"<code>type</code> does not have a constructor that takes parameters contained in <code>arguments</code>."}],"pos":[24523,24628],"yaml":true},{"content":"Creates a new serialization session.","nodes":[{"pos":[0,36],"content":"Creates a new serialization session.","nodes":[{"content":"Creates a new serialization session.","pos":[0,36]}]}],"pos":[25771,25808],"yaml":true},{"content":"Most data within the serialization manager is transient and only lives for the life of a serialization session. When a session is disposed, serialization is considered to be complete and this transient state is cleared. This allows a single instance of a serialization manager to be used to serialize multiple object trees. Some state, including the service provider and any custom serialization providers that were added to the serialization manager, span sessions.","nodes":[{"pos":[0,466],"content":"Most data within the serialization manager is transient and only lives for the life of a serialization session. When a session is disposed, serialization is considered to be complete and this transient state is cleared. This allows a single instance of a serialization manager to be used to serialize multiple object trees. Some state, including the service provider and any custom serialization providers that were added to the serialization manager, span sessions.","nodes":[{"content":"Most data within the serialization manager is transient and only lives for the life of a serialization session. When a session is disposed, serialization is considered to be complete and this transient state is cleared. This allows a single instance of a serialization manager to be used to serialize multiple object trees. Some state, including the service provider and any custom serialization providers that were added to the serialization manager, span sessions.","pos":[0,466],"nodes":[{"content":"Most data within the serialization manager is transient and only lives for the life of a serialization session.","pos":[0,111]},{"content":"When a session is disposed, serialization is considered to be complete and this transient state is cleared.","pos":[112,219]},{"content":"This allows a single instance of a serialization manager to be used to serialize multiple object trees.","pos":[220,323]},{"content":"Some state, including the service provider and any custom serialization providers that were added to the serialization manager, span sessions.","pos":[324,466]}]}]}],"pos":[25819,26286],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.IDisposable\"></xref> that represents a new serialization session.","nodes":[{"pos":[0,87],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IDisposable\"&gt;&lt;/xref&gt;</ph> that represents a new serialization session.","source":"An <xref href=\"System.IDisposable\"></xref> that represents a new serialization session."}],"pos":[26427,26515],"yaml":true},{"content":"The serialization manager is already within a session. This version of <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager\"></xref> does not support simultaneous sessions.","nodes":[{"pos":[0,203],"content":"The serialization manager is already within a session. This version of <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager\"></xref> does not support simultaneous sessions.","nodes":[{"content":"The serialization manager is already within a session.","pos":[0,54]},{"content":"This version of <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager\"&gt;&lt;/xref&gt;</ph> does not support simultaneous sessions.","pos":[55,203],"source":" This version of <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager\"></xref> does not support simultaneous sessions."}]}],"pos":[26738,26942],"yaml":true},{"content":"Gets the list of errors that occurred during serialization or deserialization.","nodes":[{"pos":[0,78],"content":"Gets the list of errors that occurred during serialization or deserialization.","nodes":[{"content":"Gets the list of errors that occurred during serialization or deserialization.","pos":[0,78]}]}],"pos":[28039,28118],"yaml":true},{"content":"You can only read the error list while a serialization session is active.","nodes":[{"pos":[0,73],"content":"You can only read the error list while a serialization session is active.","nodes":[{"content":"You can only read the error list while a serialization session is active.","pos":[0,73]}]}],"pos":[28129,28203],"yaml":true,"extradata":"MT"},{"content":"The list of errors that occurred during serialization or deserialization.","nodes":[{"pos":[0,73],"content":"The list of errors that occurred during serialization or deserialization.","nodes":[{"content":"The list of errors that occurred during serialization or deserialization.","pos":[0,73]}]}],"pos":[28342,28416],"yaml":true},{"content":"This property was accessed outside of a serialization session.","nodes":[{"pos":[0,62],"content":"This property was accessed outside of a serialization session.","nodes":[{"content":"This property was accessed outside of a serialization session.","pos":[0,62]}]}],"pos":[28632,28695],"yaml":true},{"content":"Gets the type corresponding to the specified type name.","nodes":[{"pos":[0,55],"content":"Gets the type corresponding to the specified type name.","nodes":[{"content":"Gets the type corresponding to the specified type name.","pos":[0,55]}]}],"pos":[29907,29963],"yaml":true},{"content":"The name of the type to get.","nodes":[{"pos":[0,28],"content":"The name of the type to get.","nodes":[{"content":"The name of the type to get.","pos":[0,28]}]}],"pos":[30112,30141],"yaml":true},{"content":"The specified type.","nodes":[{"pos":[0,19],"content":"The specified type.","nodes":[{"content":"The specified type.","pos":[0,19]}]}],"pos":[30196,30216],"yaml":true},{"content":"Gets the serializer for the given object type.","nodes":[{"pos":[0,46],"content":"Gets the serializer for the given object type.","nodes":[{"content":"Gets the serializer for the given object type.","pos":[0,46]}]}],"pos":[31581,31628],"yaml":true},{"content":"You can request the type of serializer you would like. This method returns `null` if there is no serializer of the requested type for the specified object type.","nodes":[{"pos":[0,160],"content":"You can request the type of serializer you would like. This method returns `null` if there is no serializer of the requested type for the specified object type.","nodes":[{"content":"You can request the type of serializer you would like.","pos":[0,54]},{"content":"This method returns <ph id=\"ph1\">`null`</ph> if there is no serializer of the requested type for the specified object type.","pos":[55,160],"source":" This method returns `null` if there is no serializer of the requested type for the specified object type."}]}],"pos":[31639,31800],"yaml":true,"extradata":"MT"},{"content":"The type of object for which to retrieve the serializer.","nodes":[{"pos":[0,56],"content":"The type of object for which to retrieve the serializer.","nodes":[{"content":"The type of object for which to retrieve the serializer.","pos":[0,56]}]}],"pos":[31971,32028],"yaml":true},{"content":"The type of serializer to retrieve.","nodes":[{"pos":[0,35],"content":"The type of serializer to retrieve.","nodes":[{"content":"The type of serializer to retrieve.","pos":[0,35]}]}],"pos":[32096,32132],"yaml":true},{"content":"The serializer for <code>objectType</code>, or `null`, if not found.","nodes":[{"pos":[0,68],"content":"The serializer for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">objectType</ph><ept id=\"p1\">&lt;/code&gt;</ept>, or <ph id=\"ph2\">`null`</ph>, if not found.","source":"The serializer for <code>objectType</code>, or `null`, if not found."}],"pos":[32189,32258],"yaml":true},{"content":"<code>objectType</code> or <code>serializerType</code> is `null`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;objectType&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;serializerType&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>objectType</code> or <code>serializerType</code> is `null`."}],"pos":[32473,32539],"yaml":true},{"content":"Gets the requested service.","nodes":[{"pos":[0,27],"content":"Gets the requested service.","nodes":[{"content":"Gets the requested service.","pos":[0,27]}]}],"pos":[33715,33743],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService%2A> method provides access to the underlying container or service provider that was set in the constructor.","nodes":[{"pos":[0,200],"content":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService%2A> method provides access to the underlying container or service provider that was set in the constructor.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService%2A&gt;</ph> method provides access to the underlying container or service provider that was set in the constructor.","pos":[0,200],"source":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService%2A> method provides access to the underlying container or service provider that was set in the constructor."}]}],"pos":[33754,33955],"yaml":true,"extradata":"MT"},{"content":"The type of service to retrieve.","nodes":[{"pos":[0,32],"content":"The type of service to retrieve.","nodes":[{"content":"The type of service to retrieve.","pos":[0,32]}]}],"pos":[34115,34148],"yaml":true},{"content":"The requested service, or `null` if the service cannot be resolved.","nodes":[{"pos":[0,67],"content":"The requested service, or <ph id=\"ph1\">`null`</ph> if the service cannot be resolved.","source":"The requested service, or `null` if the service cannot be resolved."}],"pos":[34205,34273],"yaml":true},{"content":"Gets the requested type.","nodes":[{"pos":[0,24],"content":"Gets the requested type.","nodes":[{"content":"Gets the requested type.","pos":[0,24]}]}],"pos":[35556,35581],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> method will search the service provider for an <xref:System.ComponentModel.Design.ITypeResolutionService> and, if available, it will delegate to that service to resolve the type. If an <xref:System.ComponentModel.Design.ITypeResolutionService> is not available, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> will call the <xref:System.Object.GetType%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,524],"content":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> method will search the service provider for an <xref:System.ComponentModel.Design.ITypeResolutionService> and, if available, it will delegate to that service to resolve the type. If an <xref:System.ComponentModel.Design.ITypeResolutionService> is not available, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> will call the <xref:System.Object.GetType%2A?displayProperty=fullName> method.","nodes":[{"content":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> method will search the service provider for an <xref:System.ComponentModel.Design.ITypeResolutionService> and, if available, it will delegate to that service to resolve the type. If an <xref:System.ComponentModel.Design.ITypeResolutionService> is not available, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> will call the <xref:System.Object.GetType%2A?displayProperty=fullName> method.","pos":[0,524],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A&gt;</ph> method will search the service provider for an <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.ITypeResolutionService&gt;</ph> and, if available, it will delegate to that service to resolve the type.","pos":[0,272],"source":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> method will search the service provider for an <xref:System.ComponentModel.Design.ITypeResolutionService> and, if available, it will delegate to that service to resolve the type."},{"content":"If an <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.ITypeResolutionService&gt;</ph> is not available, <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A&gt;</ph> will call the <ph id=\"ph3\">&lt;xref:System.Object.GetType%2A?displayProperty=fullName&gt;</ph> method.","pos":[273,524],"source":" If an <xref:System.ComponentModel.Design.ITypeResolutionService> is not available, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> will call the <xref:System.Object.GetType%2A?displayProperty=fullName> method."}]}]}],"pos":[35592,36117],"yaml":true,"extradata":"MT"},{"content":"The name of the type to retrieve.","nodes":[{"pos":[0,33],"content":"The name of the type to retrieve.","nodes":[{"content":"The name of the type to retrieve.","pos":[0,33]}]}],"pos":[36270,36304],"yaml":true},{"content":"The requested type, or `null` if the type cannot be resolved.","nodes":[{"pos":[0,61],"content":"The requested type, or <ph id=\"ph1\">`null`</ph> if the type cannot be resolved.","source":"The requested type, or `null` if the type cannot be resolved."}],"pos":[36359,36421],"yaml":true},{"content":"Raises the <xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName\"></xref> event.","nodes":[{"pos":[0,123],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName\"></xref> event."}],"pos":[37929,38053],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \n  \n The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,183],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."}]},{"pos":[190,449],"content":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,259],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,184],"source":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[185,259]}]}]}],"pos":[38064,38518],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.ComponentModel.Design.Serialization.ResolveNameEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,116],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.Serialization.ResolveNameEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.ComponentModel.Design.Serialization.ResolveNameEventArgs\"></xref> that contains the event data."}],"pos":[38770,38887],"yaml":true},{"content":"Raises the <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated\"></xref> event.","nodes":[{"pos":[0,125],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated\"></xref> event."}],"pos":[40245,40371],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \n  \n The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,183],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."}]},{"pos":[190,452],"content":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,262],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,187],"source":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[188,262]}]}]}],"pos":[40382,40839],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[40993,41064],"yaml":true},{"content":"Raises the <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed\"></xref> event.","nodes":[{"pos":[0,126],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed\"></xref> event."}],"pos":[42431,42558],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \n  \n The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,183],"content":"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>NIB: Raising an Event<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.","pos":[63,183],"source":" For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."}]},{"pos":[190,453],"content":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,263],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,188],"source":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[189,263]}]}]}],"pos":[42569,43027],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[43182,43253],"yaml":true},{"content":"Gets or sets a value indicating whether the <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> method should check for the presence of the given name in the container.","nodes":[{"pos":[0,297],"content":"Gets or sets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method should check for the presence of the given name in the container.","source":"Gets or sets a value indicating whether the <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> method should check for the presence of the given name in the container."}],"pos":[44512,44810],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> property determines the behavior of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method. If `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will pass the given component name. If `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will check for the presence of the given name in the container. If the name does not exist in the container, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will use the given name. If the name does exist in the container, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will pass a null value as the name of a component when adding it to the container, thereby giving it a new name. This second variation is useful for implementing a serializer that always duplicates objects, rather than assuming those objects do not exist. Paste commands often use this type of serializer.  \n  \n You can only change this property when you are not in a serialization session.","nodes":[{"pos":[0,1172],"content":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> property determines the behavior of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method. If `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will pass the given component name. If `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will check for the presence of the given name in the container. If the name does not exist in the container, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will use the given name. If the name does exist in the container, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will pass a null value as the name of a component when adding it to the container, thereby giving it a new name. This second variation is useful for implementing a serializer that always duplicates objects, rather than assuming those objects do not exist. Paste commands often use this type of serializer.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt;</ph> property determines the behavior of the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> method.","pos":[0,244],"source":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> property determines the behavior of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method."},{"content":"If <ph id=\"ph1\">`true`</ph>, <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> will pass the given component name.","pos":[245,388],"source":" If `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will pass the given component name."},{"content":"If <ph id=\"ph1\">`false`</ph>, <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> will check for the presence of the given name in the container.","pos":[389,561],"source":" If `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will check for the presence of the given name in the container."},{"content":"If the name does not exist in the container, <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> will use the given name.","pos":[562,728],"source":" If the name does not exist in the container, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will use the given name."},{"content":"If the name does exist in the container, <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> will pass a null value as the name of a component when adding it to the container, thereby giving it a new name.","pos":[729,979],"source":" If the name does exist in the container, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will pass a null value as the name of a component when adding it to the container, thereby giving it a new name."},{"content":"This second variation is useful for implementing a serializer that always duplicates objects, rather than assuming those objects do not exist.","pos":[980,1122]},{"content":"Paste commands often use this type of serializer.","pos":[1123,1172]}]},{"pos":[1179,1257],"content":"You can only change this property when you are not in a serialization session.","nodes":[{"content":"You can only change this property when you are not in a serialization session.","pos":[0,78]}]}],"pos":[44821,46083],"yaml":true,"extradata":"MT"},{"content":"`true` if <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> will pass the given component name; `false` if <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> will check for the presence of the given name in the container. The default is `true`.","nodes":[{"pos":[0,505],"content":"`true` if <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> will pass the given component name; `false` if <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> will check for the presence of the given name in the container. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"&gt;&lt;/xref&gt;</ph> will pass the given component name; <ph id=\"ph3\">`false`</ph> if <ph id=\"ph4\">&lt;xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"&gt;&lt;/xref&gt;</ph> will check for the presence of the given name in the container.","pos":[0,482],"source":"`true` if <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> will pass the given component name; `false` if <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> will check for the presence of the given name in the container."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[483,505],"source":" The default is `true`."}]}],"pos":[46204,46712],"yaml":true},{"content":"This property was changed from within a serialization session.","nodes":[{"pos":[0,62],"content":"This property was changed from within a serialization session.","nodes":[{"content":"This property was changed from within a serialization session.","pos":[0,62]}]}],"pos":[46935,46998],"yaml":true},{"content":"Gets the object that should be used to provide properties to the serialization manager's <xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties\"></xref> property.","nodes":[{"pos":[0,203],"content":"Gets the object that should be used to provide properties to the serialization manager's <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties\"&gt;&lt;/xref&gt;</ph> property.","source":"Gets the object that should be used to provide properties to the serialization manager's <xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties\"></xref> property."}],"pos":[48155,48359],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider%2A> property provides a way to give the serialization manager a set of serialization properties that serializers can use to guide their behavior.  \n  \n This object's public properties will be inspected and wrapped in new property descriptors that have a target object of the serialization manager.","nodes":[{"pos":[0,244],"content":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider%2A> property provides a way to give the serialization manager a set of serialization properties that serializers can use to guide their behavior.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider%2A&gt;</ph> property provides a way to give the serialization manager a set of serialization properties that serializers can use to guide their behavior.","pos":[0,244],"source":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider%2A> property provides a way to give the serialization manager a set of serialization properties that serializers can use to guide their behavior."}]},{"pos":[251,396],"content":"This object's public properties will be inspected and wrapped in new property descriptors that have a target object of the serialization manager.","nodes":[{"content":"This object's public properties will be inspected and wrapped in new property descriptors that have a target object of the serialization manager.","pos":[0,145]}]}],"pos":[48370,48771],"yaml":true,"extradata":"MT"},{"content":"The object that should be used to provide properties to the serialization manager's <xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties\"></xref> property.","nodes":[{"pos":[0,198],"content":"The object that should be used to provide properties to the serialization manager's <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties\"&gt;&lt;/xref&gt;</ph> property.","source":"The object that should be used to provide properties to the serialization manager's <xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties\"></xref> property."}],"pos":[48896,49095],"yaml":true},{"content":"Gets or sets a flag indicating whether <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> will always create a new instance of a type.","nodes":[{"pos":[0,264],"content":"Gets or sets a flag indicating whether <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"&gt;&lt;/xref&gt;</ph> will always create a new instance of a type.","source":"Gets or sets a flag indicating whether <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> will always create a new instance of a type."}],"pos":[50371,50636],"yaml":true},{"content":"If the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `false`, the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method will always create a new instance of a type. If <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> is `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will first search the name table and container for an object of the same name. If such an object exists and is of the same type, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will return the existing instance. This second variation is useful for implementing a serializer that applies serialization state to an existing set of objects, rather than always creating a new tree. The **Undo** command often uses this type of serializer.  \n  \n In the case where the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `true`, the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> property will further modify the behavior of <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> depending on the types of the two objects.","nodes":[{"pos":[0,973],"content":"If the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `false`, the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method will always create a new instance of a type. If <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> is `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will first search the name table and container for an object of the same name. If such an object exists and is of the same type, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will return the existing instance. This second variation is useful for implementing a serializer that applies serialization state to an existing set of objects, rather than always creating a new tree. The **Undo** command often uses this type of serializer.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A&gt;</ph> property is <ph id=\"ph2\">`false`</ph>, the <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> method will always create a new instance of a type.","pos":[0,279],"source":"If the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `false`, the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method will always create a new instance of a type."},{"content":"If <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> will first search the name table and container for an object of the same name.","pos":[280,568],"source":" If <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> is `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will first search the name table and container for an object of the same name."},{"content":"If such an object exists and is of the same type, <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> will return the existing instance.","pos":[569,750],"source":" If such an object exists and is of the same type, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will return the existing instance."},{"content":"This second variation is useful for implementing a serializer that applies serialization state to an existing set of objects, rather than always creating a new tree.","pos":[751,916]},{"content":"The <bpt id=\"p1\">**</bpt>Undo<ept id=\"p1\">**</ept> command often uses this type of serializer.","pos":[917,973],"source":" The **Undo** command often uses this type of serializer."}]},{"pos":[980,1413],"content":"In the case where the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph>, the <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt;</ph> property will further modify the behavior of <ph id=\"ph4\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> depending on the types of the two objects.","source":"In the case where the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `true`, the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> property will further modify the behavior of <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> depending on the types of the two objects."}],"pos":[50647,52065],"yaml":true,"extradata":"MT"},{"content":"`true` if <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> will return the existing instance; `false` if <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> will create a new instance of a type. The default is `false`.","nodes":[{"pos":[0,479],"content":"`true` if <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> will return the existing instance; `false` if <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> will create a new instance of a type. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"&gt;&lt;/xref&gt;</ph> will return the existing instance; <ph id=\"ph3\">`false`</ph> if <ph id=\"ph4\">&lt;xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"&gt;&lt;/xref&gt;</ph> will create a new instance of a type.","pos":[0,455],"source":"`true` if <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> will return the existing instance; `false` if <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> will create a new instance of a type."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[456,479],"source":" The default is `false`."}]}],"pos":[52189,52671],"yaml":true},{"content":"The serialization manager has an active serialization session.","nodes":[{"pos":[0,62],"content":"The serialization manager has an active serialization session.","nodes":[{"content":"The serialization manager has an active serialization session.","pos":[0,62]}]}],"pos":[52897,52960],"yaml":true},{"content":"Occurs when a session is created.","nodes":[{"pos":[0,33],"content":"Occurs when a session is created.","nodes":[{"content":"Occurs when a session is created.","pos":[0,33]}]}],"pos":[54102,54136],"yaml":true},{"content":"Occurs when a session is disposed.","nodes":[{"pos":[0,34],"content":"Occurs when a session is disposed.","nodes":[{"content":"Occurs when a session is disposed.","pos":[0,34]}]}],"pos":[55432,55467],"yaml":true},{"content":"Gets or sets a flag indicating whether the <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> method will verify that matching names refer to the same type.","nodes":[{"pos":[0,286],"content":"Gets or sets a flag indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method will verify that matching names refer to the same type.","source":"Gets or sets a flag indicating whether the <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> method will verify that matching names refer to the same type."}],"pos":[56803,57090],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> property modifies the behavior of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `true`, as detailed in the following table.  \n  \n|`RecycleInstances`|`ValidateRecycledTypes`|Behavior of `CreateInstance`|  \n|------------------------|-----------------------------|----------------------------------|  \n|`false`|`true` or `false`|Always create a new instance of the specified type|  \n|`true`|`false`|If a matching instance is found it is returned, regardless of its type.|  \n|`true`|`true`|If a matching instance is found, it is returned only if its type is the same as specified in the method call.|  \n  \n <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> is useful for morphing one type of object to another if they have similar properties but share no common parent or interface.","nodes":[{"pos":[0,413],"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt;</ph> property modifies the behavior of the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> method when the <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A&gt;</ph> property is <ph id=\"ph4\">`true`</ph>, as detailed in the following table.","source":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> property modifies the behavior of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `true`, as detailed in the following table."},{"pos":[463,491],"content":"Behavior of <ph id=\"ph1\">`CreateInstance`</ph>","source":"Behavior of `CreateInstance`"},{"pos":[598,615],"content":"<ph id=\"ph1\">`true`</ph> or <ph id=\"ph2\">`false`</ph>","source":"`true` or `false`"},{"pos":[616,666],"content":"Always create a new instance of the specified type","nodes":[{"content":"Always create a new instance of the specified type","pos":[0,50]}]},{"pos":[686,757],"content":"If a matching instance is found it is returned, regardless of its type.","nodes":[{"content":"If a matching instance is found it is returned, regardless of its type.","pos":[0,71]}]},{"pos":[776,885],"content":"If a matching instance is found, it is returned only if its type is the same as specified in the method call.","nodes":[{"content":"If a matching instance is found, it is returned only if its type is the same as specified in the method call.","pos":[0,109]}]},{"pos":[893,1122],"content":"<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> is useful for morphing one type of object to another if they have similar properties but share no common parent or interface.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt;</ph> is useful for morphing one type of object to another if they have similar properties but share no common parent or interface.","pos":[0,229],"source":"<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> is useful for morphing one type of object to another if they have similar properties but share no common parent or interface."}]}],"pos":[57101,58234],"yaml":true,"extradata":"MT"},{"content":"`true` if <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> verifies types; otherwise, `false` if it does not. The default is `true`.","nodes":[{"pos":[0,264],"content":"`true` if <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> verifies types; otherwise, `false` if it does not. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"&gt;&lt;/xref&gt;</ph> verifies types; otherwise, <ph id=\"ph3\">`false`</ph> if it does not.","pos":[0,241],"source":"`true` if <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> verifies types; otherwise, `false` if it does not."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[242,264],"source":" The default is `true`."}]}],"pos":[58363,58630],"yaml":true},{"content":"The serialization manager has an active serialization session.","nodes":[{"pos":[0,62],"content":"The serialization manager has an active serialization session.","nodes":[{"content":"The serialization manager has an active serialization session.","pos":[0,62]}]}],"pos":[58861,58924],"yaml":true},{"content":"Adds a custom serialization provider to the serialization manager.","nodes":[{"pos":[0,66],"content":"Adds a custom serialization provider to the serialization manager.","nodes":[{"content":"Adds a custom serialization provider to the serialization manager.","pos":[0,66]}]}],"pos":[60771,60838],"yaml":true},{"content":"When the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> method is used to request a serialization provider, the serialization manager queries the custom serialization providers first before looking in the type's metadata for the appropriate serializer.","nodes":[{"pos":[0,301],"content":"When the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> method is used to request a serialization provider, the serialization manager queries the custom serialization providers first before looking in the type's metadata for the appropriate serializer.","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A&gt;</ph> method is used to request a serialization provider, the serialization manager queries the custom serialization providers first before looking in the type's metadata for the appropriate serializer.","pos":[0,301],"source":"When the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> method is used to request a serialization provider, the serialization manager queries the custom serialization providers first before looking in the type's metadata for the appropriate serializer."}]}],"pos":[60849,61151],"yaml":true,"extradata":"MT"},{"content":"The serialization provider to add.","nodes":[{"pos":[0,34],"content":"The serialization provider to add.","nodes":[{"content":"The serialization provider to add.","pos":[0,34]}]}],"pos":[61460,61495],"yaml":true},{"content":"Gets the context stack for this serialization session.","nodes":[{"pos":[0,54],"content":"Gets the context stack for this serialization session.","nodes":[{"content":"Gets the context stack for this serialization session.","pos":[0,54]}]}],"pos":[63121,63176],"yaml":true},{"content":"A context stack provides a user-defined storage area, implemented as a stack. This storage area is a useful way to provide communication across serializers, as serialization is a generally hierarchical process.","nodes":[{"pos":[0,210],"content":"A context stack provides a user-defined storage area, implemented as a stack. This storage area is a useful way to provide communication across serializers, as serialization is a generally hierarchical process.","nodes":[{"content":"A context stack provides a user-defined storage area, implemented as a stack. This storage area is a useful way to provide communication across serializers, as serialization is a generally hierarchical process.","pos":[0,210],"nodes":[{"content":"A context stack provides a user-defined storage area, implemented as a stack.","pos":[0,77]},{"content":"This storage area is a useful way to provide communication across serializers, as serialization is a generally hierarchical process.","pos":[78,210]}]}]}],"pos":[63187,63398],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.ComponentModel.Design.Serialization.ContextStack\"></xref> that stores data.","nodes":[{"pos":[0,96],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.Serialization.ContextStack\"&gt;&lt;/xref&gt;</ph> that stores data.","source":"A <xref href=\"System.ComponentModel.Design.Serialization.ContextStack\"></xref> that stores data."}],"pos":[63666,63763],"yaml":true},{"content":"This property was accessed outside of a serialization session.","nodes":[{"pos":[0,62],"content":"This property was accessed outside of a serialization session.","nodes":[{"content":"This property was accessed outside of a serialization session.","pos":[0,62]}]}],"pos":[64053,64116],"yaml":true},{"content":"Implements the <xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> method.","nodes":[{"pos":[0,204],"content":"Implements the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method.","source":"Implements the <xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> method."}],"pos":[65854,66059],"yaml":true},{"content":"The data type to create.","nodes":[{"pos":[0,24],"content":"The data type to create.","nodes":[{"content":"The data type to create.","pos":[0,24]}]}],"pos":[66297,66322],"yaml":true},{"content":"The arguments to pass to the constructor for this type.","nodes":[{"pos":[0,55],"content":"The arguments to pass to the constructor for this type.","nodes":[{"content":"The arguments to pass to the constructor for this type.","pos":[0,55]}]}],"pos":[66404,66460],"yaml":true},{"content":"The name of the object. This name can be used to access the object later through <xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)\"></xref>. If `null` is passed, the object is still created but cannot be accessed by name.","nodes":[{"pos":[0,283],"content":"The name of the object. This name can be used to access the object later through <xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)\"></xref>. If `null` is passed, the object is still created but cannot be accessed by name.","nodes":[{"content":"The name of the object.","pos":[0,23]},{"content":"This name can be used to access the object later through <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)\"&gt;&lt;/xref&gt;</ph>.","pos":[24,202],"source":" This name can be used to access the object later through <xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)\"></xref>."},{"content":"If <ph id=\"ph1\">`null`</ph> is passed, the object is still created but cannot be accessed by name.","pos":[203,283],"source":" If `null` is passed, the object is still created but cannot be accessed by name."}]}],"pos":[66520,66804],"yaml":true},{"content":"`true` to add this object to the design container. The object must implement <xref href=\"System.ComponentModel.IComponent\"></xref> for this to have any effect.","nodes":[{"pos":[0,159],"content":"`true` to add this object to the design container. The object must implement <xref href=\"System.ComponentModel.IComponent\"></xref> for this to have any effect.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to add this object to the design container.","pos":[0,50],"source":"`true` to add this object to the design container."},{"content":"The object must implement <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.IComponent\"&gt;&lt;/xref&gt;</ph> for this to have any effect.","pos":[51,159],"source":" The object must implement <xref href=\"System.ComponentModel.IComponent\"></xref> for this to have any effect."}]}],"pos":[66875,67037],"yaml":true},{"content":"The newly created object instance.","nodes":[{"pos":[0,34],"content":"The newly created object instance.","nodes":[{"content":"The newly created object instance.","pos":[0,34]}]}],"pos":[67094,67129],"yaml":true},{"content":"Retrieves an instance of a created object of the specified name.","nodes":[{"pos":[0,64],"content":"Retrieves an instance of a created object of the specified name.","nodes":[{"content":"Retrieves an instance of a created object of the specified name.","pos":[0,64]}]}],"pos":[68836,68901],"yaml":true},{"content":"The name of the object to retrieve.","nodes":[{"pos":[0,35],"content":"The name of the object to retrieve.","nodes":[{"content":"The name of the object to retrieve.","pos":[0,35]}]}],"pos":[69064,69100],"yaml":true},{"content":"An instance of the object with the given name, or `null` if no object by that name can be found.","nodes":[{"pos":[0,96],"content":"An instance of the object with the given name, or <ph id=\"ph1\">`null`</ph> if no object by that name can be found.","source":"An instance of the object with the given name, or `null` if no object by that name can be found."}],"pos":[69157,69254],"yaml":true},{"content":"<code>name</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."}],"pos":[69540,69569],"yaml":true},{"content":"This property was accessed outside of a serialization session.","nodes":[{"pos":[0,62],"content":"This property was accessed outside of a serialization session.","nodes":[{"content":"This property was accessed outside of a serialization session.","pos":[0,62]}]}],"pos":[69679,69742],"yaml":true},{"content":"Retrieves a name for the specified object.","nodes":[{"pos":[0,42],"content":"Retrieves a name for the specified object.","nodes":[{"content":"Retrieves a name for the specified object.","pos":[0,42]}]}],"pos":[71235,71278],"yaml":true},{"content":"If the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> method cannot find a corresponding name for the `value` parameter, it raises the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event before it returns `null`.","nodes":[{"pos":[0,384],"content":"If the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A&gt;</ph> method cannot find a corresponding name for the <ph id=\"ph2\">`value`</ph> parameter, it raises the <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&gt;</ph> event before it returns <ph id=\"ph4\">`null`</ph>.","source":"If the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> method cannot find a corresponding name for the `value` parameter, it raises the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event before it returns `null`."}],"pos":[71289,71674],"yaml":true,"extradata":"MT"},{"content":"The object for which to retrieve the name.","nodes":[{"pos":[0,42],"content":"The object for which to retrieve the name.","nodes":[{"content":"The object for which to retrieve the name.","pos":[0,42]}]}],"pos":[71835,71878],"yaml":true},{"content":"The name of the object, or `null` if the object is unnamed.","nodes":[{"pos":[0,59],"content":"The name of the object, or <ph id=\"ph1\">`null`</ph> if the object is unnamed.","source":"The name of the object, or `null` if the object is unnamed."}],"pos":[71935,71995],"yaml":true},{"content":"<code>value</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>value</code> is `null`."}],"pos":[72277,72307],"yaml":true},{"content":"This property was accessed outside of a serialization session.","nodes":[{"pos":[0,62],"content":"This property was accessed outside of a serialization session.","nodes":[{"content":"This property was accessed outside of a serialization session.","pos":[0,62]}]}],"pos":[72417,72480],"yaml":true},{"content":"Gets a serializer of the requested type for the specified object type.","nodes":[{"pos":[0,70],"content":"Gets a serializer of the requested type for the specified object type.","nodes":[{"content":"Gets a serializer of the requested type for the specified object type.","pos":[0,70]}]}],"pos":[74051,74122],"yaml":true},{"content":"The type of the object to get the serializer for.","nodes":[{"pos":[0,49],"content":"The type of the object to get the serializer for.","nodes":[{"content":"The type of the object to get the serializer for.","pos":[0,49]}]}],"pos":[74316,74366],"yaml":true},{"content":"The type of the serializer to retrieve.","nodes":[{"pos":[0,39],"content":"The type of the serializer to retrieve.","nodes":[{"content":"The type of the serializer to retrieve.","pos":[0,39]}]}],"pos":[74434,74474],"yaml":true},{"content":"An instance of the requested serializer, or `null` if no appropriate serializer can be located.","nodes":[{"pos":[0,95],"content":"An instance of the requested serializer, or <ph id=\"ph1\">`null`</ph> if no appropriate serializer can be located.","source":"An instance of the requested serializer, or `null` if no appropriate serializer can be located."}],"pos":[74531,74627],"yaml":true},{"content":"Gets a type of the specified name.","nodes":[{"pos":[0,34],"content":"Gets a type of the specified name.","nodes":[{"content":"Gets a type of the specified name.","pos":[0,34]}]}],"pos":[76309,76344],"yaml":true},{"content":"The fully qualified name of the type to load.","nodes":[{"pos":[0,45],"content":"The fully qualified name of the type to load.","nodes":[{"content":"The fully qualified name of the type to load.","pos":[0,45]}]}],"pos":[76509,76555],"yaml":true},{"content":"An instance of the type, or `null` if the type cannot be loaded.","nodes":[{"pos":[0,64],"content":"An instance of the type, or <ph id=\"ph1\">`null`</ph> if the type cannot be loaded.","source":"An instance of the type, or `null` if the type cannot be loaded."}],"pos":[76610,76675],"yaml":true},{"content":"This property was accessed outside of a serialization session.","nodes":[{"pos":[0,62],"content":"This property was accessed outside of a serialization session.","nodes":[{"content":"This property was accessed outside of a serialization session.","pos":[0,62]}]}],"pos":[76965,77028],"yaml":true},{"content":"Implements the <xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties\"></xref> property.","nodes":[{"pos":[0,129],"content":"Implements the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties\"&gt;&lt;/xref&gt;</ph> property.","source":"Implements the <xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties\"></xref> property."}],"pos":[78472,78602],"yaml":true},{"content":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> containing the properties to be serialized.","nodes":[{"pos":[0,117],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptorCollection\"&gt;&lt;/xref&gt;</ph> containing the properties to be serialized.","source":"A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> containing the properties to be serialized."}],"pos":[78863,78981],"yaml":true},{"content":"Removes a previously added serialization provider.","nodes":[{"pos":[0,50],"content":"Removes a previously added serialization provider.","nodes":[{"content":"Removes a previously added serialization provider.","pos":[0,50]}]}],"pos":[80977,81028],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23RemoveSerializationProvider%2A> method removes a custom serialization provider that was previously added by a call to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A> method.","nodes":[{"pos":[0,484],"content":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23RemoveSerializationProvider%2A> method removes a custom serialization provider that was previously added by a call to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23RemoveSerializationProvider%2A&gt;</ph> method removes a custom serialization provider that was previously added by a call to the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A&gt;</ph> method.","pos":[0,484],"source":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23RemoveSerializationProvider%2A> method removes a custom serialization provider that was previously added by a call to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A> method."}]}],"pos":[81039,81524],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationProvider\"></xref> to remove.","nodes":[{"pos":[0,109],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationProvider\"&gt;&lt;/xref&gt;</ph> to remove.","source":"The <xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationProvider\"></xref> to remove."}],"pos":[81836,81946],"yaml":true},{"content":"Used to report a recoverable error in serialization.","nodes":[{"pos":[0,52],"content":"Used to report a recoverable error in serialization.","nodes":[{"content":"Used to report a recoverable error in serialization.","pos":[0,52]}]}],"pos":[83666,83719],"yaml":true},{"content":"Serializers can be written to handle recoverable errors gracefully by calling the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> method with the error information. The serialization manager may support reporting a list of errors after it completes, or it may throw an exception from this method and abort the serialization process. The serializer should continue after calling this function.  \n  \n <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> adds the `errorInformation` parameter to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> collection. If `errorInformation` is `null`, no action is taken.","nodes":[{"pos":[0,521],"content":"Serializers can be written to handle recoverable errors gracefully by calling the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> method with the error information. The serialization manager may support reporting a list of errors after it completes, or it may throw an exception from this method and abort the serialization process. The serializer should continue after calling this function.","nodes":[{"content":"Serializers can be written to handle recoverable errors gracefully by calling the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> method with the error information. The serialization manager may support reporting a list of errors after it completes, or it may throw an exception from this method and abort the serialization process. The serializer should continue after calling this function.","pos":[0,521],"nodes":[{"content":"Serializers can be written to handle recoverable errors gracefully by calling the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A&gt;</ph> method with the error information.","pos":[0,293],"source":"Serializers can be written to handle recoverable errors gracefully by calling the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> method with the error information."},{"content":"The serialization manager may support reporting a list of errors after it completes, or it may throw an exception from this method and abort the serialization process.","pos":[294,461]},{"content":"The serializer should continue after calling this function.","pos":[462,521]}]}]},{"pos":[528,903],"content":"<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> adds the `errorInformation` parameter to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> collection. If `errorInformation` is `null`, no action is taken.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A&gt;</ph> adds the <ph id=\"ph2\">`errorInformation`</ph> parameter to the <ph id=\"ph3\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A&gt;</ph> collection.","pos":[0,322],"source":"<xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> adds the `errorInformation` parameter to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> collection."},{"content":"If <ph id=\"ph1\">`errorInformation`</ph> is <ph id=\"ph2\">`null`</ph>, no action is taken.","pos":[323,375],"source":" If `errorInformation` is `null`, no action is taken."}]}],"pos":[83730,84638],"yaml":true,"extradata":"MT"},{"content":"An object containing the error information, usually of type <xref href=\"System.String\"></xref> or <xref href=\"System.Exception\"></xref>.","nodes":[{"pos":[0,136],"content":"An object containing the error information, usually of type <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph>.","source":"An object containing the error information, usually of type <xref href=\"System.String\"></xref> or <xref href=\"System.Exception\"></xref>."}],"pos":[84823,84960],"yaml":true},{"content":"This property was accessed outside of a serialization session.","nodes":[{"pos":[0,62],"content":"This property was accessed outside of a serialization session.","nodes":[{"content":"This property was accessed outside of a serialization session.","pos":[0,62]}]}],"pos":[85254,85317],"yaml":true},{"content":"Sets the name for the specified object.","nodes":[{"pos":[0,39],"content":"Sets the name for the specified object.","nodes":[{"content":"Sets the name for the specified object.","pos":[0,39]}]}],"pos":[86876,86916],"yaml":true},{"content":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName%2A> method provides a way to set the name of an existing object. This enables creation of an instance of the object through a call to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A> method, avoiding the overhead of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method.","nodes":[{"pos":[0,629],"content":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName%2A> method provides a way to set the name of an existing object. This enables creation of an instance of the object through a call to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A> method, avoiding the overhead of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method.","nodes":[{"content":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName%2A> method provides a way to set the name of an existing object. This enables creation of an instance of the object through a call to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A> method, avoiding the overhead of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method.","pos":[0,629],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName%2A&gt;</ph> method provides a way to set the name of an existing object.","pos":[0,237],"source":"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName%2A> method provides a way to set the name of an existing object."},{"content":"This enables creation of an instance of the object through a call to the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A&gt;</ph> method, avoiding the overhead of the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> method.","pos":[238,629],"source":" This enables creation of an instance of the object through a call to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A> method, avoiding the overhead of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method."}]}]}],"pos":[86927,87557],"yaml":true,"extradata":"MT"},{"content":"The object to set the name.","nodes":[{"pos":[0,27],"content":"The object to set the name.","nodes":[{"content":"The object to set the name.","pos":[0,27]}]}],"pos":[87735,87763],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> used as the name of the object.","nodes":[{"pos":[0,68],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> used as the name of the object.","source":"A <xref href=\"System.String\"></xref> used as the name of the object."}],"pos":[87823,87892],"yaml":true},{"content":"One or both of the parameters are `null`.","nodes":[{"pos":[0,41],"content":"One or both of the parameters are <ph id=\"ph1\">`null`</ph>.","source":"One or both of the parameters are `null`."}],"pos":[88174,88216],"yaml":true},{"content":"The object specified by instance already has a name, or <code>name</code> is already used by another named object.","nodes":[{"pos":[0,114],"content":"The object specified by instance already has a name, or <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> is already used by another named object.","source":"The object specified by instance already has a name, or <code>name</code> is already used by another named object."}],"pos":[88310,88425],"yaml":true},{"content":"This property was accessed outside of a serialization session.","nodes":[{"pos":[0,62],"content":"This property was accessed outside of a serialization session.","nodes":[{"content":"This property was accessed outside of a serialization session.","pos":[0,62]}]}],"pos":[88535,88598],"yaml":true},{"content":"For a description of this member, see the <xref href=\"System.IServiceProvider.GetService(System.Type)\"></xref> method.","nodes":[{"pos":[0,118],"content":"For a description of this member, see the <ph id=\"ph1\">&lt;xref href=\"System.IServiceProvider.GetService(System.Type)\"&gt;&lt;/xref&gt;</ph> method.","source":"For a description of this member, see the <xref href=\"System.IServiceProvider.GetService(System.Type)\"></xref> method."}],"pos":[89911,90030],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> instance is cast to an <xref:System.IServiceProvider> interface.","nodes":[{"pos":[0,232],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> instance is cast to an <xref:System.IServiceProvider> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> instance is cast to an <xref:System.IServiceProvider> interface.","pos":[0,232],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IServiceProvider&gt;</ph> interface.","pos":[60,232],"source":" It can be used only when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> instance is cast to an <xref:System.IServiceProvider> interface."}]}]}],"pos":[90041,90274],"yaml":true,"extradata":"MT"},{"content":"An object that specifies the type of service object to get.","nodes":[{"pos":[0,59],"content":"An object that specifies the type of service object to get.","nodes":[{"content":"An object that specifies the type of service object to get.","pos":[0,59]}]}],"pos":[90433,90493],"yaml":true},{"content":"A service object of type <code>serviceType</code>.  \n  \n -or-  \n  \n `null` if there is no service object of type <code>serviceType</code>.","nodes":[{"pos":[0,50],"content":"A service object of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">serviceType</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A service object of type <code>serviceType</code>."},{"pos":[57,61],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[68,138],"content":"<ph id=\"ph1\">`null`</ph> if there is no service object of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">serviceType</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"`null` if there is no service object of type <code>serviceType</code>."}],"pos":[90550,90695],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  commentId: T:System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  id: DesignerSerializationManager\n  children:\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)\n  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)\n  langs:\n  - csharp\n  name: DesignerSerializationManager\n  nameWithType: DesignerSerializationManager\n  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  type: Class\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Provides an implementation of the <xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager\"></xref> interface.\n  remarks: \"The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> interface is designed to be a format-independent interface to an object that controls serialization. It essentially provides context and services to serializers, which actually perform the deserialization. <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> assists in the deserialization process by keeping track of objects. This is similar in technique to the <xref:System.ComponentModel.Design.IDesignerHost> interface: designers actually provide the user interface (UI), and <xref:System.ComponentModel.Design.IDesignerHost> provides the glue that allows different designers to work together.  \\n  \\n The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class implements <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>. It is designed to provide a generic form of deserialization that is similar to run-time serializers like the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.  \\n  \\n The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class achieves three goals:  \\n  \\n-   It is a simple, turnkey object that can be used to deserialize a variety of formats.  \\n  \\n-   It is generic and not tied to any particular format. It can be used equally for CodeDOM deserialization as well as markup deserialization.  \\n  \\n-   It is extensible and supports different serialization methods that are used in copy/paste and undo/redo scenarios.  \\n  \\n Design-time serialization has the following differences from run-time object serialization:  \\n  \\n-   The object performing the serialization is generally separate from the run-time object, so that design-time logic can be removed from a component.  \\n  \\n-   The serialization scheme assumes the object will be created fully initialized, and then modified through property and method invocations during deserialization.  \\n  \\n-   Properties of an object that have values that were never set on the object (the properties contain the default values) are not serialized. Conversely, the deserialization stream may have holes.  \\n  \\n-   Emphasis is placed on the quality of the content within the serialization stream, rather than the full serialization of an object. This means that if there is no defined way to serialize an object, that object may be skipped rather than throwing an exception. The serialization engine may provide heuristics here to decide which failures can be ignored and which are unrecoverable.  \\n  \\n-   The serialization stream may have more data than is needed for deserialization. Source code serialization, for example, has user code mixed in with the code needed to deserialize an object graph. This user code must be ignored on deserialization and preserved on serialization.  \\n  \\n Because of these differences, a different serialization model applies to design-time serialization. This model utilizes a separate serializer object for each data type being serialized. Each serializer provides its small contribution to the problem as a whole. These serializers are all coordinated through a common serialization manager. The serialization manager is responsible for maintaining state between these different serializers. As an example, consider the following class:  \\n  \\n [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/Program.cs#2)]\\n [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/Program.vb#2)]  \\n  \\n An instance of this class would utilize three different serializers: one for `SampleObject`, one for strings, and another for integers. The serializer for `SampleObject` is called the root serializer because `SampleObject` is the root of the serialization graph. More complex object graphs can be created as well. For example, consider what would happen if `SampleObject` were changed as follows:  \\n  \\n [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/SampleObject.cs#11)]\\n [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/SampleObject.vb#11)]  \\n  \\n This allows `SampleObject` to have a child that is another instance of itself. The following code fills in the object graph:  \\n  \\n [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/SampleObject.cs#12)]\\n [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/SampleObject.vb#12)]  \\n  \\n When `root` is serialized, there will be four serializers used: one root serializer, one serializer for the child `SampleObject`, one serializer for `int`, and one serializer for `string`. Serializers are cached based on type, so there is no need to create a serializer for each instance of `SampleObject`.  \\n  \\n The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class is based on the idea of a serialization session. A session maintains state that can be accessed by the various serializers. When a session is disposed, this state is destroyed. This helps to ensure that serializers remain largely stateless, and helps to clean up serializers that are have been corrupted. The following tables describe how state is managed in and among sessions.  \\n  \\n## Global State  \\n This state is owned by the serialization manager object, but is independent of the current serialization session.  \\n  \\n|Object|Usage|  \\n|------------|-----------|  \\n|Serialization providers|Objects can add themselves as custom serialization providers. Because these providers are used to locate serializers, they outlive a serialization session.|  \\n  \\n## Session-Owned State  \\n This state is owned by a session and is destroyed when a session is destroyed. Consequently, accessing any properties or methods that would manipulate this state will throw an exception if the serialization manager is not in an active session.  \\n  \\n|Object|Usage|  \\n|------------|-----------|  \\n|<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event|The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event is attached by a serializer to provide additional resolution of names. All handlers are detached from this event when a session terminates.|  \\n|<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event|The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event is raised just before a session is disposed. Then, all handlers are detached from this event.|  \\n|Name table|The serialization manager maintains a table that maps between objects and their names. Serializers may give objects names for easy identification. This name table is cleared when the session terminates.|  \\n|Serializer cache|The serialization manager maintains a cache of serializers it has been asked to supply. This cache is cleared when the session terminates. The public <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> method can safely be called at any time, but its value is cached only if it is called from within a session.|  \\n|Context stack|The serialization manager maintains an object called the context stack, which you can access with the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> property. Serializers can use this stack to store additional information that is available to other serializers. For example, a serializer that is serializing a property value can push the property name on the serialization stack before asking the value to serialize. This stack is cleared when the session is terminated.|  \\n|Error list|The serialization manager maintains a list of errors that occurred during serialization. This list, which is accessed through the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property, is cleared when the session is terminated. Accessing the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property between sessions will result in an exception.|\"\n  syntax:\n    content: 'public class DesignerSerializationManager : IServiceProvider, System.ComponentModel.Design.Serialization.IDesignerSerializationManager'\n  inheritance:\n  - System.Object\n  implements:\n  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager\n  - System.IServiceProvider\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor\n  commentId: M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: DesignerSerializationManager()\n  nameWithType: DesignerSerializationManager.DesignerSerializationManager()\n  fullName: DesignerSerializationManager.DesignerSerializationManager()\n  type: Constructor\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager\"></xref> class.\n  remarks: This constructor sets the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> properties to `true`.\n  syntax:\n    content: public DesignerSerializationManager ();\n    parameters: []\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)\n  commentId: M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)\n  id: '#ctor(System.IServiceProvider)'\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: DesignerSerializationManager(IServiceProvider)\n  nameWithType: DesignerSerializationManager.DesignerSerializationManager(IServiceProvider)\n  fullName: DesignerSerializationManager.DesignerSerializationManager(IServiceProvider)\n  type: Constructor\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager\"></xref> class with the given service provider.\n  remarks: \"If a serializer requests services that cannot be satisfied by the serialization manager, the default implementation will forward those requests to the `provider` parameter.  \\n  \\n This constructor sets the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> properties to `true`.\"\n  syntax:\n    content: public DesignerSerializationManager (IServiceProvider provider);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: An <xref href=\"System.IServiceProvider\"></xref>.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>provider</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container\n  commentId: P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container\n  id: Container\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: Container\n  nameWithType: DesignerSerializationManager.Container\n  fullName: DesignerSerializationManager.Container\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Gets or sets to the container for this serialization manager.\n  remarks: If a container exists, all components that are created by the serialization manager will be added to the container. The default implementation of this property will search the service provider for an <xref:System.ComponentModel.Design.IDesignerHost> and use the container provided by the designer host, should one exist. Otherwise, this property will return `null` and no components will be added to a container.\n  syntax:\n    content: public System.ComponentModel.IContainer Container { get; set; }\n    return:\n      type: System.ComponentModel.IContainer\n      description: The <xref href=\"System.ComponentModel.IContainer\"></xref> to which the serialization manager will add components.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The serialization manager has an active serialization session.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\n  commentId: M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\n  id: CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: CreateInstance(Type, ICollection, String, Boolean)\n  nameWithType: DesignerSerializationManager.CreateInstance(Type, ICollection, String, Boolean)\n  fullName: DesignerSerializationManager.CreateInstance(Type, ICollection, String, Boolean)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Creates an instance of a type.\n  remarks: This method is called by serializers when they attempt to create an instance of a type. The default implementation creates a new instance of the type, or it may return an existing instance depending on the values of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> properties. The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> method uses reflection to create instances and will perform some generic <xref:System.IConvertible> transformations on parameters to find a matching constructor.\n  syntax:\n    content: protected virtual object CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to create an instance of.\n    - id: arguments\n      type: System.Collections.ICollection\n      description: The parameters of the type’s constructor. This can be `null` or an empty collection to invoke the default constructor.\n    - id: name\n      type: System.String\n      description: A name to give the object. If `null`, the object will not be given a name, unless the object is added to a container and the container gives the object a name.\n    - id: addToContainer\n      type: System.Boolean\n      description: '`true` to add the object to the container if the object implements <xref href=\"System.ComponentModel.IComponent\"></xref>; otherwise, `false`.'\n    return:\n      type: System.Object\n      description: A new instance of the type specified by <code>type</code>.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*\n  exceptions:\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: <code>type</code> does not have a constructor that takes parameters contained in <code>arguments</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession\n  commentId: M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession\n  id: CreateSession\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: CreateSession()\n  nameWithType: DesignerSerializationManager.CreateSession()\n  fullName: DesignerSerializationManager.CreateSession()\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Creates a new serialization session.\n  remarks: Most data within the serialization manager is transient and only lives for the life of a serialization session. When a session is disposed, serialization is considered to be complete and this transient state is cleared. This allows a single instance of a serialization manager to be used to serialize multiple object trees. Some state, including the service provider and any custom serialization providers that were added to the serialization manager, span sessions.\n  syntax:\n    content: public IDisposable CreateSession ();\n    parameters: []\n    return:\n      type: System.IDisposable\n      description: An <xref href=\"System.IDisposable\"></xref> that represents a new serialization session.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The serialization manager is already within a session. This version of <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager\"></xref> does not support simultaneous sessions.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors\n  commentId: P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors\n  id: Errors\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: Errors\n  nameWithType: DesignerSerializationManager.Errors\n  fullName: DesignerSerializationManager.Errors\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Gets the list of errors that occurred during serialization or deserialization.\n  remarks: You can only read the error list while a serialization session is active.\n  syntax:\n    content: public System.Collections.IList Errors { get; }\n    return:\n      type: System.Collections.IList\n      description: The list of errors that occurred during serialization or deserialization.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This property was accessed outside of a serialization session.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)\n  commentId: M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)\n  id: GetRuntimeType(System.String)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: GetRuntimeType(String)\n  nameWithType: DesignerSerializationManager.GetRuntimeType(String)\n  fullName: DesignerSerializationManager.GetRuntimeType(String)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Gets the type corresponding to the specified type name.\n  syntax:\n    content: public Type GetRuntimeType (string typeName);\n    parameters:\n    - id: typeName\n      type: System.String\n      description: The name of the type to get.\n    return:\n      type: System.Type\n      description: The specified type.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)\n  commentId: M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)\n  id: GetSerializer(System.Type,System.Type)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: GetSerializer(Type, Type)\n  nameWithType: DesignerSerializationManager.GetSerializer(Type, Type)\n  fullName: DesignerSerializationManager.GetSerializer(Type, Type)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Gets the serializer for the given object type.\n  remarks: You can request the type of serializer you would like. This method returns `null` if there is no serializer of the requested type for the specified object type.\n  syntax:\n    content: public object GetSerializer (Type objectType, Type serializerType);\n    parameters:\n    - id: objectType\n      type: System.Type\n      description: The type of object for which to retrieve the serializer.\n    - id: serializerType\n      type: System.Type\n      description: The type of serializer to retrieve.\n    return:\n      type: System.Object\n      description: The serializer for <code>objectType</code>, or `null`, if not found.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>objectType</code> or <code>serializerType</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)\n  commentId: M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)\n  id: GetService(System.Type)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: GetService(Type)\n  nameWithType: DesignerSerializationManager.GetService(Type)\n  fullName: DesignerSerializationManager.GetService(Type)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Gets the requested service.\n  remarks: The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService%2A> method provides access to the underlying container or service provider that was set in the constructor.\n  syntax:\n    content: protected virtual object GetService (Type serviceType);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to retrieve.\n    return:\n      type: System.Object\n      description: The requested service, or `null` if the service cannot be resolved.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)\n  commentId: M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)\n  id: GetType(System.String)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: GetType(String)\n  nameWithType: DesignerSerializationManager.GetType(String)\n  fullName: DesignerSerializationManager.GetType(String)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Gets the requested type.\n  remarks: The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> method will search the service provider for an <xref:System.ComponentModel.Design.ITypeResolutionService> and, if available, it will delegate to that service to resolve the type. If an <xref:System.ComponentModel.Design.ITypeResolutionService> is not available, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> will call the <xref:System.Object.GetType%2A?displayProperty=fullName> method.\n  syntax:\n    content: protected virtual Type GetType (string typeName);\n    parameters:\n    - id: typeName\n      type: System.String\n      description: The name of the type to retrieve.\n    return:\n      type: System.Type\n      description: The requested type, or `null` if the type cannot be resolved.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)\n  commentId: M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)\n  id: OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: OnResolveName(ResolveNameEventArgs)\n  nameWithType: DesignerSerializationManager.OnResolveName(ResolveNameEventArgs)\n  fullName: DesignerSerializationManager.OnResolveName(ResolveNameEventArgs)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Raises the <xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnResolveName (System.ComponentModel.Design.Serialization.ResolveNameEventArgs e);\n    parameters:\n    - id: e\n      type: System.ComponentModel.Design.Serialization.ResolveNameEventArgs\n      description: A <xref href=\"System.ComponentModel.Design.Serialization.ResolveNameEventArgs\"></xref> that contains the event data.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)\n  commentId: M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)\n  id: OnSessionCreated(System.EventArgs)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: OnSessionCreated(EventArgs)\n  nameWithType: DesignerSerializationManager.OnSessionCreated(EventArgs)\n  fullName: DesignerSerializationManager.OnSessionCreated(EventArgs)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Raises the <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnSessionCreated (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)\n  commentId: M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)\n  id: OnSessionDisposed(System.EventArgs)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: OnSessionDisposed(EventArgs)\n  nameWithType: DesignerSerializationManager.OnSessionDisposed(EventArgs)\n  fullName: DesignerSerializationManager.OnSessionDisposed(EventArgs)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Raises the <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \\n  \\n The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnSessionDisposed (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames\n  commentId: P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames\n  id: PreserveNames\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: PreserveNames\n  nameWithType: DesignerSerializationManager.PreserveNames\n  fullName: DesignerSerializationManager.PreserveNames\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Gets or sets a value indicating whether the <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> method should check for the presence of the given name in the container.\n  remarks: \"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> property determines the behavior of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method. If `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will pass the given component name. If `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will check for the presence of the given name in the container. If the name does not exist in the container, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will use the given name. If the name does exist in the container, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will pass a null value as the name of a component when adding it to the container, thereby giving it a new name. This second variation is useful for implementing a serializer that always duplicates objects, rather than assuming those objects do not exist. Paste commands often use this type of serializer.  \\n  \\n You can only change this property when you are not in a serialization session.\"\n  syntax:\n    content: public bool PreserveNames { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> will pass the given component name; `false` if <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> will check for the presence of the given name in the container. The default is `true`.'\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This property was changed from within a serialization session.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider\n  commentId: P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider\n  id: PropertyProvider\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: PropertyProvider\n  nameWithType: DesignerSerializationManager.PropertyProvider\n  fullName: DesignerSerializationManager.PropertyProvider\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Gets the object that should be used to provide properties to the serialization manager's <xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties\"></xref> property.\n  remarks: \"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider%2A> property provides a way to give the serialization manager a set of serialization properties that serializers can use to guide their behavior.  \\n  \\n This object's public properties will be inspected and wrapped in new property descriptors that have a target object of the serialization manager.\"\n  syntax:\n    content: public object PropertyProvider { get; set; }\n    return:\n      type: System.Object\n      description: The object that should be used to provide properties to the serialization manager's <xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties\"></xref> property.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances\n  commentId: P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances\n  id: RecycleInstances\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: RecycleInstances\n  nameWithType: DesignerSerializationManager.RecycleInstances\n  fullName: DesignerSerializationManager.RecycleInstances\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Gets or sets a flag indicating whether <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> will always create a new instance of a type.\n  remarks: \"If the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `false`, the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method will always create a new instance of a type. If <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> is `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will first search the name table and container for an object of the same name. If such an object exists and is of the same type, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will return the existing instance. This second variation is useful for implementing a serializer that applies serialization state to an existing set of objects, rather than always creating a new tree. The **Undo** command often uses this type of serializer.  \\n  \\n In the case where the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `true`, the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> property will further modify the behavior of <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> depending on the types of the two objects.\"\n  syntax:\n    content: public bool RecycleInstances { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> will return the existing instance; `false` if <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> will create a new instance of a type. The default is `false`.'\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The serialization manager has an active serialization session.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated\n  commentId: E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated\n  id: SessionCreated\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: SessionCreated\n  nameWithType: DesignerSerializationManager.SessionCreated\n  fullName: DesignerSerializationManager.SessionCreated\n  type: Event\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Occurs when a session is created.\n  syntax:\n    content: public event EventHandler SessionCreated;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed\n  commentId: E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed\n  id: SessionDisposed\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: SessionDisposed\n  nameWithType: DesignerSerializationManager.SessionDisposed\n  fullName: DesignerSerializationManager.SessionDisposed\n  type: Event\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Occurs when a session is disposed.\n  syntax:\n    content: public event EventHandler SessionDisposed;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes\n  commentId: P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes\n  id: ValidateRecycledTypes\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: ValidateRecycledTypes\n  nameWithType: DesignerSerializationManager.ValidateRecycledTypes\n  fullName: DesignerSerializationManager.ValidateRecycledTypes\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Gets or sets a flag indicating whether the <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> method will verify that matching names refer to the same type.\n  remarks: \"The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> property modifies the behavior of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `true`, as detailed in the following table.  \\n  \\n|`RecycleInstances`|`ValidateRecycledTypes`|Behavior of `CreateInstance`|  \\n|------------------------|-----------------------------|----------------------------------|  \\n|`false`|`true` or `false`|Always create a new instance of the specified type|  \\n|`true`|`false`|If a matching instance is found it is returned, regardless of its type.|  \\n|`true`|`true`|If a matching instance is found, it is returned only if its type is the same as specified in the method call.|  \\n  \\n <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> is useful for morphing one type of object to another if they have similar properties but share no common parent or interface.\"\n  syntax:\n    content: public bool ValidateRecycledTypes { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if <xref href=\"System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> verifies types; otherwise, `false` if it does not. The default is `true`.'\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The serialization manager has an active serialization session.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)\n  commentId: M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)\n  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)\n  isEii: true\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)\n  nameWithType: DesignerSerializationManager.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)\n  fullName: DesignerSerializationManager.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Adds a custom serialization provider to the serialization manager.\n  remarks: When the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> method is used to request a serialization provider, the serialization manager queries the custom serialization providers first before looking in the type's metadata for the appropriate serializer.\n  syntax:\n    content: void IDesignerSerializationManager.AddSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);\n    parameters:\n    - id: provider\n      type: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider\n      description: The serialization provider to add.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context\n  commentId: P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context\n  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context\n  isEii: true\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: IDesignerSerializationManager.Context\n  nameWithType: DesignerSerializationManager.IDesignerSerializationManager.Context\n  fullName: DesignerSerializationManager.IDesignerSerializationManager.Context\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Gets the context stack for this serialization session.\n  remarks: A context stack provides a user-defined storage area, implemented as a stack. This storage area is a useful way to provide communication across serializers, as serialization is a generally hierarchical process.\n  syntax:\n    content: System.ComponentModel.Design.Serialization.ContextStack System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context { get; }\n    return:\n      type: System.ComponentModel.Design.Serialization.ContextStack\n      description: A <xref href=\"System.ComponentModel.Design.Serialization.ContextStack\"></xref> that stores data.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This property was accessed outside of a serialization session.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.author: jimwalk\n  manager: martinek\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\n  commentId: M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\n  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\n  isEii: true\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: IDesignerSerializationManager.CreateInstance(Type, ICollection, String, Boolean)\n  nameWithType: DesignerSerializationManager.IDesignerSerializationManager.CreateInstance(Type, ICollection, String, Boolean)\n  fullName: DesignerSerializationManager.IDesignerSerializationManager.CreateInstance(Type, ICollection, String, Boolean)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Implements the <xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\"></xref> method.\n  syntax:\n    content: object IDesignerSerializationManager.CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The data type to create.\n    - id: arguments\n      type: System.Collections.ICollection\n      description: The arguments to pass to the constructor for this type.\n    - id: name\n      type: System.String\n      description: The name of the object. This name can be used to access the object later through <xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)\"></xref>. If `null` is passed, the object is still created but cannot be accessed by name.\n    - id: addToContainer\n      type: System.Boolean\n      description: '`true` to add this object to the design container. The object must implement <xref href=\"System.ComponentModel.IComponent\"></xref> for this to have any effect.'\n    return:\n      type: System.Object\n      description: The newly created object instance.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)\n  commentId: M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)\n  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)\n  isEii: true\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: IDesignerSerializationManager.GetInstance(String)\n  nameWithType: DesignerSerializationManager.IDesignerSerializationManager.GetInstance(String)\n  fullName: DesignerSerializationManager.IDesignerSerializationManager.GetInstance(String)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Retrieves an instance of a created object of the specified name.\n  syntax:\n    content: object IDesignerSerializationManager.GetInstance (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the object to retrieve.\n    return:\n      type: System.Object\n      description: An instance of the object with the given name, or `null` if no object by that name can be found.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This property was accessed outside of a serialization session.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)\n  commentId: M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)\n  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)\n  isEii: true\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: IDesignerSerializationManager.GetName(Object)\n  nameWithType: DesignerSerializationManager.IDesignerSerializationManager.GetName(Object)\n  fullName: DesignerSerializationManager.IDesignerSerializationManager.GetName(Object)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Retrieves a name for the specified object.\n  remarks: If the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> method cannot find a corresponding name for the `value` parameter, it raises the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event before it returns `null`.\n  syntax:\n    content: string IDesignerSerializationManager.GetName (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object for which to retrieve the name.\n    return:\n      type: System.String\n      description: The name of the object, or `null` if the object is unnamed.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>value</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This property was accessed outside of a serialization session.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)\n  commentId: M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)\n  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)\n  isEii: true\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: IDesignerSerializationManager.GetSerializer(Type, Type)\n  nameWithType: DesignerSerializationManager.IDesignerSerializationManager.GetSerializer(Type, Type)\n  fullName: DesignerSerializationManager.IDesignerSerializationManager.GetSerializer(Type, Type)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Gets a serializer of the requested type for the specified object type.\n  syntax:\n    content: object IDesignerSerializationManager.GetSerializer (Type objectType, Type serializerType);\n    parameters:\n    - id: objectType\n      type: System.Type\n      description: The type of the object to get the serializer for.\n    - id: serializerType\n      type: System.Type\n      description: The type of the serializer to retrieve.\n    return:\n      type: System.Object\n      description: An instance of the requested serializer, or `null` if no appropriate serializer can be located.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)\n  commentId: M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)\n  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)\n  isEii: true\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: IDesignerSerializationManager.GetType(String)\n  nameWithType: DesignerSerializationManager.IDesignerSerializationManager.GetType(String)\n  fullName: DesignerSerializationManager.IDesignerSerializationManager.GetType(String)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Gets a type of the specified name.\n  syntax:\n    content: Type IDesignerSerializationManager.GetType (string typeName);\n    parameters:\n    - id: typeName\n      type: System.String\n      description: The fully qualified name of the type to load.\n    return:\n      type: System.Type\n      description: An instance of the type, or `null` if the type cannot be loaded.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This property was accessed outside of a serialization session.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties\n  commentId: P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties\n  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties\n  isEii: true\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: IDesignerSerializationManager.Properties\n  nameWithType: DesignerSerializationManager.IDesignerSerializationManager.Properties\n  fullName: DesignerSerializationManager.IDesignerSerializationManager.Properties\n  type: Property\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Implements the <xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties\"></xref> property.\n  syntax:\n    content: System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties { get; }\n    return:\n      type: System.ComponentModel.PropertyDescriptorCollection\n      description: A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\"></xref> containing the properties to be serialized.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.author: jimwalk\n  manager: martinek\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)\n  commentId: M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)\n  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)\n  isEii: true\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)\n  nameWithType: DesignerSerializationManager.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)\n  fullName: DesignerSerializationManager.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Removes a previously added serialization provider.\n  remarks: The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23RemoveSerializationProvider%2A> method removes a custom serialization provider that was previously added by a call to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A> method.\n  syntax:\n    content: void IDesignerSerializationManager.RemoveSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);\n    parameters:\n    - id: provider\n      type: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider\n      description: The <xref href=\"System.ComponentModel.Design.Serialization.IDesignerSerializationProvider\"></xref> to remove.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)\n  commentId: M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)\n  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)\n  isEii: true\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: IDesignerSerializationManager.ReportError(Object)\n  nameWithType: DesignerSerializationManager.IDesignerSerializationManager.ReportError(Object)\n  fullName: DesignerSerializationManager.IDesignerSerializationManager.ReportError(Object)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Used to report a recoverable error in serialization.\n  remarks: \"Serializers can be written to handle recoverable errors gracefully by calling the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> method with the error information. The serialization manager may support reporting a list of errors after it completes, or it may throw an exception from this method and abort the serialization process. The serializer should continue after calling this function.  \\n  \\n <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> adds the `errorInformation` parameter to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> collection. If `errorInformation` is `null`, no action is taken.\"\n  syntax:\n    content: void IDesignerSerializationManager.ReportError (object errorInformation);\n    parameters:\n    - id: errorInformation\n      type: System.Object\n      description: An object containing the error information, usually of type <xref href=\"System.String\"></xref> or <xref href=\"System.Exception\"></xref>.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This property was accessed outside of a serialization session.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)\n  commentId: M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)\n  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)\n  isEii: true\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: IDesignerSerializationManager.SetName(Object, String)\n  nameWithType: DesignerSerializationManager.IDesignerSerializationManager.SetName(Object, String)\n  fullName: DesignerSerializationManager.IDesignerSerializationManager.SetName(Object, String)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: Sets the name for the specified object.\n  remarks: The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName%2A> method provides a way to set the name of an existing object. This enables creation of an instance of the object through a call to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A> method, avoiding the overhead of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method.\n  syntax:\n    content: void IDesignerSerializationManager.SetName (object instance, string name);\n    parameters:\n    - id: instance\n      type: System.Object\n      description: The object to set the name.\n    - id: name\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> used as the name of the object.\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: One or both of the parameters are `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The object specified by instance already has a name, or <code>name</code> is already used by another named object.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This property was accessed outside of a serialization session.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)\n  commentId: M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)\n  id: System#IServiceProvider#GetService(System.Type)\n  isEii: true\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  langs:\n  - csharp\n  name: IServiceProvider.GetService(Type)\n  nameWithType: DesignerSerializationManager.IServiceProvider.GetService(Type)\n  fullName: DesignerSerializationManager.IServiceProvider.GetService(Type)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design.Serialization\n  summary: For a description of this member, see the <xref href=\"System.IServiceProvider.GetService(System.Type)\"></xref> method.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> instance is cast to an <xref:System.IServiceProvider> interface.\n  syntax:\n    content: object IServiceProvider.GetService (Type serviceType);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: An object that specifies the type of service object to get.\n    return:\n      type: System.Object\n      description: \"A service object of type <code>serviceType</code>.  \\n  \\n -or-  \\n  \\n `null` if there is no service object of type <code>serviceType</code>.\"\n  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Runtime.Serialization.SerializationException\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationException\n  nameWithType: SerializationException\n  fullName: System.Runtime.Serialization.SerializationException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: DesignerSerializationManager()\n  nameWithType: DesignerSerializationManager.DesignerSerializationManager()\n  fullName: DesignerSerializationManager.DesignerSerializationManager()\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: DesignerSerializationManager(IServiceProvider)\n  nameWithType: DesignerSerializationManager.DesignerSerializationManager(IServiceProvider)\n  fullName: DesignerSerializationManager.DesignerSerializationManager(IServiceProvider)\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: false\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: Container\n  nameWithType: DesignerSerializationManager.Container\n  fullName: DesignerSerializationManager.Container\n- uid: System.ComponentModel.IContainer\n  parent: System.ComponentModel\n  isExternal: false\n  name: IContainer\n  nameWithType: IContainer\n  fullName: System.ComponentModel.IContainer\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: CreateInstance(Type, ICollection, String, Boolean)\n  nameWithType: DesignerSerializationManager.CreateInstance(Type, ICollection, String, Boolean)\n  fullName: DesignerSerializationManager.CreateInstance(Type, ICollection, String, Boolean)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: CreateSession()\n  nameWithType: DesignerSerializationManager.CreateSession()\n  fullName: DesignerSerializationManager.CreateSession()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: Errors\n  nameWithType: DesignerSerializationManager.Errors\n  fullName: DesignerSerializationManager.Errors\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: false\n  name: IList\n  nameWithType: IList\n  fullName: System.Collections.IList\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: GetRuntimeType(String)\n  nameWithType: DesignerSerializationManager.GetRuntimeType(String)\n  fullName: DesignerSerializationManager.GetRuntimeType(String)\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: GetSerializer(Type, Type)\n  nameWithType: DesignerSerializationManager.GetSerializer(Type, Type)\n  fullName: DesignerSerializationManager.GetSerializer(Type, Type)\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: GetService(Type)\n  nameWithType: DesignerSerializationManager.GetService(Type)\n  fullName: DesignerSerializationManager.GetService(Type)\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: GetType(String)\n  nameWithType: DesignerSerializationManager.GetType(String)\n  fullName: DesignerSerializationManager.GetType(String)\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: OnResolveName(ResolveNameEventArgs)\n  nameWithType: DesignerSerializationManager.OnResolveName(ResolveNameEventArgs)\n  fullName: DesignerSerializationManager.OnResolveName(ResolveNameEventArgs)\n- uid: System.ComponentModel.Design.Serialization.ResolveNameEventArgs\n  parent: System.ComponentModel.Design.Serialization\n  isExternal: false\n  name: ResolveNameEventArgs\n  nameWithType: ResolveNameEventArgs\n  fullName: System.ComponentModel.Design.Serialization.ResolveNameEventArgs\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: OnSessionCreated(EventArgs)\n  nameWithType: DesignerSerializationManager.OnSessionCreated(EventArgs)\n  fullName: DesignerSerializationManager.OnSessionCreated(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: OnSessionDisposed(EventArgs)\n  nameWithType: DesignerSerializationManager.OnSessionDisposed(EventArgs)\n  fullName: DesignerSerializationManager.OnSessionDisposed(EventArgs)\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: PreserveNames\n  nameWithType: DesignerSerializationManager.PreserveNames\n  fullName: DesignerSerializationManager.PreserveNames\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: PropertyProvider\n  nameWithType: DesignerSerializationManager.PropertyProvider\n  fullName: DesignerSerializationManager.PropertyProvider\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: RecycleInstances\n  nameWithType: DesignerSerializationManager.RecycleInstances\n  fullName: DesignerSerializationManager.RecycleInstances\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: SessionCreated\n  nameWithType: DesignerSerializationManager.SessionCreated\n  fullName: DesignerSerializationManager.SessionCreated\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: SessionDisposed\n  nameWithType: DesignerSerializationManager.SessionDisposed\n  fullName: DesignerSerializationManager.SessionDisposed\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: ValidateRecycledTypes\n  nameWithType: DesignerSerializationManager.ValidateRecycledTypes\n  fullName: DesignerSerializationManager.ValidateRecycledTypes\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)\n  nameWithType: DesignerSerializationManager.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)\n  fullName: DesignerSerializationManager.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)\n- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider\n  parent: System.ComponentModel.Design.Serialization\n  isExternal: false\n  name: IDesignerSerializationProvider\n  nameWithType: IDesignerSerializationProvider\n  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: IDesignerSerializationManager.Context\n  nameWithType: DesignerSerializationManager.IDesignerSerializationManager.Context\n  fullName: DesignerSerializationManager.IDesignerSerializationManager.Context\n- uid: System.ComponentModel.Design.Serialization.ContextStack\n  parent: System.ComponentModel.Design.Serialization\n  isExternal: false\n  name: ContextStack\n  nameWithType: ContextStack\n  fullName: System.ComponentModel.Design.Serialization.ContextStack\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: IDesignerSerializationManager.CreateInstance(Type, ICollection, String, Boolean)\n  nameWithType: DesignerSerializationManager.IDesignerSerializationManager.CreateInstance(Type, ICollection, String, Boolean)\n  fullName: DesignerSerializationManager.IDesignerSerializationManager.CreateInstance(Type, ICollection, String, Boolean)\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: IDesignerSerializationManager.GetInstance(String)\n  nameWithType: DesignerSerializationManager.IDesignerSerializationManager.GetInstance(String)\n  fullName: DesignerSerializationManager.IDesignerSerializationManager.GetInstance(String)\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: IDesignerSerializationManager.GetName(Object)\n  nameWithType: DesignerSerializationManager.IDesignerSerializationManager.GetName(Object)\n  fullName: DesignerSerializationManager.IDesignerSerializationManager.GetName(Object)\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: IDesignerSerializationManager.GetSerializer(Type, Type)\n  nameWithType: DesignerSerializationManager.IDesignerSerializationManager.GetSerializer(Type, Type)\n  fullName: DesignerSerializationManager.IDesignerSerializationManager.GetSerializer(Type, Type)\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: IDesignerSerializationManager.GetType(String)\n  nameWithType: DesignerSerializationManager.IDesignerSerializationManager.GetType(String)\n  fullName: DesignerSerializationManager.IDesignerSerializationManager.GetType(String)\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: IDesignerSerializationManager.Properties\n  nameWithType: DesignerSerializationManager.IDesignerSerializationManager.Properties\n  fullName: DesignerSerializationManager.IDesignerSerializationManager.Properties\n- uid: System.ComponentModel.PropertyDescriptorCollection\n  parent: System.ComponentModel\n  isExternal: false\n  name: PropertyDescriptorCollection\n  nameWithType: PropertyDescriptorCollection\n  fullName: System.ComponentModel.PropertyDescriptorCollection\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)\n  nameWithType: DesignerSerializationManager.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)\n  fullName: DesignerSerializationManager.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: IDesignerSerializationManager.ReportError(Object)\n  nameWithType: DesignerSerializationManager.IDesignerSerializationManager.ReportError(Object)\n  fullName: DesignerSerializationManager.IDesignerSerializationManager.ReportError(Object)\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: IDesignerSerializationManager.SetName(Object, String)\n  nameWithType: DesignerSerializationManager.IDesignerSerializationManager.SetName(Object, String)\n  fullName: DesignerSerializationManager.IDesignerSerializationManager.SetName(Object, String)\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: IServiceProvider.GetService(Type)\n  nameWithType: DesignerSerializationManager.IServiceProvider.GetService(Type)\n  fullName: DesignerSerializationManager.IServiceProvider.GetService(Type)\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: DesignerSerializationManager\n  nameWithType: DesignerSerializationManager.DesignerSerializationManager\n  fullName: DesignerSerializationManager.DesignerSerializationManager\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: Container\n  nameWithType: DesignerSerializationManager.Container\n  fullName: DesignerSerializationManager.Container\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: CreateInstance\n  nameWithType: DesignerSerializationManager.CreateInstance\n  fullName: DesignerSerializationManager.CreateInstance\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: CreateSession\n  nameWithType: DesignerSerializationManager.CreateSession\n  fullName: DesignerSerializationManager.CreateSession\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: Errors\n  nameWithType: DesignerSerializationManager.Errors\n  fullName: DesignerSerializationManager.Errors\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: GetRuntimeType\n  nameWithType: DesignerSerializationManager.GetRuntimeType\n  fullName: DesignerSerializationManager.GetRuntimeType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: GetSerializer\n  nameWithType: DesignerSerializationManager.GetSerializer\n  fullName: DesignerSerializationManager.GetSerializer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: GetService\n  nameWithType: DesignerSerializationManager.GetService\n  fullName: DesignerSerializationManager.GetService\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: GetType\n  nameWithType: DesignerSerializationManager.GetType\n  fullName: DesignerSerializationManager.GetType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: OnResolveName\n  nameWithType: DesignerSerializationManager.OnResolveName\n  fullName: DesignerSerializationManager.OnResolveName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: OnSessionCreated\n  nameWithType: DesignerSerializationManager.OnSessionCreated\n  fullName: DesignerSerializationManager.OnSessionCreated\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: OnSessionDisposed\n  nameWithType: DesignerSerializationManager.OnSessionDisposed\n  fullName: DesignerSerializationManager.OnSessionDisposed\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: PreserveNames\n  nameWithType: DesignerSerializationManager.PreserveNames\n  fullName: DesignerSerializationManager.PreserveNames\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: PropertyProvider\n  nameWithType: DesignerSerializationManager.PropertyProvider\n  fullName: DesignerSerializationManager.PropertyProvider\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: RecycleInstances\n  nameWithType: DesignerSerializationManager.RecycleInstances\n  fullName: DesignerSerializationManager.RecycleInstances\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: ValidateRecycledTypes\n  nameWithType: DesignerSerializationManager.ValidateRecycledTypes\n  fullName: DesignerSerializationManager.ValidateRecycledTypes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider\n  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider\n  fullName: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context\n  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context\n  fullName: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance\n  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance\n  fullName: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance\n  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance\n  fullName: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName\n  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName\n  fullName: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer\n  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer\n  fullName: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType\n  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType\n  fullName: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties\n  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties\n  fullName: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider\n  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider\n  fullName: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError\n  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError\n  fullName: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName\n  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName\n  fullName: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService*\n  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager\n  isExternal: false\n  name: System.IServiceProvider.GetService\n  nameWithType: DesignerSerializationManager.System.IServiceProvider.GetService\n  fullName: DesignerSerializationManager.System.IServiceProvider.GetService\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design.Serialization/DesignerSerializationManager.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager\n  parent: System.ComponentModel.Design.Serialization\n  isExternal: false\n  name: IDesignerSerializationManager\n  nameWithType: IDesignerSerializationManager\n  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager\n"}