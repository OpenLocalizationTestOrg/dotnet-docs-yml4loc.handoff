<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fbfdeb0a7336dd907f145f3d03e8c8c66ea159b6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Runtime.CompilerServices.TupleElementNamesAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">44915f12f3d3c7ab9a6e2a8cfd91a9cb9902172e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b8eed2faa3fd2b6b723475888b2219a2491f338f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Indicates that the use of a value tuple on a member is meant to be treated as a tuple with element names.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Runtime.CompilerServices.TupleElementNamesAttribute"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is used on types that contain a value tuple instance with element names.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if <ph id="ph1">`C`</ph> is a generic type with          two type parameters, then the use of the constructed type <ph id="ph2">`C(`</ph><ph id="ph3">&lt;xref:System.ValueTuple%602&gt;</ph><ph id="ph4">`,`</ph> <ph id="ph5">&lt;xref:System.ValueTuple%603&gt;</ph><ph id="ph6">`)`</ph> might be intended to          treat the first type argument as a tuple with element names and the          second as a tuple without element names.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the          appropriate attribute specification should use a          <ph id="ph1">`transformNames`</ph> value of <ph id="ph2">`{ "name1", "name2", null, null,          null}`</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A string array that specifies, in a pre-order depth-first traversal of a type's construction, which value tuple occurrences are meant to carry element names.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Specifies, in a pre-order depth-first traversal of a type's construction, which value tuple elements are meant to carry element names.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An array that indicates which value tuple elements are meant to carry element names.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>