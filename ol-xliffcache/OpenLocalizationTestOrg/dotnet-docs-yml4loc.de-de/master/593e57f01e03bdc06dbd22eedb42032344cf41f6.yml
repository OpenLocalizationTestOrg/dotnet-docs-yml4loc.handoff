### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.ManipulationDeltaEventArgs
  commentId: T:System.Windows.Input.ManipulationDeltaEventArgs
  id: ManipulationDeltaEventArgs
  children:
  - System.Windows.Input.ManipulationDeltaEventArgs.Cancel
  - System.Windows.Input.ManipulationDeltaEventArgs.Complete
  - System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation
  - System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation
  - System.Windows.Input.ManipulationDeltaEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  - System.Windows.Input.ManipulationDeltaEventArgs.IsInertial
  - System.Windows.Input.ManipulationDeltaEventArgs.ManipulationContainer
  - System.Windows.Input.ManipulationDeltaEventArgs.ManipulationOrigin
  - System.Windows.Input.ManipulationDeltaEventArgs.Manipulators
  - System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback(System.Windows.Input.ManipulationDelta)
  - System.Windows.Input.ManipulationDeltaEventArgs.StartInertia
  - System.Windows.Input.ManipulationDeltaEventArgs.Velocities
  langs:
  - csharp
  name: ManipulationDeltaEventArgs
  nameWithType: ManipulationDeltaEventArgs
  fullName: System.Windows.Input.ManipulationDeltaEventArgs
  type: Class
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Provides data for the <xref href="System.Windows.UIElement.ManipulationDelta"></xref> event.
  remarks: "The <xref:System.Windows.Input.ManipulationDeltaEventArgs> class contains data about changes in the position of a manipulation. The <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property contains the changes that occurred since the last <xref:System.Windows.UIElement.ManipulationDelta> event occurred. The <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> property contains the total changes that occurred for the current manipulation. You use one of those properties to transform the manipulated object.  \n  \n You can end a manipulation by calling the <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> method or force the manipulation into inertia by calling the <xref:System.Windows.Input.ManipulationDeltaEventArgs.StartInertia%2A> method."
  example:
  - "The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event. The example uses the <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>. The example also checks whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurred during inertia and whether the rectangle is touching the edge of a window. If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application. This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  \n  \n [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]\n [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]"
  syntax:
    content: 'public sealed class ManipulationDeltaEventArgs : System.Windows.Input.InputEventArgs'
  inheritance:
  - System.Object
  - System.EventArgs
  - System.Windows.RoutedEventArgs
  - System.Windows.Input.InputEventArgs
  implements: []
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Windows.Input.InputEventArgs.Device
  - System.Windows.Input.InputEventArgs.Timestamp
  - System.Windows.RoutedEventArgs.Handled
  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  - System.Windows.RoutedEventArgs.OriginalSource
  - System.Windows.RoutedEventArgs.RoutedEvent
  - System.Windows.RoutedEventArgs.Source
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDeltaEventArgs.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Input.ManipulationDeltaEventArgs.Cancel
  commentId: M:System.Windows.Input.ManipulationDeltaEventArgs.Cancel
  id: Cancel
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  langs:
  - csharp
  name: Cancel()
  nameWithType: ManipulationDeltaEventArgs.Cancel()
  fullName: ManipulationDeltaEventArgs.Cancel()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Cancels the manipulation.
  remarks: If the method succeeds, the default <xref:System.Windows.Input.TouchDevice> sends previous touch events as mouse down or mouse move events to the element and future manipulation events do not occur. Touch cannot be promoted to mouse events if the <xref:System.Windows.UIElement.ManipulationCompleted> event occurs during inertia.
  syntax:
    content: public bool Cancel ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the manipulation was successfully canceled; otherwise, `false`.'
  overload: System.Windows.Input.ManipulationDeltaEventArgs.Cancel*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDeltaEventArgs.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.ManipulationDeltaEventArgs.Complete
  commentId: M:System.Windows.Input.ManipulationDeltaEventArgs.Complete
  id: Complete
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  langs:
  - csharp
  name: Complete()
  nameWithType: ManipulationDeltaEventArgs.Complete()
  fullName: ManipulationDeltaEventArgs.Complete()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Completes the manipulation without inertia.
  remarks: You can call the <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> method to end the manipulation. For example, when an object reaches the edge of a window, you can call <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> to prevent the object from going off the screen.
  example:
  - "The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event. The example checks whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurred during inertia and whether the rectangle is touching the edge of a window. If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application. This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  \n  \n [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]\n [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]"
  syntax:
    content: public void Complete ();
    parameters: []
  overload: System.Windows.Input.ManipulationDeltaEventArgs.Complete*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDeltaEventArgs.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation
  commentId: P:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation
  id: CumulativeManipulation
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  langs:
  - csharp
  name: CumulativeManipulation
  nameWithType: ManipulationDeltaEventArgs.CumulativeManipulation
  fullName: ManipulationDeltaEventArgs.CumulativeManipulation
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the cumulated changes of the current manipulation.
  remarks: The <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> property contains the total changes that occurred for the current manipulation. You can use <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> to transform the manipulated object.
  syntax:
    content: public System.Windows.Input.ManipulationDelta CumulativeManipulation { get; }
    return:
      type: System.Windows.Input.ManipulationDelta
      description: The cumulated changes of the current manipulation.
  overload: System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDeltaEventArgs.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation
  commentId: P:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation
  id: DeltaManipulation
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  langs:
  - csharp
  name: DeltaManipulation
  nameWithType: ManipulationDeltaEventArgs.DeltaManipulation
  fullName: ManipulationDeltaEventArgs.DeltaManipulation
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the most recent changes of the current manipulation.
  remarks: The <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property contains the changes that occurred since the last <xref:System.Windows.UIElement.ManipulationDelta> event occurred. You can use this property to transform the manipulated object.
  example:
  - "The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event. The example uses the <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>. This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  \n  \n [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]\n [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]"
  syntax:
    content: public System.Windows.Input.ManipulationDelta DeltaManipulation { get; }
    return:
      type: System.Windows.Input.ManipulationDelta
      description: The most recent changes of the current manipulation.
  overload: System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDeltaEventArgs.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.ManipulationDeltaEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  commentId: M:System.Windows.Input.ManipulationDeltaEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  id: InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  langs:
  - csharp
  name: InvokeEventHandler(Delegate, Object)
  nameWithType: ManipulationDeltaEventArgs.InvokeEventHandler(Delegate, Object)
  fullName: ManipulationDeltaEventArgs.InvokeEventHandler(Delegate, Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  syntax:
    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);
    parameters:
    - id: genericHandler
      type: System.Delegate
      description: ''
    - id: genericTarget
      type: System.Object
      description: ''
  overload: System.Windows.Input.ManipulationDeltaEventArgs.InvokeEventHandler*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDeltaEventArgs.xml
- uid: System.Windows.Input.ManipulationDeltaEventArgs.IsInertial
  commentId: P:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial
  id: IsInertial
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  langs:
  - csharp
  name: IsInertial
  nameWithType: ManipulationDeltaEventArgs.IsInertial
  fullName: ManipulationDeltaEventArgs.IsInertial
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets a value that indicates whether the <xref href="System.Windows.UIElement.ManipulationDelta"></xref> event occurs during inertia.
  remarks: You can use this method to determine whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurs during inertia or while the user has contact with the element that receives the <xref:System.Windows.UIElement.ManipulationDelta> event.
  example:
  - "The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event. The example checks whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurred during inertia and whether the rectangle is touching the edge of a window. If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application. This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).  \n  \n [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]\n [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]"
  syntax:
    content: public bool IsInertial { get; }
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.Windows.UIElement.ManipulationDelta"></xref> event occurs during inertia; `false` if the event occurs while the user has contact with the <xref href="System.Windows.UIElement"></xref>.'
  overload: System.Windows.Input.ManipulationDeltaEventArgs.IsInertial*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDeltaEventArgs.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.ManipulationDeltaEventArgs.ManipulationContainer
  commentId: P:System.Windows.Input.ManipulationDeltaEventArgs.ManipulationContainer
  id: ManipulationContainer
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  langs:
  - csharp
  name: ManipulationContainer
  nameWithType: ManipulationDeltaEventArgs.ManipulationContainer
  fullName: ManipulationDeltaEventArgs.ManipulationContainer
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the container that defines the coordinates for the manipulation.
  syntax:
    content: public System.Windows.IInputElement ManipulationContainer { get; }
    return:
      type: System.Windows.IInputElement
      description: The container that defines the coordinates for the manipulation.
  overload: System.Windows.Input.ManipulationDeltaEventArgs.ManipulationContainer*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDeltaEventArgs.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.ManipulationDeltaEventArgs.ManipulationOrigin
  commentId: P:System.Windows.Input.ManipulationDeltaEventArgs.ManipulationOrigin
  id: ManipulationOrigin
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  langs:
  - csharp
  name: ManipulationOrigin
  nameWithType: ManipulationDeltaEventArgs.ManipulationOrigin
  fullName: ManipulationDeltaEventArgs.ManipulationOrigin
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the point from which the manipulation originated.
  syntax:
    content: public System.Windows.Point ManipulationOrigin { get; }
    return:
      type: System.Windows.Point
      description: The point from which the manipulation originated.
  overload: System.Windows.Input.ManipulationDeltaEventArgs.ManipulationOrigin*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDeltaEventArgs.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Input.ManipulationDeltaEventArgs.Manipulators
  commentId: P:System.Windows.Input.ManipulationDeltaEventArgs.Manipulators
  id: Manipulators
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  langs:
  - csharp
  name: Manipulators
  nameWithType: ManipulationDeltaEventArgs.Manipulators
  fullName: ManipulationDeltaEventArgs.Manipulators
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets a collection of objects that represents the touch contacts for the manipulation.
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.IManipulator> Manipulators { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Windows.Input.IManipulator}
      description: A collection of objects that represents the touch contacts for the manipulation.
  overload: System.Windows.Input.ManipulationDeltaEventArgs.Manipulators*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDeltaEventArgs.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback(System.Windows.Input.ManipulationDelta)
  commentId: M:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback(System.Windows.Input.ManipulationDelta)
  id: ReportBoundaryFeedback(System.Windows.Input.ManipulationDelta)
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  langs:
  - csharp
  name: ReportBoundaryFeedback(ManipulationDelta)
  nameWithType: ManipulationDeltaEventArgs.ReportBoundaryFeedback(ManipulationDelta)
  fullName: ManipulationDeltaEventArgs.ReportBoundaryFeedback(ManipulationDelta)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Specifies that the manipulation has gone beyond certain boundaries.
  remarks: Use the <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A> method to indicate that an element has moved beyond a certain boundary.  For example, if a user moves an element outside of the bounds of a <xref:System.Windows.Window>, you can call this method to report that to the window.  When you call <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A>, the <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> event occurs.  By default, the <xref:System.Windows.Window> subscribes to the <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> event to provide visual feedback to the user that a boundary has been reached.  You can subscribe to <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> to implement custom behavior.
  example:
  - "The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event that calls the <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A> method when the user moves the element over the edge of its container.  To test this example, follow the steps in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md) and replace the code in step 5 with this code.  \n  \n [!code-csharp[BasicManipulation#ReportBoundaryFeedback](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/reportboundaryfeedbackexample.xaml.cs#reportboundaryfeedback)]\n [!code-vb[BasicManipulation#ReportBoundaryFeedback](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/reportboundaryfeedbackexample.xaml.vb#reportboundaryfeedback)]"
  syntax:
    content: public void ReportBoundaryFeedback (System.Windows.Input.ManipulationDelta unusedManipulation);
    parameters:
    - id: unusedManipulation
      type: System.Windows.Input.ManipulationDelta
      description: The portion of the manipulation that represents moving beyond the boundary.
  overload: System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>unusedManipulation</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDeltaEventArgs.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.ManipulationDeltaEventArgs.StartInertia
  commentId: M:System.Windows.Input.ManipulationDeltaEventArgs.StartInertia
  id: StartInertia
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  langs:
  - csharp
  name: StartInertia()
  nameWithType: ManipulationDeltaEventArgs.StartInertia()
  fullName: ManipulationDeltaEventArgs.StartInertia()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Starts inertia on the manipulation by ignoring subsequent contact movements and raising the <xref href="System.Windows.UIElement.ManipulationInertiaStarting"></xref> event.
  syntax:
    content: public void StartInertia ();
    parameters: []
  overload: System.Windows.Input.ManipulationDeltaEventArgs.StartInertia*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDeltaEventArgs.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.ManipulationDeltaEventArgs.Velocities
  commentId: P:System.Windows.Input.ManipulationDeltaEventArgs.Velocities
  id: Velocities
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  langs:
  - csharp
  name: Velocities
  nameWithType: ManipulationDeltaEventArgs.Velocities
  fullName: ManipulationDeltaEventArgs.Velocities
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the rates of the most recent changes to the manipulation.
  syntax:
    content: public System.Windows.Input.ManipulationVelocities Velocities { get; }
    return:
      type: System.Windows.Input.ManipulationVelocities
      description: The rates of the most recent changes to the manipulation.
  overload: System.Windows.Input.ManipulationDeltaEventArgs.Velocities*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDeltaEventArgs.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Windows.Input.InputEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: InputEventArgs
  nameWithType: InputEventArgs
  fullName: System.Windows.Input.InputEventArgs
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Windows.Input.ManipulationDeltaEventArgs.Cancel
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  isExternal: false
  name: Cancel()
  nameWithType: ManipulationDeltaEventArgs.Cancel()
  fullName: ManipulationDeltaEventArgs.Cancel()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.ManipulationDeltaEventArgs.Complete
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  isExternal: false
  name: Complete()
  nameWithType: ManipulationDeltaEventArgs.Complete()
  fullName: ManipulationDeltaEventArgs.Complete()
- uid: System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  isExternal: false
  name: CumulativeManipulation
  nameWithType: ManipulationDeltaEventArgs.CumulativeManipulation
  fullName: ManipulationDeltaEventArgs.CumulativeManipulation
- uid: System.Windows.Input.ManipulationDelta
  parent: System.Windows.Input
  isExternal: false
  name: ManipulationDelta
  nameWithType: ManipulationDelta
  fullName: System.Windows.Input.ManipulationDelta
- uid: System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  isExternal: false
  name: DeltaManipulation
  nameWithType: ManipulationDeltaEventArgs.DeltaManipulation
  fullName: ManipulationDeltaEventArgs.DeltaManipulation
- uid: System.Windows.Input.ManipulationDeltaEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  isExternal: false
  name: InvokeEventHandler(Delegate, Object)
  nameWithType: ManipulationDeltaEventArgs.InvokeEventHandler(Delegate, Object)
  fullName: ManipulationDeltaEventArgs.InvokeEventHandler(Delegate, Object)
- uid: System.Delegate
  parent: System
  isExternal: false
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Input.ManipulationDeltaEventArgs.IsInertial
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  isExternal: false
  name: IsInertial
  nameWithType: ManipulationDeltaEventArgs.IsInertial
  fullName: ManipulationDeltaEventArgs.IsInertial
- uid: System.Windows.Input.ManipulationDeltaEventArgs.ManipulationContainer
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  isExternal: false
  name: ManipulationContainer
  nameWithType: ManipulationDeltaEventArgs.ManipulationContainer
  fullName: ManipulationDeltaEventArgs.ManipulationContainer
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.ManipulationDeltaEventArgs.ManipulationOrigin
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  isExternal: false
  name: ManipulationOrigin
  nameWithType: ManipulationDeltaEventArgs.ManipulationOrigin
  fullName: ManipulationDeltaEventArgs.ManipulationOrigin
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Input.ManipulationDeltaEventArgs.Manipulators
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  isExternal: false
  name: Manipulators
  nameWithType: ManipulationDeltaEventArgs.Manipulators
  fullName: ManipulationDeltaEventArgs.Manipulators
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Windows.Input.IManipulator
  name: IManipulator
  nameWithType: IManipulator
  fullName: System.Windows.Input.IManipulator
- uid: System.Collections.Generic.IEnumerable{System.Windows.Input.IManipulator}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<IManipulator>
  nameWithType: IEnumerable<IManipulator>
  fullName: System.Collections.Generic.IEnumerable<System.Windows.Input.IManipulator>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.IManipulator
    name: IManipulator
    nameWithType: IManipulator
    fullName: System.Windows.Input.IManipulator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback(System.Windows.Input.ManipulationDelta)
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  isExternal: false
  name: ReportBoundaryFeedback(ManipulationDelta)
  nameWithType: ManipulationDeltaEventArgs.ReportBoundaryFeedback(ManipulationDelta)
  fullName: ManipulationDeltaEventArgs.ReportBoundaryFeedback(ManipulationDelta)
- uid: System.Windows.Input.ManipulationDeltaEventArgs.StartInertia
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  isExternal: false
  name: StartInertia()
  nameWithType: ManipulationDeltaEventArgs.StartInertia()
  fullName: ManipulationDeltaEventArgs.StartInertia()
- uid: System.Windows.Input.ManipulationDeltaEventArgs.Velocities
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  isExternal: false
  name: Velocities
  nameWithType: ManipulationDeltaEventArgs.Velocities
  fullName: ManipulationDeltaEventArgs.Velocities
- uid: System.Windows.Input.ManipulationVelocities
  parent: System.Windows.Input
  isExternal: false
  name: ManipulationVelocities
  nameWithType: ManipulationVelocities
  fullName: System.Windows.Input.ManipulationVelocities
- uid: System.Windows.Input.ManipulationDeltaEventArgs.Cancel*
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  isExternal: false
  name: Cancel
  nameWithType: ManipulationDeltaEventArgs.Cancel
  fullName: ManipulationDeltaEventArgs.Cancel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDeltaEventArgs.xml
- uid: System.Windows.Input.ManipulationDeltaEventArgs.Complete*
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  isExternal: false
  name: Complete
  nameWithType: ManipulationDeltaEventArgs.Complete
  fullName: ManipulationDeltaEventArgs.Complete
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDeltaEventArgs.xml
- uid: System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation*
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  isExternal: false
  name: CumulativeManipulation
  nameWithType: ManipulationDeltaEventArgs.CumulativeManipulation
  fullName: ManipulationDeltaEventArgs.CumulativeManipulation
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDeltaEventArgs.xml
- uid: System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation*
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  isExternal: false
  name: DeltaManipulation
  nameWithType: ManipulationDeltaEventArgs.DeltaManipulation
  fullName: ManipulationDeltaEventArgs.DeltaManipulation
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDeltaEventArgs.xml
- uid: System.Windows.Input.ManipulationDeltaEventArgs.InvokeEventHandler*
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  isExternal: false
  name: InvokeEventHandler
  nameWithType: ManipulationDeltaEventArgs.InvokeEventHandler
  fullName: ManipulationDeltaEventArgs.InvokeEventHandler
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDeltaEventArgs.xml
- uid: System.Windows.Input.ManipulationDeltaEventArgs.IsInertial*
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  isExternal: false
  name: IsInertial
  nameWithType: ManipulationDeltaEventArgs.IsInertial
  fullName: ManipulationDeltaEventArgs.IsInertial
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDeltaEventArgs.xml
- uid: System.Windows.Input.ManipulationDeltaEventArgs.ManipulationContainer*
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  isExternal: false
  name: ManipulationContainer
  nameWithType: ManipulationDeltaEventArgs.ManipulationContainer
  fullName: ManipulationDeltaEventArgs.ManipulationContainer
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDeltaEventArgs.xml
- uid: System.Windows.Input.ManipulationDeltaEventArgs.ManipulationOrigin*
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  isExternal: false
  name: ManipulationOrigin
  nameWithType: ManipulationDeltaEventArgs.ManipulationOrigin
  fullName: ManipulationDeltaEventArgs.ManipulationOrigin
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDeltaEventArgs.xml
- uid: System.Windows.Input.ManipulationDeltaEventArgs.Manipulators*
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  isExternal: false
  name: Manipulators
  nameWithType: ManipulationDeltaEventArgs.Manipulators
  fullName: ManipulationDeltaEventArgs.Manipulators
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDeltaEventArgs.xml
- uid: System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback*
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  isExternal: false
  name: ReportBoundaryFeedback
  nameWithType: ManipulationDeltaEventArgs.ReportBoundaryFeedback
  fullName: ManipulationDeltaEventArgs.ReportBoundaryFeedback
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDeltaEventArgs.xml
- uid: System.Windows.Input.ManipulationDeltaEventArgs.StartInertia*
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  isExternal: false
  name: StartInertia
  nameWithType: ManipulationDeltaEventArgs.StartInertia
  fullName: ManipulationDeltaEventArgs.StartInertia
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDeltaEventArgs.xml
- uid: System.Windows.Input.ManipulationDeltaEventArgs.Velocities*
  parent: System.Windows.Input.ManipulationDeltaEventArgs
  isExternal: false
  name: Velocities
  nameWithType: ManipulationDeltaEventArgs.Velocities
  fullName: ManipulationDeltaEventArgs.Velocities
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ManipulationDeltaEventArgs.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: false
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: EventArgs.Empty
- uid: System.Windows.RoutedEventArgs.Handled
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: Handled
  nameWithType: RoutedEventArgs.Handled
  fullName: RoutedEventArgs.Handled
- uid: System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: OnSetSource(Object)
  nameWithType: RoutedEventArgs.OnSetSource(Object)
  fullName: RoutedEventArgs.OnSetSource(Object)
- uid: System.Windows.RoutedEventArgs.OriginalSource
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: OriginalSource
  nameWithType: RoutedEventArgs.OriginalSource
  fullName: RoutedEventArgs.OriginalSource
- uid: System.Windows.RoutedEventArgs.RoutedEvent
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEventArgs.RoutedEvent
  fullName: RoutedEventArgs.RoutedEvent
- uid: System.Windows.RoutedEventArgs.Source
  parent: System.Windows.RoutedEventArgs
  isExternal: false
  name: Source
  nameWithType: RoutedEventArgs.Source
  fullName: RoutedEventArgs.Source
- uid: System.Windows.Input.InputEventArgs.Device
  parent: System.Windows.Input.InputEventArgs
  isExternal: false
  name: Device
  nameWithType: InputEventArgs.Device
  fullName: InputEventArgs.Device
- uid: System.Windows.Input.InputEventArgs.Timestamp
  parent: System.Windows.Input.InputEventArgs
  isExternal: false
  name: Timestamp
  nameWithType: InputEventArgs.Timestamp
  fullName: InputEventArgs.Timestamp
