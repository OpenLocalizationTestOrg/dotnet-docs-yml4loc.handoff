{"nodes":[{"content":"Converts task-returning asynchronous methods into methods that use the asynchronous programming model used in previous versions of ASP.NET and that is based on begin and end events.","nodes":[{"pos":[0,181],"content":"Converts task-returning asynchronous methods into methods that use the asynchronous programming model used in previous versions of ASP.NET and that is based on begin and end events.","nodes":[{"content":"Converts task-returning asynchronous methods into methods that use the asynchronous programming model used in previous versions of ASP.NET and that is based on begin and end events.","pos":[0,181]}]}],"pos":[609,791],"yaml":true},{"content":"To handle asynchronous tasks in ASP.NET 4.5, you implement the logic to return a task as a <xref:System.Web.TaskEventHandler> delegate. This model of asynchronous task-based programming supersedes the model used in previous versions of ASP.NET, which bases all event handling on begin and end events. After you implement a <xref:System.Web.TaskEventHandler> delegate, you can then pass it to the <xref:System.Web.EventHandlerTaskAsyncHelper.%23ctor%2A> constructor, which wraps the task-returning logic and converts the handler to the model that uses begin and end events. The <xref:System.Web.EventHandlerTaskAsyncHelper> class enables your <xref:System.Web.TaskEventHandler> object to be compatible with the ASP.NET page framework. When you call the <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A> method to process the task for an asynchronous page, you can use the <xref:System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler%2A> and <xref:System.Web.EventHandlerTaskAsyncHelper.EndEventHandler%2A> properties to pass the converted begin and event handlers to the method.","nodes":[{"pos":[0,1086],"content":"To handle asynchronous tasks in ASP.NET 4.5, you implement the logic to return a task as a <xref:System.Web.TaskEventHandler> delegate. This model of asynchronous task-based programming supersedes the model used in previous versions of ASP.NET, which bases all event handling on begin and end events. After you implement a <xref:System.Web.TaskEventHandler> delegate, you can then pass it to the <xref:System.Web.EventHandlerTaskAsyncHelper.%23ctor%2A> constructor, which wraps the task-returning logic and converts the handler to the model that uses begin and end events. The <xref:System.Web.EventHandlerTaskAsyncHelper> class enables your <xref:System.Web.TaskEventHandler> object to be compatible with the ASP.NET page framework. When you call the <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A> method to process the task for an asynchronous page, you can use the <xref:System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler%2A> and <xref:System.Web.EventHandlerTaskAsyncHelper.EndEventHandler%2A> properties to pass the converted begin and event handlers to the method.","nodes":[{"content":"To handle asynchronous tasks in ASP.NET 4.5, you implement the logic to return a task as a <xref:System.Web.TaskEventHandler> delegate. This model of asynchronous task-based programming supersedes the model used in previous versions of ASP.NET, which bases all event handling on begin and end events. After you implement a <xref:System.Web.TaskEventHandler> delegate, you can then pass it to the <xref:System.Web.EventHandlerTaskAsyncHelper.%23ctor%2A> constructor, which wraps the task-returning logic and converts the handler to the model that uses begin and end events. The <xref:System.Web.EventHandlerTaskAsyncHelper> class enables your <xref:System.Web.TaskEventHandler> object to be compatible with the ASP.NET page framework. When you call the <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A> method to process the task for an asynchronous page, you can use the <xref:System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler%2A> and <xref:System.Web.EventHandlerTaskAsyncHelper.EndEventHandler%2A> properties to pass the converted begin and event handlers to the method.","pos":[0,1086],"nodes":[{"content":"To handle asynchronous tasks in ASP.NET 4.5, you implement the logic to return a task as a <ph id=\"ph1\">&lt;xref:System.Web.TaskEventHandler&gt;</ph> delegate.","pos":[0,135],"source":"To handle asynchronous tasks in ASP.NET 4.5, you implement the logic to return a task as a <xref:System.Web.TaskEventHandler> delegate."},{"content":"This model of asynchronous task-based programming supersedes the model used in previous versions of ASP.NET, which bases all event handling on begin and end events.","pos":[136,300]},{"content":"After you implement a <ph id=\"ph1\">&lt;xref:System.Web.TaskEventHandler&gt;</ph> delegate, you can then pass it to the <ph id=\"ph2\">&lt;xref:System.Web.EventHandlerTaskAsyncHelper.%23ctor%2A&gt;</ph> constructor, which wraps the task-returning logic and converts the handler to the model that uses begin and end events.","pos":[301,572],"source":" After you implement a <xref:System.Web.TaskEventHandler> delegate, you can then pass it to the <xref:System.Web.EventHandlerTaskAsyncHelper.%23ctor%2A> constructor, which wraps the task-returning logic and converts the handler to the model that uses begin and end events."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.EventHandlerTaskAsyncHelper&gt;</ph> class enables your <ph id=\"ph2\">&lt;xref:System.Web.TaskEventHandler&gt;</ph> object to be compatible with the ASP.NET page framework.","pos":[573,733],"source":" The <xref:System.Web.EventHandlerTaskAsyncHelper> class enables your <xref:System.Web.TaskEventHandler> object to be compatible with the ASP.NET page framework."},{"content":"When you call the <ph id=\"ph1\">&lt;xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A&gt;</ph> method to process the task for an asynchronous page, you can use the <ph id=\"ph2\">&lt;xref:System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Web.EventHandlerTaskAsyncHelper.EndEventHandler%2A&gt;</ph> properties to pass the converted begin and event handlers to the method.","pos":[734,1086],"source":" When you call the <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A> method to process the task for an asynchronous page, you can use the <xref:System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler%2A> and <xref:System.Web.EventHandlerTaskAsyncHelper.EndEventHandler%2A> properties to pass the converted begin and event handlers to the method."}]}]}],"pos":[802,1889],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.EventHandlerTaskAsyncHelper\"></xref> class.","nodes":[{"pos":[0,100],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.EventHandlerTaskAsyncHelper\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.EventHandlerTaskAsyncHelper\"></xref> class."}],"pos":[3440,3541],"yaml":true},{"content":"The asynchronous task.","nodes":[{"pos":[0,22],"content":"The asynchronous task.","nodes":[{"content":"The asynchronous task.","pos":[0,22]}]}],"pos":[3731,3754],"yaml":true},{"content":"Represents the <xref href=\"System.Web.BeginEventHandler\"></xref> method for an asynchronous task.","nodes":[{"pos":[0,97],"content":"Represents the <ph id=\"ph1\">&lt;xref href=\"System.Web.BeginEventHandler\"&gt;&lt;/xref&gt;</ph> method for an asynchronous task.","source":"Represents the <xref href=\"System.Web.BeginEventHandler\"></xref> method for an asynchronous task."}],"pos":[4825,4923],"yaml":true},{"content":"The method that handles the begin event for the asynchronous task.","nodes":[{"pos":[0,66],"content":"The method that handles the begin event for the asynchronous task.","nodes":[{"content":"The method that handles the begin event for the asynchronous task.","pos":[0,66]}]}],"pos":[5081,5148],"yaml":true},{"content":"Represents the <xref href=\"System.Web.EndEventHandler\"></xref> method for an asynchronous task.","nodes":[{"pos":[0,95],"content":"Represents the <ph id=\"ph1\">&lt;xref href=\"System.Web.EndEventHandler\"&gt;&lt;/xref&gt;</ph> method for an asynchronous task.","source":"Represents the <xref href=\"System.Web.EndEventHandler\"></xref> method for an asynchronous task."}],"pos":[6219,6315],"yaml":true},{"content":"The method that handles the end event for the asynchronous task.","nodes":[{"pos":[0,64],"content":"The method that handles the end event for the asynchronous task.","nodes":[{"content":"The method that handles the end event for the asynchronous task.","pos":[0,64]}]}],"pos":[6467,6532],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.EventHandlerTaskAsyncHelper\n  commentId: T:System.Web.EventHandlerTaskAsyncHelper\n  id: EventHandlerTaskAsyncHelper\n  children:\n  - System.Web.EventHandlerTaskAsyncHelper.#ctor(System.Web.TaskEventHandler)\n  - System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler\n  - System.Web.EventHandlerTaskAsyncHelper.EndEventHandler\n  langs:\n  - csharp\n  name: EventHandlerTaskAsyncHelper\n  nameWithType: EventHandlerTaskAsyncHelper\n  fullName: System.Web.EventHandlerTaskAsyncHelper\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Converts task-returning asynchronous methods into methods that use the asynchronous programming model used in previous versions of ASP.NET and that is based on begin and end events.\n  remarks: To handle asynchronous tasks in ASP.NET 4.5, you implement the logic to return a task as a <xref:System.Web.TaskEventHandler> delegate. This model of asynchronous task-based programming supersedes the model used in previous versions of ASP.NET, which bases all event handling on begin and end events. After you implement a <xref:System.Web.TaskEventHandler> delegate, you can then pass it to the <xref:System.Web.EventHandlerTaskAsyncHelper.%23ctor%2A> constructor, which wraps the task-returning logic and converts the handler to the model that uses begin and end events. The <xref:System.Web.EventHandlerTaskAsyncHelper> class enables your <xref:System.Web.TaskEventHandler> object to be compatible with the ASP.NET page framework. When you call the <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A> method to process the task for an asynchronous page, you can use the <xref:System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler%2A> and <xref:System.Web.EventHandlerTaskAsyncHelper.EndEventHandler%2A> properties to pass the converted begin and event handlers to the method.\n  syntax:\n    content: public sealed class EventHandlerTaskAsyncHelper\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/EventHandlerTaskAsyncHelper.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.EventHandlerTaskAsyncHelper.#ctor(System.Web.TaskEventHandler)\n  commentId: M:System.Web.EventHandlerTaskAsyncHelper.#ctor(System.Web.TaskEventHandler)\n  id: '#ctor(System.Web.TaskEventHandler)'\n  parent: System.Web.EventHandlerTaskAsyncHelper\n  langs:\n  - csharp\n  name: EventHandlerTaskAsyncHelper(TaskEventHandler)\n  nameWithType: EventHandlerTaskAsyncHelper.EventHandlerTaskAsyncHelper(TaskEventHandler)\n  fullName: EventHandlerTaskAsyncHelper.EventHandlerTaskAsyncHelper(TaskEventHandler)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Initializes a new instance of the <xref href=\"System.Web.EventHandlerTaskAsyncHelper\"></xref> class.\n  syntax:\n    content: public EventHandlerTaskAsyncHelper (System.Web.TaskEventHandler handler);\n    parameters:\n    - id: handler\n      type: System.Web.TaskEventHandler\n      description: The asynchronous task.\n  overload: System.Web.EventHandlerTaskAsyncHelper.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/EventHandlerTaskAsyncHelper.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler\n  commentId: P:System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler\n  id: BeginEventHandler\n  parent: System.Web.EventHandlerTaskAsyncHelper\n  langs:\n  - csharp\n  name: BeginEventHandler\n  nameWithType: EventHandlerTaskAsyncHelper.BeginEventHandler\n  fullName: EventHandlerTaskAsyncHelper.BeginEventHandler\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Represents the <xref href=\"System.Web.BeginEventHandler\"></xref> method for an asynchronous task.\n  syntax:\n    content: public System.Web.BeginEventHandler BeginEventHandler { get; }\n    return:\n      type: System.Web.BeginEventHandler\n      description: The method that handles the begin event for the asynchronous task.\n  overload: System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/EventHandlerTaskAsyncHelper.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.EventHandlerTaskAsyncHelper.EndEventHandler\n  commentId: P:System.Web.EventHandlerTaskAsyncHelper.EndEventHandler\n  id: EndEventHandler\n  parent: System.Web.EventHandlerTaskAsyncHelper\n  langs:\n  - csharp\n  name: EndEventHandler\n  nameWithType: EventHandlerTaskAsyncHelper.EndEventHandler\n  fullName: EventHandlerTaskAsyncHelper.EndEventHandler\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web\n  summary: Represents the <xref href=\"System.Web.EndEventHandler\"></xref> method for an asynchronous task.\n  syntax:\n    content: public System.Web.EndEventHandler EndEventHandler { get; }\n    return:\n      type: System.Web.EndEventHandler\n      description: The method that handles the end event for the asynchronous task.\n  overload: System.Web.EventHandlerTaskAsyncHelper.EndEventHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/EventHandlerTaskAsyncHelper.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.EventHandlerTaskAsyncHelper.#ctor(System.Web.TaskEventHandler)\n  parent: System.Web.EventHandlerTaskAsyncHelper\n  isExternal: false\n  name: EventHandlerTaskAsyncHelper(TaskEventHandler)\n  nameWithType: EventHandlerTaskAsyncHelper.EventHandlerTaskAsyncHelper(TaskEventHandler)\n  fullName: EventHandlerTaskAsyncHelper.EventHandlerTaskAsyncHelper(TaskEventHandler)\n- uid: System.Web.TaskEventHandler\n  parent: System.Web\n  isExternal: false\n  name: TaskEventHandler\n  nameWithType: TaskEventHandler\n  fullName: System.Web.TaskEventHandler\n- uid: System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler\n  parent: System.Web.EventHandlerTaskAsyncHelper\n  isExternal: false\n  name: BeginEventHandler\n  nameWithType: EventHandlerTaskAsyncHelper.BeginEventHandler\n  fullName: EventHandlerTaskAsyncHelper.BeginEventHandler\n- uid: System.Web.BeginEventHandler\n  parent: System.Web\n  isExternal: false\n  name: BeginEventHandler\n  nameWithType: BeginEventHandler\n  fullName: System.Web.BeginEventHandler\n- uid: System.Web.EventHandlerTaskAsyncHelper.EndEventHandler\n  parent: System.Web.EventHandlerTaskAsyncHelper\n  isExternal: false\n  name: EndEventHandler\n  nameWithType: EventHandlerTaskAsyncHelper.EndEventHandler\n  fullName: EventHandlerTaskAsyncHelper.EndEventHandler\n- uid: System.Web.EndEventHandler\n  parent: System.Web\n  isExternal: false\n  name: EndEventHandler\n  nameWithType: EndEventHandler\n  fullName: System.Web.EndEventHandler\n- uid: System.Web.EventHandlerTaskAsyncHelper.#ctor*\n  parent: System.Web.EventHandlerTaskAsyncHelper\n  isExternal: false\n  name: EventHandlerTaskAsyncHelper\n  nameWithType: EventHandlerTaskAsyncHelper.EventHandlerTaskAsyncHelper\n  fullName: EventHandlerTaskAsyncHelper.EventHandlerTaskAsyncHelper\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/EventHandlerTaskAsyncHelper.xml\n- uid: System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler*\n  parent: System.Web.EventHandlerTaskAsyncHelper\n  isExternal: false\n  name: BeginEventHandler\n  nameWithType: EventHandlerTaskAsyncHelper.BeginEventHandler\n  fullName: EventHandlerTaskAsyncHelper.BeginEventHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/EventHandlerTaskAsyncHelper.xml\n- uid: System.Web.EventHandlerTaskAsyncHelper.EndEventHandler*\n  parent: System.Web.EventHandlerTaskAsyncHelper\n  isExternal: false\n  name: EndEventHandler\n  nameWithType: EventHandlerTaskAsyncHelper.EndEventHandler\n  fullName: EventHandlerTaskAsyncHelper.EndEventHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web/EventHandlerTaskAsyncHelper.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}