### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlNodeList
  commentId: T:System.Xml.XmlNodeList
  id: XmlNodeList
  children:
  - System.Xml.XmlNodeList.#ctor
  - System.Xml.XmlNodeList.Count
  - System.Xml.XmlNodeList.GetEnumerator
  - System.Xml.XmlNodeList.Item(System.Int32)
  - System.Xml.XmlNodeList.ItemOf(System.Int32)
  - System.Xml.XmlNodeList.PrivateDisposeNodeList
  - System.Xml.XmlNodeList.System#IDisposable#Dispose
  langs:
  - csharp
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
  type: Class
  assemblies:
  - System.Xml.XmlDocument
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Represents an ordered collection of nodes.
  remarks: "Changes to the children of the node object that the <xref:System.Xml.XmlNodeList> collection was created from are immediately reflected in the nodes returned by the `XmlNodeList` properties and methods. `XmlNodeList` supports iteration and indexed access.  \n  \n `XmlNodeList` is returned by the following properties and methods.  \n  \n-   <xref:System.Xml.XmlNode.ChildNodes%2A?displayProperty=fullName> - Returns an `XmlNodeList` containing all the children of the node.  \n  \n-   <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName> - Returns an `XmlNodeList` containing a collection of nodes matching the XPath query.  \n  \n-   `GetElementsByTagName` - Returns an `XmlNodeList` containing a list of all descendant elements that match the specified name. This method is available in both the <xref:System.Xml.XmlDocument> and <xref:System.Xml.XmlElement> classes."
  syntax:
    content: 'public abstract class XmlNodeList : IDisposable, System.Collections.IEnumerable'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeList.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlNodeList.#ctor
  commentId: M:System.Xml.XmlNodeList.#ctor
  id: '#ctor'
  parent: System.Xml.XmlNodeList
  langs:
  - csharp
  name: XmlNodeList()
  nameWithType: XmlNodeList.XmlNodeList()
  fullName: XmlNodeList.XmlNodeList()
  type: Constructor
  assemblies:
  - System.Xml.XmlDocument
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Initializes a new instance of the <xref href="System.Xml.XmlNodeList"></xref> class.
  syntax:
    content: protected XmlNodeList ();
    parameters: []
  overload: System.Xml.XmlNodeList.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeList.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlNodeList.Count
  commentId: P:System.Xml.XmlNodeList.Count
  id: Count
  parent: System.Xml.XmlNodeList
  langs:
  - csharp
  name: Count
  nameWithType: XmlNodeList.Count
  fullName: XmlNodeList.Count
  type: Property
  assemblies:
  - System.Xml.XmlDocument
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets the number of nodes in the `XmlNodeList`.
  remarks: ''
  example:
  - "The following example creates a <xref:System.Xml.XmlDocument> object and uses the <xref:System.Xml.XmlDocument.GetElementsByTagName%2A> method and the resulting `XmlNodeList` to display all the book titles.  \n  \n [!code-cpp[Classic WebData XmlElement.GetElementsByTagName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlElement.GetElementsByTagName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlElement.GetElementsByTagName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/VB/source.vb#1)]  \n  \n The example uses the file `2books.xml` as input.  \n  \n [!code-xml[Classic WebData XmlElement.GetElementsByTagName Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/XML/source.xml#2)]"
  syntax:
    content: public abstract int Count { get; }
    return:
      type: System.Int32
      description: The number of nodes in the `XmlNodeList`.
  overload: System.Xml.XmlNodeList.Count*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeList.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlNodeList.GetEnumerator
  commentId: M:System.Xml.XmlNodeList.GetEnumerator
  id: GetEnumerator
  parent: System.Xml.XmlNodeList
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: XmlNodeList.GetEnumerator()
  fullName: XmlNodeList.GetEnumerator()
  type: Method
  assemblies:
  - System.Xml.XmlDocument
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets an enumerator that iterates through the collection of nodes.
  remarks: Provides a simple "foreach" style iteration over the collection of nodes in the `XmlNodeList`.
  example:
  - "The following example displays all the book titles.  \n  \n [!code-cpp[Classic WebData XmlNodeList.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeList.GetEnumerator Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlNodeList.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeList.GetEnumerator Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlNodeList.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeList.GetEnumerator Example/VB/source.vb#1)]  \n  \n The example uses the file `2books.xml` as input.  \n  \n [!code-xml[Classic WebData XmlNodeList.GetEnumerator Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNodeList.GetEnumerator Example/XML/source.xml#2)]"
  syntax:
    content: public abstract System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: An enumerator used to iterate through the collection of nodes.
  overload: System.Xml.XmlNodeList.GetEnumerator*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeList.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlNodeList.Item(System.Int32)
  commentId: M:System.Xml.XmlNodeList.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Xml.XmlNodeList
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: XmlNodeList.Item(Int32)
  fullName: XmlNodeList.Item(Int32)
  type: Method
  assemblies:
  - System.Xml.XmlDocument
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Retrieves a node at the given index.
  remarks: ''
  example:
  - "The following example gets and displays the second node in the `XmlNodeList`.  \n  \n [!code-cpp[Classic WebData XmlNodeList.Item Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeList.Item Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlNodeList.Item Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeList.Item Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlNodeList.Item Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeList.Item Example/VB/source.vb#1)]"
  syntax:
    content: public abstract System.Xml.XmlNode Item (int index);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index into the list of nodes.
    return:
      type: System.Xml.XmlNode
      description: The <xref href="System.Xml.XmlNode"></xref> with the specified index in the collection. If <code>index</code> is greater than or equal to the number of nodes in the list, this returns `null`.
  overload: System.Xml.XmlNodeList.Item*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeList.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlNodeList.ItemOf(System.Int32)
  commentId: P:System.Xml.XmlNodeList.ItemOf(System.Int32)
  id: ItemOf(System.Int32)
  parent: System.Xml.XmlNodeList
  langs:
  - csharp
  name: ItemOf(Int32)
  nameWithType: XmlNodeList.ItemOf(Int32)
  fullName: XmlNodeList.ItemOf(Int32)
  type: Property
  assemblies:
  - System.Xml.XmlDocument
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets a node at the given index.
  remarks: ''
  example:
  - "The following example creates an <xref:System.Xml.XmlDocument> object and uses the <xref:System.Xml.XmlDocument.GetElementsByTagName%2A> method and the resulting `XmlNodeList` to display all the book titles.  \n  \n [!code-cpp[Classic WebData XmlElement.GetElementsByTagName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlElement.GetElementsByTagName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlElement.GetElementsByTagName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/VB/source.vb#1)]  \n  \n The example uses the file `2books.xml` as input.  \n  \n [!code-xml[Classic WebData XmlElement.GetElementsByTagName Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlElement.GetElementsByTagName Example/XML/source.xml#2)]"
  syntax:
    content: public virtual System.Xml.XmlNode this[int i] { get; }
    parameters:
    - id: i
      type: System.Int32
      description: The zero-based index into the list of nodes.
    return:
      type: System.Xml.XmlNode
      description: The <xref href="System.Xml.XmlNode"></xref> with the specified index in the collection. If index is greater than or equal to the number of nodes in the list, this returns `null`.
  overload: System.Xml.XmlNodeList.ItemOf*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeList.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlNodeList.PrivateDisposeNodeList
  commentId: M:System.Xml.XmlNodeList.PrivateDisposeNodeList
  id: PrivateDisposeNodeList
  parent: System.Xml.XmlNodeList
  langs:
  - csharp
  name: PrivateDisposeNodeList()
  nameWithType: XmlNodeList.PrivateDisposeNodeList()
  fullName: XmlNodeList.PrivateDisposeNodeList()
  type: Method
  assemblies:
  - System.Xml.XmlDocument
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Disposes resources in the node list privately.
  syntax:
    content: protected virtual void PrivateDisposeNodeList ();
    parameters: []
  overload: System.Xml.XmlNodeList.PrivateDisposeNodeList*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeList.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlNodeList.System#IDisposable#Dispose
  commentId: M:System.Xml.XmlNodeList.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Xml.XmlNodeList
  langs:
  - csharp
  name: IDisposable.Dispose()
  nameWithType: XmlNodeList.IDisposable.Dispose()
  fullName: XmlNodeList.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.Xml.XmlDocument
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Releases all resources used by the <xref href="System.Xml.XmlNodeList"></xref> class.
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Xml.XmlNodeList.System#IDisposable#Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeList.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.XmlNodeList.#ctor
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: XmlNodeList()
  nameWithType: XmlNodeList.XmlNodeList()
  fullName: XmlNodeList.XmlNodeList()
- uid: System.Xml.XmlNodeList.Count
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: Count
  nameWithType: XmlNodeList.Count
  fullName: XmlNodeList.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.XmlNodeList.GetEnumerator
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: GetEnumerator()
  nameWithType: XmlNodeList.GetEnumerator()
  fullName: XmlNodeList.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Xml.XmlNodeList.Item(System.Int32)
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: Item(Int32)
  nameWithType: XmlNodeList.Item(Int32)
  fullName: XmlNodeList.Item(Int32)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Xml.XmlNodeList.ItemOf(System.Int32)
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: ItemOf(Int32)
  nameWithType: XmlNodeList.ItemOf(Int32)
  fullName: XmlNodeList.ItemOf(Int32)
- uid: System.Xml.XmlNodeList.PrivateDisposeNodeList
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: PrivateDisposeNodeList()
  nameWithType: XmlNodeList.PrivateDisposeNodeList()
  fullName: XmlNodeList.PrivateDisposeNodeList()
- uid: System.Xml.XmlNodeList.System#IDisposable#Dispose
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: IDisposable.Dispose()
  nameWithType: XmlNodeList.IDisposable.Dispose()
  fullName: XmlNodeList.IDisposable.Dispose()
- uid: System.Xml.XmlNodeList.#ctor*
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList.XmlNodeList
  fullName: XmlNodeList.XmlNodeList
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeList.xml
- uid: System.Xml.XmlNodeList.Count*
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: Count
  nameWithType: XmlNodeList.Count
  fullName: XmlNodeList.Count
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeList.xml
- uid: System.Xml.XmlNodeList.GetEnumerator*
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: GetEnumerator
  nameWithType: XmlNodeList.GetEnumerator
  fullName: XmlNodeList.GetEnumerator
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeList.xml
- uid: System.Xml.XmlNodeList.Item*
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: Item
  nameWithType: XmlNodeList.Item
  fullName: XmlNodeList.Item
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeList.xml
- uid: System.Xml.XmlNodeList.ItemOf*
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: ItemOf
  nameWithType: XmlNodeList.ItemOf
  fullName: XmlNodeList.ItemOf
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeList.xml
- uid: System.Xml.XmlNodeList.PrivateDisposeNodeList*
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: PrivateDisposeNodeList
  nameWithType: XmlNodeList.PrivateDisposeNodeList
  fullName: XmlNodeList.PrivateDisposeNodeList
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeList.xml
- uid: System.Xml.XmlNodeList.System#IDisposable#Dispose*
  parent: System.Xml.XmlNodeList
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: XmlNodeList.System.IDisposable.Dispose
  fullName: XmlNodeList.System.IDisposable.Dispose
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNodeList.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Cast<TResult>(IEnumerable)
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  fullName: Enumerable.Cast<TResult>(IEnumerable)
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: OfType<TResult>(IEnumerable)
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  fullName: Enumerable.OfType<TResult>(IEnumerable)
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsParallel(IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
  fullName: ParallelEnumerable.AsParallel(IEnumerable)
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  parent: System.Linq.Queryable
  isExternal: false
  name: AsQueryable(IEnumerable)
  nameWithType: Queryable.AsQueryable(IEnumerable)
  fullName: Queryable.AsQueryable(IEnumerable)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
