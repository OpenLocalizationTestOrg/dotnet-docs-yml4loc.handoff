{"nodes":[{"content":"Provides the means to create and manage duplex channels of different types that are used by clients to send and receive messages to and from service endpoints.","nodes":[{"pos":[0,159],"content":"Provides the means to create and manage duplex channels of different types that are used by clients to send and receive messages to and from service endpoints.","nodes":[{"content":"Provides the means to create and manage duplex channels of different types that are used by clients to send and receive messages to and from service endpoints.","pos":[0,159]}]}],"pos":[4187,4347],"yaml":true},{"content":"A duplex channel allows clients and servers to communicate with each other independently so that either can initiate calls to the other. A duplex service can send messages to the client endpoint, providing event-like behavior. Duplex communication occurs when a client establishes a session with a service and provides the service with a channel on which the service can send messages back to the client. The various <xref:System.ServiceModel.DuplexChannelFactory%601.CreateChannel%2A> methods are used to create these duplex channels. The duplex message pattern is one of three message patterns available to [!INCLUDE[indigo1](~/includes/indigo1-md.md)] services. The other two message patterns are one-way and request-reply.  \n  \n For a general discussion of duplex services that allow clients to connect back to the service, see [Duplex Services](~/docs/framework/wcf/feature-details/duplex-services.md). For an outline and discussion of the steps involved in writing a [!INCLUDE[indigo1](~/includes/indigo1-md.md)] client application using a channel factory, see [How to: Use the ChannelFactory](~/docs/framework/wcf/feature-details/how-to-use-the-channelfactory.md). For a procedure describing how to create a [!INCLUDE[indigo1](~/includes/indigo1-md.md)] client in a client class that implements the callback interface to access a service that uses a duplex messaging pattern, see [How to: Access Services with a Duplex Contract](~/docs/framework/wcf/feature-details/how-to-access-services-with-a-duplex-contract.md).","nodes":[{"pos":[0,726],"content":"A duplex channel allows clients and servers to communicate with each other independently so that either can initiate calls to the other. A duplex service can send messages to the client endpoint, providing event-like behavior. Duplex communication occurs when a client establishes a session with a service and provides the service with a channel on which the service can send messages back to the client. The various <xref:System.ServiceModel.DuplexChannelFactory%601.CreateChannel%2A> methods are used to create these duplex channels. The duplex message pattern is one of three message patterns available to [!INCLUDE[indigo1](~/includes/indigo1-md.md)] services. The other two message patterns are one-way and request-reply.","nodes":[{"content":"A duplex channel allows clients and servers to communicate with each other independently so that either can initiate calls to the other.","pos":[0,136]},{"content":"A duplex service can send messages to the client endpoint, providing event-like behavior.","pos":[137,226]},{"content":"Duplex communication occurs when a client establishes a session with a service and provides the service with a channel on which the service can send messages back to the client.","pos":[227,404]},{"content":"The various <ph id=\"ph1\">&lt;xref:System.ServiceModel.DuplexChannelFactory%601.CreateChannel%2A&gt;</ph> methods are used to create these duplex channels.","pos":[405,535],"source":" The various <xref:System.ServiceModel.DuplexChannelFactory%601.CreateChannel%2A> methods are used to create these duplex channels."},{"content":"The duplex message pattern is one of three message patterns available to <ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> services.","pos":[536,664],"source":" The duplex message pattern is one of three message patterns available to [!INCLUDE[indigo1](~/includes/indigo1-md.md)] services."},{"content":"The other two message patterns are one-way and request-reply.","pos":[665,726]}]},{"pos":[733,1523],"content":"For a general discussion of duplex services that allow clients to connect back to the service, see [Duplex Services](~/docs/framework/wcf/feature-details/duplex-services.md). For an outline and discussion of the steps involved in writing a [!INCLUDE[indigo1](~/includes/indigo1-md.md)] client application using a channel factory, see [How to: Use the ChannelFactory](~/docs/framework/wcf/feature-details/how-to-use-the-channelfactory.md). For a procedure describing how to create a [!INCLUDE[indigo1](~/includes/indigo1-md.md)] client in a client class that implements the callback interface to access a service that uses a duplex messaging pattern, see [How to: Access Services with a Duplex Contract](~/docs/framework/wcf/feature-details/how-to-access-services-with-a-duplex-contract.md).","nodes":[{"content":"For a general discussion of duplex services that allow clients to connect back to the service, see <bpt id=\"p1\">[</bpt>Duplex Services<ept id=\"p1\">](~/docs/framework/wcf/feature-details/duplex-services.md)</ept>.","pos":[0,174],"source":"For a general discussion of duplex services that allow clients to connect back to the service, see [Duplex Services](~/docs/framework/wcf/feature-details/duplex-services.md)."},{"content":"For an outline and discussion of the steps involved in writing a <ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> client application using a channel factory, see <bpt id=\"p1\">[</bpt>How to: Use the ChannelFactory<ept id=\"p1\">](~/docs/framework/wcf/feature-details/how-to-use-the-channelfactory.md)</ept>.","pos":[175,438],"source":" For an outline and discussion of the steps involved in writing a [!INCLUDE[indigo1](~/includes/indigo1-md.md)] client application using a channel factory, see [How to: Use the ChannelFactory](~/docs/framework/wcf/feature-details/how-to-use-the-channelfactory.md)."},{"content":"For a procedure describing how to create a <ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> client in a client class that implements the callback interface to access a service that uses a duplex messaging pattern, see <bpt id=\"p1\">[</bpt>How to: Access Services with a Duplex Contract<ept id=\"p1\">](~/docs/framework/wcf/feature-details/how-to-access-services-with-a-duplex-contract.md)</ept>.","pos":[439,790],"source":" For a procedure describing how to create a [!INCLUDE[indigo1](~/includes/indigo1-md.md)] client in a client class that implements the callback interface to access a service that uses a duplex messaging pattern, see [How to: Access Services with a Duplex Contract](~/docs/framework/wcf/feature-details/how-to-access-services-with-a-duplex-contract.md)."}]}],"pos":[4358,5886],"yaml":true,"extradata":"MT"},{"content":"The type of channel produced by the channel factory.","nodes":[{"pos":[0,52],"content":"The type of channel produced by the channel factory.","nodes":[{"content":"The type of channel produced by the channel factory.","pos":[0,52]}]}],"pos":[6310,6363],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract.","nodes":[{"pos":[0,157],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.DuplexChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with an object that implements the callback contract.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract."}],"pos":[13428,13586],"yaml":true},{"content":"Use this constructor to pass an object that implements the callback contract for the target service programmatically rather than by using an application configuration file.","nodes":[{"pos":[0,172],"content":"Use this constructor to pass an object that implements the callback contract for the target service programmatically rather than by using an application configuration file.","nodes":[{"content":"Use this constructor to pass an object that implements the callback contract for the target service programmatically rather than by using an application configuration file.","pos":[0,172]}]}],"pos":[13597,13770],"yaml":true,"extradata":"MT"},{"content":"<code>callbackInstance</code> is `null`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>callbackInstance</code> is `null`."}],"pos":[14115,14156],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with the specified type of callback instance, configuration, and remote address.","nodes":[{"pos":[0,184],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.DuplexChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with the specified type of callback instance, configuration, and remote address.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with the specified type of callback instance, configuration, and remote address."}],"pos":[15600,15785],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> that provides the callback instance that the client uses to listen for messages from the connected service.","nodes":[{"pos":[0,144],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that provides the callback instance that the client uses to listen for messages from the connected service.","source":"The <xref href=\"System.Type\"></xref> that provides the callback instance that the client uses to listen for messages from the connected service."}],"pos":[16040,16185],"yaml":true},{"content":"The name used for the endpoint configuration.","nodes":[{"pos":[0,45],"content":"The name used for the endpoint configuration.","nodes":[{"content":"The name used for the endpoint configuration.","pos":[0,45]}]}],"pos":[16266,16312],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointAddress\"&gt;&lt;/xref&gt;</ph> that provides the location of the service.","source":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service."}],"pos":[16403,16507],"yaml":true},{"content":"<code>callbackInstanceType</code> or <code>endpointConfigurationName</code> or <code>remoteAddress</code> is `null`.","nodes":[{"pos":[0,116],"content":"<ph id=\"ph1\">&lt;code&gt;callbackInstanceType&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;endpointConfigurationName&lt;/code&gt;</ph> or <ph id=\"ph3\">&lt;code&gt;remoteAddress&lt;/code&gt;</ph> is <ph id=\"ph4\">`null`</ph>.","source":"<code>callbackInstanceType</code> or <code>endpointConfigurationName</code> or <code>remoteAddress</code> is `null`."}],"pos":[16685,16802],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with the specified type of callback instance, binding, and remote address.","nodes":[{"pos":[0,178],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.DuplexChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with the specified type of callback instance, binding, and remote address.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with the specified type of callback instance, binding, and remote address."}],"pos":[18225,18404],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> that provides the callback instance that the client uses to listen for messages from the connected service.","nodes":[{"pos":[0,144],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that provides the callback instance that the client uses to listen for messages from the connected service.","source":"The <xref href=\"System.Type\"></xref> that provides the callback instance that the client uses to listen for messages from the connected service."}],"pos":[18642,18787],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory.","nodes":[{"pos":[0,129],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> used to connect to the service by channels produced by the factory.","source":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory."}],"pos":[18873,19003],"yaml":true},{"content":"The remote address that provides the location of the service.","nodes":[{"pos":[0,61],"content":"The remote address that provides the location of the service.","nodes":[{"content":"The remote address that provides the location of the service.","pos":[0,61]}]}],"pos":[19072,19134],"yaml":true},{"content":"<code>callbackInstanceType</code> or <code>binding</code> or <code>remoteAddress</code> is `null`.","nodes":[{"pos":[0,98],"content":"<ph id=\"ph1\">&lt;code&gt;callbackInstanceType&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;binding&lt;/code&gt;</ph> or <ph id=\"ph3\">&lt;code&gt;remoteAddress&lt;/code&gt;</ph> is <ph id=\"ph4\">`null`</ph>.","source":"<code>callbackInstanceType</code> or <code>binding</code> or <code>remoteAddress</code> is `null`."}],"pos":[19312,19411],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with specified type of callback instance, binding, and remote address.","nodes":[{"pos":[0,174],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.DuplexChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with specified type of callback instance, binding, and remote address.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with specified type of callback instance, binding, and remote address."}],"pos":[20927,21102],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> that provides the callback instance that the client uses to listen for messages from the connected service.","nodes":[{"pos":[0,144],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that provides the callback instance that the client uses to listen for messages from the connected service.","source":"The <xref href=\"System.Type\"></xref> that provides the callback instance that the client uses to listen for messages from the connected service."}],"pos":[21369,21514],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory.","nodes":[{"pos":[0,129],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> used to connect to the service by channels produced by the factory.","source":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory."}],"pos":[21600,21730],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointAddress\"&gt;&lt;/xref&gt;</ph> that provides the location of the service.","source":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service."}],"pos":[21821,21925],"yaml":true},{"content":"<code>callbackInstanceType</code> or <code>binding</code> or <code>remoteAddress</code> is `null`.","nodes":[{"pos":[0,98],"content":"<ph id=\"ph1\">&lt;code&gt;callbackInstanceType&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;binding&lt;/code&gt;</ph> or <ph id=\"ph3\">&lt;code&gt;remoteAddress&lt;/code&gt;</ph> is <ph id=\"ph4\">`null`</ph>.","source":"<code>callbackInstanceType</code> or <code>binding</code> or <code>remoteAddress</code> is `null`."}],"pos":[22103,22202],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract and a specified configuration and endpoint address.","nodes":[{"pos":[0,208],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.DuplexChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with an object that implements the callback contract and a specified configuration and endpoint address.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract and a specified configuration and endpoint address."}],"pos":[23751,23960],"yaml":true},{"content":"Use this constructor to pass an instance context object that implements the callback contract for the target service address information programmatically, pass in the address information programmatically, and determine the remaining target endpoint information from the client application configuration file.","nodes":[{"pos":[0,308],"content":"Use this constructor to pass an instance context object that implements the callback contract for the target service address information programmatically, pass in the address information programmatically, and determine the remaining target endpoint information from the client application configuration file.","nodes":[{"content":"Use this constructor to pass an instance context object that implements the callback contract for the target service address information programmatically, pass in the address information programmatically, and determine the remaining target endpoint information from the client application configuration file.","pos":[0,308]}]}],"pos":[23971,24280],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.","source":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service."}],"pos":[24582,24715],"yaml":true},{"content":"The name used for the endpoint configuration.","nodes":[{"pos":[0,45],"content":"The name used for the endpoint configuration.","nodes":[{"content":"The name used for the endpoint configuration.","pos":[0,45]}]}],"pos":[24796,24842],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointAddress\"&gt;&lt;/xref&gt;</ph> that provides the location of the service.","source":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service."}],"pos":[24933,25037],"yaml":true},{"content":"<code>callbackInstance</code> or <code>endpointConfigurationName</code> or <code>remoteAddress</code> is `null`.","nodes":[{"pos":[0,112],"content":"<ph id=\"ph1\">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;endpointConfigurationName&lt;/code&gt;</ph> or <ph id=\"ph3\">&lt;code&gt;remoteAddress&lt;/code&gt;</ph> is <ph id=\"ph4\">`null`</ph>.","source":"<code>callbackInstance</code> or <code>endpointConfigurationName</code> or <code>remoteAddress</code> is `null`."}],"pos":[25215,25328],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with specified instance context, binding, and remote address.","nodes":[{"pos":[0,165],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.DuplexChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with specified instance context, binding, and remote address.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with specified instance context, binding, and remote address."}],"pos":[26856,27022],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.","source":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service."}],"pos":[27307,27440],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory.","nodes":[{"pos":[0,129],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> used to connect to the service by channels produced by the factory.","source":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory."}],"pos":[27526,27656],"yaml":true},{"content":"The remote address that provides the location of the service.","nodes":[{"pos":[0,61],"content":"The remote address that provides the location of the service.","nodes":[{"content":"The remote address that provides the location of the service.","pos":[0,61]}]}],"pos":[27725,27787],"yaml":true},{"content":"<code>callbackInstance</code> or <code>binding</code> or <code>remoteAddress</code> is `null`.","nodes":[{"pos":[0,94],"content":"<ph id=\"ph1\">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;binding&lt;/code&gt;</ph> or <ph id=\"ph3\">&lt;code&gt;remoteAddress&lt;/code&gt;</ph> is <ph id=\"ph4\">`null`</ph>.","source":"<code>callbackInstance</code> or <code>binding</code> or <code>remoteAddress</code> is `null`."}],"pos":[27965,28060],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract, and a specified configuration and endpoint address.","nodes":[{"pos":[0,209],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.DuplexChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with an object that implements the callback contract, and a specified configuration and endpoint address.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract, and a specified configuration and endpoint address."}],"pos":[29516,29726],"yaml":true},{"content":"Use this constructor to pass a service object that implements the callback contract for the target service, pass in the address information programmatically, and determine the remaining target endpoint information from the client application configuration file.","nodes":[{"pos":[0,261],"content":"Use this constructor to pass a service object that implements the callback contract for the target service, pass in the address information programmatically, and determine the remaining target endpoint information from the client application configuration file.","nodes":[{"content":"Use this constructor to pass a service object that implements the callback contract for the target service, pass in the address information programmatically, and determine the remaining target endpoint information from the client application configuration file.","pos":[0,261]}]}],"pos":[29737,29999],"yaml":true,"extradata":"MT"},{"content":"The name used for the endpoint configuration.","nodes":[{"pos":[0,45],"content":"The name used for the endpoint configuration.","nodes":[{"content":"The name used for the endpoint configuration.","pos":[0,45]}]}],"pos":[30332,30378],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointAddress\"&gt;&lt;/xref&gt;</ph> that provides the location of the service.","source":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service."}],"pos":[30469,30573],"yaml":true},{"content":"<code>callbackObject</code> or <code>endpointConfigurationName</code> or <code>remoteAddress</code> is `null`.","nodes":[{"pos":[0,110],"content":"<ph id=\"ph1\">&lt;code&gt;callbackObject&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;endpointConfigurationName&lt;/code&gt;</ph> or <ph id=\"ph3\">&lt;code&gt;remoteAddress&lt;/code&gt;</ph> is <ph id=\"ph4\">`null`</ph>.","source":"<code>callbackObject</code> or <code>endpointConfigurationName</code> or <code>remoteAddress</code> is `null`."}],"pos":[30751,30862],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with specified callback object, binding, and remote address.","nodes":[{"pos":[0,164],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.DuplexChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with specified callback object, binding, and remote address.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with specified callback object, binding, and remote address."}],"pos":[32297,32462],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory.","nodes":[{"pos":[0,129],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> used to connect to the service by channels produced by the factory.","source":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory."}],"pos":[32783,32913],"yaml":true},{"content":"The remote address that provides the location of the service.","nodes":[{"pos":[0,61],"content":"The remote address that provides the location of the service.","nodes":[{"content":"The remote address that provides the location of the service.","pos":[0,61]}]}],"pos":[32982,33044],"yaml":true},{"content":"<code>callbackObject</code> or <code>binding</code> or <code>remoteAddress</code> is `null`.","nodes":[{"pos":[0,92],"content":"<ph id=\"ph1\">&lt;code&gt;callbackObject&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;binding&lt;/code&gt;</ph> or <ph id=\"ph3\">&lt;code&gt;remoteAddress&lt;/code&gt;</ph> is <ph id=\"ph4\">`null`</ph>.","source":"<code>callbackObject</code> or <code>binding</code> or <code>remoteAddress</code> is `null`."}],"pos":[33222,33315],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract and a specified binding and endpoint address.","nodes":[{"pos":[0,202],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.DuplexChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with an object that implements the callback contract and a specified binding and endpoint address.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract and a specified binding and endpoint address."}],"pos":[34843,35046],"yaml":true},{"content":"Use this constructor to pass a service object that implements the callback contract for the target service and pass in the binding and address information programmatically rather than using an application configuration file.","nodes":[{"pos":[0,224],"content":"Use this constructor to pass a service object that implements the callback contract for the target service and pass in the binding and address information programmatically rather than using an application configuration file.","nodes":[{"content":"Use this constructor to pass a service object that implements the callback contract for the target service and pass in the binding and address information programmatically rather than using an application configuration file.","pos":[0,224]}]}],"pos":[35057,35282],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory.","nodes":[{"pos":[0,129],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> used to connect to the service by channels produced by the factory.","source":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory."}],"pos":[35632,35762],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointAddress\"&gt;&lt;/xref&gt;</ph> that provides the location of the service.","source":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service."}],"pos":[35853,35957],"yaml":true},{"content":"<code>callbackObject</code> or <code>binding</code> or <code>remoteAddress</code> is `null`.","nodes":[{"pos":[0,92],"content":"<ph id=\"ph1\">&lt;code&gt;callbackObject&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;binding&lt;/code&gt;</ph> or <ph id=\"ph3\">&lt;code&gt;remoteAddress&lt;/code&gt;</ph> is <ph id=\"ph4\">`null`</ph>.","source":"<code>callbackObject</code> or <code>binding</code> or <code>remoteAddress</code> is `null`."}],"pos":[36135,36228],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with specified type of callback instance and configuration.","nodes":[{"pos":[0,163],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.DuplexChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with specified type of callback instance and configuration.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with specified type of callback instance and configuration."}],"pos":[37513,37677],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> that provides the callback instance that the client uses to listen for messages from the connected service.","nodes":[{"pos":[0,144],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that provides the callback instance that the client uses to listen for messages from the connected service.","source":"The <xref href=\"System.Type\"></xref> that provides the callback instance that the client uses to listen for messages from the connected service."}],"pos":[37881,38026],"yaml":true},{"content":"The name used for the endpoint configuration.","nodes":[{"pos":[0,45],"content":"The name used for the endpoint configuration.","nodes":[{"content":"The name used for the endpoint configuration.","pos":[0,45]}]}],"pos":[38107,38153],"yaml":true},{"content":"<code>callbackInstanceType</code> or <code>endpointConfigurationName</code> is `null`.","nodes":[{"pos":[0,86],"content":"<ph id=\"ph1\">&lt;code&gt;callbackInstanceType&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;endpointConfigurationName&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>callbackInstanceType</code> or <code>endpointConfigurationName</code> is `null`."}],"pos":[38331,38418],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract and a specified binding and endpoint address.","nodes":[{"pos":[0,202],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.DuplexChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with an object that implements the callback contract and a specified binding and endpoint address.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract and a specified binding and endpoint address."}],"pos":[40039,40242],"yaml":true},{"content":"Use this constructor to pass an instance context object that implements the callback contract for the target service and to pass in the binding and address information programmatically rather than using an application configuration file.","nodes":[{"pos":[0,237],"content":"Use this constructor to pass an instance context object that implements the callback contract for the target service and to pass in the binding and address information programmatically rather than using an application configuration file.","nodes":[{"content":"Use this constructor to pass an instance context object that implements the callback contract for the target service and to pass in the binding and address information programmatically rather than using an application configuration file.","pos":[0,237]}]}],"pos":[40253,40491],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.","source":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service."}],"pos":[40805,40938],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory.","nodes":[{"pos":[0,129],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> used to connect to the service by channels produced by the factory.","source":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory."}],"pos":[41024,41154],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointAddress\"&gt;&lt;/xref&gt;</ph> that provides the location of the service.","source":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service."}],"pos":[41245,41349],"yaml":true},{"content":"<code>callbackInstance</code> or <code>binding</code> or <code>remoteAddress</code> is `null`.","nodes":[{"pos":[0,94],"content":"<ph id=\"ph1\">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;binding&lt;/code&gt;</ph> or <ph id=\"ph3\">&lt;code&gt;remoteAddress&lt;/code&gt;</ph> is <ph id=\"ph4\">`null`</ph>.","source":"<code>callbackInstance</code> or <code>binding</code> or <code>remoteAddress</code> is `null`."}],"pos":[41527,41622],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with specified type of callback instance and binding.","nodes":[{"pos":[0,157],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.DuplexChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with specified type of callback instance and binding.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with specified type of callback instance and binding."}],"pos":[42979,43137],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> that provides the callback instance that the client uses to listen for messages from the connected service.","nodes":[{"pos":[0,144],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that provides the callback instance that the client uses to listen for messages from the connected service.","source":"The <xref href=\"System.Type\"></xref> that provides the callback instance that the client uses to listen for messages from the connected service."}],"pos":[43353,43498],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory.","nodes":[{"pos":[0,129],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> used to connect to the service by channels produced by the factory.","source":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory."}],"pos":[43584,43714],"yaml":true},{"content":"<code>callbackInstanceType</code> or <code>binding</code> is `null`.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">&lt;code&gt;callbackInstanceType&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;binding&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>callbackInstanceType</code> or <code>binding</code> is `null`."}],"pos":[43892,43961],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with specified type of callback instance and service endpoint.","nodes":[{"pos":[0,166],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.DuplexChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with specified type of callback instance and service endpoint.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with specified type of callback instance and service endpoint."}],"pos":[45375,45542],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> that provides the callback instance that the client uses to listen for messages from the connected service.","nodes":[{"pos":[0,144],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that provides the callback instance that the client uses to listen for messages from the connected service.","source":"The <xref href=\"System.Type\"></xref> that provides the callback instance that the client uses to listen for messages from the connected service."}],"pos":[45770,45915],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> for the service.","nodes":[{"pos":[0,89],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> for the service.","source":"The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> for the service."}],"pos":[46013,46103],"yaml":true},{"content":"<code>callbackInstanceType</code> is `null`.","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">&lt;code&gt;callbackInstanceType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>callbackInstanceType</code> is `null`."}],"pos":[46281,46326],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with specified type of callback instance.","nodes":[{"pos":[0,145],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.DuplexChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with specified type of callback instance.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with specified type of callback instance."}],"pos":[47545,47691],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> that provides the callback instance that the client uses to listen for messages from the connected service.","nodes":[{"pos":[0,144],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> that provides the callback instance that the client uses to listen for messages from the connected service.","source":"The <xref href=\"System.Type\"></xref> that provides the callback instance that the client uses to listen for messages from the connected service."}],"pos":[47861,48006],"yaml":true},{"content":"<code>callbackInstanceType</code> is `null`.","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">&lt;code&gt;callbackInstanceType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>callbackInstanceType</code> is `null`."}],"pos":[48184,48229],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract and a specified binding.","nodes":[{"pos":[0,181],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.DuplexChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with an object that implements the callback contract and a specified binding.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract and a specified binding."}],"pos":[49598,49780],"yaml":true},{"content":"Use this constructor to pass an instance context object that implements the callback contract for the target service and to pass the binding information programmatically rather than by using an application configuration file.","nodes":[{"pos":[0,225],"content":"Use this constructor to pass an instance context object that implements the callback contract for the target service and to pass the binding information programmatically rather than by using an application configuration file.","nodes":[{"content":"Use this constructor to pass an instance context object that implements the callback contract for the target service and to pass the binding information programmatically rather than by using an application configuration file.","pos":[0,225]}]}],"pos":[49791,50017],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory.","nodes":[{"pos":[0,129],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> used to connect to the service by channels produced by the factory.","source":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory."}],"pos":[50316,50446],"yaml":true},{"content":"<code>callbackObject</code> or <code>binding</code> is `null`.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">&lt;code&gt;callbackObject&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;binding&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>callbackObject</code> or <code>binding</code> is `null`."}],"pos":[50624,50687],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract and a specified endpoint.","nodes":[{"pos":[0,182],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.DuplexChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with an object that implements the callback contract and a specified endpoint.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract and a specified endpoint."}],"pos":[52113,52296],"yaml":true},{"content":"Use this constructor to pass a service object that implements the callback contract for the target service and to pass the service endpoint information programmatically rather than using an application configuration file.","nodes":[{"pos":[0,221],"content":"Use this constructor to pass a service object that implements the callback contract for the target service and to pass the service endpoint information programmatically rather than using an application configuration file.","nodes":[{"content":"Use this constructor to pass a service object that implements the callback contract for the target service and to pass the service endpoint information programmatically rather than using an application configuration file.","pos":[0,221]}]}],"pos":[52307,52529],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> to which channels produced by the factory connect.","nodes":[{"pos":[0,123],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> to which channels produced by the factory connect.","source":"The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> to which channels produced by the factory connect."}],"pos":[52852,52976],"yaml":true},{"content":"<code>callbackObject</code> is `null`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;callbackObject&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>callbackObject</code> is `null`."}],"pos":[53154,53193],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with specified instance context.","nodes":[{"pos":[0,136],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.DuplexChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with specified instance context.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with specified instance context."}],"pos":[54517,54654],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service","source":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service"}],"pos":[54871,55003],"yaml":true},{"content":"<code>callbackInstance</code> is `null`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>callbackInstance</code> is `null`."}],"pos":[55181,55222],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with a context that implements the callback contract and a specified binding.","nodes":[{"pos":[0,181],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.DuplexChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with a context that implements the callback contract and a specified binding.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with a context that implements the callback contract and a specified binding."}],"pos":[56684,56866],"yaml":true},{"content":"Use this constructor to pass an instance context object that implements the callback contract for the target service and to pass the binding information programmatically rather than by using an application configuration file.","nodes":[{"pos":[0,225],"content":"Use this constructor to pass an instance context object that implements the callback contract for the target service and to pass the binding information programmatically rather than by using an application configuration file.","nodes":[{"content":"Use this constructor to pass an instance context object that implements the callback contract for the target service and to pass the binding information programmatically rather than by using an application configuration file.","pos":[0,225]}]}],"pos":[56877,57103],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.","source":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service."}],"pos":[57366,57499],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory.","nodes":[{"pos":[0,129],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> used to connect to the service by channels produced by the factory.","source":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory."}],"pos":[57585,57715],"yaml":true},{"content":"<code>callbackInstance</code> or <code>binding</code> is `null`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;binding&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>callbackInstance</code> or <code>binding</code> is `null`."}],"pos":[57893,57958],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract and a specified endpoint.","nodes":[{"pos":[0,182],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.DuplexChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with an object that implements the callback contract and a specified endpoint.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract and a specified endpoint."}],"pos":[59477,59660],"yaml":true},{"content":"Use this constructor to pass an instance context object that implements the callback contract for the target service and to pass the endpoint information programmatically rather than by using an application configuration file.","nodes":[{"pos":[0,226],"content":"Use this constructor to pass an instance context object that implements the callback contract for the target service and to pass the endpoint information programmatically rather than by using an application configuration file.","nodes":[{"content":"Use this constructor to pass an instance context object that implements the callback contract for the target service and to pass the endpoint information programmatically rather than by using an application configuration file.","pos":[0,226]}]}],"pos":[59671,59898],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.","source":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service."}],"pos":[60173,60306],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> to which channels produced by the factory connect.","nodes":[{"pos":[0,123],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> to which channels produced by the factory connect.","source":"The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> to which channels produced by the factory connect."}],"pos":[60404,60528],"yaml":true},{"content":"<code>callbackInstance</code> is `null`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>callbackInstance</code> is `null`."}],"pos":[60706,60747],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract and a specified configuration.","nodes":[{"pos":[0,187],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.DuplexChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with an object that implements the callback contract and a specified configuration.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract and a specified configuration."}],"pos":[62137,62325],"yaml":true},{"content":"Use this constructor to pass an instance context object that implements the callback contract for the target service and to determine the target endpoint information from the client application configuration file.","nodes":[{"pos":[0,213],"content":"Use this constructor to pass an instance context object that implements the callback contract for the target service and to determine the target endpoint information from the client application configuration file.","nodes":[{"content":"Use this constructor to pass an instance context object that implements the callback contract for the target service and to determine the target endpoint information from the client application configuration file.","pos":[0,213]}]}],"pos":[62336,62550],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.","source":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service."}],"pos":[62801,62934],"yaml":true},{"content":"The name used for the endpoint configuration.","nodes":[{"pos":[0,45],"content":"The name used for the endpoint configuration.","nodes":[{"content":"The name used for the endpoint configuration.","pos":[0,45]}]}],"pos":[63015,63061],"yaml":true},{"content":"<code>callbackInstance</code> or <code>endpointConfigurationName</code> is `null`.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;endpointConfigurationName&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>callbackInstance</code> or <code>endpointConfigurationName</code> is `null`."}],"pos":[63239,63322],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract and a specified configuration.","nodes":[{"pos":[0,187],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.DuplexChannelFactory`1\"&gt;&lt;/xref&gt;</ph> class with an object that implements the callback contract and a specified configuration.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract and a specified configuration."}],"pos":[64619,64807],"yaml":true},{"content":"Use this constructor to pass a service object that implements the callback contract for the target service and determine the target endpoint information from the client application configuration file.","nodes":[{"pos":[0,200],"content":"Use this constructor to pass a service object that implements the callback contract for the target service and determine the target endpoint information from the client application configuration file.","nodes":[{"content":"Use this constructor to pass a service object that implements the callback contract for the target service and determine the target endpoint information from the client application configuration file.","pos":[0,200]}]}],"pos":[64818,65019],"yaml":true,"extradata":"MT"},{"content":"The configuration name used for the endpoint.","nodes":[{"pos":[0,45],"content":"The configuration name used for the endpoint.","nodes":[{"content":"The configuration name used for the endpoint.","pos":[0,45]}]}],"pos":[65301,65347],"yaml":true},{"content":"<code>callbackObject</code> or <code>endpointConfigurationName</code> is `null`.","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">&lt;code&gt;callbackObject&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;endpointConfigurationName&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>callbackObject</code> or <code>endpointConfigurationName</code> is `null`."}],"pos":[65525,65606],"yaml":true},{"content":"Creates a duplex channel between a service and a callback instance on the client.","nodes":[{"pos":[0,81],"content":"Creates a duplex channel between a service and a callback instance on the client.","nodes":[{"content":"Creates a duplex channel between a service and a callback instance on the client.","pos":[0,81]}]}],"pos":[67148,67230],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> that the client uses to listen for messages from the connected service.","nodes":[{"pos":[0,110],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.","source":"The <xref href=\"System.Object\"></xref> that the client uses to listen for messages from the connected service."}],"pos":[67509,67620],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory.","nodes":[{"pos":[0,129],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> used to connect to the service by channels produced by the factory.","source":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory."}],"pos":[67706,67836],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointAddress\"&gt;&lt;/xref&gt;</ph> that provides the location of the service.","source":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service."}],"pos":[67929,68033],"yaml":true},{"content":"The <xref href=\"System.Uri\"></xref> that contains the transport address to which the message is sent.","nodes":[{"pos":[0,101],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the transport address to which the message is sent.","source":"The <xref href=\"System.Uri\"></xref> that contains the transport address to which the message is sent."}],"pos":[68089,68191],"yaml":true},{"content":"A channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service.","nodes":[{"pos":[0,111],"content":"A channel of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept>, the generic parameter for the factory, between the client and service.","source":"A channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service."}],"pos":[68243,68355],"yaml":true},{"content":"<code>binding</code> or <code>endpointAddress</code> is `null`.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">&lt;code&gt;binding&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;endpointAddress&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>binding</code> or <code>endpointAddress</code> is `null`."}],"pos":[68541,68605],"yaml":true},{"content":"<code>callbackInstance</code> or <code>callbackInstance</code>.UserObject is `null`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;callbackInstance&lt;/code&gt;</ph>.UserObject is <ph id=\"ph3\">`null`</ph>.","source":"<code>callbackInstance</code> or <code>callbackInstance</code>.UserObject is `null`."}],"pos":[68715,68800],"yaml":true},{"content":"Creates a duplex channel between a service and a callback instance on the client.","nodes":[{"pos":[0,81],"content":"Creates a duplex channel between a service and a callback instance on the client.","nodes":[{"content":"Creates a duplex channel between a service and a callback instance on the client.","pos":[0,81]}]}],"pos":[70090,70172],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.","source":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service."}],"pos":[70391,70524],"yaml":true},{"content":"A duplex channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service.","nodes":[{"pos":[0,118],"content":"A duplex channel of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept>, the generic parameter for the factory, between the client and service.","source":"A duplex channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service."}],"pos":[70576,70695],"yaml":true},{"content":"<code>callbackInstance</code> or <code>callbackInstance</code>.UserObject is `null`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;callbackInstance&lt;/code&gt;</ph>.UserObject is <ph id=\"ph3\">`null`</ph>.","source":"<code>callbackInstance</code> or <code>callbackInstance</code>.UserObject is `null`."}],"pos":[70889,70974],"yaml":true},{"content":"Creates a duplex channel between a service and a callback instance on the client.","nodes":[{"pos":[0,81],"content":"Creates a duplex channel between a service and a callback instance on the client.","nodes":[{"content":"Creates a duplex channel between a service and a callback instance on the client.","pos":[0,81]}]}],"pos":[72237,72319],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> that the client uses to listen for messages from the connected service.","nodes":[{"pos":[0,110],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.","source":"The <xref href=\"System.Object\"></xref> that the client uses to listen for messages from the connected service."}],"pos":[72524,72635],"yaml":true},{"content":"The name used for the endpoint configuration.","nodes":[{"pos":[0,45],"content":"The name used for the endpoint configuration.","nodes":[{"content":"The name used for the endpoint configuration.","pos":[0,45]}]}],"pos":[72716,72762],"yaml":true},{"content":"A channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service.","nodes":[{"pos":[0,111],"content":"A channel of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept>, the generic parameter for the factory, between the client and service.","source":"A channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service."}],"pos":[72814,72926],"yaml":true},{"content":"<code>endpointConfigurationName</code> is `null`.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;endpointConfigurationName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>endpointConfigurationName</code> is `null`."}],"pos":[73112,73162],"yaml":true},{"content":"<code>callbackInstance</code> or <code>callbackInstance</code>.UserObject is `null`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;callbackInstance&lt;/code&gt;</ph>.UserObject is <ph id=\"ph3\">`null`</ph>.","source":"<code>callbackInstance</code> or <code>callbackInstance</code>.UserObject is `null`."}],"pos":[73272,73357],"yaml":true},{"content":"Creates a duplex channel between a service and a callback instance on the client.","nodes":[{"pos":[0,81],"content":"Creates a duplex channel between a service and a callback instance on the client.","nodes":[{"content":"Creates a duplex channel between a service and a callback instance on the client.","pos":[0,81]}]}],"pos":[74695,74777],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointAddress\"&gt;&lt;/xref&gt;</ph> that provides the location of the service.","source":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service."}],"pos":[74996,75100],"yaml":true},{"content":"The <xref href=\"System.Uri\"></xref> that contains the transport address to which the message is sent.","nodes":[{"pos":[0,101],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the transport address to which the message is sent.","source":"The <xref href=\"System.Uri\"></xref> that contains the transport address to which the message is sent."}],"pos":[75156,75258],"yaml":true},{"content":"A duplex channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service.","nodes":[{"pos":[0,118],"content":"A duplex channel of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept>, the generic parameter for the factory, between the client and service.","source":"A duplex channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service."}],"pos":[75310,75429],"yaml":true},{"content":"<code>address</code> is `null`.","nodes":[{"pos":[0,31],"content":"<code>address</code> is `null`.","nodes":[{"content":"is <ph id=\"ph1\">`null`</ph>.","pos":[21,31],"source":" is `null`."}]}],"pos":[75615,75647],"yaml":true},{"content":"Creates a duplex channel between a service and a callback instance on the client.","nodes":[{"pos":[0,81],"content":"Creates a duplex channel between a service and a callback instance on the client.","nodes":[{"content":"Creates a duplex channel between a service and a callback instance on the client.","pos":[0,81]}]}],"pos":[77096,77178],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.","source":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service."}],"pos":[77442,77575],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointAddress\"&gt;&lt;/xref&gt;</ph> that provides the location of the service.","source":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service."}],"pos":[77660,77764],"yaml":true},{"content":"A duplex channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service.","nodes":[{"pos":[0,118],"content":"A duplex channel of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept>, the generic parameter for the factory, between the client and service.","source":"A duplex channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service."}],"pos":[77816,77935],"yaml":true},{"content":"<code>address</code> is `null`.","nodes":[{"pos":[0,31],"content":"<code>address</code> is `null`.","nodes":[{"content":"is <ph id=\"ph1\">`null`</ph>.","pos":[21,31],"source":" is `null`."}]}],"pos":[78121,78153],"yaml":true},{"content":"<code>callbackInstance</code> or <code>callbackInstance</code>.UserObject is `null`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;callbackInstance&lt;/code&gt;</ph>.UserObject is <ph id=\"ph3\">`null`</ph>.","source":"<code>callbackInstance</code> or <code>callbackInstance</code>.UserObject is `null`."}],"pos":[78263,78348],"yaml":true},{"content":"Creates a duplex channel between a service and a callback instance on the client.","nodes":[{"pos":[0,81],"content":"Creates a duplex channel between a service and a callback instance on the client.","nodes":[{"content":"Creates a duplex channel between a service and a callback instance on the client.","pos":[0,81]}]}],"pos":[79704,79786],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.","source":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service."}],"pos":[80046,80179],"yaml":true},{"content":"The name used for the endpoint configuration.","nodes":[{"pos":[0,45],"content":"The name used for the endpoint configuration.","nodes":[{"content":"The name used for the endpoint configuration.","pos":[0,45]}]}],"pos":[80260,80306],"yaml":true},{"content":"A channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service.","nodes":[{"pos":[0,111],"content":"A channel of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept>, the generic parameter for the factory, between the client and service.","source":"A channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service."}],"pos":[80358,80470],"yaml":true},{"content":"<code>endpointConfigurationName</code> is `null`.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;endpointConfigurationName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>endpointConfigurationName</code> is `null`."}],"pos":[80656,80706],"yaml":true},{"content":"<code>callbackInstance</code> or <code>callbackInstance</code>.UserObject is `null`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;callbackInstance&lt;/code&gt;</ph>.UserObject is <ph id=\"ph3\">`null`</ph>.","source":"<code>callbackInstance</code> or <code>callbackInstance</code>.UserObject is `null`."}],"pos":[80816,80901],"yaml":true},{"content":"Creates a duplex channel between a service and a callback instance on the client.","nodes":[{"pos":[0,81],"content":"Creates a duplex channel between a service and a callback instance on the client.","nodes":[{"content":"Creates a duplex channel between a service and a callback instance on the client.","pos":[0,81]}]}],"pos":[82395,82477],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> that the client uses to listen for messages from the connected service.","nodes":[{"pos":[0,110],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.","source":"The <xref href=\"System.Object\"></xref> that the client uses to listen for messages from the connected service."}],"pos":[82747,82858],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory.","nodes":[{"pos":[0,129],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> used to connect to the service by channels produced by the factory.","source":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory."}],"pos":[82944,83074],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointAddress\"&gt;&lt;/xref&gt;</ph> that provides the location of the service.","source":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service."}],"pos":[83167,83271],"yaml":true},{"content":"A channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service.","nodes":[{"pos":[0,111],"content":"A channel of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept>, the generic parameter for the factory, between the client and service.","source":"A channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service."}],"pos":[83323,83435],"yaml":true},{"content":"<code>binding</code> or <code>endpointAddress</code> is `null`.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">&lt;code&gt;binding&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;endpointAddress&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>binding</code> or <code>endpointAddress</code> is `null`."}],"pos":[83621,83685],"yaml":true},{"content":"<code>callbackInstance</code> or <code>callbackInstance</code>.UserObject is `null`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;callbackInstance&lt;/code&gt;</ph>.UserObject is <ph id=\"ph3\">`null`</ph>.","source":"<code>callbackInstance</code> or <code>callbackInstance</code>.UserObject is `null`."}],"pos":[83795,83880],"yaml":true},{"content":"Creates a duplex channel between a service and a callback instance on the client.","nodes":[{"pos":[0,81],"content":"Creates a duplex channel between a service and a callback instance on the client.","nodes":[{"content":"Creates a duplex channel between a service and a callback instance on the client.","pos":[0,81]}]}],"pos":[85467,85549],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.","source":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service."}],"pos":[85874,86007],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory.","nodes":[{"pos":[0,129],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> used to connect to the service by channels produced by the factory.","source":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory."}],"pos":[86093,86223],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointAddress\"&gt;&lt;/xref&gt;</ph> that provides the location of the service.","source":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service."}],"pos":[86316,86420],"yaml":true},{"content":"A channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service.","nodes":[{"pos":[0,111],"content":"A channel of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept>, the generic parameter for the factory, between the client and service.","source":"A channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service."}],"pos":[86472,86584],"yaml":true},{"content":"<code>binding</code> or <code>endpointAddress</code> is `null`.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">&lt;code&gt;binding&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;endpointAddress&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>binding</code> or <code>endpointAddress</code> is `null`."}],"pos":[86770,86834],"yaml":true},{"content":"<code>callbackInstance</code> or <code>callbackInstance</code>.UserObject is `null`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;callbackInstance&lt;/code&gt;</ph>.UserObject is <ph id=\"ph3\">`null`</ph>.","source":"<code>callbackInstance</code> or <code>callbackInstance</code>.UserObject is `null`."}],"pos":[86944,87029],"yaml":true},{"content":"Creates a duplex channel between a service and a callback instance on the client.","nodes":[{"pos":[0,81],"content":"Creates a duplex channel between a service and a callback instance on the client.","nodes":[{"content":"Creates a duplex channel between a service and a callback instance on the client.","pos":[0,81]}]}],"pos":[88526,88608],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.","source":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service."}],"pos":[88889,89022],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointAddress\"&gt;&lt;/xref&gt;</ph> that provides the location of the service.","source":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service."}],"pos":[89107,89211],"yaml":true},{"content":"The <xref href=\"System.Uri\"></xref> that contains the transport address to which the message is sent.","nodes":[{"pos":[0,101],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the transport address to which the message is sent.","source":"The <xref href=\"System.Uri\"></xref> that contains the transport address to which the message is sent."}],"pos":[89267,89369],"yaml":true},{"content":"A channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service.","nodes":[{"pos":[0,111],"content":"A channel of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept>, the generic parameter for the factory, between the client and service.","source":"A channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service."}],"pos":[89421,89533],"yaml":true},{"content":"<code>address</code> is `null`.","nodes":[{"pos":[0,31],"content":"<code>address</code> is `null`.","nodes":[{"content":"is <ph id=\"ph1\">`null`</ph>.","pos":[21,31],"source":" is `null`."}]}],"pos":[89719,89751],"yaml":true},{"content":"<code>callbackInstance</code> or <code>callbackInstance</code>.UserObject is `null`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;callbackInstance&lt;/code&gt;</ph>.UserObject is <ph id=\"ph3\">`null`</ph>.","source":"<code>callbackInstance</code> or <code>callbackInstance</code>.UserObject is `null`."}],"pos":[89861,89946],"yaml":true},{"content":"Creates a duplex channel between a service and a callback instance on the client.","nodes":[{"pos":[0,81],"content":"Creates a duplex channel between a service and a callback instance on the client.","nodes":[{"content":"Creates a duplex channel between a service and a callback instance on the client.","pos":[0,81]}]}],"pos":[91581,91663],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.","source":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service."}],"pos":[91997,92130],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory.","nodes":[{"pos":[0,129],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> used to connect to the service by channels produced by the factory.","source":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory."}],"pos":[92216,92346],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.EndpointAddress\"&gt;&lt;/xref&gt;</ph> that provides the location of the service.","source":"The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service."}],"pos":[92439,92543],"yaml":true},{"content":"The <xref href=\"System.Uri\"></xref> that contains the transport address to which the message is sent.","nodes":[{"pos":[0,101],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the transport address to which the message is sent.","source":"The <xref href=\"System.Uri\"></xref> that contains the transport address to which the message is sent."}],"pos":[92599,92701],"yaml":true},{"content":"A channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service.","nodes":[{"pos":[0,111],"content":"A channel of type <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">TChannel</ph><ept id=\"p1\">&lt;/code&gt;</ept>, the generic parameter for the factory, between the client and service.","source":"A channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service."}],"pos":[92753,92865],"yaml":true},{"content":"<code>binding</code> or <code>endpointAddress</code> is `null`.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">&lt;code&gt;binding&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;endpointAddress&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>binding</code> or <code>endpointAddress</code> is `null`."}],"pos":[93051,93115],"yaml":true},{"content":"<code>callbackInstance</code> or <code>callbackInstance</code>.UserObject is `null`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;callbackInstance&lt;/code&gt;</ph>.UserObject is <ph id=\"ph3\">`null`</ph>.","source":"<code>callbackInstance</code> or <code>callbackInstance</code>.UserObject is `null`."}],"pos":[93225,93310],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.DuplexChannelFactory`1\n  commentId: T:System.ServiceModel.DuplexChannelFactory`1\n  id: DuplexChannelFactory`1\n  children:\n  - System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object)\n  - System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.String)\n  - System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.String)\n  - System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.String)\n  - System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String)\n  - System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding)\n  - System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Description.ServiceEndpoint)\n  - System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type)\n  - System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding)\n  - System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Description.ServiceEndpoint)\n  - System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext)\n  - System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding)\n  - System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)\n  - System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String)\n  - System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String)\n  - System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)\n  - System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext)\n  - System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.String)\n  - System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  - System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.String)\n  - System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)\n  - System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)\n  langs:\n  - csharp\n  name: DuplexChannelFactory<TChannel>\n  nameWithType: DuplexChannelFactory<TChannel>\n  fullName: System.ServiceModel.DuplexChannelFactory<TChannel>\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Provides the means to create and manage duplex channels of different types that are used by clients to send and receive messages to and from service endpoints.\n  remarks: \"A duplex channel allows clients and servers to communicate with each other independently so that either can initiate calls to the other. A duplex service can send messages to the client endpoint, providing event-like behavior. Duplex communication occurs when a client establishes a session with a service and provides the service with a channel on which the service can send messages back to the client. The various <xref:System.ServiceModel.DuplexChannelFactory%601.CreateChannel%2A> methods are used to create these duplex channels. The duplex message pattern is one of three message patterns available to [!INCLUDE[indigo1](~/includes/indigo1-md.md)] services. The other two message patterns are one-way and request-reply.  \\n  \\n For a general discussion of duplex services that allow clients to connect back to the service, see [Duplex Services](~/docs/framework/wcf/feature-details/duplex-services.md). For an outline and discussion of the steps involved in writing a [!INCLUDE[indigo1](~/includes/indigo1-md.md)] client application using a channel factory, see [How to: Use the ChannelFactory](~/docs/framework/wcf/feature-details/how-to-use-the-channelfactory.md). For a procedure describing how to create a [!INCLUDE[indigo1](~/includes/indigo1-md.md)] client in a client class that implements the callback interface to access a service that uses a duplex messaging pattern, see [How to: Access Services with a Duplex Contract](~/docs/framework/wcf/feature-details/how-to-access-services-with-a-duplex-contract.md).\"\n  example:\n  - \"The following sample shows how to create a channel factory and use it to create and manage channels.  \\n  \\n [!code-csharp[S_CustomAuthentication#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_customauthentication/cs/instance.cs#1)]\"\n  syntax:\n    content: 'public class DuplexChannelFactory<TChannel> : System.ServiceModel.ChannelFactory<TChannel>'\n    typeParameters:\n    - id: TChannel\n      description: The type of channel produced by the channel factory.\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Channels.CommunicationObject\n  - System.ServiceModel.ChannelFactory\n  - System.ServiceModel.ChannelFactory`1\n  derivedClasses:\n  - System.ServiceModel.Configuration.ConfigurationDuplexChannelFactory`1\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)\n  - System.ServiceModel.ChannelFactory.CreateFactory\n  - System.ServiceModel.ChannelFactory.Credentials\n  - System.ServiceModel.ChannelFactory.DefaultCloseTimeout\n  - System.ServiceModel.ChannelFactory.DefaultOpenTimeout\n  - System.ServiceModel.ChannelFactory.Endpoint\n  - System.ServiceModel.ChannelFactory.EnsureOpened\n  - System.ServiceModel.ChannelFactory.GetProperty``1\n  - System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)\n  - System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory.OnAbort\n  - System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)\n  - System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)\n  - System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)\n  - System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)\n  - System.ServiceModel.ChannelFactory.OnOpened\n  - System.ServiceModel.ChannelFactory.OnOpening\n  - System.ServiceModel.ChannelFactory.System#IDisposable#Dispose\n  - System.ServiceModel.ChannelFactory`1.CreateChannel\n  - System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)\n  - System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  - System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  - System.ServiceModel.ChannelFactory`1.CreateDescription\n  - System.ServiceModel.Channels.CommunicationObject.Abort\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.Close\n  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Closed\n  - System.ServiceModel.Channels.CommunicationObject.Closing\n  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.Fault\n  - System.ServiceModel.Channels.CommunicationObject.Faulted\n  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  - System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  - System.ServiceModel.Channels.CommunicationObject.OnClosed\n  - System.ServiceModel.Channels.CommunicationObject.OnClosing\n  - System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  - System.ServiceModel.Channels.CommunicationObject.Open\n  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Opened\n  - System.ServiceModel.Channels.CommunicationObject.Opening\n  - System.ServiceModel.Channels.CommunicationObject.State\n  - System.ServiceModel.Channels.CommunicationObject.ThisLock\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object)\n  id: '#ctor(System.Object)'\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: DuplexChannelFactory<TChannel>(Object)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract.\n  remarks: Use this constructor to pass an object that implements the callback contract for the target service programmatically rather than by using an application configuration file.\n  syntax:\n    content: public DuplexChannelFactory (object callbackInstance);\n    parameters:\n    - id: callbackObject\n      type: System.Object\n      description: ''\n  overload: System.ServiceModel.DuplexChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>callbackInstance</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String,System.ServiceModel.EndpointAddress)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String,System.ServiceModel.EndpointAddress)\n  id: '#ctor(System.Type,System.String,System.ServiceModel.EndpointAddress)'\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: DuplexChannelFactory<TChannel>(Type, String, EndpointAddress)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type, String, EndpointAddress)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type, String, EndpointAddress)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with the specified type of callback instance, configuration, and remote address.\n  syntax:\n    content: public DuplexChannelFactory (Type callbackInstanceType, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress);\n    parameters:\n    - id: callbackInstanceType\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> that provides the callback instance that the client uses to listen for messages from the connected service.\n    - id: endpointConfigurationName\n      type: System.String\n      description: The name used for the endpoint configuration.\n    - id: remoteAddress\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.\n  overload: System.ServiceModel.DuplexChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>callbackInstanceType</code> or <code>endpointConfigurationName</code> or <code>remoteAddress</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.String)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.String)\n  id: '#ctor(System.Type,System.ServiceModel.Channels.Binding,System.String)'\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: DuplexChannelFactory<TChannel>(Type, Binding, String)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type, Binding, String)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type, Binding, String)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with the specified type of callback instance, binding, and remote address.\n  syntax:\n    content: public DuplexChannelFactory (Type callbackInstanceType, System.ServiceModel.Channels.Binding binding, string remoteAddress);\n    parameters:\n    - id: callbackInstanceType\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> that provides the callback instance that the client uses to listen for messages from the connected service.\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory.\n    - id: remoteAddress\n      type: System.String\n      description: The remote address that provides the location of the service.\n  overload: System.ServiceModel.DuplexChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>callbackInstanceType</code> or <code>binding</code> or <code>remoteAddress</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  id: '#ctor(System.Type,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)'\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: DuplexChannelFactory<TChannel>(Type, Binding, EndpointAddress)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type, Binding, EndpointAddress)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type, Binding, EndpointAddress)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with specified type of callback instance, binding, and remote address.\n  syntax:\n    content: public DuplexChannelFactory (Type callbackInstanceType, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress);\n    parameters:\n    - id: callbackInstanceType\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> that provides the callback instance that the client uses to listen for messages from the connected service.\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory.\n    - id: remoteAddress\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.\n  overload: System.ServiceModel.DuplexChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>callbackInstanceType</code> or <code>binding</code> or <code>remoteAddress</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)\n  id: '#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)'\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: DuplexChannelFactory<TChannel>(InstanceContext, String, EndpointAddress)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext, String, EndpointAddress)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext, String, EndpointAddress)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract and a specified configuration and endpoint address.\n  remarks: Use this constructor to pass an instance context object that implements the callback contract for the target service address information programmatically, pass in the address information programmatically, and determine the remaining target endpoint information from the client application configuration file.\n  syntax:\n    content: public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress);\n    parameters:\n    - id: callbackInstance\n      type: System.ServiceModel.InstanceContext\n      description: The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service.\n    - id: endpointConfigurationName\n      type: System.String\n      description: The name used for the endpoint configuration.\n    - id: remoteAddress\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.\n  overload: System.ServiceModel.DuplexChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>callbackInstance</code> or <code>endpointConfigurationName</code> or <code>remoteAddress</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.String)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.String)\n  id: '#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.String)'\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: DuplexChannelFactory<TChannel>(InstanceContext, Binding, String)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext, Binding, String)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext, Binding, String)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with specified instance context, binding, and remote address.\n  syntax:\n    content: public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, string remoteAddress);\n    parameters:\n    - id: callbackInstance\n      type: System.ServiceModel.InstanceContext\n      description: The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service.\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory.\n    - id: remoteAddress\n      type: System.String\n      description: The remote address that provides the location of the service.\n  overload: System.ServiceModel.DuplexChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>callbackInstance</code> or <code>binding</code> or <code>remoteAddress</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String,System.ServiceModel.EndpointAddress)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String,System.ServiceModel.EndpointAddress)\n  id: '#ctor(System.Object,System.String,System.ServiceModel.EndpointAddress)'\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: DuplexChannelFactory<TChannel>(Object, String, EndpointAddress)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object, String, EndpointAddress)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object, String, EndpointAddress)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract, and a specified configuration and endpoint address.\n  remarks: Use this constructor to pass a service object that implements the callback contract for the target service, pass in the address information programmatically, and determine the remaining target endpoint information from the client application configuration file.\n  syntax:\n    content: public DuplexChannelFactory (object callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress);\n    parameters:\n    - id: callbackObject\n      type: System.Object\n      description: ''\n    - id: endpointConfigurationName\n      type: System.String\n      description: The name used for the endpoint configuration.\n    - id: remoteAddress\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.\n  overload: System.ServiceModel.DuplexChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>callbackObject</code> or <code>endpointConfigurationName</code> or <code>remoteAddress</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.String)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.String)\n  id: '#ctor(System.Object,System.ServiceModel.Channels.Binding,System.String)'\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: DuplexChannelFactory<TChannel>(Object, Binding, String)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object, Binding, String)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object, Binding, String)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with specified callback object, binding, and remote address.\n  syntax:\n    content: public DuplexChannelFactory (object callbackInstance, System.ServiceModel.Channels.Binding binding, string remoteAddress);\n    parameters:\n    - id: callbackObject\n      type: System.Object\n      description: ''\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory.\n    - id: remoteAddress\n      type: System.String\n      description: The remote address that provides the location of the service.\n  overload: System.ServiceModel.DuplexChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>callbackObject</code> or <code>binding</code> or <code>remoteAddress</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  id: '#ctor(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)'\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: DuplexChannelFactory<TChannel>(Object, Binding, EndpointAddress)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object, Binding, EndpointAddress)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object, Binding, EndpointAddress)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract and a specified binding and endpoint address.\n  remarks: Use this constructor to pass a service object that implements the callback contract for the target service and pass in the binding and address information programmatically rather than using an application configuration file.\n  syntax:\n    content: public DuplexChannelFactory (object callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress);\n    parameters:\n    - id: callbackObject\n      type: System.Object\n      description: ''\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory.\n    - id: remoteAddress\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.\n  overload: System.ServiceModel.DuplexChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>callbackObject</code> or <code>binding</code> or <code>remoteAddress</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String)\n  id: '#ctor(System.Type,System.String)'\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: DuplexChannelFactory<TChannel>(Type, String)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type, String)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type, String)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with specified type of callback instance and configuration.\n  syntax:\n    content: public DuplexChannelFactory (Type callbackInstanceType, string endpointConfigurationName);\n    parameters:\n    - id: callbackInstanceType\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> that provides the callback instance that the client uses to listen for messages from the connected service.\n    - id: endpointConfigurationName\n      type: System.String\n      description: The name used for the endpoint configuration.\n  overload: System.ServiceModel.DuplexChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>callbackInstanceType</code> or <code>endpointConfigurationName</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  id: '#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)'\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: DuplexChannelFactory<TChannel>(InstanceContext, Binding, EndpointAddress)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext, Binding, EndpointAddress)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext, Binding, EndpointAddress)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract and a specified binding and endpoint address.\n  remarks: Use this constructor to pass an instance context object that implements the callback contract for the target service and to pass in the binding and address information programmatically rather than using an application configuration file.\n  syntax:\n    content: public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress);\n    parameters:\n    - id: callbackInstance\n      type: System.ServiceModel.InstanceContext\n      description: The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service.\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory.\n    - id: remoteAddress\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.\n  overload: System.ServiceModel.DuplexChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>callbackInstance</code> or <code>binding</code> or <code>remoteAddress</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding)\n  id: '#ctor(System.Type,System.ServiceModel.Channels.Binding)'\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: DuplexChannelFactory<TChannel>(Type, Binding)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type, Binding)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type, Binding)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with specified type of callback instance and binding.\n  syntax:\n    content: public DuplexChannelFactory (Type callbackInstanceType, System.ServiceModel.Channels.Binding binding);\n    parameters:\n    - id: callbackInstanceType\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> that provides the callback instance that the client uses to listen for messages from the connected service.\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory.\n  overload: System.ServiceModel.DuplexChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>callbackInstanceType</code> or <code>binding</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Description.ServiceEndpoint)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Description.ServiceEndpoint)\n  id: '#ctor(System.Type,System.ServiceModel.Description.ServiceEndpoint)'\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: DuplexChannelFactory<TChannel>(Type, ServiceEndpoint)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type, ServiceEndpoint)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type, ServiceEndpoint)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with specified type of callback instance and service endpoint.\n  syntax:\n    content: public DuplexChannelFactory (Type callbackInstanceType, System.ServiceModel.Description.ServiceEndpoint endpoint);\n    parameters:\n    - id: callbackInstanceType\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> that provides the callback instance that the client uses to listen for messages from the connected service.\n    - id: endpoint\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> for the service.\n  overload: System.ServiceModel.DuplexChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>callbackInstanceType</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: DuplexChannelFactory<TChannel>(Type)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with specified type of callback instance.\n  syntax:\n    content: public DuplexChannelFactory (Type callbackInstanceType);\n    parameters:\n    - id: callbackInstanceType\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> that provides the callback instance that the client uses to listen for messages from the connected service.\n  overload: System.ServiceModel.DuplexChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>callbackInstanceType</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding)\n  id: '#ctor(System.Object,System.ServiceModel.Channels.Binding)'\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: DuplexChannelFactory<TChannel>(Object, Binding)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object, Binding)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object, Binding)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract and a specified binding.\n  remarks: Use this constructor to pass an instance context object that implements the callback contract for the target service and to pass the binding information programmatically rather than by using an application configuration file.\n  syntax:\n    content: public DuplexChannelFactory (object callbackInstance, System.ServiceModel.Channels.Binding binding);\n    parameters:\n    - id: callbackObject\n      type: System.Object\n      description: ''\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory.\n  overload: System.ServiceModel.DuplexChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>callbackObject</code> or <code>binding</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Description.ServiceEndpoint)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Description.ServiceEndpoint)\n  id: '#ctor(System.Object,System.ServiceModel.Description.ServiceEndpoint)'\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: DuplexChannelFactory<TChannel>(Object, ServiceEndpoint)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object, ServiceEndpoint)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object, ServiceEndpoint)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract and a specified endpoint.\n  remarks: Use this constructor to pass a service object that implements the callback contract for the target service and to pass the service endpoint information programmatically rather than using an application configuration file.\n  syntax:\n    content: public DuplexChannelFactory (object callbackInstance, System.ServiceModel.Description.ServiceEndpoint endpoint);\n    parameters:\n    - id: callbackObject\n      type: System.Object\n      description: ''\n    - id: endpoint\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> to which channels produced by the factory connect.\n  overload: System.ServiceModel.DuplexChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>callbackObject</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext)\n  id: '#ctor(System.ServiceModel.InstanceContext)'\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: DuplexChannelFactory<TChannel>(InstanceContext)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with specified instance context.\n  syntax:\n    content: public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance);\n    parameters:\n    - id: callbackInstance\n      type: System.ServiceModel.InstanceContext\n      description: The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service\n  overload: System.ServiceModel.DuplexChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>callbackInstance</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding)\n  id: '#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding)'\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: DuplexChannelFactory<TChannel>(InstanceContext, Binding)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext, Binding)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext, Binding)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with a context that implements the callback contract and a specified binding.\n  remarks: Use this constructor to pass an instance context object that implements the callback contract for the target service and to pass the binding information programmatically rather than by using an application configuration file.\n  syntax:\n    content: public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding);\n    parameters:\n    - id: callbackInstance\n      type: System.ServiceModel.InstanceContext\n      description: The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service.\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory.\n  overload: System.ServiceModel.DuplexChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>callbackInstance</code> or <code>binding</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)\n  id: '#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)'\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: DuplexChannelFactory<TChannel>(InstanceContext, ServiceEndpoint)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext, ServiceEndpoint)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext, ServiceEndpoint)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract and a specified endpoint.\n  remarks: Use this constructor to pass an instance context object that implements the callback contract for the target service and to pass the endpoint information programmatically rather than by using an application configuration file.\n  syntax:\n    content: public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Description.ServiceEndpoint endpoint);\n    parameters:\n    - id: callbackInstance\n      type: System.ServiceModel.InstanceContext\n      description: The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service.\n    - id: endpoint\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> to which channels produced by the factory connect.\n  overload: System.ServiceModel.DuplexChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>callbackInstance</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String)\n  id: '#ctor(System.ServiceModel.InstanceContext,System.String)'\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: DuplexChannelFactory<TChannel>(InstanceContext, String)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext, String)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext, String)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract and a specified configuration.\n  remarks: Use this constructor to pass an instance context object that implements the callback contract for the target service and to determine the target endpoint information from the client application configuration file.\n  syntax:\n    content: public DuplexChannelFactory (System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName);\n    parameters:\n    - id: callbackInstance\n      type: System.ServiceModel.InstanceContext\n      description: The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service.\n    - id: endpointConfigurationName\n      type: System.String\n      description: The name used for the endpoint configuration.\n  overload: System.ServiceModel.DuplexChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>callbackInstance</code> or <code>endpointConfigurationName</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String)\n  id: '#ctor(System.Object,System.String)'\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: DuplexChannelFactory<TChannel>(Object, String)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object, String)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object, String)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\"></xref> class with an object that implements the callback contract and a specified configuration.\n  remarks: Use this constructor to pass a service object that implements the callback contract for the target service and determine the target endpoint information from the client application configuration file.\n  syntax:\n    content: public DuplexChannelFactory (object callbackInstance, string endpointConfigurationName);\n    parameters:\n    - id: callbackObject\n      type: System.Object\n      description: ''\n    - id: endpointConfigurationName\n      type: System.String\n      description: The configuration name used for the endpoint.\n  overload: System.ServiceModel.DuplexChannelFactory`1.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>callbackObject</code> or <code>endpointConfigurationName</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)\n  id: CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: CreateChannel(Object, Binding, EndpointAddress, Uri)\n  nameWithType: DuplexChannelFactory<TChannel>.CreateChannel(Object, Binding, EndpointAddress, Uri)\n  fullName: DuplexChannelFactory<TChannel>.CreateChannel(Object, Binding, EndpointAddress, Uri)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a duplex channel between a service and a callback instance on the client.\n  syntax:\n    content: public static TChannel CreateChannel (object callbackObject, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress endpointAddress, Uri via);\n    parameters:\n    - id: callbackObject\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> that the client uses to listen for messages from the connected service.\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory.\n    - id: endpointAddress\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.\n    - id: via\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> that contains the transport address to which the message is sent.\n    return:\n      type: TChannel\n      description: A channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service.\n  overload: System.ServiceModel.DuplexChannelFactory`1.CreateChannel*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>binding</code> or <code>endpointAddress</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>callbackInstance</code> or <code>callbackInstance</code>.UserObject is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext)\n  id: CreateChannel(System.ServiceModel.InstanceContext)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: CreateChannel(InstanceContext)\n  nameWithType: DuplexChannelFactory<TChannel>.CreateChannel(InstanceContext)\n  fullName: DuplexChannelFactory<TChannel>.CreateChannel(InstanceContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a duplex channel between a service and a callback instance on the client.\n  syntax:\n    content: public TChannel CreateChannel (System.ServiceModel.InstanceContext callbackInstance);\n    parameters:\n    - id: callbackInstance\n      type: System.ServiceModel.InstanceContext\n      description: The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service.\n    return:\n      type: TChannel\n      description: A duplex channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service.\n  overload: System.ServiceModel.DuplexChannelFactory`1.CreateChannel*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>callbackInstance</code> or <code>callbackInstance</code>.UserObject is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.String)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.String)\n  id: CreateChannel(System.Object,System.String)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: CreateChannel(Object, String)\n  nameWithType: DuplexChannelFactory<TChannel>.CreateChannel(Object, String)\n  fullName: DuplexChannelFactory<TChannel>.CreateChannel(Object, String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a duplex channel between a service and a callback instance on the client.\n  syntax:\n    content: public static TChannel CreateChannel (object callbackObject, string endpointConfigurationName);\n    parameters:\n    - id: callbackObject\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> that the client uses to listen for messages from the connected service.\n    - id: endpointConfigurationName\n      type: System.String\n      description: The name used for the endpoint configuration.\n    return:\n      type: TChannel\n      description: A channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service.\n  overload: System.ServiceModel.DuplexChannelFactory`1.CreateChannel*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>endpointConfigurationName</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>callbackInstance</code> or <code>callbackInstance</code>.UserObject is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  id: CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: CreateChannel(EndpointAddress, Uri)\n  nameWithType: DuplexChannelFactory<TChannel>.CreateChannel(EndpointAddress, Uri)\n  fullName: DuplexChannelFactory<TChannel>.CreateChannel(EndpointAddress, Uri)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a duplex channel between a service and a callback instance on the client.\n  syntax:\n    content: public override TChannel CreateChannel (System.ServiceModel.EndpointAddress address, Uri via);\n    parameters:\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.\n    - id: via\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> that contains the transport address to which the message is sent.\n    return:\n      type: TChannel\n      description: A duplex channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service.\n  overload: System.ServiceModel.DuplexChannelFactory`1.CreateChannel*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>address</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)\n  id: CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: CreateChannel(InstanceContext, EndpointAddress)\n  nameWithType: DuplexChannelFactory<TChannel>.CreateChannel(InstanceContext, EndpointAddress)\n  fullName: DuplexChannelFactory<TChannel>.CreateChannel(InstanceContext, EndpointAddress)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a duplex channel between a service and a callback instance on the client.\n  syntax:\n    content: public TChannel CreateChannel (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.EndpointAddress address);\n    parameters:\n    - id: callbackInstance\n      type: System.ServiceModel.InstanceContext\n      description: The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service.\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.\n    return:\n      type: TChannel\n      description: A duplex channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service.\n  overload: System.ServiceModel.DuplexChannelFactory`1.CreateChannel*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>address</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>callbackInstance</code> or <code>callbackInstance</code>.UserObject is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.String)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.String)\n  id: CreateChannel(System.ServiceModel.InstanceContext,System.String)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: CreateChannel(InstanceContext, String)\n  nameWithType: DuplexChannelFactory<TChannel>.CreateChannel(InstanceContext, String)\n  fullName: DuplexChannelFactory<TChannel>.CreateChannel(InstanceContext, String)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a duplex channel between a service and a callback instance on the client.\n  syntax:\n    content: public static TChannel CreateChannel (System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName);\n    parameters:\n    - id: callbackInstance\n      type: System.ServiceModel.InstanceContext\n      description: The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service.\n    - id: endpointConfigurationName\n      type: System.String\n      description: The name used for the endpoint configuration.\n    return:\n      type: TChannel\n      description: A channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service.\n  overload: System.ServiceModel.DuplexChannelFactory`1.CreateChannel*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>endpointConfigurationName</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>callbackInstance</code> or <code>callbackInstance</code>.UserObject is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  id: CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: CreateChannel(Object, Binding, EndpointAddress)\n  nameWithType: DuplexChannelFactory<TChannel>.CreateChannel(Object, Binding, EndpointAddress)\n  fullName: DuplexChannelFactory<TChannel>.CreateChannel(Object, Binding, EndpointAddress)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a duplex channel between a service and a callback instance on the client.\n  syntax:\n    content: public static TChannel CreateChannel (object callbackObject, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress endpointAddress);\n    parameters:\n    - id: callbackObject\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> that the client uses to listen for messages from the connected service.\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory.\n    - id: endpointAddress\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.\n    return:\n      type: TChannel\n      description: A channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service.\n  overload: System.ServiceModel.DuplexChannelFactory`1.CreateChannel*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>binding</code> or <code>endpointAddress</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>callbackInstance</code> or <code>callbackInstance</code>.UserObject is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  id: CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: CreateChannel(InstanceContext, Binding, EndpointAddress)\n  nameWithType: DuplexChannelFactory<TChannel>.CreateChannel(InstanceContext, Binding, EndpointAddress)\n  fullName: DuplexChannelFactory<TChannel>.CreateChannel(InstanceContext, Binding, EndpointAddress)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a duplex channel between a service and a callback instance on the client.\n  syntax:\n    content: public static TChannel CreateChannel (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress endpointAddress);\n    parameters:\n    - id: callbackInstance\n      type: System.ServiceModel.InstanceContext\n      description: The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service.\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory.\n    - id: endpointAddress\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.\n    return:\n      type: TChannel\n      description: A channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service.\n  overload: System.ServiceModel.DuplexChannelFactory`1.CreateChannel*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>binding</code> or <code>endpointAddress</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>callbackInstance</code> or <code>callbackInstance</code>.UserObject is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)\n  id: CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: CreateChannel(InstanceContext, EndpointAddress, Uri)\n  nameWithType: DuplexChannelFactory<TChannel>.CreateChannel(InstanceContext, EndpointAddress, Uri)\n  fullName: DuplexChannelFactory<TChannel>.CreateChannel(InstanceContext, EndpointAddress, Uri)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a duplex channel between a service and a callback instance on the client.\n  syntax:\n    content: public virtual TChannel CreateChannel (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.EndpointAddress address, Uri via);\n    parameters:\n    - id: callbackInstance\n      type: System.ServiceModel.InstanceContext\n      description: The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service.\n    - id: address\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.\n    - id: via\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> that contains the transport address to which the message is sent.\n    return:\n      type: TChannel\n      description: A channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service.\n  overload: System.ServiceModel.DuplexChannelFactory`1.CreateChannel*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>address</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>callbackInstance</code> or <code>callbackInstance</code>.UserObject is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)\n  commentId: M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)\n  id: CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  langs:\n  - csharp\n  name: CreateChannel(InstanceContext, Binding, EndpointAddress, Uri)\n  nameWithType: DuplexChannelFactory<TChannel>.CreateChannel(InstanceContext, Binding, EndpointAddress, Uri)\n  fullName: DuplexChannelFactory<TChannel>.CreateChannel(InstanceContext, Binding, EndpointAddress, Uri)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a duplex channel between a service and a callback instance on the client.\n  syntax:\n    content: public static TChannel CreateChannel (System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress endpointAddress, Uri via);\n    parameters:\n    - id: callbackInstance\n      type: System.ServiceModel.InstanceContext\n      description: The <xref href=\"System.ServiceModel.InstanceContext\"></xref> that the client uses to listen for messages from the connected service.\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> used to connect to the service by channels produced by the factory.\n    - id: endpointAddress\n      type: System.ServiceModel.EndpointAddress\n      description: The <xref href=\"System.ServiceModel.EndpointAddress\"></xref> that provides the location of the service.\n    - id: via\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> that contains the transport address to which the message is sent.\n    return:\n      type: TChannel\n      description: A channel of type <code>TChannel</code>, the generic parameter for the factory, between the client and service.\n  overload: System.ServiceModel.DuplexChannelFactory`1.CreateChannel*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>binding</code> or <code>endpointAddress</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>callbackInstance</code> or <code>callbackInstance</code>.UserObject is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.ChannelFactory`1\n  parent: System.ServiceModel\n  isExternal: false\n  name: ChannelFactory<TChannel>\n  nameWithType: ChannelFactory<TChannel>\n  fullName: System.ServiceModel.ChannelFactory<TChannel>\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: DuplexChannelFactory<TChannel>(Object)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: DuplexChannelFactory<TChannel>(Type, String, EndpointAddress)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type, String, EndpointAddress)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type, String, EndpointAddress)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.EndpointAddress\n  parent: System.ServiceModel\n  isExternal: false\n  name: EndpointAddress\n  nameWithType: EndpointAddress\n  fullName: System.ServiceModel.EndpointAddress\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.String)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: DuplexChannelFactory<TChannel>(Type, Binding, String)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type, Binding, String)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type, Binding, String)\n- uid: System.ServiceModel.Channels.Binding\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: Binding\n  nameWithType: Binding\n  fullName: System.ServiceModel.Channels.Binding\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: DuplexChannelFactory<TChannel>(Type, Binding, EndpointAddress)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type, Binding, EndpointAddress)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type, Binding, EndpointAddress)\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: DuplexChannelFactory<TChannel>(InstanceContext, String, EndpointAddress)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext, String, EndpointAddress)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext, String, EndpointAddress)\n- uid: System.ServiceModel.InstanceContext\n  parent: System.ServiceModel\n  isExternal: false\n  name: InstanceContext\n  nameWithType: InstanceContext\n  fullName: System.ServiceModel.InstanceContext\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.String)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: DuplexChannelFactory<TChannel>(InstanceContext, Binding, String)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext, Binding, String)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext, Binding, String)\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: DuplexChannelFactory<TChannel>(Object, String, EndpointAddress)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object, String, EndpointAddress)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object, String, EndpointAddress)\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.String)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: DuplexChannelFactory<TChannel>(Object, Binding, String)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object, Binding, String)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object, Binding, String)\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: DuplexChannelFactory<TChannel>(Object, Binding, EndpointAddress)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object, Binding, EndpointAddress)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object, Binding, EndpointAddress)\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: DuplexChannelFactory<TChannel>(Type, String)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type, String)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type, String)\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: DuplexChannelFactory<TChannel>(InstanceContext, Binding, EndpointAddress)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext, Binding, EndpointAddress)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext, Binding, EndpointAddress)\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: DuplexChannelFactory<TChannel>(Type, Binding)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type, Binding)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type, Binding)\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Description.ServiceEndpoint)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: DuplexChannelFactory<TChannel>(Type, ServiceEndpoint)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type, ServiceEndpoint)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type, ServiceEndpoint)\n- uid: System.ServiceModel.Description.ServiceEndpoint\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: ServiceEndpoint\n  nameWithType: ServiceEndpoint\n  fullName: System.ServiceModel.Description.ServiceEndpoint\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: DuplexChannelFactory<TChannel>(Type)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Type)\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: DuplexChannelFactory<TChannel>(Object, Binding)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object, Binding)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object, Binding)\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Description.ServiceEndpoint)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: DuplexChannelFactory<TChannel>(Object, ServiceEndpoint)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object, ServiceEndpoint)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object, ServiceEndpoint)\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: DuplexChannelFactory<TChannel>(InstanceContext)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext)\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: DuplexChannelFactory<TChannel>(InstanceContext, Binding)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext, Binding)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext, Binding)\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: DuplexChannelFactory<TChannel>(InstanceContext, ServiceEndpoint)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext, ServiceEndpoint)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext, ServiceEndpoint)\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: DuplexChannelFactory<TChannel>(InstanceContext, String)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext, String)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(InstanceContext, String)\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: DuplexChannelFactory<TChannel>(Object, String)\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object, String)\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>(Object, String)\n- uid: System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: CreateChannel(Object, Binding, EndpointAddress, Uri)\n  nameWithType: DuplexChannelFactory<TChannel>.CreateChannel(Object, Binding, EndpointAddress, Uri)\n  fullName: DuplexChannelFactory<TChannel>.CreateChannel(Object, Binding, EndpointAddress, Uri)\n- uid: TChannel\n  isExternal: true\n  name: TChannel\n  nameWithType: TChannel\n  fullName: TChannel\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: CreateChannel(InstanceContext)\n  nameWithType: DuplexChannelFactory<TChannel>.CreateChannel(InstanceContext)\n  fullName: DuplexChannelFactory<TChannel>.CreateChannel(InstanceContext)\n- uid: System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.String)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: CreateChannel(Object, String)\n  nameWithType: DuplexChannelFactory<TChannel>.CreateChannel(Object, String)\n  fullName: DuplexChannelFactory<TChannel>.CreateChannel(Object, String)\n- uid: System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: CreateChannel(EndpointAddress, Uri)\n  nameWithType: DuplexChannelFactory<TChannel>.CreateChannel(EndpointAddress, Uri)\n  fullName: DuplexChannelFactory<TChannel>.CreateChannel(EndpointAddress, Uri)\n- uid: System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: CreateChannel(InstanceContext, EndpointAddress)\n  nameWithType: DuplexChannelFactory<TChannel>.CreateChannel(InstanceContext, EndpointAddress)\n  fullName: DuplexChannelFactory<TChannel>.CreateChannel(InstanceContext, EndpointAddress)\n- uid: System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.String)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: CreateChannel(InstanceContext, String)\n  nameWithType: DuplexChannelFactory<TChannel>.CreateChannel(InstanceContext, String)\n  fullName: DuplexChannelFactory<TChannel>.CreateChannel(InstanceContext, String)\n- uid: System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: CreateChannel(Object, Binding, EndpointAddress)\n  nameWithType: DuplexChannelFactory<TChannel>.CreateChannel(Object, Binding, EndpointAddress)\n  fullName: DuplexChannelFactory<TChannel>.CreateChannel(Object, Binding, EndpointAddress)\n- uid: System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: CreateChannel(InstanceContext, Binding, EndpointAddress)\n  nameWithType: DuplexChannelFactory<TChannel>.CreateChannel(InstanceContext, Binding, EndpointAddress)\n  fullName: DuplexChannelFactory<TChannel>.CreateChannel(InstanceContext, Binding, EndpointAddress)\n- uid: System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: CreateChannel(InstanceContext, EndpointAddress, Uri)\n  nameWithType: DuplexChannelFactory<TChannel>.CreateChannel(InstanceContext, EndpointAddress, Uri)\n  fullName: DuplexChannelFactory<TChannel>.CreateChannel(InstanceContext, EndpointAddress, Uri)\n- uid: System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: CreateChannel(InstanceContext, Binding, EndpointAddress, Uri)\n  nameWithType: DuplexChannelFactory<TChannel>.CreateChannel(InstanceContext, Binding, EndpointAddress, Uri)\n  fullName: DuplexChannelFactory<TChannel>.CreateChannel(InstanceContext, Binding, EndpointAddress, Uri)\n- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor*\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: DuplexChannelFactory<TChannel>\n  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>\n  fullName: DuplexChannelFactory<TChannel>.DuplexChannelFactory<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n- uid: System.ServiceModel.DuplexChannelFactory`1.CreateChannel*\n  parent: System.ServiceModel.DuplexChannelFactory`1\n  isExternal: false\n  name: CreateChannel\n  nameWithType: DuplexChannelFactory<TChannel>.CreateChannel\n  fullName: DuplexChannelFactory<TChannel>.CreateChannel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/DuplexChannelFactory`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.Channels.CommunicationObject.Abort\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Abort()\n  nameWithType: CommunicationObject.Abort()\n  fullName: CommunicationObject.Abort()\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.Close\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close()\n  nameWithType: CommunicationObject.Close()\n  fullName: CommunicationObject.Close()\n- uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close(TimeSpan)\n  nameWithType: CommunicationObject.Close(TimeSpan)\n  fullName: CommunicationObject.Close(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Closed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closed\n  nameWithType: CommunicationObject.Closed\n  fullName: CommunicationObject.Closed\n- uid: System.ServiceModel.Channels.CommunicationObject.Closing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closing\n  nameWithType: CommunicationObject.Closing\n  fullName: CommunicationObject.Closing\n- uid: System.ServiceModel.ChannelFactory.DefaultCloseTimeout\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: DefaultCloseTimeout\n  nameWithType: ChannelFactory.DefaultCloseTimeout\n  fullName: ChannelFactory.DefaultCloseTimeout\n- uid: System.ServiceModel.ChannelFactory.DefaultOpenTimeout\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: DefaultOpenTimeout\n  nameWithType: ChannelFactory.DefaultOpenTimeout\n  fullName: ChannelFactory.DefaultOpenTimeout\n- uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndClose(IAsyncResult)\n  nameWithType: CommunicationObject.EndClose(IAsyncResult)\n  fullName: CommunicationObject.EndClose(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndOpen(IAsyncResult)\n  nameWithType: CommunicationObject.EndOpen(IAsyncResult)\n  fullName: CommunicationObject.EndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.Fault\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Fault()\n  nameWithType: CommunicationObject.Fault()\n  fullName: CommunicationObject.Fault()\n- uid: System.ServiceModel.Channels.CommunicationObject.Faulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Faulted\n  nameWithType: CommunicationObject.Faulted\n  fullName: CommunicationObject.Faulted\n- uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: GetCommunicationObjectType()\n  nameWithType: CommunicationObject.GetCommunicationObjectType()\n  fullName: CommunicationObject.GetCommunicationObjectType()\n- uid: System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: IsDisposed\n  nameWithType: CommunicationObject.IsDisposed\n  fullName: CommunicationObject.IsDisposed\n- uid: System.ServiceModel.ChannelFactory.OnAbort\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnAbort()\n  nameWithType: ChannelFactory.OnAbort()\n  fullName: ChannelFactory.OnAbort()\n- uid: System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnBeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: ChannelFactory.OnBeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: ChannelFactory.OnBeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: ChannelFactory.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: ChannelFactory.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnClose(TimeSpan)\n  nameWithType: ChannelFactory.OnClose(TimeSpan)\n  fullName: ChannelFactory.OnClose(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosed()\n  nameWithType: CommunicationObject.OnClosed()\n  fullName: CommunicationObject.OnClosed()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosing()\n  nameWithType: CommunicationObject.OnClosing()\n  fullName: CommunicationObject.OnClosing()\n- uid: System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnEndClose(IAsyncResult)\n  nameWithType: ChannelFactory.OnEndClose(IAsyncResult)\n  fullName: ChannelFactory.OnEndClose(IAsyncResult)\n- uid: System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnEndOpen(IAsyncResult)\n  nameWithType: ChannelFactory.OnEndOpen(IAsyncResult)\n  fullName: ChannelFactory.OnEndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnFaulted()\n  nameWithType: CommunicationObject.OnFaulted()\n  fullName: CommunicationObject.OnFaulted()\n- uid: System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnOpen(TimeSpan)\n  nameWithType: ChannelFactory.OnOpen(TimeSpan)\n  fullName: ChannelFactory.OnOpen(TimeSpan)\n- uid: System.ServiceModel.ChannelFactory.OnOpened\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnOpened()\n  nameWithType: ChannelFactory.OnOpened()\n  fullName: ChannelFactory.OnOpened()\n- uid: System.ServiceModel.ChannelFactory.OnOpening\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: OnOpening()\n  nameWithType: ChannelFactory.OnOpening()\n  fullName: ChannelFactory.OnOpening()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open()\n  nameWithType: CommunicationObject.Open()\n  fullName: CommunicationObject.Open()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open(TimeSpan)\n  nameWithType: CommunicationObject.Open(TimeSpan)\n  fullName: CommunicationObject.Open(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Opened\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opened\n  nameWithType: CommunicationObject.Opened\n  fullName: CommunicationObject.Opened\n- uid: System.ServiceModel.Channels.CommunicationObject.Opening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opening\n  nameWithType: CommunicationObject.Opening\n  fullName: CommunicationObject.Opening\n- uid: System.ServiceModel.Channels.CommunicationObject.State\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: State\n  nameWithType: CommunicationObject.State\n  fullName: CommunicationObject.State\n- uid: System.ServiceModel.Channels.CommunicationObject.ThisLock\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThisLock\n  nameWithType: CommunicationObject.ThisLock\n  fullName: CommunicationObject.ThisLock\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposed()\n  nameWithType: CommunicationObject.ThrowIfDisposed()\n  fullName: CommunicationObject.ThrowIfDisposed()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrImmutable()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrImmutable()\n  fullName: CommunicationObject.ThrowIfDisposedOrImmutable()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrNotOpen()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrNotOpen()\n  fullName: CommunicationObject.ThrowIfDisposedOrNotOpen()\n- uid: System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: ApplyConfiguration(String)\n  nameWithType: ChannelFactory.ApplyConfiguration(String)\n  fullName: ChannelFactory.ApplyConfiguration(String)\n- uid: System.ServiceModel.ChannelFactory`1.CreateDescription\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateDescription()\n  nameWithType: ChannelFactory<TChannel>.CreateDescription()\n  fullName: ChannelFactory<TChannel>.CreateDescription()\n- uid: System.ServiceModel.ChannelFactory.CreateFactory\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: CreateFactory()\n  nameWithType: ChannelFactory.CreateFactory()\n  fullName: ChannelFactory.CreateFactory()\n- uid: System.ServiceModel.ChannelFactory.Credentials\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: Credentials\n  nameWithType: ChannelFactory.Credentials\n  fullName: ChannelFactory.Credentials\n- uid: System.ServiceModel.ChannelFactory.Endpoint\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: Endpoint\n  nameWithType: ChannelFactory.Endpoint\n  fullName: ChannelFactory.Endpoint\n- uid: System.ServiceModel.ChannelFactory.EnsureOpened\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: EnsureOpened()\n  nameWithType: ChannelFactory.EnsureOpened()\n  fullName: ChannelFactory.EnsureOpened()\n- uid: System.ServiceModel.ChannelFactory.GetProperty``1\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: GetProperty<T>()\n  nameWithType: ChannelFactory.GetProperty<T>()\n  fullName: ChannelFactory.GetProperty<T>()\n- uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: InitializeEndpoint(String, EndpointAddress)\n  nameWithType: ChannelFactory.InitializeEndpoint(String, EndpointAddress)\n  fullName: ChannelFactory.InitializeEndpoint(String, EndpointAddress)\n- uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: InitializeEndpoint(Binding, EndpointAddress)\n  nameWithType: ChannelFactory.InitializeEndpoint(Binding, EndpointAddress)\n  fullName: ChannelFactory.InitializeEndpoint(Binding, EndpointAddress)\n- uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: InitializeEndpoint(ServiceEndpoint)\n  nameWithType: ChannelFactory.InitializeEndpoint(ServiceEndpoint)\n  fullName: ChannelFactory.InitializeEndpoint(ServiceEndpoint)\n- uid: System.ServiceModel.ChannelFactory.System#IDisposable#Dispose\n  parent: System.ServiceModel.ChannelFactory\n  isExternal: false\n  name: IDisposable.Dispose()\n  nameWithType: ChannelFactory.IDisposable.Dispose()\n  fullName: ChannelFactory.IDisposable.Dispose()\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannel(Binding, EndpointAddress, Uri)\n  nameWithType: ChannelFactory<TChannel>.CreateChannel(Binding, EndpointAddress, Uri)\n  fullName: ChannelFactory<TChannel>.CreateChannel(Binding, EndpointAddress, Uri)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannel(Binding, EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.CreateChannel(Binding, EndpointAddress)\n  fullName: ChannelFactory<TChannel>.CreateChannel(Binding, EndpointAddress)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannel(EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.CreateChannel(EndpointAddress)\n  fullName: ChannelFactory<TChannel>.CreateChannel(EndpointAddress)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannel()\n  nameWithType: ChannelFactory<TChannel>.CreateChannel()\n  fullName: ChannelFactory<TChannel>.CreateChannel()\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannel(String)\n  nameWithType: ChannelFactory<TChannel>.CreateChannel(String)\n  fullName: ChannelFactory<TChannel>.CreateChannel(String)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithActAsToken(SecurityToken)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithActAsToken(SecurityToken, EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken, EndpointAddress)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken, EndpointAddress)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithActAsToken(SecurityToken, EndpointAddress, Uri)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken, EndpointAddress, Uri)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken, EndpointAddress, Uri)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithIssuedToken(SecurityToken)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithIssuedToken(SecurityToken, EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken, EndpointAddress)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken, EndpointAddress)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithIssuedToken(SecurityToken, EndpointAddress, Uri)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken, EndpointAddress, Uri)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken, EndpointAddress, Uri)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress, Uri)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress, Uri)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress, Uri)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithOnBehalfOfToken(SecurityToken)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken)\n- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)\n  parent: System.ServiceModel.ChannelFactory`1\n  isExternal: false\n  name: CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress)\n  nameWithType: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress)\n  fullName: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken, EndpointAddress)\n"}