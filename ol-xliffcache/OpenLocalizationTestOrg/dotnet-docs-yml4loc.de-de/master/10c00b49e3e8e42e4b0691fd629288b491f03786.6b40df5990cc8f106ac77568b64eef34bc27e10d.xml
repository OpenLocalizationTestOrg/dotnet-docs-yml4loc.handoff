{"nodes":[{"content":"Specifies a range of pages.","nodes":[{"pos":[0,27],"content":"Specifies a range of pages.","nodes":[{"content":"Specifies a range of pages.","pos":[0,27]}]}],"pos":[1065,1093],"yaml":true},{"content":"<xref:System.Windows.Controls.PageRange> defines a range of pages that should be processed in an operation such as  printing.","nodes":[{"pos":[0,125],"content":"<xref:System.Windows.Controls.PageRange> defines a range of pages that should be processed in an operation such as  printing.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.PageRange&gt;</ph> defines a range of pages that should be processed in an operation such as  printing.","pos":[0,125],"source":"<xref:System.Windows.Controls.PageRange> defines a range of pages that should be processed in an operation such as  printing."}]}],"pos":[1104,1230],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Controls.PageRange\"></xref> class that includes only the single specified page.","nodes":[{"pos":[0,140],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Controls.PageRange\"&gt;&lt;/xref&gt;</ph> class that includes only the single specified page.","source":"Initializes a new instance of the <xref href=\"System.Windows.Controls.PageRange\"></xref> class that includes only the single specified page."}],"pos":[2313,2454],"yaml":true},{"content":"The `page` parameter value is 1-based; page number 1 is the first page.","nodes":[{"pos":[0,71],"content":"The <ph id=\"ph1\">`page`</ph> parameter value is 1-based; page number 1 is the first page.","source":"The `page` parameter value is 1-based; page number 1 is the first page."}],"pos":[2465,2537],"yaml":true,"extradata":"MT"},{"content":"The page that is printed or processed.","nodes":[{"pos":[0,38],"content":"The page that is printed or processed.","nodes":[{"content":"The page that is printed or processed.","pos":[0,38]}]}],"pos":[2664,2703],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Controls.PageRange\"></xref> class with the specified first and last pages.","nodes":[{"pos":[0,135],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Controls.PageRange\"&gt;&lt;/xref&gt;</ph> class with the specified first and last pages.","source":"Initializes a new instance of the <xref href=\"System.Windows.Controls.PageRange\"></xref> class with the specified first and last pages."}],"pos":[3798,3934],"yaml":true},{"content":"The `pageFrom` and `PageTo` parameter values are 1-based; page number 1 is the first page.  \n  \n Since the range includes both the \"from\" and \"to\" pages, the total number of pages is \"<xref:System.Windows.Controls.PageRange.PageTo%2A> - <xref:System.Windows.Controls.PageRange.PageFrom%2A> + 1\".","nodes":[{"pos":[0,90],"content":"The <ph id=\"ph1\">`pageFrom`</ph> and <ph id=\"ph2\">`PageTo`</ph> parameter values are 1-based; page number 1 is the first page.","source":"The `pageFrom` and `PageTo` parameter values are 1-based; page number 1 is the first page."},{"pos":[97,295],"content":"Since the range includes both the \"from\" and \"to\" pages, the total number of pages is \"<xref:System.Windows.Controls.PageRange.PageTo%2A> - <xref:System.Windows.Controls.PageRange.PageFrom%2A> + 1\".","nodes":[{"content":"Since the range includes both the \"from\" and \"to\" pages, the total number of pages is \"<ph id=\"ph1\">&lt;xref:System.Windows.Controls.PageRange.PageTo%2A&gt;</ph><ph id=\"ph2\"> - </ph><ph id=\"ph3\">&lt;xref:System.Windows.Controls.PageRange.PageFrom%2A&gt;</ph> + 1\".","pos":[0,198],"source":"Since the range includes both the \"from\" and \"to\" pages, the total number of pages is \"<xref:System.Windows.Controls.PageRange.PageTo%2A> - <xref:System.Windows.Controls.PageRange.PageFrom%2A> + 1\"."}]}],"pos":[3945,4251],"yaml":true,"extradata":"MT"},{"content":"The first page of the range.","nodes":[{"pos":[0,28],"content":"The first page of the range.","nodes":[{"content":"The first page of the range.","pos":[0,28]}]}],"pos":[4398,4427],"yaml":true},{"content":"The last page of the range.","nodes":[{"pos":[0,27],"content":"The last page of the range.","nodes":[{"content":"The last page of the range.","pos":[0,27]}]}],"pos":[4488,4516],"yaml":true},{"content":"Tests whether an object of unknown type is equal to this <xref href=\"System.Windows.Controls.PageRange\"></xref>.","nodes":[{"pos":[0,112],"content":"Tests whether an object of unknown type is equal to this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Controls.PageRange\"&gt;&lt;/xref&gt;</ph>.","source":"Tests whether an object of unknown type is equal to this <xref href=\"System.Windows.Controls.PageRange\"></xref>."}],"pos":[5544,5657],"yaml":true},{"content":"The object tested.","nodes":[{"pos":[0,18],"content":"The object tested.","nodes":[{"content":"The object tested.","pos":[0,18]}]}],"pos":[5797,5816],"yaml":true},{"content":"`true` if the object is of type <xref href=\"System.Windows.Controls.PageRange\"></xref> and is equal to this <xref href=\"System.Windows.Controls.PageRange\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,183],"content":"<ph id=\"ph1\">`true`</ph> if the object is of type <ph id=\"ph2\">&lt;xref href=\"System.Windows.Controls.PageRange\"&gt;&lt;/xref&gt;</ph> and is equal to this <ph id=\"ph3\">&lt;xref href=\"System.Windows.Controls.PageRange\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the object is of type <xref href=\"System.Windows.Controls.PageRange\"></xref> and is equal to this <xref href=\"System.Windows.Controls.PageRange\"></xref>; otherwise, `false`."}],"pos":[5874,6060],"yaml":true},{"content":"Tests whether a <xref href=\"System.Windows.Controls.PageRange\"></xref> is equal to this <xref href=\"System.Windows.Controls.PageRange\"></xref>.","nodes":[{"pos":[0,143],"content":"Tests whether a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Controls.PageRange\"&gt;&lt;/xref&gt;</ph> is equal to this <ph id=\"ph2\">&lt;xref href=\"System.Windows.Controls.PageRange\"&gt;&lt;/xref&gt;</ph>.","source":"Tests whether a <xref href=\"System.Windows.Controls.PageRange\"></xref> is equal to this <xref href=\"System.Windows.Controls.PageRange\"></xref>."}],"pos":[7158,7302],"yaml":true},{"content":"The <xref href=\"System.Windows.Controls.PageRange\"></xref> tested.","nodes":[{"pos":[0,66],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Controls.PageRange\"&gt;&lt;/xref&gt;</ph> tested.","source":"The <xref href=\"System.Windows.Controls.PageRange\"></xref> tested."}],"pos":[7492,7559],"yaml":true},{"content":"`true` if the two <xref href=\"System.Windows.Controls.PageRange\"></xref> objects are equal; otherwise, `false`.","nodes":[{"pos":[0,111],"content":"<ph id=\"ph1\">`true`</ph> if the two <ph id=\"ph2\">&lt;xref href=\"System.Windows.Controls.PageRange\"&gt;&lt;/xref&gt;</ph> objects are equal; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the two <xref href=\"System.Windows.Controls.PageRange\"></xref> objects are equal; otherwise, `false`."}],"pos":[7617,7731],"yaml":true},{"content":"Gets the hash code value for the <xref href=\"System.Windows.Controls.PageRange\"></xref>.","nodes":[{"pos":[0,88],"content":"Gets the hash code value for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Controls.PageRange\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the hash code value for the <xref href=\"System.Windows.Controls.PageRange\"></xref>."}],"pos":[8727,8816],"yaml":true},{"content":"The hash code value for the <xref href=\"System.Windows.Controls.PageRange\"></xref>.","nodes":[{"pos":[0,83],"content":"The hash code value for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Controls.PageRange\"&gt;&lt;/xref&gt;</ph>.","source":"The hash code value for the <xref href=\"System.Windows.Controls.PageRange\"></xref>."}],"pos":[8950,9034],"yaml":true},{"content":"Defines the \"==\" operator for testing whether two specified <xref href=\"System.Windows.Controls.PageRange\"></xref> objects are equal.","nodes":[{"pos":[0,133],"content":"Defines the \"==\" operator for testing whether two specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Controls.PageRange\"&gt;&lt;/xref&gt;</ph> objects are equal.","source":"Defines the \"==\" operator for testing whether two specified <xref href=\"System.Windows.Controls.PageRange\"></xref> objects are equal."}],"pos":[10304,10438],"yaml":true},{"content":"The equivalent method for this operator is <xref:System.Windows.Controls.PageRange.Equals*?displayProperty=fullName>","nodes":[{"pos":[0,116],"content":"The equivalent method for this operator is <xref:System.Windows.Controls.PageRange.Equals*?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Windows.Controls.PageRange.Equals*?displayProperty=fullName&gt;</ph>","pos":[0,116],"source":"The equivalent method for this operator is <xref:System.Windows.Controls.PageRange.Equals*?displayProperty=fullName>"}]}],"pos":[10449,10566],"yaml":true,"extradata":"MT"},{"content":"The first <xref href=\"System.Windows.Controls.PageRange\"></xref>.","nodes":[{"pos":[0,65],"content":"The first <ph id=\"ph1\">&lt;xref href=\"System.Windows.Controls.PageRange\"&gt;&lt;/xref&gt;</ph>.","source":"The first <xref href=\"System.Windows.Controls.PageRange\"></xref>."}],"pos":[10795,10861],"yaml":true},{"content":"The second <xref href=\"System.Windows.Controls.PageRange\"></xref>.","nodes":[{"pos":[0,66],"content":"The second <ph id=\"ph1\">&lt;xref href=\"System.Windows.Controls.PageRange\"&gt;&lt;/xref&gt;</ph>.","source":"The second <xref href=\"System.Windows.Controls.PageRange\"></xref>."}],"pos":[10940,11007],"yaml":true},{"content":"`true` if the two <xref href=\"System.Windows.Controls.PageRange\"></xref> objects are equal; otherwise, `false`.","nodes":[{"pos":[0,111],"content":"<ph id=\"ph1\">`true`</ph> if the two <ph id=\"ph2\">&lt;xref href=\"System.Windows.Controls.PageRange\"&gt;&lt;/xref&gt;</ph> objects are equal; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the two <xref href=\"System.Windows.Controls.PageRange\"></xref> objects are equal; otherwise, `false`."}],"pos":[11065,11179],"yaml":true},{"content":"Defines the \"!=\" operator for testing whether two specified <xref href=\"System.Windows.Controls.PageRange\"></xref> objects are *not* equal.","nodes":[{"pos":[0,139],"content":"Defines the \"!=\" operator for testing whether two specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Controls.PageRange\"&gt;&lt;/xref&gt;</ph> objects are <bpt id=\"p1\">*</bpt>not<ept id=\"p1\">*</ept> equal.","source":"Defines the \"!=\" operator for testing whether two specified <xref href=\"System.Windows.Controls.PageRange\"></xref> objects are *not* equal."}],"pos":[12439,12579],"yaml":true},{"content":"The equivalent method for this operator is the negation of <xref:System.Windows.Controls.PageRange.Equals%2A?displayProperty=fullName>","nodes":[{"pos":[0,134],"content":"The equivalent method for this operator is the negation of <xref:System.Windows.Controls.PageRange.Equals%2A?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is the negation of <ph id=\"ph1\">&lt;xref:System.Windows.Controls.PageRange.Equals%2A?displayProperty=fullName&gt;</ph>","pos":[0,134],"source":"The equivalent method for this operator is the negation of <xref:System.Windows.Controls.PageRange.Equals%2A?displayProperty=fullName>"}]}],"pos":[12590,12725],"yaml":true,"extradata":"MT"},{"content":"The first <xref href=\"System.Windows.Controls.PageRange\"></xref>.","nodes":[{"pos":[0,65],"content":"The first <ph id=\"ph1\">&lt;xref href=\"System.Windows.Controls.PageRange\"&gt;&lt;/xref&gt;</ph>.","source":"The first <xref href=\"System.Windows.Controls.PageRange\"></xref>."}],"pos":[12956,13022],"yaml":true},{"content":"The second <xref href=\"System.Windows.Controls.PageRange\"></xref>.","nodes":[{"pos":[0,66],"content":"The second <ph id=\"ph1\">&lt;xref href=\"System.Windows.Controls.PageRange\"&gt;&lt;/xref&gt;</ph>.","source":"The second <xref href=\"System.Windows.Controls.PageRange\"></xref>."}],"pos":[13101,13168],"yaml":true},{"content":"`true` if the two <xref href=\"System.Windows.Controls.PageRange\"></xref> objects are *not* equal; otherwise, `false`.","nodes":[{"pos":[0,117],"content":"<ph id=\"ph1\">`true`</ph> if the two <ph id=\"ph2\">&lt;xref href=\"System.Windows.Controls.PageRange\"&gt;&lt;/xref&gt;</ph> objects are <bpt id=\"p1\">*</bpt>not<ept id=\"p1\">*</ept> equal; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the two <xref href=\"System.Windows.Controls.PageRange\"></xref> objects are *not* equal; otherwise, `false`."}],"pos":[13226,13346],"yaml":true},{"content":"Gets or sets the page number of the first page in the range.","nodes":[{"pos":[0,60],"content":"Gets or sets the page number of the first page in the range.","nodes":[{"content":"Gets or sets the page number of the first page in the range.","pos":[0,60]}]}],"pos":[14327,14388],"yaml":true},{"content":"The <xref:System.Windows.Controls.PageRange.PageFrom%2A> property is 1-based; page number 1 is the first page.","nodes":[{"pos":[0,110],"content":"The <xref:System.Windows.Controls.PageRange.PageFrom%2A> property is 1-based; page number 1 is the first page.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.PageRange.PageFrom%2A&gt;</ph> property is 1-based; page number 1 is the first page.","pos":[0,110],"source":"The <xref:System.Windows.Controls.PageRange.PageFrom%2A> property is 1-based; page number 1 is the first page."}]}],"pos":[14399,14510],"yaml":true,"extradata":"MT"},{"content":"The 1-based page number of the first page in the range.","nodes":[{"pos":[0,55],"content":"The 1-based page number of the first page in the range.","nodes":[{"content":"The 1-based page number of the first page in the range.","pos":[0,55]}]}],"pos":[14623,14679],"yaml":true},{"content":"Gets or sets the page number of the last page in the range.","nodes":[{"pos":[0,59],"content":"Gets or sets the page number of the last page in the range.","nodes":[{"content":"Gets or sets the page number of the last page in the range.","pos":[0,59]}]}],"pos":[15643,15703],"yaml":true},{"content":"The <xref:System.Windows.Controls.PageRange.PageTo%2A> property is 1-based; page number 1 is the first page.","nodes":[{"pos":[0,108],"content":"The <xref:System.Windows.Controls.PageRange.PageTo%2A> property is 1-based; page number 1 is the first page.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.PageRange.PageTo%2A&gt;</ph> property is 1-based; page number 1 is the first page.","pos":[0,108],"source":"The <xref:System.Windows.Controls.PageRange.PageTo%2A> property is 1-based; page number 1 is the first page."}]}],"pos":[15714,15823],"yaml":true,"extradata":"MT"},{"content":"The 1-based page number of the last page in the range.","nodes":[{"pos":[0,54],"content":"The 1-based page number of the last page in the range.","nodes":[{"content":"The 1-based page number of the last page in the range.","pos":[0,54]}]}],"pos":[15934,15989],"yaml":true},{"content":"Gets a string representation of the range.","nodes":[{"pos":[0,42],"content":"Gets a string representation of the range.","nodes":[{"content":"Gets a string representation of the range.","pos":[0,42]}]}],"pos":[16967,17010],"yaml":true},{"content":"A string that represents the range of pages in the format \"<xref href=\"System.Windows.Controls.PageRange.PageFrom\"></xref><code>-</code><xref href=\"System.Windows.Controls.PageRange.PageTo\"></xref>\".","nodes":[{"pos":[0,199],"content":"A string that represents the range of pages in the format \"<ph id=\"ph1\">&lt;xref href=\"System.Windows.Controls.PageRange.PageFrom\"&gt;&lt;/xref&gt;</ph><bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">-</ph><ept id=\"p1\">&lt;/code&gt;</ept><ph id=\"ph3\">&lt;xref href=\"System.Windows.Controls.PageRange.PageTo\"&gt;&lt;/xref&gt;</ph>\".","source":"A string that represents the range of pages in the format \"<xref href=\"System.Windows.Controls.PageRange.PageFrom\"></xref><code>-</code><xref href=\"System.Windows.Controls.PageRange.PageTo\"></xref>\"."}],"pos":[17145,17345],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Controls.PageRange\n  commentId: T:System.Windows.Controls.PageRange\n  id: PageRange\n  children:\n  - System.Windows.Controls.PageRange.#ctor(System.Int32)\n  - System.Windows.Controls.PageRange.#ctor(System.Int32,System.Int32)\n  - System.Windows.Controls.PageRange.Equals(System.Object)\n  - System.Windows.Controls.PageRange.Equals(System.Windows.Controls.PageRange)\n  - System.Windows.Controls.PageRange.GetHashCode\n  - System.Windows.Controls.PageRange.op_Equality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)\n  - System.Windows.Controls.PageRange.op_Inequality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)\n  - System.Windows.Controls.PageRange.PageFrom\n  - System.Windows.Controls.PageRange.PageTo\n  - System.Windows.Controls.PageRange.ToString\n  langs:\n  - csharp\n  name: PageRange\n  nameWithType: PageRange\n  fullName: System.Windows.Controls.PageRange\n  type: Struct\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Specifies a range of pages.\n  remarks: <xref:System.Windows.Controls.PageRange> defines a range of pages that should be processed in an operation such as  printing.\n  syntax:\n    content: public struct PageRange\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/PageRange.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Controls.PageRange.#ctor(System.Int32)\n  commentId: M:System.Windows.Controls.PageRange.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Windows.Controls.PageRange\n  langs:\n  - csharp\n  name: PageRange(Int32)\n  nameWithType: PageRange.PageRange(Int32)\n  fullName: PageRange.PageRange(Int32)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Controls.PageRange\"></xref> class that includes only the single specified page.\n  remarks: The `page` parameter value is 1-based; page number 1 is the first page.\n  syntax:\n    content: public PageRange (int page);\n    parameters:\n    - id: page\n      type: System.Int32\n      description: The page that is printed or processed.\n  overload: System.Windows.Controls.PageRange.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/PageRange.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Controls.PageRange.#ctor(System.Int32,System.Int32)\n  commentId: M:System.Windows.Controls.PageRange.#ctor(System.Int32,System.Int32)\n  id: '#ctor(System.Int32,System.Int32)'\n  parent: System.Windows.Controls.PageRange\n  langs:\n  - csharp\n  name: PageRange(Int32, Int32)\n  nameWithType: PageRange.PageRange(Int32, Int32)\n  fullName: PageRange.PageRange(Int32, Int32)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Controls.PageRange\"></xref> class with the specified first and last pages.\n  remarks: \"The `pageFrom` and `PageTo` parameter values are 1-based; page number 1 is the first page.  \\n  \\n Since the range includes both the \\\"from\\\" and \\\"to\\\" pages, the total number of pages is \\\"<xref:System.Windows.Controls.PageRange.PageTo%2A> - <xref:System.Windows.Controls.PageRange.PageFrom%2A> + 1\\\".\"\n  syntax:\n    content: public PageRange (int pageFrom, int pageTo);\n    parameters:\n    - id: pageFrom\n      type: System.Int32\n      description: The first page of the range.\n    - id: pageTo\n      type: System.Int32\n      description: The last page of the range.\n  overload: System.Windows.Controls.PageRange.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/PageRange.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Controls.PageRange.Equals(System.Object)\n  commentId: M:System.Windows.Controls.PageRange.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.Controls.PageRange\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: PageRange.Equals(Object)\n  fullName: PageRange.Equals(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Tests whether an object of unknown type is equal to this <xref href=\"System.Windows.Controls.PageRange\"></xref>.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object tested.\n    return:\n      type: System.Boolean\n      description: '`true` if the object is of type <xref href=\"System.Windows.Controls.PageRange\"></xref> and is equal to this <xref href=\"System.Windows.Controls.PageRange\"></xref>; otherwise, `false`.'\n  overload: System.Windows.Controls.PageRange.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/PageRange.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Controls.PageRange.Equals(System.Windows.Controls.PageRange)\n  commentId: M:System.Windows.Controls.PageRange.Equals(System.Windows.Controls.PageRange)\n  id: Equals(System.Windows.Controls.PageRange)\n  parent: System.Windows.Controls.PageRange\n  langs:\n  - csharp\n  name: Equals(PageRange)\n  nameWithType: PageRange.Equals(PageRange)\n  fullName: PageRange.Equals(PageRange)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Tests whether a <xref href=\"System.Windows.Controls.PageRange\"></xref> is equal to this <xref href=\"System.Windows.Controls.PageRange\"></xref>.\n  syntax:\n    content: public bool Equals (System.Windows.Controls.PageRange pageRange);\n    parameters:\n    - id: pageRange\n      type: System.Windows.Controls.PageRange\n      description: The <xref href=\"System.Windows.Controls.PageRange\"></xref> tested.\n    return:\n      type: System.Boolean\n      description: '`true` if the two <xref href=\"System.Windows.Controls.PageRange\"></xref> objects are equal; otherwise, `false`.'\n  overload: System.Windows.Controls.PageRange.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/PageRange.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Controls.PageRange.GetHashCode\n  commentId: M:System.Windows.Controls.PageRange.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.Controls.PageRange\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: PageRange.GetHashCode()\n  fullName: PageRange.GetHashCode()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets the hash code value for the <xref href=\"System.Windows.Controls.PageRange\"></xref>.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code value for the <xref href=\"System.Windows.Controls.PageRange\"></xref>.\n  overload: System.Windows.Controls.PageRange.GetHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/PageRange.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Controls.PageRange.op_Equality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)\n  commentId: M:System.Windows.Controls.PageRange.op_Equality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)\n  id: op_Equality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)\n  parent: System.Windows.Controls.PageRange\n  langs:\n  - csharp\n  name: op_Equality(PageRange, PageRange)\n  nameWithType: PageRange.op_Equality(PageRange, PageRange)\n  fullName: PageRange.op_Equality(PageRange, PageRange)\n  type: Operator\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Defines the \"==\" operator for testing whether two specified <xref href=\"System.Windows.Controls.PageRange\"></xref> objects are equal.\n  remarks: The equivalent method for this operator is <xref:System.Windows.Controls.PageRange.Equals*?displayProperty=fullName>\n  syntax:\n    content: public static bool op_Equality (System.Windows.Controls.PageRange pr1, System.Windows.Controls.PageRange pr2);\n    parameters:\n    - id: pr1\n      type: System.Windows.Controls.PageRange\n      description: The first <xref href=\"System.Windows.Controls.PageRange\"></xref>.\n    - id: pr2\n      type: System.Windows.Controls.PageRange\n      description: The second <xref href=\"System.Windows.Controls.PageRange\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the two <xref href=\"System.Windows.Controls.PageRange\"></xref> objects are equal; otherwise, `false`.'\n  overload: System.Windows.Controls.PageRange.op_Equality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/PageRange.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Controls.PageRange.op_Inequality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)\n  commentId: M:System.Windows.Controls.PageRange.op_Inequality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)\n  id: op_Inequality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)\n  parent: System.Windows.Controls.PageRange\n  langs:\n  - csharp\n  name: op_Inequality(PageRange, PageRange)\n  nameWithType: PageRange.op_Inequality(PageRange, PageRange)\n  fullName: PageRange.op_Inequality(PageRange, PageRange)\n  type: Operator\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Defines the \"!=\" operator for testing whether two specified <xref href=\"System.Windows.Controls.PageRange\"></xref> objects are *not* equal.\n  remarks: The equivalent method for this operator is the negation of <xref:System.Windows.Controls.PageRange.Equals%2A?displayProperty=fullName>\n  syntax:\n    content: public static bool op_Inequality (System.Windows.Controls.PageRange pr1, System.Windows.Controls.PageRange pr2);\n    parameters:\n    - id: pr1\n      type: System.Windows.Controls.PageRange\n      description: The first <xref href=\"System.Windows.Controls.PageRange\"></xref>.\n    - id: pr2\n      type: System.Windows.Controls.PageRange\n      description: The second <xref href=\"System.Windows.Controls.PageRange\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the two <xref href=\"System.Windows.Controls.PageRange\"></xref> objects are *not* equal; otherwise, `false`.'\n  overload: System.Windows.Controls.PageRange.op_Inequality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/PageRange.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Controls.PageRange.PageFrom\n  commentId: P:System.Windows.Controls.PageRange.PageFrom\n  id: PageFrom\n  parent: System.Windows.Controls.PageRange\n  langs:\n  - csharp\n  name: PageFrom\n  nameWithType: PageRange.PageFrom\n  fullName: PageRange.PageFrom\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the page number of the first page in the range.\n  remarks: The <xref:System.Windows.Controls.PageRange.PageFrom%2A> property is 1-based; page number 1 is the first page.\n  syntax:\n    content: public int PageFrom { get; set; }\n    return:\n      type: System.Int32\n      description: The 1-based page number of the first page in the range.\n  overload: System.Windows.Controls.PageRange.PageFrom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/PageRange.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Controls.PageRange.PageTo\n  commentId: P:System.Windows.Controls.PageRange.PageTo\n  id: PageTo\n  parent: System.Windows.Controls.PageRange\n  langs:\n  - csharp\n  name: PageTo\n  nameWithType: PageRange.PageTo\n  fullName: PageRange.PageTo\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets or sets the page number of the last page in the range.\n  remarks: The <xref:System.Windows.Controls.PageRange.PageTo%2A> property is 1-based; page number 1 is the first page.\n  syntax:\n    content: public int PageTo { get; set; }\n    return:\n      type: System.Int32\n      description: The 1-based page number of the last page in the range.\n  overload: System.Windows.Controls.PageRange.PageTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/PageRange.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Controls.PageRange.ToString\n  commentId: M:System.Windows.Controls.PageRange.ToString\n  id: ToString\n  parent: System.Windows.Controls.PageRange\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: PageRange.ToString()\n  fullName: PageRange.ToString()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  summary: Gets a string representation of the range.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents the range of pages in the format \"<xref href=\"System.Windows.Controls.PageRange.PageFrom\"></xref><code>-</code><xref href=\"System.Windows.Controls.PageRange.PageTo\"></xref>\".\n  overload: System.Windows.Controls.PageRange.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/PageRange.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.Windows.Controls.PageRange.#ctor(System.Int32)\n  parent: System.Windows.Controls.PageRange\n  isExternal: false\n  name: PageRange(Int32)\n  nameWithType: PageRange.PageRange(Int32)\n  fullName: PageRange.PageRange(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Controls.PageRange.#ctor(System.Int32,System.Int32)\n  parent: System.Windows.Controls.PageRange\n  isExternal: false\n  name: PageRange(Int32, Int32)\n  nameWithType: PageRange.PageRange(Int32, Int32)\n  fullName: PageRange.PageRange(Int32, Int32)\n- uid: System.Windows.Controls.PageRange.Equals(System.Object)\n  parent: System.Windows.Controls.PageRange\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: PageRange.Equals(Object)\n  fullName: PageRange.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Controls.PageRange.Equals(System.Windows.Controls.PageRange)\n  parent: System.Windows.Controls.PageRange\n  isExternal: false\n  name: Equals(PageRange)\n  nameWithType: PageRange.Equals(PageRange)\n  fullName: PageRange.Equals(PageRange)\n- uid: System.Windows.Controls.PageRange\n  parent: System.Windows.Controls\n  isExternal: false\n  name: PageRange\n  nameWithType: PageRange\n  fullName: System.Windows.Controls.PageRange\n- uid: System.Windows.Controls.PageRange.GetHashCode\n  parent: System.Windows.Controls.PageRange\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: PageRange.GetHashCode()\n  fullName: PageRange.GetHashCode()\n- uid: System.Windows.Controls.PageRange.op_Equality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)\n  parent: System.Windows.Controls.PageRange\n  isExternal: false\n  name: op_Equality(PageRange, PageRange)\n  nameWithType: PageRange.op_Equality(PageRange, PageRange)\n  fullName: PageRange.op_Equality(PageRange, PageRange)\n- uid: System.Windows.Controls.PageRange.op_Inequality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)\n  parent: System.Windows.Controls.PageRange\n  isExternal: false\n  name: op_Inequality(PageRange, PageRange)\n  nameWithType: PageRange.op_Inequality(PageRange, PageRange)\n  fullName: PageRange.op_Inequality(PageRange, PageRange)\n- uid: System.Windows.Controls.PageRange.PageFrom\n  parent: System.Windows.Controls.PageRange\n  isExternal: false\n  name: PageFrom\n  nameWithType: PageRange.PageFrom\n  fullName: PageRange.PageFrom\n- uid: System.Windows.Controls.PageRange.PageTo\n  parent: System.Windows.Controls.PageRange\n  isExternal: false\n  name: PageTo\n  nameWithType: PageRange.PageTo\n  fullName: PageRange.PageTo\n- uid: System.Windows.Controls.PageRange.ToString\n  parent: System.Windows.Controls.PageRange\n  isExternal: false\n  name: ToString()\n  nameWithType: PageRange.ToString()\n  fullName: PageRange.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Controls.PageRange.#ctor*\n  parent: System.Windows.Controls.PageRange\n  isExternal: false\n  name: PageRange\n  nameWithType: PageRange.PageRange\n  fullName: PageRange.PageRange\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/PageRange.xml\n- uid: System.Windows.Controls.PageRange.Equals*\n  parent: System.Windows.Controls.PageRange\n  isExternal: false\n  name: Equals\n  nameWithType: PageRange.Equals\n  fullName: PageRange.Equals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/PageRange.xml\n- uid: System.Windows.Controls.PageRange.GetHashCode*\n  parent: System.Windows.Controls.PageRange\n  isExternal: false\n  name: GetHashCode\n  nameWithType: PageRange.GetHashCode\n  fullName: PageRange.GetHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/PageRange.xml\n- uid: System.Windows.Controls.PageRange.op_Equality*\n  parent: System.Windows.Controls.PageRange\n  isExternal: false\n  name: op_Equality\n  nameWithType: PageRange.op_Equality\n  fullName: PageRange.op_Equality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/PageRange.xml\n- uid: System.Windows.Controls.PageRange.op_Inequality*\n  parent: System.Windows.Controls.PageRange\n  isExternal: false\n  name: op_Inequality\n  nameWithType: PageRange.op_Inequality\n  fullName: PageRange.op_Inequality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/PageRange.xml\n- uid: System.Windows.Controls.PageRange.PageFrom*\n  parent: System.Windows.Controls.PageRange\n  isExternal: false\n  name: PageFrom\n  nameWithType: PageRange.PageFrom\n  fullName: PageRange.PageFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/PageRange.xml\n- uid: System.Windows.Controls.PageRange.PageTo*\n  parent: System.Windows.Controls.PageRange\n  isExternal: false\n  name: PageTo\n  nameWithType: PageRange.PageTo\n  fullName: PageRange.PageTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/PageRange.xml\n- uid: System.Windows.Controls.PageRange.ToString*\n  parent: System.Windows.Controls.PageRange\n  isExternal: false\n  name: ToString\n  nameWithType: PageRange.ToString\n  fullName: PageRange.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/PageRange.xml\n"}