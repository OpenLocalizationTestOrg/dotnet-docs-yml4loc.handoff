{"nodes":[{"content":"Specifies the scope of memory protection to be applied by the <xref href=\"System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)\"></xref> method.","nodes":[{"pos":[0,209],"content":"Specifies the scope of memory protection to be applied by the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)\"&gt;&lt;/xref&gt;</ph> method.","source":"Specifies the scope of memory protection to be applied by the <xref href=\"System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)\"></xref> method."}],"pos":[651,861],"yaml":true},{"content":"This enumeration is used with the <xref:System.Security.Cryptography.ProtectedMemory.Protect%2A> and <xref:System.Security.Cryptography.ProtectedMemory.Unprotect%2A> methods to protect data in memory.","nodes":[{"pos":[0,200],"content":"This enumeration is used with the <xref:System.Security.Cryptography.ProtectedMemory.Protect%2A> and <xref:System.Security.Cryptography.ProtectedMemory.Unprotect%2A> methods to protect data in memory.","nodes":[{"content":"This enumeration is used with the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.ProtectedMemory.Protect%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.ProtectedMemory.Unprotect%2A&gt;</ph> methods to protect data in memory.","pos":[0,200],"source":"This enumeration is used with the <xref:System.Security.Cryptography.ProtectedMemory.Protect%2A> and <xref:System.Security.Cryptography.ProtectedMemory.Unprotect%2A> methods to protect data in memory."}]}],"pos":[872,1073],"yaml":true,"extradata":"MT"},{"content":"All code in any process can unprotect memory that was protected using the <xref href=\"System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)\"></xref> method.","nodes":[{"pos":[0,221],"content":"All code in any process can unprotect memory that was protected using the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)\"&gt;&lt;/xref&gt;</ph> method.","source":"All code in any process can unprotect memory that was protected using the <xref href=\"System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)\"></xref> method."}],"pos":[2835,3057],"yaml":true},{"content":"Only code running in the same user context as the code that called the <xref href=\"System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)\"></xref> method can unprotect memory.","nodes":[{"pos":[0,239],"content":"Only code running in the same user context as the code that called the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)\"&gt;&lt;/xref&gt;</ph> method can unprotect memory.","source":"Only code running in the same user context as the code that called the <xref href=\"System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)\"></xref> method can unprotect memory."}],"pos":[4151,4391],"yaml":true},{"content":"Only code running in the same process as the code that called the <xref href=\"System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)\"></xref> method can unprotect memory.","nodes":[{"pos":[0,234],"content":"Only code running in the same process as the code that called the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)\"&gt;&lt;/xref&gt;</ph> method can unprotect memory.","source":"Only code running in the same process as the code that called the <xref href=\"System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)\"></xref> method can unprotect memory."}],"pos":[5494,5729],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.MemoryProtectionScope\n  commentId: T:System.Security.Cryptography.MemoryProtectionScope\n  id: MemoryProtectionScope\n  children:\n  - System.Security.Cryptography.MemoryProtectionScope.CrossProcess\n  - System.Security.Cryptography.MemoryProtectionScope.SameLogon\n  - System.Security.Cryptography.MemoryProtectionScope.SameProcess\n  langs:\n  - csharp\n  name: MemoryProtectionScope\n  nameWithType: MemoryProtectionScope\n  fullName: System.Security.Cryptography.MemoryProtectionScope\n  type: Enum\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography\n  summary: Specifies the scope of memory protection to be applied by the <xref href=\"System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)\"></xref> method.\n  remarks: This enumeration is used with the <xref:System.Security.Cryptography.ProtectedMemory.Protect%2A> and <xref:System.Security.Cryptography.ProtectedMemory.Unprotect%2A> methods to protect data in memory.\n  example:\n  - \"The following code example shows how to use data protection.  \\n  \\n [!code-cpp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CPP/memoryprotectionsample.cpp#1)]\\n [!code-csharp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CS/memoryprotectionsample.cs#1)]\\n [!code-vb[Cryptography.MemoryProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/vb/memoryprotectionsample.vb#1)]\"\n  syntax:\n    content: public enum MemoryProtectionScope\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MemoryProtectionScope.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.MemoryProtectionScope.CrossProcess\n  commentId: F:System.Security.Cryptography.MemoryProtectionScope.CrossProcess\n  id: CrossProcess\n  parent: System.Security.Cryptography.MemoryProtectionScope\n  langs:\n  - csharp\n  name: CrossProcess\n  nameWithType: MemoryProtectionScope.CrossProcess\n  fullName: MemoryProtectionScope.CrossProcess\n  type: Field\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography\n  summary: All code in any process can unprotect memory that was protected using the <xref href=\"System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)\"></xref> method.\n  syntax:\n    content: CrossProcess\n    return:\n      type: System.Security.Cryptography.MemoryProtectionScope\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MemoryProtectionScope.xml\n- uid: System.Security.Cryptography.MemoryProtectionScope.SameLogon\n  commentId: F:System.Security.Cryptography.MemoryProtectionScope.SameLogon\n  id: SameLogon\n  parent: System.Security.Cryptography.MemoryProtectionScope\n  langs:\n  - csharp\n  name: SameLogon\n  nameWithType: MemoryProtectionScope.SameLogon\n  fullName: MemoryProtectionScope.SameLogon\n  type: Field\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography\n  summary: Only code running in the same user context as the code that called the <xref href=\"System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)\"></xref> method can unprotect memory.\n  syntax:\n    content: SameLogon\n    return:\n      type: System.Security.Cryptography.MemoryProtectionScope\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MemoryProtectionScope.xml\n- uid: System.Security.Cryptography.MemoryProtectionScope.SameProcess\n  commentId: F:System.Security.Cryptography.MemoryProtectionScope.SameProcess\n  id: SameProcess\n  parent: System.Security.Cryptography.MemoryProtectionScope\n  langs:\n  - csharp\n  name: SameProcess\n  nameWithType: MemoryProtectionScope.SameProcess\n  fullName: MemoryProtectionScope.SameProcess\n  type: Field\n  assemblies:\n  - System.Security\n  namespace: System.Security.Cryptography\n  summary: Only code running in the same process as the code that called the <xref href=\"System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)\"></xref> method can unprotect memory.\n  syntax:\n    content: SameProcess\n    return:\n      type: System.Security.Cryptography.MemoryProtectionScope\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/MemoryProtectionScope.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Security.Cryptography.MemoryProtectionScope.CrossProcess\n  parent: System.Security.Cryptography.MemoryProtectionScope\n  isExternal: false\n  name: CrossProcess\n  nameWithType: MemoryProtectionScope.CrossProcess\n  fullName: MemoryProtectionScope.CrossProcess\n- uid: System.Security.Cryptography.MemoryProtectionScope\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: MemoryProtectionScope\n  nameWithType: MemoryProtectionScope\n  fullName: System.Security.Cryptography.MemoryProtectionScope\n- uid: System.Security.Cryptography.MemoryProtectionScope.SameLogon\n  parent: System.Security.Cryptography.MemoryProtectionScope\n  isExternal: false\n  name: SameLogon\n  nameWithType: MemoryProtectionScope.SameLogon\n  fullName: MemoryProtectionScope.SameLogon\n- uid: System.Security.Cryptography.MemoryProtectionScope.SameProcess\n  parent: System.Security.Cryptography.MemoryProtectionScope\n  isExternal: false\n  name: SameProcess\n  nameWithType: MemoryProtectionScope.SameProcess\n  fullName: MemoryProtectionScope.SameProcess\n"}