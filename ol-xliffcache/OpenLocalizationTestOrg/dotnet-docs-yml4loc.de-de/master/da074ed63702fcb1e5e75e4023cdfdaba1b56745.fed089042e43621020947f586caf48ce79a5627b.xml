{"nodes":[{"content":"Implement to participate in the creation or choosing of a <xref href=\"System.ServiceModel.InstanceContext\"></xref> object, especially to enable shared sessions.","nodes":[{"pos":[0,160],"content":"Implement to participate in the creation or choosing of a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> object, especially to enable shared sessions.","source":"Implement to participate in the creation or choosing of a <xref href=\"System.ServiceModel.InstanceContext\"></xref> object, especially to enable shared sessions."}],"pos":[1114,1275],"yaml":true},{"content":"Implement the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> interface to provide the appropriate <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> object to the system. Typically, this interface is implemented to support shared sessions, enable service instance pooling, control lifetimes of service instances, or to group contexts among clients.  \n  \n For example, to implement sharing, insert a custom <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> to decide which session or call from a client is associated with which <xref:System.ServiceModel.InstanceContext> object. For an example that demonstrates the sharing of instance contexts, see [InstanceContextSharing](http://msdn.microsoft.com/en-us/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230).  \n  \n> [!NOTE]\n>  When an <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> is inserted into [!INCLUDE[indigo1](~/includes/indigo1-md.md)], the normal property that controls the creation of <xref:System.ServiceModel.InstanceContext> objects (the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property) is no longer checked and has no effect.  \n  \n A more generic mechanism by which you can initialize <xref:System.ServiceModel.InstanceContext> objects when created (for example, to attach custom extensions to each <xref:System.ServiceModel.InstanceContext>) is the <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=fullName>.","nodes":[{"pos":[0,381],"content":"Implement the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> interface to provide the appropriate <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> object to the system. Typically, this interface is implemented to support shared sessions, enable service instance pooling, control lifetimes of service instances, or to group contexts among clients.","nodes":[{"content":"Implement the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> interface to provide the appropriate <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> object to the system. Typically, this interface is implemented to support shared sessions, enable service instance pooling, control lifetimes of service instances, or to group contexts among clients.","pos":[0,381],"nodes":[{"content":"Implement the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider&gt;</ph> interface to provide the appropriate <ph id=\"ph2\">&lt;xref:System.ServiceModel.InstanceContext?displayProperty=fullName&gt;</ph> object to the system.","pos":[0,203],"source":"Implement the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> interface to provide the appropriate <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> object to the system."},{"content":"Typically, this interface is implemented to support shared sessions, enable service instance pooling, control lifetimes of service instances, or to group contexts among clients.","pos":[204,381]}]}]},{"pos":[388,790],"content":"For example, to implement sharing, insert a custom <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> to decide which session or call from a client is associated with which <xref:System.ServiceModel.InstanceContext> object. For an example that demonstrates the sharing of instance contexts, see [InstanceContextSharing](http://msdn.microsoft.com/en-us/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230).","nodes":[{"content":"For example, to implement sharing, insert a custom <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider&gt;</ph> to decide which session or call from a client is associated with which <ph id=\"ph2\">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object.","pos":[0,235],"source":"For example, to implement sharing, insert a custom <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> to decide which session or call from a client is associated with which <xref:System.ServiceModel.InstanceContext> object."},{"content":"For an example that demonstrates the sharing of instance contexts, see <bpt id=\"p1\">[</bpt>InstanceContextSharing<ept id=\"p1\">](http://msdn.microsoft.com/en-us/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230)</ept>.","pos":[236,402],"source":" For an example that demonstrates the sharing of instance contexts, see [InstanceContextSharing](http://msdn.microsoft.com/en-us/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230)."}]},{"pos":[798,1199],"content":"[!NOTE]\n When an <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> is inserted into [!INCLUDE[indigo1](~/includes/indigo1-md.md)], the normal property that controls the creation of <xref:System.ServiceModel.InstanceContext> objects (the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property) is no longer checked and has no effect.","leadings":["","> "],"nodes":[{"content":"When an <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider&gt;</ph> is inserted into <ph id=\"ph2\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>, the normal property that controls the creation of <ph id=\"ph3\">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> objects (the <ph id=\"ph4\">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName&gt;</ph> property) is no longer checked and has no effect.","pos":[9,399],"source":" When an <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> is inserted into [!INCLUDE[indigo1](~/includes/indigo1-md.md)], the normal property that controls the creation of <xref:System.ServiceModel.InstanceContext> objects (the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property) is no longer checked and has no effect."}]},{"pos":[1206,1515],"content":"A more generic mechanism by which you can initialize <xref:System.ServiceModel.InstanceContext> objects when created (for example, to attach custom extensions to each <xref:System.ServiceModel.InstanceContext>) is the <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=fullName>.","nodes":[{"content":"A more generic mechanism by which you can initialize <ph id=\"ph1\">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> objects when created (for example, to attach custom extensions to each <ph id=\"ph2\">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph>) is the <ph id=\"ph3\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=fullName&gt;</ph>.","pos":[0,309],"source":"A more generic mechanism by which you can initialize <xref:System.ServiceModel.InstanceContext> objects when created (for example, to attach custom extensions to each <xref:System.ServiceModel.InstanceContext>) is the <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=fullName>."}]}],"pos":[1286,2811],"yaml":true,"extradata":"MT"},{"content":"Called when a new message is received.","nodes":[{"pos":[0,38],"content":"Called when a new message is received.","nodes":[{"content":"Called when a new message is received.","pos":[0,38]}]}],"pos":[4326,4365],"yaml":true},{"content":"The <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A> method is called when a message is received. Return the <xref:System.ServiceModel.InstanceContext> object that you want to process the message, or `null`. In the case of `null`, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] creates a new <xref:System.ServiceModel.InstanceContext> object for the message and then calls the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A> method.  \n  \n If you return `null`, the new <xref:System.ServiceModel.InstanceContext> object goes through the throttling system and increments the count of <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A?displayProperty=fullName>.","nodes":[{"pos":[0,519],"content":"The <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A> method is called when a message is received. Return the <xref:System.ServiceModel.InstanceContext> object that you want to process the message, or `null`. In the case of `null`, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] creates a new <xref:System.ServiceModel.InstanceContext> object for the message and then calls the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A&gt;</ph> method is called when a message is received.","pos":[0,141],"source":"The <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A> method is called when a message is received."},{"content":"Return the <ph id=\"ph1\">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object that you want to process the message, or <ph id=\"ph2\">`null`</ph>.","pos":[142,251],"source":" Return the <xref:System.ServiceModel.InstanceContext> object that you want to process the message, or `null`."},{"content":"In the case of <ph id=\"ph1\">`null`</ph>, <ph id=\"ph2\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> creates a new <ph id=\"ph3\">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object for the message and then calls the <ph id=\"ph4\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A&gt;</ph> method.","pos":[252,519],"source":" In the case of `null`, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] creates a new <xref:System.ServiceModel.InstanceContext> object for the message and then calls the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A> method."}]},{"pos":[526,774],"content":"If you return <ph id=\"ph1\">`null`</ph>, the new <ph id=\"ph2\">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object goes through the throttling system and increments the count of <ph id=\"ph3\">&lt;xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A?displayProperty=fullName&gt;</ph>.","source":"If you return `null`, the new <xref:System.ServiceModel.InstanceContext> object goes through the throttling system and increments the count of <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A?displayProperty=fullName>."}],"pos":[4376,5155],"yaml":true,"extradata":"MT"},{"content":"The incoming message.","nodes":[{"pos":[0,21],"content":"The incoming message.","nodes":[{"content":"The incoming message.","pos":[0,21]}]}],"pos":[5443,5465],"yaml":true},{"content":"The channel that received the message.","nodes":[{"pos":[0,38],"content":"The channel that received the message.","nodes":[{"content":"The channel that received the message.","pos":[0,38]}]}],"pos":[5550,5589],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> object that is used to process the message; return `null` to instruct [!INCLUDE[indigo2](~/includes/indigo2-md.md)] to create a new <xref href=\"System.ServiceModel.InstanceContext\"></xref> object.","nodes":[{"pos":[0,257],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> object that is used to process the message; return <ph id=\"ph2\">`null`</ph> to instruct <ph id=\"ph3\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> to create a new <ph id=\"ph4\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> object.","source":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> object that is used to process the message; return `null` to instruct [!INCLUDE[indigo2](~/includes/indigo2-md.md)] to create a new <xref href=\"System.ServiceModel.InstanceContext\"></xref> object."}],"pos":[5668,5926],"yaml":true},{"content":"Called when `null` is returned from the <xref href=\"System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)\"></xref> method.","nodes":[{"pos":[0,225],"content":"Called when <ph id=\"ph1\">`null`</ph> is returned from the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)\"&gt;&lt;/xref&gt;</ph> method.","source":"Called when `null` is returned from the <xref href=\"System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)\"></xref> method."}],"pos":[7625,7851],"yaml":true},{"content":"<xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A> is called when <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A> returns `null` and a new <xref:System.ServiceModel.InstanceContext> object is created. This method is called to notify you that a new <xref:System.ServiceModel.InstanceContext> has been created.","nodes":[{"pos":[0,394],"content":"<xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A> is called when <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A> returns `null` and a new <xref:System.ServiceModel.InstanceContext> object is created. This method is called to notify you that a new <xref:System.ServiceModel.InstanceContext> has been created.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A&gt;</ph> is called when <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A&gt;</ph> returns <ph id=\"ph3\">`null`</ph> and a new <ph id=\"ph4\">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object is created.","pos":[0,286],"source":"<xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A> is called when <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A> returns `null` and a new <xref:System.ServiceModel.InstanceContext> object is created."},{"content":"This method is called to notify you that a new <ph id=\"ph1\">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> has been created.","pos":[287,394],"source":" This method is called to notify you that a new <xref:System.ServiceModel.InstanceContext> has been created."}]}],"pos":[7862,8257],"yaml":true,"extradata":"MT"},{"content":"The new <xref href=\"System.ServiceModel.InstanceContext\"></xref> object.","nodes":[{"pos":[0,72],"content":"The new <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> object.","source":"The new <xref href=\"System.ServiceModel.InstanceContext\"></xref> object."}],"pos":[8573,8646],"yaml":true},{"content":"The incoming message.","nodes":[{"pos":[0,21],"content":"The incoming message.","nodes":[{"content":"The incoming message.","pos":[0,21]}]}],"pos":[8732,8754],"yaml":true},{"content":"The channel that received the message.","nodes":[{"pos":[0,38],"content":"The channel that received the message.","nodes":[{"content":"The channel that received the message.","pos":[0,38]}]}],"pos":[8839,8878],"yaml":true},{"content":"Called when all <xref href=\"System.ServiceModel.InstanceContext\"></xref> activities have completed to enable implementers to prevent the <xref href=\"System.ServiceModel.InstanceContext\"></xref> from being recycled.","nodes":[{"pos":[0,214],"content":"Called when all <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> activities have completed to enable implementers to prevent the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> from being recycled.","source":"Called when all <xref href=\"System.ServiceModel.InstanceContext\"></xref> activities have completed to enable implementers to prevent the <xref href=\"System.ServiceModel.InstanceContext\"></xref> from being recycled."}],"pos":[10165,10380],"yaml":true},{"content":"<xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> is called when [!INCLUDE[indigo2](~/includes/indigo2-md.md)] is about to close and recycle an idle <xref:System.ServiceModel.InstanceContext> object so that you can inform the runtime whether to continue doing so.  \n  \n For an example that demonstrates the sharing of instance contexts, see [InstanceContextSharing](http://msdn.microsoft.com/en-us/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230).","nodes":[{"pos":[0,286],"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A&gt;</ph> is called when <ph id=\"ph2\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> is about to close and recycle an idle <ph id=\"ph3\">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object so that you can inform the runtime whether to continue doing so.","source":"<xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> is called when [!INCLUDE[indigo2](~/includes/indigo2-md.md)] is about to close and recycle an idle <xref:System.ServiceModel.InstanceContext> object so that you can inform the runtime whether to continue doing so."},{"pos":[293,459],"content":"For an example that demonstrates the sharing of instance contexts, see <bpt id=\"p1\">[</bpt>InstanceContextSharing<ept id=\"p1\">](http://msdn.microsoft.com/en-us/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230)</ept>.","source":"For an example that demonstrates the sharing of instance contexts, see [InstanceContextSharing](http://msdn.microsoft.com/en-us/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230)."}],"pos":[10391,10855],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> object that is considered idle.","nodes":[{"pos":[0,92],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> object that is considered idle.","source":"The <xref href=\"System.ServiceModel.InstanceContext\"></xref> object that is considered idle."}],"pos":[11061,11154],"yaml":true},{"content":"`true` if [!INCLUDE[indigo1](~/includes/indigo1-md.md)] is to close and recycle the <xref href=\"System.ServiceModel.InstanceContext\"></xref> object and adjust the value of <xref href=\"System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,283],"content":"<ph id=\"ph1\">`true`</ph> if <ph id=\"ph2\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> is to close and recycle the <ph id=\"ph3\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> object and adjust the value of <ph id=\"ph4\">&lt;xref href=\"System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph5\">`false`</ph>.","source":"`true` if [!INCLUDE[indigo1](~/includes/indigo1-md.md)] is to close and recycle the <xref href=\"System.ServiceModel.InstanceContext\"></xref> object and adjust the value of <xref href=\"System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances\"></xref>; otherwise, `false`."}],"pos":[11212,11498],"yaml":true},{"content":"Called when the <xref href=\"System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)\"></xref> method returns `false` to enable implementers to provide a callback to notify [!INCLUDE[indigo2](~/includes/indigo2-md.md)] when the <xref href=\"System.ServiceModel.InstanceContext\"></xref> object is finished.","nodes":[{"pos":[0,346],"content":"Called when the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)\"&gt;&lt;/xref&gt;</ph> method returns <ph id=\"ph2\">`false`</ph> to enable implementers to provide a callback to notify <ph id=\"ph3\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> when the <ph id=\"ph4\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> object is finished.","source":"Called when the <xref href=\"System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)\"></xref> method returns `false` to enable implementers to provide a callback to notify [!INCLUDE[indigo2](~/includes/indigo2-md.md)] when the <xref href=\"System.ServiceModel.InstanceContext\"></xref> object is finished."}],"pos":[13054,13401],"yaml":true},{"content":"The <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle%2A> method is called when the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> method returns `false` to enable you to provide [!INCLUDE[indigo2](~/includes/indigo2-md.md)] with a <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=fullName> object that you use to inform the runtime that the <xref:System.ServiceModel.InstanceContext> has finished its work. When the <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=fullName> object notifies the runtime that the <xref:System.ServiceModel.InstanceContext> has finished its work, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] calls <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> once again. This cycle continues until <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> returns `true` and the context is closed and recycled.","nodes":[{"pos":[0,983],"content":"The <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle%2A> method is called when the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> method returns `false` to enable you to provide [!INCLUDE[indigo2](~/includes/indigo2-md.md)] with a <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=fullName> object that you use to inform the runtime that the <xref:System.ServiceModel.InstanceContext> has finished its work. When the <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=fullName> object notifies the runtime that the <xref:System.ServiceModel.InstanceContext> has finished its work, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] calls <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> once again. This cycle continues until <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> returns `true` and the context is closed and recycled.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle%2A&gt;</ph> method is called when the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A&gt;</ph> method returns <ph id=\"ph3\">`false`</ph> to enable you to provide <ph id=\"ph4\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> with a <ph id=\"ph5\">&lt;xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=fullName&gt;</ph> object that you use to inform the runtime that the <ph id=\"ph6\">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> has finished its work.","pos":[0,488],"source":"The <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle%2A> method is called when the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> method returns `false` to enable you to provide [!INCLUDE[indigo2](~/includes/indigo2-md.md)] with a <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=fullName> object that you use to inform the runtime that the <xref:System.ServiceModel.InstanceContext> has finished its work."},{"content":"When the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=fullName&gt;</ph> object notifies the runtime that the <ph id=\"ph2\">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> has finished its work, <ph id=\"ph3\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> calls <ph id=\"ph4\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A&gt;</ph> once again.","pos":[489,828],"source":" When the <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=fullName> object notifies the runtime that the <xref:System.ServiceModel.InstanceContext> has finished its work, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] calls <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> once again."},{"content":"This cycle continues until <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A&gt;</ph> returns <ph id=\"ph2\">`true`</ph> and the context is closed and recycled.","pos":[829,983],"source":" This cycle continues until <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> returns `true` and the context is closed and recycled."}]}],"pos":[13412,14396],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.Dispatcher.InstanceContextIdleCallback\"></xref> object that notifies [!INCLUDE[indigo2](~/includes/indigo2-md.md)] when the <xref href=\"System.ServiceModel.InstanceContext\"></xref> object is to be closed and recycled.","nodes":[{"pos":[0,253],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.InstanceContextIdleCallback\"&gt;&lt;/xref&gt;</ph> object that notifies <ph id=\"ph2\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> when the <ph id=\"ph3\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> object is to be closed and recycled.","source":"The <xref href=\"System.ServiceModel.Dispatcher.InstanceContextIdleCallback\"></xref> object that notifies [!INCLUDE[indigo2](~/includes/indigo2-md.md)] when the <xref href=\"System.ServiceModel.InstanceContext\"></xref> object is to be closed and recycled."}],"pos":[14691,14945],"yaml":true},{"content":"The current <xref href=\"System.ServiceModel.InstanceContext\"></xref>.","nodes":[{"pos":[0,69],"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph>.","source":"The current <xref href=\"System.ServiceModel.InstanceContext\"></xref>."}],"pos":[15038,15108],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider\n  commentId: T:System.ServiceModel.Dispatcher.IInstanceContextProvider\n  id: IInstanceContextProvider\n  children:\n  - System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)\n  - System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)\n  - System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)\n  - System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)\n  langs:\n  - csharp\n  name: IInstanceContextProvider\n  nameWithType: IInstanceContextProvider\n  fullName: System.ServiceModel.Dispatcher.IInstanceContextProvider\n  type: Interface\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Implement to participate in the creation or choosing of a <xref href=\"System.ServiceModel.InstanceContext\"></xref> object, especially to enable shared sessions.\n  remarks: \"Implement the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> interface to provide the appropriate <xref:System.ServiceModel.InstanceContext?displayProperty=fullName> object to the system. Typically, this interface is implemented to support shared sessions, enable service instance pooling, control lifetimes of service instances, or to group contexts among clients.  \\n  \\n For example, to implement sharing, insert a custom <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> to decide which session or call from a client is associated with which <xref:System.ServiceModel.InstanceContext> object. For an example that demonstrates the sharing of instance contexts, see [InstanceContextSharing](http://msdn.microsoft.com/en-us/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230).  \\n  \\n> [!NOTE]\\n>  When an <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> is inserted into [!INCLUDE[indigo1](~/includes/indigo1-md.md)], the normal property that controls the creation of <xref:System.ServiceModel.InstanceContext> objects (the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName> property) is no longer checked and has no effect.  \\n  \\n A more generic mechanism by which you can initialize <xref:System.ServiceModel.InstanceContext> objects when created (for example, to attach custom extensions to each <xref:System.ServiceModel.InstanceContext>) is the <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=fullName>.\"\n  syntax:\n    content: public interface IInstanceContextProvider\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IInstanceContextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)\n  commentId: M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)\n  id: GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)\n  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider\n  langs:\n  - csharp\n  name: GetExistingInstanceContext(Message, IContextChannel)\n  nameWithType: IInstanceContextProvider.GetExistingInstanceContext(Message, IContextChannel)\n  fullName: IInstanceContextProvider.GetExistingInstanceContext(Message, IContextChannel)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Called when a new message is received.\n  remarks: \"The <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A> method is called when a message is received. Return the <xref:System.ServiceModel.InstanceContext> object that you want to process the message, or `null`. In the case of `null`, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] creates a new <xref:System.ServiceModel.InstanceContext> object for the message and then calls the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A> method.  \\n  \\n If you return `null`, the new <xref:System.ServiceModel.InstanceContext> object goes through the throttling system and increments the count of <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public System.ServiceModel.InstanceContext GetExistingInstanceContext (System.ServiceModel.Channels.Message message, System.ServiceModel.IContextChannel channel);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The incoming message.\n    - id: channel\n      type: System.ServiceModel.IContextChannel\n      description: The channel that received the message.\n    return:\n      type: System.ServiceModel.InstanceContext\n      description: The <xref href=\"System.ServiceModel.InstanceContext\"></xref> object that is used to process the message; return `null` to instruct [!INCLUDE[indigo2](~/includes/indigo2-md.md)] to create a new <xref href=\"System.ServiceModel.InstanceContext\"></xref> object.\n  overload: System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IInstanceContextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)\n  commentId: M:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)\n  id: InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)\n  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider\n  langs:\n  - csharp\n  name: InitializeInstanceContext(InstanceContext, Message, IContextChannel)\n  nameWithType: IInstanceContextProvider.InitializeInstanceContext(InstanceContext, Message, IContextChannel)\n  fullName: IInstanceContextProvider.InitializeInstanceContext(InstanceContext, Message, IContextChannel)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Called when `null` is returned from the <xref href=\"System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)\"></xref> method.\n  remarks: <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A> is called when <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A> returns `null` and a new <xref:System.ServiceModel.InstanceContext> object is created. This method is called to notify you that a new <xref:System.ServiceModel.InstanceContext> has been created.\n  syntax:\n    content: public void InitializeInstanceContext (System.ServiceModel.InstanceContext instanceContext, System.ServiceModel.Channels.Message message, System.ServiceModel.IContextChannel channel);\n    parameters:\n    - id: instanceContext\n      type: System.ServiceModel.InstanceContext\n      description: The new <xref href=\"System.ServiceModel.InstanceContext\"></xref> object.\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The incoming message.\n    - id: channel\n      type: System.ServiceModel.IContextChannel\n      description: The channel that received the message.\n  overload: System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IInstanceContextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)\n  commentId: M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)\n  id: IsIdle(System.ServiceModel.InstanceContext)\n  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider\n  langs:\n  - csharp\n  name: IsIdle(InstanceContext)\n  nameWithType: IInstanceContextProvider.IsIdle(InstanceContext)\n  fullName: IInstanceContextProvider.IsIdle(InstanceContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Called when all <xref href=\"System.ServiceModel.InstanceContext\"></xref> activities have completed to enable implementers to prevent the <xref href=\"System.ServiceModel.InstanceContext\"></xref> from being recycled.\n  remarks: \"<xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> is called when [!INCLUDE[indigo2](~/includes/indigo2-md.md)] is about to close and recycle an idle <xref:System.ServiceModel.InstanceContext> object so that you can inform the runtime whether to continue doing so.  \\n  \\n For an example that demonstrates the sharing of instance contexts, see [InstanceContextSharing](http://msdn.microsoft.com/en-us/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230).\"\n  syntax:\n    content: public bool IsIdle (System.ServiceModel.InstanceContext instanceContext);\n    parameters:\n    - id: instanceContext\n      type: System.ServiceModel.InstanceContext\n      description: The <xref href=\"System.ServiceModel.InstanceContext\"></xref> object that is considered idle.\n    return:\n      type: System.Boolean\n      description: '`true` if [!INCLUDE[indigo1](~/includes/indigo1-md.md)] is to close and recycle the <xref href=\"System.ServiceModel.InstanceContext\"></xref> object and adjust the value of <xref href=\"System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances\"></xref>; otherwise, `false`.'\n  overload: System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IInstanceContextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)\n  commentId: M:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)\n  id: NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)\n  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider\n  langs:\n  - csharp\n  name: NotifyIdle(InstanceContextIdleCallback, InstanceContext)\n  nameWithType: IInstanceContextProvider.NotifyIdle(InstanceContextIdleCallback, InstanceContext)\n  fullName: IInstanceContextProvider.NotifyIdle(InstanceContextIdleCallback, InstanceContext)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Called when the <xref href=\"System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)\"></xref> method returns `false` to enable implementers to provide a callback to notify [!INCLUDE[indigo2](~/includes/indigo2-md.md)] when the <xref href=\"System.ServiceModel.InstanceContext\"></xref> object is finished.\n  remarks: The <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle%2A> method is called when the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> method returns `false` to enable you to provide [!INCLUDE[indigo2](~/includes/indigo2-md.md)] with a <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=fullName> object that you use to inform the runtime that the <xref:System.ServiceModel.InstanceContext> has finished its work. When the <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=fullName> object notifies the runtime that the <xref:System.ServiceModel.InstanceContext> has finished its work, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] calls <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> once again. This cycle continues until <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> returns `true` and the context is closed and recycled.\n  syntax:\n    content: public void NotifyIdle (System.ServiceModel.Dispatcher.InstanceContextIdleCallback callback, System.ServiceModel.InstanceContext instanceContext);\n    parameters:\n    - id: callback\n      type: System.ServiceModel.Dispatcher.InstanceContextIdleCallback\n      description: The <xref href=\"System.ServiceModel.Dispatcher.InstanceContextIdleCallback\"></xref> object that notifies [!INCLUDE[indigo2](~/includes/indigo2-md.md)] when the <xref href=\"System.ServiceModel.InstanceContext\"></xref> object is to be closed and recycled.\n    - id: instanceContext\n      type: System.ServiceModel.InstanceContext\n      description: The current <xref href=\"System.ServiceModel.InstanceContext\"></xref>.\n  overload: System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IInstanceContextProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)\n  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider\n  isExternal: false\n  name: GetExistingInstanceContext(Message, IContextChannel)\n  nameWithType: IInstanceContextProvider.GetExistingInstanceContext(Message, IContextChannel)\n  fullName: IInstanceContextProvider.GetExistingInstanceContext(Message, IContextChannel)\n- uid: System.ServiceModel.InstanceContext\n  parent: System.ServiceModel\n  isExternal: false\n  name: InstanceContext\n  nameWithType: InstanceContext\n  fullName: System.ServiceModel.InstanceContext\n- uid: System.ServiceModel.Channels.Message\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: Message\n  nameWithType: Message\n  fullName: System.ServiceModel.Channels.Message\n- uid: System.ServiceModel.IContextChannel\n  parent: System.ServiceModel\n  isExternal: false\n  name: IContextChannel\n  nameWithType: IContextChannel\n  fullName: System.ServiceModel.IContextChannel\n- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)\n  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider\n  isExternal: false\n  name: InitializeInstanceContext(InstanceContext, Message, IContextChannel)\n  nameWithType: IInstanceContextProvider.InitializeInstanceContext(InstanceContext, Message, IContextChannel)\n  fullName: IInstanceContextProvider.InitializeInstanceContext(InstanceContext, Message, IContextChannel)\n- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)\n  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider\n  isExternal: false\n  name: IsIdle(InstanceContext)\n  nameWithType: IInstanceContextProvider.IsIdle(InstanceContext)\n  fullName: IInstanceContextProvider.IsIdle(InstanceContext)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)\n  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider\n  isExternal: false\n  name: NotifyIdle(InstanceContextIdleCallback, InstanceContext)\n  nameWithType: IInstanceContextProvider.NotifyIdle(InstanceContextIdleCallback, InstanceContext)\n  fullName: IInstanceContextProvider.NotifyIdle(InstanceContextIdleCallback, InstanceContext)\n- uid: System.ServiceModel.Dispatcher.InstanceContextIdleCallback\n  parent: System.ServiceModel.Dispatcher\n  isExternal: false\n  name: InstanceContextIdleCallback\n  nameWithType: InstanceContextIdleCallback\n  fullName: System.ServiceModel.Dispatcher.InstanceContextIdleCallback\n- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext*\n  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider\n  isExternal: false\n  name: GetExistingInstanceContext\n  nameWithType: IInstanceContextProvider.GetExistingInstanceContext\n  fullName: IInstanceContextProvider.GetExistingInstanceContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IInstanceContextProvider.xml\n- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext*\n  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider\n  isExternal: false\n  name: InitializeInstanceContext\n  nameWithType: IInstanceContextProvider.InitializeInstanceContext\n  fullName: IInstanceContextProvider.InitializeInstanceContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IInstanceContextProvider.xml\n- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle*\n  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider\n  isExternal: false\n  name: IsIdle\n  nameWithType: IInstanceContextProvider.IsIdle\n  fullName: IInstanceContextProvider.IsIdle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IInstanceContextProvider.xml\n- uid: System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle*\n  parent: System.ServiceModel.Dispatcher.IInstanceContextProvider\n  isExternal: false\n  name: NotifyIdle\n  nameWithType: IInstanceContextProvider.NotifyIdle\n  fullName: IInstanceContextProvider.NotifyIdle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/IInstanceContextProvider.xml\n"}