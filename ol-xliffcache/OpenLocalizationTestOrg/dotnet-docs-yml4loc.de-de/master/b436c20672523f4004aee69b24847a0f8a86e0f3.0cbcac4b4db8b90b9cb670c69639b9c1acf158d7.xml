{"nodes":[{"content":"A system-provided <xref href=\"System.ServiceModel.Persistence.PersistenceProviderFactory\"></xref> implementation used to create a <xref href=\"System.ServiceModel.Persistence.LockingPersistenceProvider\"></xref> instance that uses a SQL database to store persisted service state data.","nodes":[{"pos":[0,282],"content":"A system-provided <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Persistence.PersistenceProviderFactory\"&gt;&lt;/xref&gt;</ph> implementation used to create a <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Persistence.LockingPersistenceProvider\"&gt;&lt;/xref&gt;</ph> instance that uses a SQL database to store persisted service state data.","source":"A system-provided <xref href=\"System.ServiceModel.Persistence.PersistenceProviderFactory\"></xref> implementation used to create a <xref href=\"System.ServiceModel.Persistence.LockingPersistenceProvider\"></xref> instance that uses a SQL database to store persisted service state data."}],"pos":[2170,2453],"yaml":true},{"content":"The <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class represents a factory class for a fully-functional, durable service persistence provider. You can use this system-provided provider to persist and retrieve state information about a durable [!INCLUDE[indigo2](~/includes/indigo2-md.md)] service.  \n  \n In addition to persistence, the provider created by the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class implements locking of service state data records by inheriting from the abstract <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> class.  Methods that interact with persisted data (such as <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A> or <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A>) have an optional parameter (`lockInstance`) that defines whether locks on the data in question are released or maintained.  \n  \n> [!NOTE]\n>  <xref:System.ServiceModel.Persistence.PersistenceException> exceptions thrown by <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> do not have their exception details hidden by default. To protect against security vulnerabilities, these details can be hidden by setting <xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A> to `false`.  \n  \n> [!NOTE]\n>  The SQL Persistence Provider stores and retrieves data from a SQL Server database. The host must create a secure SQL Server environment to protect against attackers gaining read/write access to the instance state either in the database or on the wire between the application and the database.","nodes":[{"pos":[0,322],"content":"The <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class represents a factory class for a fully-functional, durable service persistence provider. You can use this system-provided provider to persist and retrieve state information about a durable [!INCLUDE[indigo2](~/includes/indigo2-md.md)] service.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> class represents a factory class for a fully-functional, durable service persistence provider.","pos":[0,167],"source":"The <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class represents a factory class for a fully-functional, durable service persistence provider."},{"content":"You can use this system-provided provider to persist and retrieve state information about a durable <ph id=\"ph1\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> service.","pos":[168,322],"source":" You can use this system-provided provider to persist and retrieve state information about a durable [!INCLUDE[indigo2](~/includes/indigo2-md.md)] service."}]},{"pos":[329,944],"content":"In addition to persistence, the provider created by the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class implements locking of service state data records by inheriting from the abstract <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> class.  Methods that interact with persisted data (such as <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A> or <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A>) have an optional parameter (`lockInstance`) that defines whether locks on the data in question are released or maintained.","nodes":[{"content":"In addition to persistence, the provider created by the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> class implements locking of service state data records by inheriting from the abstract <ph id=\"ph2\">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider&gt;</ph> class.","pos":[0,284],"source":"In addition to persistence, the provider created by the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class implements locking of service state data records by inheriting from the abstract <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> class."},{"content":"Methods that interact with persisted data (such as <ph id=\"ph1\">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A&gt;</ph>) have an optional parameter (<ph id=\"ph3\">`lockInstance`</ph>) that defines whether locks on the data in question are released or maintained.","pos":[286,615],"source":"  Methods that interact with persisted data (such as <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A> or <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A>) have an optional parameter (`lockInstance`) that defines whether locks on the data in question are released or maintained."}]},{"pos":[952,1357],"content":"[!NOTE]\n <xref:System.ServiceModel.Persistence.PersistenceException> exceptions thrown by <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> do not have their exception details hidden by default. To protect against security vulnerabilities, these details can be hidden by setting <xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A> to `false`.","leadings":["","> "],"nodes":[{"content":" <xref:System.ServiceModel.Persistence.PersistenceException> exceptions thrown by <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> do not have their exception details hidden by default. To protect against security vulnerabilities, these details can be hidden by setting <xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A> to `false`.","pos":[8,403],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Persistence.PersistenceException&gt;</ph> exceptions thrown by <ph id=\"ph2\">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> do not have their exception details hidden by default.","pos":[1,205],"source":" <xref:System.ServiceModel.Persistence.PersistenceException> exceptions thrown by <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> do not have their exception details hidden by default."},{"content":"To protect against security vulnerabilities, these details can be hidden by setting <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A&gt;</ph> to <ph id=\"ph2\">`false`</ph>.","pos":[206,395],"source":" To protect against security vulnerabilities, these details can be hidden by setting <xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A> to `false`."}]}]},{"pos":[1365,1668],"content":"[!NOTE]\n The SQL Persistence Provider stores and retrieves data from a SQL Server database. The host must create a secure SQL Server environment to protect against attackers gaining read/write access to the instance state either in the database or on the wire between the application and the database.","leadings":["","> "],"nodes":[{"content":" The SQL Persistence Provider stores and retrieves data from a SQL Server database. The host must create a secure SQL Server environment to protect against attackers gaining read/write access to the instance state either in the database or on the wire between the application and the database.","pos":[8,301],"nodes":[{"content":"The SQL Persistence Provider stores and retrieves data from a SQL Server database.","pos":[1,83]},{"content":"The host must create a secure SQL Server environment to protect against attackers gaining read/write access to the instance state either in the database or on the wire between the application and the database.","pos":[84,293]}]}]}],"pos":[2464,4143],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"></xref> class, configured with the specified parameter collection.","nodes":[{"pos":[0,175],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"&gt;&lt;/xref&gt;</ph> class, configured with the specified parameter collection.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"></xref> class, configured with the specified parameter collection."}],"pos":[8343,8519],"yaml":true},{"content":"This constructor can be used to arbitrarily specify `lockTimeout`, `connectionString`, and `serializeAsText` without specifying the other parameters as required by the other constructors (for example, to specify the `connectionString` and `lockTimeout` parameters without specifying the `serializeAsText` parameter.)","nodes":[{"pos":[0,316],"content":"This constructor can be used to arbitrarily specify <ph id=\"ph1\">`lockTimeout`</ph>, <ph id=\"ph2\">`connectionString`</ph>, and <ph id=\"ph3\">`serializeAsText`</ph> without specifying the other parameters as required by the other constructors (for example, to specify the <ph id=\"ph4\">`connectionString`</ph> and <ph id=\"ph5\">`lockTimeout`</ph> parameters without specifying the <ph id=\"ph6\">`serializeAsText`</ph> parameter.)","source":"This constructor can be used to arbitrarily specify `lockTimeout`, `connectionString`, and `serializeAsText` without specifying the other parameters as required by the other constructors (for example, to specify the `connectionString` and `lockTimeout` parameters without specifying the `serializeAsText` parameter.)"}],"pos":[8530,8847],"yaml":true,"extradata":"MT"},{"content":"The collection of parameters used by the new persistence provider factory. Valid parameters include `lockTimeout`, `connectionStringName`, and `serializeAsText`.","nodes":[{"pos":[0,161],"content":"The collection of parameters used by the new persistence provider factory. Valid parameters include `lockTimeout`, `connectionStringName`, and `serializeAsText`.","nodes":[{"content":"The collection of parameters used by the new persistence provider factory.","pos":[0,74]},{"content":"Valid parameters include <ph id=\"ph1\">`lockTimeout`</ph>, <ph id=\"ph2\">`connectionStringName`</ph>, and <ph id=\"ph3\">`serializeAsText`</ph>.","pos":[75,161],"source":" Valid parameters include `lockTimeout`, `connectionStringName`, and `serializeAsText`."}]}],"pos":[9450,9612],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"></xref> class, configured with the specified connection string.","nodes":[{"pos":[0,172],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"&gt;&lt;/xref&gt;</ph> class, configured with the specified connection string.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"></xref> class, configured with the specified connection string."}],"pos":[10904,11077],"yaml":true},{"content":"The connection parameters for the new persistence provider instance.","nodes":[{"pos":[0,68],"content":"The connection parameters for the new persistence provider instance.","nodes":[{"content":"The connection parameters for the new persistence provider instance.","pos":[0,68]}]}],"pos":[11621,11690],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"></xref> class, configured with the specified connection string and `serializeAsText` parameters.","nodes":[{"pos":[0,205],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"&gt;&lt;/xref&gt;</ph> class, configured with the specified connection string and <ph id=\"ph2\">`serializeAsText`</ph> parameters.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"></xref> class, configured with the specified connection string and `serializeAsText` parameters."}],"pos":[13054,13260],"yaml":true},{"content":"The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data.","nodes":[{"pos":[0,126],"content":"The default value for <ph id=\"ph1\">`serializeAsText`</ph> is <ph id=\"ph2\">`false`</ph>, which indicates that persistence information is serialized as binary data.","source":"The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data."}],"pos":[13271,13398],"yaml":true,"extradata":"MT"},{"content":"The connection parameters for the new persistence provider instance.","nodes":[{"pos":[0,68],"content":"The connection parameters for the new persistence provider instance.","nodes":[{"content":"The connection parameters for the new persistence provider instance.","pos":[0,68]}]}],"pos":[13924,13993],"yaml":true},{"content":"Specifies whether data is serialized as text rather than binary.","nodes":[{"pos":[0,64],"content":"Specifies whether data is serialized as text rather than binary.","nodes":[{"content":"Specifies whether data is serialized as text rather than binary.","pos":[0,64]}]}],"pos":[14065,14130],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"></xref> class, configured with the specified connection string, `serializeAsText`, and `lockTimeout` parameters.","nodes":[{"pos":[0,221],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"&gt;&lt;/xref&gt;</ph> class, configured with the specified connection string, <ph id=\"ph2\">`serializeAsText`</ph>, and <ph id=\"ph3\">`lockTimeout`</ph> parameters.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"></xref> class, configured with the specified connection string, `serializeAsText`, and `lockTimeout` parameters."}],"pos":[15572,15794],"yaml":true},{"content":"The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data.  \n  \n The default value for `lockTimeout` is `TimeSpan.Zero`, which indicates that locking is not used. If `TimeSpan.MaxValue` is used, then locks are maintained indefinitely.","nodes":[{"pos":[0,126],"content":"The default value for <ph id=\"ph1\">`serializeAsText`</ph> is <ph id=\"ph2\">`false`</ph>, which indicates that persistence information is serialized as binary data.","source":"The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data."},{"pos":[133,302],"content":"The default value for `lockTimeout` is `TimeSpan.Zero`, which indicates that locking is not used. If `TimeSpan.MaxValue` is used, then locks are maintained indefinitely.","nodes":[{"content":"The default value for <ph id=\"ph1\">`lockTimeout`</ph> is <ph id=\"ph2\">`TimeSpan.Zero`</ph>, which indicates that locking is not used.","pos":[0,97],"source":"The default value for `lockTimeout` is `TimeSpan.Zero`, which indicates that locking is not used."},{"content":"If <ph id=\"ph1\">`TimeSpan.MaxValue`</ph> is used, then locks are maintained indefinitely.","pos":[98,169],"source":" If `TimeSpan.MaxValue` is used, then locks are maintained indefinitely."}]}],"pos":[15805,16112],"yaml":true,"extradata":"MT"},{"content":"The connection parameters for the new persistence provider factory instance.","nodes":[{"pos":[0,76],"content":"The connection parameters for the new persistence provider factory instance.","nodes":[{"content":"The connection parameters for the new persistence provider factory instance.","pos":[0,76]}]}],"pos":[16660,16737],"yaml":true},{"content":"Specifies whether data is serialized as text rather than binary.","nodes":[{"pos":[0,64],"content":"Specifies whether data is serialized as text rather than binary.","nodes":[{"content":"Specifies whether data is serialized as text rather than binary.","pos":[0,64]}]}],"pos":[16809,16874],"yaml":true},{"content":"The time-out for lock ownership. Locked instances are automatically unlocked after this time period. A time-out of `TimeSpan.Zero` specifies that no locking is used.","nodes":[{"pos":[0,165],"content":"The time-out for lock ownership. Locked instances are automatically unlocked after this time period. A time-out of `TimeSpan.Zero` specifies that no locking is used.","nodes":[{"content":"The time-out for lock ownership.","pos":[0,32]},{"content":"Locked instances are automatically unlocked after this time period.","pos":[33,100]},{"content":"A time-out of <ph id=\"ph1\">`TimeSpan.Zero`</ph> specifies that no locking is used.","pos":[101,165],"source":" A time-out of `TimeSpan.Zero` specifies that no locking is used."}]}],"pos":[16943,17109],"yaml":true},{"content":"Gets the connection parameters for persistence provider instances created with this factory.","nodes":[{"pos":[0,92],"content":"Gets the connection parameters for persistence provider instances created with this factory.","nodes":[{"content":"Gets the connection parameters for persistence provider instances created with this factory.","pos":[0,92]}]}],"pos":[18321,18414],"yaml":true},{"content":"The connection parameters for persistence provider instances created with this factory.","nodes":[{"pos":[0,87],"content":"The connection parameters for persistence provider instances created with this factory.","nodes":[{"content":"The connection parameters for persistence provider instances created with this factory.","pos":[0,87]}]}],"pos":[18825,18913],"yaml":true},{"content":"Initializes a new <xref href=\"System.ServiceModel.Persistence.LockingPersistenceProvider\"></xref> instance that uses a SQL database as its persistence store.","nodes":[{"pos":[0,157],"content":"Initializes a new <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Persistence.LockingPersistenceProvider\"&gt;&lt;/xref&gt;</ph> instance that uses a SQL database as its persistence store.","source":"Initializes a new <xref href=\"System.ServiceModel.Persistence.LockingPersistenceProvider\"></xref> instance that uses a SQL database as its persistence store."}],"pos":[20179,20337],"yaml":true},{"content":"The initialized persistence provider uses the current parameters of the creating factory (<xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A>, <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A>, and <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A>), even if the factory's parameters are changed after the persistence provider is created.","nodes":[{"pos":[0,446],"content":"The initialized persistence provider uses the current parameters of the creating factory (<xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A>, <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A>, and <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A>), even if the factory's parameters are changed after the persistence provider is created.","nodes":[{"content":"The initialized persistence provider uses the current parameters of the creating factory (<ph id=\"ph1\">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A&gt;</ph>), even if the factory's parameters are changed after the persistence provider is created.","pos":[0,446],"source":"The initialized persistence provider uses the current parameters of the creating factory (<xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A>, <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A>, and <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A>), even if the factory's parameters are changed after the persistence provider is created."}]}],"pos":[20348,20795],"yaml":true,"extradata":"MT"},{"content":"The unique identifier of the persistence provider being created.","nodes":[{"pos":[0,64],"content":"The unique identifier of the persistence provider being created.","nodes":[{"content":"The unique identifier of the persistence provider being created.","pos":[0,64]}]}],"pos":[21371,21436],"yaml":true},{"content":"A newly-created <xref href=\"System.ServiceModel.Persistence.PersistenceProvider\"></xref>.","nodes":[{"pos":[0,89],"content":"A newly-created <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Persistence.PersistenceProvider\"&gt;&lt;/xref&gt;</ph>.","source":"A newly-created <xref href=\"System.ServiceModel.Persistence.PersistenceProvider\"></xref>."}],"pos":[21531,21621],"yaml":true},{"content":"Gets the default time-out value used when persistence providers created with this factory are closed.","nodes":[{"pos":[0,101],"content":"Gets the default time-out value used when persistence providers created with this factory are closed.","nodes":[{"content":"Gets the default time-out value used when persistence providers created with this factory are closed.","pos":[0,101]}]}],"pos":[22860,22962],"yaml":true},{"content":"The default value for close time-out is 15 seconds.","nodes":[{"pos":[0,51],"content":"The default value for close time-out is 15 seconds.","nodes":[{"content":"The default value for close time-out is 15 seconds.","pos":[0,51]}]}],"pos":[22973,23025],"yaml":true,"extradata":"MT"},{"content":"The default time-out value.","nodes":[{"pos":[0,27],"content":"The default time-out value.","nodes":[{"content":"The default time-out value.","pos":[0,27]}]}],"pos":[23164,23192],"yaml":true},{"content":"Gets the default time-out value used when persistence provider is opened.","nodes":[{"pos":[0,73],"content":"Gets the default time-out value used when persistence provider is opened.","nodes":[{"content":"Gets the default time-out value used when persistence provider is opened.","pos":[0,73]}]}],"pos":[24430,24504],"yaml":true},{"content":"The default value for open time-out is 15 seconds.","nodes":[{"pos":[0,50],"content":"The default value for open time-out is 15 seconds.","nodes":[{"content":"The default value for open time-out is 15 seconds.","pos":[0,50]}]}],"pos":[24515,24566],"yaml":true,"extradata":"MT"},{"content":"The default time-out value.","nodes":[{"pos":[0,27],"content":"The default time-out value.","nodes":[{"content":"The default time-out value.","pos":[0,27]}]}],"pos":[24704,24732],"yaml":true},{"content":"The time-out for lock ownership used by persistence provider instances created by this instance. Locked instances are automatically unlocked after this time period.","nodes":[{"pos":[0,164],"content":"The time-out for lock ownership used by persistence provider instances created by this instance. Locked instances are automatically unlocked after this time period.","nodes":[{"content":"The time-out for lock ownership used by persistence provider instances created by this instance. Locked instances are automatically unlocked after this time period.","pos":[0,164],"nodes":[{"content":"The time-out for lock ownership used by persistence provider instances created by this instance.","pos":[0,96]},{"content":"Locked instances are automatically unlocked after this time period.","pos":[97,164]}]}]}],"pos":[25927,26092],"yaml":true},{"content":"A time-out of `TimeSpan.Zero` specifies that no locking is used.","nodes":[{"pos":[0,64],"content":"A time-out of <ph id=\"ph1\">`TimeSpan.Zero`</ph> specifies that no locking is used.","source":"A time-out of `TimeSpan.Zero` specifies that no locking is used."}],"pos":[26103,26168],"yaml":true,"extradata":"MT"},{"content":"The time-out value for lock ownership.","nodes":[{"pos":[0,38],"content":"The time-out value for lock ownership.","nodes":[{"content":"The time-out value for lock ownership.","pos":[0,38]}]}],"pos":[26551,26590],"yaml":true},{"content":"Represents the Abort phase.","nodes":[{"pos":[0,27],"content":"Represents the Abort phase.","nodes":[{"content":"Represents the Abort phase.","pos":[0,27]}]}],"pos":[27758,27786],"yaml":true},{"content":"`OnAbort` fires when the service host shuts down abruptly and active commands currently being processed are closed.","nodes":[{"pos":[0,115],"content":"<ph id=\"ph1\">`OnAbort`</ph> fires when the service host shuts down abruptly and active commands currently being processed are closed.","source":"`OnAbort` fires when the service host shuts down abruptly and active commands currently being processed are closed."}],"pos":[27797,27915],"yaml":true,"extradata":"MT"},{"content":"Represents the beginning of the Close phase.","nodes":[{"pos":[0,44],"content":"Represents the beginning of the Close phase.","nodes":[{"content":"Represents the beginning of the Close phase.","pos":[0,44]}]}],"pos":[29436,29481],"yaml":true},{"content":"The Close phase occurs when the service is closed.","nodes":[{"pos":[0,50],"content":"The Close phase occurs when the service is closed.","nodes":[{"content":"The Close phase occurs when the service is closed.","pos":[0,50]}]}],"pos":[29492,29543],"yaml":true,"extradata":"MT"},{"content":"The time period after which the persistence provider aborts this attempt.","nodes":[{"pos":[0,73],"content":"The time period after which the persistence provider aborts this attempt.","nodes":[{"content":"The time period after which the persistence provider aborts this attempt.","pos":[0,73]}]}],"pos":[29750,29824],"yaml":true},{"content":"The method to be called when the operation is completed.","nodes":[{"pos":[0,56],"content":"The method to be called when the operation is completed.","nodes":[{"content":"The method to be called when the operation is completed.","pos":[0,56]}]}],"pos":[29895,29952],"yaml":true},{"content":"A user-provided object that distinguishes this particular asynchronous operation from other operations.","nodes":[{"pos":[0,103],"content":"A user-provided object that distinguishes this particular asynchronous operation from other operations.","nodes":[{"content":"A user-provided object that distinguishes this particular asynchronous operation from other operations.","pos":[0,103]}]}],"pos":[30013,30117],"yaml":true},{"content":"The state of the <xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\"></xref> asynchronous method call.","nodes":[{"pos":[0,190],"content":"The state of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph> asynchronous method call.","source":"The state of the <xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\"></xref> asynchronous method call."}],"pos":[30180,30371],"yaml":true},{"content":"Represents the beginning of the Open phase.","nodes":[{"pos":[0,43],"content":"Represents the beginning of the Open phase.","nodes":[{"content":"Represents the beginning of the Open phase.","pos":[0,43]}]}],"pos":[31813,31857],"yaml":true},{"content":"The Open phase occurs when the service is opened.","nodes":[{"pos":[0,49],"content":"The Open phase occurs when the service is opened.","nodes":[{"content":"The Open phase occurs when the service is opened.","pos":[0,49]}]}],"pos":[31868,31918],"yaml":true,"extradata":"MT"},{"content":"The time period after which the persistence provider aborts this attempt.","nodes":[{"pos":[0,73],"content":"The time period after which the persistence provider aborts this attempt.","nodes":[{"content":"The time period after which the persistence provider aborts this attempt.","pos":[0,73]}]}],"pos":[32124,32198],"yaml":true},{"content":"The method to be called when the operation is completed.","nodes":[{"pos":[0,56],"content":"The method to be called when the operation is completed.","nodes":[{"content":"The method to be called when the operation is completed.","pos":[0,56]}]}],"pos":[32269,32326],"yaml":true},{"content":"A user-provided object that distinguishes this particular asynchronous operation from other operations.","nodes":[{"pos":[0,103],"content":"A user-provided object that distinguishes this particular asynchronous operation from other operations.","nodes":[{"content":"A user-provided object that distinguishes this particular asynchronous operation from other operations.","pos":[0,103]}]}],"pos":[32387,32491],"yaml":true},{"content":"The state of the <xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\"></xref> asynchronous method call.","nodes":[{"pos":[0,189],"content":"The state of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph> asynchronous method call.","source":"The state of the <xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\"></xref> asynchronous method call."}],"pos":[32554,32744],"yaml":true},{"content":"Represents the Close phase.","nodes":[{"pos":[0,27],"content":"Represents the Close phase.","nodes":[{"content":"Represents the Close phase.","pos":[0,27]}]}],"pos":[33987,34015],"yaml":true},{"content":"The Close phase occurs when the service is closed.","nodes":[{"pos":[0,50],"content":"The Close phase occurs when the service is closed.","nodes":[{"content":"The Close phase occurs when the service is closed.","pos":[0,50]}]}],"pos":[34026,34077],"yaml":true,"extradata":"MT"},{"content":"The time period after which the persistence provider aborts this attempt.","nodes":[{"pos":[0,73],"content":"The time period after which the persistence provider aborts this attempt.","nodes":[{"content":"The time period after which the persistence provider aborts this attempt.","pos":[0,73]}]}],"pos":[34233,34307],"yaml":true},{"content":"Represents the end of the Close phase.","nodes":[{"pos":[0,38],"content":"Represents the end of the Close phase.","nodes":[{"content":"Represents the end of the Close phase.","pos":[0,38]}]}],"pos":[35588,35627],"yaml":true},{"content":"The Close phase occurs when the service is closed.","nodes":[{"pos":[0,50],"content":"The Close phase occurs when the service is closed.","nodes":[{"content":"The Close phase occurs when the service is closed.","pos":[0,50]}]}],"pos":[35638,35689],"yaml":true,"extradata":"MT"},{"content":"A reference to the result of the operation.","nodes":[{"pos":[0,43],"content":"A reference to the result of the operation.","nodes":[{"content":"A reference to the result of the operation.","pos":[0,43]}]}],"pos":[35854,35898],"yaml":true},{"content":"Represents the end of the Open phase.","nodes":[{"pos":[0,37],"content":"Represents the end of the Open phase.","nodes":[{"content":"Represents the end of the Open phase.","pos":[0,37]}]}],"pos":[37176,37214],"yaml":true},{"content":"The Open phase occurs when the service is opened.","nodes":[{"pos":[0,49],"content":"The Open phase occurs when the service is opened.","nodes":[{"content":"The Open phase occurs when the service is opened.","pos":[0,49]}]}],"pos":[37225,37275],"yaml":true,"extradata":"MT"},{"content":"A reference to the result of the operation.","nodes":[{"pos":[0,43],"content":"A reference to the result of the operation.","nodes":[{"content":"A reference to the result of the operation.","pos":[0,43]}]}],"pos":[37439,37483],"yaml":true},{"content":"Represents the Open phase.","nodes":[{"pos":[0,26],"content":"Represents the Open phase.","nodes":[{"content":"Represents the Open phase.","pos":[0,26]}]}],"pos":[38718,38745],"yaml":true},{"content":"The Open phase occurs when the service is opened.","nodes":[{"pos":[0,49],"content":"The Open phase occurs when the service is opened.","nodes":[{"content":"The Open phase occurs when the service is opened.","pos":[0,49]}]}],"pos":[38756,38806],"yaml":true,"extradata":"MT"},{"content":"The time period after which the persistence provider aborts this attempt.","nodes":[{"pos":[0,73],"content":"The time period after which the persistence provider aborts this attempt.","nodes":[{"content":"The time period after which the persistence provider aborts this attempt.","pos":[0,73]}]}],"pos":[38961,39035],"yaml":true},{"content":"Specifies whether data is serialized as text rather than binary in persistence providers created with this factory.","nodes":[{"pos":[0,115],"content":"Specifies whether data is serialized as text rather than binary in persistence providers created with this factory.","nodes":[{"content":"Specifies whether data is serialized as text rather than binary in persistence providers created with this factory.","pos":[0,115]}]}],"pos":[40242,40358],"yaml":true},{"content":"The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data.","nodes":[{"pos":[0,126],"content":"The default value for <ph id=\"ph1\">`serializeAsText`</ph> is <ph id=\"ph2\">`false`</ph>, which indicates that persistence information is serialized as binary data.","source":"The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data."}],"pos":[40369,40496],"yaml":true,"extradata":"MT"},{"content":"`true` if the service information is serialized as text; otherwise, `false`.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> if the service information is serialized as text; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the service information is serialized as text; otherwise, `false`."}],"pos":[40882,40961],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  commentId: T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  id: SqlPersistenceProviderFactory\n  children:\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)\n  - System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText\n  langs:\n  - csharp\n  name: SqlPersistenceProviderFactory\n  nameWithType: SqlPersistenceProviderFactory\n  fullName: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  type: Class\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: A system-provided <xref href=\"System.ServiceModel.Persistence.PersistenceProviderFactory\"></xref> implementation used to create a <xref href=\"System.ServiceModel.Persistence.LockingPersistenceProvider\"></xref> instance that uses a SQL database to store persisted service state data.\n  remarks: \"The <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class represents a factory class for a fully-functional, durable service persistence provider. You can use this system-provided provider to persist and retrieve state information about a durable [!INCLUDE[indigo2](~/includes/indigo2-md.md)] service.  \\n  \\n In addition to persistence, the provider created by the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class implements locking of service state data records by inheriting from the abstract <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> class.  Methods that interact with persisted data (such as <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A> or <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A>) have an optional parameter (`lockInstance`) that defines whether locks on the data in question are released or maintained.  \\n  \\n> [!NOTE]\\n>  <xref:System.ServiceModel.Persistence.PersistenceException> exceptions thrown by <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> do not have their exception details hidden by default. To protect against security vulnerabilities, these details can be hidden by setting <xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A> to `false`.  \\n  \\n> [!NOTE]\\n>  The SQL Persistence Provider stores and retrieves data from a SQL Server database. The host must create a secure SQL Server environment to protect against attackers gaining read/write access to the instance state either in the database or on the wire between the application and the database.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*\")]\n\n      public class SqlPersistenceProviderFactory : System.ServiceModel.Persistence.PersistenceProviderFactory\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Channels.CommunicationObject\n  - System.ServiceModel.Persistence.PersistenceProviderFactory\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.Channels.CommunicationObject.Abort\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.Close\n  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Closed\n  - System.ServiceModel.Channels.CommunicationObject.Closing\n  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.Fault\n  - System.ServiceModel.Channels.CommunicationObject.Faulted\n  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  - System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  - System.ServiceModel.Channels.CommunicationObject.OnClosed\n  - System.ServiceModel.Channels.CommunicationObject.OnClosing\n  - System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  - System.ServiceModel.Channels.CommunicationObject.OnOpened\n  - System.ServiceModel.Channels.CommunicationObject.OnOpening\n  - System.ServiceModel.Channels.CommunicationObject.Open\n  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Opened\n  - System.ServiceModel.Channels.CommunicationObject.Opening\n  - System.ServiceModel.Channels.CommunicationObject.State\n  - System.ServiceModel.Channels.CommunicationObject.ThisLock\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)\n  commentId: M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)\n  id: '#ctor(System.Collections.Specialized.NameValueCollection)'\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: SqlPersistenceProviderFactory(NameValueCollection)\n  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)\n  fullName: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)\n  type: Constructor\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"></xref> class, configured with the specified parameter collection.\n  remarks: This constructor can be used to arbitrarily specify `lockTimeout`, `connectionString`, and `serializeAsText` without specifying the other parameters as required by the other constructors (for example, to specify the `connectionString` and `lockTimeout` parameters without specifying the `serializeAsText` parameter.)\n  example:\n  - \"The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class using a parameters collection.  \\n  \\n [!code-csharp[SqlPersistenceProviderFactory#3](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#3)]\"\n  syntax:\n    content: public SqlPersistenceProviderFactory (System.Collections.Specialized.NameValueCollection parameters);\n    parameters:\n    - id: parameters\n      type: System.Collections.Specialized.NameValueCollection\n      description: The collection of parameters used by the new persistence provider factory. Valid parameters include `lockTimeout`, `connectionStringName`, and `serializeAsText`.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)\n  commentId: M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: SqlPersistenceProviderFactory(String)\n  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)\n  fullName: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)\n  type: Constructor\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"></xref> class, configured with the specified connection string.\n  remarks: ''\n  example:\n  - \"The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class using a connection string.  \\n  \\n [!code-csharp[SqlPersistenceProviderFactory#2](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#2)]\"\n  syntax:\n    content: public SqlPersistenceProviderFactory (string connectionString);\n    parameters:\n    - id: connectionString\n      type: System.String\n      description: The connection parameters for the new persistence provider instance.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)\n  commentId: M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)\n  id: '#ctor(System.String,System.Boolean)'\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: SqlPersistenceProviderFactory(String, Boolean)\n  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String, Boolean)\n  fullName: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String, Boolean)\n  type: Constructor\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"></xref> class, configured with the specified connection string and `serializeAsText` parameters.\n  remarks: The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data.\n  example:\n  - \"The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class.  \\n  \\n [!code-csharp[SqlPersistenceProviderFactory#1](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#1)]\"\n  syntax:\n    content: public SqlPersistenceProviderFactory (string connectionString, bool serializeAsText);\n    parameters:\n    - id: connectionString\n      type: System.String\n      description: The connection parameters for the new persistence provider instance.\n    - id: serializeAsText\n      type: System.Boolean\n      description: Specifies whether data is serialized as text rather than binary.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)\n  commentId: M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)\n  id: '#ctor(System.String,System.Boolean,System.TimeSpan)'\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: SqlPersistenceProviderFactory(String, Boolean, TimeSpan)\n  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String, Boolean, TimeSpan)\n  fullName: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String, Boolean, TimeSpan)\n  type: Constructor\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory\"></xref> class, configured with the specified connection string, `serializeAsText`, and `lockTimeout` parameters.\n  remarks: \"The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data.  \\n  \\n The default value for `lockTimeout` is `TimeSpan.Zero`, which indicates that locking is not used. If `TimeSpan.MaxValue` is used, then locks are maintained indefinitely.\"\n  example:\n  - \"The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class.  \\n  \\n [!code-csharp[SqlPersistenceProviderFactory#0](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#0)]\"\n  syntax:\n    content: public SqlPersistenceProviderFactory (string connectionString, bool serializeAsText, TimeSpan lockTimeout);\n    parameters:\n    - id: connectionString\n      type: System.String\n      description: The connection parameters for the new persistence provider factory instance.\n    - id: serializeAsText\n      type: System.Boolean\n      description: Specifies whether data is serialized as text rather than binary.\n    - id: lockTimeout\n      type: System.TimeSpan\n      description: The time-out for lock ownership. Locked instances are automatically unlocked after this time period. A time-out of `TimeSpan.Zero` specifies that no locking is used.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString\n  commentId: P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString\n  id: ConnectionString\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: ConnectionString\n  nameWithType: SqlPersistenceProviderFactory.ConnectionString\n  fullName: SqlPersistenceProviderFactory.ConnectionString\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Gets the connection parameters for persistence provider instances created with this factory.\n  remarks: ''\n  example:\n  - \"The following code example shows how to set and access the `ConnectionString` property.  \\n  \\n [!code-csharp[SqlPersistenceProviderFactory#4](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#4)]\"\n  syntax:\n    content: public string ConnectionString { get; set; }\n    return:\n      type: System.String\n      description: The connection parameters for persistence provider instances created with this factory.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)\n  commentId: M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)\n  id: CreateProvider(System.Guid)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: CreateProvider(Guid)\n  nameWithType: SqlPersistenceProviderFactory.CreateProvider(Guid)\n  fullName: SqlPersistenceProviderFactory.CreateProvider(Guid)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Initializes a new <xref href=\"System.ServiceModel.Persistence.LockingPersistenceProvider\"></xref> instance that uses a SQL database as its persistence store.\n  remarks: The initialized persistence provider uses the current parameters of the creating factory (<xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A>, <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A>, and <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A>), even if the factory's parameters are changed after the persistence provider is created.\n  example:\n  - \"The following code example shows how to execute the `CreateProvider` method. Note that the resulting provider is accessed as a <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> instance.  \\n  \\n [!code-csharp[SqlPersistenceProviderFactory#7](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#7)]\"\n  syntax:\n    content: public override System.ServiceModel.Persistence.PersistenceProvider CreateProvider (Guid id);\n    parameters:\n    - id: id\n      type: System.Guid\n      description: The unique identifier of the persistence provider being created.\n    return:\n      type: System.ServiceModel.Persistence.PersistenceProvider\n      description: A newly-created <xref href=\"System.ServiceModel.Persistence.PersistenceProvider\"></xref>.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout\n  commentId: P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout\n  id: DefaultCloseTimeout\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: DefaultCloseTimeout\n  nameWithType: SqlPersistenceProviderFactory.DefaultCloseTimeout\n  fullName: SqlPersistenceProviderFactory.DefaultCloseTimeout\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Gets the default time-out value used when persistence providers created with this factory are closed.\n  remarks: The default value for close time-out is 15 seconds.\n  syntax:\n    content: protected override TimeSpan DefaultCloseTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The default time-out value.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout\n  commentId: P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout\n  id: DefaultOpenTimeout\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: DefaultOpenTimeout\n  nameWithType: SqlPersistenceProviderFactory.DefaultOpenTimeout\n  fullName: SqlPersistenceProviderFactory.DefaultOpenTimeout\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Gets the default time-out value used when persistence provider is opened.\n  remarks: The default value for open time-out is 15 seconds.\n  syntax:\n    content: protected override TimeSpan DefaultOpenTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The default time-out value.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout\n  commentId: P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout\n  id: LockTimeout\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: LockTimeout\n  nameWithType: SqlPersistenceProviderFactory.LockTimeout\n  fullName: SqlPersistenceProviderFactory.LockTimeout\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: The time-out for lock ownership used by persistence provider instances created by this instance. Locked instances are automatically unlocked after this time period.\n  remarks: A time-out of `TimeSpan.Zero` specifies that no locking is used.\n  example:\n  - \"The following code example shows how to access the `LockTimeout` property.  \\n  \\n [!code-csharp[SqlPersistenceProviderFactory#5](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#5)]\"\n  syntax:\n    content: public TimeSpan LockTimeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The time-out value for lock ownership.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort\n  commentId: M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort\n  id: OnAbort\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: OnAbort()\n  nameWithType: SqlPersistenceProviderFactory.OnAbort()\n  fullName: SqlPersistenceProviderFactory.OnAbort()\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Represents the Abort phase.\n  remarks: '`OnAbort` fires when the service host shuts down abruptly and active commands currently being processed are closed.'\n  syntax:\n    content: protected override void OnAbort ();\n    parameters: []\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  id: OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: OnBeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: SqlPersistenceProviderFactory.OnBeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: SqlPersistenceProviderFactory.OnBeginClose(TimeSpan, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Represents the beginning of the Close phase.\n  remarks: The Close phase occurs when the service is closed.\n  syntax:\n    content: protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The time period after which the persistence provider aborts this attempt.\n    - id: callback\n      type: System.AsyncCallback\n      description: The method to be called when the operation is completed.\n    - id: state\n      type: System.Object\n      description: A user-provided object that distinguishes this particular asynchronous operation from other operations.\n    return:\n      type: System.IAsyncResult\n      description: The state of the <xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\"></xref> asynchronous method call.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  id: OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Represents the beginning of the Open phase.\n  remarks: The Open phase occurs when the service is opened.\n  syntax:\n    content: protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The time period after which the persistence provider aborts this attempt.\n    - id: callback\n      type: System.AsyncCallback\n      description: The method to be called when the operation is completed.\n    - id: state\n      type: System.Object\n      description: A user-provided object that distinguishes this particular asynchronous operation from other operations.\n    return:\n      type: System.IAsyncResult\n      description: The state of the <xref href=\"System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\"></xref> asynchronous method call.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)\n  commentId: M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)\n  id: OnClose(System.TimeSpan)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: OnClose(TimeSpan)\n  nameWithType: SqlPersistenceProviderFactory.OnClose(TimeSpan)\n  fullName: SqlPersistenceProviderFactory.OnClose(TimeSpan)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Represents the Close phase.\n  remarks: The Close phase occurs when the service is closed.\n  syntax:\n    content: protected override void OnClose (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The time period after which the persistence provider aborts this attempt.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)\n  commentId: M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)\n  id: OnEndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: OnEndClose(IAsyncResult)\n  nameWithType: SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)\n  fullName: SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Represents the end of the Close phase.\n  remarks: The Close phase occurs when the service is closed.\n  syntax:\n    content: protected override void OnEndClose (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: A reference to the result of the operation.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)\n  commentId: M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)\n  id: OnEndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: OnEndOpen(IAsyncResult)\n  nameWithType: SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)\n  fullName: SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Represents the end of the Open phase.\n  remarks: The Open phase occurs when the service is opened.\n  syntax:\n    content: protected override void OnEndOpen (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: A reference to the result of the operation.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)\n  commentId: M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)\n  id: OnOpen(System.TimeSpan)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: OnOpen(TimeSpan)\n  nameWithType: SqlPersistenceProviderFactory.OnOpen(TimeSpan)\n  fullName: SqlPersistenceProviderFactory.OnOpen(TimeSpan)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Represents the Open phase.\n  remarks: The Open phase occurs when the service is opened.\n  syntax:\n    content: protected override void OnOpen (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The time period after which the persistence provider aborts this attempt.\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText\n  commentId: P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText\n  id: SerializeAsText\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  langs:\n  - csharp\n  name: SerializeAsText\n  nameWithType: SqlPersistenceProviderFactory.SerializeAsText\n  fullName: SqlPersistenceProviderFactory.SerializeAsText\n  type: Property\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel.Persistence\n  summary: Specifies whether data is serialized as text rather than binary in persistence providers created with this factory.\n  remarks: The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data.\n  example:\n  - \"The following code example shows how to access the `SerializeAsText` property.  \\n  \\n [!code-csharp[SqlPersistenceProviderFactory#6](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#6)]\"\n  syntax:\n    content: public bool SerializeAsText { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the service information is serialized as text; otherwise, `false`.'\n  overload: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Persistence.PersistenceProviderFactory\n  parent: System.ServiceModel.Persistence\n  isExternal: false\n  name: PersistenceProviderFactory\n  nameWithType: PersistenceProviderFactory\n  fullName: System.ServiceModel.Persistence.PersistenceProviderFactory\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: SqlPersistenceProviderFactory(NameValueCollection)\n  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)\n  fullName: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(NameValueCollection)\n- uid: System.Collections.Specialized.NameValueCollection\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: NameValueCollection\n  nameWithType: NameValueCollection\n  fullName: System.Collections.Specialized.NameValueCollection\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: SqlPersistenceProviderFactory(String)\n  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)\n  fullName: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: SqlPersistenceProviderFactory(String, Boolean)\n  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String, Boolean)\n  fullName: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: SqlPersistenceProviderFactory(String, Boolean, TimeSpan)\n  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String, Boolean, TimeSpan)\n  fullName: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory(String, Boolean, TimeSpan)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: ConnectionString\n  nameWithType: SqlPersistenceProviderFactory.ConnectionString\n  fullName: SqlPersistenceProviderFactory.ConnectionString\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: CreateProvider(Guid)\n  nameWithType: SqlPersistenceProviderFactory.CreateProvider(Guid)\n  fullName: SqlPersistenceProviderFactory.CreateProvider(Guid)\n- uid: System.ServiceModel.Persistence.PersistenceProvider\n  parent: System.ServiceModel.Persistence\n  isExternal: false\n  name: PersistenceProvider\n  nameWithType: PersistenceProvider\n  fullName: System.ServiceModel.Persistence.PersistenceProvider\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: DefaultCloseTimeout\n  nameWithType: SqlPersistenceProviderFactory.DefaultCloseTimeout\n  fullName: SqlPersistenceProviderFactory.DefaultCloseTimeout\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: DefaultOpenTimeout\n  nameWithType: SqlPersistenceProviderFactory.DefaultOpenTimeout\n  fullName: SqlPersistenceProviderFactory.DefaultOpenTimeout\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: LockTimeout\n  nameWithType: SqlPersistenceProviderFactory.LockTimeout\n  fullName: SqlPersistenceProviderFactory.LockTimeout\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnAbort()\n  nameWithType: SqlPersistenceProviderFactory.OnAbort()\n  fullName: SqlPersistenceProviderFactory.OnAbort()\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnBeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: SqlPersistenceProviderFactory.OnBeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: SqlPersistenceProviderFactory.OnBeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: SqlPersistenceProviderFactory.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnClose(TimeSpan)\n  nameWithType: SqlPersistenceProviderFactory.OnClose(TimeSpan)\n  fullName: SqlPersistenceProviderFactory.OnClose(TimeSpan)\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnEndClose(IAsyncResult)\n  nameWithType: SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)\n  fullName: SqlPersistenceProviderFactory.OnEndClose(IAsyncResult)\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnEndOpen(IAsyncResult)\n  nameWithType: SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)\n  fullName: SqlPersistenceProviderFactory.OnEndOpen(IAsyncResult)\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnOpen(TimeSpan)\n  nameWithType: SqlPersistenceProviderFactory.OnOpen(TimeSpan)\n  fullName: SqlPersistenceProviderFactory.OnOpen(TimeSpan)\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: SerializeAsText\n  nameWithType: SqlPersistenceProviderFactory.SerializeAsText\n  fullName: SqlPersistenceProviderFactory.SerializeAsText\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: SqlPersistenceProviderFactory\n  nameWithType: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory\n  fullName: SqlPersistenceProviderFactory.SqlPersistenceProviderFactory\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: ConnectionString\n  nameWithType: SqlPersistenceProviderFactory.ConnectionString\n  fullName: SqlPersistenceProviderFactory.ConnectionString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: CreateProvider\n  nameWithType: SqlPersistenceProviderFactory.CreateProvider\n  fullName: SqlPersistenceProviderFactory.CreateProvider\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: DefaultCloseTimeout\n  nameWithType: SqlPersistenceProviderFactory.DefaultCloseTimeout\n  fullName: SqlPersistenceProviderFactory.DefaultCloseTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: DefaultOpenTimeout\n  nameWithType: SqlPersistenceProviderFactory.DefaultOpenTimeout\n  fullName: SqlPersistenceProviderFactory.DefaultOpenTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: LockTimeout\n  nameWithType: SqlPersistenceProviderFactory.LockTimeout\n  fullName: SqlPersistenceProviderFactory.LockTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnAbort\n  nameWithType: SqlPersistenceProviderFactory.OnAbort\n  fullName: SqlPersistenceProviderFactory.OnAbort\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnBeginClose\n  nameWithType: SqlPersistenceProviderFactory.OnBeginClose\n  fullName: SqlPersistenceProviderFactory.OnBeginClose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnBeginOpen\n  nameWithType: SqlPersistenceProviderFactory.OnBeginOpen\n  fullName: SqlPersistenceProviderFactory.OnBeginOpen\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnClose\n  nameWithType: SqlPersistenceProviderFactory.OnClose\n  fullName: SqlPersistenceProviderFactory.OnClose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnEndClose\n  nameWithType: SqlPersistenceProviderFactory.OnEndClose\n  fullName: SqlPersistenceProviderFactory.OnEndClose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnEndOpen\n  nameWithType: SqlPersistenceProviderFactory.OnEndOpen\n  fullName: SqlPersistenceProviderFactory.OnEndOpen\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: OnOpen\n  nameWithType: SqlPersistenceProviderFactory.OnOpen\n  fullName: SqlPersistenceProviderFactory.OnOpen\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n- uid: System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText*\n  parent: System.ServiceModel.Persistence.SqlPersistenceProviderFactory\n  isExternal: false\n  name: SerializeAsText\n  nameWithType: SqlPersistenceProviderFactory.SerializeAsText\n  fullName: SqlPersistenceProviderFactory.SerializeAsText\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Persistence/SqlPersistenceProviderFactory.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.Channels.CommunicationObject.Abort\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Abort()\n  nameWithType: CommunicationObject.Abort()\n  fullName: CommunicationObject.Abort()\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.Close\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close()\n  nameWithType: CommunicationObject.Close()\n  fullName: CommunicationObject.Close()\n- uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close(TimeSpan)\n  nameWithType: CommunicationObject.Close(TimeSpan)\n  fullName: CommunicationObject.Close(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Closed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closed\n  nameWithType: CommunicationObject.Closed\n  fullName: CommunicationObject.Closed\n- uid: System.ServiceModel.Channels.CommunicationObject.Closing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closing\n  nameWithType: CommunicationObject.Closing\n  fullName: CommunicationObject.Closing\n- uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndClose(IAsyncResult)\n  nameWithType: CommunicationObject.EndClose(IAsyncResult)\n  fullName: CommunicationObject.EndClose(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndOpen(IAsyncResult)\n  nameWithType: CommunicationObject.EndOpen(IAsyncResult)\n  fullName: CommunicationObject.EndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.Fault\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Fault()\n  nameWithType: CommunicationObject.Fault()\n  fullName: CommunicationObject.Fault()\n- uid: System.ServiceModel.Channels.CommunicationObject.Faulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Faulted\n  nameWithType: CommunicationObject.Faulted\n  fullName: CommunicationObject.Faulted\n- uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: GetCommunicationObjectType()\n  nameWithType: CommunicationObject.GetCommunicationObjectType()\n  fullName: CommunicationObject.GetCommunicationObjectType()\n- uid: System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: IsDisposed\n  nameWithType: CommunicationObject.IsDisposed\n  fullName: CommunicationObject.IsDisposed\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosed()\n  nameWithType: CommunicationObject.OnClosed()\n  fullName: CommunicationObject.OnClosed()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosing()\n  nameWithType: CommunicationObject.OnClosing()\n  fullName: CommunicationObject.OnClosing()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnFaulted()\n  nameWithType: CommunicationObject.OnFaulted()\n  fullName: CommunicationObject.OnFaulted()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpened\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpened()\n  nameWithType: CommunicationObject.OnOpened()\n  fullName: CommunicationObject.OnOpened()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpening()\n  nameWithType: CommunicationObject.OnOpening()\n  fullName: CommunicationObject.OnOpening()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open()\n  nameWithType: CommunicationObject.Open()\n  fullName: CommunicationObject.Open()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open(TimeSpan)\n  nameWithType: CommunicationObject.Open(TimeSpan)\n  fullName: CommunicationObject.Open(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Opened\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opened\n  nameWithType: CommunicationObject.Opened\n  fullName: CommunicationObject.Opened\n- uid: System.ServiceModel.Channels.CommunicationObject.Opening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opening\n  nameWithType: CommunicationObject.Opening\n  fullName: CommunicationObject.Opening\n- uid: System.ServiceModel.Channels.CommunicationObject.State\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: State\n  nameWithType: CommunicationObject.State\n  fullName: CommunicationObject.State\n- uid: System.ServiceModel.Channels.CommunicationObject.ThisLock\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThisLock\n  nameWithType: CommunicationObject.ThisLock\n  fullName: CommunicationObject.ThisLock\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposed()\n  nameWithType: CommunicationObject.ThrowIfDisposed()\n  fullName: CommunicationObject.ThrowIfDisposed()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrImmutable()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrImmutable()\n  fullName: CommunicationObject.ThrowIfDisposedOrImmutable()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrNotOpen()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrNotOpen()\n  fullName: CommunicationObject.ThrowIfDisposedOrNotOpen()\n"}