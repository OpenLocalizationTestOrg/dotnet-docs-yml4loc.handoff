{"nodes":[{"content":"Provides command related utility methods that register <xref href=\"System.Windows.Input.CommandBinding\"></xref> and <xref href=\"System.Windows.Input.InputBinding\"></xref> objects for class owners and commands, add and remove command event handlers, and provides services for querying the status of a command.","nodes":[{"pos":[0,308],"content":"Provides command related utility methods that register <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.CommandBinding\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Windows.Input.InputBinding\"&gt;&lt;/xref&gt;</ph> objects for class owners and commands, add and remove command event handlers, and provides services for querying the status of a command.","source":"Provides command related utility methods that register <xref href=\"System.Windows.Input.CommandBinding\"></xref> and <xref href=\"System.Windows.Input.InputBinding\"></xref> objects for class owners and commands, add and remove command event handlers, and provides services for querying the status of a command."}],"pos":[2087,2396],"yaml":true},{"content":"The <xref:System.Windows.Input.CommandManager> is responsible for managing routed commands.  For more information about commanding, see [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md).  \n  \n Use <xref:System.Windows.Input.CommandManager.RegisterClassCommandBinding%2A> to register a <xref:System.Windows.Input.CommandBinding> to a class as opposed to an instance.  \n  \n Use <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> to register an <xref:System.Windows.Input.InputBinding> to a class as opposed to an instance.  \n  \n The <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> method forces the <xref:System.Windows.Input.CommandManager> to raise the <xref:System.Windows.Input.CommandManager.RequerySuggested> event.  The <xref:System.Windows.Input.CommandManager.RequerySuggested> event informs a command source to query the command it is associated with to determine whether or not the command can execute.","nodes":[{"pos":[0,212],"content":"The <xref:System.Windows.Input.CommandManager> is responsible for managing routed commands.  For more information about commanding, see [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> is responsible for managing routed commands.","pos":[0,91],"source":"The <xref:System.Windows.Input.CommandManager> is responsible for managing routed commands."},{"content":"For more information about commanding, see <bpt id=\"p1\">[</bpt>Commanding Overview<ept id=\"p1\">](~/docs/framework/wpf/advanced/commanding-overview.md)</ept>.","pos":[93,212],"source":"  For more information about commanding, see [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md)."}]},{"pos":[219,391],"content":"Use <xref:System.Windows.Input.CommandManager.RegisterClassCommandBinding%2A> to register a <xref:System.Windows.Input.CommandBinding> to a class as opposed to an instance.","nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.Windows.Input.CommandManager.RegisterClassCommandBinding%2A&gt;</ph> to register a <ph id=\"ph2\">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> to a class as opposed to an instance.","pos":[0,172],"source":"Use <xref:System.Windows.Input.CommandManager.RegisterClassCommandBinding%2A> to register a <xref:System.Windows.Input.CommandBinding> to a class as opposed to an instance."}]},{"pos":[398,567],"content":"Use <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> to register an <xref:System.Windows.Input.InputBinding> to a class as opposed to an instance.","nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A&gt;</ph> to register an <ph id=\"ph2\">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> to a class as opposed to an instance.","pos":[0,169],"source":"Use <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> to register an <xref:System.Windows.Input.InputBinding> to a class as opposed to an instance."}]},{"pos":[574,983],"content":"The <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> method forces the <xref:System.Windows.Input.CommandManager> to raise the <xref:System.Windows.Input.CommandManager.RequerySuggested> event.  The <xref:System.Windows.Input.CommandManager.RequerySuggested> event informs a command source to query the command it is associated with to determine whether or not the command can execute.","nodes":[{"content":"The <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> method forces the <xref:System.Windows.Input.CommandManager> to raise the <xref:System.Windows.Input.CommandManager.RequerySuggested> event.  The <xref:System.Windows.Input.CommandManager.RequerySuggested> event informs a command source to query the command it is associated with to determine whether or not the command can execute.","pos":[0,409],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A&gt;</ph> method forces the <ph id=\"ph2\">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> to raise the <ph id=\"ph3\">&lt;xref:System.Windows.Input.CommandManager.RequerySuggested&gt;</ph> event.","pos":[0,217],"source":"The <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> method forces the <xref:System.Windows.Input.CommandManager> to raise the <xref:System.Windows.Input.CommandManager.RequerySuggested> event."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.CommandManager.RequerySuggested&gt;</ph> event informs a command source to query the command it is associated with to determine whether or not the command can execute.","pos":[219,409],"source":"  The <xref:System.Windows.Input.CommandManager.RequerySuggested> event informs a command source to query the command it is associated with to determine whether or not the command can execute."}]}]}],"pos":[2407,3399],"yaml":true,"extradata":"MT"},{"content":"Attaches the specified <xref href=\"System.Windows.Input.CanExecuteRoutedEventHandler\"></xref> to the specified element.","nodes":[{"pos":[0,119],"content":"Attaches the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.CanExecuteRoutedEventHandler\"&gt;&lt;/xref&gt;</ph> to the specified element.","source":"Attaches the specified <xref href=\"System.Windows.Input.CanExecuteRoutedEventHandler\"></xref> to the specified element."}],"pos":[5135,5255],"yaml":true},{"content":"The element to attach <code>handler</code> to.","nodes":[{"pos":[0,46],"content":"The element to attach <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">handler</ph><ept id=\"p1\">&lt;/code&gt;</ept> to.","source":"The element to attach <code>handler</code> to."}],"pos":[8002,8049],"yaml":true},{"content":"The can execute handler.","nodes":[{"pos":[0,24],"content":"The can execute handler.","nodes":[{"content":"The can execute handler.","pos":[0,24]}]}],"pos":[8148,8173],"yaml":true},{"content":"<code>element</code> or <code>handler</code> is `null`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;handler&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>element</code> or <code>handler</code> is `null`."}],"pos":[8359,8415],"yaml":true},{"content":"Attaches the specified <xref href=\"System.Windows.Input.ExecutedRoutedEventHandler\"></xref> to the specified element.","nodes":[{"pos":[0,117],"content":"Attaches the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.ExecutedRoutedEventHandler\"&gt;&lt;/xref&gt;</ph> to the specified element.","source":"Attaches the specified <xref href=\"System.Windows.Input.ExecutedRoutedEventHandler\"></xref> to the specified element."}],"pos":[9725,9843],"yaml":true},{"content":"The element to attach <code>handler</code> to.","nodes":[{"pos":[0,46],"content":"The element to attach <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">handler</ph><ept id=\"p1\">&lt;/code&gt;</ept> to.","source":"The element to attach <code>handler</code> to."}],"pos":[12586,12633],"yaml":true},{"content":"The executed handler.","nodes":[{"pos":[0,21],"content":"The executed handler.","nodes":[{"content":"The executed handler.","pos":[0,21]}]}],"pos":[12730,12752],"yaml":true},{"content":"<code>element</code> or <code>handler</code> is `null`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;handler&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>element</code> or <code>handler</code> is `null`."}],"pos":[12936,12992],"yaml":true},{"content":"Attaches the specified <xref href=\"System.Windows.Input.CanExecuteRoutedEventHandler\"></xref> to the specified element.","nodes":[{"pos":[0,119],"content":"Attaches the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.CanExecuteRoutedEventHandler\"&gt;&lt;/xref&gt;</ph> to the specified element.","source":"Attaches the specified <xref href=\"System.Windows.Input.CanExecuteRoutedEventHandler\"></xref> to the specified element."}],"pos":[14346,14466],"yaml":true},{"content":"The element to attach <code>handler</code> to.","nodes":[{"pos":[0,46],"content":"The element to attach <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">handler</ph><ept id=\"p1\">&lt;/code&gt;</ept> to.","source":"The element to attach <code>handler</code> to."}],"pos":[17216,17263],"yaml":true},{"content":"The can execute handler.","nodes":[{"pos":[0,24],"content":"The can execute handler.","nodes":[{"content":"The can execute handler.","pos":[0,24]}]}],"pos":[17362,17387],"yaml":true},{"content":"<code>element</code> or <code>handler</code> is `null`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;handler&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>element</code> or <code>handler</code> is `null`."}],"pos":[17580,17636],"yaml":true},{"content":"Attaches the specified <xref href=\"System.Windows.Input.ExecutedRoutedEventHandler\"></xref> to the specified element.","nodes":[{"pos":[0,117],"content":"Attaches the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.ExecutedRoutedEventHandler\"&gt;&lt;/xref&gt;</ph> to the specified element.","source":"Attaches the specified <xref href=\"System.Windows.Input.ExecutedRoutedEventHandler\"></xref> to the specified element."}],"pos":[18988,19106],"yaml":true},{"content":"The element to attach <code>handler</code> to.","nodes":[{"pos":[0,46],"content":"The element to attach <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">handler</ph><ept id=\"p1\">&lt;/code&gt;</ept> to.","source":"The element to attach <code>handler</code> to."}],"pos":[21852,21899],"yaml":true},{"content":"The can execute handler.","nodes":[{"pos":[0,24],"content":"The can execute handler.","nodes":[{"content":"The can execute handler.","pos":[0,24]}]}],"pos":[21996,22021],"yaml":true},{"content":"<code>element</code> or <code>handler</code> is `null`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;handler&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>element</code> or <code>handler</code> is `null`."}],"pos":[22212,22268],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Input.CommandManager.CanExecute\"></xref> attached event.","nodes":[{"pos":[0,98],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.CommandManager.CanExecute\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Identifies the <xref href=\"System.Windows.Input.CommandManager.CanExecute\"></xref> attached event."}],"pos":[23220,23319],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Input.CommandManager.Executed\"></xref> attached event.","nodes":[{"pos":[0,96],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.CommandManager.Executed\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Identifies the <xref href=\"System.Windows.Input.CommandManager.Executed\"></xref> attached event."}],"pos":[24439,24536],"yaml":true},{"content":"Forces the <xref href=\"System.Windows.Input.CommandManager\"></xref> to raise the <xref href=\"System.Windows.Input.CommandManager.RequerySuggested\"></xref> event.","nodes":[{"pos":[0,161],"content":"Forces the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.CommandManager\"&gt;&lt;/xref&gt;</ph> to raise the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Input.CommandManager.RequerySuggested\"&gt;&lt;/xref&gt;</ph> event.","source":"Forces the <xref href=\"System.Windows.Input.CommandManager\"></xref> to raise the <xref href=\"System.Windows.Input.CommandManager.RequerySuggested\"></xref> event."}],"pos":[25739,25901],"yaml":true},{"content":"The <xref:System.Windows.Input.CommandManager> only pays attention to certain conditions in determining when the command target has changed, such as change in keyboard focus.  In situations where the <xref:System.Windows.Input.CommandManager> does not sufficiently determine a change in conditions that cause a command to not be able to execute, <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> can be called to force the <xref:System.Windows.Input.CommandManager> to raise the <xref:System.Windows.Input.CommandManager.RequerySuggested> event.","nodes":[{"pos":[0,568],"content":"The <xref:System.Windows.Input.CommandManager> only pays attention to certain conditions in determining when the command target has changed, such as change in keyboard focus.  In situations where the <xref:System.Windows.Input.CommandManager> does not sufficiently determine a change in conditions that cause a command to not be able to execute, <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> can be called to force the <xref:System.Windows.Input.CommandManager> to raise the <xref:System.Windows.Input.CommandManager.RequerySuggested> event.","nodes":[{"content":"The <xref:System.Windows.Input.CommandManager> only pays attention to certain conditions in determining when the command target has changed, such as change in keyboard focus.  In situations where the <xref:System.Windows.Input.CommandManager> does not sufficiently determine a change in conditions that cause a command to not be able to execute, <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> can be called to force the <xref:System.Windows.Input.CommandManager> to raise the <xref:System.Windows.Input.CommandManager.RequerySuggested> event.","pos":[0,568],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> only pays attention to certain conditions in determining when the command target has changed, such as change in keyboard focus.","pos":[0,174],"source":"The <xref:System.Windows.Input.CommandManager> only pays attention to certain conditions in determining when the command target has changed, such as change in keyboard focus."},{"content":"In situations where the <ph id=\"ph1\">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> does not sufficiently determine a change in conditions that cause a command to not be able to execute, <ph id=\"ph2\">&lt;xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A&gt;</ph> can be called to force the <ph id=\"ph3\">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> to raise the <ph id=\"ph4\">&lt;xref:System.Windows.Input.CommandManager.RequerySuggested&gt;</ph> event.","pos":[176,568],"source":"  In situations where the <xref:System.Windows.Input.CommandManager> does not sufficiently determine a change in conditions that cause a command to not be able to execute, <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> can be called to force the <xref:System.Windows.Input.CommandManager> to raise the <xref:System.Windows.Input.CommandManager.RequerySuggested> event."}]}]}],"pos":[25912,26481],"yaml":true,"extradata":"MT"},{"content":"Identifies the <xref href=\"System.Windows.Input.CommandManager.PreviewCanExecute\"></xref> attached event.","nodes":[{"pos":[0,105],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.CommandManager.PreviewCanExecute\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Identifies the <xref href=\"System.Windows.Input.CommandManager.PreviewCanExecute\"></xref> attached event."}],"pos":[28418,28524],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Input.CommandManager.PreviewExecuted\"></xref> attached event.","nodes":[{"pos":[0,103],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.CommandManager.PreviewExecuted\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Identifies the <xref href=\"System.Windows.Input.CommandManager.PreviewExecuted\"></xref> attached event."}],"pos":[29693,29797],"yaml":true},{"content":"Registers a <xref href=\"System.Windows.Input.CommandBinding\"></xref> with the specified type.","nodes":[{"pos":[0,93],"content":"Registers a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.CommandBinding\"&gt;&lt;/xref&gt;</ph> with the specified type.","source":"Registers a <xref href=\"System.Windows.Input.CommandBinding\"></xref> with the specified type."}],"pos":[31220,31314],"yaml":true},{"content":"This method enables a <xref:System.Windows.Input.CommandBinding> to be associated with a class instead than an instance of a class.","nodes":[{"pos":[0,131],"content":"This method enables a <xref:System.Windows.Input.CommandBinding> to be associated with a class instead than an instance of a class.","nodes":[{"content":"This method enables a <ph id=\"ph1\">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> to be associated with a class instead than an instance of a class.","pos":[0,131],"source":"This method enables a <xref:System.Windows.Input.CommandBinding> to be associated with a class instead than an instance of a class."}]}],"pos":[31325,31457],"yaml":true,"extradata":"MT"},{"content":"The class with which to register <code>commandBinding</code>.","nodes":[{"pos":[0,61],"content":"The class with which to register <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">commandBinding</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The class with which to register <code>commandBinding</code>."}],"pos":[31666,31728],"yaml":true},{"content":"The command binding to register.","nodes":[{"pos":[0,32],"content":"The command binding to register.","nodes":[{"content":"The command binding to register.","pos":[0,32]}]}],"pos":[31820,31853],"yaml":true},{"content":"<code>type</code> or <code>commandBinding</code> is `null`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;commandBinding&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>type</code> or <code>commandBinding</code> is `null`."}],"pos":[32046,32106],"yaml":true},{"content":"Registers the specified <xref href=\"System.Windows.Input.InputBinding\"></xref> with the specified type.","nodes":[{"pos":[0,103],"content":"Registers the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.InputBinding\"&gt;&lt;/xref&gt;</ph> with the specified type.","source":"Registers the specified <xref href=\"System.Windows.Input.InputBinding\"></xref> with the specified type."}],"pos":[33320,33424],"yaml":true},{"content":"This method enables an <xref:System.Windows.Input.InputBinding> to be associated with a type instead of an instance of a class.","nodes":[{"pos":[0,127],"content":"This method enables an <xref:System.Windows.Input.InputBinding> to be associated with a type instead of an instance of a class.","nodes":[{"content":"This method enables an <ph id=\"ph1\">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> to be associated with a type instead of an instance of a class.","pos":[0,127],"source":"This method enables an <xref:System.Windows.Input.InputBinding> to be associated with a type instead of an instance of a class."}]}],"pos":[33435,33563],"yaml":true,"extradata":"MT"},{"content":"The type to register <code>inputBinding</code> with.","nodes":[{"pos":[0,52],"content":"The type to register <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inputBinding</ph><ept id=\"p1\">&lt;/code&gt;</ept> with.","source":"The type to register <code>inputBinding</code> with."}],"pos":[33766,33819],"yaml":true},{"content":"The input binding to register.","nodes":[{"pos":[0,30],"content":"The input binding to register.","nodes":[{"content":"The input binding to register.","pos":[0,30]}]}],"pos":[33907,33938],"yaml":true},{"content":"<code>type</code> or <code>inputBinding</code> is `null`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;inputBinding&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>type</code> or <code>inputBinding</code> is `null`."}],"pos":[34129,34187],"yaml":true},{"content":"Detaches the specified <xref href=\"System.Windows.Input.CanExecuteRoutedEventHandler\"></xref> from the specified element.","nodes":[{"pos":[0,121],"content":"Detaches the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.CanExecuteRoutedEventHandler\"&gt;&lt;/xref&gt;</ph> from the specified element.","source":"Detaches the specified <xref href=\"System.Windows.Input.CanExecuteRoutedEventHandler\"></xref> from the specified element."}],"pos":[35517,35639],"yaml":true},{"content":"The element to remove <code>handler</code> from.","nodes":[{"pos":[0,48],"content":"The element to remove <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">handler</ph><ept id=\"p1\">&lt;/code&gt;</ept> from.","source":"The element to remove <code>handler</code> from."}],"pos":[36612,36661],"yaml":true},{"content":"The can execute handler.","nodes":[{"pos":[0,24],"content":"The can execute handler.","nodes":[{"content":"The can execute handler.","pos":[0,24]}]}],"pos":[36760,36785],"yaml":true},{"content":"<code>element</code> or <code>handler</code> is `null`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;handler&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>element</code> or <code>handler</code> is `null`."}],"pos":[36974,37030],"yaml":true},{"content":"Detaches the specified <xref href=\"System.Windows.Input.ExecutedRoutedEventHandler\"></xref> from the specified element.","nodes":[{"pos":[0,119],"content":"Detaches the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.ExecutedRoutedEventHandler\"&gt;&lt;/xref&gt;</ph> from the specified element.","source":"Detaches the specified <xref href=\"System.Windows.Input.ExecutedRoutedEventHandler\"></xref> from the specified element."}],"pos":[38358,38478],"yaml":true},{"content":"The element to remove <code>handler</code> from.","nodes":[{"pos":[0,48],"content":"The element to remove <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">handler</ph><ept id=\"p1\">&lt;/code&gt;</ept> from.","source":"The element to remove <code>handler</code> from."}],"pos":[39447,39496],"yaml":true},{"content":"The executed handler.","nodes":[{"pos":[0,21],"content":"The executed handler.","nodes":[{"content":"The executed handler.","pos":[0,21]}]}],"pos":[39593,39615],"yaml":true},{"content":"<code>element</code> or <code>handler</code> is `null`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;handler&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>element</code> or <code>handler</code> is `null`."}],"pos":[39802,39858],"yaml":true},{"content":"Detaches the specified <xref href=\"System.Windows.Input.CanExecuteRoutedEventHandler\"></xref> from the specified element.","nodes":[{"pos":[0,121],"content":"Detaches the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.CanExecuteRoutedEventHandler\"&gt;&lt;/xref&gt;</ph> from the specified element.","source":"Detaches the specified <xref href=\"System.Windows.Input.CanExecuteRoutedEventHandler\"></xref> from the specified element."}],"pos":[41252,41374],"yaml":true},{"content":"The element to remove <code>handler</code> from.","nodes":[{"pos":[0,48],"content":"The element to remove <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">handler</ph><ept id=\"p1\">&lt;/code&gt;</ept> from.","source":"The element to remove <code>handler</code> from."}],"pos":[42354,42403],"yaml":true},{"content":"The can execute handler.","nodes":[{"pos":[0,24],"content":"The can execute handler.","nodes":[{"content":"The can execute handler.","pos":[0,24]}]}],"pos":[42502,42527],"yaml":true},{"content":"<code>element</code> or <code>handler</code> is `null`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;handler&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>element</code> or <code>handler</code> is `null`."}],"pos":[42723,42779],"yaml":true},{"content":"Detaches the specified <xref href=\"System.Windows.Input.ExecutedRoutedEventHandler\"></xref> from the specified element.","nodes":[{"pos":[0,119],"content":"Detaches the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.ExecutedRoutedEventHandler\"&gt;&lt;/xref&gt;</ph> from the specified element.","source":"Detaches the specified <xref href=\"System.Windows.Input.ExecutedRoutedEventHandler\"></xref> from the specified element."}],"pos":[44149,44269],"yaml":true},{"content":"The element to remove <code>handler</code> from.","nodes":[{"pos":[0,48],"content":"The element to remove <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">handler</ph><ept id=\"p1\">&lt;/code&gt;</ept> from.","source":"The element to remove <code>handler</code> from."}],"pos":[45245,45294],"yaml":true},{"content":"The executed handler.","nodes":[{"pos":[0,21],"content":"The executed handler.","nodes":[{"content":"The executed handler.","pos":[0,21]}]}],"pos":[45391,45413],"yaml":true},{"content":"<code>element</code> or <code>handler</code> is `null`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">&lt;code&gt;element&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;handler&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>element</code> or <code>handler</code> is `null`."}],"pos":[45607,45663],"yaml":true},{"content":"Occurs when the <xref href=\"System.Windows.Input.CommandManager\"></xref> detects conditions that might change the ability of a command to execute.","nodes":[{"pos":[0,146],"content":"Occurs when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.CommandManager\"&gt;&lt;/xref&gt;</ph> detects conditions that might change the ability of a command to execute.","source":"Occurs when the <xref href=\"System.Windows.Input.CommandManager\"></xref> detects conditions that might change the ability of a command to execute."}],"pos":[46621,46768],"yaml":true},{"content":"Since this event is static, it will only hold onto the handler as a weak reference.  Objects that listen for this event should keep a strong reference to their event handler to avoid it being garbage collected. This can be accomplished by having a private field and assigning the handler as the value before or after attaching to this event.","nodes":[{"pos":[0,341],"content":"Since this event is static, it will only hold onto the handler as a weak reference.  Objects that listen for this event should keep a strong reference to their event handler to avoid it being garbage collected. This can be accomplished by having a private field and assigning the handler as the value before or after attaching to this event.","nodes":[{"content":"Since this event is static, it will only hold onto the handler as a weak reference.  Objects that listen for this event should keep a strong reference to their event handler to avoid it being garbage collected. This can be accomplished by having a private field and assigning the handler as the value before or after attaching to this event.","pos":[0,341],"nodes":[{"content":"Since this event is static, it will only hold onto the handler as a weak reference.","pos":[0,83]},{"content":"Objects that listen for this event should keep a strong reference to their event handler to avoid it being garbage collected.","pos":[85,210]},{"content":"This can be accomplished by having a private field and assigning the handler as the value before or after attaching to this event.","pos":[211,341]}]}]}],"pos":[46779,47121],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.CommandManager\n  commentId: T:System.Windows.Input.CommandManager\n  id: CommandManager\n  children:\n  - System.Windows.Input.CommandManager.AddCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)\n  - System.Windows.Input.CommandManager.AddExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)\n  - System.Windows.Input.CommandManager.AddPreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)\n  - System.Windows.Input.CommandManager.AddPreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)\n  - System.Windows.Input.CommandManager.CanExecuteEvent\n  - System.Windows.Input.CommandManager.ExecutedEvent\n  - System.Windows.Input.CommandManager.InvalidateRequerySuggested\n  - System.Windows.Input.CommandManager.PreviewCanExecuteEvent\n  - System.Windows.Input.CommandManager.PreviewExecutedEvent\n  - System.Windows.Input.CommandManager.RegisterClassCommandBinding(System.Type,System.Windows.Input.CommandBinding)\n  - System.Windows.Input.CommandManager.RegisterClassInputBinding(System.Type,System.Windows.Input.InputBinding)\n  - System.Windows.Input.CommandManager.RemoveCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)\n  - System.Windows.Input.CommandManager.RemoveExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)\n  - System.Windows.Input.CommandManager.RemovePreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)\n  - System.Windows.Input.CommandManager.RemovePreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)\n  - System.Windows.Input.CommandManager.RequerySuggested\n  langs:\n  - csharp\n  name: CommandManager\n  nameWithType: CommandManager\n  fullName: System.Windows.Input.CommandManager\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Provides command related utility methods that register <xref href=\"System.Windows.Input.CommandBinding\"></xref> and <xref href=\"System.Windows.Input.InputBinding\"></xref> objects for class owners and commands, add and remove command event handlers, and provides services for querying the status of a command.\n  remarks: \"The <xref:System.Windows.Input.CommandManager> is responsible for managing routed commands.  For more information about commanding, see [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md).  \\n  \\n Use <xref:System.Windows.Input.CommandManager.RegisterClassCommandBinding%2A> to register a <xref:System.Windows.Input.CommandBinding> to a class as opposed to an instance.  \\n  \\n Use <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> to register an <xref:System.Windows.Input.InputBinding> to a class as opposed to an instance.  \\n  \\n The <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> method forces the <xref:System.Windows.Input.CommandManager> to raise the <xref:System.Windows.Input.CommandManager.RequerySuggested> event.  The <xref:System.Windows.Input.CommandManager.RequerySuggested> event informs a command source to query the command it is associated with to determine whether or not the command can execute.\"\n  syntax:\n    content: public sealed class CommandManager\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.CommandManager.AddCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)\n  commentId: M:System.Windows.Input.CommandManager.AddCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)\n  id: AddCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)\n  parent: System.Windows.Input.CommandManager\n  langs:\n  - csharp\n  name: AddCanExecuteHandler(UIElement, CanExecuteRoutedEventHandler)\n  nameWithType: CommandManager.AddCanExecuteHandler(UIElement, CanExecuteRoutedEventHandler)\n  fullName: CommandManager.AddCanExecuteHandler(UIElement, CanExecuteRoutedEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Attaches the specified <xref href=\"System.Windows.Input.CanExecuteRoutedEventHandler\"></xref> to the specified element.\n  remarks: ''\n  example:\n  - \"The following example creates a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and attaches them to a <xref:System.Windows.Controls.Button> which is a command source for the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.  \\n  \\n First, the <xref:System.Windows.Controls.Button> is created and associated with the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.  \\n  \\n [!code-xml[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewcmdmanageraddhandlersxaml)]  \\n  \\n Next, the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and the <xref:System.Windows.Input.ExecutedRoutedEventHandler> are created.  \\n  \\n [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanagerexecutedhandler)]\\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanagerexecutedhandler)]  \\n  \\n [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanagercanexecutehandler)]\\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanagercanexecutehandler)]  \\n  \\n And finally, the handlers are attached to the <xref:System.Windows.Controls.Button> using the <xref:System.Windows.Input.CommandManager.AddCanExecuteHandler%2A> and <xref:System.Windows.Input.CommandManager.AddExecutedHandler%2A>.  \\n  \\n [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanageraddhandlers)]\\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanageraddhandlers)]\"\n  syntax:\n    content: public static void AddCanExecuteHandler (System.Windows.UIElement element, System.Windows.Input.CanExecuteRoutedEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element to attach <code>handler</code> to.\n    - id: handler\n      type: System.Windows.Input.CanExecuteRoutedEventHandler\n      description: The can execute handler.\n  overload: System.Windows.Input.CommandManager.AddCanExecuteHandler*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> or <code>handler</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.CommandManager.AddExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)\n  commentId: M:System.Windows.Input.CommandManager.AddExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)\n  id: AddExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)\n  parent: System.Windows.Input.CommandManager\n  langs:\n  - csharp\n  name: AddExecutedHandler(UIElement, ExecutedRoutedEventHandler)\n  nameWithType: CommandManager.AddExecutedHandler(UIElement, ExecutedRoutedEventHandler)\n  fullName: CommandManager.AddExecutedHandler(UIElement, ExecutedRoutedEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Attaches the specified <xref href=\"System.Windows.Input.ExecutedRoutedEventHandler\"></xref> to the specified element.\n  remarks: ''\n  example:\n  - \"The following example creates a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and attaches them to a <xref:System.Windows.Controls.Button> which is a command source for the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.  \\n  \\n First, the <xref:System.Windows.Controls.Button> is created and associated with the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.  \\n  \\n [!code-xml[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewcmdmanageraddhandlersxaml)]  \\n  \\n Next, the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and the <xref:System.Windows.Input.ExecutedRoutedEventHandler> are created.  \\n  \\n [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanagerexecutedhandler)]\\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanagerexecutedhandler)]  \\n  \\n [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanagercanexecutehandler)]\\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanagercanexecutehandler)]  \\n  \\n And finally, the handlers are attached to the <xref:System.Windows.Controls.Button> using the <xref:System.Windows.Input.CommandManager.AddCanExecuteHandler%2A> and <xref:System.Windows.Input.CommandManager.AddExecutedHandler%2A>.  \\n  \\n [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanageraddhandlers)]\\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanageraddhandlers)]\"\n  syntax:\n    content: public static void AddExecutedHandler (System.Windows.UIElement element, System.Windows.Input.ExecutedRoutedEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element to attach <code>handler</code> to.\n    - id: handler\n      type: System.Windows.Input.ExecutedRoutedEventHandler\n      description: The executed handler.\n  overload: System.Windows.Input.CommandManager.AddExecutedHandler*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> or <code>handler</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Input.CommandManager.AddPreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)\n  commentId: M:System.Windows.Input.CommandManager.AddPreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)\n  id: AddPreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)\n  parent: System.Windows.Input.CommandManager\n  langs:\n  - csharp\n  name: AddPreviewCanExecuteHandler(UIElement, CanExecuteRoutedEventHandler)\n  nameWithType: CommandManager.AddPreviewCanExecuteHandler(UIElement, CanExecuteRoutedEventHandler)\n  fullName: CommandManager.AddPreviewCanExecuteHandler(UIElement, CanExecuteRoutedEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Attaches the specified <xref href=\"System.Windows.Input.CanExecuteRoutedEventHandler\"></xref> to the specified element.\n  remarks: ''\n  example:\n  - \"The following example creates a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and attaches them to a <xref:System.Windows.Controls.Button> which is a command source for the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.  \\n  \\n First, the <xref:System.Windows.Controls.Button> is created and associated with the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.  \\n  \\n [!code-xml[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewcmdmanageraddhandlersxaml)]  \\n  \\n Next, the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and the <xref:System.Windows.Input.ExecutedRoutedEventHandler> are created.  \\n  \\n [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanagerexecutedhandler)]\\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanagerexecutedhandler)]  \\n  \\n [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanagercanexecutehandler)]\\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanagercanexecutehandler)]  \\n  \\n Finally, the handlers are attached to the <xref:System.Windows.Controls.Button> using the <xref:System.Windows.Input.CommandManager.AddCanExecuteHandler%2A> and <xref:System.Windows.Input.CommandManager.AddExecutedHandler%2A>.  \\n  \\n [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanageraddhandlers)]\\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanageraddhandlers)]\"\n  syntax:\n    content: public static void AddPreviewCanExecuteHandler (System.Windows.UIElement element, System.Windows.Input.CanExecuteRoutedEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element to attach <code>handler</code> to.\n    - id: handler\n      type: System.Windows.Input.CanExecuteRoutedEventHandler\n      description: The can execute handler.\n  overload: System.Windows.Input.CommandManager.AddPreviewCanExecuteHandler*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> or <code>handler</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.CommandManager.AddPreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)\n  commentId: M:System.Windows.Input.CommandManager.AddPreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)\n  id: AddPreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)\n  parent: System.Windows.Input.CommandManager\n  langs:\n  - csharp\n  name: AddPreviewExecutedHandler(UIElement, ExecutedRoutedEventHandler)\n  nameWithType: CommandManager.AddPreviewExecutedHandler(UIElement, ExecutedRoutedEventHandler)\n  fullName: CommandManager.AddPreviewExecutedHandler(UIElement, ExecutedRoutedEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Attaches the specified <xref href=\"System.Windows.Input.ExecutedRoutedEventHandler\"></xref> to the specified element.\n  remarks: ''\n  example:\n  - \"The following example creates a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and attaches them to a <xref:System.Windows.Controls.Button> which is a command source for the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.  \\n  \\n First, the <xref:System.Windows.Controls.Button> is created and associated with the <xref:System.Windows.Input.ApplicationCommands.Help%2A> command.  \\n  \\n [!code-xml[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewcmdmanageraddhandlersxaml)]  \\n  \\n Next, the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and the <xref:System.Windows.Input.ExecutedRoutedEventHandler> are created.  \\n  \\n [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanagerexecutedhandler)]\\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerExecutedHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanagerexecutedhandler)]  \\n  \\n [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanagercanexecutehandler)]\\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerCanExecuteHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanagercanexecutehandler)]  \\n  \\n Finally, the handlers are attached to the <xref:System.Windows.Controls.Button> using the <xref:System.Windows.Input.CommandManager.AddCanExecuteHandler%2A> and <xref:System.Windows.Input.CommandManager.AddExecutedHandler%2A>.  \\n  \\n [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanageraddhandlers)]\\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerAddHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanageraddhandlers)]\"\n  syntax:\n    content: public static void AddPreviewExecutedHandler (System.Windows.UIElement element, System.Windows.Input.ExecutedRoutedEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element to attach <code>handler</code> to.\n    - id: handler\n      type: System.Windows.Input.ExecutedRoutedEventHandler\n      description: The can execute handler.\n  overload: System.Windows.Input.CommandManager.AddPreviewExecutedHandler*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> or <code>handler</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.CommandManager.CanExecuteEvent\n  commentId: F:System.Windows.Input.CommandManager.CanExecuteEvent\n  id: CanExecuteEvent\n  parent: System.Windows.Input.CommandManager\n  langs:\n  - csharp\n  name: CanExecuteEvent\n  nameWithType: CommandManager.CanExecuteEvent\n  fullName: CommandManager.CanExecuteEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Identifies the <xref href=\"System.Windows.Input.CommandManager.CanExecute\"></xref> attached event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent CanExecuteEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.CommandManager.ExecutedEvent\n  commentId: F:System.Windows.Input.CommandManager.ExecutedEvent\n  id: ExecutedEvent\n  parent: System.Windows.Input.CommandManager\n  langs:\n  - csharp\n  name: ExecutedEvent\n  nameWithType: CommandManager.ExecutedEvent\n  fullName: CommandManager.ExecutedEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Identifies the <xref href=\"System.Windows.Input.CommandManager.Executed\"></xref> attached event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent ExecutedEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.CommandManager.InvalidateRequerySuggested\n  commentId: M:System.Windows.Input.CommandManager.InvalidateRequerySuggested\n  id: InvalidateRequerySuggested\n  parent: System.Windows.Input.CommandManager\n  langs:\n  - csharp\n  name: InvalidateRequerySuggested()\n  nameWithType: CommandManager.InvalidateRequerySuggested()\n  fullName: CommandManager.InvalidateRequerySuggested()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Forces the <xref href=\"System.Windows.Input.CommandManager\"></xref> to raise the <xref href=\"System.Windows.Input.CommandManager.RequerySuggested\"></xref> event.\n  remarks: The <xref:System.Windows.Input.CommandManager> only pays attention to certain conditions in determining when the command target has changed, such as change in keyboard focus.  In situations where the <xref:System.Windows.Input.CommandManager> does not sufficiently determine a change in conditions that cause a command to not be able to execute, <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> can be called to force the <xref:System.Windows.Input.CommandManager> to raise the <xref:System.Windows.Input.CommandManager.RequerySuggested> event.\n  example:\n  - \"The following example uses a <xref:System.Windows.Threading.DispatcherTimer> to periodically call <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> to force the <xref:System.Windows.Input.CommandManager> to raise the <xref:System.Windows.Input.CommandManager.RequerySuggested> event.  \\n  \\n [!code-csharp[InvalidateRequeryWithDispatcherTimer#InvalidateSampleDispatcherTimer](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimer)]\\n [!code-vb[InvalidateRequeryWithDispatcherTimer#InvalidateSampleDispatcherTimer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimer)]\"\n  syntax:\n    content: public static void InvalidateRequerySuggested ();\n    parameters: []\n  overload: System.Windows.Input.CommandManager.InvalidateRequerySuggested*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Input.CommandManager.PreviewCanExecuteEvent\n  commentId: F:System.Windows.Input.CommandManager.PreviewCanExecuteEvent\n  id: PreviewCanExecuteEvent\n  parent: System.Windows.Input.CommandManager\n  langs:\n  - csharp\n  name: PreviewCanExecuteEvent\n  nameWithType: CommandManager.PreviewCanExecuteEvent\n  fullName: CommandManager.PreviewCanExecuteEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Identifies the <xref href=\"System.Windows.Input.CommandManager.PreviewCanExecute\"></xref> attached event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewCanExecuteEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.CommandManager.PreviewExecutedEvent\n  commentId: F:System.Windows.Input.CommandManager.PreviewExecutedEvent\n  id: PreviewExecutedEvent\n  parent: System.Windows.Input.CommandManager\n  langs:\n  - csharp\n  name: PreviewExecutedEvent\n  nameWithType: CommandManager.PreviewExecutedEvent\n  fullName: CommandManager.PreviewExecutedEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Identifies the <xref href=\"System.Windows.Input.CommandManager.PreviewExecuted\"></xref> attached event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent PreviewExecutedEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.CommandManager.RegisterClassCommandBinding(System.Type,System.Windows.Input.CommandBinding)\n  commentId: M:System.Windows.Input.CommandManager.RegisterClassCommandBinding(System.Type,System.Windows.Input.CommandBinding)\n  id: RegisterClassCommandBinding(System.Type,System.Windows.Input.CommandBinding)\n  parent: System.Windows.Input.CommandManager\n  langs:\n  - csharp\n  name: RegisterClassCommandBinding(Type, CommandBinding)\n  nameWithType: CommandManager.RegisterClassCommandBinding(Type, CommandBinding)\n  fullName: CommandManager.RegisterClassCommandBinding(Type, CommandBinding)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Registers a <xref href=\"System.Windows.Input.CommandBinding\"></xref> with the specified type.\n  remarks: This method enables a <xref:System.Windows.Input.CommandBinding> to be associated with a class instead than an instance of a class.\n  syntax:\n    content: public static void RegisterClassCommandBinding (Type type, System.Windows.Input.CommandBinding commandBinding);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The class with which to register <code>commandBinding</code>.\n    - id: commandBinding\n      type: System.Windows.Input.CommandBinding\n      description: The command binding to register.\n  overload: System.Windows.Input.CommandManager.RegisterClassCommandBinding*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> or <code>commandBinding</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.CommandManager.RegisterClassInputBinding(System.Type,System.Windows.Input.InputBinding)\n  commentId: M:System.Windows.Input.CommandManager.RegisterClassInputBinding(System.Type,System.Windows.Input.InputBinding)\n  id: RegisterClassInputBinding(System.Type,System.Windows.Input.InputBinding)\n  parent: System.Windows.Input.CommandManager\n  langs:\n  - csharp\n  name: RegisterClassInputBinding(Type, InputBinding)\n  nameWithType: CommandManager.RegisterClassInputBinding(Type, InputBinding)\n  fullName: CommandManager.RegisterClassInputBinding(Type, InputBinding)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Registers the specified <xref href=\"System.Windows.Input.InputBinding\"></xref> with the specified type.\n  remarks: This method enables an <xref:System.Windows.Input.InputBinding> to be associated with a type instead of an instance of a class.\n  syntax:\n    content: public static void RegisterClassInputBinding (Type type, System.Windows.Input.InputBinding inputBinding);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to register <code>inputBinding</code> with.\n    - id: inputBinding\n      type: System.Windows.Input.InputBinding\n      description: The input binding to register.\n  overload: System.Windows.Input.CommandManager.RegisterClassInputBinding*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> or <code>inputBinding</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Input.CommandManager.RemoveCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)\n  commentId: M:System.Windows.Input.CommandManager.RemoveCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)\n  id: RemoveCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)\n  parent: System.Windows.Input.CommandManager\n  langs:\n  - csharp\n  name: RemoveCanExecuteHandler(UIElement, CanExecuteRoutedEventHandler)\n  nameWithType: CommandManager.RemoveCanExecuteHandler(UIElement, CanExecuteRoutedEventHandler)\n  fullName: CommandManager.RemoveCanExecuteHandler(UIElement, CanExecuteRoutedEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Detaches the specified <xref href=\"System.Windows.Input.CanExecuteRoutedEventHandler\"></xref> from the specified element.\n  remarks: ''\n  example:\n  - \"The following example detaches a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> which had previously been attached to a <xref:System.Windows.Controls.Button>.  \\n  \\n [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanagerremovehandlers)]\\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanagerremovehandlers)]\"\n  syntax:\n    content: public static void RemoveCanExecuteHandler (System.Windows.UIElement element, System.Windows.Input.CanExecuteRoutedEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element to remove <code>handler</code> from.\n    - id: handler\n      type: System.Windows.Input.CanExecuteRoutedEventHandler\n      description: The can execute handler.\n  overload: System.Windows.Input.CommandManager.RemoveCanExecuteHandler*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> or <code>handler</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.CommandManager.RemoveExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)\n  commentId: M:System.Windows.Input.CommandManager.RemoveExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)\n  id: RemoveExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)\n  parent: System.Windows.Input.CommandManager\n  langs:\n  - csharp\n  name: RemoveExecutedHandler(UIElement, ExecutedRoutedEventHandler)\n  nameWithType: CommandManager.RemoveExecutedHandler(UIElement, ExecutedRoutedEventHandler)\n  fullName: CommandManager.RemoveExecutedHandler(UIElement, ExecutedRoutedEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Detaches the specified <xref href=\"System.Windows.Input.ExecutedRoutedEventHandler\"></xref> from the specified element.\n  remarks: ''\n  example:\n  - \"The following example detaches a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> which had previously been attached to a <xref:System.Windows.Controls.Button>.  \\n  \\n [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanagerremovehandlers)]\\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanagerremovehandlers)]\"\n  syntax:\n    content: public static void RemoveExecutedHandler (System.Windows.UIElement element, System.Windows.Input.ExecutedRoutedEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element to remove <code>handler</code> from.\n    - id: handler\n      type: System.Windows.Input.ExecutedRoutedEventHandler\n      description: The executed handler.\n  overload: System.Windows.Input.CommandManager.RemoveExecutedHandler*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> or <code>handler</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.CommandManager.RemovePreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)\n  commentId: M:System.Windows.Input.CommandManager.RemovePreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)\n  id: RemovePreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)\n  parent: System.Windows.Input.CommandManager\n  langs:\n  - csharp\n  name: RemovePreviewCanExecuteHandler(UIElement, CanExecuteRoutedEventHandler)\n  nameWithType: CommandManager.RemovePreviewCanExecuteHandler(UIElement, CanExecuteRoutedEventHandler)\n  fullName: CommandManager.RemovePreviewCanExecuteHandler(UIElement, CanExecuteRoutedEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Detaches the specified <xref href=\"System.Windows.Input.CanExecuteRoutedEventHandler\"></xref> from the specified element.\n  remarks: ''\n  example:\n  - \"The following example detaches a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> which had previously been attached to a <xref:System.Windows.Controls.Button>.  \\n  \\n [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanagerremovehandlers)]\\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanagerremovehandlers)]\"\n  syntax:\n    content: public static void RemovePreviewCanExecuteHandler (System.Windows.UIElement element, System.Windows.Input.CanExecuteRoutedEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element to remove <code>handler</code> from.\n    - id: handler\n      type: System.Windows.Input.CanExecuteRoutedEventHandler\n      description: The can execute handler.\n  overload: System.Windows.Input.CommandManager.RemovePreviewCanExecuteHandler*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> or <code>handler</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.CommandManager.RemovePreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)\n  commentId: M:System.Windows.Input.CommandManager.RemovePreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)\n  id: RemovePreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)\n  parent: System.Windows.Input.CommandManager\n  langs:\n  - csharp\n  name: RemovePreviewExecutedHandler(UIElement, ExecutedRoutedEventHandler)\n  nameWithType: CommandManager.RemovePreviewExecutedHandler(UIElement, ExecutedRoutedEventHandler)\n  fullName: CommandManager.RemovePreviewExecutedHandler(UIElement, ExecutedRoutedEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Detaches the specified <xref href=\"System.Windows.Input.ExecutedRoutedEventHandler\"></xref> from the specified element.\n  remarks: ''\n  example:\n  - \"The following example detaches a <xref:System.Windows.Input.CanExecuteRoutedEventHandler> and an <xref:System.Windows.Input.ExecutedRoutedEventHandler> which had previously been attached to a <xref:System.Windows.Controls.Button>.  \\n  \\n [!code-csharp[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewcmdmanagerremovehandlers)]\\n [!code-vb[commandingoverviewsnippets#CommandingOverviewCmdManagerRemoveHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewcmdmanagerremovehandlers)]\"\n  syntax:\n    content: public static void RemovePreviewExecutedHandler (System.Windows.UIElement element, System.Windows.Input.ExecutedRoutedEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.UIElement\n      description: The element to remove <code>handler</code> from.\n    - id: handler\n      type: System.Windows.Input.ExecutedRoutedEventHandler\n      description: The executed handler.\n  overload: System.Windows.Input.CommandManager.RemovePreviewExecutedHandler*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>element</code> or <code>handler</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.CommandManager.RequerySuggested\n  commentId: E:System.Windows.Input.CommandManager.RequerySuggested\n  id: RequerySuggested\n  parent: System.Windows.Input.CommandManager\n  langs:\n  - csharp\n  name: RequerySuggested\n  nameWithType: CommandManager.RequerySuggested\n  fullName: CommandManager.RequerySuggested\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Occurs when the <xref href=\"System.Windows.Input.CommandManager\"></xref> detects conditions that might change the ability of a command to execute.\n  remarks: Since this event is static, it will only hold onto the handler as a weak reference.  Objects that listen for this event should keep a strong reference to their event handler to avoid it being garbage collected. This can be accomplished by having a private field and assigning the handler as the value before or after attaching to this event.\n  syntax:\n    content: public static event EventHandler RequerySuggested;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Windows.Input.CommandManager.AddCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)\n  parent: System.Windows.Input.CommandManager\n  isExternal: false\n  name: AddCanExecuteHandler(UIElement, CanExecuteRoutedEventHandler)\n  nameWithType: CommandManager.AddCanExecuteHandler(UIElement, CanExecuteRoutedEventHandler)\n  fullName: CommandManager.AddCanExecuteHandler(UIElement, CanExecuteRoutedEventHandler)\n- uid: System.Windows.UIElement\n  parent: System.Windows\n  isExternal: false\n  name: UIElement\n  nameWithType: UIElement\n  fullName: System.Windows.UIElement\n- uid: System.Windows.Input.CanExecuteRoutedEventHandler\n  parent: System.Windows.Input\n  isExternal: false\n  name: CanExecuteRoutedEventHandler\n  nameWithType: CanExecuteRoutedEventHandler\n  fullName: System.Windows.Input.CanExecuteRoutedEventHandler\n- uid: System.Windows.Input.CommandManager.AddExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)\n  parent: System.Windows.Input.CommandManager\n  isExternal: false\n  name: AddExecutedHandler(UIElement, ExecutedRoutedEventHandler)\n  nameWithType: CommandManager.AddExecutedHandler(UIElement, ExecutedRoutedEventHandler)\n  fullName: CommandManager.AddExecutedHandler(UIElement, ExecutedRoutedEventHandler)\n- uid: System.Windows.Input.ExecutedRoutedEventHandler\n  parent: System.Windows.Input\n  isExternal: false\n  name: ExecutedRoutedEventHandler\n  nameWithType: ExecutedRoutedEventHandler\n  fullName: System.Windows.Input.ExecutedRoutedEventHandler\n- uid: System.Windows.Input.CommandManager.AddPreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)\n  parent: System.Windows.Input.CommandManager\n  isExternal: false\n  name: AddPreviewCanExecuteHandler(UIElement, CanExecuteRoutedEventHandler)\n  nameWithType: CommandManager.AddPreviewCanExecuteHandler(UIElement, CanExecuteRoutedEventHandler)\n  fullName: CommandManager.AddPreviewCanExecuteHandler(UIElement, CanExecuteRoutedEventHandler)\n- uid: System.Windows.Input.CommandManager.AddPreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)\n  parent: System.Windows.Input.CommandManager\n  isExternal: false\n  name: AddPreviewExecutedHandler(UIElement, ExecutedRoutedEventHandler)\n  nameWithType: CommandManager.AddPreviewExecutedHandler(UIElement, ExecutedRoutedEventHandler)\n  fullName: CommandManager.AddPreviewExecutedHandler(UIElement, ExecutedRoutedEventHandler)\n- uid: System.Windows.Input.CommandManager.CanExecuteEvent\n  parent: System.Windows.Input.CommandManager\n  isExternal: false\n  name: CanExecuteEvent\n  nameWithType: CommandManager.CanExecuteEvent\n  fullName: CommandManager.CanExecuteEvent\n- uid: System.Windows.RoutedEvent\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEvent\n  nameWithType: RoutedEvent\n  fullName: System.Windows.RoutedEvent\n- uid: System.Windows.Input.CommandManager.ExecutedEvent\n  parent: System.Windows.Input.CommandManager\n  isExternal: false\n  name: ExecutedEvent\n  nameWithType: CommandManager.ExecutedEvent\n  fullName: CommandManager.ExecutedEvent\n- uid: System.Windows.Input.CommandManager.InvalidateRequerySuggested\n  parent: System.Windows.Input.CommandManager\n  isExternal: false\n  name: InvalidateRequerySuggested()\n  nameWithType: CommandManager.InvalidateRequerySuggested()\n  fullName: CommandManager.InvalidateRequerySuggested()\n- uid: System.Windows.Input.CommandManager.PreviewCanExecuteEvent\n  parent: System.Windows.Input.CommandManager\n  isExternal: false\n  name: PreviewCanExecuteEvent\n  nameWithType: CommandManager.PreviewCanExecuteEvent\n  fullName: CommandManager.PreviewCanExecuteEvent\n- uid: System.Windows.Input.CommandManager.PreviewExecutedEvent\n  parent: System.Windows.Input.CommandManager\n  isExternal: false\n  name: PreviewExecutedEvent\n  nameWithType: CommandManager.PreviewExecutedEvent\n  fullName: CommandManager.PreviewExecutedEvent\n- uid: System.Windows.Input.CommandManager.RegisterClassCommandBinding(System.Type,System.Windows.Input.CommandBinding)\n  parent: System.Windows.Input.CommandManager\n  isExternal: false\n  name: RegisterClassCommandBinding(Type, CommandBinding)\n  nameWithType: CommandManager.RegisterClassCommandBinding(Type, CommandBinding)\n  fullName: CommandManager.RegisterClassCommandBinding(Type, CommandBinding)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.Input.CommandBinding\n  parent: System.Windows.Input\n  isExternal: false\n  name: CommandBinding\n  nameWithType: CommandBinding\n  fullName: System.Windows.Input.CommandBinding\n- uid: System.Windows.Input.CommandManager.RegisterClassInputBinding(System.Type,System.Windows.Input.InputBinding)\n  parent: System.Windows.Input.CommandManager\n  isExternal: false\n  name: RegisterClassInputBinding(Type, InputBinding)\n  nameWithType: CommandManager.RegisterClassInputBinding(Type, InputBinding)\n  fullName: CommandManager.RegisterClassInputBinding(Type, InputBinding)\n- uid: System.Windows.Input.InputBinding\n  parent: System.Windows.Input\n  isExternal: false\n  name: InputBinding\n  nameWithType: InputBinding\n  fullName: System.Windows.Input.InputBinding\n- uid: System.Windows.Input.CommandManager.RemoveCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)\n  parent: System.Windows.Input.CommandManager\n  isExternal: false\n  name: RemoveCanExecuteHandler(UIElement, CanExecuteRoutedEventHandler)\n  nameWithType: CommandManager.RemoveCanExecuteHandler(UIElement, CanExecuteRoutedEventHandler)\n  fullName: CommandManager.RemoveCanExecuteHandler(UIElement, CanExecuteRoutedEventHandler)\n- uid: System.Windows.Input.CommandManager.RemoveExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)\n  parent: System.Windows.Input.CommandManager\n  isExternal: false\n  name: RemoveExecutedHandler(UIElement, ExecutedRoutedEventHandler)\n  nameWithType: CommandManager.RemoveExecutedHandler(UIElement, ExecutedRoutedEventHandler)\n  fullName: CommandManager.RemoveExecutedHandler(UIElement, ExecutedRoutedEventHandler)\n- uid: System.Windows.Input.CommandManager.RemovePreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)\n  parent: System.Windows.Input.CommandManager\n  isExternal: false\n  name: RemovePreviewCanExecuteHandler(UIElement, CanExecuteRoutedEventHandler)\n  nameWithType: CommandManager.RemovePreviewCanExecuteHandler(UIElement, CanExecuteRoutedEventHandler)\n  fullName: CommandManager.RemovePreviewCanExecuteHandler(UIElement, CanExecuteRoutedEventHandler)\n- uid: System.Windows.Input.CommandManager.RemovePreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)\n  parent: System.Windows.Input.CommandManager\n  isExternal: false\n  name: RemovePreviewExecutedHandler(UIElement, ExecutedRoutedEventHandler)\n  nameWithType: CommandManager.RemovePreviewExecutedHandler(UIElement, ExecutedRoutedEventHandler)\n  fullName: CommandManager.RemovePreviewExecutedHandler(UIElement, ExecutedRoutedEventHandler)\n- uid: System.Windows.Input.CommandManager.RequerySuggested\n  parent: System.Windows.Input.CommandManager\n  isExternal: false\n  name: RequerySuggested\n  nameWithType: CommandManager.RequerySuggested\n  fullName: CommandManager.RequerySuggested\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Input.CommandManager.AddCanExecuteHandler*\n  parent: System.Windows.Input.CommandManager\n  isExternal: false\n  name: AddCanExecuteHandler\n  nameWithType: CommandManager.AddCanExecuteHandler\n  fullName: CommandManager.AddCanExecuteHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n- uid: System.Windows.Input.CommandManager.AddExecutedHandler*\n  parent: System.Windows.Input.CommandManager\n  isExternal: false\n  name: AddExecutedHandler\n  nameWithType: CommandManager.AddExecutedHandler\n  fullName: CommandManager.AddExecutedHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n- uid: System.Windows.Input.CommandManager.AddPreviewCanExecuteHandler*\n  parent: System.Windows.Input.CommandManager\n  isExternal: false\n  name: AddPreviewCanExecuteHandler\n  nameWithType: CommandManager.AddPreviewCanExecuteHandler\n  fullName: CommandManager.AddPreviewCanExecuteHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n- uid: System.Windows.Input.CommandManager.AddPreviewExecutedHandler*\n  parent: System.Windows.Input.CommandManager\n  isExternal: false\n  name: AddPreviewExecutedHandler\n  nameWithType: CommandManager.AddPreviewExecutedHandler\n  fullName: CommandManager.AddPreviewExecutedHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n- uid: System.Windows.Input.CommandManager.InvalidateRequerySuggested*\n  parent: System.Windows.Input.CommandManager\n  isExternal: false\n  name: InvalidateRequerySuggested\n  nameWithType: CommandManager.InvalidateRequerySuggested\n  fullName: CommandManager.InvalidateRequerySuggested\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n- uid: System.Windows.Input.CommandManager.RegisterClassCommandBinding*\n  parent: System.Windows.Input.CommandManager\n  isExternal: false\n  name: RegisterClassCommandBinding\n  nameWithType: CommandManager.RegisterClassCommandBinding\n  fullName: CommandManager.RegisterClassCommandBinding\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n- uid: System.Windows.Input.CommandManager.RegisterClassInputBinding*\n  parent: System.Windows.Input.CommandManager\n  isExternal: false\n  name: RegisterClassInputBinding\n  nameWithType: CommandManager.RegisterClassInputBinding\n  fullName: CommandManager.RegisterClassInputBinding\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n- uid: System.Windows.Input.CommandManager.RemoveCanExecuteHandler*\n  parent: System.Windows.Input.CommandManager\n  isExternal: false\n  name: RemoveCanExecuteHandler\n  nameWithType: CommandManager.RemoveCanExecuteHandler\n  fullName: CommandManager.RemoveCanExecuteHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n- uid: System.Windows.Input.CommandManager.RemoveExecutedHandler*\n  parent: System.Windows.Input.CommandManager\n  isExternal: false\n  name: RemoveExecutedHandler\n  nameWithType: CommandManager.RemoveExecutedHandler\n  fullName: CommandManager.RemoveExecutedHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n- uid: System.Windows.Input.CommandManager.RemovePreviewCanExecuteHandler*\n  parent: System.Windows.Input.CommandManager\n  isExternal: false\n  name: RemovePreviewCanExecuteHandler\n  nameWithType: CommandManager.RemovePreviewCanExecuteHandler\n  fullName: CommandManager.RemovePreviewCanExecuteHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n- uid: System.Windows.Input.CommandManager.RemovePreviewExecutedHandler*\n  parent: System.Windows.Input.CommandManager\n  isExternal: false\n  name: RemovePreviewExecutedHandler\n  nameWithType: CommandManager.RemovePreviewExecutedHandler\n  fullName: CommandManager.RemovePreviewExecutedHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CommandManager.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}