### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.RequestContext
  commentId: T:System.ServiceModel.Channels.RequestContext
  id: RequestContext
  children:
  - System.ServiceModel.Channels.RequestContext.#ctor
  - System.ServiceModel.Channels.RequestContext.Abort
  - System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.RequestContext.Close
  - System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)
  - System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)
  - System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)
  - System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)
  - System.ServiceModel.Channels.RequestContext.RequestMessage
  - System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose
  langs:
  - csharp
  name: RequestContext
  nameWithType: RequestContext
  fullName: System.ServiceModel.Channels.RequestContext
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Provides a reply that is correlated to an incoming request.
  remarks: "You get a request context from an <xref:System.ServiceModel.Channels.IReplyChannel>. Each <xref:System.ServiceModel.Channels.RequestContext> encapsulates the information required to reply to the request, so that you do not have to block on the channel when waiting for each request message to receive a reply.  \n  \n In the request/reply model, the <xref:System.ServiceModel.Channels.RequestContext> object is the link between the request that comes in and the reply that goes out. When the server receives a request, it provides a <xref:System.ServiceModel.Channels.RequestContext> instance that represents the request to the channel. The request context contains the original request message among other useful properties. This request context is then stashed inside the <xref:System.ServiceModel.OperationContext> for retrieval by your service. You typically use the <xref:System.ServiceModel.OperationContext.Current%2A> property to access the request of the current operation.  \n  \n The value of the <xref:System.ServiceModel.Channels.RequestContext> can be `null`. Because the role of the request context is to link requests to replies, it does not make sense to have a request context when you do not have a reply, and so in this case the context is set to `null`. For a one-way operation on top of the request/reply model, the server receives requests but does not send back a response to the client. So if the <xref:System.ServiceModel.Channels.RequestContext> is `null` unexpectedly, check first whether the operation contract is IsOneWay.  \n  \n Special note for Managed C++ users deriving from this class:  \n  \n-   Put your cleanup code in (On)(Begin)Close (and/or OnAbort), not in a destructor.  \n  \n-   Avoid destructors: they cause the compiler to auto-generate <xref:System.IDisposable>.  \n  \n-   Avoid non-reference members: they can cause the compiler to auto-generate <xref:System.IDisposable>.  \n  \n-   Avoid finalizers; but if you include one, you should suppress the build warning and call <xref:System.GC.SuppressFinalize%28System.Object%29> and the finalizer itself from (On)(Begin)Close (and/or OnAbort) to emulate what would have been the auto-generated <xref:System.IDisposable> behavior."
  syntax:
    content: 'public abstract class RequestContext : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.RequestContext.#ctor
  commentId: M:System.ServiceModel.Channels.RequestContext.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  name: RequestContext()
  nameWithType: RequestContext.RequestContext()
  fullName: RequestContext.RequestContext()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Channels.RequestContext"></xref> class.
  syntax:
    content: protected RequestContext ();
    parameters: []
  overload: System.ServiceModel.Channels.RequestContext.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.RequestContext.Abort
  commentId: M:System.ServiceModel.Channels.RequestContext.Abort
  id: Abort
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  name: Abort()
  nameWithType: RequestContext.Abort()
  fullName: RequestContext.Abort()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When overridden in a derived class, aborts processing the request associated with the context.
  syntax:
    content: public abstract void Abort ();
    parameters: []
  overload: System.ServiceModel.Channels.RequestContext.Abort*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  id: BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  name: BeginReply(Message, AsyncCallback, Object)
  nameWithType: RequestContext.BeginReply(Message, AsyncCallback, Object)
  fullName: RequestContext.BeginReply(Message, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context.
  remarks: "Use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method when the application processing must continue without waiting. Use one of the synchronous <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the time-out interval is exceeded.  \n  \n This method receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either the reply is sent or the time-out occurs."
  syntax:
    content: public abstract IAsyncResult BeginReply (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: The incoming <xref href="System.ServiceModel.Channels.Message"></xref> that contains the request.
    - id: callback
      type: System.AsyncCallback
      description: The <xref href="System.AsyncCallback"></xref> delegate that receives the notification of the asynchronous reply operation completion.
    - id: state
      type: System.Object
      description: An object, specified by the application, that contains state information associated with the asynchronous reply operation.
    return:
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> that references the asynchronous reply operation.
  overload: System.ServiceModel.Channels.RequestContext.BeginReply*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  name: BeginReply(Message, TimeSpan, AsyncCallback, Object)
  nameWithType: RequestContext.BeginReply(Message, TimeSpan, AsyncCallback, Object)
  fullName: RequestContext.BeginReply(Message, TimeSpan, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context within a specified interval of time.
  remarks: "Use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method to allow the application processing to continue without waiting for the request to complete.  \n  \n Use one of the synchronous <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the time-out interval is exceeded. This method receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either the reply is sent or the time-out occurs."
  syntax:
    content: public abstract IAsyncResult BeginReply (System.ServiceModel.Channels.Message message, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: The incoming <xref href="System.ServiceModel.Channels.Message"></xref> that contains the request.
    - id: timeout
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies the interval of time to wait for the reply to an available request.
    - id: callback
      type: System.AsyncCallback
      description: The <xref href="System.AsyncCallback"></xref> delegate that receives the notification of the asynchronous reply operation completion.
    - id: state
      type: System.Object
      description: An object, specified by the application, that contains state information associated with the asynchronous reply operation.
    return:
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> that references the asynchronous reply operation.
  overload: System.ServiceModel.Channels.RequestContext.BeginReply*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.RequestContext.Close
  commentId: M:System.ServiceModel.Channels.RequestContext.Close
  id: Close
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  name: Close()
  nameWithType: RequestContext.Close()
  fullName: RequestContext.Close()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When overridden in a derived class, closes the operation that is replying to the request context associated with the current context.
  syntax:
    content: public abstract void Close ();
    parameters: []
  overload: System.ServiceModel.Channels.RequestContext.Close*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)
  commentId: M:System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)
  id: Close(System.TimeSpan)
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  name: Close(TimeSpan)
  nameWithType: RequestContext.Close(TimeSpan)
  fullName: RequestContext.Close(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When overridden in a derived class, closes the operation that is replying to the request context associated with the current context within a specified interval of time.
  syntax:
    content: public abstract void Close (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies the interval of time within which the reply operation associated with the current context must close.
  overload: System.ServiceModel.Channels.RequestContext.Close*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)
  commentId: M:System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: RequestContext.Dispose(Boolean)
  fullName: RequestContext.Dispose(Boolean)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Releases resources associated with the context.
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'
  overload: System.ServiceModel.Channels.RequestContext.Dispose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)
  commentId: M:System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)
  id: EndReply(System.IAsyncResult)
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  name: EndReply(IAsyncResult)
  nameWithType: RequestContext.EndReply(IAsyncResult)
  fullName: RequestContext.EndReply(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When overridden in a derived class, completes an asynchronous operation to reply to a request message.
  syntax:
    content: public abstract void EndReply (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> returned by a call to one of the <xref href="System.ServiceModel.Channels.RequestContext.BeginReply*"></xref> methods.
  overload: System.ServiceModel.Channels.RequestContext.EndReply*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)
  commentId: M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)
  id: Reply(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  name: Reply(Message)
  nameWithType: RequestContext.Reply(Message)
  fullName: RequestContext.Reply(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When overridden in a derived class, replies to a request message.
  remarks: "Use <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> when it is acceptable for the current thread to be blocked while it replies to the request message. The thread is blocked up to the specified `timeout`.  \n  \n If the application processing must continue without waiting for the reply to complete, use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method. This method receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either a message becomes available in the channel or the time-out occurs."
  syntax:
    content: public abstract void Reply (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: The incoming <xref href="System.ServiceModel.Channels.Message"></xref> that contains the request.
  overload: System.ServiceModel.Channels.RequestContext.Reply*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)
  commentId: M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)
  id: Reply(System.ServiceModel.Channels.Message,System.TimeSpan)
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  name: Reply(Message, TimeSpan)
  nameWithType: RequestContext.Reply(Message, TimeSpan)
  fullName: RequestContext.Reply(Message, TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When overridden in a derived class, replies to a request message within a specified interval of time.
  remarks: "Use <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> when it is acceptable for the current thread to be blocked while it replies to the request message. The thread is blocked up to the specified `timeout`.  \n  \n If the application processing must continue without waiting for the reply to complete, use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method. This method receives notification, through a callback, of the identity of the event handler for the operation. The operation is not complete until either a message becomes available in the channel or the time-out occurs."
  syntax:
    content: public abstract void Reply (System.ServiceModel.Channels.Message message, TimeSpan timeout);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: The incoming <xref href="System.ServiceModel.Channels.Message"></xref> that contains the request.
    - id: timeout
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies the interval of time to wait for the reply to a request.
  overload: System.ServiceModel.Channels.RequestContext.Reply*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.RequestContext.RequestMessage
  commentId: P:System.ServiceModel.Channels.RequestContext.RequestMessage
  id: RequestMessage
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  name: RequestMessage
  nameWithType: RequestContext.RequestMessage
  fullName: RequestContext.RequestMessage
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When overridden in a derived class, gets the message that contains the request.
  syntax:
    content: public abstract System.ServiceModel.Channels.Message RequestMessage { get; }
    return:
      type: System.ServiceModel.Channels.Message
      description: The <xref href="System.ServiceModel.Channels.Message"></xref> that contains the request.
  overload: System.ServiceModel.Channels.RequestContext.RequestMessage*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose
  commentId: M:System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  name: IDisposable.Dispose()
  nameWithType: RequestContext.IDisposable.Dispose()
  fullName: RequestContext.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Releases both managed and unmanaged resources associated with the context.
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Channels.RequestContext.#ctor
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: RequestContext()
  nameWithType: RequestContext.RequestContext()
  fullName: RequestContext.RequestContext()
- uid: System.ServiceModel.Channels.RequestContext.Abort
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: Abort()
  nameWithType: RequestContext.Abort()
  fullName: RequestContext.Abort()
- uid: System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: BeginReply(Message, AsyncCallback, Object)
  nameWithType: RequestContext.BeginReply(Message, AsyncCallback, Object)
  fullName: RequestContext.BeginReply(Message, AsyncCallback, Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: BeginReply(Message, TimeSpan, AsyncCallback, Object)
  nameWithType: RequestContext.BeginReply(Message, TimeSpan, AsyncCallback, Object)
  fullName: RequestContext.BeginReply(Message, TimeSpan, AsyncCallback, Object)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Channels.RequestContext.Close
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: Close()
  nameWithType: RequestContext.Close()
  fullName: RequestContext.Close()
- uid: System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: Close(TimeSpan)
  nameWithType: RequestContext.Close(TimeSpan)
  fullName: RequestContext.Close(TimeSpan)
- uid: System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: RequestContext.Dispose(Boolean)
  fullName: RequestContext.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: EndReply(IAsyncResult)
  nameWithType: RequestContext.EndReply(IAsyncResult)
  fullName: RequestContext.EndReply(IAsyncResult)
- uid: System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: Reply(Message)
  nameWithType: RequestContext.Reply(Message)
  fullName: RequestContext.Reply(Message)
- uid: System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: Reply(Message, TimeSpan)
  nameWithType: RequestContext.Reply(Message, TimeSpan)
  fullName: RequestContext.Reply(Message, TimeSpan)
- uid: System.ServiceModel.Channels.RequestContext.RequestMessage
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: RequestMessage
  nameWithType: RequestContext.RequestMessage
  fullName: RequestContext.RequestMessage
- uid: System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: IDisposable.Dispose()
  nameWithType: RequestContext.IDisposable.Dispose()
  fullName: RequestContext.IDisposable.Dispose()
- uid: System.ServiceModel.Channels.RequestContext.BeginReply*
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: BeginReply
  nameWithType: RequestContext.BeginReply
  fullName: RequestContext.BeginReply
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml
- uid: System.ServiceModel.Channels.RequestContext.#ctor*
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: RequestContext
  nameWithType: RequestContext.RequestContext
  fullName: RequestContext.RequestContext
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml
- uid: System.ServiceModel.Channels.RequestContext.Abort*
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: Abort
  nameWithType: RequestContext.Abort
  fullName: RequestContext.Abort
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml
- uid: System.ServiceModel.Channels.RequestContext.Close*
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: Close
  nameWithType: RequestContext.Close
  fullName: RequestContext.Close
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml
- uid: System.ServiceModel.Channels.RequestContext.Dispose*
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: Dispose
  nameWithType: RequestContext.Dispose
  fullName: RequestContext.Dispose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml
- uid: System.ServiceModel.Channels.RequestContext.EndReply*
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: EndReply
  nameWithType: RequestContext.EndReply
  fullName: RequestContext.EndReply
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml
- uid: System.ServiceModel.Channels.RequestContext.Reply*
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: Reply
  nameWithType: RequestContext.Reply
  fullName: RequestContext.Reply
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml
- uid: System.ServiceModel.Channels.RequestContext.RequestMessage*
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: RequestMessage
  nameWithType: RequestContext.RequestMessage
  fullName: RequestContext.RequestMessage
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml
- uid: System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose*
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: RequestContext.System.IDisposable.Dispose
  fullName: RequestContext.System.IDisposable.Dispose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/RequestContext.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
