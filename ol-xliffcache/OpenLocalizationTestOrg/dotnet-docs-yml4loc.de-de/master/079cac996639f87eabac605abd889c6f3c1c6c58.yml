### YamlMime:ManagedReference
items:
- uid: System.Security.NamedPermissionSet
  commentId: T:System.Security.NamedPermissionSet
  id: NamedPermissionSet
  children:
  - System.Security.NamedPermissionSet.#ctor(System.Security.NamedPermissionSet)
  - System.Security.NamedPermissionSet.#ctor(System.String)
  - System.Security.NamedPermissionSet.#ctor(System.String,System.Security.Permissions.PermissionState)
  - System.Security.NamedPermissionSet.#ctor(System.String,System.Security.PermissionSet)
  - System.Security.NamedPermissionSet.Copy
  - System.Security.NamedPermissionSet.Copy(System.String)
  - System.Security.NamedPermissionSet.Description
  - System.Security.NamedPermissionSet.Equals(System.Object)
  - System.Security.NamedPermissionSet.FromXml(System.Security.SecurityElement)
  - System.Security.NamedPermissionSet.GetHashCode
  - System.Security.NamedPermissionSet.Name
  - System.Security.NamedPermissionSet.ToXml
  langs:
  - csharp
  name: NamedPermissionSet
  nameWithType: NamedPermissionSet
  fullName: System.Security.NamedPermissionSet
  type: Class
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security
  summary: Defines a permission set that has a name and description associated with it. This class cannot be inherited.
  remarks: Named permission sets are used in security policy administration to specify the permissions to be granted to code that belongs to certain code groups. Names are strings of alphanumeric characters. Description strings can consist of any printable characters.
  example:
  - The following code example shows the use of members of the <xref:System.Security.NamedPermissionSet> class.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class NamedPermissionSet : System.Security.PermissionSet
  inheritance:
  - System.Object
  - System.Security.PermissionSet
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Security.PermissionSet.AddPermission(System.Security.IPermission)
  - System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)
  - System.Security.PermissionSet.Assert
  - System.Security.PermissionSet.ContainsNonCodeAccessPermissions
  - System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)
  - System.Security.PermissionSet.CopyTo(System.Array,System.Int32)
  - System.Security.PermissionSet.Count
  - System.Security.PermissionSet.Demand
  - System.Security.PermissionSet.Deny
  - System.Security.PermissionSet.GetEnumerator
  - System.Security.PermissionSet.GetEnumeratorImpl
  - System.Security.PermissionSet.GetPermission(System.Type)
  - System.Security.PermissionSet.GetPermissionImpl(System.Type)
  - System.Security.PermissionSet.Intersect(System.Security.PermissionSet)
  - System.Security.PermissionSet.IsEmpty
  - System.Security.PermissionSet.IsReadOnly
  - System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)
  - System.Security.PermissionSet.IsSynchronized
  - System.Security.PermissionSet.IsUnrestricted
  - System.Security.PermissionSet.PermitOnly
  - System.Security.PermissionSet.RemovePermission(System.Type)
  - System.Security.PermissionSet.RemovePermissionImpl(System.Type)
  - System.Security.PermissionSet.RevertAssert
  - System.Security.PermissionSet.SetPermission(System.Security.IPermission)
  - System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)
  - System.Security.PermissionSet.SyncRoot
  - System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  - System.Security.PermissionSet.ToString
  - System.Security.PermissionSet.Union(System.Security.PermissionSet)
  extensionMethods:
  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/NamedPermissionSet.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.NamedPermissionSet.#ctor(System.Security.NamedPermissionSet)
  commentId: M:System.Security.NamedPermissionSet.#ctor(System.Security.NamedPermissionSet)
  id: '#ctor(System.Security.NamedPermissionSet)'
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: NamedPermissionSet(NamedPermissionSet)
  nameWithType: NamedPermissionSet.NamedPermissionSet(NamedPermissionSet)
  fullName: NamedPermissionSet.NamedPermissionSet(NamedPermissionSet)
  type: Constructor
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security
  summary: Initializes a new instance of the <xref href="System.Security.NamedPermissionSet"></xref> class from another named permission set.
  syntax:
    content: public NamedPermissionSet (System.Security.NamedPermissionSet permSet);
    parameters:
    - id: permSet
      type: System.Security.NamedPermissionSet
      description: The named permission set from which to create the new instance.
  overload: System.Security.NamedPermissionSet.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/NamedPermissionSet.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.NamedPermissionSet.#ctor(System.String)
  commentId: M:System.Security.NamedPermissionSet.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: NamedPermissionSet(String)
  nameWithType: NamedPermissionSet.NamedPermissionSet(String)
  fullName: NamedPermissionSet.NamedPermissionSet(String)
  type: Constructor
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security
  summary: Initializes a new, empty instance of the <xref href="System.Security.NamedPermissionSet"></xref> class with the specified name.
  remarks: Using this constructor creates a named permission set with no permissions but with an <xref:System.Security.Permissions.PermissionState.Unrestricted> permission state. A named permission set in an unrestricted state effectively contains all permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface. The named permission set will contain all built-in permissions as well as all custom user-defined permissions that implement <xref:System.Security.Permissions.IUnrestrictedPermission>. All permissions will have the equivalent of an `Unrestricted` permission state. Permissions that do not implement <xref:System.Security.Permissions.IUnrestrictedPermission> will be empty instances.
  syntax:
    content: public NamedPermissionSet (string name);
    parameters:
    - id: name
      type: System.String
      description: The name for the new named permission set.
  overload: System.Security.NamedPermissionSet.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>name</code> parameter is `null` or is an empty string ("").
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/NamedPermissionSet.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.NamedPermissionSet.#ctor(System.String,System.Security.Permissions.PermissionState)
  commentId: M:System.Security.NamedPermissionSet.#ctor(System.String,System.Security.Permissions.PermissionState)
  id: '#ctor(System.String,System.Security.Permissions.PermissionState)'
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: NamedPermissionSet(String, PermissionState)
  nameWithType: NamedPermissionSet.NamedPermissionSet(String, PermissionState)
  fullName: NamedPermissionSet.NamedPermissionSet(String, PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security
  summary: Initializes a new instance of the <xref href="System.Security.NamedPermissionSet"></xref> class with the specified name in either an unrestricted or a fully restricted state.
  remarks: A named permission set in an unrestricted state effectively contains all permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface. The named permission set will contain all built-in permissions as well as all custom permissions. All permissions will have an `Unrestricted`<xref:System.Security.Permissions.PermissionState>. Permissions that do not implement <xref:System.Security.Permissions.IUnrestrictedPermission>, such as identity permissions, will be empty instances.
  syntax:
    content: public NamedPermissionSet (string name, System.Security.Permissions.PermissionState state);
    parameters:
    - id: name
      type: System.String
      description: The name for the new named permission set.
    - id: state
      type: System.Security.Permissions.PermissionState
      description: One of the <xref href="System.Security.Permissions.PermissionState"></xref> values.
  overload: System.Security.NamedPermissionSet.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>name</code> parameter is `null` or is an empty string ("").
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/NamedPermissionSet.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.NamedPermissionSet.#ctor(System.String,System.Security.PermissionSet)
  commentId: M:System.Security.NamedPermissionSet.#ctor(System.String,System.Security.PermissionSet)
  id: '#ctor(System.String,System.Security.PermissionSet)'
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: NamedPermissionSet(String, PermissionSet)
  nameWithType: NamedPermissionSet.NamedPermissionSet(String, PermissionSet)
  fullName: NamedPermissionSet.NamedPermissionSet(String, PermissionSet)
  type: Constructor
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security
  summary: Initializes a new instance of the <xref href="System.Security.NamedPermissionSet"></xref> class with the specified name from a permission set.
  remarks: ''
  example:
  - The following code example shows the use of the <xref:System.Security.NamedPermissionSet.%23ctor%2A> constructor to create a new <xref:System.Security.NamedPermissionSet> object. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.
  syntax:
    content: public NamedPermissionSet (string name, System.Security.PermissionSet permSet);
    parameters:
    - id: name
      type: System.String
      description: The name for the named permission set.
    - id: permSet
      type: System.Security.PermissionSet
      description: The permission set from which to take the value of the new named permission set.
  overload: System.Security.NamedPermissionSet.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>name</code> parameter is `null` or is an empty string ("").
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/NamedPermissionSet.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.NamedPermissionSet.Copy
  commentId: M:System.Security.NamedPermissionSet.Copy
  id: Copy
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: Copy()
  nameWithType: NamedPermissionSet.Copy()
  fullName: NamedPermissionSet.Copy()
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security
  summary: Creates a permission set copy from a named permission set.
  remarks: ''
  example:
  - The following code example shows the use of the <xref:System.Security.NamedPermissionSet.Copy%2A> method to create a copy of the current <xref:System.Security.NamedPermissionSet>. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.
  syntax:
    content: public override System.Security.PermissionSet Copy ();
    parameters: []
    return:
      type: System.Security.PermissionSet
      description: A permission set that is a copy of the permissions in the named permission set.
  overload: System.Security.NamedPermissionSet.Copy*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/NamedPermissionSet.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.NamedPermissionSet.Copy(System.String)
  commentId: M:System.Security.NamedPermissionSet.Copy(System.String)
  id: Copy(System.String)
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: Copy(String)
  nameWithType: NamedPermissionSet.Copy(String)
  fullName: NamedPermissionSet.Copy(String)
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security
  summary: Creates a copy of the named permission set with a different name but the same permissions.
  syntax:
    content: public System.Security.NamedPermissionSet Copy (string name);
    parameters:
    - id: name
      type: System.String
      description: The name for the new named permission set.
    return:
      type: System.Security.NamedPermissionSet
      description: A copy of the named permission set with the new name.
  overload: System.Security.NamedPermissionSet.Copy*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>name</code> parameter is `null` or is an empty string ("").
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/NamedPermissionSet.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.NamedPermissionSet.Description
  commentId: P:System.Security.NamedPermissionSet.Description
  id: Description
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: Description
  nameWithType: NamedPermissionSet.Description
  fullName: NamedPermissionSet.Description
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security
  summary: Gets or sets the text description of the current named permission set.
  remarks: The description helps the administrator understand in words what permissions the set contains and its intended use.
  example:
  - The following code example shows the use of the <xref:System.Security.NamedPermissionSet.Description%2A> property to display the description of the current <xref:System.Security.NamedPermissionSet>. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: A text description of the named permission set.
  overload: System.Security.NamedPermissionSet.Description*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/NamedPermissionSet.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.NamedPermissionSet.Equals(System.Object)
  commentId: M:System.Security.NamedPermissionSet.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: NamedPermissionSet.Equals(Object)
  fullName: NamedPermissionSet.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security
  summary: Determines whether the specified <xref href="System.Security.NamedPermissionSet"></xref> object is equal to the current <xref href="System.Security.NamedPermissionSet"></xref>.
  remarks: For more information, see <xref:System.Object.Equals%2A>.
  example:
  - The following code example shows the use of the <xref:System.Security.NamedPermissionSet.Equals%2A> method to compare two <xref:System.Security.NamedPermissionSet> objects. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Security.NamedPermissionSet"></xref> object to compare with the current <xref href="System.Security.NamedPermissionSet"></xref>.
    return:
      type: System.Boolean
      description: '`true` if the specified <xref href="System.Security.NamedPermissionSet"></xref> is equal to the current <xref href="System.Security.NamedPermissionSet"></xref> object; otherwise, `false`.'
  overload: System.Security.NamedPermissionSet.Equals*
  exceptions: []
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/NamedPermissionSet.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.NamedPermissionSet.FromXml(System.Security.SecurityElement)
  commentId: M:System.Security.NamedPermissionSet.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: NamedPermissionSet.FromXml(SecurityElement)
  fullName: NamedPermissionSet.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security
  summary: Reconstructs a named permission set with a specified state from an XML encoding.
  remarks: This method recreates the state of a named permission set from an XML element previously created by <xref:System.Security.NamedPermissionSet.ToXml%2A>.
  example:
  - The following code example shows the use of the <xref:System.Security.NamedPermissionSet.FromXml%2A> method to recreate a <xref:System.Security.NamedPermissionSet> object. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.
  syntax:
    content: public override void FromXml (System.Security.SecurityElement et);
    parameters:
    - id: et
      type: System.Security.SecurityElement
      description: A security element containing the XML representation of the named permission set.
  overload: System.Security.NamedPermissionSet.FromXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>et</code> parameter is not a valid representation of a named permission set.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>et</code> parameter is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/NamedPermissionSet.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.NamedPermissionSet.GetHashCode
  commentId: M:System.Security.NamedPermissionSet.GetHashCode
  id: GetHashCode
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: NamedPermissionSet.GetHashCode()
  fullName: NamedPermissionSet.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security
  summary: Gets a hash code for the <xref href="System.Security.NamedPermissionSet"></xref> object that is suitable for use in hashing algorithms and data structures such as a hash table.
  remarks: The hash code for two instances of the same permission might differ, hence a hash code should not be used to compare two <xref:System.Security.NamedPermissionSet> objects.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: A hash code for the current <xref href="System.Security.NamedPermissionSet"></xref> object.
  overload: System.Security.NamedPermissionSet.GetHashCode*
  exceptions: []
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/NamedPermissionSet.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.NamedPermissionSet.Name
  commentId: P:System.Security.NamedPermissionSet.Name
  id: Name
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: Name
  nameWithType: NamedPermissionSet.Name
  fullName: NamedPermissionSet.Name
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security
  summary: Gets or sets the name of the current named permission set.
  remarks: Code groups refer to permission sets by name.
  example:
  - The following code example shows the use of the <xref:System.Security.NamedPermissionSet.Name%2A> property to display the name of a <xref:System.Security.NamedPermissionSet>. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: The name of the named permission set.
  overload: System.Security.NamedPermissionSet.Name*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The name is `null` or is an empty string ("").
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/NamedPermissionSet.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.NamedPermissionSet.ToXml
  commentId: M:System.Security.NamedPermissionSet.ToXml
  id: ToXml
  parent: System.Security.NamedPermissionSet
  langs:
  - csharp
  name: ToXml()
  nameWithType: NamedPermissionSet.ToXml()
  fullName: NamedPermissionSet.ToXml()
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security
  summary: Creates an XML element description of the named permission set.
  remarks: Use <xref:System.Security.NamedPermissionSet.FromXml%2A> to recreate the state represented by the returned element.
  example:
  - The following code example shows the use of the <xref:System.Security.NamedPermissionSet.ToXml%2A> method to recreate a <xref:System.Security.NamedPermissionSet> object. This code example is part of a larger example provided for the <xref:System.Security.NamedPermissionSet> class.
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: The XML representation of the named permission set.
  overload: System.Security.NamedPermissionSet.ToXml*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/NamedPermissionSet.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Security.NamedPermissionSet.#ctor(System.Security.NamedPermissionSet)
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: NamedPermissionSet(NamedPermissionSet)
  nameWithType: NamedPermissionSet.NamedPermissionSet(NamedPermissionSet)
  fullName: NamedPermissionSet.NamedPermissionSet(NamedPermissionSet)
- uid: System.Security.NamedPermissionSet
  parent: System.Security
  isExternal: false
  name: NamedPermissionSet
  nameWithType: NamedPermissionSet
  fullName: System.Security.NamedPermissionSet
- uid: System.Security.NamedPermissionSet.#ctor(System.String)
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: NamedPermissionSet(String)
  nameWithType: NamedPermissionSet.NamedPermissionSet(String)
  fullName: NamedPermissionSet.NamedPermissionSet(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.NamedPermissionSet.#ctor(System.String,System.Security.Permissions.PermissionState)
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: NamedPermissionSet(String, PermissionState)
  nameWithType: NamedPermissionSet.NamedPermissionSet(String, PermissionState)
  fullName: NamedPermissionSet.NamedPermissionSet(String, PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.NamedPermissionSet.#ctor(System.String,System.Security.PermissionSet)
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: NamedPermissionSet(String, PermissionSet)
  nameWithType: NamedPermissionSet.NamedPermissionSet(String, PermissionSet)
  fullName: NamedPermissionSet.NamedPermissionSet(String, PermissionSet)
- uid: System.Security.NamedPermissionSet.Copy
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: Copy()
  nameWithType: NamedPermissionSet.Copy()
  fullName: NamedPermissionSet.Copy()
- uid: System.Security.NamedPermissionSet.Copy(System.String)
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: Copy(String)
  nameWithType: NamedPermissionSet.Copy(String)
  fullName: NamedPermissionSet.Copy(String)
- uid: System.Security.NamedPermissionSet.Description
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: Description
  nameWithType: NamedPermissionSet.Description
  fullName: NamedPermissionSet.Description
- uid: System.Security.NamedPermissionSet.Equals(System.Object)
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: Equals(Object)
  nameWithType: NamedPermissionSet.Equals(Object)
  fullName: NamedPermissionSet.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.NamedPermissionSet.FromXml(System.Security.SecurityElement)
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: NamedPermissionSet.FromXml(SecurityElement)
  fullName: NamedPermissionSet.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.NamedPermissionSet.GetHashCode
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: GetHashCode()
  nameWithType: NamedPermissionSet.GetHashCode()
  fullName: NamedPermissionSet.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.NamedPermissionSet.Name
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: Name
  nameWithType: NamedPermissionSet.Name
  fullName: NamedPermissionSet.Name
- uid: System.Security.NamedPermissionSet.ToXml
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: ToXml()
  nameWithType: NamedPermissionSet.ToXml()
  fullName: NamedPermissionSet.ToXml()
- uid: System.Security.NamedPermissionSet.#ctor*
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: NamedPermissionSet
  nameWithType: NamedPermissionSet.NamedPermissionSet
  fullName: NamedPermissionSet.NamedPermissionSet
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/NamedPermissionSet.xml
- uid: System.Security.NamedPermissionSet.Copy*
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: Copy
  nameWithType: NamedPermissionSet.Copy
  fullName: NamedPermissionSet.Copy
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/NamedPermissionSet.xml
- uid: System.Security.NamedPermissionSet.Description*
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: Description
  nameWithType: NamedPermissionSet.Description
  fullName: NamedPermissionSet.Description
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/NamedPermissionSet.xml
- uid: System.Security.NamedPermissionSet.Equals*
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: Equals
  nameWithType: NamedPermissionSet.Equals
  fullName: NamedPermissionSet.Equals
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/NamedPermissionSet.xml
- uid: System.Security.NamedPermissionSet.FromXml*
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: FromXml
  nameWithType: NamedPermissionSet.FromXml
  fullName: NamedPermissionSet.FromXml
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/NamedPermissionSet.xml
- uid: System.Security.NamedPermissionSet.GetHashCode*
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: GetHashCode
  nameWithType: NamedPermissionSet.GetHashCode
  fullName: NamedPermissionSet.GetHashCode
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/NamedPermissionSet.xml
- uid: System.Security.NamedPermissionSet.Name*
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: Name
  nameWithType: NamedPermissionSet.Name
  fullName: NamedPermissionSet.Name
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/NamedPermissionSet.xml
- uid: System.Security.NamedPermissionSet.ToXml*
  parent: System.Security.NamedPermissionSet
  isExternal: false
  name: ToXml
  nameWithType: NamedPermissionSet.ToXml
  fullName: NamedPermissionSet.ToXml
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/NamedPermissionSet.xml
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Security.PermissionSet.ToString
  parent: System.Security.PermissionSet
  isExternal: false
  name: ToString()
  nameWithType: PermissionSet.ToString()
  fullName: PermissionSet.ToString()
- uid: System.Security.PermissionSet.AddPermission(System.Security.IPermission)
  parent: System.Security.PermissionSet
  isExternal: false
  name: AddPermission(IPermission)
  nameWithType: PermissionSet.AddPermission(IPermission)
  fullName: PermissionSet.AddPermission(IPermission)
- uid: System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)
  parent: System.Security.PermissionSet
  isExternal: false
  name: AddPermissionImpl(IPermission)
  nameWithType: PermissionSet.AddPermissionImpl(IPermission)
  fullName: PermissionSet.AddPermissionImpl(IPermission)
- uid: System.Security.PermissionSet.Assert
  parent: System.Security.PermissionSet
  isExternal: false
  name: Assert()
  nameWithType: PermissionSet.Assert()
  fullName: PermissionSet.Assert()
- uid: System.Security.PermissionSet.ContainsNonCodeAccessPermissions
  parent: System.Security.PermissionSet
  isExternal: false
  name: ContainsNonCodeAccessPermissions()
  nameWithType: PermissionSet.ContainsNonCodeAccessPermissions()
  fullName: PermissionSet.ContainsNonCodeAccessPermissions()
- uid: System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)
  parent: System.Security.PermissionSet
  isExternal: false
  name: ConvertPermissionSet(String, Byte[], String)
  nameWithType: PermissionSet.ConvertPermissionSet(String, Byte[], String)
  fullName: PermissionSet.ConvertPermissionSet(String, Byte[], String)
- uid: System.Security.PermissionSet.CopyTo(System.Array,System.Int32)
  parent: System.Security.PermissionSet
  isExternal: false
  name: CopyTo(Array, Int32)
  nameWithType: PermissionSet.CopyTo(Array, Int32)
  fullName: PermissionSet.CopyTo(Array, Int32)
- uid: System.Security.PermissionSet.Count
  parent: System.Security.PermissionSet
  isExternal: false
  name: Count
  nameWithType: PermissionSet.Count
  fullName: PermissionSet.Count
- uid: System.Security.PermissionSet.Demand
  parent: System.Security.PermissionSet
  isExternal: false
  name: Demand()
  nameWithType: PermissionSet.Demand()
  fullName: PermissionSet.Demand()
- uid: System.Security.PermissionSet.Deny
  parent: System.Security.PermissionSet
  isExternal: false
  name: Deny()
  nameWithType: PermissionSet.Deny()
  fullName: PermissionSet.Deny()
- uid: System.Security.PermissionSet.GetEnumerator
  parent: System.Security.PermissionSet
  isExternal: false
  name: GetEnumerator()
  nameWithType: PermissionSet.GetEnumerator()
  fullName: PermissionSet.GetEnumerator()
- uid: System.Security.PermissionSet.GetEnumeratorImpl
  parent: System.Security.PermissionSet
  isExternal: false
  name: GetEnumeratorImpl()
  nameWithType: PermissionSet.GetEnumeratorImpl()
  fullName: PermissionSet.GetEnumeratorImpl()
- uid: System.Security.PermissionSet.GetPermission(System.Type)
  parent: System.Security.PermissionSet
  isExternal: false
  name: GetPermission(Type)
  nameWithType: PermissionSet.GetPermission(Type)
  fullName: PermissionSet.GetPermission(Type)
- uid: System.Security.PermissionSet.GetPermissionImpl(System.Type)
  parent: System.Security.PermissionSet
  isExternal: false
  name: GetPermissionImpl(Type)
  nameWithType: PermissionSet.GetPermissionImpl(Type)
  fullName: PermissionSet.GetPermissionImpl(Type)
- uid: System.Security.PermissionSet.Intersect(System.Security.PermissionSet)
  parent: System.Security.PermissionSet
  isExternal: false
  name: Intersect(PermissionSet)
  nameWithType: PermissionSet.Intersect(PermissionSet)
  fullName: PermissionSet.Intersect(PermissionSet)
- uid: System.Security.PermissionSet.IsEmpty
  parent: System.Security.PermissionSet
  isExternal: false
  name: IsEmpty()
  nameWithType: PermissionSet.IsEmpty()
  fullName: PermissionSet.IsEmpty()
- uid: System.Security.PermissionSet.IsReadOnly
  parent: System.Security.PermissionSet
  isExternal: false
  name: IsReadOnly
  nameWithType: PermissionSet.IsReadOnly
  fullName: PermissionSet.IsReadOnly
- uid: System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)
  parent: System.Security.PermissionSet
  isExternal: false
  name: IsSubsetOf(PermissionSet)
  nameWithType: PermissionSet.IsSubsetOf(PermissionSet)
  fullName: PermissionSet.IsSubsetOf(PermissionSet)
- uid: System.Security.PermissionSet.IsSynchronized
  parent: System.Security.PermissionSet
  isExternal: false
  name: IsSynchronized
  nameWithType: PermissionSet.IsSynchronized
  fullName: PermissionSet.IsSynchronized
- uid: System.Security.PermissionSet.IsUnrestricted
  parent: System.Security.PermissionSet
  isExternal: false
  name: IsUnrestricted()
  nameWithType: PermissionSet.IsUnrestricted()
  fullName: PermissionSet.IsUnrestricted()
- uid: System.Security.PermissionSet.PermitOnly
  parent: System.Security.PermissionSet
  isExternal: false
  name: PermitOnly()
  nameWithType: PermissionSet.PermitOnly()
  fullName: PermissionSet.PermitOnly()
- uid: System.Security.PermissionSet.RemovePermission(System.Type)
  parent: System.Security.PermissionSet
  isExternal: false
  name: RemovePermission(Type)
  nameWithType: PermissionSet.RemovePermission(Type)
  fullName: PermissionSet.RemovePermission(Type)
- uid: System.Security.PermissionSet.RemovePermissionImpl(System.Type)
  parent: System.Security.PermissionSet
  isExternal: false
  name: RemovePermissionImpl(Type)
  nameWithType: PermissionSet.RemovePermissionImpl(Type)
  fullName: PermissionSet.RemovePermissionImpl(Type)
- uid: System.Security.PermissionSet.RevertAssert
  parent: System.Security.PermissionSet
  isExternal: false
  name: RevertAssert()
  nameWithType: PermissionSet.RevertAssert()
  fullName: PermissionSet.RevertAssert()
- uid: System.Security.PermissionSet.SetPermission(System.Security.IPermission)
  parent: System.Security.PermissionSet
  isExternal: false
  name: SetPermission(IPermission)
  nameWithType: PermissionSet.SetPermission(IPermission)
  fullName: PermissionSet.SetPermission(IPermission)
- uid: System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)
  parent: System.Security.PermissionSet
  isExternal: false
  name: SetPermissionImpl(IPermission)
  nameWithType: PermissionSet.SetPermissionImpl(IPermission)
  fullName: PermissionSet.SetPermissionImpl(IPermission)
- uid: System.Security.PermissionSet.SyncRoot
  parent: System.Security.PermissionSet
  isExternal: false
  name: SyncRoot
  nameWithType: PermissionSet.SyncRoot
  fullName: PermissionSet.SyncRoot
- uid: System.Security.PermissionSet.Union(System.Security.PermissionSet)
  parent: System.Security.PermissionSet
  isExternal: false
  name: Union(PermissionSet)
  nameWithType: PermissionSet.Union(PermissionSet)
  fullName: PermissionSet.Union(PermissionSet)
- uid: System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  parent: System.Security.PermissionSet
  isExternal: false
  name: IDeserializationCallback.OnDeserialization(Object)
  nameWithType: PermissionSet.IDeserializationCallback.OnDeserialization(Object)
  fullName: PermissionSet.IDeserializationCallback.OnDeserialization(Object)
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Cast<TResult>(IEnumerable)
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  fullName: Enumerable.Cast<TResult>(IEnumerable)
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: OfType<TResult>(IEnumerable)
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  fullName: Enumerable.OfType<TResult>(IEnumerable)
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsParallel(IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
  fullName: ParallelEnumerable.AsParallel(IEnumerable)
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  parent: System.Linq.Queryable
  isExternal: false
  name: AsQueryable(IEnumerable)
  nameWithType: Queryable.AsQueryable(IEnumerable)
  fullName: Queryable.AsQueryable(IEnumerable)
