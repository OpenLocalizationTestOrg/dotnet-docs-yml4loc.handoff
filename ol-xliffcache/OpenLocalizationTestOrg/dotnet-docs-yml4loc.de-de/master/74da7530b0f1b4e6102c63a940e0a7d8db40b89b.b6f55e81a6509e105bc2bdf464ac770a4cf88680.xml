{"nodes":[{"content":"Enables communication with a debugger. This class cannot be inherited.","nodes":[{"pos":[0,70],"content":"Enables communication with a debugger. This class cannot be inherited.","nodes":[{"content":"Enables communication with a debugger. This class cannot be inherited.","pos":[0,70],"nodes":[{"content":"Enables communication with a debugger.","pos":[0,38]},{"content":"This class cannot be inherited.","pos":[39,70]}]}]}],"pos":[760,831],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.Debugger\"></xref> class.","nodes":[{"pos":[0,89],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.Debugger\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.Debugger\"></xref> class."}],"pos":[2732,2822],"yaml":true},{"content":"Signals a breakpoint to an attached debugger.","nodes":[{"pos":[0,45],"content":"Signals a breakpoint to an attached debugger.","nodes":[{"content":"Signals a breakpoint to an attached debugger.","pos":[0,45]}]}],"pos":[4103,4149],"yaml":true},{"content":"If no debugger is attached, users are asked if they want to attach a debugger. If users say yes, the debugger is started. If a debugger is attached, the debugger is signaled with a user breakpoint event, and the debugger suspends execution of the process just as if a debugger breakpoint had been hit.  \n  \n> [!WARNING]\n>  Starting with [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the runtime no longer exercises tight control of launching the debugger for the <xref:System.Diagnostics.Debugger.Break%2A> method, but instead reports an error to the Windows Error Reporting (WER) subsystem. WER provides many settings to customize the problem reporting experience, so a lot of factors will influence  the way WER responds to an error such as operating system version, process, session, user, machine and domain. If you're having unexpected results when calling  the <xref:System.Diagnostics.Debugger.Break%2A> method,  check the  WER settings on your machine. For more information on how to customize WER, see [WER Settings](https://msdn.microsoft.com/library/windows/desktop/bb513638.aspx). If you want to ensure the debugger is launched regardless of the WER settings, be sure to call the <xref:System.Diagnostics.Debugger.Launch%2A> method instead.","nodes":[{"pos":[0,301],"content":"If no debugger is attached, users are asked if they want to attach a debugger. If users say yes, the debugger is started. If a debugger is attached, the debugger is signaled with a user breakpoint event, and the debugger suspends execution of the process just as if a debugger breakpoint had been hit.","nodes":[{"content":"If no debugger is attached, users are asked if they want to attach a debugger. If users say yes, the debugger is started. If a debugger is attached, the debugger is signaled with a user breakpoint event, and the debugger suspends execution of the process just as if a debugger breakpoint had been hit.","pos":[0,301],"nodes":[{"content":"If no debugger is attached, users are asked if they want to attach a debugger.","pos":[0,78]},{"content":"If users say yes, the debugger is started.","pos":[79,121]},{"content":"If a debugger is attached, the debugger is signaled with a user breakpoint event, and the debugger suspends execution of the process just as if a debugger breakpoint had been hit.","pos":[122,301]}]}]},{"pos":[309,1263],"content":"[!WARNING]\n Starting with [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the runtime no longer exercises tight control of launching the debugger for the <xref:System.Diagnostics.Debugger.Break%2A> method, but instead reports an error to the Windows Error Reporting (WER) subsystem. WER provides many settings to customize the problem reporting experience, so a lot of factors will influence  the way WER responds to an error such as operating system version, process, session, user, machine and domain. If you're having unexpected results when calling  the <xref:System.Diagnostics.Debugger.Break%2A> method,  check the  WER settings on your machine. For more information on how to customize WER, see [WER Settings](https://msdn.microsoft.com/library/windows/desktop/bb513638.aspx). If you want to ensure the debugger is launched regardless of the WER settings, be sure to call the <xref:System.Diagnostics.Debugger.Launch%2A> method instead.","leadings":["","> "],"nodes":[{"content":" Starting with [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the runtime no longer exercises tight control of launching the debugger for the <xref:System.Diagnostics.Debugger.Break%2A> method, but instead reports an error to the Windows Error Reporting (WER) subsystem. WER provides many settings to customize the problem reporting experience, so a lot of factors will influence  the way WER responds to an error such as operating system version, process, session, user, machine and domain. If you're having unexpected results when calling  the <xref:System.Diagnostics.Debugger.Break%2A> method,  check the  WER settings on your machine. For more information on how to customize WER, see [WER Settings](https://msdn.microsoft.com/library/windows/desktop/bb513638.aspx). If you want to ensure the debugger is launched regardless of the WER settings, be sure to call the <xref:System.Diagnostics.Debugger.Launch%2A> method instead.","pos":[11,952],"nodes":[{"content":"Starting with <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the runtime no longer exercises tight control of launching the debugger for the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debugger.Break%2A&gt;</ph> method, but instead reports an error to the Windows Error Reporting (WER) subsystem.","pos":[1,280],"source":" Starting with [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the runtime no longer exercises tight control of launching the debugger for the <xref:System.Diagnostics.Debugger.Break%2A> method, but instead reports an error to the Windows Error Reporting (WER) subsystem."},{"content":"WER provides many settings to customize the problem reporting experience, so a lot of factors will influence  the way WER responds to an error such as operating system version, process, session, user, machine and domain.","pos":[281,501]},{"content":"If you're having unexpected results when calling  the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debugger.Break%2A&gt;</ph> method,  check the  WER settings on your machine.","pos":[502,649],"source":" If you're having unexpected results when calling  the <xref:System.Diagnostics.Debugger.Break%2A> method,  check the  WER settings on your machine."},{"content":"For more information on how to customize WER, see <bpt id=\"p1\">[</bpt>WER Settings<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/desktop/bb513638.aspx)</ept>.","pos":[650,781],"source":" For more information on how to customize WER, see [WER Settings](https://msdn.microsoft.com/library/windows/desktop/bb513638.aspx)."},{"content":"If you want to ensure the debugger is launched regardless of the WER settings, be sure to call the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debugger.Launch%2A&gt;</ph> method instead.","pos":[782,941],"source":" If you want to ensure the debugger is launched regardless of the WER settings, be sure to call the <xref:System.Diagnostics.Debugger.Launch%2A> method instead."}]}]}],"pos":[4160,5429],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Security.Permissions.UIPermission\"></xref> is not set to break into the debugger.","nodes":[{"pos":[0,104],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.UIPermission\"&gt;&lt;/xref&gt;</ph> is not set to break into the debugger.","source":"The <xref href=\"System.Security.Permissions.UIPermission\"></xref> is not set to break into the debugger."}],"pos":[5972,6077],"yaml":true},{"content":"Represents the default category of message with a constant.","nodes":[{"pos":[0,59],"content":"Represents the default category of message with a constant.","nodes":[{"content":"Represents the default category of message with a constant.","pos":[0,59]}]}],"pos":[7523,7583],"yaml":true},{"content":"The value of this default constant is `null`. <xref:System.Diagnostics.Debugger.DefaultCategory> is used by <xref:System.Diagnostics.Debugger.Log%2A>.","nodes":[{"pos":[0,150],"content":"The value of this default constant is `null`. <xref:System.Diagnostics.Debugger.DefaultCategory> is used by <xref:System.Diagnostics.Debugger.Log%2A>.","nodes":[{"content":"The value of this default constant is <ph id=\"ph1\">`null`</ph>.","pos":[0,45],"source":"The value of this default constant is `null`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Diagnostics.Debugger.DefaultCategory&gt;</ph> is used by <ph id=\"ph2\">&lt;xref:System.Diagnostics.Debugger.Log%2A&gt;</ph>.","pos":[46,150],"source":" <xref:System.Diagnostics.Debugger.DefaultCategory> is used by <xref:System.Diagnostics.Debugger.Log%2A>."}]}],"pos":[7594,7745],"yaml":true,"extradata":"MT"},{"content":"Gets a value that indicates whether a debugger is attached to the process.","nodes":[{"pos":[0,74],"content":"Gets a value that indicates whether a debugger is attached to the process.","nodes":[{"content":"Gets a value that indicates whether a debugger is attached to the process.","pos":[0,74]}]}],"pos":[9007,9082],"yaml":true},{"content":"`true` if a debugger is attached; otherwise, `false`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">`true`</ph> if a debugger is attached; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if a debugger is attached; otherwise, `false`."}],"pos":[9202,9258],"yaml":true},{"content":"Checks to see if logging is enabled by an attached debugger.","nodes":[{"pos":[0,60],"content":"Checks to see if logging is enabled by an attached debugger.","nodes":[{"content":"Checks to see if logging is enabled by an attached debugger.","pos":[0,60]}]}],"pos":[10744,10805],"yaml":true},{"content":"`true` if a debugger is attached and logging is enabled; otherwise, `false`. The attached debugger is the registered managed debugger in the `DbgManagedDebugger` registry key. For more information on this key, see [Enabling JIT-Attach Debugging](~/docs/framework/debug-trace-profile/enabling-jit-attach-debugging.md).","nodes":[{"pos":[0,317],"content":"`true` if a debugger is attached and logging is enabled; otherwise, `false`. The attached debugger is the registered managed debugger in the `DbgManagedDebugger` registry key. For more information on this key, see [Enabling JIT-Attach Debugging](~/docs/framework/debug-trace-profile/enabling-jit-attach-debugging.md).","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if a debugger is attached and logging is enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,76],"source":"`true` if a debugger is attached and logging is enabled; otherwise, `false`."},{"content":"The attached debugger is the registered managed debugger in the <ph id=\"ph1\">`DbgManagedDebugger`</ph> registry key.","pos":[77,175],"source":" The attached debugger is the registered managed debugger in the `DbgManagedDebugger` registry key."},{"content":"For more information on this key, see <bpt id=\"p1\">[</bpt>Enabling JIT-Attach Debugging<ept id=\"p1\">](~/docs/framework/debug-trace-profile/enabling-jit-attach-debugging.md)</ept>.","pos":[176,317],"source":" For more information on this key, see [Enabling JIT-Attach Debugging](~/docs/framework/debug-trace-profile/enabling-jit-attach-debugging.md)."}]}],"pos":[10938,11258],"yaml":true},{"content":"Launches and attaches a debugger to the process.","nodes":[{"pos":[0,48],"content":"Launches and attaches a debugger to the process.","nodes":[{"content":"Launches and attaches a debugger to the process.","pos":[0,48]}]}],"pos":[12421,12470],"yaml":true},{"content":"If a debugger is already attached, nothing happens.","nodes":[{"pos":[0,51],"content":"If a debugger is already attached, nothing happens.","nodes":[{"content":"If a debugger is already attached, nothing happens.","pos":[0,51]}]}],"pos":[12481,12533],"yaml":true,"extradata":"MT"},{"content":"`true` if the startup is successful or if the debugger is already attached; otherwise, `false`.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">`true`</ph> if the startup is successful or if the debugger is already attached; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the startup is successful or if the debugger is already attached; otherwise, `false`."}],"pos":[12663,12761],"yaml":true},{"content":"The <xref href=\"System.Security.Permissions.UIPermission\"></xref> is not set to start the debugger.","nodes":[{"pos":[0,99],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.UIPermission\"&gt;&lt;/xref&gt;</ph> is not set to start the debugger.","source":"The <xref href=\"System.Security.Permissions.UIPermission\"></xref> is not set to start the debugger."}],"pos":[12935,13035],"yaml":true},{"content":"Posts a message for the attached debugger.","nodes":[{"pos":[0,42],"content":"Posts a message for the attached debugger.","nodes":[{"content":"Posts a message for the attached debugger.","pos":[0,42]}]}],"pos":[14605,14648],"yaml":true},{"content":"If there is no debugger attached, this method has no effect. The debugger might or might not report the message, depending upon its settings.  \n  \n> [!NOTE]\n>  The category parameter is limited to 256 characters. Strings longer than 256 characters are truncated.","nodes":[{"pos":[0,141],"content":"If there is no debugger attached, this method has no effect. The debugger might or might not report the message, depending upon its settings.","nodes":[{"content":"If there is no debugger attached, this method has no effect. The debugger might or might not report the message, depending upon its settings.","pos":[0,141],"nodes":[{"content":"If there is no debugger attached, this method has no effect.","pos":[0,60]},{"content":"The debugger might or might not report the message, depending upon its settings.","pos":[61,141]}]}]},{"pos":[149,262],"content":"[!NOTE]\n The category parameter is limited to 256 characters. Strings longer than 256 characters are truncated.","leadings":["","> "],"nodes":[{"content":" The category parameter is limited to 256 characters. Strings longer than 256 characters are truncated.","pos":[8,111],"nodes":[{"content":"The category parameter is limited to 256 characters.","pos":[1,53]},{"content":"Strings longer than 256 characters are truncated.","pos":[54,103]}]}]}],"pos":[14659,14927],"yaml":true,"extradata":"MT"},{"content":"A description of the importance of the message.","nodes":[{"pos":[0,47],"content":"A description of the importance of the message.","nodes":[{"content":"A description of the importance of the message.","pos":[0,47]}]}],"pos":[15095,15143],"yaml":true},{"content":"The category of the message.","nodes":[{"pos":[0,28],"content":"The category of the message.","nodes":[{"content":"The category of the message.","pos":[0,28]}]}],"pos":[15207,15236],"yaml":true},{"content":"The message to show.","nodes":[{"pos":[0,20],"content":"The message to show.","nodes":[{"content":"The message to show.","pos":[0,20]}]}],"pos":[15299,15320],"yaml":true},{"content":"Notifies a debugger that execution is about to enter a path that involves a cross-thread dependency.","nodes":[{"pos":[0,100],"content":"Notifies a debugger that execution is about to enter a path that involves a cross-thread dependency.","nodes":[{"content":"Notifies a debugger that execution is about to enter a path that involves a cross-thread dependency.","pos":[0,100]}]}],"pos":[16615,16716],"yaml":true},{"content":"Debuggers must specifically enable callbacks that they wish to receive. A debugger that wants to receive cross-thread dependency callbacks must call the  method.  \n  \n A debugger that has selected <xref:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency%2A> can take appropriate action upon notification. For example, performing a function evaluation typically requires freezing all threads except for the thread that is performing the evaluation. If the function evaluation requires execution on more than one thread, as might occur in remoting scenarios, the evaluation will block. The <xref:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency%2A> notification informs the debugger that it has to release a thread or abort the function evaluation. The notification is subject to collection after this method returns.","nodes":[{"pos":[0,161],"content":"Debuggers must specifically enable callbacks that they wish to receive. A debugger that wants to receive cross-thread dependency callbacks must call the  method.","nodes":[{"content":"Debuggers must specifically enable callbacks that they wish to receive. A debugger that wants to receive cross-thread dependency callbacks must call the  method.","pos":[0,161],"nodes":[{"content":"Debuggers must specifically enable callbacks that they wish to receive.","pos":[0,71]},{"content":"A debugger that wants to receive cross-thread dependency callbacks must call the  method.","pos":[72,161]}]}]},{"pos":[168,831],"content":"A debugger that has selected <xref:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency%2A> can take appropriate action upon notification. For example, performing a function evaluation typically requires freezing all threads except for the thread that is performing the evaluation. If the function evaluation requires execution on more than one thread, as might occur in remoting scenarios, the evaluation will block. The <xref:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency%2A> notification informs the debugger that it has to release a thread or abort the function evaluation. The notification is subject to collection after this method returns.","nodes":[{"content":"A debugger that has selected <xref:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency%2A> can take appropriate action upon notification. For example, performing a function evaluation typically requires freezing all threads except for the thread that is performing the evaluation. If the function evaluation requires execution on more than one thread, as might occur in remoting scenarios, the evaluation will block. The <xref:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency%2A> notification informs the debugger that it has to release a thread or abort the function evaluation. The notification is subject to collection after this method returns.","pos":[0,663],"nodes":[{"content":"A debugger that has selected <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency%2A&gt;</ph> can take appropriate action upon notification.","pos":[0,143],"source":"A debugger that has selected <xref:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency%2A> can take appropriate action upon notification."},{"content":"For example, performing a function evaluation typically requires freezing all threads except for the thread that is performing the evaluation.","pos":[144,286]},{"content":"If the function evaluation requires execution on more than one thread, as might occur in remoting scenarios, the evaluation will block.","pos":[287,422]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency%2A&gt;</ph> notification informs the debugger that it has to release a thread or abort the function evaluation.","pos":[423,594],"source":" The <xref:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency%2A> notification informs the debugger that it has to release a thread or abort the function evaluation."},{"content":"The notification is subject to collection after this method returns.","pos":[595,663]}]}]}],"pos":[16727,17563],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.Debugger\n  commentId: T:System.Diagnostics.Debugger\n  id: Debugger\n  children:\n  - System.Diagnostics.Debugger.#ctor\n  - System.Diagnostics.Debugger.Break\n  - System.Diagnostics.Debugger.DefaultCategory\n  - System.Diagnostics.Debugger.IsAttached\n  - System.Diagnostics.Debugger.IsLogging\n  - System.Diagnostics.Debugger.Launch\n  - System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)\n  - System.Diagnostics.Debugger.NotifyOfCrossThreadDependency\n  langs:\n  - csharp\n  name: Debugger\n  nameWithType: Debugger\n  fullName: System.Diagnostics.Debugger\n  type: Class\n  assemblies:\n  - System.Diagnostics.Debug\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Enables communication with a debugger. This class cannot be inherited.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class Debugger\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debugger.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debugger.#ctor\n  commentId: M:System.Diagnostics.Debugger.#ctor\n  id: '#ctor'\n  parent: System.Diagnostics.Debugger\n  langs:\n  - csharp\n  name: Debugger()\n  nameWithType: Debugger.Debugger()\n  fullName: Debugger.Debugger()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.Debugger\"></xref> class.\n  syntax:\n    content: >-\n      [System.Obsolete(\"Call the static methods directly on this type\", true)]\n\n      public Debugger ();\n    parameters: []\n  overload: System.Diagnostics.Debugger.#ctor*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debugger.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debugger.Break\n  commentId: M:System.Diagnostics.Debugger.Break\n  id: Break\n  parent: System.Diagnostics.Debugger\n  langs:\n  - csharp\n  name: Break()\n  nameWithType: Debugger.Break()\n  fullName: Debugger.Break()\n  type: Method\n  assemblies:\n  - System.Diagnostics.Debug\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Signals a breakpoint to an attached debugger.\n  remarks: \"If no debugger is attached, users are asked if they want to attach a debugger. If users say yes, the debugger is started. If a debugger is attached, the debugger is signaled with a user breakpoint event, and the debugger suspends execution of the process just as if a debugger breakpoint had been hit.  \\n  \\n> [!WARNING]\\n>  Starting with [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the runtime no longer exercises tight control of launching the debugger for the <xref:System.Diagnostics.Debugger.Break%2A> method, but instead reports an error to the Windows Error Reporting (WER) subsystem. WER provides many settings to customize the problem reporting experience, so a lot of factors will influence  the way WER responds to an error such as operating system version, process, session, user, machine and domain. If you're having unexpected results when calling  the <xref:System.Diagnostics.Debugger.Break%2A> method,  check the  WER settings on your machine. For more information on how to customize WER, see [WER Settings](https://msdn.microsoft.com/library/windows/desktop/bb513638.aspx). If you want to ensure the debugger is launched regardless of the WER settings, be sure to call the <xref:System.Diagnostics.Debugger.Launch%2A> method instead.\"\n  example:\n  - \"The following code example demonstrates how to stop the debugger at the call to <xref:System.Console.WriteLine%2A>.  \\n  \\n```vb  \\nDebugger.Break()  \\nConsole.WriteLine(\\\"Hello, world.\\\")  \\n```  \\n  \\n```csharp  \\nDebugger.Break();  \\nConsole.WriteLine(\\\"Hello, world.\\\");  \\n```\"\n  syntax:\n    content: public static void Break ();\n    parameters: []\n  overload: System.Diagnostics.Debugger.Break*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The <xref href=\"System.Security.Permissions.UIPermission\"></xref> is not set to break into the debugger.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debugger.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debugger.DefaultCategory\n  commentId: F:System.Diagnostics.Debugger.DefaultCategory\n  id: DefaultCategory\n  parent: System.Diagnostics.Debugger\n  langs:\n  - csharp\n  name: DefaultCategory\n  nameWithType: Debugger.DefaultCategory\n  fullName: Debugger.DefaultCategory\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.Debug\n  namespace: System.Diagnostics\n  summary: Represents the default category of message with a constant.\n  remarks: The value of this default constant is `null`. <xref:System.Diagnostics.Debugger.DefaultCategory> is used by <xref:System.Diagnostics.Debugger.Log%2A>.\n  syntax:\n    content: public static readonly string DefaultCategory;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debugger.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debugger.IsAttached\n  commentId: P:System.Diagnostics.Debugger.IsAttached\n  id: IsAttached\n  parent: System.Diagnostics.Debugger\n  langs:\n  - csharp\n  name: IsAttached\n  nameWithType: Debugger.IsAttached\n  fullName: Debugger.IsAttached\n  type: Property\n  assemblies:\n  - System.Diagnostics.Debug\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Gets a value that indicates whether a debugger is attached to the process.\n  syntax:\n    content: public static bool IsAttached { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if a debugger is attached; otherwise, `false`.'\n  overload: System.Diagnostics.Debugger.IsAttached*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debugger.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debugger.IsLogging\n  commentId: M:System.Diagnostics.Debugger.IsLogging\n  id: IsLogging\n  parent: System.Diagnostics.Debugger\n  langs:\n  - csharp\n  name: IsLogging()\n  nameWithType: Debugger.IsLogging()\n  fullName: Debugger.IsLogging()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.Debug\n  namespace: System.Diagnostics\n  summary: Checks to see if logging is enabled by an attached debugger.\n  syntax:\n    content: public static bool IsLogging ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if a debugger is attached and logging is enabled; otherwise, `false`. The attached debugger is the registered managed debugger in the `DbgManagedDebugger` registry key. For more information on this key, see [Enabling JIT-Attach Debugging](~/docs/framework/debug-trace-profile/enabling-jit-attach-debugging.md).'\n  overload: System.Diagnostics.Debugger.IsLogging*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debugger.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debugger.Launch\n  commentId: M:System.Diagnostics.Debugger.Launch\n  id: Launch\n  parent: System.Diagnostics.Debugger\n  langs:\n  - csharp\n  name: Launch()\n  nameWithType: Debugger.Launch()\n  fullName: Debugger.Launch()\n  type: Method\n  assemblies:\n  - System.Diagnostics.Debug\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Launches and attaches a debugger to the process.\n  remarks: If a debugger is already attached, nothing happens.\n  syntax:\n    content: public static bool Launch ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the startup is successful or if the debugger is already attached; otherwise, `false`.'\n  overload: System.Diagnostics.Debugger.Launch*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The <xref href=\"System.Security.Permissions.UIPermission\"></xref> is not set to start the debugger.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debugger.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)\n  commentId: M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)\n  id: Log(System.Int32,System.String,System.String)\n  parent: System.Diagnostics.Debugger\n  langs:\n  - csharp\n  name: Log(Int32, String, String)\n  nameWithType: Debugger.Log(Int32, String, String)\n  fullName: Debugger.Log(Int32, String, String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.Debug\n  namespace: System.Diagnostics\n  summary: Posts a message for the attached debugger.\n  remarks: \"If there is no debugger attached, this method has no effect. The debugger might or might not report the message, depending upon its settings.  \\n  \\n> [!NOTE]\\n>  The category parameter is limited to 256 characters. Strings longer than 256 characters are truncated.\"\n  syntax:\n    content: public static void Log (int level, string category, string message);\n    parameters:\n    - id: level\n      type: System.Int32\n      description: A description of the importance of the message.\n    - id: category\n      type: System.String\n      description: The category of the message.\n    - id: message\n      type: System.String\n      description: The message to show.\n  overload: System.Diagnostics.Debugger.Log*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debugger.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.Debugger.NotifyOfCrossThreadDependency\n  commentId: M:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency\n  id: NotifyOfCrossThreadDependency\n  parent: System.Diagnostics.Debugger\n  langs:\n  - csharp\n  name: NotifyOfCrossThreadDependency()\n  nameWithType: Debugger.NotifyOfCrossThreadDependency()\n  fullName: Debugger.NotifyOfCrossThreadDependency()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.Debug\n  namespace: System.Diagnostics\n  summary: Notifies a debugger that execution is about to enter a path that involves a cross-thread dependency.\n  remarks: \"Debuggers must specifically enable callbacks that they wish to receive. A debugger that wants to receive cross-thread dependency callbacks must call the  method.  \\n  \\n A debugger that has selected <xref:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency%2A> can take appropriate action upon notification. For example, performing a function evaluation typically requires freezing all threads except for the thread that is performing the evaluation. If the function evaluation requires execution on more than one thread, as might occur in remoting scenarios, the evaluation will block. The <xref:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency%2A> notification informs the debugger that it has to release a thread or abort the function evaluation. The notification is subject to collection after this method returns.\"\n  syntax:\n    content: public static void NotifyOfCrossThreadDependency ();\n    parameters: []\n  overload: System.Diagnostics.Debugger.NotifyOfCrossThreadDependency*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debugger.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: System.Diagnostics.Debugger.#ctor\n  parent: System.Diagnostics.Debugger\n  isExternal: false\n  name: Debugger()\n  nameWithType: Debugger.Debugger()\n  fullName: Debugger.Debugger()\n- uid: System.Diagnostics.Debugger.Break\n  parent: System.Diagnostics.Debugger\n  isExternal: false\n  name: Break()\n  nameWithType: Debugger.Break()\n  fullName: Debugger.Break()\n- uid: System.Diagnostics.Debugger.DefaultCategory\n  parent: System.Diagnostics.Debugger\n  isExternal: false\n  name: DefaultCategory\n  nameWithType: Debugger.DefaultCategory\n  fullName: Debugger.DefaultCategory\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Debugger.IsAttached\n  parent: System.Diagnostics.Debugger\n  isExternal: false\n  name: IsAttached\n  nameWithType: Debugger.IsAttached\n  fullName: Debugger.IsAttached\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Debugger.IsLogging\n  parent: System.Diagnostics.Debugger\n  isExternal: false\n  name: IsLogging()\n  nameWithType: Debugger.IsLogging()\n  fullName: Debugger.IsLogging()\n- uid: System.Diagnostics.Debugger.Launch\n  parent: System.Diagnostics.Debugger\n  isExternal: false\n  name: Launch()\n  nameWithType: Debugger.Launch()\n  fullName: Debugger.Launch()\n- uid: System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)\n  parent: System.Diagnostics.Debugger\n  isExternal: false\n  name: Log(Int32, String, String)\n  nameWithType: Debugger.Log(Int32, String, String)\n  fullName: Debugger.Log(Int32, String, String)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.Debugger.NotifyOfCrossThreadDependency\n  parent: System.Diagnostics.Debugger\n  isExternal: false\n  name: NotifyOfCrossThreadDependency()\n  nameWithType: Debugger.NotifyOfCrossThreadDependency()\n  fullName: Debugger.NotifyOfCrossThreadDependency()\n- uid: System.Diagnostics.Debugger.#ctor*\n  parent: System.Diagnostics.Debugger\n  isExternal: false\n  name: Debugger\n  nameWithType: Debugger.Debugger\n  fullName: Debugger.Debugger\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debugger.xml\n- uid: System.Diagnostics.Debugger.Break*\n  parent: System.Diagnostics.Debugger\n  isExternal: false\n  name: Break\n  nameWithType: Debugger.Break\n  fullName: Debugger.Break\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debugger.xml\n- uid: System.Diagnostics.Debugger.IsAttached*\n  parent: System.Diagnostics.Debugger\n  isExternal: false\n  name: IsAttached\n  nameWithType: Debugger.IsAttached\n  fullName: Debugger.IsAttached\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debugger.xml\n- uid: System.Diagnostics.Debugger.IsLogging*\n  parent: System.Diagnostics.Debugger\n  isExternal: false\n  name: IsLogging\n  nameWithType: Debugger.IsLogging\n  fullName: Debugger.IsLogging\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debugger.xml\n- uid: System.Diagnostics.Debugger.Launch*\n  parent: System.Diagnostics.Debugger\n  isExternal: false\n  name: Launch\n  nameWithType: Debugger.Launch\n  fullName: Debugger.Launch\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debugger.xml\n- uid: System.Diagnostics.Debugger.Log*\n  parent: System.Diagnostics.Debugger\n  isExternal: false\n  name: Log\n  nameWithType: Debugger.Log\n  fullName: Debugger.Log\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debugger.xml\n- uid: System.Diagnostics.Debugger.NotifyOfCrossThreadDependency*\n  parent: System.Diagnostics.Debugger\n  isExternal: false\n  name: NotifyOfCrossThreadDependency\n  nameWithType: Debugger.NotifyOfCrossThreadDependency\n  fullName: Debugger.NotifyOfCrossThreadDependency\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/Debugger.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}