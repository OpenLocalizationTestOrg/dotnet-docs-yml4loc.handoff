{"nodes":[{"content":"Represents an asymmetric key for X.509 certificates.","nodes":[{"pos":[0,52],"content":"Represents an asymmetric key for X.509 certificates.","nodes":[{"content":"Represents an asymmetric key for X.509 certificates.","pos":[0,52]}]}],"pos":[1627,1680],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509AsymmetricSecurityKey\"></xref> class using the specified X.509 certificate.","nodes":[{"pos":[0,153],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509AsymmetricSecurityKey\"&gt;&lt;/xref&gt;</ph> class using the specified X.509 certificate.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509AsymmetricSecurityKey\"></xref> class using the specified X.509 certificate."}],"pos":[3574,3728],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> that represents the X.509 certificate.","nodes":[{"pos":[0,126],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"&gt;&lt;/xref&gt;</ph> that represents the X.509 certificate.","source":"The <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> that represents the X.509 certificate."}],"pos":[3994,4121],"yaml":true},{"content":"<code>certificate</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;certificate&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>certificate</code> is `null`."}],"pos":[4310,4346],"yaml":true},{"content":"Decrypts the specified encrypted key using the specified cryptographic algorithm.","nodes":[{"pos":[0,81],"content":"Decrypts the specified encrypted key using the specified cryptographic algorithm.","nodes":[{"content":"Decrypts the specified encrypted key using the specified cryptographic algorithm.","pos":[0,81]}]}],"pos":[5534,5616],"yaml":true},{"content":"Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> or <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> fields to specify the algorithm.","nodes":[{"pos":[0,181],"content":"Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> or <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> fields to specify the algorithm.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl&gt;</ph> fields to specify the algorithm.","pos":[0,181],"source":"Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> or <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> fields to specify the algorithm."}]}],"pos":[5627,5809],"yaml":true,"extradata":"MT"},{"content":"The cryptographic algorithm to decrypt the key.","nodes":[{"pos":[0,47],"content":"The cryptographic algorithm to decrypt the key.","nodes":[{"content":"The cryptographic algorithm to decrypt the key.","pos":[0,47]}]}],"pos":[5983,6031],"yaml":true},{"content":"An array of <xref href=\"System.Byte\"></xref> that contains the encrypted key.","nodes":[{"pos":[0,77],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains the encrypted key.","source":"An array of <xref href=\"System.Byte\"></xref> that contains the encrypted key."}],"pos":[6094,6172],"yaml":true},{"content":"An array of <xref href=\"System.Byte\"></xref> that contains the decrypted key.","nodes":[{"pos":[0,77],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains the decrypted key.","source":"An array of <xref href=\"System.Byte\"></xref> that contains the decrypted key."}],"pos":[6229,6307],"yaml":true},{"content":"The X.509 certificate specified in the constructor does not have a private key.  \n  \n -or-  \n  \n The X.509 certificate has a private key, but it was not generated using the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm.  \n  \n -or-  \n  \n The X.509 certificate has a private key, it was generated using the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm, but the <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm\"></xref> property is `null`.  \n  \n -or-  \n  \n The <code>algorithm</code> parameter is not supported. The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref> and <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>.","nodes":[{"pos":[0,79],"content":"The X.509 certificate specified in the constructor does not have a private key.","nodes":[{"content":"The X.509 certificate specified in the constructor does not have a private key.","pos":[0,79]}]},{"pos":[86,90],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[97,237],"content":"The X.509 certificate has a private key, but it was not generated using the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph> algorithm.","source":"The X.509 certificate has a private key, but it was not generated using the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm."},{"pos":[244,248],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[255,506],"content":"The X.509 certificate has a private key, it was generated using the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph> algorithm, but the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph3\">`null`</ph>.","source":"The X.509 certificate has a private key, it was generated using the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm, but the <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm\"></xref> property is `null`."},{"pos":[513,517],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[524,778],"content":"The <code>algorithm</code> parameter is not supported. The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref> and <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>.","nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">algorithm</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not supported.","pos":[0,54],"source":"The <code>algorithm</code> parameter is not supported."},{"content":"The supported algorithms are <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"&gt;&lt;/xref&gt;</ph>.","pos":[55,254],"source":" The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref> and <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>."}]}],"pos":[6501,7304],"yaml":true},{"content":"Encrypts the specified encrypted key using the specified cryptographic algorithm.","nodes":[{"pos":[0,81],"content":"Encrypts the specified encrypted key using the specified cryptographic algorithm.","nodes":[{"content":"Encrypts the specified encrypted key using the specified cryptographic algorithm.","pos":[0,81]}]}],"pos":[8492,8574],"yaml":true},{"content":"Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> or <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> fields to specify the algorithm.","nodes":[{"pos":[0,181],"content":"Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> or <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> fields to specify the algorithm.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl&gt;</ph> fields to specify the algorithm.","pos":[0,181],"source":"Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> or <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> fields to specify the algorithm."}]}],"pos":[8585,8767],"yaml":true,"extradata":"MT"},{"content":"The cryptographic algorithm to encrypt the key.","nodes":[{"pos":[0,47],"content":"The cryptographic algorithm to encrypt the key.","nodes":[{"content":"The cryptographic algorithm to encrypt the key.","pos":[0,47]}]}],"pos":[8941,8989],"yaml":true},{"content":"An array of <xref href=\"System.Byte\"></xref> that contains the key to encrypt.","nodes":[{"pos":[0,78],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains the key to encrypt.","source":"An array of <xref href=\"System.Byte\"></xref> that contains the key to encrypt."}],"pos":[9052,9131],"yaml":true},{"content":"An array of <xref href=\"System.Byte\"></xref> that contains the encrypted key.","nodes":[{"pos":[0,77],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains the encrypted key.","source":"An array of <xref href=\"System.Byte\"></xref> that contains the encrypted key."}],"pos":[9188,9266],"yaml":true},{"content":"The X.509 certificate specified in the constructor has a public key that was not generated using the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm.  \n  \n -or-  \n  \n The <code>algorithm</code> parameter is not supported. The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref> and <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>.","nodes":[{"pos":[0,165],"content":"The X.509 certificate specified in the constructor has a public key that was not generated using the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph> algorithm.","source":"The X.509 certificate specified in the constructor has a public key that was not generated using the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm."},{"pos":[172,176],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[183,437],"content":"The <code>algorithm</code> parameter is not supported. The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref> and <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>.","nodes":[{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">algorithm</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not supported.","pos":[0,54],"source":"The <code>algorithm</code> parameter is not supported."},{"content":"The supported algorithms are <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"&gt;&lt;/xref&gt;</ph>.","pos":[55,254],"source":" The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref> and <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>."}]}],"pos":[9460,9910],"yaml":true},{"content":"Gets the specified asymmetric cryptographic algorithm.","nodes":[{"pos":[0,54],"content":"Gets the specified asymmetric cryptographic algorithm.","nodes":[{"content":"Gets the specified asymmetric cryptographic algorithm.","pos":[0,54]}]}],"pos":[11176,11231],"yaml":true},{"content":"Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter.","nodes":[{"pos":[0,401],"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&gt;</ph> or <ph id=\"ph5\">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&gt;</ph> fields to specify the <ph id=\"ph6\">`algorithm`</ph> parameter.","source":"Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter."}],"pos":[11242,11644],"yaml":true,"extradata":"MT"},{"content":"The asymmetric algorithm to create.","nodes":[{"pos":[0,35],"content":"The asymmetric algorithm to create.","nodes":[{"content":"The asymmetric algorithm to create.","pos":[0,35]}]}],"pos":[11873,11909],"yaml":true},{"content":"`true` when a private key is required to create the algorithm; otherwise, `false`.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">`true`</ph> when a private key is required to create the algorithm; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` when a private key is required to create the algorithm; otherwise, `false`."}],"pos":[11976,12061],"yaml":true},{"content":"An <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\"></xref> that represents the specified asymmetric cryptographic algorithm.","nodes":[{"pos":[0,138],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\"&gt;&lt;/xref&gt;</ph> that represents the specified asymmetric cryptographic algorithm.","source":"An <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\"></xref> that represents the specified asymmetric cryptographic algorithm."}],"pos":[12153,12292],"yaml":true},{"content":"<code>privateKey</code> is `true` and the X.509 certificate specified in the constructor does not have a private key.  \n  \n -or-  \n  \n <code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref> and the public or private key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.DSA\"></xref>.  \n  \n -or-  \n  \n <code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref> or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref> and the public or private key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.RSA\"></xref>.  \n  \n -or-  \n  \n <code>algorithm</code> is not supported. The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>.","nodes":[{"pos":[0,117],"content":"<ph id=\"ph1\">&lt;code&gt;privateKey&lt;/code&gt;</ph> is <ph id=\"ph2\">`true`</ph> and the X.509 certificate specified in the constructor does not have a private key.","source":"<code>privateKey</code> is `true` and the X.509 certificate specified in the constructor does not have a private key."},{"pos":[124,128],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[135,393],"content":"<ph id=\"ph1\">&lt;code&gt;algorithm&lt;/code&gt;</ph> is <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"&gt;&lt;/xref&gt;</ph> and the public or private key for the X.509 certificate specified in the constructor is not of type <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;&lt;/xref&gt;</ph>.","source":"<code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref> and the public or private key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.DSA\"></xref>."},{"pos":[400,404],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[411,931],"content":"<ph id=\"ph1\">&lt;code&gt;algorithm&lt;/code&gt;</ph> is <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph4\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph5\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"&gt;&lt;/xref&gt;</ph> and the public or private key for the X.509 certificate specified in the constructor is not of type <ph id=\"ph6\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph>.","source":"<code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref> or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref> and the public or private key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.RSA\"></xref>."},{"pos":[938,942],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[949,1440],"content":"<code>algorithm</code> is not supported. The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;algorithm&lt;/code&gt;</ph> is not supported.","pos":[0,40],"source":"<code>algorithm</code> is not supported."},{"content":"The supported algorithms are <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph4\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"&gt;&lt;/xref&gt;</ph>, and <ph id=\"ph5\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"&gt;&lt;/xref&gt;</ph>.","pos":[41,491],"source":" The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>."}]}],"pos":[12498,13977],"yaml":true},{"content":"Gets a cryptographic algorithm that generates a hash for a digital signature.","nodes":[{"pos":[0,77],"content":"Gets a cryptographic algorithm that generates a hash for a digital signature.","nodes":[{"content":"Gets a cryptographic algorithm that generates a hash for a digital signature.","pos":[0,77]}]}],"pos":[15207,15285],"yaml":true},{"content":"Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter.","nodes":[{"pos":[0,261],"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&gt;</ph> fields to specify the <ph id=\"ph4\">`algorithm`</ph> parameter.","source":"Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter."}],"pos":[15296,15558],"yaml":true,"extradata":"MT"},{"content":"The hash algorithm.","nodes":[{"pos":[0,19],"content":"The hash algorithm.","nodes":[{"content":"The hash algorithm.","pos":[0,19]}]}],"pos":[15770,15790],"yaml":true},{"content":"A <xref href=\"System.Security.Cryptography.HashAlgorithm\"></xref> that generates hashes for digital signatures.","nodes":[{"pos":[0,111],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithm\"&gt;&lt;/xref&gt;</ph> that generates hashes for digital signatures.","source":"A <xref href=\"System.Security.Cryptography.HashAlgorithm\"></xref> that generates hashes for digital signatures."}],"pos":[15876,15988],"yaml":true},{"content":"<code>algorithm</code> is not supported. The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>.","nodes":[{"pos":[0,323],"content":"<code>algorithm</code> is not supported. The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;algorithm&lt;/code&gt;</ph> is not supported.","pos":[0,40],"source":"<code>algorithm</code> is not supported."},{"content":"The supported algorithms are <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"&gt;&lt;/xref&gt;</ph>, and <ph id=\"ph3\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"&gt;&lt;/xref&gt;</ph>.","pos":[41,323],"source":" The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>."}]}],"pos":[16200,16524],"yaml":true},{"content":"Gets the de-formatter algorithm for the digital signature.","nodes":[{"pos":[0,58],"content":"Gets the de-formatter algorithm for the digital signature.","nodes":[{"content":"Gets the de-formatter algorithm for the digital signature.","pos":[0,58]}]}],"pos":[17724,17783],"yaml":true},{"content":"Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter.","nodes":[{"pos":[0,261],"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&gt;</ph> fields to specify the <ph id=\"ph4\">`algorithm`</ph> parameter.","source":"Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter."}],"pos":[17794,18056],"yaml":true,"extradata":"MT"},{"content":"The de-formatter algorithm for the digital signature to get an instance of.","nodes":[{"pos":[0,75],"content":"The de-formatter algorithm for the digital signature to get an instance of.","nodes":[{"content":"The de-formatter algorithm for the digital signature to get an instance of.","pos":[0,75]}]}],"pos":[18280,18356],"yaml":true},{"content":"An <xref href=\"System.Security.Cryptography.AsymmetricSignatureDeformatter\"></xref> that represents the de-formatter algorithm for the digital signature.","nodes":[{"pos":[0,153],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.AsymmetricSignatureDeformatter\"&gt;&lt;/xref&gt;</ph> that represents the de-formatter algorithm for the digital signature.","source":"An <xref href=\"System.Security.Cryptography.AsymmetricSignatureDeformatter\"></xref> that represents the de-formatter algorithm for the digital signature."}],"pos":[18459,18613],"yaml":true},{"content":"<code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref> and the public key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.DSA\"></xref>.  \n  \n -or-  \n  \n <code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref> or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref> and the public key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.RSA\"></xref>.  \n  \n -or-  \n  \n <code>algorithm</code> is not supported. The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>,  \n  \n <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>.","nodes":[{"pos":[0,247],"content":"<ph id=\"ph1\">&lt;code&gt;algorithm&lt;/code&gt;</ph> is <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"&gt;&lt;/xref&gt;</ph> and the public key for the X.509 certificate specified in the constructor is not of type <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;&lt;/xref&gt;</ph>.","source":"<code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref> and the public key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.DSA\"></xref>."},{"pos":[254,258],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[265,606],"content":"<ph id=\"ph1\">&lt;code&gt;algorithm&lt;/code&gt;</ph> is <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"&gt;&lt;/xref&gt;</ph> and the public key for the X.509 certificate specified in the constructor is not of type <ph id=\"ph4\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph>.","source":"<code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref> or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref> and the public key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.RSA\"></xref>."},{"pos":[613,617],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[624,954],"content":"<code>algorithm</code> is not supported. The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>,  \n  \n <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;algorithm&lt;/code&gt;</ph> is not supported.","pos":[0,40],"source":"<code>algorithm</code> is not supported."},{"content":"The supported algorithms are <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"&gt;&lt;/xref&gt;</ph>,  <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"&gt;&lt;/xref&gt;</ph>, and <ph id=\"ph3\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"&gt;&lt;/xref&gt;</ph>.","pos":[41,329],"source":" The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>,  \n  \n <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>."}]}],"pos":[18820,19802],"yaml":true},{"content":"Gets the formatter algorithm for the digital signature.","nodes":[{"pos":[0,55],"content":"Gets the formatter algorithm for the digital signature.","nodes":[{"content":"Gets the formatter algorithm for the digital signature.","pos":[0,55]}]}],"pos":[20990,21046],"yaml":true},{"content":"Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter.","nodes":[{"pos":[0,261],"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&gt;</ph> fields to specify the <ph id=\"ph4\">`algorithm`</ph> parameter.","source":"Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter."}],"pos":[21057,21319],"yaml":true,"extradata":"MT"},{"content":"The formatter algorithm for the digital signature to get an instance of.","nodes":[{"pos":[0,72],"content":"The formatter algorithm for the digital signature to get an instance of.","nodes":[{"content":"The formatter algorithm for the digital signature to get an instance of.","pos":[0,72]}]}],"pos":[21539,21612],"yaml":true},{"content":"An <xref href=\"System.Security.Cryptography.AsymmetricSignatureDeformatter\"></xref> that represents the formatter algorithm for the digital signature.","nodes":[{"pos":[0,150],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.AsymmetricSignatureDeformatter\"&gt;&lt;/xref&gt;</ph> that represents the formatter algorithm for the digital signature.","source":"An <xref href=\"System.Security.Cryptography.AsymmetricSignatureDeformatter\"></xref> that represents the formatter algorithm for the digital signature."}],"pos":[21713,21864],"yaml":true},{"content":"The X.509 certificate specified in the constructor does not have a private key.  \n  \n -or-  \n  \n <code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref> and the private key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.DSA\"></xref>.  \n  \n -or-  \n  \n <code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref> or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref> and the private key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.RSA\"></xref>.  \n  \n -or-  \n  \n <code>algorithm</code> is not supported. The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>,  \n  \n <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>.","nodes":[{"pos":[0,79],"content":"The X.509 certificate specified in the constructor does not have a private key.","nodes":[{"content":"The X.509 certificate specified in the constructor does not have a private key.","pos":[0,79]}]},{"pos":[86,90],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[97,345],"content":"<ph id=\"ph1\">&lt;code&gt;algorithm&lt;/code&gt;</ph> is <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"&gt;&lt;/xref&gt;</ph> and the private key for the X.509 certificate specified in the constructor is not of type <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;&lt;/xref&gt;</ph>.","source":"<code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref> and the private key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.DSA\"></xref>."},{"pos":[352,356],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[363,705],"content":"<ph id=\"ph1\">&lt;code&gt;algorithm&lt;/code&gt;</ph> is <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"&gt;&lt;/xref&gt;</ph> and the private key for the X.509 certificate specified in the constructor is not of type <ph id=\"ph4\">&lt;xref href=\"System.Security.Cryptography.RSA\"&gt;&lt;/xref&gt;</ph>.","source":"<code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref> or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref> and the private key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.RSA\"></xref>."},{"pos":[712,716],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[723,1053],"content":"<code>algorithm</code> is not supported. The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>,  \n  \n <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;algorithm&lt;/code&gt;</ph> is not supported.","pos":[0,40],"source":"<code>algorithm</code> is not supported."},{"content":"The supported algorithms are <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"&gt;&lt;/xref&gt;</ph>,  <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"&gt;&lt;/xref&gt;</ph>, and <ph id=\"ph3\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"&gt;&lt;/xref&gt;</ph>.","pos":[41,329],"source":" The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>,  \n  \n <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>."}]}],"pos":[22069,23154],"yaml":true},{"content":"Gets a value that indicates whether the private key is a available.","nodes":[{"pos":[0,67],"content":"Gets a value that indicates whether the private key is a available.","nodes":[{"content":"Gets a value that indicates whether the private key is a available.","pos":[0,67]}]}],"pos":[24231,24299],"yaml":true},{"content":"`true` when the private key is available; otherwise, `false`.","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">`true`</ph> when the private key is available; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` when the private key is available; otherwise, `false`."}],"pos":[24438,24502],"yaml":true},{"content":"Gets a value that indicates whether the specified algorithm uses asymmetric keys.","nodes":[{"pos":[0,81],"content":"Gets a value that indicates whether the specified algorithm uses asymmetric keys.","nodes":[{"content":"Gets a value that indicates whether the specified algorithm uses asymmetric keys.","pos":[0,81]}]}],"pos":[25788,25870],"yaml":true},{"content":"The cryptographic algorithm.","nodes":[{"pos":[0,28],"content":"The cryptographic algorithm.","nodes":[{"content":"The cryptographic algorithm.","pos":[0,28]}]}],"pos":[26037,26066],"yaml":true},{"content":"`true` when the specified algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap\"></xref>, or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,488],"content":"<ph id=\"ph1\">`true`</ph> when the specified algorithm is <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph4\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph5\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph6\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph7\">`false`</ph>.","source":"`true` when the specified algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap\"></xref>, or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap\"></xref>; otherwise, `false`."}],"pos":[26124,26615],"yaml":true},{"content":"Gets a value that indicates whether the specified algorithm is supported by this class.","nodes":[{"pos":[0,87],"content":"Gets a value that indicates whether the specified algorithm is supported by this class.","nodes":[{"content":"Gets a value that indicates whether the specified algorithm is supported by this class.","pos":[0,87]}]}],"pos":[27903,27991],"yaml":true},{"content":"The <xref:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm%2A> method returns `true` when one of the following is true:  \n  \n-   The `algorithm` parameter is <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl> and the public key for the X.509 certificate specified in the constructor is of type <xref:System.Security.Cryptography.DSA>.  \n  \n-   The `algorithm` parameter is <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> and the public key for the X.509 certificate specified in the constructor is of type <xref:System.Security.Cryptography.RSA>.","nodes":[{"pos":[0,145],"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm%2A&gt;</ph> method returns <ph id=\"ph2\">`true`</ph> when one of the following is true:","source":"The <xref:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm%2A> method returns `true` when one of the following is true:"},{"pos":[155,373],"content":"The <ph id=\"ph1\">`algorithm`</ph> parameter is <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&gt;</ph> and the public key for the X.509 certificate specified in the constructor is of type <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.DSA&gt;</ph>.","source":"The `algorithm` parameter is <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl> and the public key for the X.509 certificate specified in the constructor is of type <xref:System.Security.Cryptography.DSA>."},{"pos":[383,821],"content":"The <ph id=\"ph1\">`algorithm`</ph> parameter is <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&gt;</ph> or <ph id=\"ph5\">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&gt;</ph> and the public key for the X.509 certificate specified in the constructor is of type <ph id=\"ph6\">&lt;xref:System.Security.Cryptography.RSA&gt;</ph>.","source":"The `algorithm` parameter is <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> and the public key for the X.509 certificate specified in the constructor is of type <xref:System.Security.Cryptography.RSA>."}],"pos":[28002,28830],"yaml":true,"extradata":"MT"},{"content":"The cryptographic algorithm.","nodes":[{"pos":[0,28],"content":"The cryptographic algorithm.","nodes":[{"content":"The cryptographic algorithm.","pos":[0,28]}]}],"pos":[28996,29025],"yaml":true},{"content":"`true` when the specified algorithm is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref> and the public key is of the right type; otherwise, `false`.","nodes":[{"pos":[0,519],"content":"<ph id=\"ph1\">`true`</ph> when the specified algorithm is <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph4\">&lt;xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph5\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph6\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"&gt;&lt;/xref&gt;</ph> and the public key is of the right type; otherwise, <ph id=\"ph7\">`false`</ph>.","source":"`true` when the specified algorithm is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref> and the public key is of the right type; otherwise, `false`."}],"pos":[29083,29605],"yaml":true},{"content":"Gets a value that indicates whether the specified algorithm uses symmetric keys.","nodes":[{"pos":[0,80],"content":"Gets a value that indicates whether the specified algorithm uses symmetric keys.","nodes":[{"content":"Gets a value that indicates whether the specified algorithm uses symmetric keys.","pos":[0,80]}]}],"pos":[30892,30973],"yaml":true},{"content":"The cryptographic algorithm.","nodes":[{"pos":[0,28],"content":"The cryptographic algorithm.","nodes":[{"content":"The cryptographic algorithm.","pos":[0,28]}]}],"pos":[31139,31168],"yaml":true},{"content":"`true` when the specified algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap\"></xref>, or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,918],"content":"<ph id=\"ph1\">`true`</ph> when the specified algorithm is <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph4\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph5\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph6\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph7\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph8\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph9\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph10\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph11\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph12\">`false`</ph>.","source":"`true` when the specified algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap\"></xref>, or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation\"></xref>; otherwise, `false`."}],"pos":[31226,32147],"yaml":true},{"content":"Gets the size, in bits, of the public key associated with the X.509 certificate.","nodes":[{"pos":[0,80],"content":"Gets the size, in bits, of the public key associated with the X.509 certificate.","nodes":[{"content":"Gets the size, in bits, of the public key associated with the X.509 certificate.","pos":[0,80]}]}],"pos":[33289,33370],"yaml":true},{"content":"The size, in bits, of the public key associated with the X.509 certificate.","nodes":[{"pos":[0,75],"content":"The size, in bits, of the public key associated with the X.509 certificate.","nodes":[{"content":"The size, in bits, of the public key associated with the X.509 certificate.","pos":[0,75]}]}],"pos":[33486,33562],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  commentId: T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  id: X509AsymmetricSecurityKey\n  children:\n  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])\n  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])\n  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)\n  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)\n  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)\n  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)\n  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey\n  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)\n  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)\n  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)\n  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize\n  langs:\n  - csharp\n  name: X509AsymmetricSecurityKey\n  nameWithType: X509AsymmetricSecurityKey\n  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Represents an asymmetric key for X.509 certificates.\n  syntax:\n    content: 'public class X509AsymmetricSecurityKey : System.IdentityModel.Tokens.AsymmetricSecurityKey'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.SecurityKey\n  - System.IdentityModel.Tokens.AsymmetricSecurityKey\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  commentId: M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)'\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  langs:\n  - csharp\n  name: X509AsymmetricSecurityKey(X509Certificate2)\n  nameWithType: X509AsymmetricSecurityKey.X509AsymmetricSecurityKey(X509Certificate2)\n  fullName: X509AsymmetricSecurityKey.X509AsymmetricSecurityKey(X509Certificate2)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.X509AsymmetricSecurityKey\"></xref> class using the specified X.509 certificate.\n  syntax:\n    content: public X509AsymmetricSecurityKey (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: The <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> that represents the X.509 certificate.\n  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>certificate</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])\n  commentId: M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])\n  id: DecryptKey(System.String,System.Byte[])\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  langs:\n  - csharp\n  name: DecryptKey(String, Byte[])\n  nameWithType: X509AsymmetricSecurityKey.DecryptKey(String, Byte[])\n  fullName: X509AsymmetricSecurityKey.DecryptKey(String, Byte[])\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Decrypts the specified encrypted key using the specified cryptographic algorithm.\n  remarks: Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> or <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> fields to specify the algorithm.\n  syntax:\n    content: public override byte[] DecryptKey (string algorithm, byte[] keyData);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The cryptographic algorithm to decrypt the key.\n    - id: keyData\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> that contains the encrypted key.\n    return:\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> that contains the decrypted key.\n  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"The X.509 certificate specified in the constructor does not have a private key.  \\n  \\n -or-  \\n  \\n The X.509 certificate has a private key, but it was not generated using the <xref href=\\\"System.Security.Cryptography.RSA\\\"></xref> algorithm.  \\n  \\n -or-  \\n  \\n The X.509 certificate has a private key, it was generated using the <xref href=\\\"System.Security.Cryptography.RSA\\\"></xref> algorithm, but the <xref href=\\\"System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm\\\"></xref> property is `null`.  \\n  \\n -or-  \\n  \\n The <code>algorithm</code> parameter is not supported. The supported algorithms are <xref href=\\\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\\\"></xref> and <xref href=\\\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\\\"></xref>.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])\n  commentId: M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])\n  id: EncryptKey(System.String,System.Byte[])\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  langs:\n  - csharp\n  name: EncryptKey(String, Byte[])\n  nameWithType: X509AsymmetricSecurityKey.EncryptKey(String, Byte[])\n  fullName: X509AsymmetricSecurityKey.EncryptKey(String, Byte[])\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Encrypts the specified encrypted key using the specified cryptographic algorithm.\n  remarks: Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> or <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> fields to specify the algorithm.\n  syntax:\n    content: public override byte[] EncryptKey (string algorithm, byte[] keyData);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The cryptographic algorithm to encrypt the key.\n    - id: keyData\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> that contains the key to encrypt.\n    return:\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> that contains the encrypted key.\n  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"The X.509 certificate specified in the constructor has a public key that was not generated using the <xref href=\\\"System.Security.Cryptography.RSA\\\"></xref> algorithm.  \\n  \\n -or-  \\n  \\n The <code>algorithm</code> parameter is not supported. The supported algorithms are <xref href=\\\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\\\"></xref> and <xref href=\\\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\\\"></xref>.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)\n  commentId: M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)\n  id: GetAsymmetricAlgorithm(System.String,System.Boolean)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  langs:\n  - csharp\n  name: GetAsymmetricAlgorithm(String, Boolean)\n  nameWithType: X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(String, Boolean)\n  fullName: X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(String, Boolean)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the specified asymmetric cryptographic algorithm.\n  remarks: Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter.\n  syntax:\n    content: public override System.Security.Cryptography.AsymmetricAlgorithm GetAsymmetricAlgorithm (string algorithm, bool privateKey);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The asymmetric algorithm to create.\n    - id: privateKey\n      type: System.Boolean\n      description: '`true` when a private key is required to create the algorithm; otherwise, `false`.'\n    return:\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: An <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm\"></xref> that represents the specified asymmetric cryptographic algorithm.\n  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"<code>privateKey</code> is `true` and the X.509 certificate specified in the constructor does not have a private key.  \\n  \\n -or-  \\n  \\n <code>algorithm</code> is <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\\\"></xref> and the public or private key for the X.509 certificate specified in the constructor is not of type <xref href=\\\"System.Security.Cryptography.DSA\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>algorithm</code> is <xref href=\\\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\\\"></xref>, <xref href=\\\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\\\"></xref>, <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\\\"></xref> or <xref href=\\\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\\\"></xref> and the public or private key for the X.509 certificate specified in the constructor is not of type <xref href=\\\"System.Security.Cryptography.RSA\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>algorithm</code> is not supported. The supported algorithms are <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\\\"></xref>, <xref href=\\\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\\\"></xref>, <xref href=\\\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\\\"></xref>, <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\\\"></xref>, and <xref href=\\\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\\\"></xref>.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)\n  commentId: M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)\n  id: GetHashAlgorithmForSignature(System.String)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  langs:\n  - csharp\n  name: GetHashAlgorithmForSignature(String)\n  nameWithType: X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(String)\n  fullName: X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a cryptographic algorithm that generates a hash for a digital signature.\n  remarks: Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter.\n  syntax:\n    content: public override System.Security.Cryptography.HashAlgorithm GetHashAlgorithmForSignature (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The hash algorithm.\n    return:\n      type: System.Security.Cryptography.HashAlgorithm\n      description: A <xref href=\"System.Security.Cryptography.HashAlgorithm\"></xref> that generates hashes for digital signatures.\n  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>algorithm</code> is not supported. The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)\n  commentId: M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)\n  id: GetSignatureDeformatter(System.String)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  langs:\n  - csharp\n  name: GetSignatureDeformatter(String)\n  nameWithType: X509AsymmetricSecurityKey.GetSignatureDeformatter(String)\n  fullName: X509AsymmetricSecurityKey.GetSignatureDeformatter(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the de-formatter algorithm for the digital signature.\n  remarks: Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter.\n  syntax:\n    content: public override System.Security.Cryptography.AsymmetricSignatureDeformatter GetSignatureDeformatter (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The de-formatter algorithm for the digital signature to get an instance of.\n    return:\n      type: System.Security.Cryptography.AsymmetricSignatureDeformatter\n      description: An <xref href=\"System.Security.Cryptography.AsymmetricSignatureDeformatter\"></xref> that represents the de-formatter algorithm for the digital signature.\n  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"<code>algorithm</code> is <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\\\"></xref> and the public key for the X.509 certificate specified in the constructor is not of type <xref href=\\\"System.Security.Cryptography.DSA\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>algorithm</code> is <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\\\"></xref> or <xref href=\\\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\\\"></xref> and the public key for the X.509 certificate specified in the constructor is not of type <xref href=\\\"System.Security.Cryptography.RSA\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>algorithm</code> is not supported. The supported algorithms are <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\\\"></xref>,  \\n  \\n <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\\\"></xref>, and <xref href=\\\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\\\"></xref>.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)\n  commentId: M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)\n  id: GetSignatureFormatter(System.String)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  langs:\n  - csharp\n  name: GetSignatureFormatter(String)\n  nameWithType: X509AsymmetricSecurityKey.GetSignatureFormatter(String)\n  fullName: X509AsymmetricSecurityKey.GetSignatureFormatter(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the formatter algorithm for the digital signature.\n  remarks: Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter.\n  syntax:\n    content: public override System.Security.Cryptography.AsymmetricSignatureFormatter GetSignatureFormatter (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The formatter algorithm for the digital signature to get an instance of.\n    return:\n      type: System.Security.Cryptography.AsymmetricSignatureFormatter\n      description: An <xref href=\"System.Security.Cryptography.AsymmetricSignatureDeformatter\"></xref> that represents the formatter algorithm for the digital signature.\n  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"The X.509 certificate specified in the constructor does not have a private key.  \\n  \\n -or-  \\n  \\n <code>algorithm</code> is <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\\\"></xref> and the private key for the X.509 certificate specified in the constructor is not of type <xref href=\\\"System.Security.Cryptography.DSA\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>algorithm</code> is <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\\\"></xref> or <xref href=\\\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\\\"></xref> and the private key for the X.509 certificate specified in the constructor is not of type <xref href=\\\"System.Security.Cryptography.RSA\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>algorithm</code> is not supported. The supported algorithms are <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\\\"></xref>,  \\n  \\n <xref href=\\\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\\\"></xref>, and <xref href=\\\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\\\"></xref>.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey\n  commentId: M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey\n  id: HasPrivateKey\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  langs:\n  - csharp\n  name: HasPrivateKey()\n  nameWithType: X509AsymmetricSecurityKey.HasPrivateKey()\n  fullName: X509AsymmetricSecurityKey.HasPrivateKey()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether the private key is a available.\n  syntax:\n    content: public override bool HasPrivateKey ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` when the private key is available; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)\n  commentId: M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)\n  id: IsAsymmetricAlgorithm(System.String)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  langs:\n  - csharp\n  name: IsAsymmetricAlgorithm(String)\n  nameWithType: X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(String)\n  fullName: X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether the specified algorithm uses asymmetric keys.\n  syntax:\n    content: public override bool IsAsymmetricAlgorithm (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The cryptographic algorithm.\n    return:\n      type: System.Boolean\n      description: '`true` when the specified algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap\"></xref>, or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap\"></xref>; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)\n  commentId: M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)\n  id: IsSupportedAlgorithm(System.String)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  langs:\n  - csharp\n  name: IsSupportedAlgorithm(String)\n  nameWithType: X509AsymmetricSecurityKey.IsSupportedAlgorithm(String)\n  fullName: X509AsymmetricSecurityKey.IsSupportedAlgorithm(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether the specified algorithm is supported by this class.\n  remarks: \"The <xref:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm%2A> method returns `true` when one of the following is true:  \\n  \\n-   The `algorithm` parameter is <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl> and the public key for the X.509 certificate specified in the constructor is of type <xref:System.Security.Cryptography.DSA>.  \\n  \\n-   The `algorithm` parameter is <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> and the public key for the X.509 certificate specified in the constructor is of type <xref:System.Security.Cryptography.RSA>.\"\n  syntax:\n    content: public override bool IsSupportedAlgorithm (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The cryptographic algorithm.\n    return:\n      type: System.Boolean\n      description: '`true` when the specified algorithm is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref> and the public key is of the right type; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)\n  commentId: M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)\n  id: IsSymmetricAlgorithm(System.String)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  langs:\n  - csharp\n  name: IsSymmetricAlgorithm(String)\n  nameWithType: X509AsymmetricSecurityKey.IsSymmetricAlgorithm(String)\n  fullName: X509AsymmetricSecurityKey.IsSymmetricAlgorithm(String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets a value that indicates whether the specified algorithm uses symmetric keys.\n  syntax:\n    content: public override bool IsSymmetricAlgorithm (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The cryptographic algorithm.\n    return:\n      type: System.Boolean\n      description: '`true` when the specified algorithm is <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap\"></xref>, <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap\"></xref>, or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation\"></xref>; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize\n  commentId: P:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize\n  id: KeySize\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  langs:\n  - csharp\n  name: KeySize\n  nameWithType: X509AsymmetricSecurityKey.KeySize\n  fullName: X509AsymmetricSecurityKey.KeySize\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the size, in bits, of the public key associated with the X.509 certificate.\n  syntax:\n    content: public override int KeySize { get; }\n    return:\n      type: System.Int32\n      description: The size, in bits, of the public key associated with the X.509 certificate.\n  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.IdentityModel.Tokens.AsymmetricSecurityKey\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: AsymmetricSecurityKey\n  nameWithType: AsymmetricSecurityKey\n  fullName: System.IdentityModel.Tokens.AsymmetricSecurityKey\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: X509AsymmetricSecurityKey(X509Certificate2)\n  nameWithType: X509AsymmetricSecurityKey.X509AsymmetricSecurityKey(X509Certificate2)\n  fullName: X509AsymmetricSecurityKey.X509AsymmetricSecurityKey(X509Certificate2)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2\n  nameWithType: X509Certificate2\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: DecryptKey(String, Byte[])\n  nameWithType: X509AsymmetricSecurityKey.DecryptKey(String, Byte[])\n  fullName: X509AsymmetricSecurityKey.DecryptKey(String, Byte[])\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: EncryptKey(String, Byte[])\n  nameWithType: X509AsymmetricSecurityKey.EncryptKey(String, Byte[])\n  fullName: X509AsymmetricSecurityKey.EncryptKey(String, Byte[])\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: GetAsymmetricAlgorithm(String, Boolean)\n  nameWithType: X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(String, Boolean)\n  fullName: X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(String, Boolean)\n- uid: System.Security.Cryptography.AsymmetricAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricAlgorithm\n  nameWithType: AsymmetricAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: GetHashAlgorithmForSignature(String)\n  nameWithType: X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(String)\n  fullName: X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(String)\n- uid: System.Security.Cryptography.HashAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HashAlgorithm\n  nameWithType: HashAlgorithm\n  fullName: System.Security.Cryptography.HashAlgorithm\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: GetSignatureDeformatter(String)\n  nameWithType: X509AsymmetricSecurityKey.GetSignatureDeformatter(String)\n  fullName: X509AsymmetricSecurityKey.GetSignatureDeformatter(String)\n- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricSignatureDeformatter\n  nameWithType: AsymmetricSignatureDeformatter\n  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: GetSignatureFormatter(String)\n  nameWithType: X509AsymmetricSecurityKey.GetSignatureFormatter(String)\n  fullName: X509AsymmetricSecurityKey.GetSignatureFormatter(String)\n- uid: System.Security.Cryptography.AsymmetricSignatureFormatter\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricSignatureFormatter\n  nameWithType: AsymmetricSignatureFormatter\n  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: HasPrivateKey()\n  nameWithType: X509AsymmetricSecurityKey.HasPrivateKey()\n  fullName: X509AsymmetricSecurityKey.HasPrivateKey()\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: IsAsymmetricAlgorithm(String)\n  nameWithType: X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(String)\n  fullName: X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(String)\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: IsSupportedAlgorithm(String)\n  nameWithType: X509AsymmetricSecurityKey.IsSupportedAlgorithm(String)\n  fullName: X509AsymmetricSecurityKey.IsSupportedAlgorithm(String)\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: IsSymmetricAlgorithm(String)\n  nameWithType: X509AsymmetricSecurityKey.IsSymmetricAlgorithm(String)\n  fullName: X509AsymmetricSecurityKey.IsSymmetricAlgorithm(String)\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: KeySize\n  nameWithType: X509AsymmetricSecurityKey.KeySize\n  fullName: X509AsymmetricSecurityKey.KeySize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor*\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: X509AsymmetricSecurityKey\n  nameWithType: X509AsymmetricSecurityKey.X509AsymmetricSecurityKey\n  fullName: X509AsymmetricSecurityKey.X509AsymmetricSecurityKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey*\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: DecryptKey\n  nameWithType: X509AsymmetricSecurityKey.DecryptKey\n  fullName: X509AsymmetricSecurityKey.DecryptKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey*\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: EncryptKey\n  nameWithType: X509AsymmetricSecurityKey.EncryptKey\n  fullName: X509AsymmetricSecurityKey.EncryptKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm*\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: GetAsymmetricAlgorithm\n  nameWithType: X509AsymmetricSecurityKey.GetAsymmetricAlgorithm\n  fullName: X509AsymmetricSecurityKey.GetAsymmetricAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature*\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: GetHashAlgorithmForSignature\n  nameWithType: X509AsymmetricSecurityKey.GetHashAlgorithmForSignature\n  fullName: X509AsymmetricSecurityKey.GetHashAlgorithmForSignature\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter*\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: GetSignatureDeformatter\n  nameWithType: X509AsymmetricSecurityKey.GetSignatureDeformatter\n  fullName: X509AsymmetricSecurityKey.GetSignatureDeformatter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter*\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: GetSignatureFormatter\n  nameWithType: X509AsymmetricSecurityKey.GetSignatureFormatter\n  fullName: X509AsymmetricSecurityKey.GetSignatureFormatter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey*\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: HasPrivateKey\n  nameWithType: X509AsymmetricSecurityKey.HasPrivateKey\n  fullName: X509AsymmetricSecurityKey.HasPrivateKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm*\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: IsAsymmetricAlgorithm\n  nameWithType: X509AsymmetricSecurityKey.IsAsymmetricAlgorithm\n  fullName: X509AsymmetricSecurityKey.IsAsymmetricAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm*\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: IsSupportedAlgorithm\n  nameWithType: X509AsymmetricSecurityKey.IsSupportedAlgorithm\n  fullName: X509AsymmetricSecurityKey.IsSupportedAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm*\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: IsSymmetricAlgorithm\n  nameWithType: X509AsymmetricSecurityKey.IsSymmetricAlgorithm\n  fullName: X509AsymmetricSecurityKey.IsSymmetricAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml\n- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize*\n  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey\n  isExternal: false\n  name: KeySize\n  nameWithType: X509AsymmetricSecurityKey.KeySize\n  fullName: X509AsymmetricSecurityKey.KeySize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}