{"nodes":[{"content":"Creates a timer for a specified duration, using a <xref href=\"System.Activities.Statements.TimerExtension\"></xref>.","nodes":[{"pos":[0,115],"content":"Creates a timer for a specified duration, using a <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.TimerExtension\"&gt;&lt;/xref&gt;</ph>.","source":"Creates a timer for a specified duration, using a <xref href=\"System.Activities.Statements.TimerExtension\"></xref>."}],"pos":[865,981],"yaml":true},{"content":"When the activity’s timer expires, the <xref:System.Activities.Statements.Delay> activity completes its execution. If a workflow instance persists while a <xref:System.Activities.Statements.Delay> activity has an outstanding timer, then an <xref:System.ServiceModel.Activities.Description.ITimerExpiredNotification> standard endpoint must be configured to receive notification that the timer has expired.","nodes":[{"pos":[0,404],"content":"When the activity’s timer expires, the <xref:System.Activities.Statements.Delay> activity completes its execution. If a workflow instance persists while a <xref:System.Activities.Statements.Delay> activity has an outstanding timer, then an <xref:System.ServiceModel.Activities.Description.ITimerExpiredNotification> standard endpoint must be configured to receive notification that the timer has expired.","nodes":[{"content":"When the activity’s timer expires, the <xref:System.Activities.Statements.Delay> activity completes its execution. If a workflow instance persists while a <xref:System.Activities.Statements.Delay> activity has an outstanding timer, then an <xref:System.ServiceModel.Activities.Description.ITimerExpiredNotification> standard endpoint must be configured to receive notification that the timer has expired.","pos":[0,404],"nodes":[{"content":"When the activity’s timer expires, the <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Delay&gt;</ph> activity completes its execution.","pos":[0,114],"source":"When the activity’s timer expires, the <xref:System.Activities.Statements.Delay> activity completes its execution."},{"content":"If a workflow instance persists while a <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Delay&gt;</ph> activity has an outstanding timer, then an <ph id=\"ph2\">&lt;xref:System.ServiceModel.Activities.Description.ITimerExpiredNotification&gt;</ph> standard endpoint must be configured to receive notification that the timer has expired.","pos":[115,404],"source":" If a workflow instance persists while a <xref:System.Activities.Statements.Delay> activity has an outstanding timer, then an <xref:System.ServiceModel.Activities.Description.ITimerExpiredNotification> standard endpoint must be configured to receive notification that the timer has expired."}]}]}],"pos":[992,1397],"yaml":true,"extradata":"MT"},{"content":"Creates a new instance of the <xref href=\"System.Activities.Statements.Delay\"></xref> activity.","nodes":[{"pos":[0,95],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.Delay\"&gt;&lt;/xref&gt;</ph> activity.","source":"Creates a new instance of the <xref href=\"System.Activities.Statements.Delay\"></xref> activity."}],"pos":[4123,4219],"yaml":true},{"content":"The duration of the timer that the <xref href=\"System.Activities.Statements.Delay\"></xref> activity creates. If the duration is set to <xref href=\"System.TimeSpan.MaxValue\"></xref>, the delay is infinite.","nodes":[{"pos":[0,204],"content":"The duration of the timer that the <xref href=\"System.Activities.Statements.Delay\"></xref> activity creates. If the duration is set to <xref href=\"System.TimeSpan.MaxValue\"></xref>, the delay is infinite.","nodes":[{"content":"The duration of the timer that the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.Delay\"&gt;&lt;/xref&gt;</ph> activity creates.","pos":[0,108],"source":"The duration of the timer that the <xref href=\"System.Activities.Statements.Delay\"></xref> activity creates."},{"content":"If the duration is set to <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan.MaxValue\"&gt;&lt;/xref&gt;</ph>, the delay is infinite.","pos":[109,204],"source":" If the duration is set to <xref href=\"System.TimeSpan.MaxValue\"></xref>, the delay is infinite."}]}],"pos":[10544,10749],"yaml":true},{"content":"The timer duration.","nodes":[{"pos":[0,19],"content":"The timer duration.","nodes":[{"content":"The timer duration.","pos":[0,19]}]}],"pos":[11368,11388],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.Delay\n  commentId: T:System.Activities.Statements.Delay\n  id: Delay\n  children:\n  - System.Activities.Statements.Delay.#ctor\n  - System.Activities.Statements.Delay.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.Statements.Delay.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.Activities.Statements.Delay.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.Delay.CanInduceIdle\n  - System.Activities.Statements.Delay.Duration\n  - System.Activities.Statements.Delay.Execute(System.Activities.NativeActivityContext)\n  langs:\n  - csharp\n  name: Delay\n  nameWithType: Delay\n  fullName: System.Activities.Statements.Delay\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a timer for a specified duration, using a <xref href=\"System.Activities.Statements.TimerExtension\"></xref>.\n  remarks: When the activity’s timer expires, the <xref:System.Activities.Statements.Delay> activity completes its execution. If a workflow instance persists while a <xref:System.Activities.Statements.Delay> activity has an outstanding timer, then an <xref:System.ServiceModel.Activities.Description.ITimerExpiredNotification> standard endpoint must be configured to receive notification that the timer has expired.\n  example:\n  - \"The following code sample demonstrates creating a <xref:System.Activities.Statements.Delay> activity. This example is from the [Using the Pick Activity](~/docs/framework/windows-workflow-foundation/samples/using-the-pick-activity.md) sample.  \\n  \\n [!code-csharp[wfs_Pick#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_pick/cs/program.cs#1)]\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Duration\")]\n\n      public sealed class Delay : System.Activities.NativeActivity\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.NativeActivity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity.Implementation\n  - System.Activities.NativeActivity.ImplementationVersion\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Windows.Markup.ContentPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Delay.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.Delay.#ctor\n  commentId: M:System.Activities.Statements.Delay.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.Delay\n  langs:\n  - csharp\n  name: Delay()\n  nameWithType: Delay.Delay()\n  fullName: Delay.Delay()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.Delay\"></xref> activity.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates creating a <xref:System.Activities.Statements.Delay> activity. This example is from the [Using the Pick Activity](~/docs/framework/windows-workflow-foundation/samples/using-the-pick-activity.md)sample.  \\n  \\n [!code-csharp[wfs_Pick#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_pick/cs/program.cs#1)]\"\n  syntax:\n    content: public Delay ();\n    parameters: []\n  overload: System.Activities.Statements.Delay.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Delay.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.Delay.Abort(System.Activities.NativeActivityAbortContext)\n  commentId: M:System.Activities.Statements.Delay.Abort(System.Activities.NativeActivityAbortContext)\n  id: Abort(System.Activities.NativeActivityAbortContext)\n  parent: System.Activities.Statements.Delay\n  langs:\n  - csharp\n  name: Abort(NativeActivityAbortContext)\n  nameWithType: Delay.Abort(NativeActivityAbortContext)\n  fullName: Delay.Abort(NativeActivityAbortContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Abort (System.Activities.NativeActivityAbortContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityAbortContext\n      description: ''\n  overload: System.Activities.Statements.Delay.Abort*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Delay.xml\n- uid: System.Activities.Statements.Delay.CacheMetadata(System.Activities.NativeActivityMetadata)\n  commentId: M:System.Activities.Statements.Delay.CacheMetadata(System.Activities.NativeActivityMetadata)\n  id: CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.Delay\n  langs:\n  - csharp\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: Delay.CacheMetadata(NativeActivityMetadata)\n  fullName: Delay.CacheMetadata(NativeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.NativeActivityMetadata\n      description: ''\n  overload: System.Activities.Statements.Delay.CacheMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Delay.xml\n- uid: System.Activities.Statements.Delay.Cancel(System.Activities.NativeActivityContext)\n  commentId: M:System.Activities.Statements.Delay.Cancel(System.Activities.NativeActivityContext)\n  id: Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Delay\n  langs:\n  - csharp\n  name: Cancel(NativeActivityContext)\n  nameWithType: Delay.Cancel(NativeActivityContext)\n  fullName: Delay.Cancel(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Cancel (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: ''\n  overload: System.Activities.Statements.Delay.Cancel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Delay.xml\n- uid: System.Activities.Statements.Delay.CanInduceIdle\n  commentId: P:System.Activities.Statements.Delay.CanInduceIdle\n  id: CanInduceIdle\n  parent: System.Activities.Statements.Delay\n  langs:\n  - csharp\n  name: CanInduceIdle\n  nameWithType: Delay.CanInduceIdle\n  fullName: Delay.CanInduceIdle\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override bool CanInduceIdle { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Activities.Statements.Delay.CanInduceIdle*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Delay.xml\n- uid: System.Activities.Statements.Delay.Duration\n  commentId: P:System.Activities.Statements.Delay.Duration\n  id: Duration\n  parent: System.Activities.Statements.Delay\n  langs:\n  - csharp\n  name: Duration\n  nameWithType: Delay.Duration\n  fullName: Delay.Duration\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The duration of the timer that the <xref href=\"System.Activities.Statements.Delay\"></xref> activity creates. If the duration is set to <xref href=\"System.TimeSpan.MaxValue\"></xref>, the delay is infinite.\n  remarks: ''\n  example:\n  - \"The following code sample demonstrates using Duration in a <xref:System.Activities.Statements.Delay> activity. This example is from the [Using the Pick Activity](~/docs/framework/windows-workflow-foundation/samples/using-the-pick-activity.md) sample.  \\n  \\n [!code-csharp[wfs_Pick#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_pick/cs/program.cs#1)]\"\n  syntax:\n    content: >-\n      [System.Activities.RequiredArgument]\n\n      public System.Activities.InArgument<TimeSpan> Duration { get; set; }\n    return:\n      type: System.Activities.InArgument{System.TimeSpan}\n      description: The timer duration.\n  overload: System.Activities.Statements.Delay.Duration*\n  exceptions: []\n  attributes:\n  - type: System.Activities.RequiredArgumentAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Delay.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.Delay.Execute(System.Activities.NativeActivityContext)\n  commentId: M:System.Activities.Statements.Delay.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Delay\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: Delay.Execute(NativeActivityContext)\n  fullName: Delay.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: ''\n  overload: System.Activities.Statements.Delay.Execute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Delay.xml\nreferences:\n- uid: System.Activities.NativeActivity\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivity\n  nameWithType: NativeActivity\n  fullName: System.Activities.NativeActivity\n- uid: System.Activities.Statements.Delay.#ctor\n  parent: System.Activities.Statements.Delay\n  isExternal: false\n  name: Delay()\n  nameWithType: Delay.Delay()\n  fullName: Delay.Delay()\n- uid: System.Activities.Statements.Delay.Abort(System.Activities.NativeActivityAbortContext)\n  parent: System.Activities.Statements.Delay\n  isExternal: false\n  name: Abort(NativeActivityAbortContext)\n  nameWithType: Delay.Abort(NativeActivityAbortContext)\n  fullName: Delay.Abort(NativeActivityAbortContext)\n- uid: System.Activities.NativeActivityAbortContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityAbortContext\n  nameWithType: NativeActivityAbortContext\n  fullName: System.Activities.NativeActivityAbortContext\n- uid: System.Activities.Statements.Delay.CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.Delay\n  isExternal: false\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: Delay.CacheMetadata(NativeActivityMetadata)\n  fullName: Delay.CacheMetadata(NativeActivityMetadata)\n- uid: System.Activities.NativeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityMetadata\n  nameWithType: NativeActivityMetadata\n  fullName: System.Activities.NativeActivityMetadata\n- uid: System.Activities.Statements.Delay.Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Delay\n  isExternal: false\n  name: Cancel(NativeActivityContext)\n  nameWithType: Delay.Cancel(NativeActivityContext)\n  fullName: Delay.Cancel(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.Statements.Delay.CanInduceIdle\n  parent: System.Activities.Statements.Delay\n  isExternal: false\n  name: CanInduceIdle\n  nameWithType: Delay.CanInduceIdle\n  fullName: Delay.CanInduceIdle\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Statements.Delay.Duration\n  parent: System.Activities.Statements.Delay\n  isExternal: false\n  name: Duration\n  nameWithType: Delay.Duration\n  fullName: Delay.Duration\n- uid: System.Activities.InArgument`1\n  name: InArgument<T>\n  nameWithType: InArgument<T>\n  fullName: System.Activities.InArgument<T>\n- uid: System.TimeSpan\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Activities.InArgument{System.TimeSpan}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<TimeSpan>\n  nameWithType: InArgument<TimeSpan>\n  fullName: System.Activities.InArgument<System.TimeSpan>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: System.Activities.InArgument\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.TimeSpan\n    name: TimeSpan\n    nameWithType: TimeSpan\n    fullName: System.TimeSpan\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.Delay.Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Delay\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: Delay.Execute(NativeActivityContext)\n  fullName: Delay.Execute(NativeActivityContext)\n- uid: System.Activities.Statements.Delay.#ctor*\n  parent: System.Activities.Statements.Delay\n  isExternal: false\n  name: Delay\n  nameWithType: Delay.Delay\n  fullName: Delay.Delay\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Delay.xml\n- uid: System.Activities.Statements.Delay.Abort*\n  parent: System.Activities.Statements.Delay\n  isExternal: false\n  name: Abort\n  nameWithType: Delay.Abort\n  fullName: Delay.Abort\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Delay.xml\n- uid: System.Activities.Statements.Delay.CacheMetadata*\n  parent: System.Activities.Statements.Delay\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: Delay.CacheMetadata\n  fullName: Delay.CacheMetadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Delay.xml\n- uid: System.Activities.Statements.Delay.Cancel*\n  parent: System.Activities.Statements.Delay\n  isExternal: false\n  name: Cancel\n  nameWithType: Delay.Cancel\n  fullName: Delay.Cancel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Delay.xml\n- uid: System.Activities.Statements.Delay.CanInduceIdle*\n  parent: System.Activities.Statements.Delay\n  isExternal: false\n  name: CanInduceIdle\n  nameWithType: Delay.CanInduceIdle\n  fullName: Delay.CanInduceIdle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Delay.xml\n- uid: System.Activities.Statements.Delay.Duration*\n  parent: System.Activities.Statements.Delay\n  isExternal: false\n  name: Duration\n  nameWithType: Delay.Duration\n  fullName: Delay.Duration\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Delay.xml\n- uid: System.Activities.Statements.Delay.Execute*\n  parent: System.Activities.Statements.Delay\n  isExternal: false\n  name: Execute\n  nameWithType: Delay.Execute\n  fullName: Delay.Execute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Delay.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Activities.Activity.ToString\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: Activity.ToString()\n- uid: System.Activities.Activity.CacheId\n  parent: System.Activities.Activity\n  isExternal: false\n  name: CacheId\n  nameWithType: Activity.CacheId\n  fullName: Activity.CacheId\n- uid: System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: CacheMetadata(ActivityMetadata)\n  nameWithType: NativeActivity.CacheMetadata(ActivityMetadata)\n  fullName: NativeActivity.CacheMetadata(ActivityMetadata)\n- uid: System.Activities.Activity.Constraints\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Constraints\n  nameWithType: Activity.Constraints\n  fullName: Activity.Constraints\n- uid: System.Activities.Activity.DisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: DisplayName\n  nameWithType: Activity.DisplayName\n  fullName: Activity.DisplayName\n- uid: System.Activities.Activity.Id\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Id\n  nameWithType: Activity.Id\n  fullName: Activity.Id\n- uid: System.Activities.NativeActivity.Implementation\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: Implementation\n  nameWithType: NativeActivity.Implementation\n  fullName: NativeActivity.Implementation\n- uid: System.Activities.NativeActivity.ImplementationVersion\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: ImplementationVersion\n  nameWithType: NativeActivity.ImplementationVersion\n  fullName: NativeActivity.ImplementationVersion\n- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  fullName: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n- uid: System.Activities.Activity.ShouldSerializeDisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ShouldSerializeDisplayName()\n  nameWithType: Activity.ShouldSerializeDisplayName()\n  fullName: Activity.ShouldSerializeDisplayName()\n- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n  fullName: NativeActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)\n- uid: System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  parent: System.Activities.NativeActivity\n  isExternal: false\n  name: UpdateInstance(NativeActivityUpdateContext)\n  nameWithType: NativeActivity.UpdateInstance(NativeActivityUpdateContext)\n  fullName: NativeActivity.UpdateInstance(NativeActivityUpdateContext)\n"}