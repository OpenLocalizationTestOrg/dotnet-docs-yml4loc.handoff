{"nodes":[{"content":"Represents a typed query against a conceptual model in a given object context.","nodes":[{"pos":[0,78],"content":"Represents a typed query against a conceptual model in a given object context.","nodes":[{"content":"Represents a typed query against a conceptual model in a given object context.","pos":[0,78]}]}],"pos":[2014,2093],"yaml":true},{"content":"The <xref:System.Data.Objects.ObjectQuery%601> generic class represents a query that returns a collection of zero or more objects of a specific type. The <xref:System.Data.Objects.ObjectContext> must be defined before an object query can be executed. This context provides the connection and metadata information that is required to compose and execute the query. An object query is executed in the following scenarios:  \n  \n-   When it is acted upon, such as during a `foreach` (C#) or `For Each` (Visual Basic) enumeration.  \n  \n-   When it is assigned to fill a <xref:System.Collections.Generic.List%601> collection.  \n  \n-   When the <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> method is explicitly called.  \n  \n The query itself can be created by using an [!INCLUDE[esql](~/includes/esql-md.md)] statement or a LINQ query, or it can be incrementally built by using the query builder methods included in the class. In every case, the result is a new <xref:System.Data.Objects.ObjectQuery%601> instance that, when explicitly executed or enumerated over, will send the query to the data source for execution and return the results.  \n  \n An <xref:System.Data.Objects.ObjectQuery%601> is frequently of an entity type, but it can also be of <xref:System.Data.Common.DbDataRecord> type, for projections to an anonymous type, or of a primitive type, such as an integer or string. For more information, see [Object Queries](http://msdn.microsoft.com/en-us/0768033c-876f-471d-85d5-264884349276).","nodes":[{"pos":[0,419],"content":"The <xref:System.Data.Objects.ObjectQuery%601> generic class represents a query that returns a collection of zero or more objects of a specific type. The <xref:System.Data.Objects.ObjectContext> must be defined before an object query can be executed. This context provides the connection and metadata information that is required to compose and execute the query. An object query is executed in the following scenarios:","nodes":[{"content":"The <xref:System.Data.Objects.ObjectQuery%601> generic class represents a query that returns a collection of zero or more objects of a specific type. The <xref:System.Data.Objects.ObjectContext> must be defined before an object query can be executed. This context provides the connection and metadata information that is required to compose and execute the query. An object query is executed in the following scenarios:","pos":[0,419],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> generic class represents a query that returns a collection of zero or more objects of a specific type.","pos":[0,149],"source":"The <xref:System.Data.Objects.ObjectQuery%601> generic class represents a query that returns a collection of zero or more objects of a specific type."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> must be defined before an object query can be executed.","pos":[150,250],"source":" The <xref:System.Data.Objects.ObjectContext> must be defined before an object query can be executed."},{"content":"This context provides the connection and metadata information that is required to compose and execute the query.","pos":[251,363]},{"content":"An object query is executed in the following scenarios:","pos":[364,419]}]}]},{"pos":[429,525],"content":"When it is acted upon, such as during a <ph id=\"ph1\">`foreach`</ph> (C#) or <ph id=\"ph2\">`For Each`</ph> (Visual Basic) enumeration.","source":"When it is acted upon, such as during a `foreach` (C#) or `For Each` (Visual Basic) enumeration."},{"pos":[535,619],"content":"When it is assigned to fill a <xref:System.Collections.Generic.List%601> collection.","nodes":[{"content":"When it is assigned to fill a <ph id=\"ph1\">&lt;xref:System.Collections.Generic.List%601&gt;</ph> collection.","pos":[0,84],"source":"When it is assigned to fill a <xref:System.Collections.Generic.List%601> collection."}]},{"pos":[629,720],"content":"When the <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> method is explicitly called.","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601.Execute%2A&gt;</ph> method is explicitly called.","pos":[0,91],"source":"When the <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> method is explicitly called."}]},{"pos":[727,1143],"content":"The query itself can be created by using an [!INCLUDE[esql](~/includes/esql-md.md)] statement or a LINQ query, or it can be incrementally built by using the query builder methods included in the class. In every case, the result is a new <xref:System.Data.Objects.ObjectQuery%601> instance that, when explicitly executed or enumerated over, will send the query to the data source for execution and return the results.","nodes":[{"content":"The query itself can be created by using an <ph id=\"ph1\">[!INCLUDE[esql](~/includes/esql-md.md)]</ph> statement or a LINQ query, or it can be incrementally built by using the query builder methods included in the class.","pos":[0,201],"source":"The query itself can be created by using an [!INCLUDE[esql](~/includes/esql-md.md)] statement or a LINQ query, or it can be incrementally built by using the query builder methods included in the class."},{"content":"In every case, the result is a new <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> instance that, when explicitly executed or enumerated over, will send the query to the data source for execution and return the results.","pos":[202,416],"source":" In every case, the result is a new <xref:System.Data.Objects.ObjectQuery%601> instance that, when explicitly executed or enumerated over, will send the query to the data source for execution and return the results."}]},{"pos":[1150,1501],"content":"An <xref:System.Data.Objects.ObjectQuery%601> is frequently of an entity type, but it can also be of <xref:System.Data.Common.DbDataRecord> type, for projections to an anonymous type, or of a primitive type, such as an integer or string. For more information, see [Object Queries](http://msdn.microsoft.com/en-us/0768033c-876f-471d-85d5-264884349276).","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> is frequently of an entity type, but it can also be of <ph id=\"ph2\">&lt;xref:System.Data.Common.DbDataRecord&gt;</ph> type, for projections to an anonymous type, or of a primitive type, such as an integer or string.","pos":[0,237],"source":"An <xref:System.Data.Objects.ObjectQuery%601> is frequently of an entity type, but it can also be of <xref:System.Data.Common.DbDataRecord> type, for projections to an anonymous type, or of a primitive type, such as an integer or string."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Object Queries<ept id=\"p1\">](http://msdn.microsoft.com/en-us/0768033c-876f-471d-85d5-264884349276)</ept>.","pos":[238,351],"source":" For more information, see [Object Queries](http://msdn.microsoft.com/en-us/0768033c-876f-471d-85d5-264884349276)."}]}],"pos":[2104,3618],"yaml":true,"extradata":"MT"},{"content":"The entity type of the query.","nodes":[{"pos":[0,29],"content":"The entity type of the query.","nodes":[{"content":"The entity type of the query.","pos":[0,29]}]}],"pos":[4479,4509],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance using the specified [!INCLUDE[esql](~/includes/esql-md.md)] command as the initial query.","nodes":[{"pos":[0,167],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectQuery`1\"&gt;&lt;/xref&gt;</ph> instance using the specified <ph id=\"ph2\">[!INCLUDE[esql](~/includes/esql-md.md)]</ph> command as the initial query.","source":"Creates a new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance using the specified [!INCLUDE[esql](~/includes/esql-md.md)] command as the initial query."}],"pos":[50108,50276],"yaml":true},{"content":"When your application generates Entity SQL queries at runtime, you should be aware of any command length limitations of the data source. Entity SQL does not enforce limitations on the length of the command text in queries.","nodes":[{"pos":[0,222],"content":"When your application generates Entity SQL queries at runtime, you should be aware of any command length limitations of the data source. Entity SQL does not enforce limitations on the length of the command text in queries.","nodes":[{"content":"When your application generates Entity SQL queries at runtime, you should be aware of any command length limitations of the data source. Entity SQL does not enforce limitations on the length of the command text in queries.","pos":[0,222],"nodes":[{"content":"When your application generates Entity SQL queries at runtime, you should be aware of any command length limitations of the data source.","pos":[0,136]},{"content":"Entity SQL does not enforce limitations on the length of the command text in queries.","pos":[137,222]}]}]}],"pos":[50287,50510],"yaml":true,"extradata":"MT"},{"content":"The [!INCLUDE[esql](~/includes/esql-md.md)] query.","nodes":[{"pos":[0,50],"content":"The <ph id=\"ph1\">[!INCLUDE[esql](~/includes/esql-md.md)]</ph> query.","source":"The [!INCLUDE[esql](~/includes/esql-md.md)] query."}],"pos":[51276,51327],"yaml":true},{"content":"The <xref href=\"System.Data.Objects.ObjectContext\"></xref> on which to execute the query.","nodes":[{"pos":[0,89],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectContext\"&gt;&lt;/xref&gt;</ph> on which to execute the query.","source":"The <xref href=\"System.Data.Objects.ObjectContext\"></xref> on which to execute the query."}],"pos":[51410,51500],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance using the specified [!INCLUDE[esql](~/includes/esql-md.md)] command as the initial query and the specified merge option.","nodes":[{"pos":[0,198],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectQuery`1\"&gt;&lt;/xref&gt;</ph> instance using the specified <ph id=\"ph2\">[!INCLUDE[esql](~/includes/esql-md.md)]</ph> command as the initial query and the specified merge option.","source":"Creates a new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance using the specified [!INCLUDE[esql](~/includes/esql-md.md)] command as the initial query and the specified merge option."}],"pos":[52848,53047],"yaml":true},{"content":"When your application generates Entity SQL queries at runtime, you should be aware of any command length limitations of the data source. Entity SQL does not enforce limitations on the length of the command text in queries.","nodes":[{"pos":[0,222],"content":"When your application generates Entity SQL queries at runtime, you should be aware of any command length limitations of the data source. Entity SQL does not enforce limitations on the length of the command text in queries.","nodes":[{"content":"When your application generates Entity SQL queries at runtime, you should be aware of any command length limitations of the data source. Entity SQL does not enforce limitations on the length of the command text in queries.","pos":[0,222],"nodes":[{"content":"When your application generates Entity SQL queries at runtime, you should be aware of any command length limitations of the data source.","pos":[0,136]},{"content":"Entity SQL does not enforce limitations on the length of the command text in queries.","pos":[137,222]}]}]}],"pos":[53058,53281],"yaml":true,"extradata":"MT"},{"content":"The [!INCLUDE[esql](~/includes/esql-md.md)] query.","nodes":[{"pos":[0,50],"content":"The <ph id=\"ph1\">[!INCLUDE[esql](~/includes/esql-md.md)]</ph> query.","source":"The [!INCLUDE[esql](~/includes/esql-md.md)] query."}],"pos":[54177,54228],"yaml":true},{"content":"The <xref href=\"System.Data.Objects.ObjectContext\"></xref> on which to execute the query.","nodes":[{"pos":[0,89],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectContext\"&gt;&lt;/xref&gt;</ph> on which to execute the query.","source":"The <xref href=\"System.Data.Objects.ObjectContext\"></xref> on which to execute the query."}],"pos":[54311,54401],"yaml":true},{"content":"Specifies how the entities that are retrieved through this query should be merged with the entities that have been returned from previous queries against the same <xref href=\"System.Data.Objects.ObjectContext\"></xref>.","nodes":[{"pos":[0,218],"content":"Specifies how the entities that are retrieved through this query should be merged with the entities that have been returned from previous queries against the same <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectContext\"&gt;&lt;/xref&gt;</ph>.","source":"Specifies how the entities that are retrieved through this query should be merged with the entities that have been returned from previous queries against the same <xref href=\"System.Data.Objects.ObjectContext\"></xref>."}],"pos":[54486,54705],"yaml":true},{"content":"Limits the query to unique results.","nodes":[{"pos":[0,35],"content":"Limits the query to unique results.","nodes":[{"content":"Limits the query to unique results.","pos":[0,35]}]}],"pos":[55692,55728],"yaml":true},{"content":"This query builder method returns an <xref:System.Data.Objects.ObjectQuery%601> instance that is equivalent to the original query with [SELECT DISTINCT](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) applied.  \n  \n The `DISTINCT` operator cannot be applied to an object that includes a mapping to a non-comparable column in the data source (such as ntext).","nodes":[{"pos":[0,234],"content":"This query builder method returns an <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> instance that is equivalent to the original query with <bpt id=\"p1\">[</bpt>SELECT DISTINCT<ept id=\"p1\">](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md)</ept> applied.","source":"This query builder method returns an <xref:System.Data.Objects.ObjectQuery%601> instance that is equivalent to the original query with [SELECT DISTINCT](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) applied."},{"pos":[241,382],"content":"The <ph id=\"ph1\">`DISTINCT`</ph> operator cannot be applied to an object that includes a mapping to a non-comparable column in the data source (such as ntext).","source":"The `DISTINCT` operator cannot be applied to an object that includes a mapping to a non-comparable column in the data source (such as ntext)."}],"pos":[55739,56126],"yaml":true,"extradata":"MT"},{"content":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with [SELECT DISTINCT](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) applied.","nodes":[{"pos":[0,218],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectQuery`1\"&gt;&lt;/xref&gt;</ph> instance that is equivalent to the original instance with <bpt id=\"p1\">[</bpt>SELECT DISTINCT<ept id=\"p1\">](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md)</ept> applied.","source":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with [SELECT DISTINCT](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) applied."}],"pos":[57161,57380],"yaml":true},{"content":"Limits the query results by excluding results based on the results of another object query.","nodes":[{"pos":[0,91],"content":"Limits the query results by excluding results based on the results of another object query.","nodes":[{"content":"Limits the query results by excluding results based on the results of another object query.","pos":[0,91]}]}],"pos":[58511,58603],"yaml":true},{"content":"The supplied `query` that defines results to exclude must be of the same type or of a type that is compatible with the <xref:System.Data.Objects.ObjectQuery%601>.  \n  \n Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance. Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>. There cannot be two parameters in the combined collection with the same name. For more information, see [Query Builder Methods](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0).  \n  \n The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.Except%2A> was called.","nodes":[{"pos":[0,162],"content":"The supplied <ph id=\"ph1\">`query`</ph> that defines results to exclude must be of the same type or of a type that is compatible with the <ph id=\"ph2\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph>.","source":"The supplied `query` that defines results to exclude must be of the same type or of a type that is compatible with the <xref:System.Data.Objects.ObjectQuery%601>."},{"pos":[169,619],"content":"Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance. Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>. There cannot be two parameters in the combined collection with the same name. For more information, see [Query Builder Methods](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0).","nodes":[{"content":"Parameters that are defined in the supplied <ph id=\"ph1\">`query`</ph> are merged with parameters that are defined in the <ph id=\"ph2\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> instance.","pos":[0,155],"source":"Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance."},{"content":"Parameters must be unique in the combined <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectParameterCollection&gt;</ph>.","pos":[156,251],"source":" Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>."},{"content":"There cannot be two parameters in the combined collection with the same name.","pos":[252,329]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Query Builder Methods<ept id=\"p1\">](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0)</ept>.","pos":[330,450],"source":" For more information, see [Query Builder Methods](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0)."}]},{"pos":[626,804],"content":"The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.Except%2A> was called.","nodes":[{"content":"The resulting query inherits the connection from the <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> instance on which <ph id=\"ph2\">&lt;xref:System.Data.Objects.ObjectQuery%601.Except%2A&gt;</ph> was called.","pos":[0,178],"source":"The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.Except%2A> was called."}]}],"pos":[58614,59425],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> that represents the results to exclude from the query.","nodes":[{"pos":[0,112],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectQuery`1\"&gt;&lt;/xref&gt;</ph> that represents the results to exclude from the query.","source":"An <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> that represents the results to exclude from the query."}],"pos":[60323,60436],"yaml":true},{"content":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with [EXCEPT](~/docs/framework/data/adonet/ef/language-reference/except-entity-sql.md) applied based on the specified <code>query</code>.","nodes":[{"pos":[0,251],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectQuery`1\"&gt;&lt;/xref&gt;</ph> instance that is equivalent to the original instance with <bpt id=\"p1\">[</bpt>EXCEPT<ept id=\"p1\">](~/docs/framework/data/adonet/ef/language-reference/except-entity-sql.md)</ept> applied based on the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">query</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with [EXCEPT](~/docs/framework/data/adonet/ef/language-reference/except-entity-sql.md) applied based on the specified <code>query</code>."}],"pos":[60513,60765],"yaml":true},{"content":"The <code>query</code> parameter is `null` or an empty string.","nodes":[{"pos":[0,62],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">query</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph> or an empty string.","source":"The <code>query</code> parameter is `null` or an empty string."}],"pos":[60935,60998],"yaml":true},{"content":"Executes the object query with the specified merge option.","nodes":[{"pos":[0,58],"content":"Executes the object query with the specified merge option.","nodes":[{"content":"Executes the object query with the specified merge option.","pos":[0,58]}]}],"pos":[62041,62100],"yaml":true},{"content":"The default merge option for object queries is <xref:System.Data.Objects.MergeOption.AppendOnly>. For more information, see [Identity Resolution, State Management, and Change Tracking](http://msdn.microsoft.com/en-us/3bd49311-0e72-4ea4-8355-38fe57036ba0).","nodes":[{"pos":[0,255],"content":"The default merge option for object queries is <xref:System.Data.Objects.MergeOption.AppendOnly>. For more information, see [Identity Resolution, State Management, and Change Tracking](http://msdn.microsoft.com/en-us/3bd49311-0e72-4ea4-8355-38fe57036ba0).","nodes":[{"content":"The default merge option for object queries is <ph id=\"ph1\">&lt;xref:System.Data.Objects.MergeOption.AppendOnly&gt;</ph>.","pos":[0,97],"source":"The default merge option for object queries is <xref:System.Data.Objects.MergeOption.AppendOnly>."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Identity Resolution, State Management, and Change Tracking<ept id=\"p1\">](http://msdn.microsoft.com/en-us/3bd49311-0e72-4ea4-8355-38fe57036ba0)</ept>.","pos":[98,255],"source":" For more information, see [Identity Resolution, State Management, and Change Tracking](http://msdn.microsoft.com/en-us/3bd49311-0e72-4ea4-8355-38fe57036ba0)."}]}],"pos":[62111,62367],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Data.Objects.MergeOption\"></xref> to use when executing the query. The default is <xref href=\"System.Data.Objects.MergeOption.AppendOnly\"></xref>.","nodes":[{"pos":[0,169],"content":"The <xref href=\"System.Data.Objects.MergeOption\"></xref> to use when executing the query. The default is <xref href=\"System.Data.Objects.MergeOption.AppendOnly\"></xref>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.MergeOption\"&gt;&lt;/xref&gt;</ph> to use when executing the query.","pos":[0,89],"source":"The <xref href=\"System.Data.Objects.MergeOption\"></xref> to use when executing the query."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.MergeOption.AppendOnly\"&gt;&lt;/xref&gt;</ph>.","pos":[90,169],"source":" The default is <xref href=\"System.Data.Objects.MergeOption.AppendOnly\"></xref>."}]}],"pos":[63343,63513],"yaml":true},{"content":"An <xref href=\"System.Data.Objects.ObjectResult`1\"></xref> that contains a collection of entity objects returned by the query.","nodes":[{"pos":[0,126],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectResult`1\"&gt;&lt;/xref&gt;</ph> that contains a collection of entity objects returned by the query.","source":"An <xref href=\"System.Data.Objects.ObjectResult`1\"></xref> that contains a collection of entity objects returned by the query."}],"pos":[63591,63718],"yaml":true},{"content":"Groups the query results by the specified criteria.","nodes":[{"pos":[0,51],"content":"Groups the query results by the specified criteria.","nodes":[{"content":"Groups the query results by the specified criteria.","pos":[0,51]}]}],"pos":[65001,65053],"yaml":true},{"content":"<xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> applies the projection specified by the `projection` parameter. This means that the <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> method is always of type <xref:System.Data.Common.DbDataRecord>. For more information, see [Object Queries](http://msdn.microsoft.com/en-us/0768033c-876f-471d-85d5-264884349276).","nodes":[{"pos":[0,429],"content":"<xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> applies the projection specified by the `projection` parameter. This means that the <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> method is always of type <xref:System.Data.Common.DbDataRecord>. For more information, see [Object Queries](http://msdn.microsoft.com/en-us/0768033c-876f-471d-85d5-264884349276).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A&gt;</ph> applies the projection specified by the <ph id=\"ph2\">`projection`</ph> parameter.","pos":[0,117],"source":"<xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> applies the projection specified by the `projection` parameter."},{"content":"This means that the <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> returned by the <ph id=\"ph2\">&lt;xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A&gt;</ph> method is always of type <ph id=\"ph3\">&lt;xref:System.Data.Common.DbDataRecord&gt;</ph>.","pos":[118,315],"source":" This means that the <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> method is always of type <xref:System.Data.Common.DbDataRecord>."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Object Queries<ept id=\"p1\">](http://msdn.microsoft.com/en-us/0768033c-876f-471d-85d5-264884349276)</ept>.","pos":[316,429],"source":" For more information, see [Object Queries](http://msdn.microsoft.com/en-us/0768033c-876f-471d-85d5-264884349276)."}]}],"pos":[65064,65494],"yaml":true,"extradata":"MT"},{"content":"The key columns by which to group the results.","nodes":[{"pos":[0,46],"content":"The key columns by which to group the results.","nodes":[{"content":"The key columns by which to group the results.","pos":[0,46]}]}],"pos":[66926,66973],"yaml":true},{"content":"The list of selected properties that defines the projection.","nodes":[{"pos":[0,60],"content":"The list of selected properties that defines the projection.","nodes":[{"content":"The list of selected properties that defines the projection.","pos":[0,60]}]}],"pos":[67039,67100],"yaml":true},{"content":"Zero or more parameters that are used in this method.","nodes":[{"pos":[0,53],"content":"Zero or more parameters that are used in this method.","nodes":[{"content":"Zero or more parameters that are used in this method.","pos":[0,53]}]}],"pos":[67190,67244],"yaml":true},{"content":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance of type <xref href=\"System.Data.Common.DbDataRecord\"></xref> that is equivalent to the original instance with [GROUP BY](~/docs/framework/data/adonet/ef/language-reference/group-by-entity-sql.md) applied.","nodes":[{"pos":[0,274],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectQuery`1\"&gt;&lt;/xref&gt;</ph> instance of type <ph id=\"ph2\">&lt;xref href=\"System.Data.Common.DbDataRecord\"&gt;&lt;/xref&gt;</ph> that is equivalent to the original instance with <bpt id=\"p1\">[</bpt>GROUP BY<ept id=\"p1\">](~/docs/framework/data/adonet/ef/language-reference/group-by-entity-sql.md)</ept> applied.","source":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance of type <xref href=\"System.Data.Common.DbDataRecord\"></xref> that is equivalent to the original instance with [GROUP BY](~/docs/framework/data/adonet/ef/language-reference/group-by-entity-sql.md) applied."}],"pos":[67352,67627],"yaml":true},{"content":"The <code>query</code> parameter is `null` or an empty string.  \n  \n -or-  \n  \n The <code>projection</code> parameter is `null` or an empty string.","nodes":[{"pos":[0,62],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">query</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph> or an empty string.","source":"The <code>query</code> parameter is `null` or an empty string."},{"pos":[69,73],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[80,147],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">projection</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph> or an empty string.","source":"The <code>projection</code> parameter is `null` or an empty string."}],"pos":[67798,67952],"yaml":true},{"content":"Specifies the related objects to include in the query results.","nodes":[{"pos":[0,62],"content":"Specifies the related objects to include in the query results.","nodes":[{"content":"Specifies the related objects to include in the query results.","pos":[0,62]}]}],"pos":[68926,68989],"yaml":true},{"content":"Query paths can be used with Entity SQL and LINQ queries.  \n  \n Paths are all-inclusive. For example, if an include call indicates `Include(\"Orders.OrderLines\")`, not only will `OrderLines` be included, but also `Orders`. For more information, see [Loading Related Objects](http://msdn.microsoft.com/en-us/452347d2-7b3b-44cd-9001-231299a28cb1).  \n  \n When you call the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method, the query path is only valid on the returned instance of the <xref:System.Data.Objects.ObjectQuery%601>. Other instances of <xref:System.Data.Objects.ObjectQuery%601> and the object context itself are not affected.  \n  \n Because the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method returns the query object, you can call this method multiple times on an <xref:System.Data.Objects.ObjectQuery%601> to specify multiple paths for the query, as in the following example:  \n  \n [!code-csharp[DP ObjectServices Concepts#SpanOnlyWithMultiplePaths](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#spanonlywithmultiplepaths)]\n [!code-vb[DP ObjectServices Concepts#SpanOnlyWithMultiplePaths](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#spanonlywithmultiplepaths)]","nodes":[{"pos":[0,57],"content":"Query paths can be used with Entity SQL and LINQ queries.","nodes":[{"content":"Query paths can be used with Entity SQL and LINQ queries.","pos":[0,57]}]},{"pos":[64,344],"content":"Paths are all-inclusive. For example, if an include call indicates `Include(\"Orders.OrderLines\")`, not only will `OrderLines` be included, but also `Orders`. For more information, see [Loading Related Objects](http://msdn.microsoft.com/en-us/452347d2-7b3b-44cd-9001-231299a28cb1).","nodes":[{"content":"Paths are all-inclusive.","pos":[0,24]},{"content":"For example, if an include call indicates <ph id=\"ph1\">`Include(\"Orders.OrderLines\")`</ph>, not only will <ph id=\"ph2\">`OrderLines`</ph> be included, but also <ph id=\"ph3\">`Orders`</ph>.","pos":[25,157],"source":" For example, if an include call indicates `Include(\"Orders.OrderLines\")`, not only will `OrderLines` be included, but also `Orders`."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Loading Related Objects<ept id=\"p1\">](http://msdn.microsoft.com/en-us/452347d2-7b3b-44cd-9001-231299a28cb1)</ept>.","pos":[158,280],"source":" For more information, see [Loading Related Objects](http://msdn.microsoft.com/en-us/452347d2-7b3b-44cd-9001-231299a28cb1)."}]},{"pos":[351,645],"content":"When you call the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method, the query path is only valid on the returned instance of the <xref:System.Data.Objects.ObjectQuery%601>. Other instances of <xref:System.Data.Objects.ObjectQuery%601> and the object context itself are not affected.","nodes":[{"content":"When you call the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method, the query path is only valid on the returned instance of the <xref:System.Data.Objects.ObjectQuery%601>. Other instances of <xref:System.Data.Objects.ObjectQuery%601> and the object context itself are not affected.","pos":[0,294],"nodes":[{"content":"When you call the <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601.Include%2A&gt;</ph> method, the query path is only valid on the returned instance of the <ph id=\"ph2\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph>.","pos":[0,184],"source":"When you call the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method, the query path is only valid on the returned instance of the <xref:System.Data.Objects.ObjectQuery%601>."},{"content":"Other instances of <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> and the object context itself are not affected.","pos":[185,294],"source":" Other instances of <xref:System.Data.Objects.ObjectQuery%601> and the object context itself are not affected."}]}]},{"pos":[652,909],"content":"Because the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method returns the query object, you can call this method multiple times on an <xref:System.Data.Objects.ObjectQuery%601> to specify multiple paths for the query, as in the following example:","nodes":[{"content":"Because the <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601.Include%2A&gt;</ph> method returns the query object, you can call this method multiple times on an <ph id=\"ph2\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> to specify multiple paths for the query, as in the following example:","pos":[0,257],"source":"Because the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method returns the query object, you can call this method multiple times on an <xref:System.Data.Objects.ObjectQuery%601> to specify multiple paths for the query, as in the following example:"}]},{"pos":[916,1275],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>DP ObjectServices Concepts#SpanOnlyWithMultiplePaths<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#spanonlywithmultiplepaths)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>DP ObjectServices Concepts#SpanOnlyWithMultiplePaths<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#spanonlywithmultiplepaths)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[DP ObjectServices Concepts#SpanOnlyWithMultiplePaths](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#spanonlywithmultiplepaths)]\n [!code-vb[DP ObjectServices Concepts#SpanOnlyWithMultiplePaths](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#spanonlywithmultiplepaths)]"}],"pos":[69000,70289],"yaml":true,"extradata":"MT"},{"content":"Dot-separated list of related objects to return in the query results.","nodes":[{"pos":[0,69],"content":"Dot-separated list of related objects to return in the query results.","nodes":[{"content":"Dot-separated list of related objects to return in the query results.","pos":[0,69]}]}],"pos":[70791,70861],"yaml":true},{"content":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> with the defined query path.","nodes":[{"pos":[0,89],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectQuery`1\"&gt;&lt;/xref&gt;</ph> with the defined query path.","source":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> with the defined query path."}],"pos":[70938,71028],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[71199,71228],"yaml":true},{"content":"<code>path</code> is `empty`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`empty`</ph>.","source":"<code>path</code> is `empty`."}],"pos":[71322,71352],"yaml":true},{"content":"Limits the query results by including only the results that exist in another object query.","nodes":[{"pos":[0,90],"content":"Limits the query results by including only the results that exist in another object query.","nodes":[{"content":"Limits the query results by including only the results that exist in another object query.","pos":[0,90]}]}],"pos":[72428,72519],"yaml":true},{"content":"The supplied `query` that defines results to include must be of the same type or of a type that is compatible with the <xref:System.Data.Objects.ObjectQuery%601>.  \n  \n Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance. Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>. There cannot be two parameters in the combined collection with the same name. For more information, see [Query Builder Methods](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0).  \n  \n The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which the <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> method was called.","nodes":[{"pos":[0,162],"content":"The supplied <ph id=\"ph1\">`query`</ph> that defines results to include must be of the same type or of a type that is compatible with the <ph id=\"ph2\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph>.","source":"The supplied `query` that defines results to include must be of the same type or of a type that is compatible with the <xref:System.Data.Objects.ObjectQuery%601>."},{"pos":[169,619],"content":"Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance. Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>. There cannot be two parameters in the combined collection with the same name. For more information, see [Query Builder Methods](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0).","nodes":[{"content":"Parameters that are defined in the supplied <ph id=\"ph1\">`query`</ph> are merged with parameters that are defined in the <ph id=\"ph2\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> instance.","pos":[0,155],"source":"Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance."},{"content":"Parameters must be unique in the combined <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectParameterCollection&gt;</ph>.","pos":[156,251],"source":" Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>."},{"content":"There cannot be two parameters in the combined collection with the same name.","pos":[252,329]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Query Builder Methods<ept id=\"p1\">](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0)</ept>.","pos":[330,450],"source":" For more information, see [Query Builder Methods](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0)."}]},{"pos":[626,818],"content":"The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which the <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> method was called.","nodes":[{"content":"The resulting query inherits the connection from the <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> instance on which the <ph id=\"ph2\">&lt;xref:System.Data.Objects.ObjectQuery%601.Intersect%2A&gt;</ph> method was called.","pos":[0,192],"source":"The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which the <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> method was called."}]}],"pos":[72530,73355],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> that represents the results to include in the query.","nodes":[{"pos":[0,110],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectQuery`1\"&gt;&lt;/xref&gt;</ph> that represents the results to include in the query.","source":"An <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> that represents the results to include in the query."}],"pos":[74208,74319],"yaml":true},{"content":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with [INTERSECT](~/docs/framework/data/adonet/ef/language-reference/intersect-entity-sql.md) applied based on the specified <code>query</code>.","nodes":[{"pos":[0,257],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectQuery`1\"&gt;&lt;/xref&gt;</ph> instance that is equivalent to the original instance with <bpt id=\"p1\">[</bpt>INTERSECT<ept id=\"p1\">](~/docs/framework/data/adonet/ef/language-reference/intersect-entity-sql.md)</ept> applied based on the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">query</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with [INTERSECT](~/docs/framework/data/adonet/ef/language-reference/intersect-entity-sql.md) applied based on the specified <code>query</code>."}],"pos":[74396,74654],"yaml":true},{"content":"The <code>query</code> parameter is `null` or is an empty string.","nodes":[{"pos":[0,65],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">query</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph> or is an empty string.","source":"The <code>query</code> parameter is `null` or is an empty string."}],"pos":[74827,74893],"yaml":true},{"content":"Gets or sets the name of this object query.","nodes":[{"pos":[0,43],"content":"Gets or sets the name of this object query.","nodes":[{"content":"Gets or sets the name of this object query.","pos":[0,43]}]}],"pos":[75782,75826],"yaml":true},{"content":"The name of the object query identifies the current object query in the sequence by name when constructing query builder methods. By default, the query name is `it`. This can be useful when referring to the current sequence in joins inside the <xref:System.Data.Objects.Query%601.Where%2A> method or in the <xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A> method. For more information, see [Query Builder Methods](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0).  \n  \n When you set the <xref:System.Data.Objects.ObjectQuery%601.Name%2A> property of an <xref:System.Data.Objects.ObjectQuery%601>, that value becomes the alias in successive methods.  \n  \n The value of the <xref:System.Data.Objects.ObjectQuery%601.Name%2A> property must start with a letter and can contain letters, digits, and underscores.","nodes":[{"pos":[0,493],"content":"The name of the object query identifies the current object query in the sequence by name when constructing query builder methods. By default, the query name is `it`. This can be useful when referring to the current sequence in joins inside the <xref:System.Data.Objects.Query%601.Where%2A> method or in the <xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A> method. For more information, see [Query Builder Methods](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0).","nodes":[{"content":"The name of the object query identifies the current object query in the sequence by name when constructing query builder methods.","pos":[0,129]},{"content":"By default, the query name is <ph id=\"ph1\">`it`</ph>.","pos":[130,165],"source":" By default, the query name is `it`."},{"content":"This can be useful when referring to the current sequence in joins inside the <ph id=\"ph1\">&lt;xref:System.Data.Objects.Query%601.Where%2A&gt;</ph> method or in the <ph id=\"ph2\">&lt;xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A&gt;</ph> method.","pos":[166,372],"source":" This can be useful when referring to the current sequence in joins inside the <xref:System.Data.Objects.Query%601.Where%2A> method or in the <xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A> method."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Query Builder Methods<ept id=\"p1\">](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0)</ept>.","pos":[373,493],"source":" For more information, see [Query Builder Methods](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0)."}]},{"pos":[500,678],"content":"When you set the <xref:System.Data.Objects.ObjectQuery%601.Name%2A> property of an <xref:System.Data.Objects.ObjectQuery%601>, that value becomes the alias in successive methods.","nodes":[{"content":"When you set the <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601.Name%2A&gt;</ph> property of an <ph id=\"ph2\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph>, that value becomes the alias in successive methods.","pos":[0,178],"source":"When you set the <xref:System.Data.Objects.ObjectQuery%601.Name%2A> property of an <xref:System.Data.Objects.ObjectQuery%601>, that value becomes the alias in successive methods."}]},{"pos":[685,836],"content":"The value of the <xref:System.Data.Objects.ObjectQuery%601.Name%2A> property must start with a letter and can contain letters, digits, and underscores.","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601.Name%2A&gt;</ph> property must start with a letter and can contain letters, digits, and underscores.","pos":[0,151],"source":"The value of the <xref:System.Data.Objects.ObjectQuery%601.Name%2A> property must start with a letter and can contain letters, digits, and underscores."}]}],"pos":[75837,76680],"yaml":true,"extradata":"MT"},{"content":"A `string` value that is the name of this <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref>.","nodes":[{"pos":[0,97],"content":"A <ph id=\"ph1\">`string`</ph> value that is the name of this <ph id=\"ph2\">&lt;xref href=\"System.Data.Objects.ObjectQuery`1\"&gt;&lt;/xref&gt;</ph>.","source":"A `string` value that is the name of this <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref>."}],"pos":[77500,77598],"yaml":true},{"content":"The value specified on set is not valid.","nodes":[{"pos":[0,40],"content":"The value specified on set is not valid.","nodes":[{"content":"The value specified on set is not valid.","pos":[0,40]}]}],"pos":[77758,77799],"yaml":true},{"content":"Limits the query to only results of a specific type.","nodes":[{"pos":[0,52],"content":"Limits the query to only results of a specific type.","nodes":[{"content":"Limits the query to only results of a specific type.","pos":[0,52]}]}],"pos":[78752,78805],"yaml":true},{"content":"<xref:System.Data.Objects.ObjectQuery%601.OfType%2A> is used to filter query results by a specific entity or complex type. This supports a conceptual model with object inheritance. For more information, see [Entity Data Model Inheritance (Application Scenarios)](http://msdn.microsoft.com/en-us/5de40bf8-527f-4f2e-96e3-61164f429caa). The  \n  \n <xref:System.Data.Objects.ObjectQuery%601.OfType%2A> method can only be applied to an <xref:System.Data.Objects.ObjectQuery%601> of an entity type or complex type that is defined in the EDM.","nodes":[{"pos":[0,337],"content":"<xref:System.Data.Objects.ObjectQuery%601.OfType%2A> is used to filter query results by a specific entity or complex type. This supports a conceptual model with object inheritance. For more information, see [Entity Data Model Inheritance (Application Scenarios)](http://msdn.microsoft.com/en-us/5de40bf8-527f-4f2e-96e3-61164f429caa). The","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601.OfType%2A&gt;</ph> is used to filter query results by a specific entity or complex type.","pos":[0,122],"source":"<xref:System.Data.Objects.ObjectQuery%601.OfType%2A> is used to filter query results by a specific entity or complex type."},{"content":"This supports a conceptual model with object inheritance.","pos":[123,180]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Entity Data Model Inheritance (Application Scenarios)<ept id=\"p1\">](http://msdn.microsoft.com/en-us/5de40bf8-527f-4f2e-96e3-61164f429caa)</ept>.","pos":[181,333],"source":" For more information, see [Entity Data Model Inheritance (Application Scenarios)](http://msdn.microsoft.com/en-us/5de40bf8-527f-4f2e-96e3-61164f429caa)."},{"content":"The","pos":[334,337]}]},{"pos":[344,534],"content":"<xref:System.Data.Objects.ObjectQuery%601.OfType%2A> method can only be applied to an <xref:System.Data.Objects.ObjectQuery%601> of an entity type or complex type that is defined in the EDM.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601.OfType%2A&gt;</ph> method can only be applied to an <ph id=\"ph2\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> of an entity type or complex type that is defined in the EDM.","pos":[0,190],"source":"<xref:System.Data.Objects.ObjectQuery%601.OfType%2A> method can only be applied to an <xref:System.Data.Objects.ObjectQuery%601> of an entity type or complex type that is defined in the EDM."}]}],"pos":[78816,79355],"yaml":true,"extradata":"MT"},{"content":"The type of the <xref href=\"System.Data.Objects.ObjectResult`1\"></xref> returned when the query is executed with the applied filter.","nodes":[{"pos":[0,132],"content":"The type of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectResult`1\"&gt;&lt;/xref&gt;</ph> returned when the query is executed with the applied filter.","source":"The type of the <xref href=\"System.Data.Objects.ObjectResult`1\"></xref> returned when the query is executed with the applied filter."}],"pos":[79534,79667],"yaml":true},{"content":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with [OFTYPE](~/docs/framework/data/adonet/ef/language-reference/oftype-entity-sql.md) applied.","nodes":[{"pos":[0,209],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectQuery`1\"&gt;&lt;/xref&gt;</ph> instance that is equivalent to the original instance with <bpt id=\"p1\">[</bpt>OFTYPE<ept id=\"p1\">](~/docs/framework/data/adonet/ef/language-reference/oftype-entity-sql.md)</ept> applied.","source":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with [OFTYPE](~/docs/framework/data/adonet/ef/language-reference/oftype-entity-sql.md) applied."}],"pos":[79755,79965],"yaml":true},{"content":"The type specified is not valid.","nodes":[{"pos":[0,32],"content":"The type specified is not valid.","nodes":[{"content":"The type specified is not valid.","pos":[0,32]}]}],"pos":[80142,80175],"yaml":true},{"content":"Orders the query results by the specified criteria.","nodes":[{"pos":[0,51],"content":"Orders the query results by the specified criteria.","nodes":[{"content":"Orders the query results by the specified criteria.","pos":[0,51]}]}],"pos":[81320,81372],"yaml":true},{"content":"The ordering of results in a nested query cannot be guaranteed.  \n  \n <xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> should always be the final query builder method in the sequence.","nodes":[{"pos":[0,63],"content":"The ordering of results in a nested query cannot be guaranteed.","nodes":[{"content":"The ordering of results in a nested query cannot be guaranteed.","pos":[0,63]}]},{"pos":[70,188],"content":"<xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> should always be the final query builder method in the sequence.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A&gt;</ph> should always be the final query builder method in the sequence.","pos":[0,118],"source":"<xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> should always be the final query builder method in the sequence."}]}],"pos":[81383,81576],"yaml":true,"extradata":"MT"},{"content":"The key columns by which to order the results.","nodes":[{"pos":[0,46],"content":"The key columns by which to order the results.","nodes":[{"content":"The key columns by which to order the results.","pos":[0,46]}]}],"pos":[82427,82474],"yaml":true},{"content":"Zero or more parameters that are used in this method.","nodes":[{"pos":[0,53],"content":"Zero or more parameters that are used in this method.","nodes":[{"content":"Zero or more parameters that are used in this method.","pos":[0,53]}]}],"pos":[82564,82618],"yaml":true},{"content":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with [ORDER BY](~/docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md) applied.","nodes":[{"pos":[0,213],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectQuery`1\"&gt;&lt;/xref&gt;</ph> instance that is equivalent to the original instance with <bpt id=\"p1\">[</bpt>ORDER BY<ept id=\"p1\">](~/docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md)</ept> applied.","source":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with [ORDER BY](~/docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md) applied."}],"pos":[82695,82909],"yaml":true},{"content":"The <code>keys</code> or <code>parameters</code> parameter is `null`.","nodes":[{"pos":[0,69],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keys</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">parameters</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is <ph id=\"ph3\">`null`</ph>.","source":"The <code>keys</code> or <code>parameters</code> parameter is `null`."}],"pos":[83080,83150],"yaml":true},{"content":"The <code>key</code> is an empty string.","nodes":[{"pos":[0,40],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> is an empty string.","source":"The <code>key</code> is an empty string."}],"pos":[83244,83285],"yaml":true},{"content":"Limits the query results to only the properties that are defined in the specified projection.","nodes":[{"pos":[0,93],"content":"Limits the query results to only the properties that are defined in the specified projection.","nodes":[{"content":"Limits the query results to only the properties that are defined in the specified projection.","pos":[0,93]}]}],"pos":[84424,84518],"yaml":true},{"content":"<xref:System.Data.Objects.ObjectQuery%601.Select%2A> applies the projection specified by the `projection` parameter. The <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery%601.Select%2A> method is always a row type of <xref:System.Data.Common.DbDataRecord>. Use the <xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A> method to return values that are simple types, entity types, or complex types. For more information, see [Object Queries](http://msdn.microsoft.com/en-us/0768033c-876f-471d-85d5-264884349276).  \n  \n When a navigation property is included in the projection, the query results include a collection of nested <xref:System.Data.Common.DbDataRecord> objects. For more information, see [How to: Navigate Relationships Using Navigation Properties](http://msdn.microsoft.com/en-us/b1d71c7d-16a7-4b46-96ac-690176bd5057).","nodes":[{"pos":[0,562],"content":"<xref:System.Data.Objects.ObjectQuery%601.Select%2A> applies the projection specified by the `projection` parameter. The <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery%601.Select%2A> method is always a row type of <xref:System.Data.Common.DbDataRecord>. Use the <xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A> method to return values that are simple types, entity types, or complex types. For more information, see [Object Queries](http://msdn.microsoft.com/en-us/0768033c-876f-471d-85d5-264884349276).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601.Select%2A&gt;</ph> applies the projection specified by the <ph id=\"ph2\">`projection`</ph> parameter.","pos":[0,116],"source":"<xref:System.Data.Objects.ObjectQuery%601.Select%2A> applies the projection specified by the `projection` parameter."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> returned by the <ph id=\"ph2\">&lt;xref:System.Data.Objects.ObjectQuery%601.Select%2A&gt;</ph> method is always a row type of <ph id=\"ph3\">&lt;xref:System.Data.Common.DbDataRecord&gt;</ph>.","pos":[117,303],"source":" The <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery%601.Select%2A> method is always a row type of <xref:System.Data.Common.DbDataRecord>."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A&gt;</ph> method to return values that are simple types, entity types, or complex types.","pos":[304,448],"source":" Use the <xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A> method to return values that are simple types, entity types, or complex types."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Object Queries<ept id=\"p1\">](http://msdn.microsoft.com/en-us/0768033c-876f-471d-85d5-264884349276)</ept>.","pos":[449,562],"source":" For more information, see [Object Queries](http://msdn.microsoft.com/en-us/0768033c-876f-471d-85d5-264884349276)."}]},{"pos":[569,881],"content":"When a navigation property is included in the projection, the query results include a collection of nested <xref:System.Data.Common.DbDataRecord> objects. For more information, see [How to: Navigate Relationships Using Navigation Properties](http://msdn.microsoft.com/en-us/b1d71c7d-16a7-4b46-96ac-690176bd5057).","nodes":[{"content":"When a navigation property is included in the projection, the query results include a collection of nested <ph id=\"ph1\">&lt;xref:System.Data.Common.DbDataRecord&gt;</ph> objects.","pos":[0,154],"source":"When a navigation property is included in the projection, the query results include a collection of nested <xref:System.Data.Common.DbDataRecord> objects."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Navigate Relationships Using Navigation Properties<ept id=\"p1\">](http://msdn.microsoft.com/en-us/b1d71c7d-16a7-4b46-96ac-690176bd5057)</ept>.","pos":[155,312],"source":" For more information, see [How to: Navigate Relationships Using Navigation Properties](http://msdn.microsoft.com/en-us/b1d71c7d-16a7-4b46-96ac-690176bd5057)."}]}],"pos":[84529,85415],"yaml":true,"extradata":"MT"},{"content":"The list of selected properties that defines the projection.","nodes":[{"pos":[0,60],"content":"The list of selected properties that defines the projection.","nodes":[{"content":"The list of selected properties that defines the projection.","pos":[0,60]}]}],"pos":[86323,86384],"yaml":true},{"content":"Zero or more parameters that are used in this method.","nodes":[{"pos":[0,53],"content":"Zero or more parameters that are used in this method.","nodes":[{"content":"Zero or more parameters that are used in this method.","pos":[0,53]}]}],"pos":[86474,86528],"yaml":true},{"content":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance of type <xref href=\"System.Data.Common.DbDataRecord\"></xref> that is equivalent to the original instance with [SELECT](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) applied.","nodes":[{"pos":[0,270],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectQuery`1\"&gt;&lt;/xref&gt;</ph> instance of type <ph id=\"ph2\">&lt;xref href=\"System.Data.Common.DbDataRecord\"&gt;&lt;/xref&gt;</ph> that is equivalent to the original instance with <bpt id=\"p1\">[</bpt>SELECT<ept id=\"p1\">](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md)</ept> applied.","source":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance of type <xref href=\"System.Data.Common.DbDataRecord\"></xref> that is equivalent to the original instance with [SELECT](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) applied."}],"pos":[86636,86907],"yaml":true},{"content":"<code>projection</code> is `null`.  \n  \n -or-  \n  \n <code>parameters</code> is `null`.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;projection&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>projection</code> is `null`."},{"pos":[41,45],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[52,86],"content":"<ph id=\"ph1\">&lt;code&gt;parameters&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>parameters</code> is `null`."}],"pos":[87077,87170],"yaml":true},{"content":"The <code>projection</code> is an empty string.","nodes":[{"pos":[0,47],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">projection</ph><ept id=\"p1\">&lt;/code&gt;</ept> is an empty string.","source":"The <code>projection</code> is an empty string."}],"pos":[87264,87312],"yaml":true},{"content":"Limits the query results to only the property specified in the projection.","nodes":[{"pos":[0,74],"content":"Limits the query results to only the property specified in the projection.","nodes":[{"content":"Limits the query results to only the property specified in the projection.","pos":[0,74]}]}],"pos":[88529,88604],"yaml":true},{"content":"<xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A> is used to return values that are simple types, entity types, or complex types. Use the <xref:System.Data.Objects.ObjectQuery%601.Select%2A> method for projections that require a row type instead of a value type. For more information, see [Object Queries](http://msdn.microsoft.com/en-us/0768033c-876f-471d-85d5-264884349276).  \n  \n The <xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A> method applies the projection specified by the `projection` parameter. The <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A> method must be of a value type that is compatible with the projection and must be the same type as the type of <xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A>.","nodes":[{"pos":[0,384],"content":"<xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A> is used to return values that are simple types, entity types, or complex types. Use the <xref:System.Data.Objects.ObjectQuery%601.Select%2A> method for projections that require a row type instead of a value type. For more information, see [Object Queries](http://msdn.microsoft.com/en-us/0768033c-876f-471d-85d5-264884349276).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A&gt;</ph> is used to return values that are simple types, entity types, or complex types.","pos":[0,137],"source":"<xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A> is used to return values that are simple types, entity types, or complex types."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601.Select%2A&gt;</ph> method for projections that require a row type instead of a value type.","pos":[138,270],"source":" Use the <xref:System.Data.Objects.ObjectQuery%601.Select%2A> method for projections that require a row type instead of a value type."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Object Queries<ept id=\"p1\">](http://msdn.microsoft.com/en-us/0768033c-876f-471d-85d5-264884349276)</ept>.","pos":[271,384],"source":" For more information, see [Object Queries](http://msdn.microsoft.com/en-us/0768033c-876f-471d-85d5-264884349276)."}]},{"pos":[391,814],"content":"The <xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A> method applies the projection specified by the `projection` parameter. The <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A> method must be of a value type that is compatible with the projection and must be the same type as the type of <xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A&gt;</ph> method applies the projection specified by the <ph id=\"ph2\">`projection`</ph> parameter.","pos":[0,132],"source":"The <xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A> method applies the projection specified by the `projection` parameter."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> returned by the <ph id=\"ph2\">&lt;xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A&gt;</ph> method must be of a value type that is compatible with the projection and must be the same type as the type of <ph id=\"ph3\">&lt;xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A&gt;</ph>.","pos":[133,423],"source":" The <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A> method must be of a value type that is compatible with the projection and must be the same type as the type of <xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A>."}]}],"pos":[88615,89434],"yaml":true,"extradata":"MT"},{"content":"The projection list.","nodes":[{"pos":[0,20],"content":"The projection list.","nodes":[{"content":"The projection list.","pos":[0,20]}]}],"pos":[90377,90398],"yaml":true},{"content":"An optional set of query parameters that should be in scope when parsing.","nodes":[{"pos":[0,73],"content":"An optional set of query parameters that should be in scope when parsing.","nodes":[{"content":"An optional set of query parameters that should be in scope when parsing.","pos":[0,73]}]}],"pos":[90488,90562],"yaml":true},{"content":"The type of the <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> returned by the <xref href=\"System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])\"></xref> method.","nodes":[{"pos":[0,217],"content":"The type of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectQuery`1\"&gt;&lt;/xref&gt;</ph> returned by the <ph id=\"ph2\">&lt;xref href=\"System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])\"&gt;&lt;/xref&gt;</ph> method.","source":"The type of the <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> returned by the <xref href=\"System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])\"></xref> method."}],"pos":[90623,90841],"yaml":true},{"content":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance of a type compatible with the specific projection. The returned <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> is equivalent to the original instance with [SELECT VALUE](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) applied.","nodes":[{"pos":[0,329],"content":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance of a type compatible with the specific projection. The returned <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> is equivalent to the original instance with [SELECT VALUE](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) applied.","nodes":[{"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectQuery`1\"&gt;&lt;/xref&gt;</ph> instance of a type compatible with the specific projection.","pos":[0,120],"source":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance of a type compatible with the specific projection."},{"content":"The returned <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectQuery`1\"&gt;&lt;/xref&gt;</ph> is equivalent to the original instance with <bpt id=\"p1\">[</bpt>SELECT VALUE<ept id=\"p1\">](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md)</ept> applied.","pos":[121,329],"source":" The returned <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> is equivalent to the original instance with [SELECT VALUE](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) applied."}]}],"pos":[90929,91259],"yaml":true},{"content":"<code>projection</code> is `null`.  \n  \n -or-  \n  \n <code>parameters</code> is `null`.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;projection&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>projection</code> is `null`."},{"pos":[41,45],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[52,86],"content":"<ph id=\"ph1\">&lt;code&gt;parameters&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>parameters</code> is `null`."}],"pos":[91437,91530],"yaml":true},{"content":"The <code>projection</code> is an empty string.","nodes":[{"pos":[0,47],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">projection</ph><ept id=\"p1\">&lt;/code&gt;</ept> is an empty string.","source":"The <code>projection</code> is an empty string."}],"pos":[91624,91672],"yaml":true},{"content":"Orders the query results by the specified criteria and skips a specified number of results.","nodes":[{"pos":[0,91],"content":"Orders the query results by the specified criteria and skips a specified number of results.","nodes":[{"content":"Orders the query results by the specified criteria and skips a specified number of results.","pos":[0,91]}]}],"pos":[92865,92957],"yaml":true},{"content":"The <xref:System.Data.Objects.ObjectQuery%601.Skip%2A> method cannot be used after the <xref:System.Data.Objects.ObjectQuery%601.Top%2A> method. When you use <xref:System.Data.Objects.ObjectQuery%601.Top%2A> after <xref:System.Data.Objects.ObjectQuery%601.Skip%2A>, it functions like the [LIMIT](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md) statement of an  clause.","nodes":[{"pos":[0,392],"content":"The <xref:System.Data.Objects.ObjectQuery%601.Skip%2A> method cannot be used after the <xref:System.Data.Objects.ObjectQuery%601.Top%2A> method. When you use <xref:System.Data.Objects.ObjectQuery%601.Top%2A> after <xref:System.Data.Objects.ObjectQuery%601.Skip%2A>, it functions like the [LIMIT](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md) statement of an  clause.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601.Skip%2A&gt;</ph> method cannot be used after the <ph id=\"ph2\">&lt;xref:System.Data.Objects.ObjectQuery%601.Top%2A&gt;</ph> method.","pos":[0,144],"source":"The <xref:System.Data.Objects.ObjectQuery%601.Skip%2A> method cannot be used after the <xref:System.Data.Objects.ObjectQuery%601.Top%2A> method."},{"content":"When you use <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601.Top%2A&gt;</ph> after <ph id=\"ph2\">&lt;xref:System.Data.Objects.ObjectQuery%601.Skip%2A&gt;</ph>, it functions like the <bpt id=\"p1\">[</bpt>LIMIT<ept id=\"p1\">](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md)</ept> statement of an  clause.","pos":[145,392],"source":" When you use <xref:System.Data.Objects.ObjectQuery%601.Top%2A> after <xref:System.Data.Objects.ObjectQuery%601.Skip%2A>, it functions like the [LIMIT](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md) statement of an  clause."}]}],"pos":[92968,93361],"yaml":true,"extradata":"MT"},{"content":"The key columns by which to order the results.","nodes":[{"pos":[0,46],"content":"The key columns by which to order the results.","nodes":[{"content":"The key columns by which to order the results.","pos":[0,46]}]}],"pos":[94076,94123],"yaml":true},{"content":"The number of results to skip. This must be either a constant or a parameter reference.","nodes":[{"pos":[0,87],"content":"The number of results to skip. This must be either a constant or a parameter reference.","nodes":[{"content":"The number of results to skip. This must be either a constant or a parameter reference.","pos":[0,87],"nodes":[{"content":"The number of results to skip.","pos":[0,30]},{"content":"This must be either a constant or a parameter reference.","pos":[31,87]}]}]}],"pos":[94184,94272],"yaml":true},{"content":"An optional set of query parameters that should be in scope when parsing.","nodes":[{"pos":[0,73],"content":"An optional set of query parameters that should be in scope when parsing.","nodes":[{"content":"An optional set of query parameters that should be in scope when parsing.","pos":[0,73]}]}],"pos":[94362,94436],"yaml":true},{"content":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with both [ORDER BY](~/docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md) and [SKIP](~/docs/framework/data/adonet/ef/language-reference/skip-entity-sql.md) applied.","nodes":[{"pos":[0,300],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectQuery`1\"&gt;&lt;/xref&gt;</ph> instance that is equivalent to the original instance with both <bpt id=\"p1\">[</bpt>ORDER BY<ept id=\"p1\">](~/docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md)</ept> and <bpt id=\"p2\">[</bpt>SKIP<ept id=\"p2\">](~/docs/framework/data/adonet/ef/language-reference/skip-entity-sql.md)</ept> applied.","source":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with both [ORDER BY](~/docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md) and [SKIP](~/docs/framework/data/adonet/ef/language-reference/skip-entity-sql.md) applied."}],"pos":[94513,94814],"yaml":true},{"content":"Any argument is `null`.","nodes":[{"pos":[0,23],"content":"Any argument is <ph id=\"ph1\">`null`</ph>.","source":"Any argument is `null`."}],"pos":[94982,95006],"yaml":true},{"content":"<code>keys</code> is an empty string.  \n  \n -or-  \n  \n <code>count</code> is an empty string.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;keys&lt;/code&gt;</ph> is an empty string.","source":"<code>keys</code> is an empty string."},{"pos":[44,48],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[55,93],"content":"<ph id=\"ph1\">&lt;code&gt;count&lt;/code&gt;</ph> is an empty string.","source":"<code>count</code> is an empty string."}],"pos":[95100,95200],"yaml":true},{"content":"Limits the query results to a specified number of items.","nodes":[{"pos":[0,56],"content":"Limits the query results to a specified number of items.","nodes":[{"content":"Limits the query results to a specified number of items.","pos":[0,56]}]}],"pos":[96321,96378],"yaml":true},{"content":"<xref:System.Data.Objects.ObjectQuery%601.Top%2A> is nondeterministic unless the query is sorted.  \n  \n When you use the <xref:System.Data.Objects.ObjectQuery%601.Top%2A> method after the <xref:System.Data.Objects.ObjectQuery%601.Skip%2A> method, it functions like the [LIMIT](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md) statement of an [ORDER BY](~/docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md) clause.","nodes":[{"pos":[0,97],"content":"<xref:System.Data.Objects.ObjectQuery%601.Top%2A> is nondeterministic unless the query is sorted.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601.Top%2A&gt;</ph> is nondeterministic unless the query is sorted.","pos":[0,97],"source":"<xref:System.Data.Objects.ObjectQuery%601.Top%2A> is nondeterministic unless the query is sorted."}]},{"pos":[104,458],"content":"When you use the <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601.Top%2A&gt;</ph> method after the <ph id=\"ph2\">&lt;xref:System.Data.Objects.ObjectQuery%601.Skip%2A&gt;</ph> method, it functions like the <bpt id=\"p1\">[</bpt>LIMIT<ept id=\"p1\">](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md)</ept> statement of an <bpt id=\"p2\">[</bpt>ORDER BY<ept id=\"p2\">](~/docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md)</ept> clause.","source":"When you use the <xref:System.Data.Objects.ObjectQuery%601.Top%2A> method after the <xref:System.Data.Objects.ObjectQuery%601.Skip%2A> method, it functions like the [LIMIT](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md) statement of an [ORDER BY](~/docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md) clause."}],"pos":[96389,96852],"yaml":true,"extradata":"MT"},{"content":"The number of items in the results as a string.","nodes":[{"pos":[0,47],"content":"The number of items in the results as a string.","nodes":[{"content":"The number of items in the results as a string.","pos":[0,47]}]}],"pos":[98321,98369],"yaml":true},{"content":"An optional set of query parameters that should be in scope when parsing.","nodes":[{"pos":[0,73],"content":"An optional set of query parameters that should be in scope when parsing.","nodes":[{"content":"An optional set of query parameters that should be in scope when parsing.","pos":[0,73]}]}],"pos":[98459,98533],"yaml":true},{"content":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with [TOP](~/docs/framework/data/adonet/ef/language-reference/top-entity-sql.md) applied.","nodes":[{"pos":[0,203],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectQuery`1\"&gt;&lt;/xref&gt;</ph> instance that is equivalent to the original instance with <bpt id=\"p1\">[</bpt>TOP<ept id=\"p1\">](~/docs/framework/data/adonet/ef/language-reference/top-entity-sql.md)</ept> applied.","source":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with [TOP](~/docs/framework/data/adonet/ef/language-reference/top-entity-sql.md) applied."}],"pos":[98610,98814],"yaml":true},{"content":"<code>count</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;count&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>count</code> is `null`."}],"pos":[98981,99011],"yaml":true},{"content":"<code>count</code> is an empty string.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;count&lt;/code&gt;</ph> is an empty string.","source":"<code>count</code> is an empty string."}],"pos":[99105,99144],"yaml":true},{"content":"Combines the results of the query with the results of another object query, without any duplicates.","nodes":[{"pos":[0,99],"content":"Combines the results of the query with the results of another object query, without any duplicates.","nodes":[{"content":"Combines the results of the query with the results of another object query, without any duplicates.","pos":[0,99]}]}],"pos":[100196,100296],"yaml":true},{"content":"<xref:System.Data.Objects.ObjectQuery%601.Union%2A> adds the results of the supplied `query` without any duplicates.  \n  \n The supplied `query` that defines the results to add must be of the same type or of a type that can be promoted to the type of this <xref:System.Data.Objects.ObjectQuery%601>. For example, the following is valid because `DiscontinuedProducts` can be promoted to `Products`:  \n  \n```  \nObjectQuery<Product>.Union(ObjectQuery<DiscontinuedProduct>)  \n```  \n  \n The following will throw an exception because `Products` cannot be promoted to `DiscontinuedProducts`.  \n  \n```  \nObjectQuery <DiscontinuedProduct>.Union(ObjectQuery<Product>)   \n```  \n  \n For an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord>, the records in both queries must have the same number of columns, and the types in the columns of the <xref:System.Data.Common.DbDataRecord> of the passed `query` must be promotable to the types of the columns in the <xref:System.Data.Common.DbDataRecord> of the <xref:System.Data.Objects.ObjectQuery%601>.  \n  \n Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance. Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>. There cannot be two parameters in the combined collection with the same name. For more information, see [Query Builder Methods](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0).  \n  \n The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.Union%2A> was called.","nodes":[{"pos":[0,116],"content":"<ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601.Union%2A&gt;</ph> adds the results of the supplied <ph id=\"ph2\">`query`</ph> without any duplicates.","source":"<xref:System.Data.Objects.ObjectQuery%601.Union%2A> adds the results of the supplied `query` without any duplicates."},{"pos":[123,396],"content":"The supplied `query` that defines the results to add must be of the same type or of a type that can be promoted to the type of this <xref:System.Data.Objects.ObjectQuery%601>. For example, the following is valid because `DiscontinuedProducts` can be promoted to `Products`:","nodes":[{"content":"The supplied <ph id=\"ph1\">`query`</ph> that defines the results to add must be of the same type or of a type that can be promoted to the type of this <ph id=\"ph2\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph>.","pos":[0,175],"source":"The supplied `query` that defines the results to add must be of the same type or of a type that can be promoted to the type of this <xref:System.Data.Objects.ObjectQuery%601>."},{"content":"For example, the following is valid because <ph id=\"ph1\">`DiscontinuedProducts`</ph> can be promoted to <ph id=\"ph2\">`Products`</ph>:","pos":[176,273],"source":" For example, the following is valid because `DiscontinuedProducts` can be promoted to `Products`:"}]},{"pos":[481,583],"content":"The following will throw an exception because <ph id=\"ph1\">`Products`</ph> cannot be promoted to <ph id=\"ph2\">`DiscontinuedProducts`</ph>.","source":"The following will throw an exception because `Products` cannot be promoted to `DiscontinuedProducts`."},{"pos":[670,1074],"content":"For an <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> of type <ph id=\"ph2\">&lt;xref:System.Data.Common.DbDataRecord&gt;</ph>, the records in both queries must have the same number of columns, and the types in the columns of the <ph id=\"ph3\">&lt;xref:System.Data.Common.DbDataRecord&gt;</ph> of the passed <ph id=\"ph4\">`query`</ph> must be promotable to the types of the columns in the <ph id=\"ph5\">&lt;xref:System.Data.Common.DbDataRecord&gt;</ph> of the <ph id=\"ph6\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph>.","source":"For an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord>, the records in both queries must have the same number of columns, and the types in the columns of the <xref:System.Data.Common.DbDataRecord> of the passed `query` must be promotable to the types of the columns in the <xref:System.Data.Common.DbDataRecord> of the <xref:System.Data.Objects.ObjectQuery%601>."},{"pos":[1081,1531],"content":"Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance. Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>. There cannot be two parameters in the combined collection with the same name. For more information, see [Query Builder Methods](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0).","nodes":[{"content":"Parameters that are defined in the supplied <ph id=\"ph1\">`query`</ph> are merged with parameters that are defined in the <ph id=\"ph2\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> instance.","pos":[0,155],"source":"Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance."},{"content":"Parameters must be unique in the combined <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectParameterCollection&gt;</ph>.","pos":[156,251],"source":" Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>."},{"content":"There cannot be two parameters in the combined collection with the same name.","pos":[252,329]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Query Builder Methods<ept id=\"p1\">](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0)</ept>.","pos":[330,450],"source":" For more information, see [Query Builder Methods](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0)."}]},{"pos":[1538,1715],"content":"The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.Union%2A> was called.","nodes":[{"content":"The resulting query inherits the connection from the <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> instance on which <ph id=\"ph2\">&lt;xref:System.Data.Objects.ObjectQuery%601.Union%2A&gt;</ph> was called.","pos":[0,177],"source":"The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.Union%2A> was called."}]}],"pos":[100307,102043],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> that represents the results to add.","nodes":[{"pos":[0,93],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectQuery`1\"&gt;&lt;/xref&gt;</ph> that represents the results to add.","source":"An <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> that represents the results to add."}],"pos":[102918,103012],"yaml":true},{"content":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with [UNION](~/docs/framework/data/adonet/ef/language-reference/union-entity-sql.md) applied to add the results of the specified <code>query</code>.","nodes":[{"pos":[0,262],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectQuery`1\"&gt;&lt;/xref&gt;</ph> instance that is equivalent to the original instance with <bpt id=\"p1\">[</bpt>UNION<ept id=\"p1\">](~/docs/framework/data/adonet/ef/language-reference/union-entity-sql.md)</ept> applied to add the results of the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">query</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with [UNION](~/docs/framework/data/adonet/ef/language-reference/union-entity-sql.md) applied to add the results of the specified <code>query</code>."}],"pos":[103089,103352],"yaml":true},{"content":"The <code>query</code> parameter is `null`.","nodes":[{"pos":[0,43],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">query</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>query</code> parameter is `null`."}],"pos":[103521,103565],"yaml":true},{"content":"Combines the results of the query with the results of another object query, including all duplicates.","nodes":[{"pos":[0,101],"content":"Combines the results of the query with the results of another object query, including all duplicates.","nodes":[{"content":"Combines the results of the query with the results of another object query, including all duplicates.","pos":[0,101]}]}],"pos":[104635,104737],"yaml":true},{"content":"<xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> adds the results of the supplied `query` including all duplicates.  \n  \n The supplied `query` that defines results to add must be of the same type or of a type that can be promoted to the type of this <xref:System.Data.Objects.ObjectQuery%601>. For example, the following is valid because `DiscontinuedProducts` can be promoted to `Products`:  \n  \n```  \nObjectQuery<Product>.Union(ObjectQuery<DiscontinuedProduct>)  \n```  \n  \n The following will throw an exception because `Products` cannot be promoted to `DiscontinuedProducts`.  \n  \n```  \nObjectQuery <DiscontinuedProduct>.Union(ObjectQuery<Product>)   \n```  \n  \n For an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord>, the records in both queries must have the same number of columns, and the types in the columns of the <xref:System.Data.Common.DbDataRecord> of the passed `query` must be promotable to the types of the columns in the <xref:System.Data.Common.DbDataRecord> of the <xref:System.Data.Objects.ObjectQuery%601>.  \n  \n Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance. Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>. There cannot be two parameters in the combined collection with the same name. For more information, see [Query Builder Methods](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0).  \n  \n The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> was called.","nodes":[{"pos":[0,121],"content":"<ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A&gt;</ph> adds the results of the supplied <ph id=\"ph2\">`query`</ph> including all duplicates.","source":"<xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> adds the results of the supplied `query` including all duplicates."},{"pos":[128,397],"content":"The supplied `query` that defines results to add must be of the same type or of a type that can be promoted to the type of this <xref:System.Data.Objects.ObjectQuery%601>. For example, the following is valid because `DiscontinuedProducts` can be promoted to `Products`:","nodes":[{"content":"The supplied <ph id=\"ph1\">`query`</ph> that defines results to add must be of the same type or of a type that can be promoted to the type of this <ph id=\"ph2\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph>.","pos":[0,171],"source":"The supplied `query` that defines results to add must be of the same type or of a type that can be promoted to the type of this <xref:System.Data.Objects.ObjectQuery%601>."},{"content":"For example, the following is valid because <ph id=\"ph1\">`DiscontinuedProducts`</ph> can be promoted to <ph id=\"ph2\">`Products`</ph>:","pos":[172,269],"source":" For example, the following is valid because `DiscontinuedProducts` can be promoted to `Products`:"}]},{"pos":[482,584],"content":"The following will throw an exception because <ph id=\"ph1\">`Products`</ph> cannot be promoted to <ph id=\"ph2\">`DiscontinuedProducts`</ph>.","source":"The following will throw an exception because `Products` cannot be promoted to `DiscontinuedProducts`."},{"pos":[671,1075],"content":"For an <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> of type <ph id=\"ph2\">&lt;xref:System.Data.Common.DbDataRecord&gt;</ph>, the records in both queries must have the same number of columns, and the types in the columns of the <ph id=\"ph3\">&lt;xref:System.Data.Common.DbDataRecord&gt;</ph> of the passed <ph id=\"ph4\">`query`</ph> must be promotable to the types of the columns in the <ph id=\"ph5\">&lt;xref:System.Data.Common.DbDataRecord&gt;</ph> of the <ph id=\"ph6\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph>.","source":"For an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord>, the records in both queries must have the same number of columns, and the types in the columns of the <xref:System.Data.Common.DbDataRecord> of the passed `query` must be promotable to the types of the columns in the <xref:System.Data.Common.DbDataRecord> of the <xref:System.Data.Objects.ObjectQuery%601>."},{"pos":[1082,1532],"content":"Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance. Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>. There cannot be two parameters in the combined collection with the same name. For more information, see [Query Builder Methods](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0).","nodes":[{"content":"Parameters that are defined in the supplied <ph id=\"ph1\">`query`</ph> are merged with parameters that are defined in the <ph id=\"ph2\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> instance.","pos":[0,155],"source":"Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance."},{"content":"Parameters must be unique in the combined <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectParameterCollection&gt;</ph>.","pos":[156,251],"source":" Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>."},{"content":"There cannot be two parameters in the combined collection with the same name.","pos":[252,329]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Query Builder Methods<ept id=\"p1\">](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0)</ept>.","pos":[330,450],"source":" For more information, see [Query Builder Methods](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0)."}]},{"pos":[1539,1719],"content":"The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> was called.","nodes":[{"content":"The resulting query inherits the connection from the <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> instance on which <ph id=\"ph2\">&lt;xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A&gt;</ph> was called.","pos":[0,180],"source":"The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> was called."}]}],"pos":[104748,106488],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> that represents the results to add.","nodes":[{"pos":[0,93],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectQuery`1\"&gt;&lt;/xref&gt;</ph> that represents the results to add.","source":"An <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> that represents the results to add."}],"pos":[107579,107673],"yaml":true},{"content":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with [UNION ALL](~/docs/framework/data/adonet/ef/language-reference/union-entity-sql.md) applied to add the results of the specified <code>query</code>.","nodes":[{"pos":[0,266],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectQuery`1\"&gt;&lt;/xref&gt;</ph> instance that is equivalent to the original instance with <bpt id=\"p1\">[</bpt>UNION ALL<ept id=\"p1\">](~/docs/framework/data/adonet/ef/language-reference/union-entity-sql.md)</ept> applied to add the results of the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">query</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with [UNION ALL](~/docs/framework/data/adonet/ef/language-reference/union-entity-sql.md) applied to add the results of the specified <code>query</code>."}],"pos":[107750,108017],"yaml":true},{"content":"The <code>query</code> parameter is `null`.","nodes":[{"pos":[0,43],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">query</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>query</code> parameter is `null`."}],"pos":[108189,108233],"yaml":true},{"content":"Limits the query to results that match specified filtering criteria.","nodes":[{"pos":[0,68],"content":"Limits the query to results that match specified filtering criteria.","nodes":[{"content":"Limits the query to results that match specified filtering criteria.","pos":[0,68]}]}],"pos":[109366,109435],"yaml":true},{"content":"The filter predicate.","nodes":[{"pos":[0,21],"content":"The filter predicate.","nodes":[{"content":"The filter predicate.","pos":[0,21]}]}],"pos":[110329,110351],"yaml":true},{"content":"Zero or more parameters that are used in this method.","nodes":[{"pos":[0,53],"content":"Zero or more parameters that are used in this method.","nodes":[{"content":"Zero or more parameters that are used in this method.","pos":[0,53]}]}],"pos":[110441,110495],"yaml":true},{"content":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with [WHERE](~/docs/framework/data/adonet/ef/language-reference/where-entity-sql.md) applied.","nodes":[{"pos":[0,207],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Data.Objects.ObjectQuery`1\"&gt;&lt;/xref&gt;</ph> instance that is equivalent to the original instance with <bpt id=\"p1\">[</bpt>WHERE<ept id=\"p1\">](~/docs/framework/data/adonet/ef/language-reference/where-entity-sql.md)</ept> applied.","source":"A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with [WHERE](~/docs/framework/data/adonet/ef/language-reference/where-entity-sql.md) applied."}],"pos":[110572,110780],"yaml":true},{"content":"<code>predicate</code> is `null`.  \n  \n -or-  \n  \n <code>parameters</code> is `null`.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;predicate&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>predicate</code> is `null`."},{"pos":[40,44],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[51,85],"content":"<ph id=\"ph1\">&lt;code&gt;parameters&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>parameters</code> is `null`."}],"pos":[110949,111041],"yaml":true},{"content":"The <code>predicate</code> is an empty string.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">predicate</ph><ept id=\"p1\">&lt;/code&gt;</ept> is an empty string.","source":"The <code>predicate</code> is an empty string."}],"pos":[111135,111182],"yaml":true},{"content":"Returns an enumerator that iterates through the results of the query.","nodes":[{"pos":[0,69],"content":"Returns an enumerator that iterates through the results of the query.","nodes":[{"content":"Returns an enumerator that iterates through the results of the query.","pos":[0,69]}]}],"pos":[112314,112384],"yaml":true},{"content":"Calling <xref:System.Data.Objects.ObjectQuery%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A> executes the query.","nodes":[{"pos":[0,141],"content":"Calling <xref:System.Data.Objects.ObjectQuery%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A> executes the query.","nodes":[{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Data.Objects.ObjectQuery%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A&gt;</ph> executes the query.","pos":[0,141],"source":"Calling <xref:System.Data.Objects.ObjectQuery%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A> executes the query."}]}],"pos":[112395,112537],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref> object that can be used to iterate through the results.","nodes":[{"pos":[0,120],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerator`1\"&gt;&lt;/xref&gt;</ph> object that can be used to iterate through the results.","source":"An <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref> object that can be used to iterate through the results."}],"pos":[112738,112859],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Objects.ObjectQuery`1\n  commentId: T:System.Data.Objects.ObjectQuery`1\n  id: ObjectQuery`1\n  children:\n  - System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext)\n  - System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption)\n  - System.Data.Objects.ObjectQuery`1.Distinct\n  - System.Data.Objects.ObjectQuery`1.Except(System.Data.Objects.ObjectQuery{`0})\n  - System.Data.Objects.ObjectQuery`1.Execute(System.Data.Objects.MergeOption)\n  - System.Data.Objects.ObjectQuery`1.GroupBy(System.String,System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectQuery`1.Include(System.String)\n  - System.Data.Objects.ObjectQuery`1.Intersect(System.Data.Objects.ObjectQuery{`0})\n  - System.Data.Objects.ObjectQuery`1.Name\n  - System.Data.Objects.ObjectQuery`1.OfType``1\n  - System.Data.Objects.ObjectQuery`1.OrderBy(System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectQuery`1.Select(System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectQuery`1.Skip(System.String,System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectQuery`1.Top(System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectQuery`1.Union(System.Data.Objects.ObjectQuery{`0})\n  - System.Data.Objects.ObjectQuery`1.UnionAll(System.Data.Objects.ObjectQuery{`0})\n  - System.Data.Objects.ObjectQuery`1.Where(System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  langs:\n  - csharp\n  name: ObjectQuery<T>\n  nameWithType: ObjectQuery<T>\n  fullName: System.Data.Objects.ObjectQuery<T>\n  type: Class\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Represents a typed query against a conceptual model in a given object context.\n  remarks: \"The <xref:System.Data.Objects.ObjectQuery%601> generic class represents a query that returns a collection of zero or more objects of a specific type. The <xref:System.Data.Objects.ObjectContext> must be defined before an object query can be executed. This context provides the connection and metadata information that is required to compose and execute the query. An object query is executed in the following scenarios:  \\n  \\n-   When it is acted upon, such as during a `foreach` (C#) or `For Each` (Visual Basic) enumeration.  \\n  \\n-   When it is assigned to fill a <xref:System.Collections.Generic.List%601> collection.  \\n  \\n-   When the <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> method is explicitly called.  \\n  \\n The query itself can be created by using an [!INCLUDE[esql](~/includes/esql-md.md)] statement or a LINQ query, or it can be incrementally built by using the query builder methods included in the class. In every case, the result is a new <xref:System.Data.Objects.ObjectQuery%601> instance that, when explicitly executed or enumerated over, will send the query to the data source for execution and return the results.  \\n  \\n An <xref:System.Data.Objects.ObjectQuery%601> is frequently of an entity type, but it can also be of <xref:System.Data.Common.DbDataRecord> type, for projections to an anonymous type, or of a primitive type, such as an integer or string. For more information, see [Object Queries](http://msdn.microsoft.com/en-us/0768033c-876f-471d-85d5-264884349276).\"\n  example:\n  - \"The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832).  \\n  \\n The example shows how to construct an instance of the <xref:System.Data.Objects.ObjectQuery%601> class.  \\n  \\n [!code-csharp[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery)]\\n [!code-vb[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery)]\"\n  syntax:\n    content: 'public class ObjectQuery<T> : System.Data.Objects.ObjectQuery, System.Collections.Generic.IEnumerable<T>, System.ComponentModel.IListSource, System.Linq.IOrderedQueryable<T>, System.Linq.IQueryable<T>'\n    typeParameters:\n    - id: T\n      description: The entity type of the query.\n  inheritance:\n  - System.Object\n  - System.Data.Objects.ObjectQuery\n  derivedClasses:\n  - System.Data.Objects.ObjectSet`1\n  implements:\n  - System.Collections.Generic.IEnumerable{T}\n  - System.ComponentModel.IListSource\n  - System.Linq.IOrderedQueryable{T}\n  - System.Linq.IQueryable{T}\n  inheritedMembers:\n  - System.Data.Objects.ObjectQuery.CommandText\n  - System.Data.Objects.ObjectQuery.Context\n  - System.Data.Objects.ObjectQuery.EnablePlanCaching\n  - System.Data.Objects.ObjectQuery.GetResultType\n  - System.Data.Objects.ObjectQuery.MergeOption\n  - System.Data.Objects.ObjectQuery.Parameters\n  - System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator\n  - System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection\n  - System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList\n  - System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType\n  - System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression\n  - System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider\n  - System.Data.Objects.ObjectQuery.ToTraceString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  - System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  - System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  - System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  - System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})\n  - System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})\n  - System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})\n  - System.Linq.Queryable.All``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.Append``1(System.Linq.IQueryable{``0},``0)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal})\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double})\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32})\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64})\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}})\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}})\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}})\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}})\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}})\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})\n  - System.Linq.Queryable.Cast``1(System.Linq.IQueryable)\n  - System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)\n  - System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)\n  - System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0},System.Int32)\n  - System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0},System.Int32)\n  - System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Queryable.First``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  - System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})\n  - System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})\n  - System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})\n  - System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})\n  - System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})\n  - System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  - System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  - System.Linq.Queryable.OfType``1(System.Linq.IQueryable)\n  - System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  - System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  - System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Queryable.Prepend``1(System.Linq.IQueryable{``0},``0)\n  - System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  - System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})\n  - System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})\n  - System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})\n  - System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  - System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  - System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0})\n  - System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0},System.Int32)\n  - System.Linq.Queryable.SkipLast``1(System.Linq.IQueryable{``0},System.Int32)\n  - System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal})\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double})\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32})\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64})\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}})\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}})\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}})\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}})\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}})\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})\n  - System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0},System.Int32)\n  - System.Linq.Queryable.TakeLast``1(System.Linq.IQueryable{``0},System.Int32)\n  - System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})\n  - System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  - System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  - System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})\n  - System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  - System.Web.UI.WebControls.QueryExtensions.SortBy``1(System.Linq.IQueryable{``0},System.String)\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  - System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext)\n  commentId: M:System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext)\n  id: '#ctor(System.String,System.Data.Objects.ObjectContext)'\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: ObjectQuery<T>(String, ObjectContext)\n  nameWithType: ObjectQuery<T>.ObjectQuery<T>(String, ObjectContext)\n  fullName: ObjectQuery<T>.ObjectQuery<T>(String, ObjectContext)\n  type: Constructor\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Creates a new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance using the specified [!INCLUDE[esql](~/includes/esql-md.md)] command as the initial query.\n  remarks: When your application generates Entity SQL queries at runtime, you should be aware of any command length limitations of the data source. Entity SQL does not enforce limitations on the length of the command text in queries.\n  example:\n  - \"The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example shows how to construct an instance of the <xref:System.Data.Objects.ObjectQuery%601> class.  \\n  \\n [!code-csharp[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery)]\\n [!code-vb[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery)]\"\n  syntax:\n    content: public ObjectQuery (string commandText, System.Data.Objects.ObjectContext context);\n    parameters:\n    - id: commandText\n      type: System.String\n      description: The [!INCLUDE[esql](~/includes/esql-md.md)] query.\n    - id: context\n      type: System.Data.Objects.ObjectContext\n      description: The <xref href=\"System.Data.Objects.ObjectContext\"></xref> on which to execute the query.\n  overload: System.Data.Objects.ObjectQuery`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption)\n  commentId: M:System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption)\n  id: '#ctor(System.String,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption)'\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: ObjectQuery<T>(String, ObjectContext, MergeOption)\n  nameWithType: ObjectQuery<T>.ObjectQuery<T>(String, ObjectContext, MergeOption)\n  fullName: ObjectQuery<T>.ObjectQuery<T>(String, ObjectContext, MergeOption)\n  type: Constructor\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Creates a new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance using the specified [!INCLUDE[esql](~/includes/esql-md.md)] command as the initial query and the specified merge option.\n  remarks: When your application generates Entity SQL queries at runtime, you should be aware of any command length limitations of the data source. Entity SQL does not enforce limitations on the length of the command text in queries.\n  example:\n  - \"This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The <xref:System.Data.Objects.ObjectQuery%601> is initialized with the specified query, <xref:System.Data.Objects.ObjectContext>, and <xref:System.Data.Objects.MergeOption>.  \\n  \\n [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_select)]\\n [!code-vb[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_select)]\"\n  syntax:\n    content: public ObjectQuery (string commandText, System.Data.Objects.ObjectContext context, System.Data.Objects.MergeOption mergeOption);\n    parameters:\n    - id: commandText\n      type: System.String\n      description: The [!INCLUDE[esql](~/includes/esql-md.md)] query.\n    - id: context\n      type: System.Data.Objects.ObjectContext\n      description: The <xref href=\"System.Data.Objects.ObjectContext\"></xref> on which to execute the query.\n    - id: mergeOption\n      type: System.Data.Objects.MergeOption\n      description: Specifies how the entities that are retrieved through this query should be merged with the entities that have been returned from previous queries against the same <xref href=\"System.Data.Objects.ObjectContext\"></xref>.\n  overload: System.Data.Objects.ObjectQuery`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectQuery`1.Distinct\n  commentId: M:System.Data.Objects.ObjectQuery`1.Distinct\n  id: Distinct\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: Distinct()\n  nameWithType: ObjectQuery<T>.Distinct()\n  fullName: ObjectQuery<T>.Distinct()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Limits the query to unique results.\n  remarks: \"This query builder method returns an <xref:System.Data.Objects.ObjectQuery%601> instance that is equivalent to the original query with [SELECT DISTINCT](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) applied.  \\n  \\n The `DISTINCT` operator cannot be applied to an object that includes a mapping to a non-comparable column in the data source (such as ntext).\"\n  example:\n  - \"The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example uses <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> method to create a new <xref:System.Data.Objects.ObjectQuery%601> object. Then it calls <xref:System.Data.Objects.ObjectQuery%601.Distinct%2A> on the new <xref:System.Data.Objects.ObjectQuery%601> object to get the unique results of this query.  \\n  \\n [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_distinct_unionall)]\\n [!code-vb[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_distinct_unionall)]\"\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<T> Distinct ();\n    parameters: []\n    return:\n      type: System.Data.Objects.ObjectQuery`1\n      description: A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with [SELECT DISTINCT](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) applied.\n  overload: System.Data.Objects.ObjectQuery`1.Distinct*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectQuery`1.Except(System.Data.Objects.ObjectQuery{`0})\n  commentId: M:System.Data.Objects.ObjectQuery`1.Except(System.Data.Objects.ObjectQuery{`0})\n  id: Except(System.Data.Objects.ObjectQuery{`0})\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: Except(ObjectQuery<T>)\n  nameWithType: ObjectQuery<T>.Except(ObjectQuery<T>)\n  fullName: ObjectQuery<T>.Except(ObjectQuery<T>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Limits the query results by excluding results based on the results of another object query.\n  remarks: \"The supplied `query` that defines results to exclude must be of the same type or of a type that is compatible with the <xref:System.Data.Objects.ObjectQuery%601>.  \\n  \\n Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance. Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>. There cannot be two parameters in the combined collection with the same name. For more information, see [Query Builder Methods](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0).  \\n  \\n The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.Except%2A> was called.\"\n  example:\n  - \"This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example uses <xref:System.Data.Objects.ObjectQuery%601.Except%2A> method to create a new <xref:System.Data.Objects.ObjectQuery%601> object and then iterates through the result of the new query.  \\n  \\n [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Except](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_except)]\\n [!code-vb[DP ObjectServices Concepts#ObjectQuery_Except](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_except)]\"\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<T> Except (System.Data.Objects.ObjectQuery<T> query);\n    parameters:\n    - id: query\n      type: System.Data.Objects.ObjectQuery`1\n      description: An <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> that represents the results to exclude from the query.\n    return:\n      type: System.Data.Objects.ObjectQuery`1\n      description: A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with [EXCEPT](~/docs/framework/data/adonet/ef/language-reference/except-entity-sql.md) applied based on the specified <code>query</code>.\n  overload: System.Data.Objects.ObjectQuery`1.Except*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>query</code> parameter is `null` or an empty string.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectQuery`1.Execute(System.Data.Objects.MergeOption)\n  commentId: M:System.Data.Objects.ObjectQuery`1.Execute(System.Data.Objects.MergeOption)\n  id: Execute(System.Data.Objects.MergeOption)\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: Execute(MergeOption)\n  nameWithType: ObjectQuery<T>.Execute(MergeOption)\n  fullName: ObjectQuery<T>.Execute(MergeOption)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Executes the object query with the specified merge option.\n  remarks: The default merge option for object queries is <xref:System.Data.Objects.MergeOption.AppendOnly>. For more information, see [Identity Resolution, State Management, and Change Tracking](http://msdn.microsoft.com/en-us/3bd49311-0e72-4ea4-8355-38fe57036ba0).\n  example:\n  - \"This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example returns an <xref:System.Data.Objects.ObjectResult%601> from <xref:System.Data.Objects.ObjectQuery.Execute%2A> method. Then it gets an enumerator and iterates through the query results. At the end it releases the enumerator and the <xref:System.Data.Objects.ObjectResult%601> object.  \\n  \\n [!code-csharp[DP ObjectServices Concepts#QueryResult](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#queryresult)]\\n [!code-vb[DP ObjectServices Concepts#QueryResult](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#queryresult)]\"\n  syntax:\n    content: public System.Data.Objects.ObjectResult<T> Execute (System.Data.Objects.MergeOption mergeOption);\n    parameters:\n    - id: mergeOption\n      type: System.Data.Objects.MergeOption\n      description: The <xref href=\"System.Data.Objects.MergeOption\"></xref> to use when executing the query. The default is <xref href=\"System.Data.Objects.MergeOption.AppendOnly\"></xref>.\n    return:\n      type: System.Data.Objects.ObjectResult`1\n      description: An <xref href=\"System.Data.Objects.ObjectResult`1\"></xref> that contains a collection of entity objects returned by the query.\n  overload: System.Data.Objects.ObjectQuery`1.Execute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectQuery`1.GroupBy(System.String,System.String,System.Data.Objects.ObjectParameter[])\n  commentId: M:System.Data.Objects.ObjectQuery`1.GroupBy(System.String,System.String,System.Data.Objects.ObjectParameter[])\n  id: GroupBy(System.String,System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: GroupBy(String, String, ObjectParameter[])\n  nameWithType: ObjectQuery<T>.GroupBy(String, String, ObjectParameter[])\n  fullName: ObjectQuery<T>.GroupBy(String, String, ObjectParameter[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Groups the query results by the specified criteria.\n  remarks: <xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> applies the projection specified by the `projection` parameter. This means that the <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> method is always of type <xref:System.Data.Common.DbDataRecord>. For more information, see [Object Queries](http://msdn.microsoft.com/en-us/0768033c-876f-471d-85d5-264884349276).\n  example:\n  - \"This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832).  \\n  \\n This example creates a new <xref:System.Data.Objects.ObjectQuery%601> object that contains the results of the existing query grouped by product name.  \\n  \\n [!code-csharp[DP ObjectServices Concepts#ObjectQuery_GroupBy](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_groupby)]\\n [!code-vb[DP ObjectServices Concepts#ObjectQuery_GroupBy](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_groupby)]  \\n  \\n This example returns a set of nested data records that contain the `Contact.LastName` column, grouped and sorted alphabetically by the first letter of `Contact.LastName`.  \\n  \\n [!code-csharp[DP ObjectServices Concepts#Projection_GroupBy](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#projection_groupby)]\\n [!code-vb[DP ObjectServices Concepts#Projection_GroupBy](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#projection_groupby)]\"\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<System.Data.Common.DbDataRecord> GroupBy (string keys, string projection, System.Data.Objects.ObjectParameter[] parameters);\n    parameters:\n    - id: keys\n      type: System.String\n      description: The key columns by which to group the results.\n    - id: projection\n      type: System.String\n      description: The list of selected properties that defines the projection.\n    - id: parameters\n      type: System.Data.Objects.ObjectParameter[]\n      description: Zero or more parameters that are used in this method.\n    return:\n      type: System.Data.Objects.ObjectQuery{System.Data.Common.DbDataRecord}\n      description: A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance of type <xref href=\"System.Data.Common.DbDataRecord\"></xref> that is equivalent to the original instance with [GROUP BY](~/docs/framework/data/adonet/ef/language-reference/group-by-entity-sql.md) applied.\n  overload: System.Data.Objects.ObjectQuery`1.GroupBy*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The <code>query</code> parameter is `null` or an empty string.  \\n  \\n -or-  \\n  \\n The <code>projection</code> parameter is `null` or an empty string.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectQuery`1.Include(System.String)\n  commentId: M:System.Data.Objects.ObjectQuery`1.Include(System.String)\n  id: Include(System.String)\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: Include(String)\n  nameWithType: ObjectQuery<T>.Include(String)\n  fullName: ObjectQuery<T>.Include(String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Specifies the related objects to include in the query results.\n  remarks: \"Query paths can be used with Entity SQL and LINQ queries.  \\n  \\n Paths are all-inclusive. For example, if an include call indicates `Include(\\\"Orders.OrderLines\\\")`, not only will `OrderLines` be included, but also `Orders`. For more information, see [Loading Related Objects](http://msdn.microsoft.com/en-us/452347d2-7b3b-44cd-9001-231299a28cb1).  \\n  \\n When you call the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method, the query path is only valid on the returned instance of the <xref:System.Data.Objects.ObjectQuery%601>. Other instances of <xref:System.Data.Objects.ObjectQuery%601> and the object context itself are not affected.  \\n  \\n Because the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method returns the query object, you can call this method multiple times on an <xref:System.Data.Objects.ObjectQuery%601> to specify multiple paths for the query, as in the following example:  \\n  \\n [!code-csharp[DP ObjectServices Concepts#SpanOnlyWithMultiplePaths](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#spanonlywithmultiplepaths)]\\n [!code-vb[DP ObjectServices Concepts#SpanOnlyWithMultiplePaths](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#spanonlywithmultiplepaths)]\"\n  example:\n  - >-\n    [!code-csharp[DP ObjectServices Concepts#QueryWithSpan](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#querywithspan)]\n     [!code-vb[DP ObjectServices Concepts#QueryWithSpan](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#querywithspan)]\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<T> Include (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: Dot-separated list of related objects to return in the query results.\n    return:\n      type: System.Data.Objects.ObjectQuery`1\n      description: A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> with the defined query path.\n  overload: System.Data.Objects.ObjectQuery`1.Include*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>path</code> is `empty`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectQuery`1.Intersect(System.Data.Objects.ObjectQuery{`0})\n  commentId: M:System.Data.Objects.ObjectQuery`1.Intersect(System.Data.Objects.ObjectQuery{`0})\n  id: Intersect(System.Data.Objects.ObjectQuery{`0})\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: Intersect(ObjectQuery<T>)\n  nameWithType: ObjectQuery<T>.Intersect(ObjectQuery<T>)\n  fullName: ObjectQuery<T>.Intersect(ObjectQuery<T>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Limits the query results by including only the results that exist in another object query.\n  remarks: \"The supplied `query` that defines results to include must be of the same type or of a type that is compatible with the <xref:System.Data.Objects.ObjectQuery%601>.  \\n  \\n Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance. Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>. There cannot be two parameters in the combined collection with the same name. For more information, see [Query Builder Methods](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0).  \\n  \\n The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which the <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> method was called.\"\n  example:\n  - \"The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). This example creates a new <xref:System.Data.Objects.ObjectQuery%601> object that contains the results of two other queries.  \\n  \\n [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Intersect](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_intersect)]\\n [!code-vb[DP ObjectServices Concepts#ObjectQuery_Intersect](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_intersect)]\"\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<T> Intersect (System.Data.Objects.ObjectQuery<T> query);\n    parameters:\n    - id: query\n      type: System.Data.Objects.ObjectQuery`1\n      description: An <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> that represents the results to include in the query.\n    return:\n      type: System.Data.Objects.ObjectQuery`1\n      description: A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with [INTERSECT](~/docs/framework/data/adonet/ef/language-reference/intersect-entity-sql.md) applied based on the specified <code>query</code>.\n  overload: System.Data.Objects.ObjectQuery`1.Intersect*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>query</code> parameter is `null` or is an empty string.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectQuery`1.Name\n  commentId: P:System.Data.Objects.ObjectQuery`1.Name\n  id: Name\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ObjectQuery<T>.Name\n  fullName: ObjectQuery<T>.Name\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Gets or sets the name of this object query.\n  remarks: \"The name of the object query identifies the current object query in the sequence by name when constructing query builder methods. By default, the query name is `it`. This can be useful when referring to the current sequence in joins inside the <xref:System.Data.Objects.Query%601.Where%2A> method or in the <xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A> method. For more information, see [Query Builder Methods](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0).  \\n  \\n When you set the <xref:System.Data.Objects.ObjectQuery%601.Name%2A> property of an <xref:System.Data.Objects.ObjectQuery%601>, that value becomes the alias in successive methods.  \\n  \\n The value of the <xref:System.Data.Objects.ObjectQuery%601.Name%2A> property must start with a letter and can contain letters, digits, and underscores.\"\n  example:\n  - \"This example sets the name of the first <xref:System.Data.Objects.ObjectQuery%601> to \\\"product\\\" and then uses this alias in the successive <xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> method. The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832).  \\n  \\n [!code-csharp[DP ObjectServices Concepts#QueryWithAliasNamed](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#querywithaliasnamed)]\\n [!code-vb[DP ObjectServices Concepts#QueryWithAliasNamed](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#querywithaliasnamed)]\"\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: A `string` value that is the name of this <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref>.\n  overload: System.Data.Objects.ObjectQuery`1.Name*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value specified on set is not valid.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectQuery`1.OfType``1\n  commentId: M:System.Data.Objects.ObjectQuery`1.OfType``1\n  id: OfType``1\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: OfType<TResultType>()\n  nameWithType: ObjectQuery<T>.OfType<TResultType>()\n  fullName: ObjectQuery<T>.OfType<TResultType>()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Limits the query to only results of a specific type.\n  remarks: \"<xref:System.Data.Objects.ObjectQuery%601.OfType%2A> is used to filter query results by a specific entity or complex type. This supports a conceptual model with object inheritance. For more information, see [Entity Data Model Inheritance (Application Scenarios)](http://msdn.microsoft.com/en-us/5de40bf8-527f-4f2e-96e3-61164f429caa). The  \\n  \\n <xref:System.Data.Objects.ObjectQuery%601.OfType%2A> method can only be applied to an <xref:System.Data.Objects.ObjectQuery%601> of an entity type or complex type that is defined in the EDM.\"\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<TResultType> OfType<TResultType> ();\n    parameters: []\n    typeParameters:\n    - id: TResultType\n      description: The type of the <xref href=\"System.Data.Objects.ObjectResult`1\"></xref> returned when the query is executed with the applied filter.\n    return:\n      type: System.Data.Objects.ObjectQuery{TResultType}\n      description: A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with [OFTYPE](~/docs/framework/data/adonet/ef/language-reference/oftype-entity-sql.md) applied.\n  overload: System.Data.Objects.ObjectQuery`1.OfType``1*\n  exceptions:\n  - type: System.Data.EntitySqlException\n    commentId: T:System.Data.EntitySqlException\n    description: The type specified is not valid.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectQuery`1.OrderBy(System.String,System.Data.Objects.ObjectParameter[])\n  commentId: M:System.Data.Objects.ObjectQuery`1.OrderBy(System.String,System.Data.Objects.ObjectParameter[])\n  id: OrderBy(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: OrderBy(String, ObjectParameter[])\n  nameWithType: ObjectQuery<T>.OrderBy(String, ObjectParameter[])\n  fullName: ObjectQuery<T>.OrderBy(String, ObjectParameter[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Orders the query results by the specified criteria.\n  remarks: \"The ordering of results in a nested query cannot be guaranteed.  \\n  \\n <xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> should always be the final query builder method in the sequence.\"\n  example:\n  - \"This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example creates a new <xref:System.Data.Objects.ObjectQuery%601> object that contains the results of the existing query order by `ProductID`.  \\n  \\n [!code-csharp[DP ObjectServices Concepts#ObjectQuery_OrderBy](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_orderby)]\\n [!code-vb[DP ObjectServices Concepts#ObjectQuery_OrderBy](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_orderby)]\"\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<T> OrderBy (string keys, System.Data.Objects.ObjectParameter[] parameters);\n    parameters:\n    - id: keys\n      type: System.String\n      description: The key columns by which to order the results.\n    - id: parameters\n      type: System.Data.Objects.ObjectParameter[]\n      description: Zero or more parameters that are used in this method.\n    return:\n      type: System.Data.Objects.ObjectQuery`1\n      description: A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with [ORDER BY](~/docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md) applied.\n  overload: System.Data.Objects.ObjectQuery`1.OrderBy*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>keys</code> or <code>parameters</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>key</code> is an empty string.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectQuery`1.Select(System.String,System.Data.Objects.ObjectParameter[])\n  commentId: M:System.Data.Objects.ObjectQuery`1.Select(System.String,System.Data.Objects.ObjectParameter[])\n  id: Select(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: Select(String, ObjectParameter[])\n  nameWithType: ObjectQuery<T>.Select(String, ObjectParameter[])\n  fullName: ObjectQuery<T>.Select(String, ObjectParameter[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Limits the query results to only the properties that are defined in the specified projection.\n  remarks: \"<xref:System.Data.Objects.ObjectQuery%601.Select%2A> applies the projection specified by the `projection` parameter. The <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery%601.Select%2A> method is always a row type of <xref:System.Data.Common.DbDataRecord>. Use the <xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A> method to return values that are simple types, entity types, or complex types. For more information, see [Object Queries](http://msdn.microsoft.com/en-us/0768033c-876f-471d-85d5-264884349276).  \\n  \\n When a navigation property is included in the projection, the query results include a collection of nested <xref:System.Data.Common.DbDataRecord> objects. For more information, see [How to: Navigate Relationships Using Navigation Properties](http://msdn.microsoft.com/en-us/b1d71c7d-16a7-4b46-96ac-690176bd5057).\"\n  example:\n  - \"This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example creates a new <xref:System.Data.Objects.ObjectQuery%601> whose results are data records that contain the `ProductID` fields of the results of this query.  \\n  \\n [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_select)]\\n [!code-vb[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_select)]\"\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<System.Data.Common.DbDataRecord> Select (string projection, System.Data.Objects.ObjectParameter[] parameters);\n    parameters:\n    - id: projection\n      type: System.String\n      description: The list of selected properties that defines the projection.\n    - id: parameters\n      type: System.Data.Objects.ObjectParameter[]\n      description: Zero or more parameters that are used in this method.\n    return:\n      type: System.Data.Objects.ObjectQuery{System.Data.Common.DbDataRecord}\n      description: A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance of type <xref href=\"System.Data.Common.DbDataRecord\"></xref> that is equivalent to the original instance with [SELECT](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) applied.\n  overload: System.Data.Objects.ObjectQuery`1.Select*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>projection</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>parameters</code> is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>projection</code> is an empty string.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])\n  commentId: M:System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])\n  id: SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: SelectValue<TResultType>(String, ObjectParameter[])\n  nameWithType: ObjectQuery<T>.SelectValue<TResultType>(String, ObjectParameter[])\n  fullName: ObjectQuery<T>.SelectValue<TResultType>(String, ObjectParameter[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Limits the query results to only the property specified in the projection.\n  remarks: \"<xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A> is used to return values that are simple types, entity types, or complex types. Use the <xref:System.Data.Objects.ObjectQuery%601.Select%2A> method for projections that require a row type instead of a value type. For more information, see [Object Queries](http://msdn.microsoft.com/en-us/0768033c-876f-471d-85d5-264884349276).  \\n  \\n The <xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A> method applies the projection specified by the `projection` parameter. The <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A> method must be of a value type that is compatible with the projection and must be the same type as the type of <xref:System.Data.Objects.ObjectQuery%601.SelectValue%2A>.\"\n  example:\n  - \"This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example creates a new <xref:System.Data.Objects.ObjectQuery%601> that contains results that are a sequence of `ProductID` values projected from the results of the existing query.  \\n  \\n [!code-csharp[DP ObjectServices Concepts#ObjectQuery_SelectValue](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_selectvalue)]\\n [!code-vb[DP ObjectServices Concepts#ObjectQuery_SelectValue](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_selectvalue)]\"\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<TResultType> SelectValue<TResultType> (string projection, System.Data.Objects.ObjectParameter[] parameters);\n    parameters:\n    - id: projection\n      type: System.String\n      description: The projection list.\n    - id: parameters\n      type: System.Data.Objects.ObjectParameter[]\n      description: An optional set of query parameters that should be in scope when parsing.\n    typeParameters:\n    - id: TResultType\n      description: The type of the <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> returned by the <xref href=\"System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])\"></xref> method.\n    return:\n      type: System.Data.Objects.ObjectQuery{TResultType}\n      description: A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance of a type compatible with the specific projection. The returned <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> is equivalent to the original instance with [SELECT VALUE](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) applied.\n  overload: System.Data.Objects.ObjectQuery`1.SelectValue``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>projection</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>parameters</code> is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>projection</code> is an empty string.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectQuery`1.Skip(System.String,System.String,System.Data.Objects.ObjectParameter[])\n  commentId: M:System.Data.Objects.ObjectQuery`1.Skip(System.String,System.String,System.Data.Objects.ObjectParameter[])\n  id: Skip(System.String,System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: Skip(String, String, ObjectParameter[])\n  nameWithType: ObjectQuery<T>.Skip(String, String, ObjectParameter[])\n  fullName: ObjectQuery<T>.Skip(String, String, ObjectParameter[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Orders the query results by the specified criteria and skips a specified number of results.\n  remarks: The <xref:System.Data.Objects.ObjectQuery%601.Skip%2A> method cannot be used after the <xref:System.Data.Objects.ObjectQuery%601.Top%2A> method. When you use <xref:System.Data.Objects.ObjectQuery%601.Top%2A> after <xref:System.Data.Objects.ObjectQuery%601.Skip%2A>, it functions like the [LIMIT](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md) statement of an  clause.\n  example:\n  - \"This example gets five `Product` objects after skipping the first three in the query result, sorted by `Product.ListPrice`.  \\n  \\n [!code-csharp[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#projection_skiplimit)]\\n [!code-vb[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#projection_skiplimit)]\"\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<T> Skip (string keys, string count, System.Data.Objects.ObjectParameter[] parameters);\n    parameters:\n    - id: keys\n      type: System.String\n      description: The key columns by which to order the results.\n    - id: count\n      type: System.String\n      description: The number of results to skip. This must be either a constant or a parameter reference.\n    - id: parameters\n      type: System.Data.Objects.ObjectParameter[]\n      description: An optional set of query parameters that should be in scope when parsing.\n    return:\n      type: System.Data.Objects.ObjectQuery`1\n      description: A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with both [ORDER BY](~/docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md) and [SKIP](~/docs/framework/data/adonet/ef/language-reference/skip-entity-sql.md) applied.\n  overload: System.Data.Objects.ObjectQuery`1.Skip*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Any argument is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>keys</code> is an empty string.  \\n  \\n -or-  \\n  \\n <code>count</code> is an empty string.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectQuery`1.Top(System.String,System.Data.Objects.ObjectParameter[])\n  commentId: M:System.Data.Objects.ObjectQuery`1.Top(System.String,System.Data.Objects.ObjectParameter[])\n  id: Top(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: Top(String, ObjectParameter[])\n  nameWithType: ObjectQuery<T>.Top(String, ObjectParameter[])\n  fullName: ObjectQuery<T>.Top(String, ObjectParameter[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Limits the query results to a specified number of items.\n  remarks: \"<xref:System.Data.Objects.ObjectQuery%601.Top%2A> is nondeterministic unless the query is sorted.  \\n  \\n When you use the <xref:System.Data.Objects.ObjectQuery%601.Top%2A> method after the <xref:System.Data.Objects.ObjectQuery%601.Skip%2A> method, it functions like the [LIMIT](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md) statement of an [ORDER BY](~/docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md) clause.\"\n  example:\n  - \"These examples are based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832).  \\n  \\n This example creates a new <xref:System.Data.Objects.ObjectQuery%601> that contains the first two results of the existing query.  \\n  \\n [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Top](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_top)]\\n [!code-vb[DP ObjectServices Concepts#ObjectQuery_Top](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_top)]  \\n  \\n This example gets five `Product` objects after skipping the first three in the query result, sorted by `Product.ListPrice`. <xref:System.Data.Objects.ObjectQuery%601.Top%2A> is used instead of [LIMIT](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md) for paging.  \\n  \\n [!code-csharp[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#projection_skiplimit)]\\n [!code-vb[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#projection_skiplimit)]\"\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<T> Top (string count, System.Data.Objects.ObjectParameter[] parameters);\n    parameters:\n    - id: count\n      type: System.String\n      description: The number of items in the results as a string.\n    - id: parameters\n      type: System.Data.Objects.ObjectParameter[]\n      description: An optional set of query parameters that should be in scope when parsing.\n    return:\n      type: System.Data.Objects.ObjectQuery`1\n      description: A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with [TOP](~/docs/framework/data/adonet/ef/language-reference/top-entity-sql.md) applied.\n  overload: System.Data.Objects.ObjectQuery`1.Top*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>count</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>count</code> is an empty string.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectQuery`1.Union(System.Data.Objects.ObjectQuery{`0})\n  commentId: M:System.Data.Objects.ObjectQuery`1.Union(System.Data.Objects.ObjectQuery{`0})\n  id: Union(System.Data.Objects.ObjectQuery{`0})\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: Union(ObjectQuery<T>)\n  nameWithType: ObjectQuery<T>.Union(ObjectQuery<T>)\n  fullName: ObjectQuery<T>.Union(ObjectQuery<T>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Combines the results of the query with the results of another object query, without any duplicates.\n  remarks: \"<xref:System.Data.Objects.ObjectQuery%601.Union%2A> adds the results of the supplied `query` without any duplicates.  \\n  \\n The supplied `query` that defines the results to add must be of the same type or of a type that can be promoted to the type of this <xref:System.Data.Objects.ObjectQuery%601>. For example, the following is valid because `DiscontinuedProducts` can be promoted to `Products`:  \\n  \\n```  \\nObjectQuery<Product>.Union(ObjectQuery<DiscontinuedProduct>)  \\n```  \\n  \\n The following will throw an exception because `Products` cannot be promoted to `DiscontinuedProducts`.  \\n  \\n```  \\nObjectQuery <DiscontinuedProduct>.Union(ObjectQuery<Product>)   \\n```  \\n  \\n For an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord>, the records in both queries must have the same number of columns, and the types in the columns of the <xref:System.Data.Common.DbDataRecord> of the passed `query` must be promotable to the types of the columns in the <xref:System.Data.Common.DbDataRecord> of the <xref:System.Data.Objects.ObjectQuery%601>.  \\n  \\n Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance. Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>. There cannot be two parameters in the combined collection with the same name. For more information, see [Query Builder Methods](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0).  \\n  \\n The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.Union%2A> was called.\"\n  example:\n  - \"This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example uses <xref:System.Data.Objects.ObjectQuery%601.Union%2A> method to creates a new <xref:System.Data.Objects.ObjectQuery%601> object.  \\n  \\n [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Distinct_Union](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_distinct_union)]\\n [!code-vb[DP ObjectServices Concepts#ObjectQuery_Distinct_Union](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_distinct_union)]\"\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<T> Union (System.Data.Objects.ObjectQuery<T> query);\n    parameters:\n    - id: query\n      type: System.Data.Objects.ObjectQuery`1\n      description: An <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> that represents the results to add.\n    return:\n      type: System.Data.Objects.ObjectQuery`1\n      description: A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with [UNION](~/docs/framework/data/adonet/ef/language-reference/union-entity-sql.md) applied to add the results of the specified <code>query</code>.\n  overload: System.Data.Objects.ObjectQuery`1.Union*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>query</code> parameter is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectQuery`1.UnionAll(System.Data.Objects.ObjectQuery{`0})\n  commentId: M:System.Data.Objects.ObjectQuery`1.UnionAll(System.Data.Objects.ObjectQuery{`0})\n  id: UnionAll(System.Data.Objects.ObjectQuery{`0})\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: UnionAll(ObjectQuery<T>)\n  nameWithType: ObjectQuery<T>.UnionAll(ObjectQuery<T>)\n  fullName: ObjectQuery<T>.UnionAll(ObjectQuery<T>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Combines the results of the query with the results of another object query, including all duplicates.\n  remarks: \"<xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> adds the results of the supplied `query` including all duplicates.  \\n  \\n The supplied `query` that defines results to add must be of the same type or of a type that can be promoted to the type of this <xref:System.Data.Objects.ObjectQuery%601>. For example, the following is valid because `DiscontinuedProducts` can be promoted to `Products`:  \\n  \\n```  \\nObjectQuery<Product>.Union(ObjectQuery<DiscontinuedProduct>)  \\n```  \\n  \\n The following will throw an exception because `Products` cannot be promoted to `DiscontinuedProducts`.  \\n  \\n```  \\nObjectQuery <DiscontinuedProduct>.Union(ObjectQuery<Product>)   \\n```  \\n  \\n For an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord>, the records in both queries must have the same number of columns, and the types in the columns of the <xref:System.Data.Common.DbDataRecord> of the passed `query` must be promotable to the types of the columns in the <xref:System.Data.Common.DbDataRecord> of the <xref:System.Data.Objects.ObjectQuery%601>.  \\n  \\n Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance. Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>. There cannot be two parameters in the combined collection with the same name. For more information, see [Query Builder Methods](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0).  \\n  \\n The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> was called.\"\n  example:\n  - \"The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example uses the <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> method to create a new <xref:System.Data.Objects.ObjectQuery%601> object. Then it calls the <xref:System.Data.Objects.ObjectQuery%601.Distinct%2A> method on the new <xref:System.Data.Objects.ObjectQuery%601> object to get the unique results of this query.  \\n  \\n [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_distinct_unionall)]\\n [!code-vb[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_distinct_unionall)]\"\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<T> UnionAll (System.Data.Objects.ObjectQuery<T> query);\n    parameters:\n    - id: query\n      type: System.Data.Objects.ObjectQuery`1\n      description: An <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> that represents the results to add.\n    return:\n      type: System.Data.Objects.ObjectQuery`1\n      description: A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with [UNION ALL](~/docs/framework/data/adonet/ef/language-reference/union-entity-sql.md) applied to add the results of the specified <code>query</code>.\n  overload: System.Data.Objects.ObjectQuery`1.UnionAll*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>query</code> parameter is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectQuery`1.Where(System.String,System.Data.Objects.ObjectParameter[])\n  commentId: M:System.Data.Objects.ObjectQuery`1.Where(System.String,System.Data.Objects.ObjectParameter[])\n  id: Where(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: Where(String, ObjectParameter[])\n  nameWithType: ObjectQuery<T>.Where(String, ObjectParameter[])\n  fullName: ObjectQuery<T>.Where(String, ObjectParameter[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Limits the query to results that match specified filtering criteria.\n  remarks: ''\n  example:\n  - \"This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example creates a new <xref:System.Data.Objects.ObjectQuery%601> that contains results of the existing query filtered by the following criteria: `\\\"it.ProductID = 900\\\"`.  \\n  \\n [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Where](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_where)]\\n [!code-vb[DP ObjectServices Concepts#ObjectQuery_Where](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_where)]\"\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<T> Where (string predicate, System.Data.Objects.ObjectParameter[] parameters);\n    parameters:\n    - id: predicate\n      type: System.String\n      description: The filter predicate.\n    - id: parameters\n      type: System.Data.Objects.ObjectParameter[]\n      description: Zero or more parameters that are used in this method.\n    return:\n      type: System.Data.Objects.ObjectQuery`1\n      description: A new <xref href=\"System.Data.Objects.ObjectQuery`1\"></xref> instance that is equivalent to the original instance with [WHERE](~/docs/framework/data/adonet/ef/language-reference/where-entity-sql.md) applied.\n  overload: System.Data.Objects.ObjectQuery`1.Where*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>predicate</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>parameters</code> is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>predicate</code> is an empty string.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  commentId: M:System.Data.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable<T>#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  isEii: true\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: IEnumerable<T>.GetEnumerator()\n  nameWithType: ObjectQuery<T>.IEnumerable<T>.GetEnumerator()\n  fullName: ObjectQuery<T>.IEnumerable<T>.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  summary: Returns an enumerator that iterates through the results of the query.\n  remarks: Calling <xref:System.Data.Objects.ObjectQuery%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A> executes the query.\n  syntax:\n    content: System.Collections.Generic.IEnumerator<T> IEnumerable<T>.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator`1\n      description: An <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref> object that can be used to iterate through the results.\n  overload: System.Data.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Data.Objects.ObjectQuery\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectQuery\n  nameWithType: ObjectQuery\n  fullName: System.Data.Objects.ObjectQuery\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Data.EntitySqlException\n  parent: System.Data\n  isExternal: false\n  name: EntitySqlException\n  nameWithType: EntitySqlException\n  fullName: System.Data.EntitySqlException\n- uid: System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext)\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: ObjectQuery<T>(String, ObjectContext)\n  nameWithType: ObjectQuery<T>.ObjectQuery<T>(String, ObjectContext)\n  fullName: ObjectQuery<T>.ObjectQuery<T>(String, ObjectContext)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Objects.ObjectContext\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectContext\n  nameWithType: ObjectContext\n  fullName: System.Data.Objects.ObjectContext\n- uid: System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption)\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: ObjectQuery<T>(String, ObjectContext, MergeOption)\n  nameWithType: ObjectQuery<T>.ObjectQuery<T>(String, ObjectContext, MergeOption)\n  fullName: ObjectQuery<T>.ObjectQuery<T>(String, ObjectContext, MergeOption)\n- uid: System.Data.Objects.MergeOption\n  parent: System.Data.Objects\n  isExternal: false\n  name: MergeOption\n  nameWithType: MergeOption\n  fullName: System.Data.Objects.MergeOption\n- uid: System.Data.Objects.ObjectQuery`1.Distinct\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Distinct()\n  nameWithType: ObjectQuery<T>.Distinct()\n  fullName: ObjectQuery<T>.Distinct()\n- uid: System.Data.Objects.ObjectQuery`1\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectQuery<T>\n  nameWithType: ObjectQuery<T>\n  fullName: System.Data.Objects.ObjectQuery<T>\n- uid: System.Data.Objects.ObjectQuery`1.Except(System.Data.Objects.ObjectQuery{`0})\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Except(ObjectQuery<T>)\n  nameWithType: ObjectQuery<T>.Except(ObjectQuery<T>)\n  fullName: ObjectQuery<T>.Except(ObjectQuery<T>)\n- uid: System.Data.Objects.ObjectQuery`1.Execute(System.Data.Objects.MergeOption)\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Execute(MergeOption)\n  nameWithType: ObjectQuery<T>.Execute(MergeOption)\n  fullName: ObjectQuery<T>.Execute(MergeOption)\n- uid: System.Data.Objects.ObjectResult`1\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectResult<T>\n  nameWithType: ObjectResult<T>\n  fullName: System.Data.Objects.ObjectResult<T>\n- uid: System.Data.Objects.ObjectQuery`1.GroupBy(System.String,System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: GroupBy(String, String, ObjectParameter[])\n  nameWithType: ObjectQuery<T>.GroupBy(String, String, ObjectParameter[])\n  fullName: ObjectQuery<T>.GroupBy(String, String, ObjectParameter[])\n- uid: System.Data.Common.DbDataRecord\n  name: DbDataRecord\n  nameWithType: DbDataRecord\n  fullName: System.Data.Common.DbDataRecord\n- uid: System.Data.Objects.ObjectQuery{System.Data.Common.DbDataRecord}\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectQuery<DbDataRecord>\n  nameWithType: ObjectQuery<DbDataRecord>\n  fullName: System.Data.Objects.ObjectQuery<System.Data.Common.DbDataRecord>\n  spec.csharp:\n  - uid: System.Data.Objects.ObjectQuery`1\n    name: ObjectQuery\n    nameWithType: ObjectQuery\n    fullName: System.Data.Objects.ObjectQuery\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Data.Common.DbDataRecord\n    name: DbDataRecord\n    nameWithType: DbDataRecord\n    fullName: System.Data.Common.DbDataRecord\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Objects.ObjectParameter\n  name: ObjectParameter\n  nameWithType: ObjectParameter\n  fullName: System.Data.Objects.ObjectParameter\n- uid: System.Data.Objects.ObjectParameter[]\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectParameter[]\n  nameWithType: ObjectParameter[]\n  fullName: System.Data.Objects.ObjectParameter[]\n  spec.csharp:\n  - uid: System.Data.Objects.ObjectParameter\n    name: ObjectParameter\n    nameWithType: ObjectParameter\n    fullName: System.Data.Objects.ObjectParameter\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.Objects.ObjectQuery`1.Include(System.String)\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Include(String)\n  nameWithType: ObjectQuery<T>.Include(String)\n  fullName: ObjectQuery<T>.Include(String)\n- uid: System.Data.Objects.ObjectQuery`1.Intersect(System.Data.Objects.ObjectQuery{`0})\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Intersect(ObjectQuery<T>)\n  nameWithType: ObjectQuery<T>.Intersect(ObjectQuery<T>)\n  fullName: ObjectQuery<T>.Intersect(ObjectQuery<T>)\n- uid: System.Data.Objects.ObjectQuery`1.Name\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Name\n  nameWithType: ObjectQuery<T>.Name\n  fullName: ObjectQuery<T>.Name\n- uid: System.Data.Objects.ObjectQuery`1.OfType``1\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: OfType<TResultType>()\n  nameWithType: ObjectQuery<T>.OfType<TResultType>()\n  fullName: ObjectQuery<T>.OfType<TResultType>()\n- uid: TResultType\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Objects.ObjectQuery{TResultType}\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectQuery<TResultType>\n  nameWithType: ObjectQuery<TResultType>\n  fullName: System.Data.Objects.ObjectQuery<TResultType>\n  spec.csharp:\n  - uid: System.Data.Objects.ObjectQuery`1\n    name: ObjectQuery\n    nameWithType: ObjectQuery\n    fullName: System.Data.Objects.ObjectQuery\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: TResultType\n    name: TResultType\n    nameWithType: TResultType\n    fullName: TResultType\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Objects.ObjectQuery`1.OrderBy(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: OrderBy(String, ObjectParameter[])\n  nameWithType: ObjectQuery<T>.OrderBy(String, ObjectParameter[])\n  fullName: ObjectQuery<T>.OrderBy(String, ObjectParameter[])\n- uid: System.Data.Objects.ObjectQuery`1.Select(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Select(String, ObjectParameter[])\n  nameWithType: ObjectQuery<T>.Select(String, ObjectParameter[])\n  fullName: ObjectQuery<T>.Select(String, ObjectParameter[])\n- uid: System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: SelectValue<TResultType>(String, ObjectParameter[])\n  nameWithType: ObjectQuery<T>.SelectValue<TResultType>(String, ObjectParameter[])\n  fullName: ObjectQuery<T>.SelectValue<TResultType>(String, ObjectParameter[])\n- uid: System.Data.Objects.ObjectQuery`1.Skip(System.String,System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Skip(String, String, ObjectParameter[])\n  nameWithType: ObjectQuery<T>.Skip(String, String, ObjectParameter[])\n  fullName: ObjectQuery<T>.Skip(String, String, ObjectParameter[])\n- uid: System.Data.Objects.ObjectQuery`1.Top(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Top(String, ObjectParameter[])\n  nameWithType: ObjectQuery<T>.Top(String, ObjectParameter[])\n  fullName: ObjectQuery<T>.Top(String, ObjectParameter[])\n- uid: System.Data.Objects.ObjectQuery`1.Union(System.Data.Objects.ObjectQuery{`0})\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Union(ObjectQuery<T>)\n  nameWithType: ObjectQuery<T>.Union(ObjectQuery<T>)\n  fullName: ObjectQuery<T>.Union(ObjectQuery<T>)\n- uid: System.Data.Objects.ObjectQuery`1.UnionAll(System.Data.Objects.ObjectQuery{`0})\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: UnionAll(ObjectQuery<T>)\n  nameWithType: ObjectQuery<T>.UnionAll(ObjectQuery<T>)\n  fullName: ObjectQuery<T>.UnionAll(ObjectQuery<T>)\n- uid: System.Data.Objects.ObjectQuery`1.Where(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Where(String, ObjectParameter[])\n  nameWithType: ObjectQuery<T>.Where(String, ObjectParameter[])\n  fullName: ObjectQuery<T>.Where(String, ObjectParameter[])\n- uid: System.Data.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: IEnumerable<T>.GetEnumerator()\n  nameWithType: ObjectQuery<T>.IEnumerable<T>.GetEnumerator()\n  fullName: ObjectQuery<T>.IEnumerable<T>.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n- uid: System.Data.Objects.ObjectQuery`1.#ctor*\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: ObjectQuery<T>\n  nameWithType: ObjectQuery<T>.ObjectQuery<T>\n  fullName: ObjectQuery<T>.ObjectQuery<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n- uid: System.Data.Objects.ObjectQuery`1.Distinct*\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Distinct\n  nameWithType: ObjectQuery<T>.Distinct\n  fullName: ObjectQuery<T>.Distinct\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n- uid: System.Data.Objects.ObjectQuery`1.Except*\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Except\n  nameWithType: ObjectQuery<T>.Except\n  fullName: ObjectQuery<T>.Except\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n- uid: System.Data.Objects.ObjectQuery`1.Execute*\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Execute\n  nameWithType: ObjectQuery<T>.Execute\n  fullName: ObjectQuery<T>.Execute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n- uid: System.Data.Objects.ObjectQuery`1.GroupBy*\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: GroupBy\n  nameWithType: ObjectQuery<T>.GroupBy\n  fullName: ObjectQuery<T>.GroupBy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n- uid: System.Data.Objects.ObjectQuery`1.Include*\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Include\n  nameWithType: ObjectQuery<T>.Include\n  fullName: ObjectQuery<T>.Include\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n- uid: System.Data.Objects.ObjectQuery`1.Intersect*\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Intersect\n  nameWithType: ObjectQuery<T>.Intersect\n  fullName: ObjectQuery<T>.Intersect\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n- uid: System.Data.Objects.ObjectQuery`1.Name*\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Name\n  nameWithType: ObjectQuery<T>.Name\n  fullName: ObjectQuery<T>.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n- uid: System.Data.Objects.ObjectQuery`1.OfType``1*\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: OfType<TResultType>\n  nameWithType: ObjectQuery<T>.OfType<TResultType>\n  fullName: ObjectQuery<T>.OfType<TResultType>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n- uid: System.Data.Objects.ObjectQuery`1.OrderBy*\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: OrderBy\n  nameWithType: ObjectQuery<T>.OrderBy\n  fullName: ObjectQuery<T>.OrderBy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n- uid: System.Data.Objects.ObjectQuery`1.Select*\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Select\n  nameWithType: ObjectQuery<T>.Select\n  fullName: ObjectQuery<T>.Select\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n- uid: System.Data.Objects.ObjectQuery`1.SelectValue``1*\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: SelectValue<TResultType>\n  nameWithType: ObjectQuery<T>.SelectValue<TResultType>\n  fullName: ObjectQuery<T>.SelectValue<TResultType>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n- uid: System.Data.Objects.ObjectQuery`1.Skip*\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Skip\n  nameWithType: ObjectQuery<T>.Skip\n  fullName: ObjectQuery<T>.Skip\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n- uid: System.Data.Objects.ObjectQuery`1.Top*\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Top\n  nameWithType: ObjectQuery<T>.Top\n  fullName: ObjectQuery<T>.Top\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n- uid: System.Data.Objects.ObjectQuery`1.Union*\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Union\n  nameWithType: ObjectQuery<T>.Union\n  fullName: ObjectQuery<T>.Union\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n- uid: System.Data.Objects.ObjectQuery`1.UnionAll*\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: UnionAll\n  nameWithType: ObjectQuery<T>.UnionAll\n  fullName: ObjectQuery<T>.UnionAll\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n- uid: System.Data.Objects.ObjectQuery`1.Where*\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Where\n  nameWithType: ObjectQuery<T>.Where\n  fullName: ObjectQuery<T>.Where\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n- uid: System.Data.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator*\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable<T>.GetEnumerator\n  nameWithType: ObjectQuery<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator\n  fullName: ObjectQuery<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Objects/ObjectQuery`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Data.Objects.ObjectQuery.CommandText\n  parent: System.Data.Objects.ObjectQuery\n  isExternal: false\n  name: CommandText\n  nameWithType: ObjectQuery.CommandText\n  fullName: ObjectQuery.CommandText\n- uid: System.Data.Objects.ObjectQuery.Context\n  parent: System.Data.Objects.ObjectQuery\n  isExternal: false\n  name: Context\n  nameWithType: ObjectQuery.Context\n  fullName: ObjectQuery.Context\n- uid: System.Data.Objects.ObjectQuery.EnablePlanCaching\n  parent: System.Data.Objects.ObjectQuery\n  isExternal: false\n  name: EnablePlanCaching\n  nameWithType: ObjectQuery.EnablePlanCaching\n  fullName: ObjectQuery.EnablePlanCaching\n- uid: System.Data.Objects.ObjectQuery.GetResultType\n  parent: System.Data.Objects.ObjectQuery\n  isExternal: false\n  name: GetResultType()\n  nameWithType: ObjectQuery.GetResultType()\n  fullName: ObjectQuery.GetResultType()\n- uid: System.Data.Objects.ObjectQuery.MergeOption\n  parent: System.Data.Objects.ObjectQuery\n  isExternal: false\n  name: MergeOption\n  nameWithType: ObjectQuery.MergeOption\n  fullName: ObjectQuery.MergeOption\n- uid: System.Data.Objects.ObjectQuery.Parameters\n  parent: System.Data.Objects.ObjectQuery\n  isExternal: false\n  name: Parameters\n  nameWithType: ObjectQuery.Parameters\n  fullName: ObjectQuery.Parameters\n- uid: System.Data.Objects.ObjectQuery.ToTraceString\n  parent: System.Data.Objects.ObjectQuery\n  isExternal: false\n  name: ToTraceString()\n  nameWithType: ObjectQuery.ToTraceString()\n  fullName: ObjectQuery.ToTraceString()\n- uid: System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Data.Objects.ObjectQuery\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  nameWithType: ObjectQuery.IEnumerable.GetEnumerator()\n  fullName: ObjectQuery.IEnumerable.GetEnumerator()\n- uid: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection\n  parent: System.Data.Objects.ObjectQuery\n  isExternal: false\n  name: IListSource.ContainsListCollection\n  nameWithType: ObjectQuery.IListSource.ContainsListCollection\n  fullName: ObjectQuery.IListSource.ContainsListCollection\n- uid: System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList\n  parent: System.Data.Objects.ObjectQuery\n  isExternal: false\n  name: IListSource.GetList()\n  nameWithType: ObjectQuery.IListSource.GetList()\n  fullName: ObjectQuery.IListSource.GetList()\n- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType\n  parent: System.Data.Objects.ObjectQuery\n  isExternal: false\n  name: IQueryable.ElementType\n  nameWithType: ObjectQuery.IQueryable.ElementType\n  fullName: ObjectQuery.IQueryable.ElementType\n- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression\n  parent: System.Data.Objects.ObjectQuery\n  isExternal: false\n  name: IQueryable.Expression\n  nameWithType: ObjectQuery.IQueryable.Expression\n  fullName: ObjectQuery.IQueryable.Expression\n- uid: System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider\n  parent: System.Data.Objects.ObjectQuery\n  isExternal: false\n  name: IQueryable.Provider\n  nameWithType: ObjectQuery.IQueryable.Provider\n  fullName: ObjectQuery.IQueryable.Provider\n- uid: System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableArray\n  isExternal: false\n  name: ToImmutableArray<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableList\n  isExternal: false\n  name: ToImmutableList<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  fullName: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Append<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: AsEnumerable<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Average(IEnumerable<Decimal>)\n  fullName: Enumerable.Average(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Double>)\n  nameWithType: Enumerable.Average(IEnumerable<Double>)\n  fullName: Enumerable.Average(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int32>)\n  nameWithType: Enumerable.Average(IEnumerable<Int32>)\n  fullName: Enumerable.Average(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int64>)\n  nameWithType: Enumerable.Average(IEnumerable<Int64>)\n  fullName: Enumerable.Average(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Single>)\n  nameWithType: Enumerable.Average(IEnumerable<Single>)\n  fullName: Enumerable.Average(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Max(IEnumerable<Decimal>)\n  fullName: Enumerable.Max(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Double>)\n  nameWithType: Enumerable.Max(IEnumerable<Double>)\n  fullName: Enumerable.Max(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int32>)\n  nameWithType: Enumerable.Max(IEnumerable<Int32>)\n  fullName: Enumerable.Max(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int64>)\n  nameWithType: Enumerable.Max(IEnumerable<Int64>)\n  fullName: Enumerable.Max(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Single>)\n  nameWithType: Enumerable.Max(IEnumerable<Single>)\n  fullName: Enumerable.Max(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Min(IEnumerable<Decimal>)\n  fullName: Enumerable.Min(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Double>)\n  nameWithType: Enumerable.Min(IEnumerable<Double>)\n  fullName: Enumerable.Min(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int32>)\n  nameWithType: Enumerable.Min(IEnumerable<Int32>)\n  fullName: Enumerable.Min(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int64>)\n  nameWithType: Enumerable.Min(IEnumerable<Int64>)\n  fullName: Enumerable.Min(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Single>)\n  nameWithType: Enumerable.Min(IEnumerable<Single>)\n  fullName: Enumerable.Min(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Prepend<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Reverse<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Skip<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Sum(IEnumerable<Decimal>)\n  fullName: Enumerable.Sum(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Double>)\n  nameWithType: Enumerable.Sum(IEnumerable<Double>)\n  fullName: Enumerable.Sum(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int32>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int32>)\n  fullName: Enumerable.Sum(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int64>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int64>)\n  fullName: Enumerable.Sum(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Single>)\n  nameWithType: Enumerable.Sum(IEnumerable<Single>)\n  fullName: Enumerable.Sum(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Take<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToArray<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToList<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  nameWithType: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  fullName: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel<TSource>(IEnumerable<TSource>)\n  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n  fullName: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Aggregate<TSource>(IQueryable<TSource>, Expression<Func<TSource,TSource,TSource>>)\n  nameWithType: Queryable.Aggregate<TSource>(IQueryable<TSource>, Expression<Func<TSource,TSource,TSource>>)\n  fullName: Queryable.Aggregate<TSource>(IQueryable<TSource>, Expression<Func<TSource,TSource,TSource>>)\n- uid: System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>)\n  nameWithType: Queryable.Aggregate<TSource,TAccumulate>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>)\n  fullName: Queryable.Aggregate<TSource,TAccumulate>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>)\n- uid: System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate,TResult>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>, Expression<Func<TAccumulate,TResult>>)\n  nameWithType: Queryable.Aggregate<TSource,TAccumulate,TResult>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>, Expression<Func<TAccumulate,TResult>>)\n  fullName: Queryable.Aggregate<TSource,TAccumulate,TResult>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>, Expression<Func<TAccumulate,TResult>>)\n- uid: System.Linq.Queryable.All``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: All<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.All<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  fullName: Queryable.All<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Any<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.Any<TSource>(IQueryable<TSource>)\n  fullName: Queryable.Any<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Any<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.Any<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  fullName: Queryable.Any<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.Queryable.Append``1(System.Linq.IQueryable{``0},``0)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Append<TSource>(IQueryable<TSource>, TSource)\n  nameWithType: Queryable.Append<TSource>(IQueryable<TSource>, TSource)\n  fullName: Queryable.Append<TSource>(IQueryable<TSource>, TSource)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable<TElement>(IEnumerable<TElement>)\n  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n  fullName: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Decimal>)\n  nameWithType: Queryable.Average(IQueryable<Decimal>)\n  fullName: Queryable.Average(IQueryable<Decimal>)\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Double>)\n  nameWithType: Queryable.Average(IQueryable<Double>)\n  fullName: Queryable.Average(IQueryable<Double>)\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Int32>)\n  nameWithType: Queryable.Average(IQueryable<Int32>)\n  fullName: Queryable.Average(IQueryable<Int32>)\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Int64>)\n  nameWithType: Queryable.Average(IQueryable<Int64>)\n  fullName: Queryable.Average(IQueryable<Int64>)\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Nullable<Decimal>>)\n  nameWithType: Queryable.Average(IQueryable<Nullable<Decimal>>)\n  fullName: Queryable.Average(IQueryable<Nullable<Decimal>>)\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Nullable<Double>>)\n  nameWithType: Queryable.Average(IQueryable<Nullable<Double>>)\n  fullName: Queryable.Average(IQueryable<Nullable<Double>>)\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Nullable<Int32>>)\n  nameWithType: Queryable.Average(IQueryable<Nullable<Int32>>)\n  fullName: Queryable.Average(IQueryable<Nullable<Int32>>)\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Nullable<Int64>>)\n  nameWithType: Queryable.Average(IQueryable<Nullable<Int64>>)\n  fullName: Queryable.Average(IQueryable<Nullable<Int64>>)\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Nullable<Single>>)\n  nameWithType: Queryable.Average(IQueryable<Nullable<Single>>)\n  fullName: Queryable.Average(IQueryable<Nullable<Single>>)\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Single>)\n  nameWithType: Queryable.Average(IQueryable<Single>)\n  fullName: Queryable.Average(IQueryable<Single>)\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Decimal>>)\n  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Decimal>>)\n  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Decimal>>)\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Double>>)\n  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Double>>)\n  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Double>>)\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32>>)\n  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32>>)\n  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32>>)\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int64>>)\n  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int64>>)\n  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int64>>)\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Decimal>>>)\n  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Decimal>>>)\n  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Decimal>>>)\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Double>>>)\n  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Double>>>)\n  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Double>>>)\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int32>>>)\n  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int32>>>)\n  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int32>>>)\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int64>>>)\n  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int64>>>)\n  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int64>>>)\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Single>>>)\n  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Single>>>)\n  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Single>>>)\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Single>>)\n  nameWithType: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Single>>)\n  fullName: Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Single>>)\n- uid: System.Linq.Queryable.Cast``1(System.Linq.IQueryable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Cast<TResult>(IQueryable)\n  nameWithType: Queryable.Cast<TResult>(IQueryable)\n  fullName: Queryable.Cast<TResult>(IQueryable)\n- uid: System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Concat<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n  nameWithType: Queryable.Concat<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n  fullName: Queryable.Concat<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Contains<TSource>(IQueryable<TSource>, TSource)\n  nameWithType: Queryable.Contains<TSource>(IQueryable<TSource>, TSource)\n  fullName: Queryable.Contains<TSource>(IQueryable<TSource>, TSource)\n- uid: System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Contains<TSource>(IQueryable<TSource>, TSource, IEqualityComparer<TSource>)\n  nameWithType: Queryable.Contains<TSource>(IQueryable<TSource>, TSource, IEqualityComparer<TSource>)\n  fullName: Queryable.Contains<TSource>(IQueryable<TSource>, TSource, IEqualityComparer<TSource>)\n- uid: System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Count<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.Count<TSource>(IQueryable<TSource>)\n  fullName: Queryable.Count<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Count<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.Count<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  fullName: Queryable.Count<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.DefaultIfEmpty<TSource>(IQueryable<TSource>)\n  fullName: Queryable.DefaultIfEmpty<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IQueryable<TSource>, TSource)\n  nameWithType: Queryable.DefaultIfEmpty<TSource>(IQueryable<TSource>, TSource)\n  fullName: Queryable.DefaultIfEmpty<TSource>(IQueryable<TSource>, TSource)\n- uid: System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Distinct<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.Distinct<TSource>(IQueryable<TSource>)\n  fullName: Queryable.Distinct<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Distinct<TSource>(IQueryable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Queryable.Distinct<TSource>(IQueryable<TSource>, IEqualityComparer<TSource>)\n  fullName: Queryable.Distinct<TSource>(IQueryable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0},System.Int32)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: ElementAt<TSource>(IQueryable<TSource>, Int32)\n  nameWithType: Queryable.ElementAt<TSource>(IQueryable<TSource>, Int32)\n  fullName: Queryable.ElementAt<TSource>(IQueryable<TSource>, Int32)\n- uid: System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0},System.Int32)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: ElementAtOrDefault<TSource>(IQueryable<TSource>, Int32)\n  nameWithType: Queryable.ElementAtOrDefault<TSource>(IQueryable<TSource>, Int32)\n  fullName: Queryable.ElementAtOrDefault<TSource>(IQueryable<TSource>, Int32)\n- uid: System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Except<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n  nameWithType: Queryable.Except<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n  fullName: Queryable.Except<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Except<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Queryable.Except<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Queryable.Except<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Queryable.First``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: First<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.First<TSource>(IQueryable<TSource>)\n  fullName: Queryable.First<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: First<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.First<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  fullName: Queryable.First<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.FirstOrDefault<TSource>(IQueryable<TSource>)\n  fullName: Queryable.FirstOrDefault<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.FirstOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  fullName: Queryable.FirstOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>)\n  nameWithType: Queryable.GroupBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>)\n  fullName: Queryable.GroupBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>)\n- uid: System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IEqualityComparer<TKey>)\n  nameWithType: Queryable.GroupBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IEqualityComparer<TKey>)\n  fullName: Queryable.GroupBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IEqualityComparer<TKey>)\n- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>)\n  nameWithType: Queryable.GroupBy<TSource,TKey,TElement>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>)\n  fullName: Queryable.GroupBy<TSource,TKey,TElement>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>)\n- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, IEqualityComparer<TKey>)\n  nameWithType: Queryable.GroupBy<TSource,TKey,TElement>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, IEqualityComparer<TKey>)\n  fullName: Queryable.GroupBy<TSource,TKey,TElement>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, IEqualityComparer<TKey>)\n- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TKey,IEnumerable<TSource>,TResult>>)\n  nameWithType: Queryable.GroupBy<TSource,TKey,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TKey,IEnumerable<TSource>,TResult>>)\n  fullName: Queryable.GroupBy<TSource,TKey,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TKey,IEnumerable<TSource>,TResult>>)\n- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TKey,IEnumerable<TSource>,TResult>>, IEqualityComparer<TKey>)\n  nameWithType: Queryable.GroupBy<TSource,TKey,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TKey,IEnumerable<TSource>,TResult>>, IEqualityComparer<TKey>)\n  fullName: Queryable.GroupBy<TSource,TKey,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TKey,IEnumerable<TSource>,TResult>>, IEqualityComparer<TKey>)\n- uid: System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>)\n  nameWithType: Queryable.GroupBy<TSource,TKey,TElement,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>)\n  fullName: Queryable.GroupBy<TSource,TKey,TElement,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>)\n- uid: System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>, IEqualityComparer<TKey>)\n  nameWithType: Queryable.GroupBy<TSource,TKey,TElement,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>, IEqualityComparer<TKey>)\n  fullName: Queryable.GroupBy<TSource,TKey,TElement,TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>, IEqualityComparer<TKey>)\n- uid: System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>)\n  nameWithType: Queryable.GroupJoin<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>)\n  fullName: Queryable.GroupJoin<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>)\n- uid: System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>, IEqualityComparer<TKey>)\n  nameWithType: Queryable.GroupJoin<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>, IEqualityComparer<TKey>)\n  fullName: Queryable.GroupJoin<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>, IEqualityComparer<TKey>)\n- uid: System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Intersect<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n  nameWithType: Queryable.Intersect<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n  fullName: Queryable.Intersect<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Intersect<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Queryable.Intersect<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Queryable.Intersect<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>)\n  nameWithType: Queryable.Join<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>)\n  fullName: Queryable.Join<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>)\n- uid: System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>, IEqualityComparer<TKey>)\n  nameWithType: Queryable.Join<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>, IEqualityComparer<TKey>)\n  fullName: Queryable.Join<TOuter,TInner,TKey,TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>, IEqualityComparer<TKey>)\n- uid: System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Last<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.Last<TSource>(IQueryable<TSource>)\n  fullName: Queryable.Last<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Last<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.Last<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  fullName: Queryable.Last<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: LastOrDefault<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.LastOrDefault<TSource>(IQueryable<TSource>)\n  fullName: Queryable.LastOrDefault<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: LastOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.LastOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  fullName: Queryable.LastOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: LongCount<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.LongCount<TSource>(IQueryable<TSource>)\n  fullName: Queryable.LongCount<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: LongCount<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.LongCount<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  fullName: Queryable.LongCount<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Max<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.Max<TSource>(IQueryable<TSource>)\n  fullName: Queryable.Max<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Max<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>)\n  nameWithType: Queryable.Max<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>)\n  fullName: Queryable.Max<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>)\n- uid: System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Min<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.Min<TSource>(IQueryable<TSource>)\n  fullName: Queryable.Min<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Min<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>)\n  nameWithType: Queryable.Min<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>)\n  fullName: Queryable.Min<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>)\n- uid: System.Linq.Queryable.OfType``1(System.Linq.IQueryable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: OfType<TResult>(IQueryable)\n  nameWithType: Queryable.OfType<TResult>(IQueryable)\n  fullName: Queryable.OfType<TResult>(IQueryable)\n- uid: System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>)\n  nameWithType: Queryable.OrderBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>)\n  fullName: Queryable.OrderBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>)\n- uid: System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)\n  nameWithType: Queryable.OrderBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)\n  fullName: Queryable.OrderBy<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)\n- uid: System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>)\n  nameWithType: Queryable.OrderByDescending<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>)\n  fullName: Queryable.OrderByDescending<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>)\n- uid: System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)\n  nameWithType: Queryable.OrderByDescending<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)\n  fullName: Queryable.OrderByDescending<TSource,TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)\n- uid: System.Linq.Queryable.Prepend``1(System.Linq.IQueryable{``0},``0)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Prepend<TSource>(IQueryable<TSource>, TSource)\n  nameWithType: Queryable.Prepend<TSource>(IQueryable<TSource>, TSource)\n  fullName: Queryable.Prepend<TSource>(IQueryable<TSource>, TSource)\n- uid: System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Reverse<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.Reverse<TSource>(IQueryable<TSource>)\n  fullName: Queryable.Reverse<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Select<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>)\n  nameWithType: Queryable.Select<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>)\n  fullName: Queryable.Select<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>)\n- uid: System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Select<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,TResult>>)\n  nameWithType: Queryable.Select<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,TResult>>)\n  fullName: Queryable.Select<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,TResult>>)\n- uid: System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TResult>>>)\n  nameWithType: Queryable.SelectMany<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TResult>>>)\n  fullName: Queryable.SelectMany<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TResult>>>)\n- uid: System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TResult>>>)\n  nameWithType: Queryable.SelectMany<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TResult>>>)\n  fullName: Queryable.SelectMany<TSource,TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TResult>>>)\n- uid: System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>)\n  nameWithType: Queryable.SelectMany<TSource,TCollection,TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>)\n  fullName: Queryable.SelectMany<TSource,TCollection,TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>)\n- uid: System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>)\n  nameWithType: Queryable.SelectMany<TSource,TCollection,TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>)\n  fullName: Queryable.SelectMany<TSource,TCollection,TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>)\n- uid: System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SequenceEqual<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n  nameWithType: Queryable.SequenceEqual<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n  fullName: Queryable.SequenceEqual<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SequenceEqual<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Queryable.SequenceEqual<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Queryable.SequenceEqual<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Single<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.Single<TSource>(IQueryable<TSource>)\n  fullName: Queryable.Single<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Single<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.Single<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  fullName: Queryable.Single<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IQueryable<TSource>)\n  nameWithType: Queryable.SingleOrDefault<TSource>(IQueryable<TSource>)\n  fullName: Queryable.SingleOrDefault<TSource>(IQueryable<TSource>)\n- uid: System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.SingleOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  fullName: Queryable.SingleOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0},System.Int32)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Skip<TSource>(IQueryable<TSource>, Int32)\n  nameWithType: Queryable.Skip<TSource>(IQueryable<TSource>, Int32)\n  fullName: Queryable.Skip<TSource>(IQueryable<TSource>, Int32)\n- uid: System.Linq.Queryable.SkipLast``1(System.Linq.IQueryable{``0},System.Int32)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SkipLast<TSource>(IQueryable<TSource>, Int32)\n  nameWithType: Queryable.SkipLast<TSource>(IQueryable<TSource>, Int32)\n  fullName: Queryable.SkipLast<TSource>(IQueryable<TSource>, Int32)\n- uid: System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SkipWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.SkipWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  fullName: Queryable.SkipWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SkipWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>)\n  nameWithType: Queryable.SkipWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>)\n  fullName: Queryable.SkipWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>)\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Decimal>)\n  nameWithType: Queryable.Sum(IQueryable<Decimal>)\n  fullName: Queryable.Sum(IQueryable<Decimal>)\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Double>)\n  nameWithType: Queryable.Sum(IQueryable<Double>)\n  fullName: Queryable.Sum(IQueryable<Double>)\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Int32>)\n  nameWithType: Queryable.Sum(IQueryable<Int32>)\n  fullName: Queryable.Sum(IQueryable<Int32>)\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Int64>)\n  nameWithType: Queryable.Sum(IQueryable<Int64>)\n  fullName: Queryable.Sum(IQueryable<Int64>)\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Nullable<Decimal>>)\n  nameWithType: Queryable.Sum(IQueryable<Nullable<Decimal>>)\n  fullName: Queryable.Sum(IQueryable<Nullable<Decimal>>)\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Nullable<Double>>)\n  nameWithType: Queryable.Sum(IQueryable<Nullable<Double>>)\n  fullName: Queryable.Sum(IQueryable<Nullable<Double>>)\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Nullable<Int32>>)\n  nameWithType: Queryable.Sum(IQueryable<Nullable<Int32>>)\n  fullName: Queryable.Sum(IQueryable<Nullable<Int32>>)\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Nullable<Int64>>)\n  nameWithType: Queryable.Sum(IQueryable<Nullable<Int64>>)\n  fullName: Queryable.Sum(IQueryable<Nullable<Int64>>)\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Nullable<Single>>)\n  nameWithType: Queryable.Sum(IQueryable<Nullable<Single>>)\n  fullName: Queryable.Sum(IQueryable<Nullable<Single>>)\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Single>)\n  nameWithType: Queryable.Sum(IQueryable<Single>)\n  fullName: Queryable.Sum(IQueryable<Single>)\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Decimal>>)\n  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Decimal>>)\n  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Decimal>>)\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Double>>)\n  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Double>>)\n  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Double>>)\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32>>)\n  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32>>)\n  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32>>)\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int64>>)\n  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int64>>)\n  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int64>>)\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Decimal>>>)\n  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Decimal>>>)\n  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Decimal>>>)\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Double>>>)\n  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Double>>>)\n  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Double>>>)\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int32>>>)\n  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int32>>>)\n  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int32>>>)\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int64>>>)\n  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int64>>>)\n  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int64>>>)\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Single>>>)\n  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Single>>>)\n  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Single>>>)\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Single>>)\n  nameWithType: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Single>>)\n  fullName: Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Single>>)\n- uid: System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0},System.Int32)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Take<TSource>(IQueryable<TSource>, Int32)\n  nameWithType: Queryable.Take<TSource>(IQueryable<TSource>, Int32)\n  fullName: Queryable.Take<TSource>(IQueryable<TSource>, Int32)\n- uid: System.Linq.Queryable.TakeLast``1(System.Linq.IQueryable{``0},System.Int32)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: TakeLast<TSource>(IQueryable<TSource>, Int32)\n  nameWithType: Queryable.TakeLast<TSource>(IQueryable<TSource>, Int32)\n  fullName: Queryable.TakeLast<TSource>(IQueryable<TSource>, Int32)\n- uid: System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: TakeWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.TakeWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  fullName: Queryable.TakeWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: TakeWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>)\n  nameWithType: Queryable.TakeWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>)\n  fullName: Queryable.TakeWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>)\n- uid: System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: ThenBy<TSource,TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>)\n  nameWithType: Queryable.ThenBy<TSource,TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>)\n  fullName: Queryable.ThenBy<TSource,TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>)\n- uid: System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: ThenBy<TSource,TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)\n  nameWithType: Queryable.ThenBy<TSource,TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)\n  fullName: Queryable.ThenBy<TSource,TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)\n- uid: System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: ThenByDescending<TSource,TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>)\n  nameWithType: Queryable.ThenByDescending<TSource,TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>)\n  fullName: Queryable.ThenByDescending<TSource,TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>)\n- uid: System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: ThenByDescending<TSource,TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)\n  nameWithType: Queryable.ThenByDescending<TSource,TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)\n  fullName: Queryable.ThenByDescending<TSource,TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>)\n- uid: System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Union<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n  nameWithType: Queryable.Union<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n  fullName: Queryable.Union<TSource>(IQueryable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Union<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Queryable.Union<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Queryable.Union<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Where<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.Where<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n  fullName: Queryable.Where<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Where<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>)\n  nameWithType: Queryable.Where<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>)\n  fullName: Queryable.Where<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>)\n- uid: System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Zip<TFirst,TSecond,TResult>(IQueryable<TFirst>, IEnumerable<TSecond>, Expression<Func<TFirst,TSecond,TResult>>)\n  nameWithType: Queryable.Zip<TFirst,TSecond,TResult>(IQueryable<TFirst>, IEnumerable<TSecond>, Expression<Func<TFirst,TSecond,TResult>>)\n  fullName: Queryable.Zip<TFirst,TSecond,TResult>(IQueryable<TFirst>, IEnumerable<TSecond>, Expression<Func<TFirst,TSecond,TResult>>)\n- uid: System.Web.UI.WebControls.QueryExtensions.SortBy``1(System.Linq.IQueryable{``0},System.String)\n  parent: System.Web.UI.WebControls.QueryExtensions\n  isExternal: false\n  name: SortBy<T>(IQueryable<T>, String)\n  nameWithType: QueryExtensions.SortBy<T>(IQueryable<T>, String)\n  fullName: QueryExtensions.SortBy<T>(IQueryable<T>, String)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>)\n  fullName: Extensions.Attributes(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>, XName)\n  fullName: Extensions.Attributes(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.DescendantNodes<T>(IEnumerable<T>)\n  fullName: Extensions.DescendantNodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodesAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>)\n  fullName: Extensions.Elements<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Elements<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: InDocumentOrder<T>(IEnumerable<T>)\n  nameWithType: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n  fullName: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Nodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.Nodes<T>(IEnumerable<T>)\n  fullName: Extensions.Nodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove(IEnumerable<XAttribute>)\n  nameWithType: Extensions.Remove(IEnumerable<XAttribute>)\n  fullName: Extensions.Remove(IEnumerable<XAttribute>)\n- uid: System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove<T>(IEnumerable<T>)\n  nameWithType: Extensions.Remove<T>(IEnumerable<T>)\n  fullName: Extensions.Remove<T>(IEnumerable<T>)\n- uid: System.Collections.Generic.IEnumerable`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.ComponentModel.IListSource\n  parent: System.ComponentModel\n  isExternal: false\n  name: IListSource\n  nameWithType: IListSource\n  fullName: System.ComponentModel.IListSource\n- uid: System.Linq.IOrderedQueryable`1\n  parent: System.Linq\n  isExternal: false\n  name: IOrderedQueryable<T>\n  nameWithType: IOrderedQueryable<T>\n  fullName: System.Linq.IOrderedQueryable<T>\n- uid: System.Linq.IQueryable`1\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<T>\n  nameWithType: IQueryable<T>\n  fullName: System.Linq.IQueryable<T>\n"}