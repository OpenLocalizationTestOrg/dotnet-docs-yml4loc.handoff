{"nodes":[{"content":"<xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> is a lightweight, per-instance runtime for executing a workflow program. It can be constructed to create a new workflow instance or from existing instance state. The APIs that <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> exposes are the minimal set of runtime controls from which higher level operations can be implemented. This API set represents the entire breadth of functionality of the runtime. <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> is an abstract class and relies on a host’s implementation of its abstract methods in order to provide host functionality such as synchronization, persistence, tracking, and extensions.","nodes":[{"pos":[0,756],"content":"<xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> is a lightweight, per-instance runtime for executing a workflow program. It can be constructed to create a new workflow instance or from existing instance state. The APIs that <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> exposes are the minimal set of runtime controls from which higher level operations can be implemented. This API set represents the entire breadth of functionality of the runtime. <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> is an abstract class and relies on a host’s implementation of its abstract methods in order to provide host functionality such as synchronization, persistence, tracking, and extensions.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph> is a lightweight, per-instance runtime for executing a workflow program.","pos":[0,136],"source":"<xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> is a lightweight, per-instance runtime for executing a workflow program."},{"content":"It can be constructed to create a new workflow instance or from existing instance state.","pos":[137,225]},{"content":"The APIs that <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"&gt;&lt;/xref&gt;</ph> exposes are the minimal set of runtime controls from which higher level operations can be implemented.","pos":[226,430],"source":" The APIs that <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> exposes are the minimal set of runtime controls from which higher level operations can be implemented."},{"content":"This API set represents the entire breadth of functionality of the runtime.","pos":[431,506]},{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph> is an abstract class and relies on a host’s implementation of its abstract methods in order to provide host functionality such as synchronization, persistence, tracking, and extensions.","pos":[507,756],"source":"<xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> is an abstract class and relies on a host’s implementation of its abstract methods in order to provide host functionality such as synchronization, persistence, tracking, and extensions."}]}],"pos":[3654,4411],"yaml":true},{"content":"<xref:System.Activities.Hosting.WorkflowInstance> is single threaded and assumes that the host synchronizes all access to it. An attempt to call multiple APIs simultaneously will result in an <xref:System.InvalidOperationException> being thrown.  \n  \n Internally, a <xref:System.Activities.Hosting.WorkflowInstance> has two states: Running and Paused. The only way to cause the runtime to transition from paused to running is to call <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>. All actions (except Pause) can only be taken while the runtime is Paused. The runtime will become spontaneously Paused in the following situations:  \n  \n-   An error fatal to the runtime has occurred. The host will be signaled through <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> (which does not signal a transition to Paused) and then notified through <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>.  \n  \n-   An exception in the workflow was uncaught and escaped the root. The host will be notified through the <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A> method.  \n  \n-   The scheduler has run out of work items and is now <xref:System.Activities.Hosting.WorkflowInstanceState.Idle>. The host will be notified through the <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> method. Note that the scheduler could have run out of work items because the instance is idle or because the instance is complete. The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> value of the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property can be used to differentiate between the two.  \n  \n The host can request a change from Running to Paused by calling the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> or <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A> methods of the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> instance returned by the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property. This request should not be considered to have a specific response meaning that the host should not attempt to correlate an OnNotify* or <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> with a specific call to pause. In response to a pause request, the runtime may transition to Paused and call <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> while the scheduler still has pending work items. The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> value of the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property can be used to determine whether the scheduler has no more work or was interrupted by a request to pause.  \n  \n The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> method of the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> instance returned by the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property is the only method which can be called while the <xref:System.Activities.Hosting.WorkflowInstance> is in the Running state. All other methods will throw an <xref:System.InvalidOperationException> if called.Given the rules for how <xref:System.Activities.Hosting.WorkflowInstance> transitions from one state to another, the public notion of Running and Paused can be defined as follows:  \n  \n-   Running – The state between a call to <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A> and the next WorkflowInstance.OnNotify*.  \n  \n-   Paused – The state between the last WorkflowInstance.OnNotify* and the next call to <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.","nodes":[{"pos":[0,245],"content":"<xref:System.Activities.Hosting.WorkflowInstance> is single threaded and assumes that the host synchronizes all access to it. An attempt to call multiple APIs simultaneously will result in an <xref:System.InvalidOperationException> being thrown.","nodes":[{"content":"<xref:System.Activities.Hosting.WorkflowInstance> is single threaded and assumes that the host synchronizes all access to it. An attempt to call multiple APIs simultaneously will result in an <xref:System.InvalidOperationException> being thrown.","pos":[0,245],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> is single threaded and assumes that the host synchronizes all access to it.","pos":[0,125],"source":"<xref:System.Activities.Hosting.WorkflowInstance> is single threaded and assumes that the host synchronizes all access to it."},{"content":"An attempt to call multiple APIs simultaneously will result in an <ph id=\"ph1\">&lt;xref:System.InvalidOperationException&gt;</ph> being thrown.","pos":[126,245],"source":" An attempt to call multiple APIs simultaneously will result in an <xref:System.InvalidOperationException> being thrown."}]}]},{"pos":[252,663],"content":"Internally, a <xref:System.Activities.Hosting.WorkflowInstance> has two states: Running and Paused. The only way to cause the runtime to transition from paused to running is to call <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>. All actions (except Pause) can only be taken while the runtime is Paused. The runtime will become spontaneously Paused in the following situations:","nodes":[{"content":"Internally, a <xref:System.Activities.Hosting.WorkflowInstance> has two states: Running and Paused. The only way to cause the runtime to transition from paused to running is to call <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>. All actions (except Pause) can only be taken while the runtime is Paused. The runtime will become spontaneously Paused in the following situations:","pos":[0,411],"nodes":[{"content":"Internally, a <ph id=\"ph1\">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> has two states: Running and Paused.","pos":[0,99],"source":"Internally, a <xref:System.Activities.Hosting.WorkflowInstance> has two states: Running and Paused."},{"content":"The only way to cause the runtime to transition from paused to running is to call <ph id=\"ph1\">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A&gt;</ph>.","pos":[100,263],"source":" The only way to cause the runtime to transition from paused to running is to call <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>."},{"content":"All actions (except Pause) can only be taken while the runtime is Paused.","pos":[264,337]},{"content":"The runtime will become spontaneously Paused in the following situations:","pos":[338,411]}]}]},{"pos":[673,960],"content":"An error fatal to the runtime has occurred. The host will be signaled through <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> (which does not signal a transition to Paused) and then notified through <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>.","nodes":[{"content":"An error fatal to the runtime has occurred. The host will be signaled through <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> (which does not signal a transition to Paused) and then notified through <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>.","pos":[0,287],"nodes":[{"content":"An error fatal to the runtime has occurred.","pos":[0,43]},{"content":"The host will be signaled through <ph id=\"ph1\">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> (which does not signal a transition to Paused) and then notified through <ph id=\"ph2\">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A&gt;</ph>.","pos":[44,287],"source":" The host will be signaled through <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> (which does not signal a transition to Paused) and then notified through <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>."}]}]},{"pos":[970,1159],"content":"An exception in the workflow was uncaught and escaped the root. The host will be notified through the <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A> method.","nodes":[{"content":"An exception in the workflow was uncaught and escaped the root. The host will be notified through the <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A> method.","pos":[0,189],"nodes":[{"content":"An exception in the workflow was uncaught and escaped the root.","pos":[0,63]},{"content":"The host will be notified through the <ph id=\"ph1\">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A&gt;</ph> method.","pos":[64,189],"source":" The host will be notified through the <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A> method."}]}]},{"pos":[1169,1736],"content":"The scheduler has run out of work items and is now <xref:System.Activities.Hosting.WorkflowInstanceState.Idle>. The host will be notified through the <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> method. Note that the scheduler could have run out of work items because the instance is idle or because the instance is complete. The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> value of the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property can be used to differentiate between the two.","nodes":[{"content":"The scheduler has run out of work items and is now <xref:System.Activities.Hosting.WorkflowInstanceState.Idle>. The host will be notified through the <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> method. Note that the scheduler could have run out of work items because the instance is idle or because the instance is complete. The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> value of the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property can be used to differentiate between the two.","pos":[0,567],"nodes":[{"content":"The scheduler has run out of work items and is now <ph id=\"ph1\">&lt;xref:System.Activities.Hosting.WorkflowInstanceState.Idle&gt;</ph>.","pos":[0,111],"source":"The scheduler has run out of work items and is now <xref:System.Activities.Hosting.WorkflowInstanceState.Idle>."},{"content":"The host will be notified through the <ph id=\"ph1\">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A&gt;</ph> method.","pos":[112,225],"source":" The host will be notified through the <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> method."},{"content":"Note that the scheduler could have run out of work items because the instance is idle or because the instance is complete.","pos":[226,348]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A&gt;</ph> value of the <ph id=\"ph2\">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> property can be used to differentiate between the two.","pos":[349,567],"source":" The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> value of the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property can be used to differentiate between the two."}]}]},{"pos":[1743,2899],"content":"The host can request a change from Running to Paused by calling the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> or <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A> methods of the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> instance returned by the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property. This request should not be considered to have a specific response meaning that the host should not attempt to correlate an OnNotify* or <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> with a specific call to pause. In response to a pause request, the runtime may transition to Paused and call <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> while the scheduler still has pending work items. The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> value of the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property can be used to determine whether the scheduler has no more work or was interrupted by a request to pause.","nodes":[{"content":"The host can request a change from Running to Paused by calling the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> or <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A> methods of the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> instance returned by the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property. This request should not be considered to have a specific response meaning that the host should not attempt to correlate an OnNotify* or <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> with a specific call to pause. In response to a pause request, the runtime may transition to Paused and call <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> while the scheduler still has pending work items. The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> value of the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property can be used to determine whether the scheduler has no more work or was interrupted by a request to pause.","pos":[0,1156],"nodes":[{"content":"The host can request a change from Running to Paused by calling the <ph id=\"ph1\">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A&gt;</ph> methods of the <ph id=\"ph3\">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph> instance returned by the <ph id=\"ph4\">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> property.","pos":[0,446],"source":"The host can request a change from Running to Paused by calling the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> or <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A> methods of the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> instance returned by the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property."},{"content":"This request should not be considered to have a specific response meaning that the host should not attempt to correlate an OnNotify* or <ph id=\"ph1\">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> with a specific call to pause.","pos":[447,681],"source":" This request should not be considered to have a specific response meaning that the host should not attempt to correlate an OnNotify* or <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> with a specific call to pause."},{"content":"In response to a pause request, the runtime may transition to Paused and call <ph id=\"ph1\">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A&gt;</ph> while the scheduler still has pending work items.","pos":[682,877],"source":" In response to a pause request, the runtime may transition to Paused and call <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> while the scheduler still has pending work items."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A&gt;</ph> value of the <ph id=\"ph2\">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> property can be used to determine whether the scheduler has no more work or was interrupted by a request to pause.","pos":[878,1156],"source":" The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> value of the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property can be used to determine whether the scheduler has no more work or was interrupted by a request to pause."}]}]},{"pos":[2906,3571],"content":"The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> method of the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> instance returned by the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property is the only method which can be called while the <xref:System.Activities.Hosting.WorkflowInstance> is in the Running state. All other methods will throw an <xref:System.InvalidOperationException> if called.Given the rules for how <xref:System.Activities.Hosting.WorkflowInstance> transitions from one state to another, the public notion of Running and Paused can be defined as follows:","nodes":[{"content":"The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> method of the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> instance returned by the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property is the only method which can be called while the <xref:System.Activities.Hosting.WorkflowInstance> is in the Running state. All other methods will throw an <xref:System.InvalidOperationException> if called.Given the rules for how <xref:System.Activities.Hosting.WorkflowInstance> transitions from one state to another, the public notion of Running and Paused can be defined as follows:","pos":[0,665],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph> instance returned by the <ph id=\"ph3\">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> property is the only method which can be called while the <ph id=\"ph4\">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> is in the Running state.","pos":[0,403],"source":"The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> method of the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> instance returned by the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property is the only method which can be called while the <xref:System.Activities.Hosting.WorkflowInstance> is in the Running state."},{"content":"All other methods will throw an <ph id=\"ph1\">&lt;xref:System.InvalidOperationException&gt;</ph> if called.Given the rules for how <ph id=\"ph2\">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> transitions from one state to another, the public notion of Running and Paused can be defined as follows:","pos":[404,665],"source":" All other methods will throw an <xref:System.InvalidOperationException> if called.Given the rules for how <xref:System.Activities.Hosting.WorkflowInstance> transitions from one state to another, the public notion of Running and Paused can be defined as follows:"}]}]},{"pos":[3581,3740],"content":"Running – The state between a call to <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A> and the next WorkflowInstance.OnNotify*.","nodes":[{"content":"Running – The state between a call to <ph id=\"ph1\">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A&gt;</ph> and the next WorkflowInstance.OnNotify*.","pos":[0,159],"source":"Running – The state between a call to <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A> and the next WorkflowInstance.OnNotify*."}]},{"pos":[3750,3915],"content":"Paused – The state between the last WorkflowInstance.OnNotify* and the next call to <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.","nodes":[{"content":"Paused – The state between the last WorkflowInstance.OnNotify* and the next call to <ph id=\"ph1\">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A&gt;</ph>.","pos":[0,165],"source":"Paused – The state between the last WorkflowInstance.OnNotify* and the next call to <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>."}]}],"pos":[4422,8356],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> class with the specified workflow definition.","nodes":[{"pos":[0,143],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph> class with the specified workflow definition.","source":"Initializes a new instance of the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> class with the specified workflow definition."}],"pos":[9908,10052],"yaml":true},{"content":"The activity that defines the workflow.","nodes":[{"pos":[0,39],"content":"The activity that defines the workflow.","nodes":[{"content":"The activity that defines the workflow.","pos":[0,39]}]}],"pos":[10254,10294],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> class with the specified workflow definition and definition identity.","nodes":[{"pos":[0,167],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph> class with the specified workflow definition and definition identity.","source":"Initializes a new instance of the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> class with the specified workflow definition and definition identity."}],"pos":[11618,11786],"yaml":true},{"content":"The activity that defines the workflow.","nodes":[{"pos":[0,39],"content":"The activity that defines the workflow.","nodes":[{"content":"The activity that defines the workflow.","pos":[0,39]}]}],"pos":[12043,12083],"yaml":true},{"content":"The definition identity.","nodes":[{"pos":[0,24],"content":"The definition identity.","nodes":[{"content":"The definition identity.","pos":[0,24]}]}],"pos":[12178,12203],"yaml":true},{"content":"Called by the workflow runtime to begin sending pending tracking records to tracking participants asynchronously.","nodes":[{"pos":[0,113],"content":"Called by the workflow runtime to begin sending pending tracking records to tracking participants asynchronously.","nodes":[{"content":"Called by the workflow runtime to begin sending pending tracking records to tracking participants asynchronously.","pos":[0,113]}]}],"pos":[13589,13703],"yaml":true},{"content":"The time period after which to abort the attempt.","nodes":[{"pos":[0,49],"content":"The time period after which to abort the attempt.","nodes":[{"content":"The time period after which to abort the attempt.","pos":[0,49]}]}],"pos":[13914,13964],"yaml":true},{"content":"The method to be called when the track operation has completed.","nodes":[{"pos":[0,63],"content":"The method to be called when the track operation has completed.","nodes":[{"content":"The method to be called when the track operation has completed.","pos":[0,63]}]}],"pos":[14035,14099],"yaml":true},{"content":"The information about the asynchronous operation.","nodes":[{"pos":[0,49],"content":"The information about the asynchronous operation.","nodes":[{"content":"The information about the asynchronous operation.","pos":[0,49]}]}],"pos":[14160,14210],"yaml":true},{"content":"The status of the current track operation.","nodes":[{"pos":[0,42],"content":"The status of the current track operation.","nodes":[{"content":"The status of the current track operation.","pos":[0,42]}]}],"pos":[14273,14316],"yaml":true},{"content":"Gets the <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> instance for this <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>.","nodes":[{"pos":[0,179],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"&gt;&lt;/xref&gt;</ph> instance for this <ph id=\"ph2\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> instance for this <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>."}],"pos":[15379,15559],"yaml":true},{"content":"The controller instance for this workflow instance.","nodes":[{"pos":[0,51],"content":"The controller instance for this workflow instance.","nodes":[{"content":"The controller instance for this workflow instance.","pos":[0,51]}]}],"pos":[15789,15841],"yaml":true},{"content":"Gets or sets the definition identity of <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>.","nodes":[{"pos":[0,104],"content":"Gets or sets the definition identity of <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the definition identity of <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>."}],"pos":[16937,17042],"yaml":true},{"content":"The definition identity of <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>.","nodes":[{"pos":[0,91],"content":"The definition identity of <ph id=\"ph1\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance\"&gt;&lt;/xref&gt;</ph>.","source":"The definition identity of <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>."}],"pos":[17213,17305],"yaml":true},{"content":"Calls <xref href=\"System.Disposable.Dispose\"></xref> on all extensions that implement <xref href=\"System.IDisposable\"></xref>.","nodes":[{"pos":[0,126],"content":"Calls <ph id=\"ph1\">&lt;xref href=\"System.Disposable.Dispose\"&gt;&lt;/xref&gt;</ph> on all extensions that implement <ph id=\"ph2\">&lt;xref href=\"System.IDisposable\"&gt;&lt;/xref&gt;</ph>.","source":"Calls <xref href=\"System.Disposable.Dispose\"></xref> on all extensions that implement <xref href=\"System.IDisposable\"></xref>."}],"pos":[18407,18534],"yaml":true},{"content":"Called by the workflow runtime to end the track operation.","nodes":[{"pos":[0,58],"content":"Called by the workflow runtime to end the track operation.","nodes":[{"content":"Called by the workflow runtime to end the track operation.","pos":[0,58]}]}],"pos":[19849,19908],"yaml":true},{"content":"The status of the asynchronous track operation.","nodes":[{"pos":[0,47],"content":"The status of the asynchronous track operation.","nodes":[{"content":"The status of the asynchronous track operation.","pos":[0,47]}]}],"pos":[20077,20125],"yaml":true},{"content":"Called by the workflow runtime to send pending tracking records to tracking participants.","nodes":[{"pos":[0,89],"content":"Called by the workflow runtime to send pending tracking records to tracking participants.","nodes":[{"content":"Called by the workflow runtime to send pending tracking records to tracking participants.","pos":[0,89]}]}],"pos":[21325,21415],"yaml":true},{"content":"The time period after which to abort the attempt.","nodes":[{"pos":[0,49],"content":"The time period after which to abort the attempt.","nodes":[{"content":"The time period after which to abort the attempt.","pos":[0,49]}]}],"pos":[21575,21625],"yaml":true},{"content":"Retrieves the list of activity that is blocking the update of the workflow.","nodes":[{"pos":[0,75],"content":"Retrieves the list of activity that is blocking the update of the workflow.","nodes":[{"content":"Retrieves the list of activity that is blocking the update of the workflow.","pos":[0,75]}]}],"pos":[23053,23129],"yaml":true},{"content":"The deserialized runtime state.","nodes":[{"pos":[0,31],"content":"The deserialized runtime state.","nodes":[{"content":"The deserialized runtime state.","pos":[0,31]}]}],"pos":[23477,23509],"yaml":true},{"content":"The update map.","nodes":[{"pos":[0,15],"content":"The update map.","nodes":[{"content":"The update map.","pos":[0,15]}]}],"pos":[23609,23625],"yaml":true},{"content":"The list of activity that is blocking the update.","nodes":[{"pos":[0,49],"content":"The list of activity that is blocking the update.","nodes":[{"content":"The list of activity that is blocking the update.","pos":[0,49]}]}],"pos":[23757,23807],"yaml":true},{"content":"Returns an extension of the specified type.","nodes":[{"pos":[0,43],"content":"Returns an extension of the specified type.","nodes":[{"content":"Returns an extension of the specified type.","pos":[0,43]}]}],"pos":[24906,24950],"yaml":true},{"content":"The type of the extension to find.","nodes":[{"pos":[0,34],"content":"The type of the extension to find.","nodes":[{"content":"The type of the extension to find.","pos":[0,34]}]}],"pos":[25093,25128],"yaml":true},{"content":"An extension of the specified type.","nodes":[{"pos":[0,35],"content":"An extension of the specified type.","nodes":[{"content":"An extension of the specified type.","pos":[0,35]}]}],"pos":[25173,25209],"yaml":true},{"content":"Returns all extensions found for the specified type.","nodes":[{"pos":[0,52],"content":"Returns all extensions found for the specified type.","nodes":[{"content":"Returns all extensions found for the specified type.","pos":[0,52]}]}],"pos":[26302,26355],"yaml":true},{"content":"The type of the extension to find.","nodes":[{"pos":[0,34],"content":"The type of the extension to find.","nodes":[{"content":"The type of the extension to find.","pos":[0,34]}]}],"pos":[26539,26574],"yaml":true},{"content":"All extensions found for the specified type.","nodes":[{"pos":[0,44],"content":"All extensions found for the specified type.","nodes":[{"content":"All extensions found for the specified type.","pos":[0,44]}]}],"pos":[26658,26703],"yaml":true},{"content":"Gets or sets the root environment for the workflow instance’s arguments and variables.","nodes":[{"pos":[0,86],"content":"Gets or sets the root environment for the workflow instance’s arguments and variables.","nodes":[{"content":"Gets or sets the root environment for the workflow instance’s arguments and variables.","pos":[0,86]}]}],"pos":[27787,27874],"yaml":true},{"content":"If this property is set after the workflow instance is initialized and <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> returns `true`, an <xref:System.InvalidOperationException> is thrown.","nodes":[{"pos":[0,204],"content":"If this property is set after the workflow instance is initialized and <ph id=\"ph1\">&lt;xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A&gt;</ph> returns <ph id=\"ph2\">`true`</ph>, an <ph id=\"ph3\">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.","source":"If this property is set after the workflow instance is initialized and <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> returns `true`, an <xref:System.InvalidOperationException> is thrown."}],"pos":[27885,28090],"yaml":true,"extradata":"MT"},{"content":"The root environment for the workflow instance’s arguments and variables.","nodes":[{"pos":[0,73],"content":"The root environment for the workflow instance’s arguments and variables.","nodes":[{"content":"The root environment for the workflow instance’s arguments and variables.","pos":[0,73]}]}],"pos":[28287,28361],"yaml":true},{"content":"Gets the unique identifier for the workflow instance.","nodes":[{"pos":[0,53],"content":"Gets the unique identifier for the workflow instance.","nodes":[{"content":"Gets the unique identifier for the workflow instance.","pos":[0,53]}]}],"pos":[29366,29420],"yaml":true},{"content":"The unique identifier for the workflow instance.","nodes":[{"pos":[0,48],"content":"The unique identifier for the workflow instance.","nodes":[{"content":"The unique identifier for the workflow instance.","pos":[0,48]}]}],"pos":[29531,29580],"yaml":true},{"content":"Called by the host to initialize the workflow instance with the workflow run-time state.","nodes":[{"pos":[0,88],"content":"Called by the host to initialize the workflow instance with the workflow run-time state.","nodes":[{"content":"Called by the host to initialize the workflow instance with the workflow run-time state.","pos":[0,88]}]}],"pos":[30687,30776],"yaml":true},{"content":"The run-time state used to execute the workflow.","nodes":[{"pos":[0,48],"content":"The run-time state used to execute the workflow.","nodes":[{"content":"The run-time state used to execute the workflow.","pos":[0,48]}]}],"pos":[30956,31005],"yaml":true},{"content":"Called by the host to initialize the workflow instance with the argument values and execution properties.","nodes":[{"pos":[0,105],"content":"Called by the host to initialize the workflow instance with the argument values and execution properties.","nodes":[{"content":"Called by the host to initialize the workflow instance with the argument values and execution properties.","pos":[0,105]}]}],"pos":[32564,32670],"yaml":true},{"content":"The input parameters to the workflow, keyed by argument name.","nodes":[{"pos":[0,61],"content":"The input parameters to the workflow, keyed by argument name.","nodes":[{"content":"The input parameters to the workflow, keyed by argument name.","pos":[0,61]}]}],"pos":[33035,33097],"yaml":true},{"content":"The list of workflow execution properties.","nodes":[{"pos":[0,42],"content":"The list of workflow execution properties.","nodes":[{"content":"The list of workflow execution properties.","pos":[0,42]}]}],"pos":[33225,33268],"yaml":true},{"content":"Called by the host to initialize the workflow instance with the workflow run-time state and update map.","nodes":[{"pos":[0,103],"content":"Called by the host to initialize the workflow instance with the workflow run-time state and update map.","nodes":[{"content":"Called by the host to initialize the workflow instance with the workflow run-time state and update map.","pos":[0,103]}]}],"pos":[34584,34688],"yaml":true},{"content":"The run-time state used to execute the workflow.","nodes":[{"pos":[0,48],"content":"The run-time state used to execute the workflow.","nodes":[{"content":"The run-time state used to execute the workflow.","pos":[0,48]}]}],"pos":[34928,34977],"yaml":true},{"content":"The update map.","nodes":[{"pos":[0,15],"content":"The update map.","nodes":[{"content":"The update map.","pos":[0,15]}]}],"pos":[35077,35093],"yaml":true},{"content":"Gets a value that indicates whether the workflow instance has been initialized.","nodes":[{"pos":[0,79],"content":"Gets a value that indicates whether the workflow instance has been initialized.","nodes":[{"content":"Gets a value that indicates whether the workflow instance has been initialized.","pos":[0,79]}]}],"pos":[36141,36221],"yaml":true},{"content":"`true` if the workflow instance has been initialized; otherwise, `false`.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> if the workflow instance has been initialized; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the workflow instance has been initialized; otherwise, `false`."}],"pos":[36337,36413],"yaml":true},{"content":"Called by the workflow runtime to notify the host that new instance keys should be associated with this instance.","nodes":[{"pos":[0,113],"content":"Called by the workflow runtime to notify the host that new instance keys should be associated with this instance.","nodes":[{"content":"Called by the workflow runtime to notify the host that new instance keys should be associated with this instance.","pos":[0,113]}]}],"pos":[38029,38143],"yaml":true},{"content":"The instance keys to associate with this workflow instance.","nodes":[{"pos":[0,59],"content":"The instance keys to associate with this workflow instance.","nodes":[{"content":"The instance keys to associate with this workflow instance.","pos":[0,59]}]}],"pos":[38497,38557],"yaml":true},{"content":"The method to be called when the operation completes.","nodes":[{"pos":[0,53],"content":"The method to be called when the operation completes.","nodes":[{"content":"The method to be called when the operation completes.","pos":[0,53]}]}],"pos":[38628,38682],"yaml":true},{"content":"An optional application-specific object that contains information about the asynchronous operation.","nodes":[{"pos":[0,99],"content":"An optional application-specific object that contains information about the asynchronous operation.","nodes":[{"content":"An optional application-specific object that contains information about the asynchronous operation.","pos":[0,99]}]}],"pos":[38743,38843],"yaml":true},{"content":"A reference to the asynchronous associate keys operation.","nodes":[{"pos":[0,57],"content":"A reference to the asynchronous associate keys operation.","nodes":[{"content":"A reference to the asynchronous associate keys operation.","pos":[0,57]}]}],"pos":[38906,38964],"yaml":true},{"content":"Asynchronous call to ask host to flush pending tracking records to tracking participants.","nodes":[{"pos":[0,89],"content":"Asynchronous call to ask host to flush pending tracking records to tracking participants.","nodes":[{"content":"Asynchronous call to ask host to flush pending tracking records to tracking participants.","pos":[0,89]}]}],"pos":[40299,40389],"yaml":true},{"content":"The method to be called when the track operation has completed.","nodes":[{"pos":[0,63],"content":"The method to be called when the track operation has completed.","nodes":[{"content":"The method to be called when the track operation has completed.","pos":[0,63]}]}],"pos":[40598,40662],"yaml":true},{"content":"The information about the asynchronous operation.","nodes":[{"pos":[0,49],"content":"The information about the asynchronous operation.","nodes":[{"content":"The information about the asynchronous operation.","pos":[0,49]}]}],"pos":[40723,40773],"yaml":true},{"content":"The status of the current track operation.","nodes":[{"pos":[0,42],"content":"The status of the current track operation.","nodes":[{"content":"The status of the current track operation.","pos":[0,42]}]}],"pos":[40836,40879],"yaml":true},{"content":"Asynchronous call to ask the host to persist the workflow.","nodes":[{"pos":[0,58],"content":"Asynchronous call to ask the host to persist the workflow.","nodes":[{"content":"Asynchronous call to ask the host to persist the workflow.","pos":[0,58]}]}],"pos":[42143,42202],"yaml":true},{"content":"The method to be called when the persist operation has completed.","nodes":[{"pos":[0,65],"content":"The method to be called when the persist operation has completed.","nodes":[{"content":"The method to be called when the persist operation has completed.","pos":[0,65]}]}],"pos":[42399,42465],"yaml":true},{"content":"An optional application-specific object that contains information about the asynchronous operation.","nodes":[{"pos":[0,99],"content":"An optional application-specific object that contains information about the asynchronous operation.","nodes":[{"content":"An optional application-specific object that contains information about the asynchronous operation.","pos":[0,99]}]}],"pos":[42526,42626],"yaml":true},{"content":"A reference to the current persist operation.","nodes":[{"pos":[0,45],"content":"A reference to the current persist operation.","nodes":[{"content":"A reference to the current persist operation.","pos":[0,45]}]}],"pos":[42689,42735],"yaml":true},{"content":"Called by the workflow runtime to notify the host that a resume bookmark operation is beginning.","nodes":[{"pos":[0,96],"content":"Called by the workflow runtime to notify the host that a resume bookmark operation is beginning.","nodes":[{"content":"Called by the workflow runtime to notify the host that a resume bookmark operation is beginning.","pos":[0,96]}]}],"pos":[44283,44380],"yaml":true},{"content":"The bookmark to resume.","nodes":[{"pos":[0,23],"content":"The bookmark to resume.","nodes":[{"content":"The bookmark to resume.","pos":[0,23]}]}],"pos":[44659,44683],"yaml":true},{"content":"The data to be passed to the activity that created the <xref href=\"System.Activities.Bookmark\"></xref>.","nodes":[{"pos":[0,103],"content":"The data to be passed to the activity that created the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Bookmark\"&gt;&lt;/xref&gt;</ph>.","source":"The data to be passed to the activity that created the <xref href=\"System.Activities.Bookmark\"></xref>."}],"pos":[44744,44848],"yaml":true},{"content":"The interval in which the resume operation must complete before the operation is canceled and a <xref href=\"System.TimeoutException\"></xref> is thrown.","nodes":[{"pos":[0,151],"content":"The interval in which the resume operation must complete before the operation is canceled and a <ph id=\"ph1\">&lt;xref href=\"System.TimeoutException\"&gt;&lt;/xref&gt;</ph> is thrown.","source":"The interval in which the resume operation must complete before the operation is canceled and a <xref href=\"System.TimeoutException\"></xref> is thrown."}],"pos":[44913,45065],"yaml":true},{"content":"The method to be called when the resume operation has completed.","nodes":[{"pos":[0,64],"content":"The method to be called when the resume operation has completed.","nodes":[{"content":"The method to be called when the resume operation has completed.","pos":[0,64]}]}],"pos":[45136,45201],"yaml":true},{"content":"An optional application-specific object that contains information about the asynchronous operation.","nodes":[{"pos":[0,99],"content":"An optional application-specific object that contains information about the asynchronous operation.","nodes":[{"content":"An optional application-specific object that contains information about the asynchronous operation.","pos":[0,99]}]}],"pos":[45262,45362],"yaml":true},{"content":"A reference to the asynchronous resume operation.","nodes":[{"pos":[0,49],"content":"A reference to the asynchronous resume operation.","nodes":[{"content":"A reference to the asynchronous resume operation.","pos":[0,49]}]}],"pos":[45425,45475],"yaml":true},{"content":"Called by the workflow runtime to notify the host that a certain set of instance keys should no longer be associated with this instance.","nodes":[{"pos":[0,136],"content":"Called by the workflow runtime to notify the host that a certain set of instance keys should no longer be associated with this instance.","nodes":[{"content":"Called by the workflow runtime to notify the host that a certain set of instance keys should no longer be associated with this instance.","pos":[0,136]}]}],"pos":[46916,47053],"yaml":true},{"content":"The list of keys to disassociate.","nodes":[{"pos":[0,33],"content":"The list of keys to disassociate.","nodes":[{"content":"The list of keys to disassociate.","pos":[0,33]}]}],"pos":[47359,47393],"yaml":true},{"content":"Called by the workflow runtime to notify the host that an associate keys operation is complete.","nodes":[{"pos":[0,95],"content":"Called by the workflow runtime to notify the host that an associate keys operation is complete.","nodes":[{"content":"Called by the workflow runtime to notify the host that an associate keys operation is complete.","pos":[0,95]}]}],"pos":[48600,48696],"yaml":true},{"content":"The reference to the asynchronous associate keys operation.","nodes":[{"pos":[0,59],"content":"The reference to the asynchronous associate keys operation.","nodes":[{"content":"The reference to the asynchronous associate keys operation.","pos":[0,59]}]}],"pos":[48869,48929],"yaml":true},{"content":"Called by the workflow runtime to notify the host when the flush tracking records operation is complete.","nodes":[{"pos":[0,104],"content":"Called by the workflow runtime to notify the host when the flush tracking records operation is complete.","nodes":[{"content":"Called by the workflow runtime to notify the host when the flush tracking records operation is complete.","pos":[0,104]}]}],"pos":[50178,50283],"yaml":true},{"content":"The status of the asynchronous flush tracking records operation.","nodes":[{"pos":[0,64],"content":"The status of the asynchronous flush tracking records operation.","nodes":[{"content":"The status of the asynchronous flush tracking records operation.","pos":[0,64]}]}],"pos":[50462,50527],"yaml":true},{"content":"Called by the workflow runtime to notify the host that a persist operation is complete.","nodes":[{"pos":[0,87],"content":"Called by the workflow runtime to notify the host that a persist operation is complete.","nodes":[{"content":"Called by the workflow runtime to notify the host that a persist operation is complete.","pos":[0,87]}]}],"pos":[51705,51793],"yaml":true},{"content":"The reference to the asynchronous persist operation.","nodes":[{"pos":[0,52],"content":"The reference to the asynchronous persist operation.","nodes":[{"content":"The reference to the asynchronous persist operation.","pos":[0,52]}]}],"pos":[51960,52013],"yaml":true},{"content":"Called by the workflow runtime to notify the host that a resume bookmark operation is complete.","nodes":[{"pos":[0,95],"content":"Called by the workflow runtime to notify the host that a resume bookmark operation is complete.","nodes":[{"content":"Called by the workflow runtime to notify the host that a resume bookmark operation is complete.","pos":[0,95]}]}],"pos":[53220,53316],"yaml":true},{"content":"The reference to the asynchronous resume bookmark operation.","nodes":[{"pos":[0,60],"content":"The reference to the asynchronous resume bookmark operation.","nodes":[{"content":"The reference to the asynchronous resume bookmark operation.","pos":[0,60]}]}],"pos":[53528,53589],"yaml":true},{"content":"One of the enumeration values that indicates the result of a <xref href=\"System.Activities.Bookmark\"></xref> resume operation.","nodes":[{"pos":[0,126],"content":"One of the enumeration values that indicates the result of a <ph id=\"ph1\">&lt;xref href=\"System.Activities.Bookmark\"&gt;&lt;/xref&gt;</ph> resume operation.","source":"One of the enumeration values that indicates the result of a <xref href=\"System.Activities.Bookmark\"></xref> resume operation."}],"pos":[53675,53802],"yaml":true},{"content":"Called by the workflow runtime to notify the host that the workflow instance has transitioned from the running state to the paused state.","nodes":[{"pos":[0,137],"content":"Called by the workflow runtime to notify the host that the workflow instance has transitioned from the running state to the paused state.","nodes":[{"content":"Called by the workflow runtime to notify the host that the workflow instance has transitioned from the running state to the paused state.","pos":[0,137]}]}],"pos":[54887,55025],"yaml":true},{"content":"Called by the workflow runtime to notify the host an unhandled exception has occurred in the workflow instance.","nodes":[{"pos":[0,111],"content":"Called by the workflow runtime to notify the host an unhandled exception has occurred in the workflow instance.","nodes":[{"content":"Called by the workflow runtime to notify the host an unhandled exception has occurred in the workflow instance.","pos":[0,111]}]}],"pos":[56520,56632],"yaml":true},{"content":"The unhandled exception.","nodes":[{"pos":[0,24],"content":"The unhandled exception.","nodes":[{"content":"The unhandled exception.","pos":[0,24]}]}],"pos":[56873,56898],"yaml":true},{"content":"The activity that threw the exception.","nodes":[{"pos":[0,38],"content":"The activity that threw the exception.","nodes":[{"content":"The activity that threw the exception.","pos":[0,38]}]}],"pos":[56973,57012],"yaml":true},{"content":"The unique identifier of the <xref href=\"System.Activities.ActivityInstance\"></xref> representing the activity that threw the exception.","nodes":[{"pos":[0,136],"content":"The unique identifier of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.ActivityInstance\"&gt;&lt;/xref&gt;</ph> representing the activity that threw the exception.","source":"The unique identifier of the <xref href=\"System.Activities.ActivityInstance\"></xref> representing the activity that threw the exception."}],"pos":[57084,57221],"yaml":true},{"content":"Called by the workflow runtime to notify the host that an abort operation has been requested for the workflow instance.","nodes":[{"pos":[0,119],"content":"Called by the workflow runtime to notify the host that an abort operation has been requested for the workflow instance.","nodes":[{"content":"Called by the workflow runtime to notify the host that an abort operation has been requested for the workflow instance.","pos":[0,119]}]}],"pos":[58394,58514],"yaml":true},{"content":"Once <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> is called, most <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> APIs except <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> will throw an <xref:System.InvalidOperationException>. It is expected that after <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> is called a host will trend toward a state in which it can satisfy the abort.","nodes":[{"pos":[0,484],"content":"Once <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> is called, most <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> APIs except <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> will throw an <xref:System.InvalidOperationException>. It is expected that after <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> is called a host will trend toward a state in which it can satisfy the abort.","nodes":[{"content":"Once <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> is called, most <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> APIs except <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> will throw an <xref:System.InvalidOperationException>. It is expected that after <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> is called a host will trend toward a state in which it can satisfy the abort.","pos":[0,484],"nodes":[{"content":"Once <ph id=\"ph1\">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> is called, most <ph id=\"ph2\">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph> APIs except <ph id=\"ph3\">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A&gt;</ph> will throw an <ph id=\"ph4\">&lt;xref:System.InvalidOperationException&gt;</ph>.","pos":[0,312],"source":"Once <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> is called, most <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> APIs except <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> will throw an <xref:System.InvalidOperationException>."},{"content":"It is expected that after <ph id=\"ph1\">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> is called a host will trend toward a state in which it can satisfy the abort.","pos":[313,484],"source":" It is expected that after <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> is called a host will trend toward a state in which it can satisfy the abort."}]}]}],"pos":[58525,59010],"yaml":true,"extradata":"MT"},{"content":"The reason for aborting the workflow instance.","nodes":[{"pos":[0,46],"content":"The reason for aborting the workflow instance.","nodes":[{"content":"The reason for aborting the workflow instance.","pos":[0,46]}]}],"pos":[59173,59220],"yaml":true},{"content":"Called by the host to register the specified extension manager, validate that all required extensions are present, and to initialize the collection of extensions to be used.","nodes":[{"pos":[0,173],"content":"Called by the host to register the specified extension manager, validate that all required extensions are present, and to initialize the collection of extensions to be used.","nodes":[{"content":"Called by the host to register the specified extension manager, validate that all required extensions are present, and to initialize the collection of extensions to be used.","pos":[0,173]}]}],"pos":[60636,60810],"yaml":true},{"content":"Extensions are keyed by type, and a host provided extension will always be used if provided. Extensions added through <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> use the runtime type of the object as the type key. Extensions providers added through <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> use the decared type T of the Func\\<T> as the type key. Extension providers contributed by activities through the various *ActivityMetadata.AddDefaultExtensionProvider methods are dropped if a host extension exists for the declared type or if there is a broader type provided through AddDefaultExtensionProvider (ex. if Func\\<StreamWriter> is provided and Func\\<TextWriter> is provided, only Func\\<StreamWriter> will be kept). If an extension does not exist in the collection that is required by an activity (expressed by calling *ActivityMetadata.RequireExtension) a <xref:System.Activities.ValidationException> is thrown.","nodes":[{"pos":[0,974],"content":"Extensions are keyed by type, and a host provided extension will always be used if provided. Extensions added through <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> use the runtime type of the object as the type key. Extensions providers added through <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> use the decared type T of the Func\\<T> as the type key. Extension providers contributed by activities through the various *ActivityMetadata.AddDefaultExtensionProvider methods are dropped if a host extension exists for the declared type or if there is a broader type provided through AddDefaultExtensionProvider (ex. if Func\\<StreamWriter> is provided and Func\\<TextWriter> is provided, only Func\\<StreamWriter> will be kept). If an extension does not exist in the collection that is required by an activity (expressed by calling *ActivityMetadata.RequireExtension) a <xref:System.Activities.ValidationException> is thrown.","nodes":[{"content":"Extensions are keyed by type, and a host provided extension will always be used if provided. Extensions added through <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> use the runtime type of the object as the type key. Extensions providers added through <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> use the decared type T of the Func\\<T> as the type key. Extension providers contributed by activities through the various *ActivityMetadata.AddDefaultExtensionProvider methods are dropped if a host extension exists for the declared type or if there is a broader type provided through AddDefaultExtensionProvider (ex. if Func\\<StreamWriter> is provided and Func\\<TextWriter> is provided, only Func\\<StreamWriter> will be kept). If an extension does not exist in the collection that is required by an activity (expressed by calling *ActivityMetadata.RequireExtension) a <xref:System.Activities.ValidationException> is thrown.","pos":[0,974],"nodes":[{"content":"Extensions are keyed by type, and a host provided extension will always be used if provided.","pos":[0,92]},{"content":"Extensions added through <ph id=\"ph1\">&lt;xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A&gt;</ph> use the runtime type of the object as the type key.","pos":[93,242],"source":" Extensions added through <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> use the runtime type of the object as the type key."},{"content":"Extensions providers added through <ph id=\"ph1\">&lt;xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A&gt;</ph> use the decared type T of the Func<ph id=\"ph2\">\\&lt;</ph>T&gt; as the type key.","pos":[243,406],"source":" Extensions providers added through <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> use the decared type T of the Func\\<T> as the type key."},{"content":"Extension providers contributed by activities through the various *ActivityMetadata.AddDefaultExtensionProvider methods are dropped if a host extension exists for the declared type or if there is a broader type provided through AddDefaultExtensionProvider (ex.","pos":[407,667]},{"content":"if Func<ph id=\"ph1\">\\&lt;</ph>StreamWriter&gt; is provided and Func<ph id=\"ph2\">\\&lt;</ph>TextWriter&gt; is provided, only Func<ph id=\"ph3\">\\&lt;</ph>StreamWriter&gt; will be kept).","pos":[668,777],"source":" if Func\\<StreamWriter> is provided and Func\\<TextWriter> is provided, only Func\\<StreamWriter> will be kept)."},{"content":"If an extension does not exist in the collection that is required by an activity (expressed by calling *ActivityMetadata.RequireExtension) a <ph id=\"ph1\">&lt;xref:System.Activities.ValidationException&gt;</ph> is thrown.","pos":[778,974],"source":" If an extension does not exist in the collection that is required by an activity (expressed by calling *ActivityMetadata.RequireExtension) a <xref:System.Activities.ValidationException> is thrown."}]}]}],"pos":[60821,61796],"yaml":true,"extradata":"MT"},{"content":"The extension manager to register.","nodes":[{"pos":[0,34],"content":"The extension manager to register.","nodes":[{"content":"The extension manager to register.","pos":[0,34]}]}],"pos":[62071,62106],"yaml":true},{"content":"Gets a value that indicates whether the host supports the association of <xref href=\"System.Runtime.Persistence.InstanceView.InstanceKeys\"></xref> with a run-time instance.","nodes":[{"pos":[0,172],"content":"Gets a value that indicates whether the host supports the association of <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Persistence.InstanceView.InstanceKeys\"&gt;&lt;/xref&gt;</ph> with a run-time instance.","source":"Gets a value that indicates whether the host supports the association of <xref href=\"System.Runtime.Persistence.InstanceView.InstanceKeys\"></xref> with a run-time instance."}],"pos":[63228,63401],"yaml":true},{"content":"`true` if the host supports the association of <xref href=\"System.Runtime.Persistence.InstanceView.InstanceKeys\"></xref> with a workflow instance; otherwise, `false`.","nodes":[{"pos":[0,166],"content":"<ph id=\"ph1\">`true`</ph> if the host supports the association of <ph id=\"ph2\">&lt;xref href=\"System.Runtime.Persistence.InstanceView.InstanceKeys\"&gt;&lt;/xref&gt;</ph> with a workflow instance; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the host supports the association of <xref href=\"System.Runtime.Persistence.InstanceView.InstanceKeys\"></xref> with a workflow instance; otherwise, `false`."}],"pos":[63536,63705],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Threading.SynchronizationContext\"></xref> used for scheduling the workflow instance.","nodes":[{"pos":[0,120],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Threading.SynchronizationContext\"&gt;&lt;/xref&gt;</ph> used for scheduling the workflow instance.","source":"Gets or sets the <xref href=\"System.Threading.SynchronizationContext\"></xref> used for scheduling the workflow instance."}],"pos":[64835,64956],"yaml":true},{"content":"If this property is set after the workflow instance is initialized and <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> returns `true`, an <xref:System.InvalidOperationException> is thrown.","nodes":[{"pos":[0,204],"content":"If this property is set after the workflow instance is initialized and <ph id=\"ph1\">&lt;xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A&gt;</ph> returns <ph id=\"ph2\">`true`</ph>, an <ph id=\"ph3\">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.","source":"If this property is set after the workflow instance is initialized and <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> returns `true`, an <xref:System.InvalidOperationException> is thrown."}],"pos":[64967,65172],"yaml":true,"extradata":"MT"},{"content":"The synchronization context used for scheduling the workflow instance.","nodes":[{"pos":[0,70],"content":"The synchronization context used for scheduling the workflow instance.","nodes":[{"content":"The synchronization context used for scheduling the workflow instance.","pos":[0,70]}]}],"pos":[65362,65433],"yaml":true},{"content":"Throws an <xref href=\"System.InvalidOperationException\"></xref> if the workflow instance has been initialized, as determined by <xref href=\"System.Activities.Hosting.WorkflowInstance.IsReadOnly\"></xref>.","nodes":[{"pos":[0,203],"content":"Throws an <ph id=\"ph1\">&lt;xref href=\"System.InvalidOperationException\"&gt;&lt;/xref&gt;</ph> if the workflow instance has been initialized, as determined by <ph id=\"ph2\">&lt;xref href=\"System.Activities.Hosting.WorkflowInstance.IsReadOnly\"&gt;&lt;/xref&gt;</ph>.","source":"Throws an <xref href=\"System.InvalidOperationException\"></xref> if the workflow instance has been initialized, as determined by <xref href=\"System.Activities.Hosting.WorkflowInstance.IsReadOnly\"></xref>."}],"pos":[66527,66731],"yaml":true},{"content":"If <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> returns `true`, then an <xref:System.InvalidOperationException> is thrown.","nodes":[{"pos":[0,141],"content":"If <ph id=\"ph1\">&lt;xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A&gt;</ph> returns <ph id=\"ph2\">`true`</ph>, then an <ph id=\"ph3\">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.","source":"If <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> returns `true`, then an <xref:System.InvalidOperationException> is thrown."}],"pos":[66742,66884],"yaml":true,"extradata":"MT"},{"content":"Gets the workflow definition of the workflow instance.","nodes":[{"pos":[0,54],"content":"Gets the workflow definition of the workflow instance.","nodes":[{"content":"Gets the workflow definition of the workflow instance.","pos":[0,54]}]}],"pos":[68062,68117],"yaml":true},{"content":"The workflow definition of the workflow instance.","nodes":[{"pos":[0,49],"content":"The workflow definition of the workflow instance.","nodes":[{"content":"The workflow definition of the workflow instance.","pos":[0,49]}]}],"pos":[68272,68322],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Hosting.WorkflowInstance\n  commentId: T:System.Activities.Hosting.WorkflowInstance\n  id: WorkflowInstance\n  children:\n  - System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)\n  - System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)\n  - System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.Activities.Hosting.WorkflowInstance.Controller\n  - System.Activities.Hosting.WorkflowInstance.DefinitionIdentity\n  - System.Activities.Hosting.WorkflowInstance.DisposeExtensions\n  - System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)\n  - System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)\n  - System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)\n  - System.Activities.Hosting.WorkflowInstance.GetExtension``1\n  - System.Activities.Hosting.WorkflowInstance.GetExtensions``1\n  - System.Activities.Hosting.WorkflowInstance.HostEnvironment\n  - System.Activities.Hosting.WorkflowInstance.Id\n  - System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)\n  - System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})\n  - System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)\n  - System.Activities.Hosting.WorkflowInstance.IsReadOnly\n  - System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)\n  - System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)\n  - System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)\n  - System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})\n  - System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)\n  - System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)\n  - System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)\n  - System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)\n  - System.Activities.Hosting.WorkflowInstance.OnNotifyPaused\n  - System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)\n  - System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)\n  - System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)\n  - System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys\n  - System.Activities.Hosting.WorkflowInstance.SynchronizationContext\n  - System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly\n  - System.Activities.Hosting.WorkflowInstance.WorkflowDefinition\n  langs:\n  - csharp\n  name: WorkflowInstance\n  nameWithType: WorkflowInstance\n  fullName: System.Activities.Hosting.WorkflowInstance\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> is a lightweight, per-instance runtime for executing a workflow program. It can be constructed to create a new workflow instance or from existing instance state. The APIs that <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> exposes are the minimal set of runtime controls from which higher level operations can be implemented. This API set represents the entire breadth of functionality of the runtime. <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> is an abstract class and relies on a host’s implementation of its abstract methods in order to provide host functionality such as synchronization, persistence, tracking, and extensions.\n  remarks: \"<xref:System.Activities.Hosting.WorkflowInstance> is single threaded and assumes that the host synchronizes all access to it. An attempt to call multiple APIs simultaneously will result in an <xref:System.InvalidOperationException> being thrown.  \\n  \\n Internally, a <xref:System.Activities.Hosting.WorkflowInstance> has two states: Running and Paused. The only way to cause the runtime to transition from paused to running is to call <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>. All actions (except Pause) can only be taken while the runtime is Paused. The runtime will become spontaneously Paused in the following situations:  \\n  \\n-   An error fatal to the runtime has occurred. The host will be signaled through <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> (which does not signal a transition to Paused) and then notified through <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>.  \\n  \\n-   An exception in the workflow was uncaught and escaped the root. The host will be notified through the <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A> method.  \\n  \\n-   The scheduler has run out of work items and is now <xref:System.Activities.Hosting.WorkflowInstanceState.Idle>. The host will be notified through the <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> method. Note that the scheduler could have run out of work items because the instance is idle or because the instance is complete. The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> value of the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property can be used to differentiate between the two.  \\n  \\n The host can request a change from Running to Paused by calling the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> or <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A> methods of the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> instance returned by the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property. This request should not be considered to have a specific response meaning that the host should not attempt to correlate an OnNotify* or <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> with a specific call to pause. In response to a pause request, the runtime may transition to Paused and call <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> while the scheduler still has pending work items. The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> value of the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property can be used to determine whether the scheduler has no more work or was interrupted by a request to pause.  \\n  \\n The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> method of the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> instance returned by the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property is the only method which can be called while the <xref:System.Activities.Hosting.WorkflowInstance> is in the Running state. All other methods will throw an <xref:System.InvalidOperationException> if called.Given the rules for how <xref:System.Activities.Hosting.WorkflowInstance> transitions from one state to another, the public notion of Running and Paused can be defined as follows:  \\n  \\n-   Running – The state between a call to <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A> and the next WorkflowInstance.OnNotify*.  \\n  \\n-   Paused – The state between the last WorkflowInstance.OnNotify* and the next call to <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.\"\n  syntax:\n    content: public abstract class WorkflowInstance\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Activities.WorkflowApplication\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)\n  id: '#ctor(System.Activities.Activity)'\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: WorkflowInstance(Activity)\n  nameWithType: WorkflowInstance.WorkflowInstance(Activity)\n  fullName: WorkflowInstance.WorkflowInstance(Activity)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> class with the specified workflow definition.\n  syntax:\n    content: protected WorkflowInstance (System.Activities.Activity workflowDefinition);\n    parameters:\n    - id: workflowDefinition\n      type: System.Activities.Activity\n      description: The activity that defines the workflow.\n  overload: System.Activities.Hosting.WorkflowInstance.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)\n  id: '#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)'\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: WorkflowInstance(Activity, WorkflowIdentity)\n  nameWithType: WorkflowInstance.WorkflowInstance(Activity, WorkflowIdentity)\n  fullName: WorkflowInstance.WorkflowInstance(Activity, WorkflowIdentity)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref> class with the specified workflow definition and definition identity.\n  syntax:\n    content: protected WorkflowInstance (System.Activities.Activity workflowDefinition, System.Activities.WorkflowIdentity definitionIdentity);\n    parameters:\n    - id: workflowDefinition\n      type: System.Activities.Activity\n      description: The activity that defines the workflow.\n    - id: definitionIdentity\n      type: System.Activities.WorkflowIdentity\n      description: The definition identity.\n  overload: System.Activities.Hosting.WorkflowInstance.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)\n  id: BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: BeginFlushTrackingRecords(TimeSpan, AsyncCallback, Object)\n  nameWithType: WorkflowInstance.BeginFlushTrackingRecords(TimeSpan, AsyncCallback, Object)\n  fullName: WorkflowInstance.BeginFlushTrackingRecords(TimeSpan, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Called by the workflow runtime to begin sending pending tracking records to tracking participants asynchronously.\n  syntax:\n    content: protected IAsyncResult BeginFlushTrackingRecords (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The time period after which to abort the attempt.\n    - id: callback\n      type: System.AsyncCallback\n      description: The method to be called when the track operation has completed.\n    - id: state\n      type: System.Object\n      description: The information about the asynchronous operation.\n    return:\n      type: System.IAsyncResult\n      description: The status of the current track operation.\n  overload: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.Controller\n  commentId: P:System.Activities.Hosting.WorkflowInstance.Controller\n  id: Controller\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: Controller\n  nameWithType: WorkflowInstance.Controller\n  fullName: WorkflowInstance.Controller\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Gets the <xref href=\"System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl\"></xref> instance for this <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>.\n  syntax:\n    content: protected System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl Controller { get; }\n    return:\n      type: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl\n      description: The controller instance for this workflow instance.\n  overload: System.Activities.Hosting.WorkflowInstance.Controller*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity\n  commentId: P:System.Activities.Hosting.WorkflowInstance.DefinitionIdentity\n  id: DefinitionIdentity\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: DefinitionIdentity\n  nameWithType: WorkflowInstance.DefinitionIdentity\n  fullName: WorkflowInstance.DefinitionIdentity\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Gets or sets the definition identity of <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>.\n  syntax:\n    content: public System.Activities.WorkflowIdentity DefinitionIdentity { get; }\n    return:\n      type: System.Activities.WorkflowIdentity\n      description: The definition identity of <xref href=\"System.Activities.Hosting.WorkflowInstance\"></xref>.\n  overload: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.DisposeExtensions\n  commentId: M:System.Activities.Hosting.WorkflowInstance.DisposeExtensions\n  id: DisposeExtensions\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: DisposeExtensions()\n  nameWithType: WorkflowInstance.DisposeExtensions()\n  fullName: WorkflowInstance.DisposeExtensions()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Calls <xref href=\"System.Disposable.Dispose\"></xref> on all extensions that implement <xref href=\"System.IDisposable\"></xref>.\n  syntax:\n    content: protected void DisposeExtensions ();\n    parameters: []\n  overload: System.Activities.Hosting.WorkflowInstance.DisposeExtensions*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)\n  id: EndFlushTrackingRecords(System.IAsyncResult)\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: EndFlushTrackingRecords(IAsyncResult)\n  nameWithType: WorkflowInstance.EndFlushTrackingRecords(IAsyncResult)\n  fullName: WorkflowInstance.EndFlushTrackingRecords(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Called by the workflow runtime to end the track operation.\n  syntax:\n    content: protected void EndFlushTrackingRecords (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The status of the asynchronous track operation.\n  overload: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)\n  id: FlushTrackingRecords(System.TimeSpan)\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: FlushTrackingRecords(TimeSpan)\n  nameWithType: WorkflowInstance.FlushTrackingRecords(TimeSpan)\n  fullName: WorkflowInstance.FlushTrackingRecords(TimeSpan)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Called by the workflow runtime to send pending tracking records to tracking participants.\n  syntax:\n    content: protected void FlushTrackingRecords (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The time period after which to abort the attempt.\n  overload: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)\n  id: GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: GetActivitiesBlockingUpdate(Object, DynamicUpdateMap)\n  nameWithType: WorkflowInstance.GetActivitiesBlockingUpdate(Object, DynamicUpdateMap)\n  fullName: WorkflowInstance.GetActivitiesBlockingUpdate(Object, DynamicUpdateMap)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Retrieves the list of activity that is blocking the update of the workflow.\n  syntax:\n    content: protected static System.Collections.Generic.IList<System.Activities.DynamicUpdate.ActivityBlockingUpdate> GetActivitiesBlockingUpdate (object deserializedRuntimeState, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);\n    parameters:\n    - id: deserializedRuntimeState\n      type: System.Object\n      description: The deserialized runtime state.\n    - id: updateMap\n      type: System.Activities.DynamicUpdate.DynamicUpdateMap\n      description: The update map.\n    return:\n      type: System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}\n      description: The list of activity that is blocking the update.\n  overload: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.GetExtension``1\n  commentId: M:System.Activities.Hosting.WorkflowInstance.GetExtension``1\n  id: GetExtension``1\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: GetExtension<T>()\n  nameWithType: WorkflowInstance.GetExtension<T>()\n  fullName: WorkflowInstance.GetExtension<T>()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Returns an extension of the specified type.\n  syntax:\n    content: 'protected T GetExtension<T> () where T : class;'\n    parameters: []\n    typeParameters:\n    - id: T\n      description: The type of the extension to find.\n    return:\n      type: T\n      description: An extension of the specified type.\n  overload: System.Activities.Hosting.WorkflowInstance.GetExtension``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.GetExtensions``1\n  commentId: M:System.Activities.Hosting.WorkflowInstance.GetExtensions``1\n  id: GetExtensions``1\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: GetExtensions<T>()\n  nameWithType: WorkflowInstance.GetExtensions<T>()\n  fullName: WorkflowInstance.GetExtensions<T>()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Returns all extensions found for the specified type.\n  syntax:\n    content: 'protected System.Collections.Generic.IEnumerable<T> GetExtensions<T> () where T : class;'\n    parameters: []\n    typeParameters:\n    - id: T\n      description: The type of the extension to find.\n    return:\n      type: System.Collections.Generic.IEnumerable`1\n      description: All extensions found for the specified type.\n  overload: System.Activities.Hosting.WorkflowInstance.GetExtensions``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.HostEnvironment\n  commentId: P:System.Activities.Hosting.WorkflowInstance.HostEnvironment\n  id: HostEnvironment\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: HostEnvironment\n  nameWithType: WorkflowInstance.HostEnvironment\n  fullName: WorkflowInstance.HostEnvironment\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Gets or sets the root environment for the workflow instance’s arguments and variables.\n  remarks: If this property is set after the workflow instance is initialized and <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> returns `true`, an <xref:System.InvalidOperationException> is thrown.\n  syntax:\n    content: public System.Activities.LocationReferenceEnvironment HostEnvironment { get; set; }\n    return:\n      type: System.Activities.LocationReferenceEnvironment\n      description: The root environment for the workflow instance’s arguments and variables.\n  overload: System.Activities.Hosting.WorkflowInstance.HostEnvironment*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.Id\n  commentId: P:System.Activities.Hosting.WorkflowInstance.Id\n  id: Id\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: Id\n  nameWithType: WorkflowInstance.Id\n  fullName: WorkflowInstance.Id\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Gets the unique identifier for the workflow instance.\n  syntax:\n    content: public abstract Guid Id { get; }\n    return:\n      type: System.Guid\n      description: The unique identifier for the workflow instance.\n  overload: System.Activities.Hosting.WorkflowInstance.Id*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)\n  id: Initialize(System.Object)\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: Initialize(Object)\n  nameWithType: WorkflowInstance.Initialize(Object)\n  fullName: WorkflowInstance.Initialize(Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Called by the host to initialize the workflow instance with the workflow run-time state.\n  syntax:\n    content: protected void Initialize (object deserializedRuntimeState);\n    parameters:\n    - id: deserializedRuntimeState\n      type: System.Object\n      description: The run-time state used to execute the workflow.\n  overload: System.Activities.Hosting.WorkflowInstance.Initialize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})\n  commentId: M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})\n  id: Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: Initialize(IDictionary<String,Object>, IList<Handle>)\n  nameWithType: WorkflowInstance.Initialize(IDictionary<String,Object>, IList<Handle>)\n  fullName: WorkflowInstance.Initialize(IDictionary<String,Object>, IList<Handle>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Called by the host to initialize the workflow instance with the argument values and execution properties.\n  syntax:\n    content: protected void Initialize (System.Collections.Generic.IDictionary<string,object> workflowArgumentValues, System.Collections.Generic.IList<System.Activities.Handle> workflowExecutionProperties);\n    parameters:\n    - id: workflowArgumentValues\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: The input parameters to the workflow, keyed by argument name.\n    - id: workflowExecutionProperties\n      type: System.Collections.Generic.IList{System.Activities.Handle}\n      description: The list of workflow execution properties.\n  overload: System.Activities.Hosting.WorkflowInstance.Initialize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)\n  id: Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: Initialize(Object, DynamicUpdateMap)\n  nameWithType: WorkflowInstance.Initialize(Object, DynamicUpdateMap)\n  fullName: WorkflowInstance.Initialize(Object, DynamicUpdateMap)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Called by the host to initialize the workflow instance with the workflow run-time state and update map.\n  syntax:\n    content: protected void Initialize (object deserializedRuntimeState, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);\n    parameters:\n    - id: deserializedRuntimeState\n      type: System.Object\n      description: The run-time state used to execute the workflow.\n    - id: updateMap\n      type: System.Activities.DynamicUpdate.DynamicUpdateMap\n      description: The update map.\n  overload: System.Activities.Hosting.WorkflowInstance.Initialize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.IsReadOnly\n  commentId: P:System.Activities.Hosting.WorkflowInstance.IsReadOnly\n  id: IsReadOnly\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: WorkflowInstance.IsReadOnly\n  fullName: WorkflowInstance.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Gets a value that indicates whether the workflow instance has been initialized.\n  syntax:\n    content: protected bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the workflow instance has been initialized; otherwise, `false`.'\n  overload: System.Activities.Hosting.WorkflowInstance.IsReadOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)\n  id: OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: OnBeginAssociateKeys(ICollection<InstanceKey>, AsyncCallback, Object)\n  nameWithType: WorkflowInstance.OnBeginAssociateKeys(ICollection<InstanceKey>, AsyncCallback, Object)\n  fullName: WorkflowInstance.OnBeginAssociateKeys(ICollection<InstanceKey>, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Called by the workflow runtime to notify the host that new instance keys should be associated with this instance.\n  syntax:\n    content: protected abstract IAsyncResult OnBeginAssociateKeys (System.Collections.Generic.ICollection<System.Runtime.DurableInstancing.InstanceKey> keys, AsyncCallback callback, object state);\n    parameters:\n    - id: keys\n      type: System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey}\n      description: The instance keys to associate with this workflow instance.\n    - id: callback\n      type: System.AsyncCallback\n      description: The method to be called when the operation completes.\n    - id: state\n      type: System.Object\n      description: An optional application-specific object that contains information about the asynchronous operation.\n    return:\n      type: System.IAsyncResult\n      description: A reference to the asynchronous associate keys operation.\n  overload: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)\n  id: OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: OnBeginFlushTrackingRecords(AsyncCallback, Object)\n  nameWithType: WorkflowInstance.OnBeginFlushTrackingRecords(AsyncCallback, Object)\n  fullName: WorkflowInstance.OnBeginFlushTrackingRecords(AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Asynchronous call to ask host to flush pending tracking records to tracking participants.\n  syntax:\n    content: protected virtual IAsyncResult OnBeginFlushTrackingRecords (AsyncCallback callback, object state);\n    parameters:\n    - id: callback\n      type: System.AsyncCallback\n      description: The method to be called when the track operation has completed.\n    - id: state\n      type: System.Object\n      description: The information about the asynchronous operation.\n    return:\n      type: System.IAsyncResult\n      description: The status of the current track operation.\n  overload: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)\n  id: OnBeginPersist(System.AsyncCallback,System.Object)\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: OnBeginPersist(AsyncCallback, Object)\n  nameWithType: WorkflowInstance.OnBeginPersist(AsyncCallback, Object)\n  fullName: WorkflowInstance.OnBeginPersist(AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Asynchronous call to ask the host to persist the workflow.\n  syntax:\n    content: protected abstract IAsyncResult OnBeginPersist (AsyncCallback callback, object state);\n    parameters:\n    - id: callback\n      type: System.AsyncCallback\n      description: The method to be called when the persist operation has completed.\n    - id: state\n      type: System.Object\n      description: An optional application-specific object that contains information about the asynchronous operation.\n    return:\n      type: System.IAsyncResult\n      description: A reference to the current persist operation.\n  overload: System.Activities.Hosting.WorkflowInstance.OnBeginPersist*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)\n  id: OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: OnBeginResumeBookmark(Bookmark, Object, TimeSpan, AsyncCallback, Object)\n  nameWithType: WorkflowInstance.OnBeginResumeBookmark(Bookmark, Object, TimeSpan, AsyncCallback, Object)\n  fullName: WorkflowInstance.OnBeginResumeBookmark(Bookmark, Object, TimeSpan, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Called by the workflow runtime to notify the host that a resume bookmark operation is beginning.\n  syntax:\n    content: protected abstract IAsyncResult OnBeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: bookmark\n      type: System.Activities.Bookmark\n      description: The bookmark to resume.\n    - id: value\n      type: System.Object\n      description: The data to be passed to the activity that created the <xref href=\"System.Activities.Bookmark\"></xref>.\n    - id: timeout\n      type: System.TimeSpan\n      description: The interval in which the resume operation must complete before the operation is canceled and a <xref href=\"System.TimeoutException\"></xref> is thrown.\n    - id: callback\n      type: System.AsyncCallback\n      description: The method to be called when the resume operation has completed.\n    - id: state\n      type: System.Object\n      description: An optional application-specific object that contains information about the asynchronous operation.\n    return:\n      type: System.IAsyncResult\n      description: A reference to the asynchronous resume operation.\n  overload: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})\n  commentId: M:System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})\n  id: OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: OnDisassociateKeys(ICollection<InstanceKey>)\n  nameWithType: WorkflowInstance.OnDisassociateKeys(ICollection<InstanceKey>)\n  fullName: WorkflowInstance.OnDisassociateKeys(ICollection<InstanceKey>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Called by the workflow runtime to notify the host that a certain set of instance keys should no longer be associated with this instance.\n  syntax:\n    content: protected abstract void OnDisassociateKeys (System.Collections.Generic.ICollection<System.Runtime.DurableInstancing.InstanceKey> keys);\n    parameters:\n    - id: keys\n      type: System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey}\n      description: The list of keys to disassociate.\n  overload: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)\n  id: OnEndAssociateKeys(System.IAsyncResult)\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: OnEndAssociateKeys(IAsyncResult)\n  nameWithType: WorkflowInstance.OnEndAssociateKeys(IAsyncResult)\n  fullName: WorkflowInstance.OnEndAssociateKeys(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Called by the workflow runtime to notify the host that an associate keys operation is complete.\n  syntax:\n    content: protected abstract void OnEndAssociateKeys (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The reference to the asynchronous associate keys operation.\n  overload: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)\n  id: OnEndFlushTrackingRecords(System.IAsyncResult)\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: OnEndFlushTrackingRecords(IAsyncResult)\n  nameWithType: WorkflowInstance.OnEndFlushTrackingRecords(IAsyncResult)\n  fullName: WorkflowInstance.OnEndFlushTrackingRecords(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Called by the workflow runtime to notify the host when the flush tracking records operation is complete.\n  syntax:\n    content: protected virtual void OnEndFlushTrackingRecords (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The status of the asynchronous flush tracking records operation.\n  overload: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)\n  id: OnEndPersist(System.IAsyncResult)\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: OnEndPersist(IAsyncResult)\n  nameWithType: WorkflowInstance.OnEndPersist(IAsyncResult)\n  fullName: WorkflowInstance.OnEndPersist(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Called by the workflow runtime to notify the host that a persist operation is complete.\n  syntax:\n    content: protected abstract void OnEndPersist (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The reference to the asynchronous persist operation.\n  overload: System.Activities.Hosting.WorkflowInstance.OnEndPersist*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)\n  id: OnEndResumeBookmark(System.IAsyncResult)\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: OnEndResumeBookmark(IAsyncResult)\n  nameWithType: WorkflowInstance.OnEndResumeBookmark(IAsyncResult)\n  fullName: WorkflowInstance.OnEndResumeBookmark(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Called by the workflow runtime to notify the host that a resume bookmark operation is complete.\n  syntax:\n    content: protected abstract System.Activities.BookmarkResumptionResult OnEndResumeBookmark (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The reference to the asynchronous resume bookmark operation.\n    return:\n      type: System.Activities.BookmarkResumptionResult\n      description: One of the enumeration values that indicates the result of a <xref href=\"System.Activities.Bookmark\"></xref> resume operation.\n  overload: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused\n  commentId: M:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused\n  id: OnNotifyPaused\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: OnNotifyPaused()\n  nameWithType: WorkflowInstance.OnNotifyPaused()\n  fullName: WorkflowInstance.OnNotifyPaused()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Called by the workflow runtime to notify the host that the workflow instance has transitioned from the running state to the paused state.\n  syntax:\n    content: protected abstract void OnNotifyPaused ();\n    parameters: []\n  overload: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)\n  id: OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: OnNotifyUnhandledException(Exception, Activity, String)\n  nameWithType: WorkflowInstance.OnNotifyUnhandledException(Exception, Activity, String)\n  fullName: WorkflowInstance.OnNotifyUnhandledException(Exception, Activity, String)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Called by the workflow runtime to notify the host an unhandled exception has occurred in the workflow instance.\n  syntax:\n    content: protected abstract void OnNotifyUnhandledException (Exception exception, System.Activities.Activity source, string sourceInstanceId);\n    parameters:\n    - id: exception\n      type: System.Exception\n      description: The unhandled exception.\n    - id: source\n      type: System.Activities.Activity\n      description: The activity that threw the exception.\n    - id: sourceInstanceId\n      type: System.String\n      description: The unique identifier of the <xref href=\"System.Activities.ActivityInstance\"></xref> representing the activity that threw the exception.\n  overload: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)\n  id: OnRequestAbort(System.Exception)\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: OnRequestAbort(Exception)\n  nameWithType: WorkflowInstance.OnRequestAbort(Exception)\n  fullName: WorkflowInstance.OnRequestAbort(Exception)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Called by the workflow runtime to notify the host that an abort operation has been requested for the workflow instance.\n  remarks: Once <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> is called, most <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> APIs except <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> will throw an <xref:System.InvalidOperationException>. It is expected that after <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> is called a host will trend toward a state in which it can satisfy the abort.\n  syntax:\n    content: protected abstract void OnRequestAbort (Exception reason);\n    parameters:\n    - id: reason\n      type: System.Exception\n      description: The reason for aborting the workflow instance.\n  overload: System.Activities.Hosting.WorkflowInstance.OnRequestAbort*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)\n  commentId: M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)\n  id: RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: RegisterExtensionManager(WorkflowInstanceExtensionManager)\n  nameWithType: WorkflowInstance.RegisterExtensionManager(WorkflowInstanceExtensionManager)\n  fullName: WorkflowInstance.RegisterExtensionManager(WorkflowInstanceExtensionManager)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Called by the host to register the specified extension manager, validate that all required extensions are present, and to initialize the collection of extensions to be used.\n  remarks: Extensions are keyed by type, and a host provided extension will always be used if provided. Extensions added through <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> use the runtime type of the object as the type key. Extensions providers added through <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> use the decared type T of the Func\\<T> as the type key. Extension providers contributed by activities through the various *ActivityMetadata.AddDefaultExtensionProvider methods are dropped if a host extension exists for the declared type or if there is a broader type provided through AddDefaultExtensionProvider (ex. if Func\\<StreamWriter> is provided and Func\\<TextWriter> is provided, only Func\\<StreamWriter> will be kept). If an extension does not exist in the collection that is required by an activity (expressed by calling *ActivityMetadata.RequireExtension) a <xref:System.Activities.ValidationException> is thrown.\n  syntax:\n    content: protected void RegisterExtensionManager (System.Activities.Hosting.WorkflowInstanceExtensionManager extensionManager);\n    parameters:\n    - id: extensionManager\n      type: System.Activities.Hosting.WorkflowInstanceExtensionManager\n      description: The extension manager to register.\n  overload: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys\n  commentId: P:System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys\n  id: SupportsInstanceKeys\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: SupportsInstanceKeys\n  nameWithType: WorkflowInstance.SupportsInstanceKeys\n  fullName: WorkflowInstance.SupportsInstanceKeys\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Gets a value that indicates whether the host supports the association of <xref href=\"System.Runtime.Persistence.InstanceView.InstanceKeys\"></xref> with a run-time instance.\n  syntax:\n    content: protected abstract bool SupportsInstanceKeys { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the host supports the association of <xref href=\"System.Runtime.Persistence.InstanceView.InstanceKeys\"></xref> with a workflow instance; otherwise, `false`.'\n  overload: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.SynchronizationContext\n  commentId: P:System.Activities.Hosting.WorkflowInstance.SynchronizationContext\n  id: SynchronizationContext\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: SynchronizationContext\n  nameWithType: WorkflowInstance.SynchronizationContext\n  fullName: WorkflowInstance.SynchronizationContext\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Gets or sets the <xref href=\"System.Threading.SynchronizationContext\"></xref> used for scheduling the workflow instance.\n  remarks: If this property is set after the workflow instance is initialized and <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> returns `true`, an <xref:System.InvalidOperationException> is thrown.\n  syntax:\n    content: public System.Threading.SynchronizationContext SynchronizationContext { get; set; }\n    return:\n      type: System.Threading.SynchronizationContext\n      description: The synchronization context used for scheduling the workflow instance.\n  overload: System.Activities.Hosting.WorkflowInstance.SynchronizationContext*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly\n  commentId: M:System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly\n  id: ThrowIfReadOnly\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: ThrowIfReadOnly()\n  nameWithType: WorkflowInstance.ThrowIfReadOnly()\n  fullName: WorkflowInstance.ThrowIfReadOnly()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Throws an <xref href=\"System.InvalidOperationException\"></xref> if the workflow instance has been initialized, as determined by <xref href=\"System.Activities.Hosting.WorkflowInstance.IsReadOnly\"></xref>.\n  remarks: If <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> returns `true`, then an <xref:System.InvalidOperationException> is thrown.\n  syntax:\n    content: protected void ThrowIfReadOnly ();\n    parameters: []\n  overload: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition\n  commentId: P:System.Activities.Hosting.WorkflowInstance.WorkflowDefinition\n  id: WorkflowDefinition\n  parent: System.Activities.Hosting.WorkflowInstance\n  langs:\n  - csharp\n  name: WorkflowDefinition\n  nameWithType: WorkflowInstance.WorkflowDefinition\n  fullName: WorkflowInstance.WorkflowDefinition\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  summary: Gets the workflow definition of the workflow instance.\n  syntax:\n    content: public System.Activities.Activity WorkflowDefinition { get; }\n    return:\n      type: System.Activities.Activity\n      description: The workflow definition of the workflow instance.\n  overload: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: WorkflowInstance(Activity)\n  nameWithType: WorkflowInstance.WorkflowInstance(Activity)\n  fullName: WorkflowInstance.WorkflowInstance(Activity)\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: WorkflowInstance(Activity, WorkflowIdentity)\n  nameWithType: WorkflowInstance.WorkflowInstance(Activity, WorkflowIdentity)\n  fullName: WorkflowInstance.WorkflowInstance(Activity, WorkflowIdentity)\n- uid: System.Activities.WorkflowIdentity\n  parent: System.Activities\n  isExternal: false\n  name: WorkflowIdentity\n  nameWithType: WorkflowIdentity\n  fullName: System.Activities.WorkflowIdentity\n- uid: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: BeginFlushTrackingRecords(TimeSpan, AsyncCallback, Object)\n  nameWithType: WorkflowInstance.BeginFlushTrackingRecords(TimeSpan, AsyncCallback, Object)\n  fullName: WorkflowInstance.BeginFlushTrackingRecords(TimeSpan, AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Activities.Hosting.WorkflowInstance.Controller\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: Controller\n  nameWithType: WorkflowInstance.Controller\n  fullName: WorkflowInstance.Controller\n- uid: System.Activities.Hosting.WorkflowInstance\n  parent: System.Activities.Hosting\n  isExternal: false\n  name: WorkflowInstance\n  nameWithType: WorkflowInstance\n  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl\n- uid: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: DefinitionIdentity\n  nameWithType: WorkflowInstance.DefinitionIdentity\n  fullName: WorkflowInstance.DefinitionIdentity\n- uid: System.Activities.Hosting.WorkflowInstance.DisposeExtensions\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: DisposeExtensions()\n  nameWithType: WorkflowInstance.DisposeExtensions()\n  fullName: WorkflowInstance.DisposeExtensions()\n- uid: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: EndFlushTrackingRecords(IAsyncResult)\n  nameWithType: WorkflowInstance.EndFlushTrackingRecords(IAsyncResult)\n  fullName: WorkflowInstance.EndFlushTrackingRecords(IAsyncResult)\n- uid: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: FlushTrackingRecords(TimeSpan)\n  nameWithType: WorkflowInstance.FlushTrackingRecords(TimeSpan)\n  fullName: WorkflowInstance.FlushTrackingRecords(TimeSpan)\n- uid: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: GetActivitiesBlockingUpdate(Object, DynamicUpdateMap)\n  nameWithType: WorkflowInstance.GetActivitiesBlockingUpdate(Object, DynamicUpdateMap)\n  fullName: WorkflowInstance.GetActivitiesBlockingUpdate(Object, DynamicUpdateMap)\n- uid: System.Collections.Generic.IList`1\n  name: IList<T>\n  nameWithType: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n- uid: System.Activities.DynamicUpdate.ActivityBlockingUpdate\n  name: ActivityBlockingUpdate\n  nameWithType: ActivityBlockingUpdate\n  fullName: System.Activities.DynamicUpdate.ActivityBlockingUpdate\n- uid: System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<ActivityBlockingUpdate>\n  nameWithType: IList<ActivityBlockingUpdate>\n  fullName: System.Collections.Generic.IList<System.Activities.DynamicUpdate.ActivityBlockingUpdate>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.DynamicUpdate.ActivityBlockingUpdate\n    name: ActivityBlockingUpdate\n    nameWithType: ActivityBlockingUpdate\n    fullName: System.Activities.DynamicUpdate.ActivityBlockingUpdate\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.DynamicUpdate.DynamicUpdateMap\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: DynamicUpdateMap\n  nameWithType: DynamicUpdateMap\n  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap\n- uid: System.Activities.Hosting.WorkflowInstance.GetExtension``1\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: GetExtension<T>()\n  nameWithType: WorkflowInstance.GetExtension<T>()\n  fullName: WorkflowInstance.GetExtension<T>()\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Activities.Hosting.WorkflowInstance.GetExtensions``1\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: GetExtensions<T>()\n  nameWithType: WorkflowInstance.GetExtensions<T>()\n  fullName: WorkflowInstance.GetExtensions<T>()\n- uid: System.Collections.Generic.IEnumerable`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Activities.Hosting.WorkflowInstance.HostEnvironment\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: HostEnvironment\n  nameWithType: WorkflowInstance.HostEnvironment\n  fullName: WorkflowInstance.HostEnvironment\n- uid: System.Activities.LocationReferenceEnvironment\n  parent: System.Activities\n  isExternal: false\n  name: LocationReferenceEnvironment\n  nameWithType: LocationReferenceEnvironment\n  fullName: System.Activities.LocationReferenceEnvironment\n- uid: System.Activities.Hosting.WorkflowInstance.Id\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: Id\n  nameWithType: WorkflowInstance.Id\n  fullName: WorkflowInstance.Id\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: Initialize(Object)\n  nameWithType: WorkflowInstance.Initialize(Object)\n  fullName: WorkflowInstance.Initialize(Object)\n- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: Initialize(IDictionary<String,Object>, IList<Handle>)\n  nameWithType: WorkflowInstance.Initialize(IDictionary<String,Object>, IList<Handle>)\n  fullName: WorkflowInstance.Initialize(IDictionary<String,Object>, IList<Handle>)\n- uid: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.String\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Generic.IDictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,Object>\n  nameWithType: IDictionary<String,Object>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Handle\n  name: Handle\n  nameWithType: Handle\n  fullName: System.Activities.Handle\n- uid: System.Collections.Generic.IList{System.Activities.Handle}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<Handle>\n  nameWithType: IList<Handle>\n  fullName: System.Collections.Generic.IList<System.Activities.Handle>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Activities.Handle\n    name: Handle\n    nameWithType: Handle\n    fullName: System.Activities.Handle\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: Initialize(Object, DynamicUpdateMap)\n  nameWithType: WorkflowInstance.Initialize(Object, DynamicUpdateMap)\n  fullName: WorkflowInstance.Initialize(Object, DynamicUpdateMap)\n- uid: System.Activities.Hosting.WorkflowInstance.IsReadOnly\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: WorkflowInstance.IsReadOnly\n  fullName: WorkflowInstance.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: OnBeginAssociateKeys(ICollection<InstanceKey>, AsyncCallback, Object)\n  nameWithType: WorkflowInstance.OnBeginAssociateKeys(ICollection<InstanceKey>, AsyncCallback, Object)\n  fullName: WorkflowInstance.OnBeginAssociateKeys(ICollection<InstanceKey>, AsyncCallback, Object)\n- uid: System.Collections.Generic.ICollection`1\n  name: ICollection<T>\n  nameWithType: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n- uid: System.Runtime.DurableInstancing.InstanceKey\n  name: InstanceKey\n  nameWithType: InstanceKey\n  fullName: System.Runtime.DurableInstancing.InstanceKey\n- uid: System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<InstanceKey>\n  nameWithType: ICollection<InstanceKey>\n  fullName: System.Collections.Generic.ICollection<System.Runtime.DurableInstancing.InstanceKey>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Runtime.DurableInstancing.InstanceKey\n    name: InstanceKey\n    nameWithType: InstanceKey\n    fullName: System.Runtime.DurableInstancing.InstanceKey\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: OnBeginFlushTrackingRecords(AsyncCallback, Object)\n  nameWithType: WorkflowInstance.OnBeginFlushTrackingRecords(AsyncCallback, Object)\n  fullName: WorkflowInstance.OnBeginFlushTrackingRecords(AsyncCallback, Object)\n- uid: System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: OnBeginPersist(AsyncCallback, Object)\n  nameWithType: WorkflowInstance.OnBeginPersist(AsyncCallback, Object)\n  fullName: WorkflowInstance.OnBeginPersist(AsyncCallback, Object)\n- uid: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: OnBeginResumeBookmark(Bookmark, Object, TimeSpan, AsyncCallback, Object)\n  nameWithType: WorkflowInstance.OnBeginResumeBookmark(Bookmark, Object, TimeSpan, AsyncCallback, Object)\n  fullName: WorkflowInstance.OnBeginResumeBookmark(Bookmark, Object, TimeSpan, AsyncCallback, Object)\n- uid: System.Activities.Bookmark\n  parent: System.Activities\n  isExternal: false\n  name: Bookmark\n  nameWithType: Bookmark\n  fullName: System.Activities.Bookmark\n- uid: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: OnDisassociateKeys(ICollection<InstanceKey>)\n  nameWithType: WorkflowInstance.OnDisassociateKeys(ICollection<InstanceKey>)\n  fullName: WorkflowInstance.OnDisassociateKeys(ICollection<InstanceKey>)\n- uid: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: OnEndAssociateKeys(IAsyncResult)\n  nameWithType: WorkflowInstance.OnEndAssociateKeys(IAsyncResult)\n  fullName: WorkflowInstance.OnEndAssociateKeys(IAsyncResult)\n- uid: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: OnEndFlushTrackingRecords(IAsyncResult)\n  nameWithType: WorkflowInstance.OnEndFlushTrackingRecords(IAsyncResult)\n  fullName: WorkflowInstance.OnEndFlushTrackingRecords(IAsyncResult)\n- uid: System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: OnEndPersist(IAsyncResult)\n  nameWithType: WorkflowInstance.OnEndPersist(IAsyncResult)\n  fullName: WorkflowInstance.OnEndPersist(IAsyncResult)\n- uid: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: OnEndResumeBookmark(IAsyncResult)\n  nameWithType: WorkflowInstance.OnEndResumeBookmark(IAsyncResult)\n  fullName: WorkflowInstance.OnEndResumeBookmark(IAsyncResult)\n- uid: System.Activities.BookmarkResumptionResult\n  parent: System.Activities\n  isExternal: false\n  name: BookmarkResumptionResult\n  nameWithType: BookmarkResumptionResult\n  fullName: System.Activities.BookmarkResumptionResult\n- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: OnNotifyPaused()\n  nameWithType: WorkflowInstance.OnNotifyPaused()\n  fullName: WorkflowInstance.OnNotifyPaused()\n- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: OnNotifyUnhandledException(Exception, Activity, String)\n  nameWithType: WorkflowInstance.OnNotifyUnhandledException(Exception, Activity, String)\n  fullName: WorkflowInstance.OnNotifyUnhandledException(Exception, Activity, String)\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: OnRequestAbort(Exception)\n  nameWithType: WorkflowInstance.OnRequestAbort(Exception)\n  fullName: WorkflowInstance.OnRequestAbort(Exception)\n- uid: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: RegisterExtensionManager(WorkflowInstanceExtensionManager)\n  nameWithType: WorkflowInstance.RegisterExtensionManager(WorkflowInstanceExtensionManager)\n  fullName: WorkflowInstance.RegisterExtensionManager(WorkflowInstanceExtensionManager)\n- uid: System.Activities.Hosting.WorkflowInstanceExtensionManager\n  parent: System.Activities.Hosting\n  isExternal: false\n  name: WorkflowInstanceExtensionManager\n  nameWithType: WorkflowInstanceExtensionManager\n  fullName: System.Activities.Hosting.WorkflowInstanceExtensionManager\n- uid: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: SupportsInstanceKeys\n  nameWithType: WorkflowInstance.SupportsInstanceKeys\n  fullName: WorkflowInstance.SupportsInstanceKeys\n- uid: System.Activities.Hosting.WorkflowInstance.SynchronizationContext\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: SynchronizationContext\n  nameWithType: WorkflowInstance.SynchronizationContext\n  fullName: WorkflowInstance.SynchronizationContext\n- uid: System.Threading.SynchronizationContext\n  parent: System.Threading\n  isExternal: false\n  name: SynchronizationContext\n  nameWithType: SynchronizationContext\n  fullName: System.Threading.SynchronizationContext\n- uid: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: ThrowIfReadOnly()\n  nameWithType: WorkflowInstance.ThrowIfReadOnly()\n  fullName: WorkflowInstance.ThrowIfReadOnly()\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: WorkflowDefinition\n  nameWithType: WorkflowInstance.WorkflowDefinition\n  fullName: WorkflowInstance.WorkflowDefinition\n- uid: System.Activities.Hosting.WorkflowInstance.#ctor*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: WorkflowInstance\n  nameWithType: WorkflowInstance.WorkflowInstance\n  fullName: WorkflowInstance.WorkflowInstance\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: BeginFlushTrackingRecords\n  nameWithType: WorkflowInstance.BeginFlushTrackingRecords\n  fullName: WorkflowInstance.BeginFlushTrackingRecords\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.Controller*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: Controller\n  nameWithType: WorkflowInstance.Controller\n  fullName: WorkflowInstance.Controller\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: DefinitionIdentity\n  nameWithType: WorkflowInstance.DefinitionIdentity\n  fullName: WorkflowInstance.DefinitionIdentity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.DisposeExtensions*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: DisposeExtensions\n  nameWithType: WorkflowInstance.DisposeExtensions\n  fullName: WorkflowInstance.DisposeExtensions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: EndFlushTrackingRecords\n  nameWithType: WorkflowInstance.EndFlushTrackingRecords\n  fullName: WorkflowInstance.EndFlushTrackingRecords\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: FlushTrackingRecords\n  nameWithType: WorkflowInstance.FlushTrackingRecords\n  fullName: WorkflowInstance.FlushTrackingRecords\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: GetActivitiesBlockingUpdate\n  nameWithType: WorkflowInstance.GetActivitiesBlockingUpdate\n  fullName: WorkflowInstance.GetActivitiesBlockingUpdate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.GetExtension``1*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: GetExtension<T>\n  nameWithType: WorkflowInstance.GetExtension<T>\n  fullName: WorkflowInstance.GetExtension<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.GetExtensions``1*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: GetExtensions<T>\n  nameWithType: WorkflowInstance.GetExtensions<T>\n  fullName: WorkflowInstance.GetExtensions<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.HostEnvironment*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: HostEnvironment\n  nameWithType: WorkflowInstance.HostEnvironment\n  fullName: WorkflowInstance.HostEnvironment\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.Id*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: Id\n  nameWithType: WorkflowInstance.Id\n  fullName: WorkflowInstance.Id\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.Initialize*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: Initialize\n  nameWithType: WorkflowInstance.Initialize\n  fullName: WorkflowInstance.Initialize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.IsReadOnly*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: WorkflowInstance.IsReadOnly\n  fullName: WorkflowInstance.IsReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: OnBeginAssociateKeys\n  nameWithType: WorkflowInstance.OnBeginAssociateKeys\n  fullName: WorkflowInstance.OnBeginAssociateKeys\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: OnBeginFlushTrackingRecords\n  nameWithType: WorkflowInstance.OnBeginFlushTrackingRecords\n  fullName: WorkflowInstance.OnBeginFlushTrackingRecords\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.OnBeginPersist*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: OnBeginPersist\n  nameWithType: WorkflowInstance.OnBeginPersist\n  fullName: WorkflowInstance.OnBeginPersist\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: OnBeginResumeBookmark\n  nameWithType: WorkflowInstance.OnBeginResumeBookmark\n  fullName: WorkflowInstance.OnBeginResumeBookmark\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: OnDisassociateKeys\n  nameWithType: WorkflowInstance.OnDisassociateKeys\n  fullName: WorkflowInstance.OnDisassociateKeys\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: OnEndAssociateKeys\n  nameWithType: WorkflowInstance.OnEndAssociateKeys\n  fullName: WorkflowInstance.OnEndAssociateKeys\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: OnEndFlushTrackingRecords\n  nameWithType: WorkflowInstance.OnEndFlushTrackingRecords\n  fullName: WorkflowInstance.OnEndFlushTrackingRecords\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.OnEndPersist*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: OnEndPersist\n  nameWithType: WorkflowInstance.OnEndPersist\n  fullName: WorkflowInstance.OnEndPersist\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: OnEndResumeBookmark\n  nameWithType: WorkflowInstance.OnEndResumeBookmark\n  fullName: WorkflowInstance.OnEndResumeBookmark\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: OnNotifyPaused\n  nameWithType: WorkflowInstance.OnNotifyPaused\n  fullName: WorkflowInstance.OnNotifyPaused\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: OnNotifyUnhandledException\n  nameWithType: WorkflowInstance.OnNotifyUnhandledException\n  fullName: WorkflowInstance.OnNotifyUnhandledException\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.OnRequestAbort*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: OnRequestAbort\n  nameWithType: WorkflowInstance.OnRequestAbort\n  fullName: WorkflowInstance.OnRequestAbort\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: RegisterExtensionManager\n  nameWithType: WorkflowInstance.RegisterExtensionManager\n  fullName: WorkflowInstance.RegisterExtensionManager\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: SupportsInstanceKeys\n  nameWithType: WorkflowInstance.SupportsInstanceKeys\n  fullName: WorkflowInstance.SupportsInstanceKeys\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.SynchronizationContext*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: SynchronizationContext\n  nameWithType: WorkflowInstance.SynchronizationContext\n  fullName: WorkflowInstance.SynchronizationContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: ThrowIfReadOnly\n  nameWithType: WorkflowInstance.ThrowIfReadOnly\n  fullName: WorkflowInstance.ThrowIfReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition*\n  parent: System.Activities.Hosting.WorkflowInstance\n  isExternal: false\n  name: WorkflowDefinition\n  nameWithType: WorkflowInstance.WorkflowDefinition\n  fullName: WorkflowInstance.WorkflowDefinition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Hosting/WorkflowInstance.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}