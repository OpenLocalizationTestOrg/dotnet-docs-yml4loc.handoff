{"nodes":[{"content":"Controls rights to access Domain Name System (DNS) servers on the network.","nodes":[{"pos":[0,74],"content":"Controls rights to access Domain Name System (DNS) servers on the network.","nodes":[{"content":"Controls rights to access Domain Name System (DNS) servers on the network.","pos":[0,74]}]}],"pos":[819,894],"yaml":true},{"content":"The default permissions allow all local and Intranet zone applications to access DNS services, and no DNS permission for Internet zone applications.","nodes":[{"pos":[0,148],"content":"The default permissions allow all local and Intranet zone applications to access DNS services, and no DNS permission for Internet zone applications.","nodes":[{"content":"The default permissions allow all local and Intranet zone applications to access DNS services, and no DNS permission for Internet zone applications.","pos":[0,148]}]}],"pos":[905,1054],"yaml":true,"extradata":"MT"},{"content":"Creates a new instance of the <xref href=\"System.Net.DnsPermission\"></xref> class that either allows unrestricted DNS access or disallows DNS access.","nodes":[{"pos":[0,149],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.DnsPermission\"&gt;&lt;/xref&gt;</ph> class that either allows unrestricted DNS access or disallows DNS access.","source":"Creates a new instance of the <xref href=\"System.Net.DnsPermission\"></xref> class that either allows unrestricted DNS access or disallows DNS access."}],"pos":[3591,3741],"yaml":true},{"content":"If `state` is <xref:System.Security.Permissions.PermissionState.Unrestricted>, the <xref:System.Net.DnsPermission> instance passes all demands. If `state` contains any other value, the <xref:System.Net.DnsPermission> instance fails all demands.","nodes":[{"pos":[0,244],"content":"If `state` is <xref:System.Security.Permissions.PermissionState.Unrestricted>, the <xref:System.Net.DnsPermission> instance passes all demands. If `state` contains any other value, the <xref:System.Net.DnsPermission> instance fails all demands.","nodes":[{"content":"If <ph id=\"ph1\">`state`</ph> is <ph id=\"ph2\">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>, the <ph id=\"ph3\">&lt;xref:System.Net.DnsPermission&gt;</ph> instance passes all demands.","pos":[0,143],"source":"If `state` is <xref:System.Security.Permissions.PermissionState.Unrestricted>, the <xref:System.Net.DnsPermission> instance passes all demands."},{"content":"If <ph id=\"ph1\">`state`</ph> contains any other value, the <ph id=\"ph2\">&lt;xref:System.Net.DnsPermission&gt;</ph> instance fails all demands.","pos":[144,244],"source":" If `state` contains any other value, the <xref:System.Net.DnsPermission> instance fails all demands."}]}],"pos":[3752,3997],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.","nodes":[{"pos":[0,83],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."}],"pos":[4771,4855],"yaml":true},{"content":"<code>state</code> is not a valid <xref href=\"System.Security.Permissions.PermissionState\"></xref> value.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">&lt;code&gt;state&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>state</code> is not a valid <xref href=\"System.Security.Permissions.PermissionState\"></xref> value."}],"pos":[5007,5113],"yaml":true},{"content":"Creates an identical copy of the current permission instance.","nodes":[{"pos":[0,61],"content":"Creates an identical copy of the current permission instance.","nodes":[{"content":"Creates an identical copy of the current permission instance.","pos":[0,61]}]}],"pos":[5988,6050],"yaml":true},{"content":"A copy of a <xref:System.Net.DnsPermission> instance provides the same access to DNS servers as the original permission instance.","nodes":[{"pos":[0,129],"content":"A copy of a <xref:System.Net.DnsPermission> instance provides the same access to DNS servers as the original permission instance.","nodes":[{"content":"A copy of a <ph id=\"ph1\">&lt;xref:System.Net.DnsPermission&gt;</ph> instance provides the same access to DNS servers as the original permission instance.","pos":[0,129],"source":"A copy of a <xref:System.Net.DnsPermission> instance provides the same access to DNS servers as the original permission instance."}]}],"pos":[6061,6191],"yaml":true,"extradata":"MT"},{"content":"A new instance of the <xref href=\"System.Net.DnsPermission\"></xref> class that is an identical copy of the current instance.","nodes":[{"pos":[0,124],"content":"A new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.DnsPermission\"&gt;&lt;/xref&gt;</ph> class that is an identical copy of the current instance.","source":"A new instance of the <xref href=\"System.Net.DnsPermission\"></xref> class that is an identical copy of the current instance."}],"pos":[6881,7006],"yaml":true},{"content":"Reconstructs a <xref href=\"System.Net.DnsPermission\"></xref> instance from an XML encoding.","nodes":[{"pos":[0,91],"content":"Reconstructs a <ph id=\"ph1\">&lt;xref href=\"System.Net.DnsPermission\"&gt;&lt;/xref&gt;</ph> instance from an XML encoding.","source":"Reconstructs a <xref href=\"System.Net.DnsPermission\"></xref> instance from an XML encoding."}],"pos":[8103,8195],"yaml":true},{"content":"The <xref:System.Net.DnsPermission.FromXml%2A> method reconstructs a <xref:System.Net.DnsPermission> instance from an XML encoding defined by the <xref:System.Security.SecurityElement> class.  \n  \n Use the <xref:System.Net.DnsPermission.ToXml%2A> method to XML-encode the <xref:System.Net.DnsPermission> instance, including state information.","nodes":[{"pos":[0,191],"content":"The <xref:System.Net.DnsPermission.FromXml%2A> method reconstructs a <xref:System.Net.DnsPermission> instance from an XML encoding defined by the <xref:System.Security.SecurityElement> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.DnsPermission.FromXml%2A&gt;</ph> method reconstructs a <ph id=\"ph2\">&lt;xref:System.Net.DnsPermission&gt;</ph> instance from an XML encoding defined by the <ph id=\"ph3\">&lt;xref:System.Security.SecurityElement&gt;</ph> class.","pos":[0,191],"source":"The <xref:System.Net.DnsPermission.FromXml%2A> method reconstructs a <xref:System.Net.DnsPermission> instance from an XML encoding defined by the <xref:System.Security.SecurityElement> class."}]},{"pos":[198,342],"content":"Use the <xref:System.Net.DnsPermission.ToXml%2A> method to XML-encode the <xref:System.Net.DnsPermission> instance, including state information.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Net.DnsPermission.ToXml%2A&gt;</ph> method to XML-encode the <ph id=\"ph2\">&lt;xref:System.Net.DnsPermission&gt;</ph> instance, including state information.","pos":[0,144],"source":"Use the <xref:System.Net.DnsPermission.ToXml%2A> method to XML-encode the <xref:System.Net.DnsPermission> instance, including state information."}]}],"pos":[8206,8553],"yaml":true,"extradata":"MT"},{"content":"The XML encoding to use to reconstruct the <xref href=\"System.Net.DnsPermission\"></xref> instance.","nodes":[{"pos":[0,98],"content":"The XML encoding to use to reconstruct the <ph id=\"ph1\">&lt;xref href=\"System.Net.DnsPermission\"&gt;&lt;/xref&gt;</ph> instance.","source":"The XML encoding to use to reconstruct the <xref href=\"System.Net.DnsPermission\"></xref> instance."}],"pos":[9307,9406],"yaml":true},{"content":"<code>securityElement</code> is `null`.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;securityElement&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>securityElement</code> is `null`."}],"pos":[9568,9608],"yaml":true},{"content":"<code>securityElement</code> is not a <xref href=\"System.Net.DnsPermission\"></xref> element.","nodes":[{"pos":[0,92],"content":"<ph id=\"ph1\">&lt;code&gt;securityElement&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.Net.DnsPermission\"&gt;&lt;/xref&gt;</ph> element.","source":"<code>securityElement</code> is not a <xref href=\"System.Net.DnsPermission\"></xref> element."}],"pos":[9702,9795],"yaml":true},{"content":"Creates a permission instance that is the intersection of the current permission instance and the specified permission instance.","nodes":[{"pos":[0,128],"content":"Creates a permission instance that is the intersection of the current permission instance and the specified permission instance.","nodes":[{"content":"Creates a permission instance that is the intersection of the current permission instance and the specified permission instance.","pos":[0,128]}]}],"pos":[10820,10949],"yaml":true},{"content":"The <xref:System.Net.DnsPermission.Intersect%2A> method returns a <xref:System.Net.DnsPermission> instance that allows the access defined by both the current <xref:System.Net.DnsPermission> instance and the specified <xref:System.Net.DnsPermission> instance. Any demand must pass both permissions to pass their intersection.","nodes":[{"pos":[0,324],"content":"The <xref:System.Net.DnsPermission.Intersect%2A> method returns a <xref:System.Net.DnsPermission> instance that allows the access defined by both the current <xref:System.Net.DnsPermission> instance and the specified <xref:System.Net.DnsPermission> instance. Any demand must pass both permissions to pass their intersection.","nodes":[{"content":"The <xref:System.Net.DnsPermission.Intersect%2A> method returns a <xref:System.Net.DnsPermission> instance that allows the access defined by both the current <xref:System.Net.DnsPermission> instance and the specified <xref:System.Net.DnsPermission> instance. Any demand must pass both permissions to pass their intersection.","pos":[0,324],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.DnsPermission.Intersect%2A&gt;</ph> method returns a <ph id=\"ph2\">&lt;xref:System.Net.DnsPermission&gt;</ph> instance that allows the access defined by both the current <ph id=\"ph3\">&lt;xref:System.Net.DnsPermission&gt;</ph> instance and the specified <ph id=\"ph4\">&lt;xref:System.Net.DnsPermission&gt;</ph> instance.","pos":[0,258],"source":"The <xref:System.Net.DnsPermission.Intersect%2A> method returns a <xref:System.Net.DnsPermission> instance that allows the access defined by both the current <xref:System.Net.DnsPermission> instance and the specified <xref:System.Net.DnsPermission> instance."},{"content":"Any demand must pass both permissions to pass their intersection.","pos":[259,324]}]}]}],"pos":[10960,11285],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Net.DnsPermission\"></xref> instance to intersect with the current instance.","nodes":[{"pos":[0,98],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.DnsPermission\"&gt;&lt;/xref&gt;</ph> instance to intersect with the current instance.","source":"The <xref href=\"System.Net.DnsPermission\"></xref> instance to intersect with the current instance."}],"pos":[12161,12260],"yaml":true},{"content":"A <xref href=\"System.Net.DnsPermission\"></xref> instance that represents the intersection of the current <xref href=\"System.Net.DnsPermission\"></xref> instance with the specified <xref href=\"System.Net.DnsPermission\"></xref> instance, or `null` if the intersection is empty. If both the current instance and <code>target</code> are unrestricted, this method returns a new <xref href=\"System.Net.DnsPermission\"></xref> instance that is unrestricted; otherwise, it returns `null`.","nodes":[{"pos":[0,478],"content":"A <xref href=\"System.Net.DnsPermission\"></xref> instance that represents the intersection of the current <xref href=\"System.Net.DnsPermission\"></xref> instance with the specified <xref href=\"System.Net.DnsPermission\"></xref> instance, or `null` if the intersection is empty. If both the current instance and <code>target</code> are unrestricted, this method returns a new <xref href=\"System.Net.DnsPermission\"></xref> instance that is unrestricted; otherwise, it returns `null`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.DnsPermission\"&gt;&lt;/xref&gt;</ph> instance that represents the intersection of the current <ph id=\"ph2\">&lt;xref href=\"System.Net.DnsPermission\"&gt;&lt;/xref&gt;</ph> instance with the specified <ph id=\"ph3\">&lt;xref href=\"System.Net.DnsPermission\"&gt;&lt;/xref&gt;</ph> instance, or <ph id=\"ph4\">`null`</ph> if the intersection is empty.","pos":[0,274],"source":"A <xref href=\"System.Net.DnsPermission\"></xref> instance that represents the intersection of the current <xref href=\"System.Net.DnsPermission\"></xref> instance with the specified <xref href=\"System.Net.DnsPermission\"></xref> instance, or `null` if the intersection is empty."},{"content":"If both the current instance and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> are unrestricted, this method returns a new <ph id=\"ph2\">&lt;xref href=\"System.Net.DnsPermission\"&gt;&lt;/xref&gt;</ph> instance that is unrestricted; otherwise, it returns <ph id=\"ph3\">`null`</ph>.","pos":[275,478],"source":" If both the current instance and <code>target</code> are unrestricted, this method returns a new <xref href=\"System.Net.DnsPermission\"></xref> instance that is unrestricted; otherwise, it returns `null`."}]}],"pos":[12331,12810],"yaml":true},{"content":"<code>target</code> is neither a <xref href=\"System.Net.DnsPermission\"></xref> nor `null`.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is neither a <ph id=\"ph2\">&lt;xref href=\"System.Net.DnsPermission\"&gt;&lt;/xref&gt;</ph> nor <ph id=\"ph3\">`null`</ph>.","source":"<code>target</code> is neither a <xref href=\"System.Net.DnsPermission\"></xref> nor `null`."}],"pos":[12966,13057],"yaml":true},{"content":"Determines whether the current permission instance is a subset of the specified permission instance.","nodes":[{"pos":[0,100],"content":"Determines whether the current permission instance is a subset of the specified permission instance.","nodes":[{"content":"Determines whether the current permission instance is a subset of the specified permission instance.","pos":[0,100]}]}],"pos":[14088,14189],"yaml":true},{"content":"The current <xref:System.Net.DnsPermission> instance is a subset of the specified <xref:System.Net.DnsPermission> instance if the current <xref:System.Net.DnsPermission> instance specifies a set of operations that is wholly contained by the specified <xref:System.Net.DnsPermission> instance.  \n  \n If the <xref:System.Net.DnsPermission.IsSubsetOf%2A> method returns `true`, the current <xref:System.Net.DnsPermission> instance allows no more access to DNS servers than does the specified <xref:System.Net.DnsPermission> instance.","nodes":[{"pos":[0,292],"content":"The current <xref:System.Net.DnsPermission> instance is a subset of the specified <xref:System.Net.DnsPermission> instance if the current <xref:System.Net.DnsPermission> instance specifies a set of operations that is wholly contained by the specified <xref:System.Net.DnsPermission> instance.","nodes":[{"content":"The current <ph id=\"ph1\">&lt;xref:System.Net.DnsPermission&gt;</ph> instance is a subset of the specified <ph id=\"ph2\">&lt;xref:System.Net.DnsPermission&gt;</ph> instance if the current <ph id=\"ph3\">&lt;xref:System.Net.DnsPermission&gt;</ph> instance specifies a set of operations that is wholly contained by the specified <ph id=\"ph4\">&lt;xref:System.Net.DnsPermission&gt;</ph> instance.","pos":[0,292],"source":"The current <xref:System.Net.DnsPermission> instance is a subset of the specified <xref:System.Net.DnsPermission> instance if the current <xref:System.Net.DnsPermission> instance specifies a set of operations that is wholly contained by the specified <xref:System.Net.DnsPermission> instance."}]},{"pos":[299,530],"content":"If the <ph id=\"ph1\">&lt;xref:System.Net.DnsPermission.IsSubsetOf%2A&gt;</ph> method returns <ph id=\"ph2\">`true`</ph>, the current <ph id=\"ph3\">&lt;xref:System.Net.DnsPermission&gt;</ph> instance allows no more access to DNS servers than does the specified <ph id=\"ph4\">&lt;xref:System.Net.DnsPermission&gt;</ph> instance.","source":"If the <xref:System.Net.DnsPermission.IsSubsetOf%2A> method returns `true`, the current <xref:System.Net.DnsPermission> instance allows no more access to DNS servers than does the specified <xref:System.Net.DnsPermission> instance."}],"pos":[14200,14735],"yaml":true,"extradata":"MT"},{"content":"The second <xref href=\"System.Net.DnsPermission\"></xref> instance to be tested for the subset relationship.","nodes":[{"pos":[0,107],"content":"The second <ph id=\"ph1\">&lt;xref href=\"System.Net.DnsPermission\"&gt;&lt;/xref&gt;</ph> instance to be tested for the subset relationship.","source":"The second <xref href=\"System.Net.DnsPermission\"></xref> instance to be tested for the subset relationship."}],"pos":[15580,15688],"yaml":true},{"content":"`false` if the current instance is unrestricted and <code>target</code> is either `null` or unrestricted; otherwise, `true`.","nodes":[{"pos":[0,124],"content":"<ph id=\"ph1\">`false`</ph> if the current instance is unrestricted and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> is either <ph id=\"ph3\">`null`</ph> or unrestricted; otherwise, <ph id=\"ph4\">`true`</ph>.","source":"`false` if the current instance is unrestricted and <code>target</code> is either `null` or unrestricted; otherwise, `true`."}],"pos":[15746,15873],"yaml":true},{"content":"<code>target</code> is neither a <xref href=\"System.Net.DnsPermission\"></xref> nor `null`.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is neither a <ph id=\"ph2\">&lt;xref href=\"System.Net.DnsPermission\"&gt;&lt;/xref&gt;</ph> nor <ph id=\"ph3\">`null`</ph>.","source":"<code>target</code> is neither a <xref href=\"System.Net.DnsPermission\"></xref> nor `null`."}],"pos":[16030,16121],"yaml":true},{"content":"Checks the overall permission state of the object.","nodes":[{"pos":[0,50],"content":"Checks the overall permission state of the object.","nodes":[{"content":"Checks the overall permission state of the object.","pos":[0,50]}]}],"pos":[17056,17107],"yaml":true},{"content":"`true` if the <xref href=\"System.Net.DnsPermission\"></xref> instance was created with <xref href=\"System.Security.Permissions.PermissionState.Unrestricted\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,184],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Net.DnsPermission\"&gt;&lt;/xref&gt;</ph> instance was created with <ph id=\"ph3\">&lt;xref href=\"System.Security.Permissions.PermissionState.Unrestricted\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <xref href=\"System.Net.DnsPermission\"></xref> instance was created with <xref href=\"System.Security.Permissions.PermissionState.Unrestricted\"></xref>; otherwise, `false`."}],"pos":[17902,18089],"yaml":true},{"content":"Creates an XML encoding of a <xref href=\"System.Net.DnsPermission\"></xref> instance and its current state.","nodes":[{"pos":[0,106],"content":"Creates an XML encoding of a <ph id=\"ph1\">&lt;xref href=\"System.Net.DnsPermission\"&gt;&lt;/xref&gt;</ph> instance and its current state.","source":"Creates an XML encoding of a <xref href=\"System.Net.DnsPermission\"></xref> instance and its current state."}],"pos":[19040,19147],"yaml":true},{"content":"The <xref:System.Net.DnsPermission.ToXml%2A> method creates a <xref:System.Security.SecurityElement> instance to XML-encode a representation of the <xref:System.Net.DnsPermission> instance, including state information.  \n  \n Use the <xref:System.Net.DnsPermission.FromXml%2A> method to restore the state information from a <xref:System.Security.SecurityElement> instance.","nodes":[{"pos":[0,218],"content":"The <xref:System.Net.DnsPermission.ToXml%2A> method creates a <xref:System.Security.SecurityElement> instance to XML-encode a representation of the <xref:System.Net.DnsPermission> instance, including state information.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.DnsPermission.ToXml%2A&gt;</ph> method creates a <ph id=\"ph2\">&lt;xref:System.Security.SecurityElement&gt;</ph> instance to XML-encode a representation of the <ph id=\"ph3\">&lt;xref:System.Net.DnsPermission&gt;</ph> instance, including state information.","pos":[0,218],"source":"The <xref:System.Net.DnsPermission.ToXml%2A> method creates a <xref:System.Security.SecurityElement> instance to XML-encode a representation of the <xref:System.Net.DnsPermission> instance, including state information."}]},{"pos":[225,371],"content":"Use the <xref:System.Net.DnsPermission.FromXml%2A> method to restore the state information from a <xref:System.Security.SecurityElement> instance.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Net.DnsPermission.FromXml%2A&gt;</ph> method to restore the state information from a <ph id=\"ph2\">&lt;xref:System.Security.SecurityElement&gt;</ph> instance.","pos":[0,146],"source":"Use the <xref:System.Net.DnsPermission.FromXml%2A> method to restore the state information from a <xref:System.Security.SecurityElement> instance."}]}],"pos":[19158,19534],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.SecurityElement\"></xref> instance that contains an XML-encoded representation of the security object, including state information.","nodes":[{"pos":[0,160],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.SecurityElement\"&gt;&lt;/xref&gt;</ph> instance that contains an XML-encoded representation of the security object, including state information.","source":"A <xref href=\"System.Security.SecurityElement\"></xref> instance that contains an XML-encoded representation of the security object, including state information."}],"pos":[20284,20445],"yaml":true},{"content":"Creates a permission instance that is the union of the current permission instance and the specified permission instance.","nodes":[{"pos":[0,121],"content":"Creates a permission instance that is the union of the current permission instance and the specified permission instance.","nodes":[{"content":"Creates a permission instance that is the union of the current permission instance and the specified permission instance.","pos":[0,121]}]}],"pos":[21507,21629],"yaml":true},{"content":"The <xref:System.Net.DnsPermission.Union%2A> method returns a <xref:System.Net.DnsPermission> instance that allows the access defined by either the current <xref:System.Net.DnsPermission> instance or the specified <xref:System.Net.DnsPermission> instance. Any demand that passes either permission passes their union.","nodes":[{"pos":[0,316],"content":"The <xref:System.Net.DnsPermission.Union%2A> method returns a <xref:System.Net.DnsPermission> instance that allows the access defined by either the current <xref:System.Net.DnsPermission> instance or the specified <xref:System.Net.DnsPermission> instance. Any demand that passes either permission passes their union.","nodes":[{"content":"The <xref:System.Net.DnsPermission.Union%2A> method returns a <xref:System.Net.DnsPermission> instance that allows the access defined by either the current <xref:System.Net.DnsPermission> instance or the specified <xref:System.Net.DnsPermission> instance. Any demand that passes either permission passes their union.","pos":[0,316],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.DnsPermission.Union%2A&gt;</ph> method returns a <ph id=\"ph2\">&lt;xref:System.Net.DnsPermission&gt;</ph> instance that allows the access defined by either the current <ph id=\"ph3\">&lt;xref:System.Net.DnsPermission&gt;</ph> instance or the specified <ph id=\"ph4\">&lt;xref:System.Net.DnsPermission&gt;</ph> instance.","pos":[0,255],"source":"The <xref:System.Net.DnsPermission.Union%2A> method returns a <xref:System.Net.DnsPermission> instance that allows the access defined by either the current <xref:System.Net.DnsPermission> instance or the specified <xref:System.Net.DnsPermission> instance."},{"content":"Any demand that passes either permission passes their union.","pos":[256,316]}]}]}],"pos":[21640,21957],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Net.DnsPermission\"></xref> instance to combine with the current instance.","nodes":[{"pos":[0,96],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.DnsPermission\"&gt;&lt;/xref&gt;</ph> instance to combine with the current instance.","source":"The <xref href=\"System.Net.DnsPermission\"></xref> instance to combine with the current instance."}],"pos":[22822,22919],"yaml":true},{"content":"A <xref href=\"System.Net.DnsPermission\"></xref> instance that represents the union of the current <xref href=\"System.Net.DnsPermission\"></xref> instance with the specified <xref href=\"System.Net.DnsPermission\"></xref> instance. If <code>target</code> is `null`, this method returns a copy of the current instance. If the current instance or <code>target</code> is unrestricted, this method returns a <xref href=\"System.Net.DnsPermission\"></xref> instance that is unrestricted; otherwise, it returns a <xref href=\"System.Net.DnsPermission\"></xref> instance that is restricted.","nodes":[{"pos":[0,575],"content":"A <xref href=\"System.Net.DnsPermission\"></xref> instance that represents the union of the current <xref href=\"System.Net.DnsPermission\"></xref> instance with the specified <xref href=\"System.Net.DnsPermission\"></xref> instance. If <code>target</code> is `null`, this method returns a copy of the current instance. If the current instance or <code>target</code> is unrestricted, this method returns a <xref href=\"System.Net.DnsPermission\"></xref> instance that is unrestricted; otherwise, it returns a <xref href=\"System.Net.DnsPermission\"></xref> instance that is restricted.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.DnsPermission\"&gt;&lt;/xref&gt;</ph> instance that represents the union of the current <ph id=\"ph2\">&lt;xref href=\"System.Net.DnsPermission\"&gt;&lt;/xref&gt;</ph> instance with the specified <ph id=\"ph3\">&lt;xref href=\"System.Net.DnsPermission\"&gt;&lt;/xref&gt;</ph> instance.","pos":[0,227],"source":"A <xref href=\"System.Net.DnsPermission\"></xref> instance that represents the union of the current <xref href=\"System.Net.DnsPermission\"></xref> instance with the specified <xref href=\"System.Net.DnsPermission\"></xref> instance."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>, this method returns a copy of the current instance.","pos":[228,313],"source":" If <code>target</code> is `null`, this method returns a copy of the current instance."},{"content":"If the current instance or <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> is unrestricted, this method returns a <ph id=\"ph2\">&lt;xref href=\"System.Net.DnsPermission\"&gt;&lt;/xref&gt;</ph> instance that is unrestricted; otherwise, it returns a <ph id=\"ph3\">&lt;xref href=\"System.Net.DnsPermission\"&gt;&lt;/xref&gt;</ph> instance that is restricted.","pos":[314,575],"source":" If the current instance or <code>target</code> is unrestricted, this method returns a <xref href=\"System.Net.DnsPermission\"></xref> instance that is unrestricted; otherwise, it returns a <xref href=\"System.Net.DnsPermission\"></xref> instance that is restricted."}]}],"pos":[22990,23566],"yaml":true},{"content":"<code>target</code> is neither a <xref href=\"System.Net.DnsPermission\"></xref> nor `null`.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is neither a <ph id=\"ph2\">&lt;xref href=\"System.Net.DnsPermission\"&gt;&lt;/xref&gt;</ph> nor <ph id=\"ph3\">`null`</ph>.","source":"<code>target</code> is neither a <xref href=\"System.Net.DnsPermission\"></xref> nor `null`."}],"pos":[23718,23809],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.DnsPermission\n  commentId: T:System.Net.DnsPermission\n  id: DnsPermission\n  children:\n  - System.Net.DnsPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Net.DnsPermission.Copy\n  - System.Net.DnsPermission.FromXml(System.Security.SecurityElement)\n  - System.Net.DnsPermission.Intersect(System.Security.IPermission)\n  - System.Net.DnsPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Net.DnsPermission.IsUnrestricted\n  - System.Net.DnsPermission.ToXml\n  - System.Net.DnsPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: DnsPermission\n  nameWithType: DnsPermission\n  fullName: System.Net.DnsPermission\n  type: Class\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Net\n  summary: Controls rights to access Domain Name System (DNS) servers on the network.\n  remarks: The default permissions allow all local and Intranet zone applications to access DNS services, and no DNS permission for Internet zone applications.\n  syntax:\n    content: 'public sealed class DnsPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsPermission.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.DnsPermission.#ctor(System.Security.Permissions.PermissionState)\n  commentId: M:System.Net.DnsPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Net.DnsPermission\n  langs:\n  - csharp\n  name: DnsPermission(PermissionState)\n  nameWithType: DnsPermission.DnsPermission(PermissionState)\n  fullName: DnsPermission.DnsPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Net\n  summary: Creates a new instance of the <xref href=\"System.Net.DnsPermission\"></xref> class that either allows unrestricted DNS access or disallows DNS access.\n  remarks: If `state` is <xref:System.Security.Permissions.PermissionState.Unrestricted>, the <xref:System.Net.DnsPermission> instance passes all demands. If `state` contains any other value, the <xref:System.Net.DnsPermission> instance fails all demands.\n  example:\n  - \"The following example creates an instance of the <xref:System.Net.DnsPermission> class.  \\n  \\n [!code-cpp[DnsPermission_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DnsPermission_Constructor/CPP/dnspermission_constructor.cpp#1)]\\n [!code-csharp[DnsPermission_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DnsPermission_Constructor/CS/dnspermission_constructor.cs#1)]\\n [!code-vb[DnsPermission_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DnsPermission_Constructor/VB/dnspermission_constructor.vb#1)]\"\n  syntax:\n    content: public DnsPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n  overload: System.Net.DnsPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>state</code> is not a valid <xref href=\"System.Security.Permissions.PermissionState\"></xref> value.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsPermission.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.DnsPermission.Copy\n  commentId: M:System.Net.DnsPermission.Copy\n  id: Copy\n  parent: System.Net.DnsPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: DnsPermission.Copy()\n  fullName: DnsPermission.Copy()\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Net\n  summary: Creates an identical copy of the current permission instance.\n  remarks: A copy of a <xref:System.Net.DnsPermission> instance provides the same access to DNS servers as the original permission instance.\n  example:\n  - \"The following example creates an identical copy of an existing <xref:System.Net.DnsPermission> instance.  \\n  \\n [!code-cpp[DnsPermission_Copy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DnsPermission_Copy/CPP/dnspermission_copy.cpp#1)]\\n [!code-csharp[DnsPermission_Copy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DnsPermission_Copy/CS/dnspermission_copy.cs#1)]\\n [!code-vb[DnsPermission_Copy#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DnsPermission_Copy/VB/dnspermission_copy.vb#1)]\"\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A new instance of the <xref href=\"System.Net.DnsPermission\"></xref> class that is an identical copy of the current instance.\n  overload: System.Net.DnsPermission.Copy*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsPermission.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.DnsPermission.FromXml(System.Security.SecurityElement)\n  commentId: M:System.Net.DnsPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Net.DnsPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: DnsPermission.FromXml(SecurityElement)\n  fullName: DnsPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Net\n  summary: Reconstructs a <xref href=\"System.Net.DnsPermission\"></xref> instance from an XML encoding.\n  remarks: \"The <xref:System.Net.DnsPermission.FromXml%2A> method reconstructs a <xref:System.Net.DnsPermission> instance from an XML encoding defined by the <xref:System.Security.SecurityElement> class.  \\n  \\n Use the <xref:System.Net.DnsPermission.ToXml%2A> method to XML-encode the <xref:System.Net.DnsPermission> instance, including state information.\"\n  example:\n  - \"The following example reconstructs a <xref:System.Net.DnsPermission> instance from an XML encoding.  \\n  \\n [!code-cpp[DnsPermission_FromXml#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DnsPermission_FromXml/CPP/dnspermission_fromxml.cpp#1)]\\n [!code-csharp[DnsPermission_FromXml#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DnsPermission_FromXml/CS/dnspermission_fromxml.cs#1)]\\n [!code-vb[DnsPermission_FromXml#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DnsPermission_FromXml/VB/dnspermission_fromxml.vb#1)]\"\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement securityElement);\n    parameters:\n    - id: securityElement\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the <xref href=\"System.Net.DnsPermission\"></xref> instance.\n  overload: System.Net.DnsPermission.FromXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>securityElement</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>securityElement</code> is not a <xref href=\"System.Net.DnsPermission\"></xref> element.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsPermission.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.DnsPermission.Intersect(System.Security.IPermission)\n  commentId: M:System.Net.DnsPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Net.DnsPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: DnsPermission.Intersect(IPermission)\n  fullName: DnsPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Net\n  summary: Creates a permission instance that is the intersection of the current permission instance and the specified permission instance.\n  remarks: The <xref:System.Net.DnsPermission.Intersect%2A> method returns a <xref:System.Net.DnsPermission> instance that allows the access defined by both the current <xref:System.Net.DnsPermission> instance and the specified <xref:System.Net.DnsPermission> instance. Any demand must pass both permissions to pass their intersection.\n  example:\n  - \"The following example creates a permission instance that is the intersection of the current permission instance and the specified permission instance.  \\n  \\n [!code-cpp[dnspermission_union_intersect#2](~/samples/snippets/cpp/VS_Snippets_Remoting/dnspermission_union_intersect/CPP/dnspermission_union_intersect.cpp#2)]\\n [!code-csharp[dnspermission_union_intersect#2](~/samples/snippets/csharp/VS_Snippets_Remoting/dnspermission_union_intersect/CS/dnspermission_union_intersect.cs#2)]\\n [!code-vb[dnspermission_union_intersect#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/dnspermission_union_intersect/VB/dnspermission_union_intersect.vb#2)]\"\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: The <xref href=\"System.Net.DnsPermission\"></xref> instance to intersect with the current instance.\n    return:\n      type: System.Security.IPermission\n      description: A <xref href=\"System.Net.DnsPermission\"></xref> instance that represents the intersection of the current <xref href=\"System.Net.DnsPermission\"></xref> instance with the specified <xref href=\"System.Net.DnsPermission\"></xref> instance, or `null` if the intersection is empty. If both the current instance and <code>target</code> are unrestricted, this method returns a new <xref href=\"System.Net.DnsPermission\"></xref> instance that is unrestricted; otherwise, it returns `null`.\n  overload: System.Net.DnsPermission.Intersect*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is neither a <xref href=\"System.Net.DnsPermission\"></xref> nor `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsPermission.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.DnsPermission.IsSubsetOf(System.Security.IPermission)\n  commentId: M:System.Net.DnsPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Net.DnsPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: DnsPermission.IsSubsetOf(IPermission)\n  fullName: DnsPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Net\n  summary: Determines whether the current permission instance is a subset of the specified permission instance.\n  remarks: \"The current <xref:System.Net.DnsPermission> instance is a subset of the specified <xref:System.Net.DnsPermission> instance if the current <xref:System.Net.DnsPermission> instance specifies a set of operations that is wholly contained by the specified <xref:System.Net.DnsPermission> instance.  \\n  \\n If the <xref:System.Net.DnsPermission.IsSubsetOf%2A> method returns `true`, the current <xref:System.Net.DnsPermission> instance allows no more access to DNS servers than does the specified <xref:System.Net.DnsPermission> instance.\"\n  example:\n  - \"The following example uses the <xref:System.Net.DnsPermission.IsSubsetOf%2A> method to determine whether the current permission instance is a subset of the specified permission instance.  \\n  \\n [!code-cpp[DnsPermission_IsSubsetOf#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DnsPermission_IsSubsetOf/CPP/dnspermission_issubsetof.cpp#1)]\\n [!code-csharp[DnsPermission_IsSubsetOf#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DnsPermission_IsSubsetOf/CS/dnspermission_issubsetof.cs#1)]\\n [!code-vb[DnsPermission_IsSubsetOf#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DnsPermission_IsSubsetOf/VB/dnspermission_issubsetof.vb#1)]\"\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: The second <xref href=\"System.Net.DnsPermission\"></xref> instance to be tested for the subset relationship.\n    return:\n      type: System.Boolean\n      description: '`false` if the current instance is unrestricted and <code>target</code> is either `null` or unrestricted; otherwise, `true`.'\n  overload: System.Net.DnsPermission.IsSubsetOf*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is neither a <xref href=\"System.Net.DnsPermission\"></xref> nor `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsPermission.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.DnsPermission.IsUnrestricted\n  commentId: M:System.Net.DnsPermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Net.DnsPermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: DnsPermission.IsUnrestricted()\n  fullName: DnsPermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Net\n  summary: Checks the overall permission state of the object.\n  remarks: ''\n  example:\n  - \"The following example uses the <xref:System.Net.DnsPermission.IsUnrestricted%2A> method to check the overall permission state of the object.  \\n  \\n [!code-cpp[DnsPermission_IsUnrestricted#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DnsPermission_IsUnrestricted/CPP/dnspermission_isunrestricted.cpp#1)]\\n [!code-csharp[DnsPermission_IsUnrestricted#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DnsPermission_IsUnrestricted/CS/dnspermission_isunrestricted.cs#1)]\\n [!code-vb[DnsPermission_IsUnrestricted#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DnsPermission_IsUnrestricted/VB/dnspermission_isunrestricted.vb#1)]\"\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Net.DnsPermission\"></xref> instance was created with <xref href=\"System.Security.Permissions.PermissionState.Unrestricted\"></xref>; otherwise, `false`.'\n  overload: System.Net.DnsPermission.IsUnrestricted*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsPermission.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.DnsPermission.ToXml\n  commentId: M:System.Net.DnsPermission.ToXml\n  id: ToXml\n  parent: System.Net.DnsPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: DnsPermission.ToXml()\n  fullName: DnsPermission.ToXml()\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Net\n  summary: Creates an XML encoding of a <xref href=\"System.Net.DnsPermission\"></xref> instance and its current state.\n  remarks: \"The <xref:System.Net.DnsPermission.ToXml%2A> method creates a <xref:System.Security.SecurityElement> instance to XML-encode a representation of the <xref:System.Net.DnsPermission> instance, including state information.  \\n  \\n Use the <xref:System.Net.DnsPermission.FromXml%2A> method to restore the state information from a <xref:System.Security.SecurityElement> instance.\"\n  example:\n  - \"The following example creates an XML encoding of a <xref:System.Net.DnsPermission> instance.  \\n  \\n [!code-cpp[DnsPermission_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DnsPermission_Constructor/CPP/dnspermission_constructor.cpp#1)]\\n [!code-csharp[DnsPermission_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DnsPermission_Constructor/CS/dnspermission_constructor.cs#1)]\\n [!code-vb[DnsPermission_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DnsPermission_Constructor/VB/dnspermission_constructor.vb#1)]\"\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: A <xref href=\"System.Security.SecurityElement\"></xref> instance that contains an XML-encoded representation of the security object, including state information.\n  overload: System.Net.DnsPermission.ToXml*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsPermission.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.DnsPermission.Union(System.Security.IPermission)\n  commentId: M:System.Net.DnsPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Net.DnsPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: DnsPermission.Union(IPermission)\n  fullName: DnsPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Net\n  summary: Creates a permission instance that is the union of the current permission instance and the specified permission instance.\n  remarks: The <xref:System.Net.DnsPermission.Union%2A> method returns a <xref:System.Net.DnsPermission> instance that allows the access defined by either the current <xref:System.Net.DnsPermission> instance or the specified <xref:System.Net.DnsPermission> instance. Any demand that passes either permission passes their union.\n  example:\n  - \"The following example creates a permission instance that is the union of the current permission instance and the specified permission instance.  \\n  \\n [!code-cpp[dnspermission_union_intersect#1](~/samples/snippets/cpp/VS_Snippets_Remoting/dnspermission_union_intersect/CPP/dnspermission_union_intersect.cpp#1)]\\n [!code-csharp[dnspermission_union_intersect#1](~/samples/snippets/csharp/VS_Snippets_Remoting/dnspermission_union_intersect/CS/dnspermission_union_intersect.cs#1)]\\n [!code-vb[dnspermission_union_intersect#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/dnspermission_union_intersect/VB/dnspermission_union_intersect.vb#1)]\"\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: The <xref href=\"System.Net.DnsPermission\"></xref> instance to combine with the current instance.\n    return:\n      type: System.Security.IPermission\n      description: A <xref href=\"System.Net.DnsPermission\"></xref> instance that represents the union of the current <xref href=\"System.Net.DnsPermission\"></xref> instance with the specified <xref href=\"System.Net.DnsPermission\"></xref> instance. If <code>target</code> is `null`, this method returns a copy of the current instance. If the current instance or <code>target</code> is unrestricted, this method returns a <xref href=\"System.Net.DnsPermission\"></xref> instance that is unrestricted; otherwise, it returns a <xref href=\"System.Net.DnsPermission\"></xref> instance that is restricted.\n  overload: System.Net.DnsPermission.Union*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is neither a <xref href=\"System.Net.DnsPermission\"></xref> nor `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsPermission.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Security.CodeAccessPermission\n  parent: System.Security\n  isExternal: false\n  name: CodeAccessPermission\n  nameWithType: CodeAccessPermission\n  fullName: System.Security.CodeAccessPermission\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Net.DnsPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Net.DnsPermission\n  isExternal: false\n  name: DnsPermission(PermissionState)\n  nameWithType: DnsPermission.DnsPermission(PermissionState)\n  fullName: DnsPermission.DnsPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Net.DnsPermission.Copy\n  parent: System.Net.DnsPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: DnsPermission.Copy()\n  fullName: DnsPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Net.DnsPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Net.DnsPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: DnsPermission.FromXml(SecurityElement)\n  fullName: DnsPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Net.DnsPermission.Intersect(System.Security.IPermission)\n  parent: System.Net.DnsPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: DnsPermission.Intersect(IPermission)\n  fullName: DnsPermission.Intersect(IPermission)\n- uid: System.Net.DnsPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Net.DnsPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: DnsPermission.IsSubsetOf(IPermission)\n  fullName: DnsPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.DnsPermission.IsUnrestricted\n  parent: System.Net.DnsPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: DnsPermission.IsUnrestricted()\n  fullName: DnsPermission.IsUnrestricted()\n- uid: System.Net.DnsPermission.ToXml\n  parent: System.Net.DnsPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: DnsPermission.ToXml()\n  fullName: DnsPermission.ToXml()\n- uid: System.Net.DnsPermission.Union(System.Security.IPermission)\n  parent: System.Net.DnsPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: DnsPermission.Union(IPermission)\n  fullName: DnsPermission.Union(IPermission)\n- uid: System.Net.DnsPermission.#ctor*\n  parent: System.Net.DnsPermission\n  isExternal: false\n  name: DnsPermission\n  nameWithType: DnsPermission.DnsPermission\n  fullName: DnsPermission.DnsPermission\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsPermission.xml\n- uid: System.Net.DnsPermission.Copy*\n  parent: System.Net.DnsPermission\n  isExternal: false\n  name: Copy\n  nameWithType: DnsPermission.Copy\n  fullName: DnsPermission.Copy\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsPermission.xml\n- uid: System.Net.DnsPermission.FromXml*\n  parent: System.Net.DnsPermission\n  isExternal: false\n  name: FromXml\n  nameWithType: DnsPermission.FromXml\n  fullName: DnsPermission.FromXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsPermission.xml\n- uid: System.Net.DnsPermission.Intersect*\n  parent: System.Net.DnsPermission\n  isExternal: false\n  name: Intersect\n  nameWithType: DnsPermission.Intersect\n  fullName: DnsPermission.Intersect\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsPermission.xml\n- uid: System.Net.DnsPermission.IsSubsetOf*\n  parent: System.Net.DnsPermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: DnsPermission.IsSubsetOf\n  fullName: DnsPermission.IsSubsetOf\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsPermission.xml\n- uid: System.Net.DnsPermission.IsUnrestricted*\n  parent: System.Net.DnsPermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: DnsPermission.IsUnrestricted\n  fullName: DnsPermission.IsUnrestricted\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsPermission.xml\n- uid: System.Net.DnsPermission.ToXml*\n  parent: System.Net.DnsPermission\n  isExternal: false\n  name: ToXml\n  nameWithType: DnsPermission.ToXml\n  fullName: DnsPermission.ToXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsPermission.xml\n- uid: System.Net.DnsPermission.Union*\n  parent: System.Net.DnsPermission\n  isExternal: false\n  name: Union\n  nameWithType: DnsPermission.Union\n  fullName: DnsPermission.Union\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/DnsPermission.xml\n- uid: System.Security.CodeAccessPermission.Equals(System.Object)\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CodeAccessPermission.Equals(Object)\n  fullName: CodeAccessPermission.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Security.CodeAccessPermission.GetHashCode\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CodeAccessPermission.GetHashCode()\n  fullName: CodeAccessPermission.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Security.CodeAccessPermission.ToString\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: ToString()\n  nameWithType: CodeAccessPermission.ToString()\n  fullName: CodeAccessPermission.ToString()\n- uid: System.Security.CodeAccessPermission.Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Assert()\n  nameWithType: CodeAccessPermission.Assert()\n  fullName: CodeAccessPermission.Assert()\n- uid: System.Security.CodeAccessPermission.Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Demand()\n  nameWithType: CodeAccessPermission.Demand()\n  fullName: CodeAccessPermission.Demand()\n- uid: System.Security.CodeAccessPermission.Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Deny()\n  nameWithType: CodeAccessPermission.Deny()\n  fullName: CodeAccessPermission.Deny()\n- uid: System.Security.CodeAccessPermission.PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: PermitOnly()\n  nameWithType: CodeAccessPermission.PermitOnly()\n  fullName: CodeAccessPermission.PermitOnly()\n- uid: System.Security.CodeAccessPermission.RevertAll\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAll()\n  nameWithType: CodeAccessPermission.RevertAll()\n  fullName: CodeAccessPermission.RevertAll()\n- uid: System.Security.CodeAccessPermission.RevertAssert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAssert()\n  nameWithType: CodeAccessPermission.RevertAssert()\n  fullName: CodeAccessPermission.RevertAssert()\n- uid: System.Security.CodeAccessPermission.RevertDeny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertDeny()\n  nameWithType: CodeAccessPermission.RevertDeny()\n  fullName: CodeAccessPermission.RevertDeny()\n- uid: System.Security.CodeAccessPermission.RevertPermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertPermitOnly()\n  nameWithType: CodeAccessPermission.RevertPermitOnly()\n  fullName: CodeAccessPermission.RevertPermitOnly()\n- uid: System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IPermission.Demand()\n  nameWithType: CodeAccessPermission.IPermission.Demand()\n  fullName: CodeAccessPermission.IPermission.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Assert()\n  nameWithType: CodeAccessPermission.IStackWalk.Assert()\n  fullName: CodeAccessPermission.IStackWalk.Assert()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Demand()\n  nameWithType: CodeAccessPermission.IStackWalk.Demand()\n  fullName: CodeAccessPermission.IStackWalk.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Deny()\n  nameWithType: CodeAccessPermission.IStackWalk.Deny()\n  fullName: CodeAccessPermission.IStackWalk.Deny()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.PermitOnly()\n  nameWithType: CodeAccessPermission.IStackWalk.PermitOnly()\n  fullName: CodeAccessPermission.IStackWalk.PermitOnly()\n- uid: System.Security.Permissions.IUnrestrictedPermission\n  parent: System.Security.Permissions\n  isExternal: false\n  name: IUnrestrictedPermission\n  nameWithType: IUnrestrictedPermission\n  fullName: System.Security.Permissions.IUnrestrictedPermission\n"}