### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.X509CertificateInitiatorClientCredential
  commentId: T:System.ServiceModel.Security.X509CertificateInitiatorClientCredential
  id: X509CertificateInitiatorClientCredential
  children:
  - System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate
  - System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  - System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  langs:
  - csharp
  name: X509CertificateInitiatorClientCredential
  nameWithType: X509CertificateInitiatorClientCredential
  fullName: System.ServiceModel.Security.X509CertificateInitiatorClientCredential
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: Defines a certificate used by a client to identify itself.
  syntax:
    content: public sealed class X509CertificateInitiatorClientCredential
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/X509CertificateInitiatorClientCredential.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate
  commentId: P:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate
  id: Certificate
  parent: System.ServiceModel.Security.X509CertificateInitiatorClientCredential
  langs:
  - csharp
  name: Certificate
  nameWithType: X509CertificateInitiatorClientCredential.Certificate
  fullName: X509CertificateInitiatorClientCredential.Certificate
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: Gets or sets the certificate to use to represent the service when communicating back to the client.
  remarks: When the first call is made on the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] proxy, the <xref:System.ServiceModel.Description.ClientCredentials> are made read-only. Subsequently calling the `set` method results in an <xref:System.InvalidOperationException>.
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; set; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: The <xref href="System.Security.Cryptography.X509Certificates.X509Certificate2"></xref> to use to represent the service when communicating back to the client.
  overload: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: A `set` method was used when the credential is read-only.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/X509CertificateInitiatorClientCredential.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  commentId: M:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  id: SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.X509CertificateInitiatorClientCredential
  langs:
  - csharp
  name: SetCertificate(String, StoreLocation, StoreName)
  nameWithType: X509CertificateInitiatorClientCredential.SetCertificate(String, StoreLocation, StoreName)
  fullName: X509CertificateInitiatorClientCredential.SetCertificate(String, StoreLocation, StoreName)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: Allows you to specify the certificate to use to represent the service by specifying the subject distinguished name.
  remarks: "For more information on the `subjectName` parameter, see <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName%2A>.  \n  \n Values for `storeLocation` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeration:  \n  \n-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: the certificate store assigned to the local machine (default).  \n  \n-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: the certificate store used by the current user.  \n  \n If the client application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. If the client application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  \n  \n Values for `storeName` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeration."
  example:
  - "The following code specifies the certificate to use.  \n  \n [!code-csharp[c_TcpClient#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_tcpclient/cs/source.cs#3)]"
  syntax:
    content: public void SetCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);
    parameters:
    - id: subjectName
      type: System.String
      description: Subject distinguished name.
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: The location of the certificate store the service uses to obtain the service certificate.
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: Specifies the name of the X.509 certificate store to open.
  overload: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/X509CertificateInitiatorClientCredential.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  commentId: M:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  id: SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.X509CertificateInitiatorClientCredential
  langs:
  - csharp
  name: SetCertificate(StoreLocation, StoreName, X509FindType, Object)
  nameWithType: X509CertificateInitiatorClientCredential.SetCertificate(StoreLocation, StoreName, X509FindType, Object)
  fullName: X509CertificateInitiatorClientCredential.SetCertificate(StoreLocation, StoreName, X509FindType, Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: Allows you to specify the certificate to use to represent the client by specifying query parameters such as <code>storeLocation</code>, <code>storeName</code>, <code>findType</code> and <code>findValue</code>.
  remarks: "Values for `storeLocation` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeration:  \n  \n-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: the certificate store assigned to the local machine (default).  \n  \n-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: the certificate store used by the current user.  \n  \n If the client application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. If the client application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  \n  \n Values for `storeName` are included in the <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeration.  \n  \n Values for `findType` are included in the <xref:System.Security.Cryptography.X509Certificates.X509FindType> enumeration.  \n  \n The most commonly used enumeration is <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>, which does a case-insensitive search on the subject name of certificates in the specified store. This can be an imprecise search. If more than one certificate is returned then the first one matching the find is used to represent the client."
  example:
  - "The following code specifies the certificate to use.  \n  \n [!code-csharp[c_TcpClient#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_tcpclient/cs/source.cs#2)]\n [!code-vb[c_TcpClient#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_tcpclient/vb/source.vb#2)]"
  syntax:
    content: public void SetCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);
    parameters:
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: The location of the certificate store the client uses to obtain the client certificate.
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: Specifies the name of the X.509 certificate store to open.
    - id: findType
      type: System.Security.Cryptography.X509Certificates.X509FindType
      description: Defines the type of X.509 search to be executed.
    - id: findValue
      type: System.Object
      description: The value to search for in the X.509 certificate store.
  overload: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/X509CertificateInitiatorClientCredential.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate
  parent: System.ServiceModel.Security.X509CertificateInitiatorClientCredential
  isExternal: false
  name: Certificate
  nameWithType: X509CertificateInitiatorClientCredential.Certificate
  fullName: X509CertificateInitiatorClientCredential.Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.X509CertificateInitiatorClientCredential
  isExternal: false
  name: SetCertificate(String, StoreLocation, StoreName)
  nameWithType: X509CertificateInitiatorClientCredential.SetCertificate(String, StoreLocation, StoreName)
  fullName: X509CertificateInitiatorClientCredential.SetCertificate(String, StoreLocation, StoreName)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.StoreLocation
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreLocation
  nameWithType: StoreLocation
  fullName: System.Security.Cryptography.X509Certificates.StoreLocation
- uid: System.Security.Cryptography.X509Certificates.StoreName
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreName
  nameWithType: StoreName
  fullName: System.Security.Cryptography.X509Certificates.StoreName
- uid: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.X509CertificateInitiatorClientCredential
  isExternal: false
  name: SetCertificate(StoreLocation, StoreName, X509FindType, Object)
  nameWithType: X509CertificateInitiatorClientCredential.SetCertificate(StoreLocation, StoreName, X509FindType, Object)
  fullName: X509CertificateInitiatorClientCredential.SetCertificate(StoreLocation, StoreName, X509FindType, Object)
- uid: System.Security.Cryptography.X509Certificates.X509FindType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509FindType
  nameWithType: X509FindType
  fullName: System.Security.Cryptography.X509Certificates.X509FindType
- uid: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate*
  parent: System.ServiceModel.Security.X509CertificateInitiatorClientCredential
  isExternal: false
  name: Certificate
  nameWithType: X509CertificateInitiatorClientCredential.Certificate
  fullName: X509CertificateInitiatorClientCredential.Certificate
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/X509CertificateInitiatorClientCredential.xml
- uid: System.ServiceModel.Security.X509CertificateInitiatorClientCredential.SetCertificate*
  parent: System.ServiceModel.Security.X509CertificateInitiatorClientCredential
  isExternal: false
  name: SetCertificate
  nameWithType: X509CertificateInitiatorClientCredential.SetCertificate
  fullName: X509CertificateInitiatorClientCredential.SetCertificate
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/X509CertificateInitiatorClientCredential.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
