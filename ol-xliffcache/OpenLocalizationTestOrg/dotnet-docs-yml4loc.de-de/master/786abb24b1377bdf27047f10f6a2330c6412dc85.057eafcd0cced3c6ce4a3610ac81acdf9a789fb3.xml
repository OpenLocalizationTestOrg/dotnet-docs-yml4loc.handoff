{"nodes":[{"content":"Uses Windows authentication to authenticate the user name and password in a <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> security token.","nodes":[{"pos":[0,162],"content":"Uses Windows authentication to authenticate the user name and password in a <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"&gt;&lt;/xref&gt;</ph> security token.","source":"Uses Windows authentication to authenticate the user name and password in a <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> security token."}],"pos":[902,1065],"yaml":true},{"content":"The <xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method uses Windows authentication to authenticate a user name and password.  \n  \n To provide a custom authentication scheme, see the <xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator> class.","nodes":[{"pos":[0,192],"content":"The <xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method uses Windows authentication to authenticate a user name and password.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A&gt;</ph> method uses Windows authentication to authenticate a user name and password.","pos":[0,192],"source":"The <xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method uses Windows authentication to authenticate a user name and password."}]},{"pos":[199,335],"content":"To provide a custom authentication scheme, see the <xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator> class.","nodes":[{"content":"To provide a custom authentication scheme, see the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator&gt;</ph> class.","pos":[0,136],"source":"To provide a custom authentication scheme, see the <xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator> class."}]}],"pos":[1076,1416],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\"></xref> class","nodes":[{"pos":[0,133],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\"&gt;&lt;/xref&gt;</ph> class","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\"></xref> class"}],"pos":[3815,3949],"yaml":true},{"content":"When the user is authenticated, claims that identify the Windows groups that a user belongs to are initially added to the <xref:System.IdentityModel.Policy.EvaluationContext.ClaimSets%2A> property and eventually to the <xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets%2A> property.","nodes":[{"pos":[0,297],"content":"When the user is authenticated, claims that identify the Windows groups that a user belongs to are initially added to the <xref:System.IdentityModel.Policy.EvaluationContext.ClaimSets%2A> property and eventually to the <xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets%2A> property.","nodes":[{"content":"When the user is authenticated, claims that identify the Windows groups that a user belongs to are initially added to the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Policy.EvaluationContext.ClaimSets%2A&gt;</ph> property and eventually to the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets%2A&gt;</ph> property.","pos":[0,297],"source":"When the user is authenticated, claims that identify the Windows groups that a user belongs to are initially added to the <xref:System.IdentityModel.Policy.EvaluationContext.ClaimSets%2A> property and eventually to the <xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets%2A> property."}]}],"pos":[3960,4258],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\"></xref> class by specifying whether the claims that identify the Windows groups that a user belongs to are initially added to the <xref href=\"System.IdentityModel.Policy.AuthorizationContext.ClaimSets\"></xref> property when the user is authenticated.","nodes":[{"pos":[0,370],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\"&gt;&lt;/xref&gt;</ph> class by specifying whether the claims that identify the Windows groups that a user belongs to are initially added to the <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Policy.AuthorizationContext.ClaimSets\"&gt;&lt;/xref&gt;</ph> property when the user is authenticated.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\"></xref> class by specifying whether the claims that identify the Windows groups that a user belongs to are initially added to the <xref href=\"System.IdentityModel.Policy.AuthorizationContext.ClaimSets\"></xref> property when the user is authenticated."}],"pos":[5800,6171],"yaml":true},{"content":"`true` to get the groups the Windows user belongs to; otherwise, `false`.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> to get the groups the Windows user belongs to; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to get the groups the Windows user belongs to; otherwise, `false`."}],"pos":[6365,6441],"yaml":true},{"content":"Authenticates the specified user name and password and returns the set of authorization policies for <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> security tokens.","nodes":[{"pos":[0,188],"content":"Authenticates the specified user name and password and returns the set of authorization policies for <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"&gt;&lt;/xref&gt;</ph> security tokens.","source":"Authenticates the specified user name and password and returns the set of authorization policies for <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> security tokens."}],"pos":[7971,8160],"yaml":true},{"content":"The `userName` parameter must be in one of the following formats: `domain\\username` or `username`. If the `userName` parameter is in the `domain\\username` format, then there must be only one backslash (\\\\) character separating the user name and domain.","nodes":[{"pos":[0,252],"content":"The `userName` parameter must be in one of the following formats: `domain\\username` or `username`. If the `userName` parameter is in the `domain\\username` format, then there must be only one backslash (\\\\) character separating the user name and domain.","nodes":[{"content":"The <ph id=\"ph1\">`userName`</ph> parameter must be in one of the following formats: <ph id=\"ph2\">`domain\\username`</ph> or <ph id=\"ph3\">`username`</ph>.","pos":[0,98],"source":"The `userName` parameter must be in one of the following formats: `domain\\username` or `username`."},{"content":"If the <ph id=\"ph1\">`userName`</ph> parameter is in the <ph id=\"ph2\">`domain\\username`</ph> format, then there must be only one backslash (<ph id=\"ph3\">\\\\</ph>) character separating the user name and domain.","pos":[99,252],"source":" If the `userName` parameter is in the `domain\\username` format, then there must be only one backslash (\\\\) character separating the user name and domain."}]}],"pos":[8171,8426],"yaml":true,"extradata":"MT"},{"content":"The user name associated with the security token.","nodes":[{"pos":[0,49],"content":"The user name associated with the security token.","nodes":[{"content":"The user name associated with the security token.","pos":[0,49]}]}],"pos":[8713,8763],"yaml":true},{"content":"The password associated with the security token.","nodes":[{"pos":[0,48],"content":"The password associated with the security token.","nodes":[{"content":"The password associated with the security token.","pos":[0,48]}]}],"pos":[8827,8876],"yaml":true},{"content":"A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application.","nodes":[{"pos":[0,232],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph> of type <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"&gt;&lt;/xref&gt;</ph> that contains the set of authorization policies in effect for this application.","source":"A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application."}],"pos":[9019,9252],"yaml":true},{"content":"<code>userName</code> contains more than one backslash (\\\\) character.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">&lt;code&gt;userName&lt;/code&gt;</ph> contains more than one backslash (<ph id=\"ph2\">\\\\</ph>) character.","source":"<code>userName</code> contains more than one backslash (\\\\) character."}],"pos":[9475,9546],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\n  commentId: T:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\n  id: WindowsUserNameSecurityTokenAuthenticator\n  children:\n  - System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.#ctor\n  - System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.#ctor(System.Boolean)\n  - System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)\n  langs:\n  - csharp\n  name: WindowsUserNameSecurityTokenAuthenticator\n  nameWithType: WindowsUserNameSecurityTokenAuthenticator\n  fullName: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Uses Windows authentication to authenticate the user name and password in a <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> security token.\n  remarks: \"The <xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> method uses Windows authentication to authenticate a user name and password.  \\n  \\n To provide a custom authentication scheme, see the <xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator> class.\"\n  syntax:\n    content: 'public class WindowsUserNameSecurityTokenAuthenticator : System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/WindowsUserNameSecurityTokenAuthenticator.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.#ctor\n  commentId: M:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: WindowsUserNameSecurityTokenAuthenticator()\n  nameWithType: WindowsUserNameSecurityTokenAuthenticator.WindowsUserNameSecurityTokenAuthenticator()\n  fullName: WindowsUserNameSecurityTokenAuthenticator.WindowsUserNameSecurityTokenAuthenticator()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\"></xref> class\n  remarks: When the user is authenticated, claims that identify the Windows groups that a user belongs to are initially added to the <xref:System.IdentityModel.Policy.EvaluationContext.ClaimSets%2A> property and eventually to the <xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets%2A> property.\n  syntax:\n    content: public WindowsUserNameSecurityTokenAuthenticator ();\n    parameters: []\n  overload: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/WindowsUserNameSecurityTokenAuthenticator.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.#ctor(System.Boolean)\n  commentId: M:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: WindowsUserNameSecurityTokenAuthenticator(Boolean)\n  nameWithType: WindowsUserNameSecurityTokenAuthenticator.WindowsUserNameSecurityTokenAuthenticator(Boolean)\n  fullName: WindowsUserNameSecurityTokenAuthenticator.WindowsUserNameSecurityTokenAuthenticator(Boolean)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\"></xref> class by specifying whether the claims that identify the Windows groups that a user belongs to are initially added to the <xref href=\"System.IdentityModel.Policy.AuthorizationContext.ClaimSets\"></xref> property when the user is authenticated.\n  syntax:\n    content: public WindowsUserNameSecurityTokenAuthenticator (bool includeWindowsGroups);\n    parameters:\n    - id: includeWindowsGroups\n      type: System.Boolean\n      description: '`true` to get the groups the Windows user belongs to; otherwise, `false`.'\n  overload: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/WindowsUserNameSecurityTokenAuthenticator.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)\n  commentId: M:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)\n  id: ValidateUserNamePasswordCore(System.String,System.String)\n  parent: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: ValidateUserNamePasswordCore(String, String)\n  nameWithType: WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String, String)\n  fullName: WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String, String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Authenticates the specified user name and password and returns the set of authorization policies for <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref> security tokens.\n  remarks: 'The `userName` parameter must be in one of the following formats: `domain\\username` or `username`. If the `userName` parameter is in the `domain\\username` format, then there must be only one backslash (\\\\) character separating the user name and domain.'\n  syntax:\n    content: protected override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateUserNamePasswordCore (string userName, string password);\n    parameters:\n    - id: userName\n      type: System.String\n      description: The user name associated with the security token.\n    - id: password\n      type: System.String\n      description: The password associated with the security token.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}\n      description: A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application.\n  overload: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>userName</code> contains more than one backslash (\\\\) character.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/WindowsUserNameSecurityTokenAuthenticator.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: UserNameSecurityTokenAuthenticator\n  nameWithType: UserNameSecurityTokenAuthenticator\n  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.#ctor\n  parent: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: WindowsUserNameSecurityTokenAuthenticator()\n  nameWithType: WindowsUserNameSecurityTokenAuthenticator.WindowsUserNameSecurityTokenAuthenticator()\n  fullName: WindowsUserNameSecurityTokenAuthenticator.WindowsUserNameSecurityTokenAuthenticator()\n- uid: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.#ctor(System.Boolean)\n  parent: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: WindowsUserNameSecurityTokenAuthenticator(Boolean)\n  nameWithType: WindowsUserNameSecurityTokenAuthenticator.WindowsUserNameSecurityTokenAuthenticator(Boolean)\n  fullName: WindowsUserNameSecurityTokenAuthenticator.WindowsUserNameSecurityTokenAuthenticator(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)\n  parent: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateUserNamePasswordCore(String, String)\n  nameWithType: WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String, String)\n  fullName: WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String, String)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.IdentityModel.Policy.IAuthorizationPolicy\n  name: IAuthorizationPolicy\n  nameWithType: IAuthorizationPolicy\n  fullName: System.IdentityModel.Policy.IAuthorizationPolicy\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<IAuthorizationPolicy>\n  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Policy.IAuthorizationPolicy\n    name: IAuthorizationPolicy\n    nameWithType: IAuthorizationPolicy\n    fullName: System.IdentityModel.Policy.IAuthorizationPolicy\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.#ctor*\n  parent: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: WindowsUserNameSecurityTokenAuthenticator\n  nameWithType: WindowsUserNameSecurityTokenAuthenticator.WindowsUserNameSecurityTokenAuthenticator\n  fullName: WindowsUserNameSecurityTokenAuthenticator.WindowsUserNameSecurityTokenAuthenticator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/WindowsUserNameSecurityTokenAuthenticator.xml\n- uid: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore*\n  parent: System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateUserNamePasswordCore\n  nameWithType: WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore\n  fullName: WindowsUserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/WindowsUserNameSecurityTokenAuthenticator.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: CanValidateToken(SecurityToken)\n  nameWithType: SecurityTokenAuthenticator.CanValidateToken(SecurityToken)\n  fullName: SecurityTokenAuthenticator.CanValidateToken(SecurityToken)\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: CanValidateTokenCore(SecurityToken)\n  nameWithType: UserNameSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n  fullName: UserNameSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateToken(SecurityToken)\n  nameWithType: SecurityTokenAuthenticator.ValidateToken(SecurityToken)\n  fullName: SecurityTokenAuthenticator.ValidateToken(SecurityToken)\n- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateTokenCore(SecurityToken)\n  nameWithType: UserNameSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n  fullName: UserNameSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n"}