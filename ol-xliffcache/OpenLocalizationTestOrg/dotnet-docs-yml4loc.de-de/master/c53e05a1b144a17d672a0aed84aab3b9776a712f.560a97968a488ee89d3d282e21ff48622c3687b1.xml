{"nodes":[{"content":"Contains the credentials used when authenticating a peer node within a peer mesh.","nodes":[{"pos":[0,81],"content":"Contains the credentials used when authenticating a peer node within a peer mesh.","nodes":[{"content":"Contains the credentials used when authenticating a peer node within a peer mesh.","pos":[0,81]}]}],"pos":[1125,1207],"yaml":true},{"content":"Instances of this class are used to specify the credentials needed for the particular security mode of a peer mesh. An instance of this type can be accessed using <xref:System.ServiceModel.ChannelFactory.Credentials%2A> or <xref:System.ServiceModel.ServiceHostBase.Credentials%2A>.","nodes":[{"pos":[0,281],"content":"Instances of this class are used to specify the credentials needed for the particular security mode of a peer mesh. An instance of this type can be accessed using <xref:System.ServiceModel.ChannelFactory.Credentials%2A> or <xref:System.ServiceModel.ServiceHostBase.Credentials%2A>.","nodes":[{"content":"Instances of this class are used to specify the credentials needed for the particular security mode of a peer mesh. An instance of this type can be accessed using <xref:System.ServiceModel.ChannelFactory.Credentials%2A> or <xref:System.ServiceModel.ServiceHostBase.Credentials%2A>.","pos":[0,281],"nodes":[{"content":"Instances of this class are used to specify the credentials needed for the particular security mode of a peer mesh.","pos":[0,115]},{"content":"An instance of this type can be accessed using <ph id=\"ph1\">&lt;xref:System.ServiceModel.ChannelFactory.Credentials%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceHostBase.Credentials%2A&gt;</ph>.","pos":[116,281],"source":" An instance of this type can be accessed using <xref:System.ServiceModel.ChannelFactory.Credentials%2A> or <xref:System.ServiceModel.ServiceHostBase.Credentials%2A>."}]}]}],"pos":[1218,1500],"yaml":true,"extradata":"MT"},{"content":"Gets or sets an X509 certificate for the peer.","nodes":[{"pos":[0,46],"content":"Gets or sets an X509 certificate for the peer.","nodes":[{"content":"Gets or sets an X509 certificate for the peer.","pos":[0,46]}]}],"pos":[2893,2940],"yaml":true},{"content":"This property contains a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> instance used when authenticating neighbors in the peer mesh. An instance must be specified if the credential type chosen is PeerTransportCredentialType.<xref:System.ServiceModel.Security.PeerCredential.Certificate%2A>. If PeerTransportCredentialType.<xref:System.ServiceModel.PeerTransportCredentialType.Password> is chosen, this property is optional.","nodes":[{"pos":[0,447],"content":"This property contains a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> instance used when authenticating neighbors in the peer mesh. An instance must be specified if the credential type chosen is PeerTransportCredentialType.<xref:System.ServiceModel.Security.PeerCredential.Certificate%2A>. If PeerTransportCredentialType.<xref:System.ServiceModel.PeerTransportCredentialType.Password> is chosen, this property is optional.","nodes":[{"content":"This property contains a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> instance used when authenticating neighbors in the peer mesh. An instance must be specified if the credential type chosen is PeerTransportCredentialType.<xref:System.ServiceModel.Security.PeerCredential.Certificate%2A>. If PeerTransportCredentialType.<xref:System.ServiceModel.PeerTransportCredentialType.Password> is chosen, this property is optional.","pos":[0,447],"nodes":[{"content":"This property contains a <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2&gt;</ph> instance used when authenticating neighbors in the peer mesh.","pos":[0,156],"source":"This property contains a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> instance used when authenticating neighbors in the peer mesh."},{"content":"An instance must be specified if the credential type chosen is PeerTransportCredentialType.<ph id=\"ph1\">&lt;xref:System.ServiceModel.Security.PeerCredential.Certificate%2A&gt;</ph>.","pos":[157,314],"source":" An instance must be specified if the credential type chosen is PeerTransportCredentialType.<xref:System.ServiceModel.Security.PeerCredential.Certificate%2A>."},{"content":"If PeerTransportCredentialType.<ph id=\"ph1\">&lt;xref:System.ServiceModel.PeerTransportCredentialType.Password&gt;</ph> is chosen, this property is optional.","pos":[315,447],"source":" If PeerTransportCredentialType.<xref:System.ServiceModel.PeerTransportCredentialType.Password> is chosen, this property is optional."}]}]}],"pos":[2951,3399],"yaml":true,"extradata":"MT"},{"content":"The X509 certificate for the peer.","nodes":[{"pos":[0,34],"content":"The X509 certificate for the peer.","nodes":[{"content":"The X509 certificate for the peer.","pos":[0,34]}]}],"pos":[3624,3659],"yaml":true},{"content":"Gets or sets the password used by the peer to authenticate with the peer mesh.","nodes":[{"pos":[0,78],"content":"Gets or sets the password used by the peer to authenticate with the peer mesh.","nodes":[{"content":"Gets or sets the password used by the peer to authenticate with the peer mesh.","pos":[0,78]}]}],"pos":[4749,4828],"yaml":true},{"content":"The password used by the peer to authenticate with the peer mesh.","nodes":[{"pos":[0,65],"content":"The password used by the peer to authenticate with the peer mesh.","nodes":[{"content":"The password used by the peer to authenticate with the peer mesh.","pos":[0,65]}]}],"pos":[4949,5015],"yaml":true},{"content":"Gets or sets the message sender authentication validator.","nodes":[{"pos":[0,57],"content":"Gets or sets the message sender authentication validator.","nodes":[{"content":"Gets or sets the message sender authentication validator.","pos":[0,57]}]}],"pos":[6196,6254],"yaml":true},{"content":"This property must be populated if message authentication is chosen. This property specifies a validator, which will be invoked during message security verification. The credential specified in the message is passed to the validator specified in this property. The validator can either accept or reject the credential.","nodes":[{"pos":[0,318],"content":"This property must be populated if message authentication is chosen. This property specifies a validator, which will be invoked during message security verification. The credential specified in the message is passed to the validator specified in this property. The validator can either accept or reject the credential.","nodes":[{"content":"This property must be populated if message authentication is chosen. This property specifies a validator, which will be invoked during message security verification. The credential specified in the message is passed to the validator specified in this property. The validator can either accept or reject the credential.","pos":[0,318],"nodes":[{"content":"This property must be populated if message authentication is chosen.","pos":[0,68]},{"content":"This property specifies a validator, which will be invoked during message security verification.","pos":[69,165]},{"content":"The credential specified in the message is passed to the validator specified in this property.","pos":[166,260]},{"content":"The validator can either accept or reject the credential.","pos":[261,318]}]}]}],"pos":[6265,6584],"yaml":true,"extradata":"MT"},{"content":"The message sender authentication validator.","nodes":[{"pos":[0,44],"content":"The message sender authentication validator.","nodes":[{"content":"The message sender authentication validator.","pos":[0,44]}]}],"pos":[6825,6870],"yaml":true},{"content":"Gets or sets the peer authentication object.","nodes":[{"pos":[0,44],"content":"Gets or sets the peer authentication object.","nodes":[{"content":"Gets or sets the peer authentication object.","pos":[0,44]}]}],"pos":[8012,8057],"yaml":true},{"content":"This property specifies a validator, which is invoked during neighbor-to-neighbor authentication in the mesh. When a new peer tries to establish a neighbor connection, it passes its own credential to the responding peer. The validator of the responder is invoked to verify the credential of the remote party. Whenever a peer connection is established in the mesh, both peers are mutually authenticated, meaning validators on both ends are invoked.","nodes":[{"pos":[0,447],"content":"This property specifies a validator, which is invoked during neighbor-to-neighbor authentication in the mesh. When a new peer tries to establish a neighbor connection, it passes its own credential to the responding peer. The validator of the responder is invoked to verify the credential of the remote party. Whenever a peer connection is established in the mesh, both peers are mutually authenticated, meaning validators on both ends are invoked.","nodes":[{"content":"This property specifies a validator, which is invoked during neighbor-to-neighbor authentication in the mesh. When a new peer tries to establish a neighbor connection, it passes its own credential to the responding peer. The validator of the responder is invoked to verify the credential of the remote party. Whenever a peer connection is established in the mesh, both peers are mutually authenticated, meaning validators on both ends are invoked.","pos":[0,447],"nodes":[{"content":"This property specifies a validator, which is invoked during neighbor-to-neighbor authentication in the mesh.","pos":[0,109]},{"content":"When a new peer tries to establish a neighbor connection, it passes its own credential to the responding peer.","pos":[110,220]},{"content":"The validator of the responder is invoked to verify the credential of the remote party.","pos":[221,308]},{"content":"Whenever a peer connection is established in the mesh, both peers are mutually authenticated, meaning validators on both ends are invoked.","pos":[309,447]}]}]}],"pos":[8068,8516],"yaml":true,"extradata":"MT"},{"content":"The peer authentication object.","nodes":[{"pos":[0,31],"content":"The peer authentication object.","nodes":[{"content":"The peer authentication object.","pos":[0,31]}]}],"pos":[8748,8780],"yaml":true},{"content":"Sets the certificate.","nodes":[{"pos":[0,21],"content":"Sets the certificate.","nodes":[{"content":"Sets the certificate.","pos":[0,21]}]}],"pos":[10382,10404],"yaml":true},{"content":"This overload is used to specify a certificate credential of the peer. It is provided as a shortcut to load the certificate from one of the available certificate stores that the user has access to.","nodes":[{"pos":[0,197],"content":"This overload is used to specify a certificate credential of the peer. It is provided as a shortcut to load the certificate from one of the available certificate stores that the user has access to.","nodes":[{"content":"This overload is used to specify a certificate credential of the peer. It is provided as a shortcut to load the certificate from one of the available certificate stores that the user has access to.","pos":[0,197],"nodes":[{"content":"This overload is used to specify a certificate credential of the peer.","pos":[0,70]},{"content":"It is provided as a shortcut to load the certificate from one of the available certificate stores that the user has access to.","pos":[71,197]}]}]}],"pos":[10415,10613],"yaml":true,"extradata":"MT"},{"content":"The subject name of the certificate.","nodes":[{"pos":[0,36],"content":"The subject name of the certificate.","nodes":[{"content":"The subject name of the certificate.","pos":[0,36]}]}],"pos":[10910,10947],"yaml":true},{"content":"The location of the certificate store.","nodes":[{"pos":[0,38],"content":"The location of the certificate store.","nodes":[{"content":"The location of the certificate store.","pos":[0,38]}]}],"pos":[11062,11101],"yaml":true},{"content":"The certificate store name.","nodes":[{"pos":[0,27],"content":"The certificate store name.","nodes":[{"content":"The certificate store name.","pos":[0,27]}]}],"pos":[11208,11236],"yaml":true},{"content":"Sets the certificate with the specified search criteria.","nodes":[{"pos":[0,56],"content":"Sets the certificate with the specified search criteria.","nodes":[{"content":"Sets the certificate with the specified search criteria.","pos":[0,56]}]}],"pos":[13053,13110],"yaml":true},{"content":"The location of the certificate store.","nodes":[{"pos":[0,38],"content":"The location of the certificate store.","nodes":[{"content":"The location of the certificate store.","pos":[0,38]}]}],"pos":[13522,13561],"yaml":true},{"content":"The certificate store name.","nodes":[{"pos":[0,27],"content":"The certificate store name.","nodes":[{"content":"The certificate store name.","pos":[0,27]}]}],"pos":[13668,13696],"yaml":true},{"content":"The search criteria.","nodes":[{"pos":[0,20],"content":"The search criteria.","nodes":[{"content":"The search criteria.","pos":[0,20]}]}],"pos":[13805,13826],"yaml":true},{"content":"The value to search on.","nodes":[{"pos":[0,23],"content":"The value to search on.","nodes":[{"content":"The value to search on.","pos":[0,23]}]}],"pos":[13891,13915],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Security.PeerCredential\n  commentId: T:System.ServiceModel.Security.PeerCredential\n  id: PeerCredential\n  children:\n  - System.ServiceModel.Security.PeerCredential.Certificate\n  - System.ServiceModel.Security.PeerCredential.MeshPassword\n  - System.ServiceModel.Security.PeerCredential.MessageSenderAuthentication\n  - System.ServiceModel.Security.PeerCredential.PeerAuthentication\n  - System.ServiceModel.Security.PeerCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)\n  - System.ServiceModel.Security.PeerCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)\n  langs:\n  - csharp\n  name: PeerCredential\n  nameWithType: PeerCredential\n  fullName: System.ServiceModel.Security.PeerCredential\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Contains the credentials used when authenticating a peer node within a peer mesh.\n  remarks: Instances of this class are used to specify the credentials needed for the particular security mode of a peer mesh. An instance of this type can be accessed using <xref:System.ServiceModel.ChannelFactory.Credentials%2A> or <xref:System.ServiceModel.ServiceHostBase.Credentials%2A>.\n  syntax:\n    content: public class PeerCredential\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/PeerCredential.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: ghogen\n- uid: System.ServiceModel.Security.PeerCredential.Certificate\n  commentId: P:System.ServiceModel.Security.PeerCredential.Certificate\n  id: Certificate\n  parent: System.ServiceModel.Security.PeerCredential\n  langs:\n  - csharp\n  name: Certificate\n  nameWithType: PeerCredential.Certificate\n  fullName: PeerCredential.Certificate\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets or sets an X509 certificate for the peer.\n  remarks: This property contains a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> instance used when authenticating neighbors in the peer mesh. An instance must be specified if the credential type chosen is PeerTransportCredentialType.<xref:System.ServiceModel.Security.PeerCredential.Certificate%2A>. If PeerTransportCredentialType.<xref:System.ServiceModel.PeerTransportCredentialType.Password> is chosen, this property is optional.\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; set; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate2\n      description: The X509 certificate for the peer.\n  overload: System.ServiceModel.Security.PeerCredential.Certificate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/PeerCredential.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: ghogen\n- uid: System.ServiceModel.Security.PeerCredential.MeshPassword\n  commentId: P:System.ServiceModel.Security.PeerCredential.MeshPassword\n  id: MeshPassword\n  parent: System.ServiceModel.Security.PeerCredential\n  langs:\n  - csharp\n  name: MeshPassword\n  nameWithType: PeerCredential.MeshPassword\n  fullName: PeerCredential.MeshPassword\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets or sets the password used by the peer to authenticate with the peer mesh.\n  syntax:\n    content: public string MeshPassword { get; set; }\n    return:\n      type: System.String\n      description: The password used by the peer to authenticate with the peer mesh.\n  overload: System.ServiceModel.Security.PeerCredential.MeshPassword*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/PeerCredential.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: ghogen\n- uid: System.ServiceModel.Security.PeerCredential.MessageSenderAuthentication\n  commentId: P:System.ServiceModel.Security.PeerCredential.MessageSenderAuthentication\n  id: MessageSenderAuthentication\n  parent: System.ServiceModel.Security.PeerCredential\n  langs:\n  - csharp\n  name: MessageSenderAuthentication\n  nameWithType: PeerCredential.MessageSenderAuthentication\n  fullName: PeerCredential.MessageSenderAuthentication\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets or sets the message sender authentication validator.\n  remarks: This property must be populated if message authentication is chosen. This property specifies a validator, which will be invoked during message security verification. The credential specified in the message is passed to the validator specified in this property. The validator can either accept or reject the credential.\n  syntax:\n    content: public System.ServiceModel.Security.X509PeerCertificateAuthentication MessageSenderAuthentication { get; set; }\n    return:\n      type: System.ServiceModel.Security.X509PeerCertificateAuthentication\n      description: The message sender authentication validator.\n  overload: System.ServiceModel.Security.PeerCredential.MessageSenderAuthentication*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/PeerCredential.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: ghogen\n- uid: System.ServiceModel.Security.PeerCredential.PeerAuthentication\n  commentId: P:System.ServiceModel.Security.PeerCredential.PeerAuthentication\n  id: PeerAuthentication\n  parent: System.ServiceModel.Security.PeerCredential\n  langs:\n  - csharp\n  name: PeerAuthentication\n  nameWithType: PeerCredential.PeerAuthentication\n  fullName: PeerCredential.PeerAuthentication\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets or sets the peer authentication object.\n  remarks: This property specifies a validator, which is invoked during neighbor-to-neighbor authentication in the mesh. When a new peer tries to establish a neighbor connection, it passes its own credential to the responding peer. The validator of the responder is invoked to verify the credential of the remote party. Whenever a peer connection is established in the mesh, both peers are mutually authenticated, meaning validators on both ends are invoked.\n  syntax:\n    content: public System.ServiceModel.Security.X509PeerCertificateAuthentication PeerAuthentication { get; set; }\n    return:\n      type: System.ServiceModel.Security.X509PeerCertificateAuthentication\n      description: The peer authentication object.\n  overload: System.ServiceModel.Security.PeerCredential.PeerAuthentication*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/PeerCredential.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: ghogen\n- uid: System.ServiceModel.Security.PeerCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)\n  commentId: M:System.ServiceModel.Security.PeerCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)\n  id: SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)\n  parent: System.ServiceModel.Security.PeerCredential\n  langs:\n  - csharp\n  name: SetCertificate(String, StoreLocation, StoreName)\n  nameWithType: PeerCredential.SetCertificate(String, StoreLocation, StoreName)\n  fullName: PeerCredential.SetCertificate(String, StoreLocation, StoreName)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Sets the certificate.\n  remarks: This overload is used to specify a certificate credential of the peer. It is provided as a shortcut to load the certificate from one of the available certificate stores that the user has access to.\n  syntax:\n    content: public void SetCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);\n    parameters:\n    - id: subjectName\n      type: System.String\n      description: The subject name of the certificate.\n    - id: storeLocation\n      type: System.Security.Cryptography.X509Certificates.StoreLocation\n      description: The location of the certificate store.\n    - id: storeName\n      type: System.Security.Cryptography.X509Certificates.StoreName\n      description: The certificate store name.\n  overload: System.ServiceModel.Security.PeerCredential.SetCertificate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/PeerCredential.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: ghogen\n- uid: System.ServiceModel.Security.PeerCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)\n  commentId: M:System.ServiceModel.Security.PeerCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)\n  id: SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)\n  parent: System.ServiceModel.Security.PeerCredential\n  langs:\n  - csharp\n  name: SetCertificate(StoreLocation, StoreName, X509FindType, Object)\n  nameWithType: PeerCredential.SetCertificate(StoreLocation, StoreName, X509FindType, Object)\n  fullName: PeerCredential.SetCertificate(StoreLocation, StoreName, X509FindType, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Sets the certificate with the specified search criteria.\n  syntax:\n    content: public void SetCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);\n    parameters:\n    - id: storeLocation\n      type: System.Security.Cryptography.X509Certificates.StoreLocation\n      description: The location of the certificate store.\n    - id: storeName\n      type: System.Security.Cryptography.X509Certificates.StoreName\n      description: The certificate store name.\n    - id: findType\n      type: System.Security.Cryptography.X509Certificates.X509FindType\n      description: The search criteria.\n    - id: findValue\n      type: System.Object\n      description: The value to search on.\n  overload: System.ServiceModel.Security.PeerCredential.SetCertificate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/PeerCredential.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: ghogen\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Security.PeerCredential.Certificate\n  parent: System.ServiceModel.Security.PeerCredential\n  isExternal: false\n  name: Certificate\n  nameWithType: PeerCredential.Certificate\n  fullName: PeerCredential.Certificate\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate2\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate2\n  nameWithType: X509Certificate2\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2\n- uid: System.ServiceModel.Security.PeerCredential.MeshPassword\n  parent: System.ServiceModel.Security.PeerCredential\n  isExternal: false\n  name: MeshPassword\n  nameWithType: PeerCredential.MeshPassword\n  fullName: PeerCredential.MeshPassword\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Security.PeerCredential.MessageSenderAuthentication\n  parent: System.ServiceModel.Security.PeerCredential\n  isExternal: false\n  name: MessageSenderAuthentication\n  nameWithType: PeerCredential.MessageSenderAuthentication\n  fullName: PeerCredential.MessageSenderAuthentication\n- uid: System.ServiceModel.Security.X509PeerCertificateAuthentication\n  parent: System.ServiceModel.Security\n  isExternal: false\n  name: X509PeerCertificateAuthentication\n  nameWithType: X509PeerCertificateAuthentication\n  fullName: System.ServiceModel.Security.X509PeerCertificateAuthentication\n- uid: System.ServiceModel.Security.PeerCredential.PeerAuthentication\n  parent: System.ServiceModel.Security.PeerCredential\n  isExternal: false\n  name: PeerAuthentication\n  nameWithType: PeerCredential.PeerAuthentication\n  fullName: PeerCredential.PeerAuthentication\n- uid: System.ServiceModel.Security.PeerCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)\n  parent: System.ServiceModel.Security.PeerCredential\n  isExternal: false\n  name: SetCertificate(String, StoreLocation, StoreName)\n  nameWithType: PeerCredential.SetCertificate(String, StoreLocation, StoreName)\n  fullName: PeerCredential.SetCertificate(String, StoreLocation, StoreName)\n- uid: System.Security.Cryptography.X509Certificates.StoreLocation\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: StoreLocation\n  nameWithType: StoreLocation\n  fullName: System.Security.Cryptography.X509Certificates.StoreLocation\n- uid: System.Security.Cryptography.X509Certificates.StoreName\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: StoreName\n  nameWithType: StoreName\n  fullName: System.Security.Cryptography.X509Certificates.StoreName\n- uid: System.ServiceModel.Security.PeerCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)\n  parent: System.ServiceModel.Security.PeerCredential\n  isExternal: false\n  name: SetCertificate(StoreLocation, StoreName, X509FindType, Object)\n  nameWithType: PeerCredential.SetCertificate(StoreLocation, StoreName, X509FindType, Object)\n  fullName: PeerCredential.SetCertificate(StoreLocation, StoreName, X509FindType, Object)\n- uid: System.Security.Cryptography.X509Certificates.X509FindType\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509FindType\n  nameWithType: X509FindType\n  fullName: System.Security.Cryptography.X509Certificates.X509FindType\n- uid: System.ServiceModel.Security.PeerCredential.Certificate*\n  parent: System.ServiceModel.Security.PeerCredential\n  isExternal: false\n  name: Certificate\n  nameWithType: PeerCredential.Certificate\n  fullName: PeerCredential.Certificate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/PeerCredential.xml\n- uid: System.ServiceModel.Security.PeerCredential.MeshPassword*\n  parent: System.ServiceModel.Security.PeerCredential\n  isExternal: false\n  name: MeshPassword\n  nameWithType: PeerCredential.MeshPassword\n  fullName: PeerCredential.MeshPassword\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/PeerCredential.xml\n- uid: System.ServiceModel.Security.PeerCredential.MessageSenderAuthentication*\n  parent: System.ServiceModel.Security.PeerCredential\n  isExternal: false\n  name: MessageSenderAuthentication\n  nameWithType: PeerCredential.MessageSenderAuthentication\n  fullName: PeerCredential.MessageSenderAuthentication\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/PeerCredential.xml\n- uid: System.ServiceModel.Security.PeerCredential.PeerAuthentication*\n  parent: System.ServiceModel.Security.PeerCredential\n  isExternal: false\n  name: PeerAuthentication\n  nameWithType: PeerCredential.PeerAuthentication\n  fullName: PeerCredential.PeerAuthentication\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/PeerCredential.xml\n- uid: System.ServiceModel.Security.PeerCredential.SetCertificate*\n  parent: System.ServiceModel.Security.PeerCredential\n  isExternal: false\n  name: SetCertificate\n  nameWithType: PeerCredential.SetCertificate\n  fullName: PeerCredential.SetCertificate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/PeerCredential.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}