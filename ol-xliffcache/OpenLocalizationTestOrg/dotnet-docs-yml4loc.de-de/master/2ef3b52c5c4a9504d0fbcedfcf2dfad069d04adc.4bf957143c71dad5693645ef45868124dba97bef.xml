{"nodes":[{"content":"Provides a keyboard sink for components that manages tabbing, accelerators, and mnemonics across interop boundaries and between HWNDs. This interface implements keyboard message management in WPF-Win32 interoperation scenarios.","nodes":[{"pos":[0,227],"content":"Provides a keyboard sink for components that manages tabbing, accelerators, and mnemonics across interop boundaries and between HWNDs. This interface implements keyboard message management in WPF-Win32 interoperation scenarios.","nodes":[{"content":"Provides a keyboard sink for components that manages tabbing, accelerators, and mnemonics across interop boundaries and between HWNDs. This interface implements keyboard message management in WPF-Win32 interoperation scenarios.","pos":[0,227],"nodes":[{"content":"Provides a keyboard sink for components that manages tabbing, accelerators, and mnemonics across interop boundaries and between HWNDs.","pos":[0,134]},{"content":"This interface implements keyboard message management in WPF-Win32 interoperation scenarios.","pos":[135,227]}]}]}],"pos":[1116,1344],"yaml":true},{"content":"A keyboard sink handles input from particular subsets of the overall keyboard input model for [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] and [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], and enables some keyboard input to be processed and directed to HWNDs other than the one with current keyboard focus.  \n  \n If your component contains other components, and maintains a tab order, your component must also implement <xref:System.Windows.Interop.IKeyboardInputSite> and keep track of which component has focus.  \n  \n For a discussion of the input architecture specifically implemented for [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] interop, see [Windows Forms and WPF Interoperability Input Architecture](~/docs/framework/wpf/advanced/windows-forms-and-wpf-interoperability-input-architecture.md).  \n  \n <xref:System.Windows.Interop.HwndSource> and <xref:System.Windows.Interop.HwndHost> each implement the <xref:System.Windows.Interop.IKeyboardInputSink> interface, through explicit interface definitions. The explicit definitions supply default behaviors, and can also be accessed if necessary through an <xref:System.Windows.Interop.IKeyboardInputSink> interface cast of <xref:System.Windows.Interop.HwndSource> or <xref:System.Windows.Interop.HwndHost>.","nodes":[{"pos":[0,348],"content":"A keyboard sink handles input from particular subsets of the overall keyboard input model for <ph id=\"ph1\">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> and <ph id=\"ph2\">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>, and enables some keyboard input to be processed and directed to HWNDs other than the one with current keyboard focus.","source":"A keyboard sink handles input from particular subsets of the overall keyboard input model for [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] and [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], and enables some keyboard input to be processed and directed to HWNDs other than the one with current keyboard focus."},{"pos":[355,555],"content":"If your component contains other components, and maintains a tab order, your component must also implement <xref:System.Windows.Interop.IKeyboardInputSite> and keep track of which component has focus.","nodes":[{"content":"If your component contains other components, and maintains a tab order, your component must also implement <ph id=\"ph1\">&lt;xref:System.Windows.Interop.IKeyboardInputSite&gt;</ph> and keep track of which component has focus.","pos":[0,200],"source":"If your component contains other components, and maintains a tab order, your component must also implement <xref:System.Windows.Interop.IKeyboardInputSite> and keep track of which component has focus."}]},{"pos":[562,867],"content":"For a discussion of the input architecture specifically implemented for <ph id=\"ph1\">[!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)]</ph> interop, see <bpt id=\"p1\">[</bpt>Windows Forms and WPF Interoperability Input Architecture<ept id=\"p1\">](~/docs/framework/wpf/advanced/windows-forms-and-wpf-interoperability-input-architecture.md)</ept>.","source":"For a discussion of the input architecture specifically implemented for [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] interop, see [Windows Forms and WPF Interoperability Input Architecture](~/docs/framework/wpf/advanced/windows-forms-and-wpf-interoperability-input-architecture.md)."},{"pos":[874,1327],"content":"<xref:System.Windows.Interop.HwndSource> and <xref:System.Windows.Interop.HwndHost> each implement the <xref:System.Windows.Interop.IKeyboardInputSink> interface, through explicit interface definitions. The explicit definitions supply default behaviors, and can also be accessed if necessary through an <xref:System.Windows.Interop.IKeyboardInputSink> interface cast of <xref:System.Windows.Interop.HwndSource> or <xref:System.Windows.Interop.HwndHost>.","nodes":[{"content":"<xref:System.Windows.Interop.HwndSource> and <xref:System.Windows.Interop.HwndHost> each implement the <xref:System.Windows.Interop.IKeyboardInputSink> interface, through explicit interface definitions. The explicit definitions supply default behaviors, and can also be accessed if necessary through an <xref:System.Windows.Interop.IKeyboardInputSink> interface cast of <xref:System.Windows.Interop.HwndSource> or <xref:System.Windows.Interop.HwndHost>.","pos":[0,453],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> each implement the <ph id=\"ph3\">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interface, through explicit interface definitions.","pos":[0,202],"source":"<xref:System.Windows.Interop.HwndSource> and <xref:System.Windows.Interop.HwndHost> each implement the <xref:System.Windows.Interop.IKeyboardInputSink> interface, through explicit interface definitions."},{"content":"The explicit definitions supply default behaviors, and can also be accessed if necessary through an <ph id=\"ph1\">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interface cast of <ph id=\"ph2\">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph>.","pos":[203,453],"source":" The explicit definitions supply default behaviors, and can also be accessed if necessary through an <xref:System.Windows.Interop.IKeyboardInputSink> interface cast of <xref:System.Windows.Interop.HwndSource> or <xref:System.Windows.Interop.HwndHost>."}]}]}],"pos":[1355,2691],"yaml":true,"extradata":"MT"},{"content":"Gets a value that indicates whether the sink or one of its contained components has focus.","nodes":[{"pos":[0,90],"content":"Gets a value that indicates whether the sink or one of its contained components has focus.","nodes":[{"content":"Gets a value that indicates whether the sink or one of its contained components has focus.","pos":[0,90]}]}],"pos":[3873,3964],"yaml":true},{"content":"This method is necessary for forwarding <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> calls to child components with focus from within the <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> implementation. Call <xref:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin%2A> recursively until you reach the level of specific focus and forward <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> there.","nodes":[{"pos":[0,474],"content":"This method is necessary for forwarding <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> calls to child components with focus from within the <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> implementation. Call <xref:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin%2A> recursively until you reach the level of specific focus and forward <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> there.","nodes":[{"content":"This method is necessary for forwarding <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> calls to child components with focus from within the <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> implementation. Call <xref:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin%2A> recursively until you reach the level of specific focus and forward <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> there.","pos":[0,474],"nodes":[{"content":"This method is necessary for forwarding <ph id=\"ph1\">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph> calls to child components with focus from within the <ph id=\"ph2\">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph> implementation.","pos":[0,254],"source":"This method is necessary for forwarding <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> calls to child components with focus from within the <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> implementation."},{"content":"Call <ph id=\"ph1\">&lt;xref:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin%2A&gt;</ph> recursively until you reach the level of specific focus and forward <ph id=\"ph2\">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph> there.","pos":[255,474],"source":" Call <xref:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin%2A> recursively until you reach the level of specific focus and forward <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> there."}]}]}],"pos":[3975,4450],"yaml":true,"extradata":"MT"},{"content":"`true` if the sink or one of its contained components has focus; otherwise, `false`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">`true`</ph> if the sink or one of its contained components has focus; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the sink or one of its contained components has focus; otherwise, `false`."}],"pos":[4581,4668],"yaml":true},{"content":"Gets or sets a reference to the component's container's <xref href=\"System.Windows.Interop.IKeyboardInputSite\"></xref> interface.","nodes":[{"pos":[0,129],"content":"Gets or sets a reference to the component's container's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Interop.IKeyboardInputSite\"&gt;&lt;/xref&gt;</ph> interface.","source":"Gets or sets a reference to the component's container's <xref href=\"System.Windows.Interop.IKeyboardInputSite\"></xref> interface."}],"pos":[5729,5859],"yaml":true},{"content":"This property should initially be set to `null`. Any container that adds the sink to its components list will set <xref:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite%2A> before any other methods are called, and it can be set multiple times after that. You should set the property to `null` again before disposal.","nodes":[{"pos":[0,326],"content":"This property should initially be set to `null`. Any container that adds the sink to its components list will set <xref:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite%2A> before any other methods are called, and it can be set multiple times after that. You should set the property to `null` again before disposal.","nodes":[{"content":"This property should initially be set to <ph id=\"ph1\">`null`</ph>.","pos":[0,48],"source":"This property should initially be set to `null`."},{"content":"Any container that adds the sink to its components list will set <ph id=\"ph1\">&lt;xref:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite%2A&gt;</ph> before any other methods are called, and it can be set multiple times after that.","pos":[49,265],"source":" Any container that adds the sink to its components list will set <xref:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite%2A> before any other methods are called, and it can be set multiple times after that."},{"content":"You should set the property to <ph id=\"ph1\">`null`</ph> again before disposal.","pos":[266,326],"source":" You should set the property to `null` again before disposal."}]}],"pos":[5870,6197],"yaml":true,"extradata":"MT"},{"content":"A reference to the container's <xref href=\"System.Windows.Interop.IKeyboardInputSite\"></xref> interface.","nodes":[{"pos":[0,104],"content":"A reference to the container's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Interop.IKeyboardInputSite\"&gt;&lt;/xref&gt;</ph> interface.","source":"A reference to the container's <xref href=\"System.Windows.Interop.IKeyboardInputSite\"></xref> interface."}],"pos":[6442,6547],"yaml":true},{"content":"Called when one of the mnemonics (access keys) for this sink is invoked.","nodes":[{"pos":[0,72],"content":"Called when one of the mnemonics (access keys) for this sink is invoked.","nodes":[{"content":"Called when one of the mnemonics (access keys) for this sink is invoked.","pos":[0,72]}]}],"pos":[7899,7972],"yaml":true},{"content":"The [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] message must be WM_CHAR, WM_SYSCHAR, WM_DEADCHAR or WM_SYSDEADCHAR.  \n  \n If the component has contained components, the message must be passed in your implementation by calling each contained component's <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> method.  \n  \n An interface that returns `true` from <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> will not call <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>. Implementations can choose to perform all specific key combination handling in <xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A>.and bypass <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>.","nodes":[{"pos":[0,129],"content":"The <ph id=\"ph1\">[!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)]</ph> message must be WM_CHAR, WM_SYSCHAR, WM_DEADCHAR or WM_SYSDEADCHAR.","source":"The [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] message must be WM_CHAR, WM_SYSCHAR, WM_DEADCHAR or WM_SYSDEADCHAR."},{"pos":[136,337],"content":"If the component has contained components, the message must be passed in your implementation by calling each contained component's <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> method.","nodes":[{"content":"If the component has contained components, the message must be passed in your implementation by calling each contained component's <ph id=\"ph1\">&lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A&gt;</ph> method.","pos":[0,201],"source":"If the component has contained components, the message must be passed in your implementation by calling each contained component's <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> method."}]},{"pos":[344,752],"content":"An interface that returns `true` from <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> will not call <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>. Implementations can choose to perform all specific key combination handling in <xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A>.and bypass <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>.","nodes":[{"content":"An interface that returns <ph id=\"ph1\">`true`</ph> from <ph id=\"ph2\">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph> will not call <ph id=\"ph3\">&lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A&gt;</ph>.","pos":[0,188],"source":"An interface that returns `true` from <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> will not call <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>."},{"content":"Implementations can choose to perform all specific key combination handling in <ph id=\"ph1\">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A&gt;</ph>.and bypass <ph id=\"ph2\">&lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A&gt;</ph>.","pos":[189,408],"source":" Implementations can choose to perform all specific key combination handling in <xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A>.and bypass <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>."}]}],"pos":[7983,8742],"yaml":true,"extradata":"MT"},{"content":"The message for the mnemonic and associated data. Do not modify this message structure. It is passed by reference for performance reasons only.","nodes":[{"pos":[0,143],"content":"The message for the mnemonic and associated data. Do not modify this message structure. It is passed by reference for performance reasons only.","nodes":[{"content":"The message for the mnemonic and associated data. Do not modify this message structure. It is passed by reference for performance reasons only.","pos":[0,143],"nodes":[{"content":"The message for the mnemonic and associated data.","pos":[0,49]},{"content":"Do not modify this message structure.","pos":[50,87]},{"content":"It is passed by reference for performance reasons only.","pos":[88,143]}]}]}],"pos":[9010,9154],"yaml":true},{"content":"Modifier keys.","nodes":[{"pos":[0,14],"content":"Modifier keys.","nodes":[{"content":"Modifier keys.","pos":[0,14]}]}],"pos":[9239,9254],"yaml":true},{"content":"`true` if the message was handled; otherwise, `false`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">`true`</ph> if the message was handled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the message was handled; otherwise, `false`."}],"pos":[9312,9369],"yaml":true},{"content":"Registers the <xref href=\"System.Windows.Interop.IKeyboardInputSink\"></xref> interface of a contained component.","nodes":[{"pos":[0,112],"content":"Registers the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Interop.IKeyboardInputSink\"&gt;&lt;/xref&gt;</ph> interface of a contained component.","source":"Registers the <xref href=\"System.Windows.Interop.IKeyboardInputSink\"></xref> interface of a contained component."}],"pos":[10727,10840],"yaml":true},{"content":"Components with child components should maintain internal collections of sites and use this method to add a new sink and return the new site. You only need to maintain the site collection, because the sink can be obtained from the site.","nodes":[{"pos":[0,236],"content":"Components with child components should maintain internal collections of sites and use this method to add a new sink and return the new site. You only need to maintain the site collection, because the sink can be obtained from the site.","nodes":[{"content":"Components with child components should maintain internal collections of sites and use this method to add a new sink and return the new site. You only need to maintain the site collection, because the sink can be obtained from the site.","pos":[0,236],"nodes":[{"content":"Components with child components should maintain internal collections of sites and use this method to add a new sink and return the new site.","pos":[0,141]},{"content":"You only need to maintain the site collection, because the sink can be obtained from the site.","pos":[142,236]}]}]}],"pos":[10851,11088],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Interop.IKeyboardInputSink\"></xref> sink of the contained component.","nodes":[{"pos":[0,99],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Interop.IKeyboardInputSink\"&gt;&lt;/xref&gt;</ph> sink of the contained component.","source":"The <xref href=\"System.Windows.Interop.IKeyboardInputSink\"></xref> sink of the contained component."}],"pos":[11391,11491],"yaml":true},{"content":"The <xref href=\"System.Windows.Interop.IKeyboardInputSite\"></xref> site of the contained component.","nodes":[{"pos":[0,99],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Interop.IKeyboardInputSite\"&gt;&lt;/xref&gt;</ph> site of the contained component.","source":"The <xref href=\"System.Windows.Interop.IKeyboardInputSite\"></xref> site of the contained component."}],"pos":[11576,11676],"yaml":true},{"content":"Sets focus on either the first tab stop or the last tab stop of the sink.","nodes":[{"pos":[0,73],"content":"Sets focus on either the first tab stop or the last tab stop of the sink.","nodes":[{"content":"Sets focus on either the first tab stop or the last tab stop of the sink.","pos":[0,73]}]}],"pos":[12945,13019],"yaml":true},{"content":"<xref:System.Windows.Input.FocusNavigationDirection.First> and <xref:System.Windows.Input.FocusNavigationDirection.Last> are the only relevant values that should be passed to this method in the <xref:System.Windows.Input.TraversalRequest>.","nodes":[{"pos":[0,239],"content":"<xref:System.Windows.Input.FocusNavigationDirection.First> and <xref:System.Windows.Input.FocusNavigationDirection.Last> are the only relevant values that should be passed to this method in the <xref:System.Windows.Input.TraversalRequest>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Input.FocusNavigationDirection.First&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Input.FocusNavigationDirection.Last&gt;</ph> are the only relevant values that should be passed to this method in the <ph id=\"ph3\">&lt;xref:System.Windows.Input.TraversalRequest&gt;</ph>.","pos":[0,239],"source":"<xref:System.Windows.Input.FocusNavigationDirection.First> and <xref:System.Windows.Input.FocusNavigationDirection.Last> are the only relevant values that should be passed to this method in the <xref:System.Windows.Input.TraversalRequest>."}]}],"pos":[13030,13270],"yaml":true,"extradata":"MT"},{"content":"Specifies whether focus should be set to the first or the last tab stop.","nodes":[{"pos":[0,72],"content":"Specifies whether focus should be set to the first or the last tab stop.","nodes":[{"content":"Specifies whether focus should be set to the first or the last tab stop.","pos":[0,72]}]}],"pos":[13465,13538],"yaml":true},{"content":"`true` if the focus has been set as requested; `false`, if there are no tab stops.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">`true`</ph> if the focus has been set as requested; <ph id=\"ph2\">`false`</ph>, if there are no tab stops.","source":"`true` if the focus has been set as requested; `false`, if there are no tab stops."}],"pos":[13596,13681],"yaml":true},{"content":"Processes keyboard input at the keydown message level.","nodes":[{"pos":[0,54],"content":"Processes keyboard input at the keydown message level.","nodes":[{"content":"Processes keyboard input at the keydown message level.","pos":[0,54]}]}],"pos":[14997,15052],"yaml":true},{"content":"The message must either be WM_KEYDOWN or WM_SYSKEYDOWN.  \n  \n If the component is unable to handle the input translations and has child components that might have translations, it typically calls <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> method on the child component that holds the current focus before returning a result.  \n  \n If the message cannot be handled immediately, you can re-dispatch it from within the <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> implementation if necessary, and then return `false`.  \n  \n A primary scenario for translating accelerator keys is handling the VK_TAB keydown message and determining whether to set focus within the component, to call <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> to a child component, or to call <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A> on the parent site because the tab sequence has reached the beginning or end bounds. Certain components may choose to not handle the tab key in this fashion.","nodes":[{"pos":[0,55],"content":"The message must either be WM_KEYDOWN or WM_SYSKEYDOWN.","nodes":[{"content":"The message must either be WM_KEYDOWN or WM_SYSKEYDOWN.","pos":[0,55]}]},{"pos":[62,354],"content":"If the component is unable to handle the input translations and has child components that might have translations, it typically calls <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> method on the child component that holds the current focus before returning a result.","nodes":[{"content":"If the component is unable to handle the input translations and has child components that might have translations, it typically calls <ph id=\"ph1\">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph> method on the child component that holds the current focus before returning a result.","pos":[0,292],"source":"If the component is unable to handle the input translations and has child components that might have translations, it typically calls <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> method on the child component that holds the current focus before returning a result."}]},{"pos":[361,572],"content":"If the message cannot be handled immediately, you can re-dispatch it from within the <ph id=\"ph1\">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A&gt;</ph> implementation if necessary, and then return <ph id=\"ph2\">`false`</ph>.","source":"If the message cannot be handled immediately, you can re-dispatch it from within the <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> implementation if necessary, and then return `false`."},{"pos":[579,1056],"content":"A primary scenario for translating accelerator keys is handling the VK_TAB keydown message and determining whether to set focus within the component, to call <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> to a child component, or to call <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A> on the parent site because the tab sequence has reached the beginning or end bounds. Certain components may choose to not handle the tab key in this fashion.","nodes":[{"content":"A primary scenario for translating accelerator keys is handling the VK_TAB keydown message and determining whether to set focus within the component, to call <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> to a child component, or to call <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A> on the parent site because the tab sequence has reached the beginning or end bounds. Certain components may choose to not handle the tab key in this fashion.","pos":[0,477],"nodes":[{"content":"A primary scenario for translating accelerator keys is handling the VK_TAB keydown message and determining whether to set focus within the component, to call <ph id=\"ph1\">&lt;xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A&gt;</ph> to a child component, or to call <ph id=\"ph2\">&lt;xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A&gt;</ph> on the parent site because the tab sequence has reached the beginning or end bounds.","pos":[0,404],"source":"A primary scenario for translating accelerator keys is handling the VK_TAB keydown message and determining whether to set focus within the component, to call <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> to a child component, or to call <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A> on the parent site because the tab sequence has reached the beginning or end bounds."},{"content":"Certain components may choose to not handle the tab key in this fashion.","pos":[405,477]}]}]}],"pos":[15063,16128],"yaml":true,"extradata":"MT"},{"content":"The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.","nodes":[{"pos":[0,118],"content":"The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.","nodes":[{"content":"The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.","pos":[0,118],"nodes":[{"content":"The message and associated data.","pos":[0,32]},{"content":"Do not modify this structure.","pos":[33,62]},{"content":"It is passed by reference for performance reasons only.","pos":[63,118]}]}]}],"pos":[16406,16525],"yaml":true},{"content":"Modifier keys.","nodes":[{"pos":[0,14],"content":"Modifier keys.","nodes":[{"content":"Modifier keys.","pos":[0,14]}]}],"pos":[16610,16625],"yaml":true},{"content":"`true` if the message was handled by the method implementation; otherwise, `false`.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">`true`</ph> if the message was handled by the method implementation; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the message was handled by the method implementation; otherwise, `false`."}],"pos":[16683,16769],"yaml":true},{"content":"Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before <xref href=\"System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\"></xref> is called.","nodes":[{"pos":[0,232],"content":"Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before <ph id=\"ph1\">&lt;xref href=\"System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\"&gt;&lt;/xref&gt;</ph> is called.","source":"Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before <xref href=\"System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\"></xref> is called."}],"pos":[18144,18377],"yaml":true},{"content":"If you implement this method to return `true`, the input architecture will not call <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> for that key message.","nodes":[{"pos":[0,168],"content":"If you implement this method to return <ph id=\"ph1\">`true`</ph>, the input architecture will not call <ph id=\"ph2\">&lt;xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A&gt;</ph> for that key message.","source":"If you implement this method to return `true`, the input architecture will not call <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> for that key message."}],"pos":[18388,18557],"yaml":true,"extradata":"MT"},{"content":"The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.","nodes":[{"pos":[0,118],"content":"The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.","nodes":[{"content":"The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.","pos":[0,118],"nodes":[{"content":"The message and associated data.","pos":[0,32]},{"content":"Do not modify this structure.","pos":[33,62]},{"content":"It is passed by reference for performance reasons only.","pos":[63,118]}]}]}],"pos":[18828,18947],"yaml":true},{"content":"Modifier keys.","nodes":[{"pos":[0,14],"content":"Modifier keys.","nodes":[{"content":"Modifier keys.","pos":[0,14]}]}],"pos":[19032,19047],"yaml":true},{"content":"`true` if the message was processed and <xref href=\"System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\"></xref> should not be called; otherwise, `false`.","nodes":[{"pos":[0,218],"content":"<ph id=\"ph1\">`true`</ph> if the message was processed and <ph id=\"ph2\">&lt;xref href=\"System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\"&gt;&lt;/xref&gt;</ph> should not be called; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the message was processed and <xref href=\"System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\"></xref> should not be called; otherwise, `false`."}],"pos":[19105,19326],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Interop.IKeyboardInputSink\n  commentId: T:System.Windows.Interop.IKeyboardInputSink\n  id: IKeyboardInputSink\n  children:\n  - System.Windows.Interop.IKeyboardInputSink.HasFocusWithin\n  - System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite\n  - System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  - System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)\n  - System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)\n  - System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  - System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  langs:\n  - csharp\n  name: IKeyboardInputSink\n  nameWithType: IKeyboardInputSink\n  fullName: System.Windows.Interop.IKeyboardInputSink\n  type: Interface\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Interop\n  summary: Provides a keyboard sink for components that manages tabbing, accelerators, and mnemonics across interop boundaries and between HWNDs. This interface implements keyboard message management in WPF-Win32 interoperation scenarios.\n  remarks: \"A keyboard sink handles input from particular subsets of the overall keyboard input model for [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] and [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], and enables some keyboard input to be processed and directed to HWNDs other than the one with current keyboard focus.  \\n  \\n If your component contains other components, and maintains a tab order, your component must also implement <xref:System.Windows.Interop.IKeyboardInputSite> and keep track of which component has focus.  \\n  \\n For a discussion of the input architecture specifically implemented for [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] interop, see [Windows Forms and WPF Interoperability Input Architecture](~/docs/framework/wpf/advanced/windows-forms-and-wpf-interoperability-input-architecture.md).  \\n  \\n <xref:System.Windows.Interop.HwndSource> and <xref:System.Windows.Interop.HwndHost> each implement the <xref:System.Windows.Interop.IKeyboardInputSink> interface, through explicit interface definitions. The explicit definitions supply default behaviors, and can also be accessed if necessary through an <xref:System.Windows.Interop.IKeyboardInputSink> interface cast of <xref:System.Windows.Interop.HwndSource> or <xref:System.Windows.Interop.HwndHost>.\"\n  syntax:\n    content: public interface IKeyboardInputSink\n  derivedClasses:\n  - System.Windows.Forms.Integration.WindowsFormsHost\n  - System.Windows.Interop.HwndHost\n  - System.Windows.Interop.HwndSource\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Interop/IKeyboardInputSink.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Interop.IKeyboardInputSink.HasFocusWithin\n  commentId: M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin\n  id: HasFocusWithin\n  parent: System.Windows.Interop.IKeyboardInputSink\n  langs:\n  - csharp\n  name: HasFocusWithin()\n  nameWithType: IKeyboardInputSink.HasFocusWithin()\n  fullName: IKeyboardInputSink.HasFocusWithin()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Interop\n  summary: Gets a value that indicates whether the sink or one of its contained components has focus.\n  remarks: This method is necessary for forwarding <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> calls to child components with focus from within the <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> implementation. Call <xref:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin%2A> recursively until you reach the level of specific focus and forward <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> there.\n  syntax:\n    content: public bool HasFocusWithin ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the sink or one of its contained components has focus; otherwise, `false`.'\n  overload: System.Windows.Interop.IKeyboardInputSink.HasFocusWithin*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Interop/IKeyboardInputSink.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite\n  commentId: P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite\n  id: KeyboardInputSite\n  parent: System.Windows.Interop.IKeyboardInputSink\n  langs:\n  - csharp\n  name: KeyboardInputSite\n  nameWithType: IKeyboardInputSink.KeyboardInputSite\n  fullName: IKeyboardInputSink.KeyboardInputSite\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Interop\n  summary: Gets or sets a reference to the component's container's <xref href=\"System.Windows.Interop.IKeyboardInputSite\"></xref> interface.\n  remarks: This property should initially be set to `null`. Any container that adds the sink to its components list will set <xref:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite%2A> before any other methods are called, and it can be set multiple times after that. You should set the property to `null` again before disposal.\n  syntax:\n    content: >-\n      [set: System.Security.SecurityCritical]\n\n      public System.Windows.Interop.IKeyboardInputSite KeyboardInputSite { get; set; }\n    return:\n      type: System.Windows.Interop.IKeyboardInputSite\n      description: A reference to the container's <xref href=\"System.Windows.Interop.IKeyboardInputSite\"></xref> interface.\n  overload: System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite*\n  exceptions: []\n  attributes:\n  - type: 'set: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Interop/IKeyboardInputSink.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  commentId: M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  id: OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  parent: System.Windows.Interop.IKeyboardInputSink\n  langs:\n  - csharp\n  name: OnMnemonic(MSG, ModifierKeys)\n  nameWithType: IKeyboardInputSink.OnMnemonic(MSG, ModifierKeys)\n  fullName: IKeyboardInputSink.OnMnemonic(MSG, ModifierKeys)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Interop\n  summary: Called when one of the mnemonics (access keys) for this sink is invoked.\n  remarks: \"The [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] message must be WM_CHAR, WM_SYSCHAR, WM_DEADCHAR or WM_SYSDEADCHAR.  \\n  \\n If the component has contained components, the message must be passed in your implementation by calling each contained component's <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> method.  \\n  \\n An interface that returns `true` from <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> will not call <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>. Implementations can choose to perform all specific key combination handling in <xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A>.and bypass <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>.\"\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public bool OnMnemonic (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);\n    parameters:\n    - id: msg\n      type: System.Windows.Interop.MSG\n      description: The message for the mnemonic and associated data. Do not modify this message structure. It is passed by reference for performance reasons only.\n    - id: modifiers\n      type: System.Windows.Input.ModifierKeys\n      description: Modifier keys.\n    return:\n      type: System.Boolean\n      description: '`true` if the message was handled; otherwise, `false`.'\n  overload: System.Windows.Interop.IKeyboardInputSink.OnMnemonic*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Interop/IKeyboardInputSink.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)\n  commentId: M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)\n  id: RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)\n  parent: System.Windows.Interop.IKeyboardInputSink\n  langs:\n  - csharp\n  name: RegisterKeyboardInputSink(IKeyboardInputSink)\n  nameWithType: IKeyboardInputSink.RegisterKeyboardInputSink(IKeyboardInputSink)\n  fullName: IKeyboardInputSink.RegisterKeyboardInputSink(IKeyboardInputSink)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Interop\n  summary: Registers the <xref href=\"System.Windows.Interop.IKeyboardInputSink\"></xref> interface of a contained component.\n  remarks: Components with child components should maintain internal collections of sites and use this method to add a new sink and return the new site. You only need to maintain the site collection, because the sink can be obtained from the site.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink (System.Windows.Interop.IKeyboardInputSink sink);\n    parameters:\n    - id: sink\n      type: System.Windows.Interop.IKeyboardInputSink\n      description: The <xref href=\"System.Windows.Interop.IKeyboardInputSink\"></xref> sink of the contained component.\n    return:\n      type: System.Windows.Interop.IKeyboardInputSite\n      description: The <xref href=\"System.Windows.Interop.IKeyboardInputSite\"></xref> site of the contained component.\n  overload: System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Interop/IKeyboardInputSink.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)\n  commentId: M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)\n  id: TabInto(System.Windows.Input.TraversalRequest)\n  parent: System.Windows.Interop.IKeyboardInputSink\n  langs:\n  - csharp\n  name: TabInto(TraversalRequest)\n  nameWithType: IKeyboardInputSink.TabInto(TraversalRequest)\n  fullName: IKeyboardInputSink.TabInto(TraversalRequest)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Interop\n  summary: Sets focus on either the first tab stop or the last tab stop of the sink.\n  remarks: <xref:System.Windows.Input.FocusNavigationDirection.First> and <xref:System.Windows.Input.FocusNavigationDirection.Last> are the only relevant values that should be passed to this method in the <xref:System.Windows.Input.TraversalRequest>.\n  syntax:\n    content: public bool TabInto (System.Windows.Input.TraversalRequest request);\n    parameters:\n    - id: request\n      type: System.Windows.Input.TraversalRequest\n      description: Specifies whether focus should be set to the first or the last tab stop.\n    return:\n      type: System.Boolean\n      description: '`true` if the focus has been set as requested; `false`, if there are no tab stops.'\n  overload: System.Windows.Interop.IKeyboardInputSink.TabInto*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Interop/IKeyboardInputSink.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  commentId: M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  id: TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  parent: System.Windows.Interop.IKeyboardInputSink\n  langs:\n  - csharp\n  name: TranslateAccelerator(MSG, ModifierKeys)\n  nameWithType: IKeyboardInputSink.TranslateAccelerator(MSG, ModifierKeys)\n  fullName: IKeyboardInputSink.TranslateAccelerator(MSG, ModifierKeys)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Interop\n  summary: Processes keyboard input at the keydown message level.\n  remarks: \"The message must either be WM_KEYDOWN or WM_SYSKEYDOWN.  \\n  \\n If the component is unable to handle the input translations and has child components that might have translations, it typically calls <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> method on the child component that holds the current focus before returning a result.  \\n  \\n If the message cannot be handled immediately, you can re-dispatch it from within the <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> implementation if necessary, and then return `false`.  \\n  \\n A primary scenario for translating accelerator keys is handling the VK_TAB keydown message and determining whether to set focus within the component, to call <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> to a child component, or to call <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A> on the parent site because the tab sequence has reached the beginning or end bounds. Certain components may choose to not handle the tab key in this fashion.\"\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public bool TranslateAccelerator (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);\n    parameters:\n    - id: msg\n      type: System.Windows.Interop.MSG\n      description: The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.\n    - id: modifiers\n      type: System.Windows.Input.ModifierKeys\n      description: Modifier keys.\n    return:\n      type: System.Boolean\n      description: '`true` if the message was handled by the method implementation; otherwise, `false`.'\n  overload: System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Interop/IKeyboardInputSink.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  commentId: M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  id: TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  parent: System.Windows.Interop.IKeyboardInputSink\n  langs:\n  - csharp\n  name: TranslateChar(MSG, ModifierKeys)\n  nameWithType: IKeyboardInputSink.TranslateChar(MSG, ModifierKeys)\n  fullName: IKeyboardInputSink.TranslateChar(MSG, ModifierKeys)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Interop\n  summary: Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before <xref href=\"System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\"></xref> is called.\n  remarks: If you implement this method to return `true`, the input architecture will not call <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> for that key message.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public bool TranslateChar (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);\n    parameters:\n    - id: msg\n      type: System.Windows.Interop.MSG\n      description: The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.\n    - id: modifiers\n      type: System.Windows.Input.ModifierKeys\n      description: Modifier keys.\n    return:\n      type: System.Boolean\n      description: '`true` if the message was processed and <xref href=\"System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\"></xref> should not be called; otherwise, `false`.'\n  overload: System.Windows.Interop.IKeyboardInputSink.TranslateChar*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Interop/IKeyboardInputSink.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\nreferences:\n- uid: System.Windows.Interop.IKeyboardInputSink.HasFocusWithin\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: HasFocusWithin()\n  nameWithType: IKeyboardInputSink.HasFocusWithin()\n  fullName: IKeyboardInputSink.HasFocusWithin()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: KeyboardInputSite\n  nameWithType: IKeyboardInputSink.KeyboardInputSite\n  fullName: IKeyboardInputSink.KeyboardInputSite\n- uid: System.Windows.Interop.IKeyboardInputSite\n  parent: System.Windows.Interop\n  isExternal: false\n  name: IKeyboardInputSite\n  nameWithType: IKeyboardInputSite\n  fullName: System.Windows.Interop.IKeyboardInputSite\n- uid: System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: OnMnemonic(MSG, ModifierKeys)\n  nameWithType: IKeyboardInputSink.OnMnemonic(MSG, ModifierKeys)\n  fullName: IKeyboardInputSink.OnMnemonic(MSG, ModifierKeys)\n- uid: System.Windows.Interop.MSG\n  parent: System.Windows.Interop\n  isExternal: false\n  name: MSG\n  nameWithType: MSG\n  fullName: System.Windows.Interop.MSG\n- uid: System.Windows.Input.ModifierKeys\n  parent: System.Windows.Input\n  isExternal: false\n  name: ModifierKeys\n  nameWithType: ModifierKeys\n  fullName: System.Windows.Input.ModifierKeys\n- uid: System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: RegisterKeyboardInputSink(IKeyboardInputSink)\n  nameWithType: IKeyboardInputSink.RegisterKeyboardInputSink(IKeyboardInputSink)\n  fullName: IKeyboardInputSink.RegisterKeyboardInputSink(IKeyboardInputSink)\n- uid: System.Windows.Interop.IKeyboardInputSink\n  parent: System.Windows.Interop\n  isExternal: false\n  name: IKeyboardInputSink\n  nameWithType: IKeyboardInputSink\n  fullName: System.Windows.Interop.IKeyboardInputSink\n- uid: System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: TabInto(TraversalRequest)\n  nameWithType: IKeyboardInputSink.TabInto(TraversalRequest)\n  fullName: IKeyboardInputSink.TabInto(TraversalRequest)\n- uid: System.Windows.Input.TraversalRequest\n  parent: System.Windows.Input\n  isExternal: false\n  name: TraversalRequest\n  nameWithType: TraversalRequest\n  fullName: System.Windows.Input.TraversalRequest\n- uid: System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: TranslateAccelerator(MSG, ModifierKeys)\n  nameWithType: IKeyboardInputSink.TranslateAccelerator(MSG, ModifierKeys)\n  fullName: IKeyboardInputSink.TranslateAccelerator(MSG, ModifierKeys)\n- uid: System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: TranslateChar(MSG, ModifierKeys)\n  nameWithType: IKeyboardInputSink.TranslateChar(MSG, ModifierKeys)\n  fullName: IKeyboardInputSink.TranslateChar(MSG, ModifierKeys)\n- uid: System.Windows.Interop.IKeyboardInputSink.HasFocusWithin*\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: HasFocusWithin\n  nameWithType: IKeyboardInputSink.HasFocusWithin\n  fullName: IKeyboardInputSink.HasFocusWithin\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Interop/IKeyboardInputSink.xml\n- uid: System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite*\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: KeyboardInputSite\n  nameWithType: IKeyboardInputSink.KeyboardInputSite\n  fullName: IKeyboardInputSink.KeyboardInputSite\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Interop/IKeyboardInputSink.xml\n- uid: System.Windows.Interop.IKeyboardInputSink.OnMnemonic*\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: OnMnemonic\n  nameWithType: IKeyboardInputSink.OnMnemonic\n  fullName: IKeyboardInputSink.OnMnemonic\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Interop/IKeyboardInputSink.xml\n- uid: System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink*\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: RegisterKeyboardInputSink\n  nameWithType: IKeyboardInputSink.RegisterKeyboardInputSink\n  fullName: IKeyboardInputSink.RegisterKeyboardInputSink\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Interop/IKeyboardInputSink.xml\n- uid: System.Windows.Interop.IKeyboardInputSink.TabInto*\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: TabInto\n  nameWithType: IKeyboardInputSink.TabInto\n  fullName: IKeyboardInputSink.TabInto\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Interop/IKeyboardInputSink.xml\n- uid: System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator*\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: TranslateAccelerator\n  nameWithType: IKeyboardInputSink.TranslateAccelerator\n  fullName: IKeyboardInputSink.TranslateAccelerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Interop/IKeyboardInputSink.xml\n- uid: System.Windows.Interop.IKeyboardInputSink.TranslateChar*\n  parent: System.Windows.Interop.IKeyboardInputSink\n  isExternal: false\n  name: TranslateChar\n  nameWithType: IKeyboardInputSink.TranslateChar\n  fullName: IKeyboardInputSink.TranslateChar\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Interop/IKeyboardInputSink.xml\n"}