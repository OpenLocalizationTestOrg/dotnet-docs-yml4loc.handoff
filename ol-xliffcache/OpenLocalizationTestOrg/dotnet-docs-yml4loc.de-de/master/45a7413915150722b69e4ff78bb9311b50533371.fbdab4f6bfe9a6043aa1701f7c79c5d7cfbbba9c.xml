{"nodes":[{"content":"Provides a set of methods that enable a Web application to retrieve resources from a virtual file system.","nodes":[{"pos":[0,105],"content":"Provides a set of methods that enable a Web application to retrieve resources from a virtual file system.","nodes":[{"content":"Provides a set of methods that enable a Web application to retrieve resources from a virtual file system.","pos":[0,105]}]}],"pos":[1353,1459],"yaml":true},{"content":"The <xref:System.Web.Hosting.VirtualPathProvider> class provides a set of methods for implementing a virtual file system for a Web application. In a virtual file system, the files and directories are managed by a data store other than the file system provided by the server's operating system. For example, you can use a virtual file system to store content in a SQL Server database.  \n  \n You can store any file that is processed on request in a virtual file system. This includes:  \n  \n-   ASP.NET pages, master pages, user controls, and other objects.  \n  \n-   Standard Web pages with extensions such as .htm and .jpg.  \n  \n-   Any custom extension mapped to a <xref:System.Web.Compilation.BuildProvider> instance.  \n  \n-   Any named theme in the `App_Theme` folder.  \n  \n You cannot store ASP.NET application folders or files that generate application-level assemblies in a virtual file system. This includes:  \n  \n-   The Global.asax file.  \n  \n-   Web.config files.  \n  \n-   Site map data files used by the <xref:System.Web.XmlSiteMapProvider>.  \n  \n-   Directories that contain application assemblies or that generate application assemblies: `Bin`, `App_Code`, `App_GlobalResources`, any `App_LocalResources`.  \n  \n-   The application data folder, `App_Data`.  \n  \n> [!NOTE]\n>  If a Web site is precompiled for deployment, content provided by a <xref:System.Web.Hosting.VirtualPathProvider> instance is not compiled, and no <xref:System.Web.Hosting.VirtualPathProvider> instances are used by the precompiled site.  \n  \n## Registering a VirtualPathProvider  \n A custom <xref:System.Web.Hosting.VirtualPathProvider> instance should be registered with the ASP.NET compilation system by using the <xref:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider%2A?displayProperty=fullName> method before any page parsing or compilation is performed by the Web application.  \n  \n Typically, a <xref:System.Web.Hosting.VirtualPathProvider> instance is registered in an `AppInitialize` method defined in the `App_Code` directory, or during the `Application_Start` event in the `Global.asax` file. For an example of registering a <xref:System.Web.Hosting.VirtualPathProvider> instance in an `AppInitialize` method, see the Example section.  \n  \n You can register a <xref:System.Web.Hosting.VirtualPathProvider> instance during other events, but pages compiled and cached before the <xref:System.Web.Hosting.VirtualPathProvider> instance is registered will not be invalidated, even if the new <xref:System.Web.Hosting.VirtualPathProvider> instance would now provide the source for the previously compiled page.","nodes":[{"pos":[0,383],"content":"The <xref:System.Web.Hosting.VirtualPathProvider> class provides a set of methods for implementing a virtual file system for a Web application. In a virtual file system, the files and directories are managed by a data store other than the file system provided by the server's operating system. For example, you can use a virtual file system to store content in a SQL Server database.","nodes":[{"content":"The <xref:System.Web.Hosting.VirtualPathProvider> class provides a set of methods for implementing a virtual file system for a Web application. In a virtual file system, the files and directories are managed by a data store other than the file system provided by the server's operating system. For example, you can use a virtual file system to store content in a SQL Server database.","pos":[0,383],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> class provides a set of methods for implementing a virtual file system for a Web application.","pos":[0,143],"source":"The <xref:System.Web.Hosting.VirtualPathProvider> class provides a set of methods for implementing a virtual file system for a Web application."},{"content":"In a virtual file system, the files and directories are managed by a data store other than the file system provided by the server's operating system.","pos":[144,293]},{"content":"For example, you can use a virtual file system to store content in a SQL Server database.","pos":[294,383]}]}]},{"pos":[390,482],"content":"You can store any file that is processed on request in a virtual file system. This includes:","nodes":[{"content":"You can store any file that is processed on request in a virtual file system. This includes:","pos":[0,92],"nodes":[{"content":"You can store any file that is processed on request in a virtual file system.","pos":[0,77]},{"content":"This includes:","pos":[78,92]}]}]},{"pos":[492,554],"content":"ASP.NET pages, master pages, user controls, and other objects.","nodes":[{"content":"ASP.NET pages, master pages, user controls, and other objects.","pos":[0,62]}]},{"pos":[564,621],"content":"Standard Web pages with extensions such as .htm and .jpg.","nodes":[{"content":"Standard Web pages with extensions such as .htm and .jpg.","pos":[0,57]}]},{"pos":[631,717],"content":"Any custom extension mapped to a <xref:System.Web.Compilation.BuildProvider> instance.","nodes":[{"content":"Any custom extension mapped to a <ph id=\"ph1\">&lt;xref:System.Web.Compilation.BuildProvider&gt;</ph> instance.","pos":[0,86],"source":"Any custom extension mapped to a <xref:System.Web.Compilation.BuildProvider> instance."}]},{"pos":[727,769],"content":"Any named theme in the <ph id=\"ph1\">`App_Theme`</ph> folder.","source":"Any named theme in the `App_Theme` folder."},{"pos":[776,913],"content":"You cannot store ASP.NET application folders or files that generate application-level assemblies in a virtual file system. This includes:","nodes":[{"content":"You cannot store ASP.NET application folders or files that generate application-level assemblies in a virtual file system. This includes:","pos":[0,137],"nodes":[{"content":"You cannot store ASP.NET application folders or files that generate application-level assemblies in a virtual file system.","pos":[0,122]},{"content":"This includes:","pos":[123,137]}]}]},{"pos":[923,944],"content":"The Global.asax file.","nodes":[{"content":"The Global.asax file.","pos":[0,21]}]},{"pos":[954,971],"content":"Web.config files.","nodes":[{"content":"Web.config files.","pos":[0,17]}]},{"pos":[981,1050],"content":"Site map data files used by the <xref:System.Web.XmlSiteMapProvider>.","nodes":[{"content":"Site map data files used by the <ph id=\"ph1\">&lt;xref:System.Web.XmlSiteMapProvider&gt;</ph>.","pos":[0,69],"source":"Site map data files used by the <xref:System.Web.XmlSiteMapProvider>."}]},{"pos":[1060,1216],"content":"Directories that contain application assemblies or that generate application assemblies: <ph id=\"ph1\">`Bin`</ph>, <ph id=\"ph2\">`App_Code`</ph>, <ph id=\"ph3\">`App_GlobalResources`</ph>, any <ph id=\"ph4\">`App_LocalResources`</ph>.","source":"Directories that contain application assemblies or that generate application assemblies: `Bin`, `App_Code`, `App_GlobalResources`, any `App_LocalResources`."},{"pos":[1226,1266],"content":"The application data folder, <ph id=\"ph1\">`App_Data`</ph>.","source":"The application data folder, `App_Data`."},{"pos":[1274,1520],"content":"[!NOTE]\n If a Web site is precompiled for deployment, content provided by a <xref:System.Web.Hosting.VirtualPathProvider> instance is not compiled, and no <xref:System.Web.Hosting.VirtualPathProvider> instances are used by the precompiled site.","leadings":["","> "],"nodes":[{"content":"If a Web site is precompiled for deployment, content provided by a <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> instance is not compiled, and no <ph id=\"ph2\">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> instances are used by the precompiled site.","pos":[9,244],"source":" If a Web site is precompiled for deployment, content provided by a <xref:System.Web.Hosting.VirtualPathProvider> instance is not compiled, and no <xref:System.Web.Hosting.VirtualPathProvider> instances are used by the precompiled site."}]},{"pos":[1529,1562],"content":"Registering a VirtualPathProvider","linkify":"Registering a VirtualPathProvider","nodes":[{"content":"Registering a VirtualPathProvider","pos":[0,33]}]},{"pos":[1566,1883],"content":"A custom <xref:System.Web.Hosting.VirtualPathProvider> instance should be registered with the ASP.NET compilation system by using the <xref:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider%2A?displayProperty=fullName> method before any page parsing or compilation is performed by the Web application.","nodes":[{"content":"A custom <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> instance should be registered with the ASP.NET compilation system by using the <ph id=\"ph2\">&lt;xref:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider%2A?displayProperty=fullName&gt;</ph> method before any page parsing or compilation is performed by the Web application.","pos":[0,317],"source":"A custom <xref:System.Web.Hosting.VirtualPathProvider> instance should be registered with the ASP.NET compilation system by using the <xref:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider%2A?displayProperty=fullName> method before any page parsing or compilation is performed by the Web application."}]},{"pos":[1890,2246],"content":"Typically, a <xref:System.Web.Hosting.VirtualPathProvider> instance is registered in an `AppInitialize` method defined in the `App_Code` directory, or during the `Application_Start` event in the `Global.asax` file. For an example of registering a <xref:System.Web.Hosting.VirtualPathProvider> instance in an `AppInitialize` method, see the Example section.","nodes":[{"content":"Typically, a <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> instance is registered in an <ph id=\"ph2\">`AppInitialize`</ph> method defined in the <ph id=\"ph3\">`App_Code`</ph> directory, or during the <ph id=\"ph4\">`Application_Start`</ph> event in the <ph id=\"ph5\">`Global.asax`</ph> file.","pos":[0,214],"source":"Typically, a <xref:System.Web.Hosting.VirtualPathProvider> instance is registered in an `AppInitialize` method defined in the `App_Code` directory, or during the `Application_Start` event in the `Global.asax` file."},{"content":"For an example of registering a <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> instance in an <ph id=\"ph2\">`AppInitialize`</ph> method, see the Example section.","pos":[215,356],"source":" For an example of registering a <xref:System.Web.Hosting.VirtualPathProvider> instance in an `AppInitialize` method, see the Example section."}]},{"pos":[2253,2616],"content":"You can register a <xref:System.Web.Hosting.VirtualPathProvider> instance during other events, but pages compiled and cached before the <xref:System.Web.Hosting.VirtualPathProvider> instance is registered will not be invalidated, even if the new <xref:System.Web.Hosting.VirtualPathProvider> instance would now provide the source for the previously compiled page.","nodes":[{"content":"You can register a <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> instance during other events, but pages compiled and cached before the <ph id=\"ph2\">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> instance is registered will not be invalidated, even if the new <ph id=\"ph3\">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> instance would now provide the source for the previously compiled page.","pos":[0,363],"source":"You can register a <xref:System.Web.Hosting.VirtualPathProvider> instance during other events, but pages compiled and cached before the <xref:System.Web.Hosting.VirtualPathProvider> instance is registered will not be invalidated, even if the new <xref:System.Web.Hosting.VirtualPathProvider> instance would now provide the source for the previously compiled page."}]}],"pos":[1470,4121],"yaml":true,"extradata":"MT"},{"content":"Initializes the class for use by an inherited class instance. This constructor can be called only by an inherited class.","nodes":[{"pos":[0,120],"content":"Initializes the class for use by an inherited class instance. This constructor can be called only by an inherited class.","nodes":[{"content":"Initializes the class for use by an inherited class instance. This constructor can be called only by an inherited class.","pos":[0,120],"nodes":[{"content":"Initializes the class for use by an inherited class instance.","pos":[0,61]},{"content":"This constructor can be called only by an inherited class.","pos":[62,120]}]}]}],"pos":[12577,12698],"yaml":true},{"content":"When overriding the <xref:System.Web.Hosting.VirtualPathProvider.%23ctor%2A> constructor, defer any initialization that must occur after the <xref:System.Web.Hosting.VirtualPathProvider> object is registered to the <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> method.","nodes":[{"pos":[0,282],"content":"When overriding the <xref:System.Web.Hosting.VirtualPathProvider.%23ctor%2A> constructor, defer any initialization that must occur after the <xref:System.Web.Hosting.VirtualPathProvider> object is registered to the <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> method.","nodes":[{"content":"When overriding the <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualPathProvider.%23ctor%2A&gt;</ph> constructor, defer any initialization that must occur after the <ph id=\"ph2\">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> object is registered to the <ph id=\"ph3\">&lt;xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A&gt;</ph> method.","pos":[0,282],"source":"When overriding the <xref:System.Web.Hosting.VirtualPathProvider.%23ctor%2A> constructor, defer any initialization that must occur after the <xref:System.Web.Hosting.VirtualPathProvider> object is registered to the <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> method."}]}],"pos":[12709,12992],"yaml":true,"extradata":"MT"},{"content":"Combines a base path with a relative path to return a complete path to a virtual resource.","nodes":[{"pos":[0,90],"content":"Combines a base path with a relative path to return a complete path to a virtual resource.","nodes":[{"content":"Combines a base path with a relative path to return a complete path to a virtual resource.","pos":[0,90]}]}],"pos":[14974,15065],"yaml":true},{"content":"Use the <xref:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths%2A> method to inspect the contents of a relative path to a virtual resource and perform any modifications required.  \n  \n The default implementation combines the `basePath` and `relativePath` parameters according to standard ASP.NET path processing.","nodes":[{"pos":[0,188],"content":"Use the <xref:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths%2A> method to inspect the contents of a relative path to a virtual resource and perform any modifications required.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths%2A&gt;</ph> method to inspect the contents of a relative path to a virtual resource and perform any modifications required.","pos":[0,188],"source":"Use the <xref:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths%2A> method to inspect the contents of a relative path to a virtual resource and perform any modifications required."}]},{"pos":[195,322],"content":"The default implementation combines the <ph id=\"ph1\">`basePath`</ph> and <ph id=\"ph2\">`relativePath`</ph> parameters according to standard ASP.NET path processing.","source":"The default implementation combines the `basePath` and `relativePath` parameters according to standard ASP.NET path processing."}],"pos":[15076,15403],"yaml":true,"extradata":"MT"},{"content":"The base path for the application.","nodes":[{"pos":[0,34],"content":"The base path for the application.","nodes":[{"content":"The base path for the application.","pos":[0,34]}]}],"pos":[15588,15623],"yaml":true},{"content":"The path to the virtual resource, relative to the base path.","nodes":[{"pos":[0,60],"content":"The path to the virtual resource, relative to the base path.","nodes":[{"content":"The path to the virtual resource, relative to the base path.","pos":[0,60]}]}],"pos":[15691,15752],"yaml":true},{"content":"The complete path to a virtual resource.","nodes":[{"pos":[0,40],"content":"The complete path to a virtual resource.","nodes":[{"content":"The complete path to a virtual resource.","pos":[0,40]}]}],"pos":[15809,15850],"yaml":true},{"content":"Gets a value that indicates whether a directory exists in the virtual file system.","nodes":[{"pos":[0,82],"content":"Gets a value that indicates whether a directory exists in the virtual file system.","nodes":[{"content":"Gets a value that indicates whether a directory exists in the virtual file system.","pos":[0,82]}]}],"pos":[16961,17044],"yaml":true},{"content":"Override the <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> method to indicate to the compilation system that the resource represented by `virtualDir` exists in the virtual file system provided by this <xref:System.Web.Hosting.VirtualPathProvider> instance.  \n  \n If your custom <xref:System.Web.Hosting.VirtualPathProvider> class does not support directories, the <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> method should return `false`.  \n  \n> [!NOTE]\n>  If your virtual file system will contain themes for the Web site (by creating a virtual `App_Themes` directory), your custom <xref:System.Web.Hosting.VirtualPathProvider> class must support directories.","nodes":[{"pos":[0,275],"content":"Override the <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A&gt;</ph> method to indicate to the compilation system that the resource represented by <ph id=\"ph2\">`virtualDir`</ph> exists in the virtual file system provided by this <ph id=\"ph3\">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> instance.","source":"Override the <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> method to indicate to the compilation system that the resource represented by `virtualDir` exists in the virtual file system provided by this <xref:System.Web.Hosting.VirtualPathProvider> instance."},{"pos":[282,477],"content":"If your custom <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> class does not support directories, the <ph id=\"ph2\">&lt;xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A&gt;</ph> method should return <ph id=\"ph3\">`false`</ph>.","source":"If your custom <xref:System.Web.Hosting.VirtualPathProvider> class does not support directories, the <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> method should return `false`."},{"pos":[485,698],"content":"[!NOTE]\n If your virtual file system will contain themes for the Web site (by creating a virtual `App_Themes` directory), your custom <xref:System.Web.Hosting.VirtualPathProvider> class must support directories.","leadings":["","> "],"nodes":[{"content":"If your virtual file system will contain themes for the Web site (by creating a virtual <ph id=\"ph1\">`App_Themes`</ph> directory), your custom <ph id=\"ph2\">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> class must support directories.","pos":[9,211],"source":" If your virtual file system will contain themes for the Web site (by creating a virtual `App_Themes` directory), your custom <xref:System.Web.Hosting.VirtualPathProvider> class must support directories."}]}],"pos":[17055,17761],"yaml":true,"extradata":"MT"},{"content":"The path to the virtual directory.","nodes":[{"pos":[0,34],"content":"The path to the virtual directory.","nodes":[{"content":"The path to the virtual directory.","pos":[0,34]}]}],"pos":[18631,18666],"yaml":true},{"content":"`true` if the directory exists in the virtual file system; otherwise, `false`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`true`</ph> if the directory exists in the virtual file system; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the directory exists in the virtual file system; otherwise, `false`."}],"pos":[18724,18805],"yaml":true},{"content":"Gets a value that indicates whether a file exists in the virtual file system.","nodes":[{"pos":[0,77],"content":"Gets a value that indicates whether a file exists in the virtual file system.","nodes":[{"content":"Gets a value that indicates whether a file exists in the virtual file system.","pos":[0,77]}]}],"pos":[19882,19960],"yaml":true},{"content":"Override the <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> method to indicate to the compilation system that the resource represented by `virtualPath` exists in the virtual file system provided by this <xref:System.Web.Hosting.VirtualPathProvider> instance.","nodes":[{"pos":[0,271],"content":"Override the <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A&gt;</ph> method to indicate to the compilation system that the resource represented by <ph id=\"ph2\">`virtualPath`</ph> exists in the virtual file system provided by this <ph id=\"ph3\">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> instance.","source":"Override the <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> method to indicate to the compilation system that the resource represented by `virtualPath` exists in the virtual file system provided by this <xref:System.Web.Hosting.VirtualPathProvider> instance."}],"pos":[19971,20243],"yaml":true,"extradata":"MT"},{"content":"The path to the virtual file.","nodes":[{"pos":[0,29],"content":"The path to the virtual file.","nodes":[{"content":"The path to the virtual file.","pos":[0,29]}]}],"pos":[21105,21135],"yaml":true},{"content":"`true` if the file exists in the virtual file system; otherwise, `false`.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> if the file exists in the virtual file system; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the file exists in the virtual file system; otherwise, `false`."}],"pos":[21193,21269],"yaml":true},{"content":"Creates a cache dependency based on the specified virtual paths.","nodes":[{"pos":[0,64],"content":"Creates a cache dependency based on the specified virtual paths.","nodes":[{"content":"Creates a cache dependency based on the specified virtual paths.","pos":[0,64]}]}],"pos":[22599,22664],"yaml":true},{"content":"The default implementation of the <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> method returns `null`. To cache virtual resources for later use you must override either the <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> method or the <xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A> method.","nodes":[{"pos":[0,345],"content":"The default implementation of the <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> method returns `null`. To cache virtual resources for later use you must override either the <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> method or the <xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A> method.","nodes":[{"content":"The default implementation of the <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A&gt;</ph> method returns <ph id=\"ph2\">`null`</ph>.","pos":[0,124],"source":"The default implementation of the <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> method returns `null`."},{"content":"To cache virtual resources for later use you must override either the <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A&gt;</ph> method or the <ph id=\"ph2\">&lt;xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A&gt;</ph> method.","pos":[125,345],"source":" To cache virtual resources for later use you must override either the <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> method or the <xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A> method."}]}],"pos":[22675,23021],"yaml":true,"extradata":"MT"},{"content":"The path to the primary virtual resource.","nodes":[{"pos":[0,41],"content":"The path to the primary virtual resource.","nodes":[{"content":"The path to the primary virtual resource.","pos":[0,41]}]}],"pos":[23992,24034],"yaml":true},{"content":"An array of paths to other resources required by the primary virtual resource.","nodes":[{"pos":[0,78],"content":"An array of paths to other resources required by the primary virtual resource.","nodes":[{"content":"An array of paths to other resources required by the primary virtual resource.","pos":[0,78]}]}],"pos":[24130,24209],"yaml":true},{"content":"The UTC time at which the virtual resources were read.","nodes":[{"pos":[0,54],"content":"The UTC time at which the virtual resources were read.","nodes":[{"content":"The UTC time at which the virtual resources were read.","pos":[0,54]}]}],"pos":[24275,24330],"yaml":true},{"content":"A <xref href=\"System.Web.Caching.CacheDependency\"></xref> object for the specified virtual resources.","nodes":[{"pos":[0,101],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Web.Caching.CacheDependency\"&gt;&lt;/xref&gt;</ph> object for the specified virtual resources.","source":"A <xref href=\"System.Web.Caching.CacheDependency\"></xref> object for the specified virtual resources."}],"pos":[24408,24510],"yaml":true},{"content":"Returns a cache key to use for the specified virtual path.","nodes":[{"pos":[0,58],"content":"Returns a cache key to use for the specified virtual path.","nodes":[{"content":"Returns a cache key to use for the specified virtual path.","pos":[0,58]}]}],"pos":[25596,25655],"yaml":true},{"content":"Use the <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> method to provide a custom cache key for virtual resources. If you do not override the <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> method, the virtual path is used for the cache key.","nodes":[{"pos":[0,268],"content":"Use the <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> method to provide a custom cache key for virtual resources. If you do not override the <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> method, the virtual path is used for the cache key.","nodes":[{"content":"Use the <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> method to provide a custom cache key for virtual resources. If you do not override the <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> method, the virtual path is used for the cache key.","pos":[0,268],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A&gt;</ph> method to provide a custom cache key for virtual resources.","pos":[0,128],"source":"Use the <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> method to provide a custom cache key for virtual resources."},{"content":"If you do not override the <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A&gt;</ph> method, the virtual path is used for the cache key.","pos":[129,268],"source":" If you do not override the <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> method, the virtual path is used for the cache key."}]}]}],"pos":[25666,25935],"yaml":true,"extradata":"MT"},{"content":"The path to the virtual resource.","nodes":[{"pos":[0,33],"content":"The path to the virtual resource.","nodes":[{"content":"The path to the virtual resource.","pos":[0,33]}]}],"pos":[26097,26131],"yaml":true},{"content":"A cache key for the specified virtual resource.","nodes":[{"pos":[0,47],"content":"A cache key for the specified virtual resource.","nodes":[{"content":"A cache key for the specified virtual resource.","pos":[0,47]}]}],"pos":[26188,26236],"yaml":true},{"content":"Gets a virtual directory from the virtual file system.","nodes":[{"pos":[0,54],"content":"Gets a virtual directory from the virtual file system.","nodes":[{"content":"Gets a virtual directory from the virtual file system.","pos":[0,54]}]}],"pos":[27321,27376],"yaml":true},{"content":"The <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> method returns a descendent of the <xref:System.Web.Hosting.VirtualDirectory> class that contains the file and directories contained in the directory specified in the `virtualDir` parameter.  \n  \n If your custom <xref:System.Web.Hosting.VirtualPathProvider> class does not support directories, the <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> method should return `null`.  \n  \n> [!NOTE]\n>  If your virtual file system will contain themes for the Web site (by creating a virtual `App_Themes` directory), your custom <xref:System.Web.Hosting.VirtualPathProvider> class must support directories.","nodes":[{"pos":[0,256],"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A&gt;</ph> method returns a descendent of the <ph id=\"ph2\">&lt;xref:System.Web.Hosting.VirtualDirectory&gt;</ph> class that contains the file and directories contained in the directory specified in the <ph id=\"ph3\">`virtualDir`</ph> parameter.","source":"The <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> method returns a descendent of the <xref:System.Web.Hosting.VirtualDirectory> class that contains the file and directories contained in the directory specified in the `virtualDir` parameter."},{"pos":[263,454],"content":"If your custom <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> class does not support directories, the <ph id=\"ph2\">&lt;xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A&gt;</ph> method should return <ph id=\"ph3\">`null`</ph>.","source":"If your custom <xref:System.Web.Hosting.VirtualPathProvider> class does not support directories, the <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> method should return `null`."},{"pos":[462,675],"content":"[!NOTE]\n If your virtual file system will contain themes for the Web site (by creating a virtual `App_Themes` directory), your custom <xref:System.Web.Hosting.VirtualPathProvider> class must support directories.","leadings":["","> "],"nodes":[{"content":"If your virtual file system will contain themes for the Web site (by creating a virtual <ph id=\"ph1\">`App_Themes`</ph> directory), your custom <ph id=\"ph2\">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> class must support directories.","pos":[9,211],"source":" If your virtual file system will contain themes for the Web site (by creating a virtual `App_Themes` directory), your custom <xref:System.Web.Hosting.VirtualPathProvider> class must support directories."}]}],"pos":[27387,28070],"yaml":true,"extradata":"MT"},{"content":"The path to the virtual directory.","nodes":[{"pos":[0,34],"content":"The path to the virtual directory.","nodes":[{"content":"The path to the virtual directory.","pos":[0,34]}]}],"pos":[28965,29000],"yaml":true},{"content":"A descendent of the <xref href=\"System.Web.Hosting.VirtualDirectory\"></xref> class that represents a directory in the virtual file system.","nodes":[{"pos":[0,138],"content":"A descendent of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Hosting.VirtualDirectory\"&gt;&lt;/xref&gt;</ph> class that represents a directory in the virtual file system.","source":"A descendent of the <xref href=\"System.Web.Hosting.VirtualDirectory\"></xref> class that represents a directory in the virtual file system."}],"pos":[29079,29218],"yaml":true},{"content":"Gets a virtual file from the virtual file system.","nodes":[{"pos":[0,49],"content":"Gets a virtual file from the virtual file system.","nodes":[{"content":"Gets a virtual file from the virtual file system.","pos":[0,49]}]}],"pos":[30274,30324],"yaml":true},{"content":"The <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> method returns a descendent of the <xref:System.Web.Hosting.VirtualFile> class that represents the file specified by the `virtualPath` parameter.","nodes":[{"pos":[0,206],"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A&gt;</ph> method returns a descendent of the <ph id=\"ph2\">&lt;xref:System.Web.Hosting.VirtualFile&gt;</ph> class that represents the file specified by the <ph id=\"ph3\">`virtualPath`</ph> parameter.","source":"The <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> method returns a descendent of the <xref:System.Web.Hosting.VirtualFile> class that represents the file specified by the `virtualPath` parameter."}],"pos":[30335,30542],"yaml":true,"extradata":"MT"},{"content":"The path to the virtual file.","nodes":[{"pos":[0,29],"content":"The path to the virtual file.","nodes":[{"content":"The path to the virtual file.","pos":[0,29]}]}],"pos":[31424,31454],"yaml":true},{"content":"A descendent of the <xref href=\"System.Web.Hosting.VirtualFile\"></xref> class that represents a file in the virtual file system.","nodes":[{"pos":[0,128],"content":"A descendent of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Hosting.VirtualFile\"&gt;&lt;/xref&gt;</ph> class that represents a file in the virtual file system.","source":"A descendent of the <xref href=\"System.Web.Hosting.VirtualFile\"></xref> class that represents a file in the virtual file system."}],"pos":[31528,31657],"yaml":true},{"content":"Returns a hash of the specified virtual paths.","nodes":[{"pos":[0,46],"content":"Returns a hash of the specified virtual paths.","nodes":[{"content":"Returns a hash of the specified virtual paths.","pos":[0,46]}]}],"pos":[32864,32911],"yaml":true},{"content":"Use the <xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A> method to provide a hash of the dependencies for a virtual-file-system resource.","nodes":[{"pos":[0,149],"content":"Use the <xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A> method to provide a hash of the dependencies for a virtual-file-system resource.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A&gt;</ph> method to provide a hash of the dependencies for a virtual-file-system resource.","pos":[0,149],"source":"Use the <xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A> method to provide a hash of the dependencies for a virtual-file-system resource."}]}],"pos":[32922,33072],"yaml":true,"extradata":"MT"},{"content":"The path to the primary virtual resource.","nodes":[{"pos":[0,41],"content":"The path to the primary virtual resource.","nodes":[{"content":"The path to the primary virtual resource.","pos":[0,41]}]}],"pos":[33290,33332],"yaml":true},{"content":"An array of paths to other virtual resources required by the primary virtual resource.","nodes":[{"pos":[0,86],"content":"An array of paths to other virtual resources required by the primary virtual resource.","nodes":[{"content":"An array of paths to other virtual resources required by the primary virtual resource.","pos":[0,86]}]}],"pos":[33428,33515],"yaml":true},{"content":"A hash of the specified virtual paths.","nodes":[{"pos":[0,38],"content":"A hash of the specified virtual paths.","nodes":[{"content":"A hash of the specified virtual paths.","pos":[0,38]}]}],"pos":[33572,33611],"yaml":true},{"content":"Initializes the <xref href=\"System.Web.Hosting.VirtualPathProvider\"></xref> instance.","nodes":[{"pos":[0,85],"content":"Initializes the <ph id=\"ph1\">&lt;xref href=\"System.Web.Hosting.VirtualPathProvider\"&gt;&lt;/xref&gt;</ph> instance.","source":"Initializes the <xref href=\"System.Web.Hosting.VirtualPathProvider\"></xref> instance."}],"pos":[34621,34707],"yaml":true},{"content":"The <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> method is called after the provider is registered with the ASP.NET compilation system. The <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> method is used to provide any initialization required after the <xref:System.Web.Hosting.VirtualPathProvider> instance is placed into the environment the application occupies.","nodes":[{"pos":[0,390],"content":"The <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> method is called after the provider is registered with the ASP.NET compilation system. The <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> method is used to provide any initialization required after the <xref:System.Web.Hosting.VirtualPathProvider> instance is placed into the environment the application occupies.","nodes":[{"content":"The <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> method is called after the provider is registered with the ASP.NET compilation system. The <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> method is used to provide any initialization required after the <xref:System.Web.Hosting.VirtualPathProvider> instance is placed into the environment the application occupies.","pos":[0,390],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A&gt;</ph> method is called after the provider is registered with the ASP.NET compilation system.","pos":[0,150],"source":"The <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> method is called after the provider is registered with the ASP.NET compilation system."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A&gt;</ph> method is used to provide any initialization required after the <ph id=\"ph2\">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> instance is placed into the environment the application occupies.","pos":[151,390],"source":" The <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> method is used to provide any initialization required after the <xref:System.Web.Hosting.VirtualPathProvider> instance is placed into the environment the application occupies."}]}]}],"pos":[34718,35109],"yaml":true,"extradata":"MT"},{"content":"Gives the <xref href=\"System.Web.Hosting.VirtualPathProvider\"></xref> object an infinite lifetime by preventing a lease from being created.","nodes":[{"pos":[0,139],"content":"Gives the <ph id=\"ph1\">&lt;xref href=\"System.Web.Hosting.VirtualPathProvider\"&gt;&lt;/xref&gt;</ph> object an infinite lifetime by preventing a lease from being created.","source":"Gives the <xref href=\"System.Web.Hosting.VirtualPathProvider\"></xref> object an infinite lifetime by preventing a lease from being created."}],"pos":[37038,37178],"yaml":true},{"content":"This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class. It always returns `null` and thereby prevents a lease from being created that would limit the <xref:System.Web.Hosting.VirtualPathProvider> object's lifetime.","nodes":[{"pos":[0,272],"content":"This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class. It always returns `null` and thereby prevents a lease from being created that would limit the <xref:System.Web.Hosting.VirtualPathProvider> object's lifetime.","nodes":[{"content":"This method overrides the <ph id=\"ph1\">&lt;xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt;</ph> method in its base class.","pos":[0,113],"source":"This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class."},{"content":"It always returns <ph id=\"ph1\">`null`</ph> and thereby prevents a lease from being created that would limit the <ph id=\"ph2\">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> object's lifetime.","pos":[114,272],"source":" It always returns `null` and thereby prevents a lease from being created that would limit the <xref:System.Web.Hosting.VirtualPathProvider> object's lifetime."}]}],"pos":[37189,37462],"yaml":true,"extradata":"MT"},{"content":"Always `null`.","nodes":[{"pos":[0,14],"content":"Always <ph id=\"ph1\">`null`</ph>.","source":"Always `null`."}],"pos":[37614,37629],"yaml":true},{"content":"Returns a stream from a virtual file.","nodes":[{"pos":[0,37],"content":"Returns a stream from a virtual file.","nodes":[{"content":"Returns a stream from a virtual file.","pos":[0,37]}]}],"pos":[38704,38742],"yaml":true},{"content":"The <xref:System.Web.Hosting.VirtualPathProvider.OpenFile%2A> method is a convenience method that enables you to get a stream from a virtual file without creating a <xref:System.Web.Hosting.VirtualPathProvider> instance.","nodes":[{"pos":[0,220],"content":"The <xref:System.Web.Hosting.VirtualPathProvider.OpenFile%2A> method is a convenience method that enables you to get a stream from a virtual file without creating a <xref:System.Web.Hosting.VirtualPathProvider> instance.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualPathProvider.OpenFile%2A&gt;</ph> method is a convenience method that enables you to get a stream from a virtual file without creating a <ph id=\"ph2\">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> instance.","pos":[0,220],"source":"The <xref:System.Web.Hosting.VirtualPathProvider.OpenFile%2A> method is a convenience method that enables you to get a stream from a virtual file without creating a <xref:System.Web.Hosting.VirtualPathProvider> instance."}]}],"pos":[38753,38974],"yaml":true,"extradata":"MT"},{"content":"The path to the virtual file.","nodes":[{"pos":[0,29],"content":"The path to the virtual file.","nodes":[{"content":"The path to the virtual file.","pos":[0,29]}]}],"pos":[39142,39172],"yaml":true},{"content":"A read-only <xref href=\"System.IO.Stream\"></xref> object for the specified virtual file or resource.","nodes":[{"pos":[0,100],"content":"A read-only <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> object for the specified virtual file or resource.","source":"A read-only <xref href=\"System.IO.Stream\"></xref> object for the specified virtual file or resource."}],"pos":[39232,39333],"yaml":true},{"content":"Gets a reference to a previously registered <xref href=\"System.Web.Hosting.VirtualPathProvider\"></xref> object in the compilation system.","nodes":[{"pos":[0,137],"content":"Gets a reference to a previously registered <ph id=\"ph1\">&lt;xref href=\"System.Web.Hosting.VirtualPathProvider\"&gt;&lt;/xref&gt;</ph> object in the compilation system.","source":"Gets a reference to a previously registered <xref href=\"System.Web.Hosting.VirtualPathProvider\"></xref> object in the compilation system."}],"pos":[40324,40462],"yaml":true},{"content":"When a <xref:System.Web.Hosting.VirtualPathProvider> object is registered with the ASP.NET compilation system, it is added to a chain of providers. Use the <xref:System.Web.Hosting.VirtualPathProvider.Previous%2A> property to hand processing off to the previous <xref:System.Web.Hosting.VirtualPathProvider> object in the chain if the requested path is not provided by this <xref:System.Web.Hosting.VirtualPathProvider> instance.  \n  \n The chain of path providers always ends with the default ASP.NET provider, which serves files from the file system.","nodes":[{"pos":[0,429],"content":"When a <xref:System.Web.Hosting.VirtualPathProvider> object is registered with the ASP.NET compilation system, it is added to a chain of providers. Use the <xref:System.Web.Hosting.VirtualPathProvider.Previous%2A> property to hand processing off to the previous <xref:System.Web.Hosting.VirtualPathProvider> object in the chain if the requested path is not provided by this <xref:System.Web.Hosting.VirtualPathProvider> instance.","nodes":[{"content":"When a <xref:System.Web.Hosting.VirtualPathProvider> object is registered with the ASP.NET compilation system, it is added to a chain of providers. Use the <xref:System.Web.Hosting.VirtualPathProvider.Previous%2A> property to hand processing off to the previous <xref:System.Web.Hosting.VirtualPathProvider> object in the chain if the requested path is not provided by this <xref:System.Web.Hosting.VirtualPathProvider> instance.","pos":[0,429],"nodes":[{"content":"When a <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> object is registered with the ASP.NET compilation system, it is added to a chain of providers.","pos":[0,147],"source":"When a <xref:System.Web.Hosting.VirtualPathProvider> object is registered with the ASP.NET compilation system, it is added to a chain of providers."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.Hosting.VirtualPathProvider.Previous%2A&gt;</ph> property to hand processing off to the previous <ph id=\"ph2\">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> object in the chain if the requested path is not provided by this <ph id=\"ph3\">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> instance.","pos":[148,429],"source":" Use the <xref:System.Web.Hosting.VirtualPathProvider.Previous%2A> property to hand processing off to the previous <xref:System.Web.Hosting.VirtualPathProvider> object in the chain if the requested path is not provided by this <xref:System.Web.Hosting.VirtualPathProvider> instance."}]}]},{"pos":[436,551],"content":"The chain of path providers always ends with the default ASP.NET provider, which serves files from the file system.","nodes":[{"content":"The chain of path providers always ends with the default ASP.NET provider, which serves files from the file system.","pos":[0,115]}]}],"pos":[40473,41029],"yaml":true,"extradata":"MT"},{"content":"The next <xref href=\"System.Web.Hosting.VirtualPathProvider\"></xref> object in the compilation system.","nodes":[{"pos":[0,102],"content":"The next <ph id=\"ph1\">&lt;xref href=\"System.Web.Hosting.VirtualPathProvider\"&gt;&lt;/xref&gt;</ph> object in the compilation system.","source":"The next <xref href=\"System.Web.Hosting.VirtualPathProvider\"></xref> object in the compilation system."}],"pos":[42103,42206],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Hosting.VirtualPathProvider\n  commentId: T:System.Web.Hosting.VirtualPathProvider\n  id: VirtualPathProvider\n  children:\n  - System.Web.Hosting.VirtualPathProvider.#ctor\n  - System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)\n  - System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)\n  - System.Web.Hosting.VirtualPathProvider.FileExists(System.String)\n  - System.Web.Hosting.VirtualPathProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)\n  - System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)\n  - System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)\n  - System.Web.Hosting.VirtualPathProvider.GetFile(System.String)\n  - System.Web.Hosting.VirtualPathProvider.GetFileHash(System.String,System.Collections.IEnumerable)\n  - System.Web.Hosting.VirtualPathProvider.Initialize\n  - System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService\n  - System.Web.Hosting.VirtualPathProvider.OpenFile(System.String)\n  - System.Web.Hosting.VirtualPathProvider.Previous\n  langs:\n  - csharp\n  name: VirtualPathProvider\n  nameWithType: VirtualPathProvider\n  fullName: System.Web.Hosting.VirtualPathProvider\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Provides a set of methods that enable a Web application to retrieve resources from a virtual file system.\n  remarks: \"The <xref:System.Web.Hosting.VirtualPathProvider> class provides a set of methods for implementing a virtual file system for a Web application. In a virtual file system, the files and directories are managed by a data store other than the file system provided by the server's operating system. For example, you can use a virtual file system to store content in a SQL Server database.  \\n  \\n You can store any file that is processed on request in a virtual file system. This includes:  \\n  \\n-   ASP.NET pages, master pages, user controls, and other objects.  \\n  \\n-   Standard Web pages with extensions such as .htm and .jpg.  \\n  \\n-   Any custom extension mapped to a <xref:System.Web.Compilation.BuildProvider> instance.  \\n  \\n-   Any named theme in the `App_Theme` folder.  \\n  \\n You cannot store ASP.NET application folders or files that generate application-level assemblies in a virtual file system. This includes:  \\n  \\n-   The Global.asax file.  \\n  \\n-   Web.config files.  \\n  \\n-   Site map data files used by the <xref:System.Web.XmlSiteMapProvider>.  \\n  \\n-   Directories that contain application assemblies or that generate application assemblies: `Bin`, `App_Code`, `App_GlobalResources`, any `App_LocalResources`.  \\n  \\n-   The application data folder, `App_Data`.  \\n  \\n> [!NOTE]\\n>  If a Web site is precompiled for deployment, content provided by a <xref:System.Web.Hosting.VirtualPathProvider> instance is not compiled, and no <xref:System.Web.Hosting.VirtualPathProvider> instances are used by the precompiled site.  \\n  \\n## Registering a VirtualPathProvider  \\n A custom <xref:System.Web.Hosting.VirtualPathProvider> instance should be registered with the ASP.NET compilation system by using the <xref:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider%2A?displayProperty=fullName> method before any page parsing or compilation is performed by the Web application.  \\n  \\n Typically, a <xref:System.Web.Hosting.VirtualPathProvider> instance is registered in an `AppInitialize` method defined in the `App_Code` directory, or during the `Application_Start` event in the `Global.asax` file. For an example of registering a <xref:System.Web.Hosting.VirtualPathProvider> instance in an `AppInitialize` method, see the Example section.  \\n  \\n You can register a <xref:System.Web.Hosting.VirtualPathProvider> instance during other events, but pages compiled and cached before the <xref:System.Web.Hosting.VirtualPathProvider> instance is registered will not be invalidated, even if the new <xref:System.Web.Hosting.VirtualPathProvider> instance would now provide the source for the previously compiled page.\"\n  example:\n  - \"The following code example is a <xref:System.Web.Hosting.VirtualPathProvider> class implementation that creates a virtual file system using information stored in a <xref:System.Data.DataSet> object. The code example works with the code examples for the <xref:System.Web.Hosting.VirtualFile> and <xref:System.Web.Hosting.VirtualDirectory> classes to provide virtual resources from a data store that is loaded into a <xref:System.Data.DataSet> object.  \\n  \\n This example has four parts: the <xref:System.Web.Hosting.VirtualPathProvider> class implementation, an XML data file used to populate the <xref:System.Data.DataSet> object, an `AppStart` object that contains an `AppInitialize` method used to register the <xref:System.Web.Hosting.VirtualPathProvider> class with the compilation system, and an ASP.NET page that provides links to the virtual files.  \\n  \\n To use this sample code in an application, follow these steps.  \\n  \\n1.  Create a sample application on your Web server.  \\n  \\n2.  Copy the source code for the custom <xref:System.Web.Hosting.VirtualPathProvider> object (see below) into a file in the application's `App_Code` directory.  \\n  \\n3.  Copy the source code for the custom <xref:System.Web.Hosting.VirtualDirectory> object (see the Example section in the <xref:System.Web.Hosting.VirtualDirectory> class overview topic) into a file in the application's `App_Code` directory.  \\n  \\n4.  Copy the source code for the custom <xref:System.Web.Hosting.VirtualFile> object (see the Example section in the <xref:System.Web.Hosting.VirtualFile> class overview topic) into a file in the application's `App_Code` directory.  \\n  \\n5.  Copy the source code for the `AppStart` object (see below) into a file in the application's `App_Code` directory.  \\n  \\n6.  Copy the XML data (see below) into a file named `XMLData.xml` into a file in the application's `App_Data` directory.  \\n  \\n7.  Copy the `default.aspx` file (see below) into the root directory of the sample application. Use a Web browser to open the `default.aspx` file, and then click the links on the page to see the contents of the virtual files.  \\n  \\n The first example is a custom <xref:System.Web.Hosting.VirtualPathProvider> class. The <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> and <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> methods are overridden to indicate whether a requested directory is present in the virtual file system. The <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> and <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> methods are overridden to return custom <xref:System.Web.Hosting.VirtualDirectory> and <xref:System.Web.Hosting.VirtualFile> instances containing information from the virtual file system.  \\n  \\n The class also provides a `GetVirtualData` method used by the <xref:System.Web.Hosting.VirtualDirectory> and <xref:System.Web.Hosting.VirtualFile> classes to access the <xref:System.Data.DataSet> object containing the virtual file system data. In a production implementation, this method would typically be implemented in a business object responsible for interacting with the data store.  \\n  \\n [!code-csharp[System.Web.Hosting.VirtualPathProvider#20](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#20)]\\n [!code-vb[System.Web.Hosting.VirtualPathProvider#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#20)]  \\n  \\n The second example is the XML data file used to populate the <xref:System.Data.DataSet> object returned by the custom <xref:System.Web.Hosting.VirtualPathProvider> object. This XML data is used to demonstrate using the <xref:System.Web.Hosting.VirtualPathProvider>, <xref:System.Web.Hosting.VirtualDirectory>, and <xref:System.Web.Hosting.VirtualFile> objects to retrieve data from external data and is not intended to represent a production-quality data store.  \\n  \\n```  \\n<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\" ?>  \\n  <resource type=\\\"dir\\\"   \\n    path=\\\"/vrDir\\\"   \\n    parentPath=\\\"\\\"   \\n    content=\\\"\\\">  \\n    <resource type=\\\"file\\\"   \\n      path=\\\"/vrDir/Level1FileA.vrf\\\"  \\n      parentPath=\\\"/vrDir\\\"   \\n      content=\\\"This is the content of file Level1FileA.\\\">  \\n    </resource>  \\n    <resource type=\\\"file\\\"   \\n      path=\\\"/vrDir/Level1FileB.vrf\\\"  \\n      parentPath=\\\"/vrDir\\\"   \\n      content=\\\"This is the content of file Level1FileB.\\\">  \\n    </resource>  \\n    <resource type=\\\"dir\\\"   \\n      path=\\\"/vrDir/Level2DirA\\\"   \\n      parentPath=\\\"/vrDir\\\"   \\n      content=\\\"\\\">  \\n    <resource type=\\\"file\\\"   \\n      path=\\\"/vrDir/Level2DirA/Level2FileA.vrf\\\"   \\n      parentPath=\\\"/vrDir/Level2DirA\\\"   \\n      content=\\\"This is the content of file Level2FileA.\\\">  \\n    </resource>  \\n    <resource type=\\\"file\\\"   \\n      path=\\\"/vrDir/Level2DirA/Level2FileB.vrf\\\"  \\n      parentPath=\\\"/vrDir/Level2DirA\\\"   \\n      content=\\\"This is the content of file Level2FileB.\\\">  \\n    </resource>  \\n  </resource>  \\n  <resource type=\\\"dir\\\"   \\n    path=\\\"/vrDir/Level2DirB\\\"   \\n    parentPath=\\\"/vrDir\\\"   \\n    content=\\\"\\\">  \\n    <resource type=\\\"file\\\"   \\n      path=\\\"/vrDir/Level2DirB/Level2FileA.vrf\\\"   \\n      parentPath=\\\"/vrDir/Level2DirB\\\"   \\n      content=\\\"This is the content of file Level2FileA.\\\">  \\n    </resource>  \\n    <resource type=\\\"file\\\"   \\n      path=\\\"/vrDir/Level2DirB/Level2FileB.vrf\\\"  \\n      parentPath=\\\"/vrDir/Level2DirB\\\"   \\n      content=\\\"This is the content of file Level2FileB.\\\">  \\n    </resource>  \\n  </resource>  \\n</resource>  \\n```  \\n  \\n The third example provides an `AppStart` object that contains an `AppInitialize` method. This method is called during the initialization of an ASP.NET application to perform any custom initialization required. In this case, it registers the custom <xref:System.Web.Hosting.VirtualPathProvider> object with the ASP.NET build system.  \\n  \\n [!code-csharp[System.Web.Hosting.VirtualPathProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/AppStart.cs#10)]\\n [!code-vb[System.Web.Hosting.VirtualPathProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/AppStart.vb#10)]  \\n  \\n The last example is an ASP.NET page that contains links to the virtual files contained in the virtual file system.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.Hosting.VirtualPathProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/Default.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.Hosting.VirtualPathProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/Default.aspx#1)]  -->\"\n  syntax:\n    content: 'public abstract class VirtualPathProvider : MarshalByRefObject'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  implements: []\n  inheritedMembers:\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.VirtualPathProvider.#ctor\n  commentId: M:System.Web.Hosting.VirtualPathProvider.#ctor\n  id: '#ctor'\n  parent: System.Web.Hosting.VirtualPathProvider\n  langs:\n  - csharp\n  name: VirtualPathProvider()\n  nameWithType: VirtualPathProvider.VirtualPathProvider()\n  fullName: VirtualPathProvider.VirtualPathProvider()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Initializes the class for use by an inherited class instance. This constructor can be called only by an inherited class.\n  remarks: When overriding the <xref:System.Web.Hosting.VirtualPathProvider.%23ctor%2A> constructor, defer any initialization that must occur after the <xref:System.Web.Hosting.VirtualPathProvider> object is registered to the <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> method.\n  example:\n  - \"The following code example is an implementation of the <xref:System.Web.Hosting.VirtualPathProvider.%23ctor%2A> constructor that initializes a custom <xref:System.Web.Hosting.VirtualPathProvider> class. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \\n  \\n [!code-csharp[System.Web.Hosting.VirtualPathProvider#25](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#25)]\\n [!code-vb[System.Web.Hosting.VirtualPathProvider#25](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#25)]\"\n  syntax:\n    content: protected VirtualPathProvider ();\n    parameters: []\n  overload: System.Web.Hosting.VirtualPathProvider.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)\n  commentId: M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)\n  id: CombineVirtualPaths(System.String,System.String)\n  parent: System.Web.Hosting.VirtualPathProvider\n  langs:\n  - csharp\n  name: CombineVirtualPaths(String, String)\n  nameWithType: VirtualPathProvider.CombineVirtualPaths(String, String)\n  fullName: VirtualPathProvider.CombineVirtualPaths(String, String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Combines a base path with a relative path to return a complete path to a virtual resource.\n  remarks: \"Use the <xref:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths%2A> method to inspect the contents of a relative path to a virtual resource and perform any modifications required.  \\n  \\n The default implementation combines the `basePath` and `relativePath` parameters according to standard ASP.NET path processing.\"\n  syntax:\n    content: public virtual string CombineVirtualPaths (string basePath, string relativePath);\n    parameters:\n    - id: basePath\n      type: System.String\n      description: The base path for the application.\n    - id: relativePath\n      type: System.String\n      description: The path to the virtual resource, relative to the base path.\n    return:\n      type: System.String\n      description: The complete path to a virtual resource.\n  overload: System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)\n  commentId: M:System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)\n  id: DirectoryExists(System.String)\n  parent: System.Web.Hosting.VirtualPathProvider\n  langs:\n  - csharp\n  name: DirectoryExists(String)\n  nameWithType: VirtualPathProvider.DirectoryExists(String)\n  fullName: VirtualPathProvider.DirectoryExists(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Gets a value that indicates whether a directory exists in the virtual file system.\n  remarks: \"Override the <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> method to indicate to the compilation system that the resource represented by `virtualDir` exists in the virtual file system provided by this <xref:System.Web.Hosting.VirtualPathProvider> instance.  \\n  \\n If your custom <xref:System.Web.Hosting.VirtualPathProvider> class does not support directories, the <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> method should return `false`.  \\n  \\n> [!NOTE]\\n>  If your virtual file system will contain themes for the Web site (by creating a virtual `App_Themes` directory), your custom <xref:System.Web.Hosting.VirtualPathProvider> class must support directories.\"\n  example:\n  - \"The following code example is an implementation of the <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> method in a custom <xref:System.Web.Hosting.VirtualPathProvider> class. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \\n  \\n [!code-csharp[System.Web.Hosting.VirtualPathProvider#22](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#22)]\\n [!code-vb[System.Web.Hosting.VirtualPathProvider#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#22)]\"\n  syntax:\n    content: public virtual bool DirectoryExists (string virtualDir);\n    parameters:\n    - id: virtualDir\n      type: System.String\n      description: The path to the virtual directory.\n    return:\n      type: System.Boolean\n      description: '`true` if the directory exists in the virtual file system; otherwise, `false`.'\n  overload: System.Web.Hosting.VirtualPathProvider.DirectoryExists*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.VirtualPathProvider.FileExists(System.String)\n  commentId: M:System.Web.Hosting.VirtualPathProvider.FileExists(System.String)\n  id: FileExists(System.String)\n  parent: System.Web.Hosting.VirtualPathProvider\n  langs:\n  - csharp\n  name: FileExists(String)\n  nameWithType: VirtualPathProvider.FileExists(String)\n  fullName: VirtualPathProvider.FileExists(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Gets a value that indicates whether a file exists in the virtual file system.\n  remarks: Override the <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> method to indicate to the compilation system that the resource represented by `virtualPath` exists in the virtual file system provided by this <xref:System.Web.Hosting.VirtualPathProvider> instance.\n  example:\n  - \"The following code example is an implementation of the <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> method in a custom <xref:System.Web.Hosting.VirtualPathProvider> class. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \\n  \\n [!code-csharp[System.Web.Hosting.VirtualPathProvider#21](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#21)]\\n [!code-vb[System.Web.Hosting.VirtualPathProvider#21](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#21)]\"\n  syntax:\n    content: public virtual bool FileExists (string virtualPath);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The path to the virtual file.\n    return:\n      type: System.Boolean\n      description: '`true` if the file exists in the virtual file system; otherwise, `false`.'\n  overload: System.Web.Hosting.VirtualPathProvider.FileExists*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.VirtualPathProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)\n  commentId: M:System.Web.Hosting.VirtualPathProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)\n  id: GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)\n  parent: System.Web.Hosting.VirtualPathProvider\n  langs:\n  - csharp\n  name: GetCacheDependency(String, IEnumerable, DateTime)\n  nameWithType: VirtualPathProvider.GetCacheDependency(String, IEnumerable, DateTime)\n  fullName: VirtualPathProvider.GetCacheDependency(String, IEnumerable, DateTime)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Creates a cache dependency based on the specified virtual paths.\n  remarks: The default implementation of the <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> method returns `null`. To cache virtual resources for later use you must override either the <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> method or the <xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A> method.\n  example:\n  - \"The following code example implements the <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> method for a custom <xref:System.Web.Hosting.VirtualPathProvider> class. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \\n  \\n [!code-csharp[System.Web.Hosting.VirtualPathProvider#28](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#28)]\\n [!code-vb[System.Web.Hosting.VirtualPathProvider#28](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#28)]\"\n  syntax:\n    content: public virtual System.Web.Caching.CacheDependency GetCacheDependency (string virtualPath, System.Collections.IEnumerable virtualPathDependencies, DateTime utcStart);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The path to the primary virtual resource.\n    - id: virtualPathDependencies\n      type: System.Collections.IEnumerable\n      description: An array of paths to other resources required by the primary virtual resource.\n    - id: utcStart\n      type: System.DateTime\n      description: The UTC time at which the virtual resources were read.\n    return:\n      type: System.Web.Caching.CacheDependency\n      description: A <xref href=\"System.Web.Caching.CacheDependency\"></xref> object for the specified virtual resources.\n  overload: System.Web.Hosting.VirtualPathProvider.GetCacheDependency*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)\n  commentId: M:System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)\n  id: GetCacheKey(System.String)\n  parent: System.Web.Hosting.VirtualPathProvider\n  langs:\n  - csharp\n  name: GetCacheKey(String)\n  nameWithType: VirtualPathProvider.GetCacheKey(String)\n  fullName: VirtualPathProvider.GetCacheKey(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Returns a cache key to use for the specified virtual path.\n  remarks: Use the <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> method to provide a custom cache key for virtual resources. If you do not override the <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> method, the virtual path is used for the cache key.\n  syntax:\n    content: public virtual string GetCacheKey (string virtualPath);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The path to the virtual resource.\n    return:\n      type: System.String\n      description: A cache key for the specified virtual resource.\n  overload: System.Web.Hosting.VirtualPathProvider.GetCacheKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)\n  commentId: M:System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)\n  id: GetDirectory(System.String)\n  parent: System.Web.Hosting.VirtualPathProvider\n  langs:\n  - csharp\n  name: GetDirectory(String)\n  nameWithType: VirtualPathProvider.GetDirectory(String)\n  fullName: VirtualPathProvider.GetDirectory(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Gets a virtual directory from the virtual file system.\n  remarks: \"The <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> method returns a descendent of the <xref:System.Web.Hosting.VirtualDirectory> class that contains the file and directories contained in the directory specified in the `virtualDir` parameter.  \\n  \\n If your custom <xref:System.Web.Hosting.VirtualPathProvider> class does not support directories, the <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> method should return `null`.  \\n  \\n> [!NOTE]\\n>  If your virtual file system will contain themes for the Web site (by creating a virtual `App_Themes` directory), your custom <xref:System.Web.Hosting.VirtualPathProvider> class must support directories.\"\n  example:\n  - \"The following code example is an implementation of the <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> method in a custom <xref:System.Web.Hosting.VirtualPathProvider> class. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \\n  \\n [!code-csharp[System.Web.Hosting.VirtualPathProvider#24](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#24)]\\n [!code-vb[System.Web.Hosting.VirtualPathProvider#24](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#24)]\"\n  syntax:\n    content: public virtual System.Web.Hosting.VirtualDirectory GetDirectory (string virtualDir);\n    parameters:\n    - id: virtualDir\n      type: System.String\n      description: The path to the virtual directory.\n    return:\n      type: System.Web.Hosting.VirtualDirectory\n      description: A descendent of the <xref href=\"System.Web.Hosting.VirtualDirectory\"></xref> class that represents a directory in the virtual file system.\n  overload: System.Web.Hosting.VirtualPathProvider.GetDirectory*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.VirtualPathProvider.GetFile(System.String)\n  commentId: M:System.Web.Hosting.VirtualPathProvider.GetFile(System.String)\n  id: GetFile(System.String)\n  parent: System.Web.Hosting.VirtualPathProvider\n  langs:\n  - csharp\n  name: GetFile(String)\n  nameWithType: VirtualPathProvider.GetFile(String)\n  fullName: VirtualPathProvider.GetFile(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Gets a virtual file from the virtual file system.\n  remarks: The <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> method returns a descendent of the <xref:System.Web.Hosting.VirtualFile> class that represents the file specified by the `virtualPath` parameter.\n  example:\n  - \"The following code example is an implementation of the <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> method in a custom <xref:System.Web.Hosting.VirtualPathProvider> class. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \\n  \\n [!code-csharp[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#23)]\\n [!code-vb[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#23)]\"\n  syntax:\n    content: public virtual System.Web.Hosting.VirtualFile GetFile (string virtualPath);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The path to the virtual file.\n    return:\n      type: System.Web.Hosting.VirtualFile\n      description: A descendent of the <xref href=\"System.Web.Hosting.VirtualFile\"></xref> class that represents a file in the virtual file system.\n  overload: System.Web.Hosting.VirtualPathProvider.GetFile*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.VirtualPathProvider.GetFileHash(System.String,System.Collections.IEnumerable)\n  commentId: M:System.Web.Hosting.VirtualPathProvider.GetFileHash(System.String,System.Collections.IEnumerable)\n  id: GetFileHash(System.String,System.Collections.IEnumerable)\n  parent: System.Web.Hosting.VirtualPathProvider\n  langs:\n  - csharp\n  name: GetFileHash(String, IEnumerable)\n  nameWithType: VirtualPathProvider.GetFileHash(String, IEnumerable)\n  fullName: VirtualPathProvider.GetFileHash(String, IEnumerable)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Returns a hash of the specified virtual paths.\n  remarks: Use the <xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A> method to provide a hash of the dependencies for a virtual-file-system resource.\n  syntax:\n    content: public virtual string GetFileHash (string virtualPath, System.Collections.IEnumerable virtualPathDependencies);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The path to the primary virtual resource.\n    - id: virtualPathDependencies\n      type: System.Collections.IEnumerable\n      description: An array of paths to other virtual resources required by the primary virtual resource.\n    return:\n      type: System.String\n      description: A hash of the specified virtual paths.\n  overload: System.Web.Hosting.VirtualPathProvider.GetFileHash*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.VirtualPathProvider.Initialize\n  commentId: M:System.Web.Hosting.VirtualPathProvider.Initialize\n  id: Initialize\n  parent: System.Web.Hosting.VirtualPathProvider\n  langs:\n  - csharp\n  name: Initialize()\n  nameWithType: VirtualPathProvider.Initialize()\n  fullName: VirtualPathProvider.Initialize()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Initializes the <xref href=\"System.Web.Hosting.VirtualPathProvider\"></xref> instance.\n  remarks: The <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> method is called after the provider is registered with the ASP.NET compilation system. The <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> method is used to provide any initialization required after the <xref:System.Web.Hosting.VirtualPathProvider> instance is placed into the environment the application occupies.\n  example:\n  - \"The following code example is an implementation of the <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> method that sets the path to a data file from the application's <xref:System.Web.Hosting.HostingEnvironment> instance. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \\n  \\n [!code-csharp[System.Web.Hosting.VirtualPathProvider#26](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#26)]\\n [!code-vb[System.Web.Hosting.VirtualPathProvider#26](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#26)]\"\n  syntax:\n    content: protected virtual void Initialize ();\n    parameters: []\n  overload: System.Web.Hosting.VirtualPathProvider.Initialize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService\n  commentId: M:System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService\n  id: InitializeLifetimeService\n  parent: System.Web.Hosting.VirtualPathProvider\n  langs:\n  - csharp\n  name: InitializeLifetimeService()\n  nameWithType: VirtualPathProvider.InitializeLifetimeService()\n  fullName: VirtualPathProvider.InitializeLifetimeService()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Gives the <xref href=\"System.Web.Hosting.VirtualPathProvider\"></xref> object an infinite lifetime by preventing a lease from being created.\n  remarks: This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class. It always returns `null` and thereby prevents a lease from being created that would limit the <xref:System.Web.Hosting.VirtualPathProvider> object's lifetime.\n  syntax:\n    content: public override object InitializeLifetimeService ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Always `null`.\n  overload: System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.VirtualPathProvider.OpenFile(System.String)\n  commentId: M:System.Web.Hosting.VirtualPathProvider.OpenFile(System.String)\n  id: OpenFile(System.String)\n  parent: System.Web.Hosting.VirtualPathProvider\n  langs:\n  - csharp\n  name: OpenFile(String)\n  nameWithType: VirtualPathProvider.OpenFile(String)\n  fullName: VirtualPathProvider.OpenFile(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Returns a stream from a virtual file.\n  remarks: The <xref:System.Web.Hosting.VirtualPathProvider.OpenFile%2A> method is a convenience method that enables you to get a stream from a virtual file without creating a <xref:System.Web.Hosting.VirtualPathProvider> instance.\n  syntax:\n    content: public static System.IO.Stream OpenFile (string virtualPath);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The path to the virtual file.\n    return:\n      type: System.IO.Stream\n      description: A read-only <xref href=\"System.IO.Stream\"></xref> object for the specified virtual file or resource.\n  overload: System.Web.Hosting.VirtualPathProvider.OpenFile*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Hosting.VirtualPathProvider.Previous\n  commentId: P:System.Web.Hosting.VirtualPathProvider.Previous\n  id: Previous\n  parent: System.Web.Hosting.VirtualPathProvider\n  langs:\n  - csharp\n  name: Previous\n  nameWithType: VirtualPathProvider.Previous\n  fullName: VirtualPathProvider.Previous\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Hosting\n  summary: Gets a reference to a previously registered <xref href=\"System.Web.Hosting.VirtualPathProvider\"></xref> object in the compilation system.\n  remarks: \"When a <xref:System.Web.Hosting.VirtualPathProvider> object is registered with the ASP.NET compilation system, it is added to a chain of providers. Use the <xref:System.Web.Hosting.VirtualPathProvider.Previous%2A> property to hand processing off to the previous <xref:System.Web.Hosting.VirtualPathProvider> object in the chain if the requested path is not provided by this <xref:System.Web.Hosting.VirtualPathProvider> instance.  \\n  \\n The chain of path providers always ends with the default ASP.NET provider, which serves files from the file system.\"\n  example:\n  - \"The following code example is an implementation of the <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> method. If the requested virtual directory does not begin with the string `\\\"/vrdir\\\"`, the method uses the <xref:System.Web.Hosting.VirtualPathProvider.Previous%2A> property to pass the request to the next <xref:System.Web.Hosting.VirtualPathProvider> object in the chain. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \\n  \\n [!code-csharp[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#23)]\\n [!code-vb[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#23)]\"\n  syntax:\n    content: protected System.Web.Hosting.VirtualPathProvider Previous { get; }\n    return:\n      type: System.Web.Hosting.VirtualPathProvider\n      description: The next <xref href=\"System.Web.Hosting.VirtualPathProvider\"></xref> object in the compilation system.\n  overload: System.Web.Hosting.VirtualPathProvider.Previous*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.MarshalByRefObject\n  parent: System\n  isExternal: false\n  name: MarshalByRefObject\n  nameWithType: MarshalByRefObject\n  fullName: System.MarshalByRefObject\n- uid: System.Web.Hosting.VirtualPathProvider.#ctor\n  parent: System.Web.Hosting.VirtualPathProvider\n  isExternal: false\n  name: VirtualPathProvider()\n  nameWithType: VirtualPathProvider.VirtualPathProvider()\n  fullName: VirtualPathProvider.VirtualPathProvider()\n- uid: System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)\n  parent: System.Web.Hosting.VirtualPathProvider\n  isExternal: false\n  name: CombineVirtualPaths(String, String)\n  nameWithType: VirtualPathProvider.CombineVirtualPaths(String, String)\n  fullName: VirtualPathProvider.CombineVirtualPaths(String, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)\n  parent: System.Web.Hosting.VirtualPathProvider\n  isExternal: false\n  name: DirectoryExists(String)\n  nameWithType: VirtualPathProvider.DirectoryExists(String)\n  fullName: VirtualPathProvider.DirectoryExists(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Hosting.VirtualPathProvider.FileExists(System.String)\n  parent: System.Web.Hosting.VirtualPathProvider\n  isExternal: false\n  name: FileExists(String)\n  nameWithType: VirtualPathProvider.FileExists(String)\n  fullName: VirtualPathProvider.FileExists(String)\n- uid: System.Web.Hosting.VirtualPathProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)\n  parent: System.Web.Hosting.VirtualPathProvider\n  isExternal: false\n  name: GetCacheDependency(String, IEnumerable, DateTime)\n  nameWithType: VirtualPathProvider.GetCacheDependency(String, IEnumerable, DateTime)\n  fullName: VirtualPathProvider.GetCacheDependency(String, IEnumerable, DateTime)\n- uid: System.Web.Caching.CacheDependency\n  parent: System.Web.Caching\n  isExternal: false\n  name: CacheDependency\n  nameWithType: CacheDependency\n  fullName: System.Web.Caching.CacheDependency\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  nameWithType: IEnumerable\n  fullName: System.Collections.IEnumerable\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)\n  parent: System.Web.Hosting.VirtualPathProvider\n  isExternal: false\n  name: GetCacheKey(String)\n  nameWithType: VirtualPathProvider.GetCacheKey(String)\n  fullName: VirtualPathProvider.GetCacheKey(String)\n- uid: System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)\n  parent: System.Web.Hosting.VirtualPathProvider\n  isExternal: false\n  name: GetDirectory(String)\n  nameWithType: VirtualPathProvider.GetDirectory(String)\n  fullName: VirtualPathProvider.GetDirectory(String)\n- uid: System.Web.Hosting.VirtualDirectory\n  parent: System.Web.Hosting\n  isExternal: false\n  name: VirtualDirectory\n  nameWithType: VirtualDirectory\n  fullName: System.Web.Hosting.VirtualDirectory\n- uid: System.Web.Hosting.VirtualPathProvider.GetFile(System.String)\n  parent: System.Web.Hosting.VirtualPathProvider\n  isExternal: false\n  name: GetFile(String)\n  nameWithType: VirtualPathProvider.GetFile(String)\n  fullName: VirtualPathProvider.GetFile(String)\n- uid: System.Web.Hosting.VirtualFile\n  parent: System.Web.Hosting\n  isExternal: false\n  name: VirtualFile\n  nameWithType: VirtualFile\n  fullName: System.Web.Hosting.VirtualFile\n- uid: System.Web.Hosting.VirtualPathProvider.GetFileHash(System.String,System.Collections.IEnumerable)\n  parent: System.Web.Hosting.VirtualPathProvider\n  isExternal: false\n  name: GetFileHash(String, IEnumerable)\n  nameWithType: VirtualPathProvider.GetFileHash(String, IEnumerable)\n  fullName: VirtualPathProvider.GetFileHash(String, IEnumerable)\n- uid: System.Web.Hosting.VirtualPathProvider.Initialize\n  parent: System.Web.Hosting.VirtualPathProvider\n  isExternal: false\n  name: Initialize()\n  nameWithType: VirtualPathProvider.Initialize()\n  fullName: VirtualPathProvider.Initialize()\n- uid: System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService\n  parent: System.Web.Hosting.VirtualPathProvider\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: VirtualPathProvider.InitializeLifetimeService()\n  fullName: VirtualPathProvider.InitializeLifetimeService()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Hosting.VirtualPathProvider.OpenFile(System.String)\n  parent: System.Web.Hosting.VirtualPathProvider\n  isExternal: false\n  name: OpenFile(String)\n  nameWithType: VirtualPathProvider.OpenFile(String)\n  fullName: VirtualPathProvider.OpenFile(String)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Web.Hosting.VirtualPathProvider.Previous\n  parent: System.Web.Hosting.VirtualPathProvider\n  isExternal: false\n  name: Previous\n  nameWithType: VirtualPathProvider.Previous\n  fullName: VirtualPathProvider.Previous\n- uid: System.Web.Hosting.VirtualPathProvider\n  parent: System.Web.Hosting\n  isExternal: false\n  name: VirtualPathProvider\n  nameWithType: VirtualPathProvider\n  fullName: System.Web.Hosting.VirtualPathProvider\n- uid: System.Web.Hosting.VirtualPathProvider.#ctor*\n  parent: System.Web.Hosting.VirtualPathProvider\n  isExternal: false\n  name: VirtualPathProvider\n  nameWithType: VirtualPathProvider.VirtualPathProvider\n  fullName: VirtualPathProvider.VirtualPathProvider\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml\n- uid: System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths*\n  parent: System.Web.Hosting.VirtualPathProvider\n  isExternal: false\n  name: CombineVirtualPaths\n  nameWithType: VirtualPathProvider.CombineVirtualPaths\n  fullName: VirtualPathProvider.CombineVirtualPaths\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml\n- uid: System.Web.Hosting.VirtualPathProvider.DirectoryExists*\n  parent: System.Web.Hosting.VirtualPathProvider\n  isExternal: false\n  name: DirectoryExists\n  nameWithType: VirtualPathProvider.DirectoryExists\n  fullName: VirtualPathProvider.DirectoryExists\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml\n- uid: System.Web.Hosting.VirtualPathProvider.FileExists*\n  parent: System.Web.Hosting.VirtualPathProvider\n  isExternal: false\n  name: FileExists\n  nameWithType: VirtualPathProvider.FileExists\n  fullName: VirtualPathProvider.FileExists\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml\n- uid: System.Web.Hosting.VirtualPathProvider.GetCacheDependency*\n  parent: System.Web.Hosting.VirtualPathProvider\n  isExternal: false\n  name: GetCacheDependency\n  nameWithType: VirtualPathProvider.GetCacheDependency\n  fullName: VirtualPathProvider.GetCacheDependency\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml\n- uid: System.Web.Hosting.VirtualPathProvider.GetCacheKey*\n  parent: System.Web.Hosting.VirtualPathProvider\n  isExternal: false\n  name: GetCacheKey\n  nameWithType: VirtualPathProvider.GetCacheKey\n  fullName: VirtualPathProvider.GetCacheKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml\n- uid: System.Web.Hosting.VirtualPathProvider.GetDirectory*\n  parent: System.Web.Hosting.VirtualPathProvider\n  isExternal: false\n  name: GetDirectory\n  nameWithType: VirtualPathProvider.GetDirectory\n  fullName: VirtualPathProvider.GetDirectory\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml\n- uid: System.Web.Hosting.VirtualPathProvider.GetFile*\n  parent: System.Web.Hosting.VirtualPathProvider\n  isExternal: false\n  name: GetFile\n  nameWithType: VirtualPathProvider.GetFile\n  fullName: VirtualPathProvider.GetFile\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml\n- uid: System.Web.Hosting.VirtualPathProvider.GetFileHash*\n  parent: System.Web.Hosting.VirtualPathProvider\n  isExternal: false\n  name: GetFileHash\n  nameWithType: VirtualPathProvider.GetFileHash\n  fullName: VirtualPathProvider.GetFileHash\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml\n- uid: System.Web.Hosting.VirtualPathProvider.Initialize*\n  parent: System.Web.Hosting.VirtualPathProvider\n  isExternal: false\n  name: Initialize\n  nameWithType: VirtualPathProvider.Initialize\n  fullName: VirtualPathProvider.Initialize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml\n- uid: System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService*\n  parent: System.Web.Hosting.VirtualPathProvider\n  isExternal: false\n  name: InitializeLifetimeService\n  nameWithType: VirtualPathProvider.InitializeLifetimeService\n  fullName: VirtualPathProvider.InitializeLifetimeService\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml\n- uid: System.Web.Hosting.VirtualPathProvider.OpenFile*\n  parent: System.Web.Hosting.VirtualPathProvider\n  isExternal: false\n  name: OpenFile\n  nameWithType: VirtualPathProvider.OpenFile\n  fullName: VirtualPathProvider.OpenFile\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml\n- uid: System.Web.Hosting.VirtualPathProvider.Previous*\n  parent: System.Web.Hosting.VirtualPathProvider\n  isExternal: false\n  name: Previous\n  nameWithType: VirtualPathProvider.Previous\n  fullName: VirtualPathProvider.Previous\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualPathProvider.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: CreateObjRef(Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  fullName: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: GetLifetimeService()\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  fullName: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MemberwiseClone(Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  fullName: MarshalByRefObject.MemberwiseClone(Boolean)\n"}