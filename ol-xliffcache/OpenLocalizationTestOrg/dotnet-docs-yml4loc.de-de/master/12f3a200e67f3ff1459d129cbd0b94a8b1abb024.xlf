<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">12f3a200e67f3ff1459d129cbd0b94a8b1abb024</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ComponentModel.AsyncCompletedEventHandler.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e7c8f476a4219f3f4f60214b3d79a1e7feb03597</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4cb82f029edaa3791d2eb1563f5bf723e9cc4522</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the method that will handle the <bpt id="p1">*</bpt>MethodName<ept id="p1">*</ept><ph id="ph1">`Completed`</ph> event of an asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create an <ph id="ph1">&lt;xref:System.ComponentModel.AsyncCompletedEventHandler&gt;</ph> delegate, you identify the method that will handle the event.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>To associate the event with your event handler, add an instance of the delegate to the event.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event-handler method is called whenever the event occurs, unless you remove the delegate.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about event-handler delegates, see <bpt id="p1">[</bpt>NIB: Events and Delegates<ept id="p1">](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an asynchronous method, called <bpt id="p1">*</bpt>MethodName<ept id="p1">*</ept>, in your component, you will have a corresponding <bpt id="p2">*</bpt>MethodName<ept id="p2">*</ept><ph id="ph1">`Completed`</ph> event, and an optional <bpt id="p3">*</bpt>MethodName<ept id="p3">*</ept><ph id="ph2">`CompletedEventArgs`</ph> class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a component that supports multiple concurrent invocations of its asynchronous methods, the client can supply a unique token, or task ID, to distinguish which asynchronous task is raising particular events.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The client's <ph id="ph1">&lt;xref:System.ComponentModel.AsyncCompletedEventHandler&gt;</ph> can read the <ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=fullName&gt;</ph> property to determine which task is reporting completion.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your implementation should use the <ph id="ph1">&lt;xref:System.ComponentModel.AsyncOperationManager?displayProperty=fullName&gt;</ph> to create an <ph id="ph2">&lt;xref:System.ComponentModel.AsyncOperation?displayProperty=fullName&gt;</ph> that associates the client's task IDs with pending asynchronous tasks.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>