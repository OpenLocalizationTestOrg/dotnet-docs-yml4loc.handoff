{"nodes":[{"content":"Creates or associates parameter information.","nodes":[{"pos":[0,44],"content":"Creates or associates parameter information.","nodes":[{"content":"Creates or associates parameter information.","pos":[0,44]}]}],"pos":[1846,1891],"yaml":true},{"content":"Parameter attributes need to consistent with the method signature. If you specify `Out` attributes for a parameter, you should ensure that the type of that method parameter is a `ByRef` type.  \n  \n Some <xref:System.Reflection.Emit.ParameterBuilder> attributes require that you call <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A> with viable parameters in order for the Microsoft intermediate language (MSIL) to work correctly at runtime. For example, if you define a <xref:System.Reflection.Emit.ParameterBuilder> with ParameterAttributes.Out for parameter 1 of a `MethodBuilder`, then parameter 1 of <xref:System.Reflection.Emit.MethodBuilder> must be a reference such as Type.GetType(\"System.String&\"), rather than Type.GetType(\"System.String\").","nodes":[{"pos":[0,191],"content":"Parameter attributes need to consistent with the method signature. If you specify `Out` attributes for a parameter, you should ensure that the type of that method parameter is a `ByRef` type.","nodes":[{"content":"Parameter attributes need to consistent with the method signature.","pos":[0,66]},{"content":"If you specify <ph id=\"ph1\">`Out`</ph> attributes for a parameter, you should ensure that the type of that method parameter is a <ph id=\"ph2\">`ByRef`</ph> type.","pos":[67,191],"source":" If you specify `Out` attributes for a parameter, you should ensure that the type of that method parameter is a `ByRef` type."}]},{"pos":[198,759],"content":"Some <xref:System.Reflection.Emit.ParameterBuilder> attributes require that you call <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A> with viable parameters in order for the Microsoft intermediate language (MSIL) to work correctly at runtime. For example, if you define a <xref:System.Reflection.Emit.ParameterBuilder> with ParameterAttributes.Out for parameter 1 of a `MethodBuilder`, then parameter 1 of <xref:System.Reflection.Emit.MethodBuilder> must be a reference such as Type.GetType(\"System.String&\"), rather than Type.GetType(\"System.String\").","nodes":[{"content":"Some <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ParameterBuilder&gt;</ph> attributes require that you call <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A&gt;</ph> with viable parameters in order for the Microsoft intermediate language (MSIL) to work correctly at runtime.","pos":[0,251],"source":"Some <xref:System.Reflection.Emit.ParameterBuilder> attributes require that you call <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A> with viable parameters in order for the Microsoft intermediate language (MSIL) to work correctly at runtime."},{"content":"For example, if you define a <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ParameterBuilder&gt;</ph> with ParameterAttributes.Out for parameter 1 of a <ph id=\"ph2\">`MethodBuilder`</ph>, then parameter 1 of <ph id=\"ph3\">&lt;xref:System.Reflection.Emit.MethodBuilder&gt;</ph> must be a reference such as Type.GetType(\"System.String&amp;\"), rather than Type.GetType(\"System.String\").","pos":[252,561],"source":" For example, if you define a <xref:System.Reflection.Emit.ParameterBuilder> with ParameterAttributes.Out for parameter 1 of a `MethodBuilder`, then parameter 1 of <xref:System.Reflection.Emit.MethodBuilder> must be a reference such as Type.GetType(\"System.String&\"), rather than Type.GetType(\"System.String\")."}]}],"pos":[1902,2670],"yaml":true,"extradata":"MT"},{"content":"Retrieves the attributes for this parameter.","nodes":[{"pos":[0,44],"content":"Retrieves the attributes for this parameter.","nodes":[{"content":"Retrieves the attributes for this parameter.","pos":[0,44]}]}],"pos":[5382,5427],"yaml":true},{"content":"The values of the attribute correspond to the values of the <xref:System.Reflection.ParameterAttributes> enumeration.","nodes":[{"pos":[0,117],"content":"The values of the attribute correspond to the values of the <xref:System.Reflection.ParameterAttributes> enumeration.","nodes":[{"content":"The values of the attribute correspond to the values of the <ph id=\"ph1\">&lt;xref:System.Reflection.ParameterAttributes&gt;</ph> enumeration.","pos":[0,117],"source":"The values of the attribute correspond to the values of the <xref:System.Reflection.ParameterAttributes> enumeration."}]}],"pos":[5438,5556],"yaml":true,"extradata":"MT"},{"content":"Read-only. Retrieves the attributes for this parameter.","nodes":[{"pos":[0,55],"content":"Read-only. Retrieves the attributes for this parameter.","nodes":[{"content":"Read-only. Retrieves the attributes for this parameter.","pos":[0,55],"nodes":[{"content":"Read-only.","pos":[0,10]},{"content":"Retrieves the attributes for this parameter.","pos":[11,55]}]}]}],"pos":[5674,5730],"yaml":true},{"content":"Retrieves the token for this parameter.","nodes":[{"pos":[0,39],"content":"Retrieves the token for this parameter.","nodes":[{"content":"Retrieves the token for this parameter.","pos":[0,39]}]}],"pos":[6968,7008],"yaml":true},{"content":"Returns the token for this parameter.","nodes":[{"pos":[0,37],"content":"Returns the token for this parameter.","nodes":[{"content":"Returns the token for this parameter.","pos":[0,37]}]}],"pos":[7197,7235],"yaml":true},{"content":"Retrieves whether this is an input parameter.","nodes":[{"pos":[0,45],"content":"Retrieves whether this is an input parameter.","nodes":[{"content":"Retrieves whether this is an input parameter.","pos":[0,45]}]}],"pos":[8347,8393],"yaml":true},{"content":"This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.","nodes":[{"pos":[0,135],"content":"This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.","nodes":[{"content":"This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.","pos":[0,135],"nodes":[{"content":"This method depends on an optional metadata flag.","pos":[0,49]},{"content":"This flag can be inserted by compilers, but the compilers are not obligated to do so.","pos":[50,135]}]}]}],"pos":[8404,8540],"yaml":true,"extradata":"MT"},{"content":"Read-only. Retrieves whether this is an input parameter.","nodes":[{"pos":[0,56],"content":"Read-only. Retrieves whether this is an input parameter.","nodes":[{"content":"Read-only. Retrieves whether this is an input parameter.","pos":[0,56],"nodes":[{"content":"Read-only.","pos":[0,10]},{"content":"Retrieves whether this is an input parameter.","pos":[11,56]}]}]}],"pos":[8647,8704],"yaml":true},{"content":"Retrieves whether this parameter is optional.","nodes":[{"pos":[0,45],"content":"Retrieves whether this parameter is optional.","nodes":[{"content":"Retrieves whether this parameter is optional.","pos":[0,45]}]}],"pos":[9984,10030],"yaml":true},{"content":"Read-only. Specifies whether this parameter is optional.","nodes":[{"pos":[0,56],"content":"Read-only. Specifies whether this parameter is optional.","nodes":[{"content":"Read-only. Specifies whether this parameter is optional.","pos":[0,56],"nodes":[{"content":"Read-only.","pos":[0,10]},{"content":"Specifies whether this parameter is optional.","pos":[11,56]}]}]}],"pos":[10143,10200],"yaml":true},{"content":"Retrieves whether this parameter is an output parameter.","nodes":[{"pos":[0,56],"content":"Retrieves whether this parameter is an output parameter.","nodes":[{"content":"Retrieves whether this parameter is an output parameter.","pos":[0,56]}]}],"pos":[11456,11513],"yaml":true},{"content":"Read-only. Retrieves whether this parameter is an output parameter.","nodes":[{"pos":[0,67],"content":"Read-only. Retrieves whether this parameter is an output parameter.","nodes":[{"content":"Read-only. Retrieves whether this parameter is an output parameter.","pos":[0,67],"nodes":[{"content":"Read-only.","pos":[0,10]},{"content":"Retrieves whether this parameter is an output parameter.","pos":[11,67]}]}]}],"pos":[11621,11689],"yaml":true},{"content":"Retrieves the name of this parameter.","nodes":[{"pos":[0,37],"content":"Retrieves the name of this parameter.","nodes":[{"content":"Retrieves the name of this parameter.","pos":[0,37]}]}],"pos":[12934,12972],"yaml":true},{"content":"Read-only. Retrieves the name of this parameter.","nodes":[{"pos":[0,48],"content":"Read-only. Retrieves the name of this parameter.","nodes":[{"content":"Read-only. Retrieves the name of this parameter.","pos":[0,48],"nodes":[{"content":"Read-only.","pos":[0,10]},{"content":"Retrieves the name of this parameter.","pos":[11,48]}]}]}],"pos":[13088,13137],"yaml":true},{"content":"Retrieves the signature position for this parameter.","nodes":[{"pos":[0,52],"content":"Retrieves the signature position for this parameter.","nodes":[{"content":"Retrieves the signature position for this parameter.","pos":[0,52]}]}],"pos":[14405,14458],"yaml":true},{"content":"Read-only. Retrieves the signature position for this parameter.","nodes":[{"pos":[0,63],"content":"Read-only. Retrieves the signature position for this parameter.","nodes":[{"content":"Read-only. Retrieves the signature position for this parameter.","pos":[0,63],"nodes":[{"content":"Read-only.","pos":[0,10]},{"content":"Retrieves the signature position for this parameter.","pos":[11,63]}]}]}],"pos":[14574,14638],"yaml":true},{"content":"Sets the default value of the parameter.","nodes":[{"pos":[0,40],"content":"Sets the default value of the parameter.","nodes":[{"content":"Sets the default value of the parameter.","pos":[0,40]}]}],"pos":[15995,16036],"yaml":true},{"content":"`defaultValue` is restricted to the following types: `Boolean`, `SByte`, `Int16`, `Int32`, `Int64`, `Byte`, `UInt16`, `UInt32`, `UInt64`, `Single`, `Double`, `DateTime`, `Char`, `String`, and `Enum`. If the parameter type is a reference type, CLS compliance requires `defaultValue` to be `null`. However, starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], `defaultValue` can be non-null for a reference type as long as the value can be assigned to that reference type. For example, an `Int32` value can be assigned to a parameter of type <xref:System.Object>. This is not CLS-compliant, but it can be useful in interop scenarios.","nodes":[{"pos":[0,653],"content":"`defaultValue` is restricted to the following types: `Boolean`, `SByte`, `Int16`, `Int32`, `Int64`, `Byte`, `UInt16`, `UInt32`, `UInt64`, `Single`, `Double`, `DateTime`, `Char`, `String`, and `Enum`. If the parameter type is a reference type, CLS compliance requires `defaultValue` to be `null`. However, starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], `defaultValue` can be non-null for a reference type as long as the value can be assigned to that reference type. For example, an `Int32` value can be assigned to a parameter of type <xref:System.Object>. This is not CLS-compliant, but it can be useful in interop scenarios.","nodes":[{"content":"<ph id=\"ph1\">`defaultValue`</ph> is restricted to the following types: <ph id=\"ph2\">`Boolean`</ph>, <ph id=\"ph3\">`SByte`</ph>, <ph id=\"ph4\">`Int16`</ph>, <ph id=\"ph5\">`Int32`</ph>, <ph id=\"ph6\">`Int64`</ph>, <ph id=\"ph7\">`Byte`</ph>, <ph id=\"ph8\">`UInt16`</ph>, <ph id=\"ph9\">`UInt32`</ph>, <ph id=\"ph10\">`UInt64`</ph>, <ph id=\"ph11\">`Single`</ph>, <ph id=\"ph12\">`Double`</ph>, <ph id=\"ph13\">`DateTime`</ph>, <ph id=\"ph14\">`Char`</ph>, <ph id=\"ph15\">`String`</ph>, and <ph id=\"ph16\">`Enum`</ph>.","pos":[0,199],"source":"`defaultValue` is restricted to the following types: `Boolean`, `SByte`, `Int16`, `Int32`, `Int64`, `Byte`, `UInt16`, `UInt32`, `UInt64`, `Single`, `Double`, `DateTime`, `Char`, `String`, and `Enum`."},{"content":"If the parameter type is a reference type, CLS compliance requires <ph id=\"ph1\">`defaultValue`</ph> to be <ph id=\"ph2\">`null`</ph>.","pos":[200,295],"source":" If the parameter type is a reference type, CLS compliance requires `defaultValue` to be `null`."},{"content":"However, starting with the <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id=\"ph2\">`defaultValue`</ph> can be non-null for a reference type as long as the value can be assigned to that reference type.","pos":[296,492],"source":" However, starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], `defaultValue` can be non-null for a reference type as long as the value can be assigned to that reference type."},{"content":"For example, an <ph id=\"ph1\">`Int32`</ph> value can be assigned to a parameter of type <ph id=\"ph2\">&lt;xref:System.Object&gt;</ph>.","pos":[493,583],"source":" For example, an `Int32` value can be assigned to a parameter of type <xref:System.Object>."},{"content":"This is not CLS-compliant, but it can be useful in interop scenarios.","pos":[584,653]}]}],"pos":[16047,16703],"yaml":true,"extradata":"MT"},{"content":"The default value of this parameter.","nodes":[{"pos":[0,36],"content":"The default value of this parameter.","nodes":[{"content":"The default value of this parameter.","pos":[0,36]}]}],"pos":[16865,16902],"yaml":true},{"content":"The parameter is not one of the supported types.  \n  \n -or-  \n  \n The type of <code>defaultValue</code> does not match the type of the parameter.  \n  \n -or-  \n  \n The parameter is of type <xref href=\"System.Object\"></xref> or other reference type, <code>defaultValue</code> is not `null`, and the value cannot be assigned to the reference type.","nodes":[{"pos":[0,48],"content":"The parameter is not one of the supported types.","nodes":[{"content":"The parameter is not one of the supported types.","pos":[0,48]}]},{"pos":[55,59],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[66,145],"content":"The type of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">defaultValue</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not match the type of the parameter.","source":"The type of <code>defaultValue</code> does not match the type of the parameter."},{"pos":[152,156],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[163,344],"content":"The parameter is of type <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> or other reference type, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">defaultValue</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not <ph id=\"ph3\">`null`</ph>, and the value cannot be assigned to the reference type.","source":"The parameter is of type <xref href=\"System.Object\"></xref> or other reference type, <code>defaultValue</code> is not `null`, and the value cannot be assigned to the reference type."}],"pos":[17075,17432],"yaml":true},{"content":"Set a custom attribute using a custom attribute builder.","nodes":[{"pos":[0,56],"content":"Set a custom attribute using a custom attribute builder.","nodes":[{"content":"Set a custom attribute using a custom attribute builder.","pos":[0,56]}]}],"pos":[18896,18953],"yaml":true},{"content":"An instance of a helper class to define the custom attribute.","nodes":[{"pos":[0,61],"content":"An instance of a helper class to define the custom attribute.","nodes":[{"content":"An instance of a helper class to define the custom attribute.","pos":[0,61]}]}],"pos":[19187,19249],"yaml":true},{"content":"<code>con</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;con&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>con</code> is `null`."}],"pos":[19437,19465],"yaml":true},{"content":"Set a custom attribute using a specified custom attribute blob.","nodes":[{"pos":[0,63],"content":"Set a custom attribute using a specified custom attribute blob.","nodes":[{"content":"Set a custom attribute using a specified custom attribute blob.","pos":[0,63]}]}],"pos":[20938,21002],"yaml":true},{"content":"See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.","nodes":[{"pos":[0,414],"content":"See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.","nodes":[{"content":"See the metadata specification in the ECMA Partition II documentation for details on how to format <ph id=\"ph1\">`binaryAttribute`</ph>.","pos":[0,117],"source":"See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`."},{"content":"The documentation is available online; see <bpt id=\"p1\">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id=\"p2\">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.","pos":[118,414],"source":" The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site."}]}],"pos":[21013,21428],"yaml":true,"extradata":"MT"},{"content":"The constructor for the custom attribute.","nodes":[{"pos":[0,41],"content":"The constructor for the custom attribute.","nodes":[{"content":"The constructor for the custom attribute.","pos":[0,41]}]}],"pos":[21708,21750],"yaml":true},{"content":"A byte blob representing the attributes.","nodes":[{"pos":[0,40],"content":"A byte blob representing the attributes.","nodes":[{"content":"A byte blob representing the attributes.","pos":[0,40]}]}],"pos":[21821,21862],"yaml":true},{"content":"<code>con</code> or <code>binaryAttribute</code> is `null`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;con&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;binaryAttribute&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>con</code> or <code>binaryAttribute</code> is `null`."}],"pos":[22050,22110],"yaml":true},{"content":"Specifies the marshaling for this parameter.","nodes":[{"pos":[0,44],"content":"Specifies the marshaling for this parameter.","nodes":[{"content":"Specifies the marshaling for this parameter.","pos":[0,44]}]}],"pos":[23525,23570],"yaml":true},{"content":"This method should throw the following exception but currently does not:  \n  \n <xref:System.InvalidOperationException> if the containing type has been created using TypeBuilder.CreateType().","nodes":[{"pos":[0,72],"content":"This method should throw the following exception but currently does not:","nodes":[{"content":"This method should throw the following exception but currently does not:","pos":[0,72]}]},{"pos":[79,190],"content":"<xref:System.InvalidOperationException> if the containing type has been created using TypeBuilder.CreateType().","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.InvalidOperationException&gt;</ph> if the containing type has been created using TypeBuilder.CreateType().","pos":[0,111],"source":"<xref:System.InvalidOperationException> if the containing type has been created using TypeBuilder.CreateType()."}]}],"pos":[23581,23776],"yaml":true,"extradata":"MT"},{"content":"The marshaling information for this parameter.","nodes":[{"pos":[0,46],"content":"The marshaling information for this parameter.","nodes":[{"content":"The marshaling information for this parameter.","pos":[0,46]}]}],"pos":[24117,24164],"yaml":true},{"content":"<code>unmanagedMarshal</code> is `null`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;unmanagedMarshal&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>unmanagedMarshal</code> is `null`."}],"pos":[24344,24385],"yaml":true},{"content":"Maps a set of names to a corresponding set of dispatch identifiers.","nodes":[{"pos":[0,67],"content":"Maps a set of names to a corresponding set of dispatch identifiers.","nodes":[{"content":"Maps a set of names to a corresponding set of dispatch identifiers.","pos":[0,67]}]}],"pos":[26018,26086],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.","nodes":[{"pos":[0,186],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.","pos":[110,186],"source":" For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library."}]}],"pos":[26097,26284],"yaml":true,"extradata":"MT"},{"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"pos":[0,42],"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]}],"pos":[26494,26537],"yaml":true},{"content":"Passed-in array of names to be mapped.","nodes":[{"pos":[0,38],"content":"Passed-in array of names to be mapped.","nodes":[{"content":"Passed-in array of names to be mapped.","pos":[0,38]}]}],"pos":[26602,26641],"yaml":true},{"content":"Count of the names to be mapped.","nodes":[{"pos":[0,32],"content":"Count of the names to be mapped.","nodes":[{"content":"Count of the names to be mapped.","pos":[0,32]}]}],"pos":[26703,26736],"yaml":true},{"content":"The locale context in which to interpret the names.","nodes":[{"pos":[0,51],"content":"The locale context in which to interpret the names.","nodes":[{"content":"The locale context in which to interpret the names.","pos":[0,51]}]}],"pos":[26796,26848],"yaml":true},{"content":"Caller-allocated array which receives the IDs corresponding to the names.","nodes":[{"pos":[0,73],"content":"Caller-allocated array which receives the IDs corresponding to the names.","nodes":[{"content":"Caller-allocated array which receives the IDs corresponding to the names.","pos":[0,73]}]}],"pos":[26912,26986],"yaml":true},{"content":"The method is called late-bound using the COM <code>IDispatch</code> interface.","nodes":[{"pos":[0,79],"content":"The method is called late-bound using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface.","source":"The method is called late-bound using the COM <code>IDispatch</code> interface."}],"pos":[27222,27302],"yaml":true},{"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","nodes":[{"pos":[0,114],"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","nodes":[{"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","pos":[0,114]}]}],"pos":[28751,28866],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.","nodes":[{"pos":[0,184],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.","pos":[110,184],"source":" For more information about `IDispatch::GetTypeInfo`, see the MSDN Library."}]}],"pos":[28877,29062],"yaml":true,"extradata":"MT"},{"content":"The type information to return.","nodes":[{"pos":[0,31],"content":"The type information to return.","nodes":[{"content":"The type information to return.","pos":[0,31]}]}],"pos":[29240,29272],"yaml":true},{"content":"The locale identifier for the type information.","nodes":[{"pos":[0,47],"content":"The locale identifier for the type information.","nodes":[{"content":"The locale identifier for the type information.","pos":[0,47]}]}],"pos":[29332,29380],"yaml":true},{"content":"Receives a pointer to the requested type information object.","nodes":[{"pos":[0,60],"content":"Receives a pointer to the requested type information object.","nodes":[{"content":"Receives a pointer to the requested type information object.","pos":[0,60]}]}],"pos":[29443,29504],"yaml":true},{"content":"The method is called late-bound using the COM <code>IDispatch</code> interface.","nodes":[{"pos":[0,79],"content":"The method is called late-bound using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface.","source":"The method is called late-bound using the COM <code>IDispatch</code> interface."}],"pos":[29738,29818],"yaml":true},{"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","nodes":[{"pos":[0,92],"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","nodes":[{"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","pos":[0,92]}]}],"pos":[31168,31261],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.","nodes":[{"pos":[0,189],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.","pos":[110,189],"source":" For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library."}]}],"pos":[31272,31462],"yaml":true,"extradata":"MT"},{"content":"Points to a location that receives the number of type information interfaces provided by the object.","nodes":[{"pos":[0,100],"content":"Points to a location that receives the number of type information interfaces provided by the object.","nodes":[{"content":"Points to a location that receives the number of type information interfaces provided by the object.","pos":[0,100]}]}],"pos":[31624,31725],"yaml":true},{"content":"The method is called late-bound using the COM <code>IDispatch</code> interface.","nodes":[{"pos":[0,79],"content":"The method is called late-bound using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface.","source":"The method is called late-bound using the COM <code>IDispatch</code> interface."}],"pos":[31964,32044],"yaml":true},{"content":"Provides access to properties and methods exposed by an object.","nodes":[{"pos":[0,63],"content":"Provides access to properties and methods exposed by an object.","nodes":[{"content":"Provides access to properties and methods exposed by an object.","pos":[0,63]}]}],"pos":[33778,33842],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.","nodes":[{"pos":[0,179],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::Invoke`</ph>, see the MSDN Library.","pos":[110,179],"source":" For more information about `IDispatch::Invoke`, see the MSDN Library."}]}],"pos":[33853,34033],"yaml":true,"extradata":"MT"},{"content":"Identifies the member.","nodes":[{"pos":[0,22],"content":"Identifies the member.","nodes":[{"content":"Identifies the member.","pos":[0,22]}]}],"pos":[34306,34329],"yaml":true},{"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"pos":[0,42],"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]}],"pos":[34387,34430],"yaml":true},{"content":"The locale context in which to interpret arguments.","nodes":[{"pos":[0,51],"content":"The locale context in which to interpret arguments.","nodes":[{"content":"The locale context in which to interpret arguments.","pos":[0,51]}]}],"pos":[34490,34542],"yaml":true},{"content":"Flags describing the context of the call.","nodes":[{"pos":[0,41],"content":"Flags describing the context of the call.","nodes":[{"content":"Flags describing the context of the call.","pos":[0,41]}]}],"pos":[34603,34645],"yaml":true},{"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","nodes":[{"pos":[0,159],"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","nodes":[{"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","pos":[0,159]}]}],"pos":[34712,34872],"yaml":true},{"content":"Pointer to the location where the result is to be stored.","nodes":[{"pos":[0,57],"content":"Pointer to the location where the result is to be stored.","nodes":[{"content":"Pointer to the location where the result is to be stored.","pos":[0,57]}]}],"pos":[34938,34996],"yaml":true},{"content":"Pointer to a structure that contains exception information.","nodes":[{"pos":[0,59],"content":"Pointer to a structure that contains exception information.","nodes":[{"content":"Pointer to a structure that contains exception information.","pos":[0,59]}]}],"pos":[35062,35122],"yaml":true},{"content":"The index of the first argument that has an error.","nodes":[{"pos":[0,50],"content":"The index of the first argument that has an error.","nodes":[{"content":"The index of the first argument that has an error.","pos":[0,50]}]}],"pos":[35186,35237],"yaml":true},{"content":"The method is called late-bound using the COM <code>IDispatch</code> interface.","nodes":[{"pos":[0,79],"content":"The method is called late-bound using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface.","source":"The method is called late-bound using the COM <code>IDispatch</code> interface."}],"pos":[35466,35546],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.Emit.ParameterBuilder\n  commentId: T:System.Reflection.Emit.ParameterBuilder\n  id: ParameterBuilder\n  children:\n  - System.Reflection.Emit.ParameterBuilder.Attributes\n  - System.Reflection.Emit.ParameterBuilder.GetToken\n  - System.Reflection.Emit.ParameterBuilder.IsIn\n  - System.Reflection.Emit.ParameterBuilder.IsOptional\n  - System.Reflection.Emit.ParameterBuilder.IsOut\n  - System.Reflection.Emit.ParameterBuilder.Name\n  - System.Reflection.Emit.ParameterBuilder.Position\n  - System.Reflection.Emit.ParameterBuilder.SetConstant(System.Object)\n  - System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  - System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  - System.Reflection.Emit.ParameterBuilder.SetMarshal(System.Reflection.Emit.UnmanagedMarshal)\n  - System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  langs:\n  - csharp\n  name: ParameterBuilder\n  nameWithType: ParameterBuilder\n  fullName: System.Reflection.Emit.ParameterBuilder\n  type: Class\n  assemblies:\n  - System.Reflection.Emit.ILGeneration\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Creates or associates parameter information.\n  remarks: \"Parameter attributes need to consistent with the method signature. If you specify `Out` attributes for a parameter, you should ensure that the type of that method parameter is a `ByRef` type.  \\n  \\n Some <xref:System.Reflection.Emit.ParameterBuilder> attributes require that you call <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A> with viable parameters in order for the Microsoft intermediate language (MSIL) to work correctly at runtime. For example, if you define a <xref:System.Reflection.Emit.ParameterBuilder> with ParameterAttributes.Out for parameter 1 of a `MethodBuilder`, then parameter 1 of <xref:System.Reflection.Emit.MethodBuilder> must be a reference such as Type.GetType(\\\"System.String&\\\"), rather than Type.GetType(\\\"System.String\\\").\"\n  example:\n  - \"The following example demonstrates how to create a dynamic method with a parameter passed by reference using `ParameterBuilder`.  \\n  \\n [!code-cpp[System.Reflection.Emit.ParameterBuilder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.ParameterBuilder Example/CPP/source.cpp#1)]\\n [!code-csharp[System.Reflection.Emit.ParameterBuilder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.ParameterBuilder Example/CS/source.cs#1)]\\n [!code-vb[System.Reflection.Emit.ParameterBuilder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.ParameterBuilder Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class ParameterBuilder : System.Runtime.InteropServices._ParameterBuilder\n  inheritance:\n  - System.Object\n  implements:\n  - System.Runtime.InteropServices._ParameterBuilder\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ClassInterfaceAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ParameterBuilder.Attributes\n  commentId: P:System.Reflection.Emit.ParameterBuilder.Attributes\n  id: Attributes\n  parent: System.Reflection.Emit.ParameterBuilder\n  langs:\n  - csharp\n  name: Attributes\n  nameWithType: ParameterBuilder.Attributes\n  fullName: ParameterBuilder.Attributes\n  type: Property\n  assemblies:\n  - System.Reflection.Emit.ILGeneration\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Retrieves the attributes for this parameter.\n  remarks: The values of the attribute correspond to the values of the <xref:System.Reflection.ParameterAttributes> enumeration.\n  syntax:\n    content: public virtual int Attributes { get; }\n    return:\n      type: System.Int32\n      description: Read-only. Retrieves the attributes for this parameter.\n  overload: System.Reflection.Emit.ParameterBuilder.Attributes*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ParameterBuilder.GetToken\n  commentId: M:System.Reflection.Emit.ParameterBuilder.GetToken\n  id: GetToken\n  parent: System.Reflection.Emit.ParameterBuilder\n  langs:\n  - csharp\n  name: GetToken()\n  nameWithType: ParameterBuilder.GetToken()\n  fullName: ParameterBuilder.GetToken()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Retrieves the token for this parameter.\n  syntax:\n    content: public virtual System.Reflection.Emit.ParameterToken GetToken ();\n    parameters: []\n    return:\n      type: System.Reflection.Emit.ParameterToken\n      description: Returns the token for this parameter.\n  overload: System.Reflection.Emit.ParameterBuilder.GetToken*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ParameterBuilder.IsIn\n  commentId: P:System.Reflection.Emit.ParameterBuilder.IsIn\n  id: IsIn\n  parent: System.Reflection.Emit.ParameterBuilder\n  langs:\n  - csharp\n  name: IsIn\n  nameWithType: ParameterBuilder.IsIn\n  fullName: ParameterBuilder.IsIn\n  type: Property\n  assemblies:\n  - System.Reflection.Emit.ILGeneration\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Retrieves whether this is an input parameter.\n  remarks: This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.\n  syntax:\n    content: public bool IsIn { get; }\n    return:\n      type: System.Boolean\n      description: Read-only. Retrieves whether this is an input parameter.\n  overload: System.Reflection.Emit.ParameterBuilder.IsIn*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ParameterBuilder.IsOptional\n  commentId: P:System.Reflection.Emit.ParameterBuilder.IsOptional\n  id: IsOptional\n  parent: System.Reflection.Emit.ParameterBuilder\n  langs:\n  - csharp\n  name: IsOptional\n  nameWithType: ParameterBuilder.IsOptional\n  fullName: ParameterBuilder.IsOptional\n  type: Property\n  assemblies:\n  - System.Reflection.Emit.ILGeneration\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Retrieves whether this parameter is optional.\n  syntax:\n    content: public bool IsOptional { get; }\n    return:\n      type: System.Boolean\n      description: Read-only. Specifies whether this parameter is optional.\n  overload: System.Reflection.Emit.ParameterBuilder.IsOptional*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ParameterBuilder.IsOut\n  commentId: P:System.Reflection.Emit.ParameterBuilder.IsOut\n  id: IsOut\n  parent: System.Reflection.Emit.ParameterBuilder\n  langs:\n  - csharp\n  name: IsOut\n  nameWithType: ParameterBuilder.IsOut\n  fullName: ParameterBuilder.IsOut\n  type: Property\n  assemblies:\n  - System.Reflection.Emit.ILGeneration\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Retrieves whether this parameter is an output parameter.\n  syntax:\n    content: public bool IsOut { get; }\n    return:\n      type: System.Boolean\n      description: Read-only. Retrieves whether this parameter is an output parameter.\n  overload: System.Reflection.Emit.ParameterBuilder.IsOut*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ParameterBuilder.Name\n  commentId: P:System.Reflection.Emit.ParameterBuilder.Name\n  id: Name\n  parent: System.Reflection.Emit.ParameterBuilder\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ParameterBuilder.Name\n  fullName: ParameterBuilder.Name\n  type: Property\n  assemblies:\n  - System.Reflection.Emit.ILGeneration\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Retrieves the name of this parameter.\n  syntax:\n    content: public virtual string Name { get; }\n    return:\n      type: System.String\n      description: Read-only. Retrieves the name of this parameter.\n  overload: System.Reflection.Emit.ParameterBuilder.Name*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ParameterBuilder.Position\n  commentId: P:System.Reflection.Emit.ParameterBuilder.Position\n  id: Position\n  parent: System.Reflection.Emit.ParameterBuilder\n  langs:\n  - csharp\n  name: Position\n  nameWithType: ParameterBuilder.Position\n  fullName: ParameterBuilder.Position\n  type: Property\n  assemblies:\n  - System.Reflection.Emit.ILGeneration\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Retrieves the signature position for this parameter.\n  syntax:\n    content: public virtual int Position { get; }\n    return:\n      type: System.Int32\n      description: Read-only. Retrieves the signature position for this parameter.\n  overload: System.Reflection.Emit.ParameterBuilder.Position*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ParameterBuilder.SetConstant(System.Object)\n  commentId: M:System.Reflection.Emit.ParameterBuilder.SetConstant(System.Object)\n  id: SetConstant(System.Object)\n  parent: System.Reflection.Emit.ParameterBuilder\n  langs:\n  - csharp\n  name: SetConstant(Object)\n  nameWithType: ParameterBuilder.SetConstant(Object)\n  fullName: ParameterBuilder.SetConstant(Object)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit.ILGeneration\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Sets the default value of the parameter.\n  remarks: '`defaultValue` is restricted to the following types: `Boolean`, `SByte`, `Int16`, `Int32`, `Int64`, `Byte`, `UInt16`, `UInt32`, `UInt64`, `Single`, `Double`, `DateTime`, `Char`, `String`, and `Enum`. If the parameter type is a reference type, CLS compliance requires `defaultValue` to be `null`. However, starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], `defaultValue` can be non-null for a reference type as long as the value can be assigned to that reference type. For example, an `Int32` value can be assigned to a parameter of type <xref:System.Object>. This is not CLS-compliant, but it can be useful in interop scenarios.'\n  syntax:\n    content: public virtual void SetConstant (object defaultValue);\n    parameters:\n    - id: defaultValue\n      type: System.Object\n      description: The default value of this parameter.\n  overload: System.Reflection.Emit.ParameterBuilder.SetConstant*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The parameter is not one of the supported types.  \\n  \\n -or-  \\n  \\n The type of <code>defaultValue</code> does not match the type of the parameter.  \\n  \\n -or-  \\n  \\n The parameter is of type <xref href=\\\"System.Object\\\"></xref> or other reference type, <code>defaultValue</code> is not `null`, and the value cannot be assigned to the reference type.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  commentId: M:System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  parent: System.Reflection.Emit.ParameterBuilder\n  langs:\n  - csharp\n  name: SetCustomAttribute(CustomAttributeBuilder)\n  nameWithType: ParameterBuilder.SetCustomAttribute(CustomAttributeBuilder)\n  fullName: ParameterBuilder.SetCustomAttribute(CustomAttributeBuilder)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit.ILGeneration\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Set a custom attribute using a custom attribute builder.\n  syntax:\n    content: public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);\n    parameters:\n    - id: customBuilder\n      type: System.Reflection.Emit.CustomAttributeBuilder\n      description: An instance of a helper class to define the custom attribute.\n  overload: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>con</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  commentId: M:System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  parent: System.Reflection.Emit.ParameterBuilder\n  langs:\n  - csharp\n  name: SetCustomAttribute(ConstructorInfo, Byte[])\n  nameWithType: ParameterBuilder.SetCustomAttribute(ConstructorInfo, Byte[])\n  fullName: ParameterBuilder.SetCustomAttribute(ConstructorInfo, Byte[])\n  type: Method\n  assemblies:\n  - System.Reflection.Emit.ILGeneration\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Set a custom attribute using a specified custom attribute blob.\n  remarks: See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);\n    parameters:\n    - id: con\n      type: System.Reflection.ConstructorInfo\n      description: The constructor for the custom attribute.\n    - id: binaryAttribute\n      type: System.Byte[]\n      description: A byte blob representing the attributes.\n  overload: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>con</code> or <code>binaryAttribute</code> is `null`.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ParameterBuilder.SetMarshal(System.Reflection.Emit.UnmanagedMarshal)\n  commentId: M:System.Reflection.Emit.ParameterBuilder.SetMarshal(System.Reflection.Emit.UnmanagedMarshal)\n  id: SetMarshal(System.Reflection.Emit.UnmanagedMarshal)\n  parent: System.Reflection.Emit.ParameterBuilder\n  langs:\n  - csharp\n  name: SetMarshal(UnmanagedMarshal)\n  nameWithType: ParameterBuilder.SetMarshal(UnmanagedMarshal)\n  fullName: ParameterBuilder.SetMarshal(UnmanagedMarshal)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Specifies the marshaling for this parameter.\n  remarks: \"This method should throw the following exception but currently does not:  \\n  \\n <xref:System.InvalidOperationException> if the containing type has been created using TypeBuilder.CreateType().\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"An alternate API is available: Emit the MarshalAs custom attribute instead.\")]\n\n      public virtual void SetMarshal (System.Reflection.Emit.UnmanagedMarshal unmanagedMarshal);\n    parameters:\n    - id: unmanagedMarshal\n      type: System.Reflection.Emit.UnmanagedMarshal\n      description: The marshaling information for this parameter.\n  overload: System.Reflection.Emit.ParameterBuilder.SetMarshal*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>unmanagedMarshal</code> is `null`.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  commentId: M:System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_ParameterBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.Emit.ParameterBuilder\n  langs:\n  - csharp\n  name: _ParameterBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: ParameterBuilder._ParameterBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: ParameterBuilder._ParameterBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Maps a set of names to a corresponding set of dispatch identifiers.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.\n  syntax:\n    content: void _ParameterBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);\n    parameters:\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: rgszNames\n      type: System.IntPtr\n      description: Passed-in array of names to be mapped.\n    - id: cNames\n      type: System.UInt32\n      description: Count of the names to be mapped.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret the names.\n    - id: rgDispId\n      type: System.IntPtr\n      description: Caller-allocated array which receives the IDs corresponding to the names.\n  overload: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetIDsOfNames*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: The method is called late-bound using the COM <code>IDispatch</code> interface.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  commentId: M:System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.Emit.ParameterBuilder\n  langs:\n  - csharp\n  name: _ParameterBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: ParameterBuilder._ParameterBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: ParameterBuilder._ParameterBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Retrieves the type information for an object, which can then be used to get the type information for an interface.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.\n  syntax:\n    content: void _ParameterBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);\n    parameters:\n    - id: iTInfo\n      type: System.UInt32\n      description: The type information to return.\n    - id: lcid\n      type: System.UInt32\n      description: The locale identifier for the type information.\n    - id: ppTInfo\n      type: System.IntPtr\n      description: Receives a pointer to the requested type information object.\n  overload: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfo*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: The method is called late-bound using the COM <code>IDispatch</code> interface.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfoCount(System.UInt32@)\n  commentId: M:System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfoCount(System.UInt32@)\n  id: System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfoCount(System.UInt32@)\n  isEii: true\n  parent: System.Reflection.Emit.ParameterBuilder\n  langs:\n  - csharp\n  name: _ParameterBuilder.GetTypeInfoCount(UInt32)\n  nameWithType: ParameterBuilder._ParameterBuilder.GetTypeInfoCount(UInt32)\n  fullName: ParameterBuilder._ParameterBuilder.GetTypeInfoCount(UInt32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Retrieves the number of type information interfaces that an object provides (either 0 or 1).\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.\n  syntax:\n    content: void _ParameterBuilder.GetTypeInfoCount (out uint pcTInfo);\n    parameters:\n    - id: pcTInfo\n      type: System.UInt32\n      description: Points to a location that receives the number of type information interfaces provided by the object.\n  overload: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfoCount*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: The method is called late-bound using the COM <code>IDispatch</code> interface.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  commentId: M:System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  id: System#Runtime#InteropServices#_ParameterBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.Emit.ParameterBuilder\n  langs:\n  - csharp\n  name: _ParameterBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: ParameterBuilder._ParameterBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: ParameterBuilder._ParameterBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Provides access to properties and methods exposed by an object.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.\n  syntax:\n    content: void _ParameterBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);\n    parameters:\n    - id: dispIdMember\n      type: System.UInt32\n      description: Identifies the member.\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret arguments.\n    - id: wFlags\n      type: System.Int16\n      description: Flags describing the context of the call.\n    - id: pDispParams\n      type: System.IntPtr\n      description: Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.\n    - id: pVarResult\n      type: System.IntPtr\n      description: Pointer to the location where the result is to be stored.\n    - id: pExcepInfo\n      type: System.IntPtr\n      description: Pointer to a structure that contains exception information.\n    - id: puArgErr\n      type: System.IntPtr\n      description: The index of the first argument that has an error.\n  overload: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#Invoke*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: The method is called late-bound using the COM <code>IDispatch</code> interface.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.NotImplementedException\n  parent: System\n  isExternal: false\n  name: NotImplementedException\n  nameWithType: NotImplementedException\n  fullName: System.NotImplementedException\n- uid: System.Reflection.Emit.ParameterBuilder.Attributes\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: Attributes\n  nameWithType: ParameterBuilder.Attributes\n  fullName: ParameterBuilder.Attributes\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Emit.ParameterBuilder.GetToken\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: GetToken()\n  nameWithType: ParameterBuilder.GetToken()\n  fullName: ParameterBuilder.GetToken()\n- uid: System.Reflection.Emit.ParameterToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: ParameterToken\n  nameWithType: ParameterToken\n  fullName: System.Reflection.Emit.ParameterToken\n- uid: System.Reflection.Emit.ParameterBuilder.IsIn\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: IsIn\n  nameWithType: ParameterBuilder.IsIn\n  fullName: ParameterBuilder.IsIn\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.ParameterBuilder.IsOptional\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: IsOptional\n  nameWithType: ParameterBuilder.IsOptional\n  fullName: ParameterBuilder.IsOptional\n- uid: System.Reflection.Emit.ParameterBuilder.IsOut\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: IsOut\n  nameWithType: ParameterBuilder.IsOut\n  fullName: ParameterBuilder.IsOut\n- uid: System.Reflection.Emit.ParameterBuilder.Name\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: Name\n  nameWithType: ParameterBuilder.Name\n  fullName: ParameterBuilder.Name\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Emit.ParameterBuilder.Position\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: Position\n  nameWithType: ParameterBuilder.Position\n  fullName: ParameterBuilder.Position\n- uid: System.Reflection.Emit.ParameterBuilder.SetConstant(System.Object)\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: SetConstant(Object)\n  nameWithType: ParameterBuilder.SetConstant(Object)\n  fullName: ParameterBuilder.SetConstant(Object)\n- uid: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: SetCustomAttribute(CustomAttributeBuilder)\n  nameWithType: ParameterBuilder.SetCustomAttribute(CustomAttributeBuilder)\n  fullName: ParameterBuilder.SetCustomAttribute(CustomAttributeBuilder)\n- uid: System.Reflection.Emit.CustomAttributeBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: CustomAttributeBuilder\n  nameWithType: CustomAttributeBuilder\n  fullName: System.Reflection.Emit.CustomAttributeBuilder\n- uid: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: SetCustomAttribute(ConstructorInfo, Byte[])\n  nameWithType: ParameterBuilder.SetCustomAttribute(ConstructorInfo, Byte[])\n  fullName: ParameterBuilder.SetCustomAttribute(ConstructorInfo, Byte[])\n- uid: System.Reflection.ConstructorInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ConstructorInfo\n  nameWithType: ConstructorInfo\n  fullName: System.Reflection.ConstructorInfo\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.Emit.ParameterBuilder.SetMarshal(System.Reflection.Emit.UnmanagedMarshal)\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: SetMarshal(UnmanagedMarshal)\n  nameWithType: ParameterBuilder.SetMarshal(UnmanagedMarshal)\n  fullName: ParameterBuilder.SetMarshal(UnmanagedMarshal)\n- uid: System.Reflection.Emit.UnmanagedMarshal\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: UnmanagedMarshal\n  nameWithType: UnmanagedMarshal\n  fullName: System.Reflection.Emit.UnmanagedMarshal\n- uid: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: _ParameterBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: ParameterBuilder._ParameterBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: ParameterBuilder._ParameterBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: _ParameterBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: ParameterBuilder._ParameterBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: ParameterBuilder._ParameterBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: _ParameterBuilder.GetTypeInfoCount(UInt32)\n  nameWithType: ParameterBuilder._ParameterBuilder.GetTypeInfoCount(UInt32)\n  fullName: ParameterBuilder._ParameterBuilder.GetTypeInfoCount(UInt32)\n- uid: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: _ParameterBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: ParameterBuilder._ParameterBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: ParameterBuilder._ParameterBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Reflection.Emit.ParameterBuilder.Attributes*\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: Attributes\n  nameWithType: ParameterBuilder.Attributes\n  fullName: ParameterBuilder.Attributes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n- uid: System.Reflection.Emit.ParameterBuilder.GetToken*\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: GetToken\n  nameWithType: ParameterBuilder.GetToken\n  fullName: ParameterBuilder.GetToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n- uid: System.Reflection.Emit.ParameterBuilder.IsIn*\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: IsIn\n  nameWithType: ParameterBuilder.IsIn\n  fullName: ParameterBuilder.IsIn\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n- uid: System.Reflection.Emit.ParameterBuilder.IsOptional*\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: IsOptional\n  nameWithType: ParameterBuilder.IsOptional\n  fullName: ParameterBuilder.IsOptional\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n- uid: System.Reflection.Emit.ParameterBuilder.IsOut*\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: IsOut\n  nameWithType: ParameterBuilder.IsOut\n  fullName: ParameterBuilder.IsOut\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n- uid: System.Reflection.Emit.ParameterBuilder.Name*\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: Name\n  nameWithType: ParameterBuilder.Name\n  fullName: ParameterBuilder.Name\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n- uid: System.Reflection.Emit.ParameterBuilder.Position*\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: Position\n  nameWithType: ParameterBuilder.Position\n  fullName: ParameterBuilder.Position\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n- uid: System.Reflection.Emit.ParameterBuilder.SetConstant*\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: SetConstant\n  nameWithType: ParameterBuilder.SetConstant\n  fullName: ParameterBuilder.SetConstant\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n- uid: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute*\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: SetCustomAttribute\n  nameWithType: ParameterBuilder.SetCustomAttribute\n  fullName: ParameterBuilder.SetCustomAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n- uid: System.Reflection.Emit.ParameterBuilder.SetMarshal*\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: SetMarshal\n  nameWithType: ParameterBuilder.SetMarshal\n  fullName: ParameterBuilder.SetMarshal\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n- uid: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetIDsOfNames*\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: System.Runtime.InteropServices._ParameterBuilder.GetIDsOfNames\n  nameWithType: ParameterBuilder.System.Runtime.InteropServices._ParameterBuilder.GetIDsOfNames\n  fullName: ParameterBuilder.System.Runtime.InteropServices._ParameterBuilder.GetIDsOfNames\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n- uid: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfo*\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: System.Runtime.InteropServices._ParameterBuilder.GetTypeInfo\n  nameWithType: ParameterBuilder.System.Runtime.InteropServices._ParameterBuilder.GetTypeInfo\n  fullName: ParameterBuilder.System.Runtime.InteropServices._ParameterBuilder.GetTypeInfo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n- uid: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfoCount*\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: System.Runtime.InteropServices._ParameterBuilder.GetTypeInfoCount\n  nameWithType: ParameterBuilder.System.Runtime.InteropServices._ParameterBuilder.GetTypeInfoCount\n  fullName: ParameterBuilder.System.Runtime.InteropServices._ParameterBuilder.GetTypeInfoCount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n- uid: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#Invoke*\n  parent: System.Reflection.Emit.ParameterBuilder\n  isExternal: false\n  name: System.Runtime.InteropServices._ParameterBuilder.Invoke\n  nameWithType: ParameterBuilder.System.Runtime.InteropServices._ParameterBuilder.Invoke\n  fullName: ParameterBuilder.System.Runtime.InteropServices._ParameterBuilder.Invoke\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ParameterBuilder.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Runtime.InteropServices._ParameterBuilder\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: _ParameterBuilder\n  nameWithType: _ParameterBuilder\n  fullName: System.Runtime.InteropServices._ParameterBuilder\n"}