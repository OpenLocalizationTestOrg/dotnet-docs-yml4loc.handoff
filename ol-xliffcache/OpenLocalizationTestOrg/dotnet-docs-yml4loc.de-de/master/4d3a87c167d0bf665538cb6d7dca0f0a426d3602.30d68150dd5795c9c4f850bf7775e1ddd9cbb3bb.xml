{"nodes":[{"content":"Creates a Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature.","nodes":[{"pos":[0,104],"content":"Creates a Digital Signature Algorithm (<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;&lt;/xref&gt;</ph>) signature.","source":"Creates a Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature."}],"pos":[962,1067],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.DSASignatureFormatter\"></xref> class.","nodes":[{"pos":[0,112],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DSASignatureFormatter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.DSASignatureFormatter\"></xref> class."}],"pos":[3739,3852],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.DSASignatureFormatter\"></xref> class with the specified key.","nodes":[{"pos":[0,135],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DSASignatureFormatter\"&gt;&lt;/xref&gt;</ph> class with the specified key.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.DSASignatureFormatter\"></xref> class with the specified key."}],"pos":[5508,5644],"yaml":true},{"content":"The instance of the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) that holds the key.","nodes":[{"pos":[0,123],"content":"The instance of the Digital Signature Algorithm (<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;&lt;/xref&gt;</ph>) that holds the key.","source":"The instance of the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) that holds the key."}],"pos":[6460,6584],"yaml":true},{"content":"<code>key</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>key</code> is `null`."}],"pos":[6770,6798],"yaml":true},{"content":"Creates the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) PKCS #1 signature for the specified data.","nodes":[{"pos":[0,137],"content":"Creates the Digital Signature Algorithm (<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;&lt;/xref&gt;</ph>) PKCS #1 signature for the specified data.","source":"Creates the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) PKCS #1 signature for the specified data."}],"pos":[8153,8293],"yaml":true},{"content":"The resulting signature data can be verified by using <xref:System.Security.Cryptography.DSASignatureDeformatter.VerifySignature%2A>.","nodes":[{"pos":[0,133],"content":"The resulting signature data can be verified by using <xref:System.Security.Cryptography.DSASignatureDeformatter.VerifySignature%2A>.","nodes":[{"content":"The resulting signature data can be verified by using <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.DSASignatureDeformatter.VerifySignature%2A&gt;</ph>.","pos":[0,133],"source":"The resulting signature data can be verified by using <xref:System.Security.Cryptography.DSASignatureDeformatter.VerifySignature%2A>."}]}],"pos":[8304,8438],"yaml":true,"extradata":"MT"},{"content":"The data to be signed.","nodes":[{"pos":[0,22],"content":"The data to be signed.","nodes":[{"content":"The data to be signed.","pos":[0,22]}]}],"pos":[9181,9204],"yaml":true},{"content":"The digital signature for the specified data.","nodes":[{"pos":[0,45],"content":"The digital signature for the specified data.","nodes":[{"content":"The digital signature for the specified data.","pos":[0,45]}]}],"pos":[9261,9307],"yaml":true},{"content":"<code>rgbHash</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;rgbHash&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>rgbHash</code> is `null`."}],"pos":[9503,9535],"yaml":true},{"content":"The OID is `null`.  \n  \n -or-  \n  \n The DSA key is `null`.","nodes":[{"pos":[0,18],"content":"The OID is <ph id=\"ph1\">`null`</ph>.","source":"The OID is `null`."},{"pos":[25,29],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[36,58],"content":"The DSA key is <ph id=\"ph1\">`null`</ph>.","source":"The DSA key is `null`."}],"pos":[9721,9786],"yaml":true},{"content":"Specifies the hash algorithm for the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature formatter.","nodes":[{"pos":[0,141],"content":"Specifies the hash algorithm for the Digital Signature Algorithm (<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;&lt;/xref&gt;</ph>) signature formatter.","source":"Specifies the hash algorithm for the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature formatter."}],"pos":[11147,11289],"yaml":true},{"content":"The name of the hash algorithm to use for the signature formatter.","nodes":[{"pos":[0,66],"content":"The name of the hash algorithm to use for the signature formatter.","nodes":[{"content":"The name of the hash algorithm to use for the signature formatter.","pos":[0,66]}]}],"pos":[12045,12112],"yaml":true},{"content":"The <code>strName</code> parameter does not map to the <xref href=\"System.Security.Cryptography.SHA1\"></xref> hash algorithm.","nodes":[{"pos":[0,125],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">strName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter does not map to the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.SHA1\"&gt;&lt;/xref&gt;</ph> hash algorithm.","source":"The <code>strName</code> parameter does not map to the <xref href=\"System.Security.Cryptography.SHA1\"></xref> hash algorithm."}],"pos":[12393,12519],"yaml":true},{"content":"Specifies the key to be used for the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature formatter.","nodes":[{"pos":[0,141],"content":"Specifies the key to be used for the Digital Signature Algorithm (<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;&lt;/xref&gt;</ph>) signature formatter.","source":"Specifies the key to be used for the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature formatter."}],"pos":[13964,14106],"yaml":true},{"content":"The instance of <xref href=\"System.Security.Cryptography.DSA\"></xref> that holds the key.","nodes":[{"pos":[0,89],"content":"The instance of <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DSA\"&gt;&lt;/xref&gt;</ph> that holds the key.","source":"The instance of <xref href=\"System.Security.Cryptography.DSA\"></xref> that holds the key."}],"pos":[14323,14413],"yaml":true},{"content":"<code>key</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;key&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>key</code> is `null`."}],"pos":[14600,14628],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.DSASignatureFormatter\n  commentId: T:System.Security.Cryptography.DSASignatureFormatter\n  id: DSASignatureFormatter\n  children:\n  - System.Security.Cryptography.DSASignatureFormatter.#ctor\n  - System.Security.Cryptography.DSASignatureFormatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  - System.Security.Cryptography.DSASignatureFormatter.CreateSignature(System.Byte[])\n  - System.Security.Cryptography.DSASignatureFormatter.SetHashAlgorithm(System.String)\n  - System.Security.Cryptography.DSASignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  langs:\n  - csharp\n  name: DSASignatureFormatter\n  nameWithType: DSASignatureFormatter\n  fullName: System.Security.Cryptography.DSASignatureFormatter\n  type: Class\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Creates a Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature.\n  remarks: ''\n  example:\n  - >-\n    [!code-cpp[System.Security.Cryptography.DSASignatureFormatter#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureFormatter/CPP/sample.cpp#1)]\n     [!code-csharp[System.Security.Cryptography.DSASignatureFormatter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureFormatter/CS/sample.cs#1)]\n     [!code-vb[System.Security.Cryptography.DSASignatureFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureFormatter/VB/sample.vb#1)]\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class DSASignatureFormatter : System.Security.Cryptography.AsymmetricSignatureFormatter\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.AsymmetricSignatureFormatter\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Security.Cryptography.HashAlgorithm)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureFormatter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DSASignatureFormatter.#ctor\n  commentId: M:System.Security.Cryptography.DSASignatureFormatter.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  langs:\n  - csharp\n  name: DSASignatureFormatter()\n  nameWithType: DSASignatureFormatter.DSASignatureFormatter()\n  fullName: DSASignatureFormatter.DSASignatureFormatter()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.DSASignatureFormatter\"></xref> class.\n  syntax:\n    content: public DSASignatureFormatter ();\n    parameters: []\n  overload: System.Security.Cryptography.DSASignatureFormatter.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureFormatter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DSASignatureFormatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  commentId: M:System.Security.Cryptography.DSASignatureFormatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  id: '#ctor(System.Security.Cryptography.AsymmetricAlgorithm)'\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  langs:\n  - csharp\n  name: DSASignatureFormatter(AsymmetricAlgorithm)\n  nameWithType: DSASignatureFormatter.DSASignatureFormatter(AsymmetricAlgorithm)\n  fullName: DSASignatureFormatter.DSASignatureFormatter(AsymmetricAlgorithm)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.DSASignatureFormatter\"></xref> class with the specified key.\n  remarks: ''\n  example:\n  - >-\n    [!code-cpp[System.Security.Cryptography.DSASignatureFormatter#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureFormatter/CPP/sample.cpp#1)]\n     [!code-csharp[System.Security.Cryptography.DSASignatureFormatter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureFormatter/CS/sample.cs#1)]\n     [!code-vb[System.Security.Cryptography.DSASignatureFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureFormatter/VB/sample.vb#1)]\n  syntax:\n    content: public DSASignatureFormatter (System.Security.Cryptography.AsymmetricAlgorithm key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: The instance of the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) that holds the key.\n  overload: System.Security.Cryptography.DSASignatureFormatter.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureFormatter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DSASignatureFormatter.CreateSignature(System.Byte[])\n  commentId: M:System.Security.Cryptography.DSASignatureFormatter.CreateSignature(System.Byte[])\n  id: CreateSignature(System.Byte[])\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  langs:\n  - csharp\n  name: CreateSignature(Byte[])\n  nameWithType: DSASignatureFormatter.CreateSignature(Byte[])\n  fullName: DSASignatureFormatter.CreateSignature(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: 'Creates the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) PKCS #1 signature for the specified data.'\n  remarks: The resulting signature data can be verified by using <xref:System.Security.Cryptography.DSASignatureDeformatter.VerifySignature%2A>.\n  example:\n  - >-\n    [!code-cpp[System.Security.Cryptography.DSASignatureFormatter#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureFormatter/CPP/sample.cpp#1)]\n     [!code-csharp[System.Security.Cryptography.DSASignatureFormatter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureFormatter/CS/sample.cs#1)]\n     [!code-vb[System.Security.Cryptography.DSASignatureFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureFormatter/VB/sample.vb#1)]\n  syntax:\n    content: public override byte[] CreateSignature (byte[] rgbHash);\n    parameters:\n    - id: rgbHash\n      type: System.Byte[]\n      description: The data to be signed.\n    return:\n      type: System.Byte[]\n      description: The digital signature for the specified data.\n  overload: System.Security.Cryptography.DSASignatureFormatter.CreateSignature*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>rgbHash</code> is `null`.\n  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException\n    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException\n    description: \"The OID is `null`.  \\n  \\n -or-  \\n  \\n The DSA key is `null`.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureFormatter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DSASignatureFormatter.SetHashAlgorithm(System.String)\n  commentId: M:System.Security.Cryptography.DSASignatureFormatter.SetHashAlgorithm(System.String)\n  id: SetHashAlgorithm(System.String)\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  langs:\n  - csharp\n  name: SetHashAlgorithm(String)\n  nameWithType: DSASignatureFormatter.SetHashAlgorithm(String)\n  fullName: DSASignatureFormatter.SetHashAlgorithm(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Specifies the hash algorithm for the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature formatter.\n  remarks: ''\n  example:\n  - >-\n    [!code-cpp[System.Security.Cryptography.DSASignatureFormatter#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureFormatter/CPP/sample.cpp#1)]\n     [!code-csharp[System.Security.Cryptography.DSASignatureFormatter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureFormatter/CS/sample.cs#1)]\n     [!code-vb[System.Security.Cryptography.DSASignatureFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureFormatter/VB/sample.vb#1)]\n  syntax:\n    content: public override void SetHashAlgorithm (string strName);\n    parameters:\n    - id: strName\n      type: System.String\n      description: The name of the hash algorithm to use for the signature formatter.\n  overload: System.Security.Cryptography.DSASignatureFormatter.SetHashAlgorithm*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException\n    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException\n    description: The <code>strName</code> parameter does not map to the <xref href=\"System.Security.Cryptography.SHA1\"></xref> hash algorithm.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureFormatter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DSASignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  commentId: M:System.Security.Cryptography.DSASignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  id: SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  langs:\n  - csharp\n  name: SetKey(AsymmetricAlgorithm)\n  nameWithType: DSASignatureFormatter.SetKey(AsymmetricAlgorithm)\n  fullName: DSASignatureFormatter.SetKey(AsymmetricAlgorithm)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Specifies the key to be used for the Digital Signature Algorithm (<xref href=\"System.Security.Cryptography.DSA\"></xref>) signature formatter.\n  syntax:\n    content: public override void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: The instance of <xref href=\"System.Security.Cryptography.DSA\"></xref> that holds the key.\n  overload: System.Security.Cryptography.DSASignatureFormatter.SetKey*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>key</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureFormatter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Cryptography.AsymmetricSignatureFormatter\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricSignatureFormatter\n  nameWithType: AsymmetricSignatureFormatter\n  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Security.Cryptography.CryptographicUnexpectedOperationException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicUnexpectedOperationException\n  nameWithType: CryptographicUnexpectedOperationException\n  fullName: System.Security.Cryptography.CryptographicUnexpectedOperationException\n- uid: System.Security.Cryptography.DSASignatureFormatter.#ctor\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  isExternal: false\n  name: DSASignatureFormatter()\n  nameWithType: DSASignatureFormatter.DSASignatureFormatter()\n  fullName: DSASignatureFormatter.DSASignatureFormatter()\n- uid: System.Security.Cryptography.DSASignatureFormatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  isExternal: false\n  name: DSASignatureFormatter(AsymmetricAlgorithm)\n  nameWithType: DSASignatureFormatter.DSASignatureFormatter(AsymmetricAlgorithm)\n  fullName: DSASignatureFormatter.DSASignatureFormatter(AsymmetricAlgorithm)\n- uid: System.Security.Cryptography.AsymmetricAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricAlgorithm\n  nameWithType: AsymmetricAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm\n- uid: System.Security.Cryptography.DSASignatureFormatter.CreateSignature(System.Byte[])\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  isExternal: false\n  name: CreateSignature(Byte[])\n  nameWithType: DSASignatureFormatter.CreateSignature(Byte[])\n  fullName: DSASignatureFormatter.CreateSignature(Byte[])\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.DSASignatureFormatter.SetHashAlgorithm(System.String)\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  isExternal: false\n  name: SetHashAlgorithm(String)\n  nameWithType: DSASignatureFormatter.SetHashAlgorithm(String)\n  fullName: DSASignatureFormatter.SetHashAlgorithm(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.DSASignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  isExternal: false\n  name: SetKey(AsymmetricAlgorithm)\n  nameWithType: DSASignatureFormatter.SetKey(AsymmetricAlgorithm)\n  fullName: DSASignatureFormatter.SetKey(AsymmetricAlgorithm)\n- uid: System.Security.Cryptography.DSASignatureFormatter.#ctor*\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  isExternal: false\n  name: DSASignatureFormatter\n  nameWithType: DSASignatureFormatter.DSASignatureFormatter\n  fullName: DSASignatureFormatter.DSASignatureFormatter\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureFormatter.xml\n- uid: System.Security.Cryptography.DSASignatureFormatter.CreateSignature*\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  isExternal: false\n  name: CreateSignature\n  nameWithType: DSASignatureFormatter.CreateSignature\n  fullName: DSASignatureFormatter.CreateSignature\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureFormatter.xml\n- uid: System.Security.Cryptography.DSASignatureFormatter.SetHashAlgorithm*\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  isExternal: false\n  name: SetHashAlgorithm\n  nameWithType: DSASignatureFormatter.SetHashAlgorithm\n  fullName: DSASignatureFormatter.SetHashAlgorithm\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureFormatter.xml\n- uid: System.Security.Cryptography.DSASignatureFormatter.SetKey*\n  parent: System.Security.Cryptography.DSASignatureFormatter\n  isExternal: false\n  name: SetKey\n  nameWithType: DSASignatureFormatter.SetKey\n  fullName: DSASignatureFormatter.SetKey\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureFormatter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Security.Cryptography.HashAlgorithm)\n  parent: System.Security.Cryptography.AsymmetricSignatureFormatter\n  isExternal: false\n  name: CreateSignature(HashAlgorithm)\n  nameWithType: AsymmetricSignatureFormatter.CreateSignature(HashAlgorithm)\n  fullName: AsymmetricSignatureFormatter.CreateSignature(HashAlgorithm)\n"}