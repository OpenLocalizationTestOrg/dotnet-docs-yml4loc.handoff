{"nodes":[{"content":"Creates and caches a bitmap representation of a <xref href=\"System.Windows.UIElement\"></xref>.","nodes":[{"pos":[0,94],"content":"Creates and caches a bitmap representation of a <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph>.","source":"Creates and caches a bitmap representation of a <xref href=\"System.Windows.UIElement\"></xref>."}],"pos":[962,1057],"yaml":true},{"content":"Use the <xref:System.Windows.Media.BitmapCache> class to improve rendering performance of a complex <xref:System.Windows.UIElement>. Create a <xref:System.Windows.Media.BitmapCache> and assign it to the <xref:System.Windows.UIElement.CacheMode%2A> property of a <xref:System.Windows.UIElement> to cache the element and its subtree as a bitmap in video memory. This is useful when you need to animate, translate, or scale a <xref:System.Windows.UIElement> as quickly as possible. This approach enables a tradeoff between performance and visual quality while content is cached.  \n  \n Use the <xref:System.Windows.Media.BitmapCacheBrush> class to efficiently reuse a cached element.  \n  \n Set the <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> property to scale the bitmap cache. This is useful if an element will be zoomed, and you want the element to render more clearly than it would if the cache were simply generated at the element’s native resolution.  \n  \n Set the <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> property when the cache displays content that requires pixel-alignment to render correctly, such as ClearType text. This property is ignored by the <xref:System.Windows.Media.BitmapCacheBrush> and <xref:System.Windows.Media.Media3D.Viewport2DVisual3D> classes.  \n  \n Caching a control does not affect mouse-over behavior, so mouse-over hit testing operates as if it the bitmap were a live control.  \n  \n Cache regeneration occurs only when the structure of the <xref:System.Windows.UIElement> or its subtree changes, or when the <xref:System.Windows.Media.CacheMode> settings change. Setting the <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> or <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> properties causes cache regeneration. Changes to the parent visual tree of the cached <xref:System.Windows.UIElement>, such as transforms, scales, opacities, and effects, do not affect the cache.  \n  \n The cache functions when hardware acceleration is not available. In this case, the bitmap is rendered in software, and the maximum bitmap dimensions are 2048 x 2048.  \n  \n> [!NOTE]\n>  <xref:System.Windows.Media.RenderOptions> and <xref:System.Windows.Media.TextOptions> do not propagate through a cached element. You may have to set these options again in child elements below the cache.","nodes":[{"pos":[0,575],"content":"Use the <xref:System.Windows.Media.BitmapCache> class to improve rendering performance of a complex <xref:System.Windows.UIElement>. Create a <xref:System.Windows.Media.BitmapCache> and assign it to the <xref:System.Windows.UIElement.CacheMode%2A> property of a <xref:System.Windows.UIElement> to cache the element and its subtree as a bitmap in video memory. This is useful when you need to animate, translate, or scale a <xref:System.Windows.UIElement> as quickly as possible. This approach enables a tradeoff between performance and visual quality while content is cached.","nodes":[{"content":"Use the <xref:System.Windows.Media.BitmapCache> class to improve rendering performance of a complex <xref:System.Windows.UIElement>. Create a <xref:System.Windows.Media.BitmapCache> and assign it to the <xref:System.Windows.UIElement.CacheMode%2A> property of a <xref:System.Windows.UIElement> to cache the element and its subtree as a bitmap in video memory. This is useful when you need to animate, translate, or scale a <xref:System.Windows.UIElement> as quickly as possible. This approach enables a tradeoff between performance and visual quality while content is cached.","pos":[0,575],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph> class to improve rendering performance of a complex <ph id=\"ph2\">&lt;xref:System.Windows.UIElement&gt;</ph>.","pos":[0,132],"source":"Use the <xref:System.Windows.Media.BitmapCache> class to improve rendering performance of a complex <xref:System.Windows.UIElement>."},{"content":"Create a <ph id=\"ph1\">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph> and assign it to the <ph id=\"ph2\">&lt;xref:System.Windows.UIElement.CacheMode%2A&gt;</ph> property of a <ph id=\"ph3\">&lt;xref:System.Windows.UIElement&gt;</ph> to cache the element and its subtree as a bitmap in video memory.","pos":[133,359],"source":" Create a <xref:System.Windows.Media.BitmapCache> and assign it to the <xref:System.Windows.UIElement.CacheMode%2A> property of a <xref:System.Windows.UIElement> to cache the element and its subtree as a bitmap in video memory."},{"content":"This is useful when you need to animate, translate, or scale a <ph id=\"ph1\">&lt;xref:System.Windows.UIElement&gt;</ph> as quickly as possible.","pos":[360,478],"source":" This is useful when you need to animate, translate, or scale a <xref:System.Windows.UIElement> as quickly as possible."},{"content":"This approach enables a tradeoff between performance and visual quality while content is cached.","pos":[479,575]}]}]},{"pos":[582,679],"content":"Use the <xref:System.Windows.Media.BitmapCacheBrush> class to efficiently reuse a cached element.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.BitmapCacheBrush&gt;</ph> class to efficiently reuse a cached element.","pos":[0,97],"source":"Use the <xref:System.Windows.Media.BitmapCacheBrush> class to efficiently reuse a cached element."}]},{"pos":[686,964],"content":"Set the <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> property to scale the bitmap cache. This is useful if an element will be zoomed, and you want the element to render more clearly than it would if the cache were simply generated at the element’s native resolution.","nodes":[{"content":"Set the <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> property to scale the bitmap cache. This is useful if an element will be zoomed, and you want the element to render more clearly than it would if the cache were simply generated at the element’s native resolution.","pos":[0,278],"nodes":[{"content":"Set the <ph id=\"ph1\">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> property to scale the bitmap cache.","pos":[0,100],"source":"Set the <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> property to scale the bitmap cache."},{"content":"This is useful if an element will be zoomed, and you want the element to render more clearly than it would if the cache were simply generated at the element’s native resolution.","pos":[101,278]}]}]},{"pos":[971,1302],"content":"Set the <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> property when the cache displays content that requires pixel-alignment to render correctly, such as ClearType text. This property is ignored by the <xref:System.Windows.Media.BitmapCacheBrush> and <xref:System.Windows.Media.Media3D.Viewport2DVisual3D> classes.","nodes":[{"content":"Set the <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> property when the cache displays content that requires pixel-alignment to render correctly, such as ClearType text. This property is ignored by the <xref:System.Windows.Media.BitmapCacheBrush> and <xref:System.Windows.Media.Media3D.Viewport2DVisual3D> classes.","pos":[0,331],"nodes":[{"content":"Set the <ph id=\"ph1\">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> property when the cache displays content that requires pixel-alignment to render correctly, such as ClearType text.","pos":[0,186],"source":"Set the <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> property when the cache displays content that requires pixel-alignment to render correctly, such as ClearType text."},{"content":"This property is ignored by the <ph id=\"ph1\">&lt;xref:System.Windows.Media.BitmapCacheBrush&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.Media3D.Viewport2DVisual3D&gt;</ph> classes.","pos":[187,331],"source":" This property is ignored by the <xref:System.Windows.Media.BitmapCacheBrush> and <xref:System.Windows.Media.Media3D.Viewport2DVisual3D> classes."}]}]},{"pos":[1309,1439],"content":"Caching a control does not affect mouse-over behavior, so mouse-over hit testing operates as if it the bitmap were a live control.","nodes":[{"content":"Caching a control does not affect mouse-over behavior, so mouse-over hit testing operates as if it the bitmap were a live control.","pos":[0,130]}]},{"pos":[1446,1952],"content":"Cache regeneration occurs only when the structure of the <xref:System.Windows.UIElement> or its subtree changes, or when the <xref:System.Windows.Media.CacheMode> settings change. Setting the <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> or <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> properties causes cache regeneration. Changes to the parent visual tree of the cached <xref:System.Windows.UIElement>, such as transforms, scales, opacities, and effects, do not affect the cache.","nodes":[{"content":"Cache regeneration occurs only when the structure of the <xref:System.Windows.UIElement> or its subtree changes, or when the <xref:System.Windows.Media.CacheMode> settings change. Setting the <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> or <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> properties causes cache regeneration. Changes to the parent visual tree of the cached <xref:System.Windows.UIElement>, such as transforms, scales, opacities, and effects, do not affect the cache.","pos":[0,506],"nodes":[{"content":"Cache regeneration occurs only when the structure of the <ph id=\"ph1\">&lt;xref:System.Windows.UIElement&gt;</ph> or its subtree changes, or when the <ph id=\"ph2\">&lt;xref:System.Windows.Media.CacheMode&gt;</ph> settings change.","pos":[0,179],"source":"Cache regeneration occurs only when the structure of the <xref:System.Windows.UIElement> or its subtree changes, or when the <xref:System.Windows.Media.CacheMode> settings change."},{"content":"Setting the <ph id=\"ph1\">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> properties causes cache regeneration.","pos":[180,348],"source":" Setting the <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> or <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> properties causes cache regeneration."},{"content":"Changes to the parent visual tree of the cached <ph id=\"ph1\">&lt;xref:System.Windows.UIElement&gt;</ph>, such as transforms, scales, opacities, and effects, do not affect the cache.","pos":[349,506],"source":" Changes to the parent visual tree of the cached <xref:System.Windows.UIElement>, such as transforms, scales, opacities, and effects, do not affect the cache."}]}]},{"pos":[1959,2124],"content":"The cache functions when hardware acceleration is not available. In this case, the bitmap is rendered in software, and the maximum bitmap dimensions are 2048 x 2048.","nodes":[{"content":"The cache functions when hardware acceleration is not available. In this case, the bitmap is rendered in software, and the maximum bitmap dimensions are 2048 x 2048.","pos":[0,165],"nodes":[{"content":"The cache functions when hardware acceleration is not available.","pos":[0,64]},{"content":"In this case, the bitmap is rendered in software, and the maximum bitmap dimensions are 2048 x 2048.","pos":[65,165]}]}]},{"pos":[2132,2346],"content":"[!NOTE]\n <xref:System.Windows.Media.RenderOptions> and <xref:System.Windows.Media.TextOptions> do not propagate through a cached element. You may have to set these options again in child elements below the cache.","leadings":["","> "],"nodes":[{"content":" <xref:System.Windows.Media.RenderOptions> and <xref:System.Windows.Media.TextOptions> do not propagate through a cached element. You may have to set these options again in child elements below the cache.","pos":[8,212],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.RenderOptions&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Media.TextOptions&gt;</ph> do not propagate through a cached element.","pos":[1,129],"source":" <xref:System.Windows.Media.RenderOptions> and <xref:System.Windows.Media.TextOptions> do not propagate through a cached element."},{"content":"You may have to set these options again in child elements below the cache.","pos":[130,204]}]}]}],"pos":[1068,3432],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Media.BitmapCache\"></xref> class.","nodes":[{"pos":[0,94],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.BitmapCache\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Media.BitmapCache\"></xref> class."}],"pos":[8941,9036],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Media.BitmapCache\"></xref> class with the specified scale.","nodes":[{"pos":[0,119],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.BitmapCache\"&gt;&lt;/xref&gt;</ph> class with the specified scale.","source":"Initializes a new instance of the <xref href=\"System.Windows.Media.BitmapCache\"></xref> class with the specified scale."}],"pos":[10117,10237],"yaml":true},{"content":"A double that scales the bitmap.","nodes":[{"pos":[0,32],"content":"A double that scales the bitmap.","nodes":[{"content":"A double that scales the bitmap.","pos":[0,32]}]}],"pos":[10953,10986],"yaml":true},{"content":"Creates a modifiable clone of the <xref href=\"System.Windows.Media.BitmapCache\"></xref>, making deep copies of the object's values. When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.","nodes":[{"pos":[0,287],"content":"Creates a modifiable clone of the <xref href=\"System.Windows.Media.BitmapCache\"></xref>, making deep copies of the object's values. When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.","nodes":[{"content":"Creates a modifiable clone of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.BitmapCache\"&gt;&lt;/xref&gt;</ph>, making deep copies of the object's values.","pos":[0,131],"source":"Creates a modifiable clone of the <xref href=\"System.Windows.Media.BitmapCache\"></xref>, making deep copies of the object's values."},{"content":"When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.","pos":[132,287]}]}],"pos":[11914,12202],"yaml":true},{"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true.`","nodes":[{"pos":[0,232],"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true.`","nodes":[{"content":"A modifiable clone of the current object.","pos":[0,41]},{"content":"The cloned object's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">`false`</ph> even if the source's <ph id=\"ph3\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph4\">`true.`</ph>","pos":[42,232],"source":" The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true.`"}]}],"pos":[12370,12603],"yaml":true},{"content":"Creates a modifiable clone (deep copy) of the <xref href=\"System.Windows.Media.BitmapCache\"></xref> using its current values.","nodes":[{"pos":[0,125],"content":"Creates a modifiable clone (deep copy) of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.BitmapCache\"&gt;&lt;/xref&gt;</ph> using its current values.","source":"Creates a modifiable clone (deep copy) of the <xref href=\"System.Windows.Media.BitmapCache\"></xref> using its current values."}],"pos":[13625,13751],"yaml":true},{"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true.`","nodes":[{"pos":[0,232],"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true.`","nodes":[{"content":"A modifiable clone of the current object.","pos":[0,41]},{"content":"The cloned object's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">`false`</ph> even if the source's <ph id=\"ph3\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph4\">`true.`</ph>","pos":[42,232],"source":" The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true.`"}]}],"pos":[13931,14164],"yaml":true},{"content":"Gets or sets a value that indicates whether the bitmap is rendered with ClearType activated.","nodes":[{"pos":[0,92],"content":"Gets or sets a value that indicates whether the bitmap is rendered with ClearType activated.","nodes":[{"content":"Gets or sets a value that indicates whether the bitmap is rendered with ClearType activated.","pos":[0,92]}]}],"pos":[16301,16394],"yaml":true},{"content":"Set the <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> property to allow ClearType text to be rendered in the cache.  \n  \n When the <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> property is `true`, your application must render all of its ClearType text on an opaque background.  \n  \n When the <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> property is `false`, text in the cache is rendered with grayscale antialiasing.  \n  \n ClearType text requires correct pixel alignment of rendered characters, so you should set the <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> property to `true`. If you do not set this property, the content may not blend correctly.  \n  \n Use the <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> property when you know the cache is rendered on pixel boundaries, so it is safe to cache ClearType text. This situation occurs commonly in text-scrolling scenarios.","nodes":[{"pos":[0,128],"content":"Set the <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> property to allow ClearType text to be rendered in the cache.","nodes":[{"content":"Set the <ph id=\"ph1\">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> property to allow ClearType text to be rendered in the cache.","pos":[0,128],"source":"Set the <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> property to allow ClearType text to be rendered in the cache."}]},{"pos":[135,302],"content":"When the <ph id=\"ph1\">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph>, your application must render all of its ClearType text on an opaque background.","source":"When the <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> property is `true`, your application must render all of its ClearType text on an opaque background."},{"pos":[309,456],"content":"When the <ph id=\"ph1\">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> property is <ph id=\"ph2\">`false`</ph>, text in the cache is rendered with grayscale antialiasing.","source":"When the <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> property is `false`, text in the cache is rendered with grayscale antialiasing."},{"pos":[463,709],"content":"ClearType text requires correct pixel alignment of rendered characters, so you should set the <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> property to `true`. If you do not set this property, the content may not blend correctly.","nodes":[{"content":"ClearType text requires correct pixel alignment of rendered characters, so you should set the <ph id=\"ph1\">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph>.","pos":[0,176],"source":"ClearType text requires correct pixel alignment of rendered characters, so you should set the <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> property to `true`."},{"content":"If you do not set this property, the content may not blend correctly.","pos":[177,246]}]},{"pos":[716,947],"content":"Use the <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> property when you know the cache is rendered on pixel boundaries, so it is safe to cache ClearType text. This situation occurs commonly in text-scrolling scenarios.","nodes":[{"content":"Use the <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> property when you know the cache is rendered on pixel boundaries, so it is safe to cache ClearType text. This situation occurs commonly in text-scrolling scenarios.","pos":[0,231],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> property when you know the cache is rendered on pixel boundaries, so it is safe to cache ClearType text.","pos":[0,171],"source":"Use the <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> property when you know the cache is rendered on pixel boundaries, so it is safe to cache ClearType text."},{"content":"This situation occurs commonly in text-scrolling scenarios.","pos":[172,231]}]}]}],"pos":[16405,17363],"yaml":true,"extradata":"MT"},{"content":"`true` if ClearType is active; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,74],"content":"`true` if ClearType is active; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if ClearType is active; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,50],"source":"`true` if ClearType is active; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[51,74],"source":" The default is `false`."}]}],"pos":[17486,17563],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Media.BitmapCache.EnableClearType\"></xref> dependency property.","nodes":[{"pos":[0,105],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.BitmapCache.EnableClearType\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.Media.BitmapCache.EnableClearType\"></xref> dependency property."}],"pos":[18624,18730],"yaml":true},{"content":"Gets or sets a value that indicates the scale that is applied to the bitmap.","nodes":[{"pos":[0,76],"content":"Gets or sets a value that indicates the scale that is applied to the bitmap.","nodes":[{"content":"Gets or sets a value that indicates the scale that is applied to the bitmap.","pos":[0,76]}]}],"pos":[19857,19934],"yaml":true},{"content":"Use the <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> property to render the <xref:System.Windows.Media.BitmapCache> at a multiple of the normal bitmap size. The normal size is determined by the local size of the element.  \n  \n Values greater than 1 increase the resolution of the bitmap relative to the native resolution of the element, and values less than 1 decrease the resolution. For example, if the <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> property is set to 2.0, and you apply a scale transform that enlarges the content by a factor of 2, the content will have the same visual quality as the same content with <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> set to 1.0 and a transform scale of 1.  \n  \n When <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> is set to 0, no bitmap is rendered. Negative values are clamped to 0.  \n  \n If you change this value, the cache is regenerated at the appropriate new resolution.  \n  \n The following images show how the same content appears for different values of the <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> property.  \n  \n **RenderAtScale = 1**  \n  \n ![RenderAtScale &#61; 1](~/add/media/ndp-scale-1.png \"RenderAtScale = 1\")  \n  \n **RenderAtScale = 0.5**  \n  \n ![RenderAtScale &#61; 0.5](~/add/media/ndp-scale05.png \"RenderAtScale = 0.5\")  \n  \n **RenderAtScale = 0.2**  \n  \n ![RenderAtScale &#61; 0.2](~/add/media/ndp-scale02.png \"RenderAtScale = 0.2\")  \n  \n The following image shows a zoom transform that is applied to an ancestor of the cached element. When the zoom is set to 1 and <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> is set to 1, the image quality is almost the same as when <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> is set to 2. But when zoom is greater than 1, setting <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> to 2 will have better image quality.  \n  \n **RenderAtScale = 1.0**  \n  \n ![RenderAtScale &#61; 1.0](~/add/media/ndp-scale-10.png \"RenderAtScale = 1.0\")  \n  \n **RenderAtScale = 2.0**  \n  \n ![RenderAtScale &#61; 2.0](~/add/media/ndp-scale-20.png \"RenderAtScale = 2.0\")","nodes":[{"pos":[0,232],"content":"Use the <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> property to render the <xref:System.Windows.Media.BitmapCache> at a multiple of the normal bitmap size. The normal size is determined by the local size of the element.","nodes":[{"content":"Use the <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> property to render the <xref:System.Windows.Media.BitmapCache> at a multiple of the normal bitmap size. The normal size is determined by the local size of the element.","pos":[0,232],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> property to render the <ph id=\"ph2\">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph> at a multiple of the normal bitmap size.","pos":[0,168],"source":"Use the <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> property to render the <xref:System.Windows.Media.BitmapCache> at a multiple of the normal bitmap size."},{"content":"The normal size is determined by the local size of the element.","pos":[169,232]}]}]},{"pos":[239,740],"content":"Values greater than 1 increase the resolution of the bitmap relative to the native resolution of the element, and values less than 1 decrease the resolution. For example, if the <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> property is set to 2.0, and you apply a scale transform that enlarges the content by a factor of 2, the content will have the same visual quality as the same content with <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> set to 1.0 and a transform scale of 1.","nodes":[{"content":"Values greater than 1 increase the resolution of the bitmap relative to the native resolution of the element, and values less than 1 decrease the resolution. For example, if the <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> property is set to 2.0, and you apply a scale transform that enlarges the content by a factor of 2, the content will have the same visual quality as the same content with <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> set to 1.0 and a transform scale of 1.","pos":[0,501],"nodes":[{"content":"Values greater than 1 increase the resolution of the bitmap relative to the native resolution of the element, and values less than 1 decrease the resolution.","pos":[0,157]},{"content":"For example, if the <ph id=\"ph1\">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> property is set to 2.0, and you apply a scale transform that enlarges the content by a factor of 2, the content will have the same visual quality as the same content with <ph id=\"ph2\">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> set to 1.0 and a transform scale of 1.","pos":[158,501],"source":" For example, if the <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> property is set to 2.0, and you apply a scale transform that enlarges the content by a factor of 2, the content will have the same visual quality as the same content with <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> set to 1.0 and a transform scale of 1."}]}]},{"pos":[747,878],"content":"When <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> is set to 0, no bitmap is rendered. Negative values are clamped to 0.","nodes":[{"content":"When <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> is set to 0, no bitmap is rendered. Negative values are clamped to 0.","pos":[0,131],"nodes":[{"content":"When <ph id=\"ph1\">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> is set to 0, no bitmap is rendered.","pos":[0,97],"source":"When <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> is set to 0, no bitmap is rendered."},{"content":"Negative values are clamped to 0.","pos":[98,131]}]}]},{"pos":[885,970],"content":"If you change this value, the cache is regenerated at the appropriate new resolution.","nodes":[{"content":"If you change this value, the cache is regenerated at the appropriate new resolution.","pos":[0,85]}]},{"pos":[977,1126],"content":"The following images show how the same content appears for different values of the <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> property.","nodes":[{"content":"The following images show how the same content appears for different values of the <ph id=\"ph1\">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> property.","pos":[0,149],"source":"The following images show how the same content appears for different values of the <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> property."}]},{"pos":[1133,1154],"content":"<bpt id=\"p1\">**</bpt>RenderAtScale = 1<ept id=\"p1\">**</ept>","source":"**RenderAtScale = 1**"},{"pos":[1161,1234],"content":"<bpt id=\"p1\">![</bpt>RenderAtScale &amp;#61; 1<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/ndp-scale-1.png \"</bpt>RenderAtScale = 1<ept id=\"p2\">\")</ept>","source":"![RenderAtScale &#61; 1](~/add/media/ndp-scale-1.png \"RenderAtScale = 1\")"},{"pos":[1241,1264],"content":"<bpt id=\"p1\">**</bpt>RenderAtScale = 0.5<ept id=\"p1\">**</ept>","source":"**RenderAtScale = 0.5**"},{"pos":[1271,1348],"content":"<bpt id=\"p1\">![</bpt>RenderAtScale &amp;#61; 0.5<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/ndp-scale05.png \"</bpt>RenderAtScale = 0.5<ept id=\"p2\">\")</ept>","source":"![RenderAtScale &#61; 0.5](~/add/media/ndp-scale05.png \"RenderAtScale = 0.5\")"},{"pos":[1355,1378],"content":"<bpt id=\"p1\">**</bpt>RenderAtScale = 0.2<ept id=\"p1\">**</ept>","source":"**RenderAtScale = 0.2**"},{"pos":[1385,1462],"content":"<bpt id=\"p1\">![</bpt>RenderAtScale &amp;#61; 0.2<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/ndp-scale02.png \"</bpt>RenderAtScale = 0.2<ept id=\"p2\">\")</ept>","source":"![RenderAtScale &#61; 0.2](~/add/media/ndp-scale02.png \"RenderAtScale = 0.2\")"},{"pos":[1469,1915],"content":"The following image shows a zoom transform that is applied to an ancestor of the cached element. When the zoom is set to 1 and <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> is set to 1, the image quality is almost the same as when <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> is set to 2. But when zoom is greater than 1, setting <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> to 2 will have better image quality.","nodes":[{"content":"The following image shows a zoom transform that is applied to an ancestor of the cached element. When the zoom is set to 1 and <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> is set to 1, the image quality is almost the same as when <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> is set to 2. But when zoom is greater than 1, setting <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> to 2 will have better image quality.","pos":[0,446],"nodes":[{"content":"The following image shows a zoom transform that is applied to an ancestor of the cached element.","pos":[0,96]},{"content":"When the zoom is set to 1 and <ph id=\"ph1\">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> is set to 1, the image quality is almost the same as when <ph id=\"ph2\">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> is set to 2.","pos":[97,311],"source":" When the zoom is set to 1 and <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> is set to 1, the image quality is almost the same as when <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> is set to 2."},{"content":"But when zoom is greater than 1, setting <ph id=\"ph1\">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> to 2 will have better image quality.","pos":[312,446],"source":" But when zoom is greater than 1, setting <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> to 2 will have better image quality."}]}]},{"pos":[1922,1945],"content":"<bpt id=\"p1\">**</bpt>RenderAtScale = 1.0<ept id=\"p1\">**</ept>","source":"**RenderAtScale = 1.0**"},{"pos":[1952,2030],"content":"<bpt id=\"p1\">![</bpt>RenderAtScale &amp;#61; 1.0<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/ndp-scale-10.png \"</bpt>RenderAtScale = 1.0<ept id=\"p2\">\")</ept>","source":"![RenderAtScale &#61; 1.0](~/add/media/ndp-scale-10.png \"RenderAtScale = 1.0\")"},{"pos":[2037,2060],"content":"<bpt id=\"p1\">**</bpt>RenderAtScale = 2.0<ept id=\"p1\">**</ept>","source":"**RenderAtScale = 2.0**"},{"pos":[2067,2145],"content":"<bpt id=\"p1\">![</bpt>RenderAtScale &amp;#61; 2.0<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/ndp-scale-20.png \"</bpt>RenderAtScale = 2.0<ept id=\"p2\">\")</ept>","source":"![RenderAtScale &#61; 2.0](~/add/media/ndp-scale-20.png \"RenderAtScale = 2.0\")"}],"pos":[19945,22133],"yaml":true,"extradata":"MT"},{"content":"The scale that is applied to the bitmap. The default is 1.","nodes":[{"pos":[0,58],"content":"The scale that is applied to the bitmap. The default is 1.","nodes":[{"content":"The scale that is applied to the bitmap. The default is 1.","pos":[0,58],"nodes":[{"content":"The scale that is applied to the bitmap.","pos":[0,40]},{"content":"The default is 1.","pos":[41,58]}]}]}],"pos":[22255,22314],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Media.BitmapCache.RenderAtScale\"></xref> dependency property.","nodes":[{"pos":[0,103],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.BitmapCache.RenderAtScale\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.Media.BitmapCache.RenderAtScale\"></xref> dependency property."}],"pos":[23339,23443],"yaml":true},{"content":"Gets or sets a value that indicates whether the bitmap is rendered with pixel snapping.","nodes":[{"pos":[0,87],"content":"Gets or sets a value that indicates whether the bitmap is rendered with pixel snapping.","nodes":[{"content":"Gets or sets a value that indicates whether the bitmap is rendered with pixel snapping.","pos":[0,87]}]}],"pos":[24604,24692],"yaml":true},{"content":"Set the <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> property when the cache displays content that requires pixel-alignment to render correctly. This is the case for ClearType text. If you set the <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> property to `true`, consider setting <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> to `true` to ensure proper rendering.  \n  \n When the <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> property is set to `false`, you can move and scale the cached element by a fraction of a pixel, and bilinear filtering is applied.  \n  \n When the <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> property is set to `true`, the bitmap cache is aligned with pixel boundaries of the destination. If you move or scale the cached element by a fraction of a pixel, the bitmap snaps to the pixel grid. In this case, the top-left corner of the bitmap is rounded up and snapped to the pixel grid, but the bottom-right corner is on a fractional pixel boundary.  \n  \n The <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> property is ignored by <xref:System.Windows.Media.BitmapCacheBrush> and when used with a <xref:System.Windows.Media.Media3D.Viewport2DVisual3D>.","nodes":[{"pos":[0,411],"content":"Set the <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> property when the cache displays content that requires pixel-alignment to render correctly. This is the case for ClearType text. If you set the <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> property to `true`, consider setting <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> to `true` to ensure proper rendering.","nodes":[{"content":"Set the <ph id=\"ph1\">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> property when the cache displays content that requires pixel-alignment to render correctly.","pos":[0,162],"source":"Set the <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> property when the cache displays content that requires pixel-alignment to render correctly."},{"content":"This is the case for ClearType text.","pos":[163,199]},{"content":"If you set the <ph id=\"ph1\">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph>, consider setting <ph id=\"ph3\">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> to <ph id=\"ph4\">`true`</ph> to ensure proper rendering.","pos":[200,411],"source":" If you set the <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> property to `true`, consider setting <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> to `true` to ensure proper rendering."}]},{"pos":[418,620],"content":"When the <ph id=\"ph1\">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> property is set to <ph id=\"ph2\">`false`</ph>, you can move and scale the cached element by a fraction of a pixel, and bilinear filtering is applied.","source":"When the <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> property is set to `false`, you can move and scale the cached element by a fraction of a pixel, and bilinear filtering is applied."},{"pos":[627,1053],"content":"When the <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> property is set to `true`, the bitmap cache is aligned with pixel boundaries of the destination. If you move or scale the cached element by a fraction of a pixel, the bitmap snaps to the pixel grid. In this case, the top-left corner of the bitmap is rounded up and snapped to the pixel grid, but the bottom-right corner is on a fractional pixel boundary.","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> property is set to <ph id=\"ph2\">`true`</ph>, the bitmap cache is aligned with pixel boundaries of the destination.","pos":[0,168],"source":"When the <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> property is set to `true`, the bitmap cache is aligned with pixel boundaries of the destination."},{"content":"If you move or scale the cached element by a fraction of a pixel, the bitmap snaps to the pixel grid.","pos":[169,270]},{"content":"In this case, the top-left corner of the bitmap is rounded up and snapped to the pixel grid, but the bottom-right corner is on a fractional pixel boundary.","pos":[271,426]}]},{"pos":[1060,1271],"content":"The <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> property is ignored by <xref:System.Windows.Media.BitmapCacheBrush> and when used with a <xref:System.Windows.Media.Media3D.Viewport2DVisual3D>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> property is ignored by <ph id=\"ph2\">&lt;xref:System.Windows.Media.BitmapCacheBrush&gt;</ph> and when used with a <ph id=\"ph3\">&lt;xref:System.Windows.Media.Media3D.Viewport2DVisual3D&gt;</ph>.","pos":[0,211],"source":"The <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> property is ignored by <xref:System.Windows.Media.BitmapCacheBrush> and when used with a <xref:System.Windows.Media.Media3D.Viewport2DVisual3D>."}]}],"pos":[24703,25983],"yaml":true,"extradata":"MT"},{"content":"`true` if pixel snapping is active; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,79],"content":"`true` if pixel snapping is active; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if pixel snapping is active; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,55],"source":"`true` if pixel snapping is active; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[56,79],"source":" The default is `false`."}]}],"pos":[26110,26192],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Media.BitmapCache.SnapsToDevicePixels\"></xref> dependency property.","nodes":[{"pos":[0,109],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.BitmapCache.SnapsToDevicePixels\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.Media.BitmapCache.SnapsToDevicePixels\"></xref> dependency property."}],"pos":[27281,27391],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.BitmapCache\n  commentId: T:System.Windows.Media.BitmapCache\n  id: BitmapCache\n  children:\n  - System.Windows.Media.BitmapCache.#ctor\n  - System.Windows.Media.BitmapCache.#ctor(System.Double)\n  - System.Windows.Media.BitmapCache.Clone\n  - System.Windows.Media.BitmapCache.CloneCurrentValue\n  - System.Windows.Media.BitmapCache.CreateInstanceCore\n  - System.Windows.Media.BitmapCache.EnableClearType\n  - System.Windows.Media.BitmapCache.EnableClearTypeProperty\n  - System.Windows.Media.BitmapCache.RenderAtScale\n  - System.Windows.Media.BitmapCache.RenderAtScaleProperty\n  - System.Windows.Media.BitmapCache.SnapsToDevicePixels\n  - System.Windows.Media.BitmapCache.SnapsToDevicePixelsProperty\n  langs:\n  - csharp\n  name: BitmapCache\n  nameWithType: BitmapCache\n  fullName: System.Windows.Media.BitmapCache\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Creates and caches a bitmap representation of a <xref href=\"System.Windows.UIElement\"></xref>.\n  remarks: \"Use the <xref:System.Windows.Media.BitmapCache> class to improve rendering performance of a complex <xref:System.Windows.UIElement>. Create a <xref:System.Windows.Media.BitmapCache> and assign it to the <xref:System.Windows.UIElement.CacheMode%2A> property of a <xref:System.Windows.UIElement> to cache the element and its subtree as a bitmap in video memory. This is useful when you need to animate, translate, or scale a <xref:System.Windows.UIElement> as quickly as possible. This approach enables a tradeoff between performance and visual quality while content is cached.  \\n  \\n Use the <xref:System.Windows.Media.BitmapCacheBrush> class to efficiently reuse a cached element.  \\n  \\n Set the <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> property to scale the bitmap cache. This is useful if an element will be zoomed, and you want the element to render more clearly than it would if the cache were simply generated at the element’s native resolution.  \\n  \\n Set the <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> property when the cache displays content that requires pixel-alignment to render correctly, such as ClearType text. This property is ignored by the <xref:System.Windows.Media.BitmapCacheBrush> and <xref:System.Windows.Media.Media3D.Viewport2DVisual3D> classes.  \\n  \\n Caching a control does not affect mouse-over behavior, so mouse-over hit testing operates as if it the bitmap were a live control.  \\n  \\n Cache regeneration occurs only when the structure of the <xref:System.Windows.UIElement> or its subtree changes, or when the <xref:System.Windows.Media.CacheMode> settings change. Setting the <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> or <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> properties causes cache regeneration. Changes to the parent visual tree of the cached <xref:System.Windows.UIElement>, such as transforms, scales, opacities, and effects, do not affect the cache.  \\n  \\n The cache functions when hardware acceleration is not available. In this case, the bitmap is rendered in software, and the maximum bitmap dimensions are 2048 x 2048.  \\n  \\n> [!NOTE]\\n>  <xref:System.Windows.Media.RenderOptions> and <xref:System.Windows.Media.TextOptions> do not propagate through a cached element. You may have to set these options again in child elements below the cache.\"\n  example:\n  - \"The following XAML shows how to cache a <xref:System.Windows.Controls.Canvas> element. For the complete code example, see [How to: Improve Rendering Performance by Caching an Element](~/docs/framework/wpf/graphics-multimedia/how-to-improve-rendering-performance-by-caching-an-element.md).  \\n  \\n [!code-xml[System.Windows.Media.BitmapCache#_BitmapCacheCreation](~/samples/snippets/csharp/VS_Snippets_Wpf/system.windows.media.bitmapcache/cs/window1.xaml#_bitmapcachecreation)]\"\n  syntax:\n    content: 'public sealed class BitmapCache : System.Windows.Media.CacheMode'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  - System.Windows.Media.CacheMode\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Freezable.CanFreeze\n  - System.Windows.Freezable.Changed\n  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CreateInstance\n  - System.Windows.Freezable.Freeze\n  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  - System.Windows.Freezable.GetAsFrozen\n  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.GetCurrentValueAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.IsFrozen\n  - System.Windows.Freezable.OnChanged\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Freezable.ReadPreamble\n  - System.Windows.Freezable.WritePostscript\n  - System.Windows.Freezable.WritePreamble\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/BitmapCache.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.BitmapCache.#ctor\n  commentId: M:System.Windows.Media.BitmapCache.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.BitmapCache\n  langs:\n  - csharp\n  name: BitmapCache()\n  nameWithType: BitmapCache.BitmapCache()\n  fullName: BitmapCache.BitmapCache()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.BitmapCache\"></xref> class.\n  syntax:\n    content: public BitmapCache ();\n    parameters: []\n  overload: System.Windows.Media.BitmapCache.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/BitmapCache.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.BitmapCache.#ctor(System.Double)\n  commentId: M:System.Windows.Media.BitmapCache.#ctor(System.Double)\n  id: '#ctor(System.Double)'\n  parent: System.Windows.Media.BitmapCache\n  langs:\n  - csharp\n  name: BitmapCache(Double)\n  nameWithType: BitmapCache.BitmapCache(Double)\n  fullName: BitmapCache.BitmapCache(Double)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.BitmapCache\"></xref> class with the specified scale.\n  remarks: ''\n  example:\n  - \"The following XAML shows how to create and assign a <xref:System.Windows.Media.BitmapCache> to a <xref:System.Windows.Controls.Canvas> element. For the complete code example, see [How to: Improve Rendering Performance by Caching an Element](~/docs/framework/wpf/graphics-multimedia/how-to-improve-rendering-performance-by-caching-an-element.md).  \\n  \\n [!code-xml[System.Windows.Media.BitmapCache#_BitmapCacheCreation](~/samples/snippets/csharp/VS_Snippets_Wpf/system.windows.media.bitmapcache/cs/window1.xaml#_bitmapcachecreation)]\"\n  syntax:\n    content: public BitmapCache (double renderAtScale);\n    parameters:\n    - id: renderAtScale\n      type: System.Double\n      description: A double that scales the bitmap.\n  overload: System.Windows.Media.BitmapCache.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/BitmapCache.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.BitmapCache.Clone\n  commentId: M:System.Windows.Media.BitmapCache.Clone\n  id: Clone\n  parent: System.Windows.Media.BitmapCache\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: BitmapCache.Clone()\n  fullName: BitmapCache.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Creates a modifiable clone of the <xref href=\"System.Windows.Media.BitmapCache\"></xref>, making deep copies of the object's values. When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.\n  syntax:\n    content: public System.Windows.Media.BitmapCache Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.BitmapCache\n      description: A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true.`\n  overload: System.Windows.Media.BitmapCache.Clone*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/BitmapCache.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.BitmapCache.CloneCurrentValue\n  commentId: M:System.Windows.Media.BitmapCache.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.Media.BitmapCache\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: BitmapCache.CloneCurrentValue()\n  fullName: BitmapCache.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Creates a modifiable clone (deep copy) of the <xref href=\"System.Windows.Media.BitmapCache\"></xref> using its current values.\n  syntax:\n    content: public System.Windows.Media.BitmapCache CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.Media.BitmapCache\n      description: A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true.`\n  overload: System.Windows.Media.BitmapCache.CloneCurrentValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/BitmapCache.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.BitmapCache.CreateInstanceCore\n  commentId: M:System.Windows.Media.BitmapCache.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.BitmapCache\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: BitmapCache.CreateInstanceCore()\n  fullName: BitmapCache.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: ''\n  overload: System.Windows.Media.BitmapCache.CreateInstanceCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/BitmapCache.xml\n- uid: System.Windows.Media.BitmapCache.EnableClearType\n  commentId: P:System.Windows.Media.BitmapCache.EnableClearType\n  id: EnableClearType\n  parent: System.Windows.Media.BitmapCache\n  langs:\n  - csharp\n  name: EnableClearType\n  nameWithType: BitmapCache.EnableClearType\n  fullName: BitmapCache.EnableClearType\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets or sets a value that indicates whether the bitmap is rendered with ClearType activated.\n  remarks: \"Set the <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> property to allow ClearType text to be rendered in the cache.  \\n  \\n When the <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> property is `true`, your application must render all of its ClearType text on an opaque background.  \\n  \\n When the <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> property is `false`, text in the cache is rendered with grayscale antialiasing.  \\n  \\n ClearType text requires correct pixel alignment of rendered characters, so you should set the <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> property to `true`. If you do not set this property, the content may not blend correctly.  \\n  \\n Use the <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> property when you know the cache is rendered on pixel boundaries, so it is safe to cache ClearType text. This situation occurs commonly in text-scrolling scenarios.\"\n  syntax:\n    content: public bool EnableClearType { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if ClearType is active; otherwise, `false`. The default is `false`.'\n  overload: System.Windows.Media.BitmapCache.EnableClearType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/BitmapCache.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.BitmapCache.EnableClearTypeProperty\n  commentId: F:System.Windows.Media.BitmapCache.EnableClearTypeProperty\n  id: EnableClearTypeProperty\n  parent: System.Windows.Media.BitmapCache\n  langs:\n  - csharp\n  name: EnableClearTypeProperty\n  nameWithType: BitmapCache.EnableClearTypeProperty\n  fullName: BitmapCache.EnableClearTypeProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Identifies the <xref href=\"System.Windows.Media.BitmapCache.EnableClearType\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty EnableClearTypeProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/BitmapCache.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.BitmapCache.RenderAtScale\n  commentId: P:System.Windows.Media.BitmapCache.RenderAtScale\n  id: RenderAtScale\n  parent: System.Windows.Media.BitmapCache\n  langs:\n  - csharp\n  name: RenderAtScale\n  nameWithType: BitmapCache.RenderAtScale\n  fullName: BitmapCache.RenderAtScale\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets or sets a value that indicates the scale that is applied to the bitmap.\n  remarks: \"Use the <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> property to render the <xref:System.Windows.Media.BitmapCache> at a multiple of the normal bitmap size. The normal size is determined by the local size of the element.  \\n  \\n Values greater than 1 increase the resolution of the bitmap relative to the native resolution of the element, and values less than 1 decrease the resolution. For example, if the <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> property is set to 2.0, and you apply a scale transform that enlarges the content by a factor of 2, the content will have the same visual quality as the same content with <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> set to 1.0 and a transform scale of 1.  \\n  \\n When <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> is set to 0, no bitmap is rendered. Negative values are clamped to 0.  \\n  \\n If you change this value, the cache is regenerated at the appropriate new resolution.  \\n  \\n The following images show how the same content appears for different values of the <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> property.  \\n  \\n **RenderAtScale = 1**  \\n  \\n ![RenderAtScale &#61; 1](~/add/media/ndp-scale-1.png \\\"RenderAtScale = 1\\\")  \\n  \\n **RenderAtScale = 0.5**  \\n  \\n ![RenderAtScale &#61; 0.5](~/add/media/ndp-scale05.png \\\"RenderAtScale = 0.5\\\")  \\n  \\n **RenderAtScale = 0.2**  \\n  \\n ![RenderAtScale &#61; 0.2](~/add/media/ndp-scale02.png \\\"RenderAtScale = 0.2\\\")  \\n  \\n The following image shows a zoom transform that is applied to an ancestor of the cached element. When the zoom is set to 1 and <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> is set to 1, the image quality is almost the same as when <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> is set to 2. But when zoom is greater than 1, setting <xref:System.Windows.Media.BitmapCache.RenderAtScale%2A> to 2 will have better image quality.  \\n  \\n **RenderAtScale = 1.0**  \\n  \\n ![RenderAtScale &#61; 1.0](~/add/media/ndp-scale-10.png \\\"RenderAtScale = 1.0\\\")  \\n  \\n **RenderAtScale = 2.0**  \\n  \\n ![RenderAtScale &#61; 2.0](~/add/media/ndp-scale-20.png \\\"RenderAtScale = 2.0\\\")\"\n  syntax:\n    content: public double RenderAtScale { get; set; }\n    return:\n      type: System.Double\n      description: The scale that is applied to the bitmap. The default is 1.\n  overload: System.Windows.Media.BitmapCache.RenderAtScale*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/BitmapCache.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.BitmapCache.RenderAtScaleProperty\n  commentId: F:System.Windows.Media.BitmapCache.RenderAtScaleProperty\n  id: RenderAtScaleProperty\n  parent: System.Windows.Media.BitmapCache\n  langs:\n  - csharp\n  name: RenderAtScaleProperty\n  nameWithType: BitmapCache.RenderAtScaleProperty\n  fullName: BitmapCache.RenderAtScaleProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Identifies the <xref href=\"System.Windows.Media.BitmapCache.RenderAtScale\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty RenderAtScaleProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/BitmapCache.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.BitmapCache.SnapsToDevicePixels\n  commentId: P:System.Windows.Media.BitmapCache.SnapsToDevicePixels\n  id: SnapsToDevicePixels\n  parent: System.Windows.Media.BitmapCache\n  langs:\n  - csharp\n  name: SnapsToDevicePixels\n  nameWithType: BitmapCache.SnapsToDevicePixels\n  fullName: BitmapCache.SnapsToDevicePixels\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Gets or sets a value that indicates whether the bitmap is rendered with pixel snapping.\n  remarks: \"Set the <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> property when the cache displays content that requires pixel-alignment to render correctly. This is the case for ClearType text. If you set the <xref:System.Windows.Media.BitmapCache.EnableClearType%2A> property to `true`, consider setting <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> to `true` to ensure proper rendering.  \\n  \\n When the <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> property is set to `false`, you can move and scale the cached element by a fraction of a pixel, and bilinear filtering is applied.  \\n  \\n When the <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> property is set to `true`, the bitmap cache is aligned with pixel boundaries of the destination. If you move or scale the cached element by a fraction of a pixel, the bitmap snaps to the pixel grid. In this case, the top-left corner of the bitmap is rounded up and snapped to the pixel grid, but the bottom-right corner is on a fractional pixel boundary.  \\n  \\n The <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A> property is ignored by <xref:System.Windows.Media.BitmapCacheBrush> and when used with a <xref:System.Windows.Media.Media3D.Viewport2DVisual3D>.\"\n  syntax:\n    content: public bool SnapsToDevicePixels { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if pixel snapping is active; otherwise, `false`. The default is `false`.'\n  overload: System.Windows.Media.BitmapCache.SnapsToDevicePixels*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/BitmapCache.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.BitmapCache.SnapsToDevicePixelsProperty\n  commentId: F:System.Windows.Media.BitmapCache.SnapsToDevicePixelsProperty\n  id: SnapsToDevicePixelsProperty\n  parent: System.Windows.Media.BitmapCache\n  langs:\n  - csharp\n  name: SnapsToDevicePixelsProperty\n  nameWithType: BitmapCache.SnapsToDevicePixelsProperty\n  fullName: BitmapCache.SnapsToDevicePixelsProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  summary: Identifies the <xref href=\"System.Windows.Media.BitmapCache.SnapsToDevicePixels\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty SnapsToDevicePixelsProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/BitmapCache.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.Media.CacheMode\n  parent: System.Windows.Media\n  isExternal: false\n  name: CacheMode\n  nameWithType: CacheMode\n  fullName: System.Windows.Media.CacheMode\n- uid: System.Windows.Media.BitmapCache.#ctor\n  parent: System.Windows.Media.BitmapCache\n  isExternal: false\n  name: BitmapCache()\n  nameWithType: BitmapCache.BitmapCache()\n  fullName: BitmapCache.BitmapCache()\n- uid: System.Windows.Media.BitmapCache.#ctor(System.Double)\n  parent: System.Windows.Media.BitmapCache\n  isExternal: false\n  name: BitmapCache(Double)\n  nameWithType: BitmapCache.BitmapCache(Double)\n  fullName: BitmapCache.BitmapCache(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.BitmapCache.Clone\n  parent: System.Windows.Media.BitmapCache\n  isExternal: false\n  name: Clone()\n  nameWithType: BitmapCache.Clone()\n  fullName: BitmapCache.Clone()\n- uid: System.Windows.Media.BitmapCache\n  parent: System.Windows.Media\n  isExternal: false\n  name: BitmapCache\n  nameWithType: BitmapCache\n  fullName: System.Windows.Media.BitmapCache\n- uid: System.Windows.Media.BitmapCache.CloneCurrentValue\n  parent: System.Windows.Media.BitmapCache\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: BitmapCache.CloneCurrentValue()\n  fullName: BitmapCache.CloneCurrentValue()\n- uid: System.Windows.Media.BitmapCache.CreateInstanceCore\n  parent: System.Windows.Media.BitmapCache\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: BitmapCache.CreateInstanceCore()\n  fullName: BitmapCache.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: false\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.BitmapCache.EnableClearType\n  parent: System.Windows.Media.BitmapCache\n  isExternal: false\n  name: EnableClearType\n  nameWithType: BitmapCache.EnableClearType\n  fullName: BitmapCache.EnableClearType\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.BitmapCache.EnableClearTypeProperty\n  parent: System.Windows.Media.BitmapCache\n  isExternal: false\n  name: EnableClearTypeProperty\n  nameWithType: BitmapCache.EnableClearTypeProperty\n  fullName: BitmapCache.EnableClearTypeProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Media.BitmapCache.RenderAtScale\n  parent: System.Windows.Media.BitmapCache\n  isExternal: false\n  name: RenderAtScale\n  nameWithType: BitmapCache.RenderAtScale\n  fullName: BitmapCache.RenderAtScale\n- uid: System.Windows.Media.BitmapCache.RenderAtScaleProperty\n  parent: System.Windows.Media.BitmapCache\n  isExternal: false\n  name: RenderAtScaleProperty\n  nameWithType: BitmapCache.RenderAtScaleProperty\n  fullName: BitmapCache.RenderAtScaleProperty\n- uid: System.Windows.Media.BitmapCache.SnapsToDevicePixels\n  parent: System.Windows.Media.BitmapCache\n  isExternal: false\n  name: SnapsToDevicePixels\n  nameWithType: BitmapCache.SnapsToDevicePixels\n  fullName: BitmapCache.SnapsToDevicePixels\n- uid: System.Windows.Media.BitmapCache.SnapsToDevicePixelsProperty\n  parent: System.Windows.Media.BitmapCache\n  isExternal: false\n  name: SnapsToDevicePixelsProperty\n  nameWithType: BitmapCache.SnapsToDevicePixelsProperty\n  fullName: BitmapCache.SnapsToDevicePixelsProperty\n- uid: System.Windows.Media.BitmapCache.#ctor*\n  parent: System.Windows.Media.BitmapCache\n  isExternal: false\n  name: BitmapCache\n  nameWithType: BitmapCache.BitmapCache\n  fullName: BitmapCache.BitmapCache\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/BitmapCache.xml\n- uid: System.Windows.Media.BitmapCache.Clone*\n  parent: System.Windows.Media.BitmapCache\n  isExternal: false\n  name: Clone\n  nameWithType: BitmapCache.Clone\n  fullName: BitmapCache.Clone\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/BitmapCache.xml\n- uid: System.Windows.Media.BitmapCache.CloneCurrentValue*\n  parent: System.Windows.Media.BitmapCache\n  isExternal: false\n  name: CloneCurrentValue\n  nameWithType: BitmapCache.CloneCurrentValue\n  fullName: BitmapCache.CloneCurrentValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/BitmapCache.xml\n- uid: System.Windows.Media.BitmapCache.CreateInstanceCore*\n  parent: System.Windows.Media.BitmapCache\n  isExternal: false\n  name: CreateInstanceCore\n  nameWithType: BitmapCache.CreateInstanceCore\n  fullName: BitmapCache.CreateInstanceCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/BitmapCache.xml\n- uid: System.Windows.Media.BitmapCache.EnableClearType*\n  parent: System.Windows.Media.BitmapCache\n  isExternal: false\n  name: EnableClearType\n  nameWithType: BitmapCache.EnableClearType\n  fullName: BitmapCache.EnableClearType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/BitmapCache.xml\n- uid: System.Windows.Media.BitmapCache.RenderAtScale*\n  parent: System.Windows.Media.BitmapCache\n  isExternal: false\n  name: RenderAtScale\n  nameWithType: BitmapCache.RenderAtScale\n  fullName: BitmapCache.RenderAtScale\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/BitmapCache.xml\n- uid: System.Windows.Media.BitmapCache.SnapsToDevicePixels*\n  parent: System.Windows.Media.BitmapCache\n  isExternal: false\n  name: SnapsToDevicePixels\n  nameWithType: BitmapCache.SnapsToDevicePixels\n  fullName: BitmapCache.SnapsToDevicePixels\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media/BitmapCache.xml\n- uid: System.Windows.DependencyObject.Equals(System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DependencyObject.Equals(Object)\n  fullName: DependencyObject.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Windows.DependencyObject.GetHashCode\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DependencyObject.GetHashCode()\n  fullName: DependencyObject.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyProperty)\n  nameWithType: DependencyObject.ClearValue(DependencyProperty)\n  fullName: DependencyObject.ClearValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyPropertyKey)\n  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)\n  fullName: DependencyObject.ClearValue(DependencyPropertyKey)\n- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: CoerceValue(DependencyProperty)\n  nameWithType: DependencyObject.CoerceValue(DependencyProperty)\n  fullName: DependencyObject.CoerceValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.DependencyObjectType\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: DependencyObjectType\n  nameWithType: DependencyObject.DependencyObjectType\n  fullName: DependencyObject.DependencyObjectType\n- uid: System.Windows.DependencyObject.GetLocalValueEnumerator\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetLocalValueEnumerator()\n  nameWithType: DependencyObject.GetLocalValueEnumerator()\n  fullName: DependencyObject.GetLocalValueEnumerator()\n- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: InvalidateProperty(DependencyProperty)\n  nameWithType: DependencyObject.InvalidateProperty(DependencyProperty)\n  fullName: DependencyObject.InvalidateProperty(DependencyProperty)\n- uid: System.Windows.DependencyObject.IsSealed\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: IsSealed\n  nameWithType: DependencyObject.IsSealed\n  fullName: DependencyObject.IsSealed\n- uid: System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ReadLocalValue(DependencyProperty)\n  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)\n  fullName: DependencyObject.ReadLocalValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetCurrentValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyPropertyKey, Object)\n  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)\n  fullName: DependencyObject.SetValue(DependencyPropertyKey, Object)\n- uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ShouldSerializeProperty(DependencyProperty)\n  nameWithType: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n  fullName: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n- uid: System.Windows.Freezable.CanFreeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CanFreeze\n  nameWithType: Freezable.CanFreeze\n  fullName: Freezable.CanFreeze\n- uid: System.Windows.Freezable.Changed\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Changed\n  nameWithType: Freezable.Changed\n  fullName: Freezable.Changed\n- uid: System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: Freezable.CloneCore(Freezable)\n  fullName: Freezable.CloneCore(Freezable)\n- uid: System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: Freezable.CloneCurrentValueCore(Freezable)\n  fullName: Freezable.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Freezable.CreateInstance\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CreateInstance()\n  nameWithType: Freezable.CreateInstance()\n  fullName: Freezable.CreateInstance()\n- uid: System.Windows.Freezable.Freeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze()\n  nameWithType: Freezable.Freeze()\n  fullName: Freezable.Freeze()\n- uid: System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze(Freezable, Boolean)\n  nameWithType: Freezable.Freeze(Freezable, Boolean)\n  fullName: Freezable.Freeze(Freezable, Boolean)\n- uid: System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: FreezeCore(Boolean)\n  nameWithType: Animatable.FreezeCore(Boolean)\n  fullName: Animatable.FreezeCore(Boolean)\n- uid: System.Windows.Freezable.GetAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozen()\n  nameWithType: Freezable.GetAsFrozen()\n  fullName: Freezable.GetAsFrozen()\n- uid: System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: Freezable.GetAsFrozenCore(Freezable)\n  fullName: Freezable.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozen()\n  nameWithType: Freezable.GetCurrentValueAsFrozen()\n  fullName: Freezable.GetCurrentValueAsFrozen()\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: Freezable.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: Freezable.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.IsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: IsFrozen\n  nameWithType: Freezable.IsFrozen\n  fullName: Freezable.IsFrozen\n- uid: System.Windows.Freezable.OnChanged\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnChanged()\n  nameWithType: Freezable.OnChanged()\n  fullName: Freezable.OnChanged()\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n- uid: System.Windows.Freezable.ReadPreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: ReadPreamble()\n  nameWithType: Freezable.ReadPreamble()\n  fullName: Freezable.ReadPreamble()\n- uid: System.Windows.Freezable.WritePostscript\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePostscript()\n  nameWithType: Freezable.WritePostscript()\n  fullName: Freezable.WritePostscript()\n- uid: System.Windows.Freezable.WritePreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePreamble()\n  nameWithType: Freezable.WritePreamble()\n  fullName: Freezable.WritePreamble()\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ApplyAnimationClock(DependencyProperty, AnimationClock)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock)\n  fullName: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock)\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n  fullName: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: BeginAnimation(DependencyProperty, AnimationTimeline)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline)\n  fullName: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline)\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n  fullName: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n- uid: System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: GetAnimationBaseValue(DependencyProperty)\n  nameWithType: Animatable.GetAnimationBaseValue(DependencyProperty)\n  fullName: Animatable.GetAnimationBaseValue(DependencyProperty)\n- uid: System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: HasAnimatedProperties\n  nameWithType: Animatable.HasAnimatedProperties\n  fullName: Animatable.HasAnimatedProperties\n- uid: System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ShouldSerializeStoredWeakReference(DependencyObject)\n  nameWithType: Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n  fullName: Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n"}