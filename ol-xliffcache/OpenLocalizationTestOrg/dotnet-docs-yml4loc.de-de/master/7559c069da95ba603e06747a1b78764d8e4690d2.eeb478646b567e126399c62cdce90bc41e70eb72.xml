{"nodes":[{"content":"Provides a mechanism whereby types can declare that they can receive an expression (or another class) from a markup extension, where the output is a different property type than the target property. Do not use for .NET Framework 4 implementations.","nodes":[{"pos":[0,247],"content":"Provides a mechanism whereby types can declare that they can receive an expression (or another class) from a markup extension, where the output is a different property type than the target property. Do not use for .NET Framework 4 implementations.","nodes":[{"content":"Provides a mechanism whereby types can declare that they can receive an expression (or another class) from a markup extension, where the output is a different property type than the target property. Do not use for .NET Framework 4 implementations.","pos":[0,247],"nodes":[{"content":"Provides a mechanism whereby types can declare that they can receive an expression (or another class) from a markup extension, where the output is a different property type than the target property.","pos":[0,198]},{"content":"Do not use for .NET Framework 4 implementations.","pos":[199,247]}]}]}],"pos":[586,834],"yaml":true},{"content":"In [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)], <xref:System.Windows.Markup.IReceiveMarkupExtension> was a WPF-specific technique for permitting types to enter a different codepath whenever any of its XAML-accessible members where set as markup extensions during XAML parsing. In [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], this interface is obsolete, and is replaced with a .NET Framework XAML Services implementation for how markup extensions can receive services or types can invoke markup-extension specific setter logic.  \n  \n For [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] implementations, if types want to perform special processing when setting properties by markup extension rather than by other means, types should be defined with <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> attributes applied. The attribute specifies a callback, which is typically defined as a private member of the type.  \n  \n In infrastructure implementations of WPF classes, most cases where <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> is applied reference a `ReceiveMarkupExtension` method that previously implemented this interface, but now instead use context through the callback.","nodes":[{"pos":[0,554],"content":"In [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)], <xref:System.Windows.Markup.IReceiveMarkupExtension> was a WPF-specific technique for permitting types to enter a different codepath whenever any of its XAML-accessible members where set as markup extensions during XAML parsing. In [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], this interface is obsolete, and is replaced with a .NET Framework XAML Services implementation for how markup extensions can receive services or types can invoke markup-extension specific setter logic.","nodes":[{"content":"In <ph id=\"ph1\">[!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)]</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Markup.IReceiveMarkupExtension&gt;</ph> was a WPF-specific technique for permitting types to enter a different codepath whenever any of its XAML-accessible members where set as markup extensions during XAML parsing.","pos":[0,290],"source":"In [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)], <xref:System.Windows.Markup.IReceiveMarkupExtension> was a WPF-specific technique for permitting types to enter a different codepath whenever any of its XAML-accessible members where set as markup extensions during XAML parsing."},{"content":"In <ph id=\"ph1\">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, this interface is obsolete, and is replaced with a .NET Framework XAML Services implementation for how markup extensions can receive services or types can invoke markup-extension specific setter logic.","pos":[291,554],"source":" In [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], this interface is obsolete, and is replaced with a .NET Framework XAML Services implementation for how markup extensions can receive services or types can invoke markup-extension specific setter logic."}]},{"pos":[561,959],"content":"For [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] implementations, if types want to perform special processing when setting properties by markup extension rather than by other means, types should be defined with <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> attributes applied. The attribute specifies a callback, which is typically defined as a private member of the type.","nodes":[{"content":"For <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> implementations, if types want to perform special processing when setting properties by markup extension rather than by other means, types should be defined with <ph id=\"ph2\">&lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</ph> attributes applied.","pos":[0,302],"source":"For [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] implementations, if types want to perform special processing when setting properties by markup extension rather than by other means, types should be defined with <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> attributes applied."},{"content":"The attribute specifies a callback, which is typically defined as a private member of the type.","pos":[303,398]}]},{"pos":[966,1242],"content":"In infrastructure implementations of WPF classes, most cases where <ph id=\"ph1\">&lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</ph> is applied reference a <ph id=\"ph2\">`ReceiveMarkupExtension`</ph> method that previously implemented this interface, but now instead use context through the callback.","source":"In infrastructure implementations of WPF classes, most cases where <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> is applied reference a `ReceiveMarkupExtension` method that previously implemented this interface, but now instead use context through the callback."}],"pos":[845,2094],"yaml":true,"extradata":"MT"},{"content":"Provides the handling for markup extensions that provide property values. Do not use for [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] implementations; see <xref href=\"System.Windows.Markup.IReceiveMarkupExtension\"></xref>.","nodes":[{"pos":[0,235],"content":"Provides the handling for markup extensions that provide property values. Do not use for [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] implementations; see <xref href=\"System.Windows.Markup.IReceiveMarkupExtension\"></xref>.","nodes":[{"content":"Provides the handling for markup extensions that provide property values.","pos":[0,73]},{"content":"Do not use for <ph id=\"ph1\">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> implementations; see <ph id=\"ph2\">&lt;xref href=\"System.Windows.Markup.IReceiveMarkupExtension\"&gt;&lt;/xref&gt;</ph>.","pos":[74,235],"source":" Do not use for [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] implementations; see <xref href=\"System.Windows.Markup.IReceiveMarkupExtension\"></xref>."}]}],"pos":[3712,3948],"yaml":true},{"content":"The name of the target property.","nodes":[{"pos":[0,32],"content":"The name of the target property.","nodes":[{"content":"The name of the target property.","pos":[0,32]}]}],"pos":[4194,4227],"yaml":true},{"content":"The markup extension instance of the incoming data.","nodes":[{"pos":[0,51],"content":"The markup extension instance of the incoming data.","nodes":[{"content":"The markup extension instance of the incoming data.","pos":[0,51]}]}],"pos":[4322,4374],"yaml":true},{"content":"Can provide additional services that should be performed when processing the markup extension data for a property value.","nodes":[{"pos":[0,120],"content":"Can provide additional services that should be performed when processing the markup extension data for a property value.","nodes":[{"content":"Can provide additional services that should be performed when processing the markup extension data for a property value.","pos":[0,120]}]}],"pos":[4455,4576],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Markup.IReceiveMarkupExtension\n  commentId: T:System.Windows.Markup.IReceiveMarkupExtension\n  id: IReceiveMarkupExtension\n  children:\n  - System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)\n  langs:\n  - csharp\n  name: IReceiveMarkupExtension\n  nameWithType: IReceiveMarkupExtension\n  fullName: System.Windows.Markup.IReceiveMarkupExtension\n  type: Interface\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Markup\n  summary: Provides a mechanism whereby types can declare that they can receive an expression (or another class) from a markup extension, where the output is a different property type than the target property. Do not use for .NET Framework 4 implementations.\n  remarks: \"In [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)], <xref:System.Windows.Markup.IReceiveMarkupExtension> was a WPF-specific technique for permitting types to enter a different codepath whenever any of its XAML-accessible members where set as markup extensions during XAML parsing. In [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], this interface is obsolete, and is replaced with a .NET Framework XAML Services implementation for how markup extensions can receive services or types can invoke markup-extension specific setter logic.  \\n  \\n For [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] implementations, if types want to perform special processing when setting properties by markup extension rather than by other means, types should be defined with <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> attributes applied. The attribute specifies a callback, which is typically defined as a private member of the type.  \\n  \\n In infrastructure implementations of WPF classes, most cases where <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> is applied reference a `ReceiveMarkupExtension` method that previously implemented this interface, but now instead use context through the callback.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"IReceiveMarkupExtension has been deprecated. This interface is no longer in use.\")]\n\n      public interface IReceiveMarkupExtension\n  implements: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/IReceiveMarkupExtension.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)\n  commentId: M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)\n  id: ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)\n  parent: System.Windows.Markup.IReceiveMarkupExtension\n  langs:\n  - csharp\n  name: ReceiveMarkupExtension(String, MarkupExtension, IServiceProvider)\n  nameWithType: IReceiveMarkupExtension.ReceiveMarkupExtension(String, MarkupExtension, IServiceProvider)\n  fullName: IReceiveMarkupExtension.ReceiveMarkupExtension(String, MarkupExtension, IServiceProvider)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows.Markup\n  summary: Provides the handling for markup extensions that provide property values. Do not use for [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] implementations; see <xref href=\"System.Windows.Markup.IReceiveMarkupExtension\"></xref>.\n  syntax:\n    content: public void ReceiveMarkupExtension (string property, System.Windows.Markup.MarkupExtension markupExtension, IServiceProvider serviceProvider);\n    parameters:\n    - id: property\n      type: System.String\n      description: The name of the target property.\n    - id: markupExtension\n      type: System.Windows.Markup.MarkupExtension\n      description: The markup extension instance of the incoming data.\n    - id: serviceProvider\n      type: System.IServiceProvider\n      description: Can provide additional services that should be performed when processing the markup extension data for a property value.\n  overload: System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/IReceiveMarkupExtension.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\nreferences:\n- uid: System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)\n  parent: System.Windows.Markup.IReceiveMarkupExtension\n  isExternal: false\n  name: ReceiveMarkupExtension(String, MarkupExtension, IServiceProvider)\n  nameWithType: IReceiveMarkupExtension.ReceiveMarkupExtension(String, MarkupExtension, IServiceProvider)\n  fullName: IReceiveMarkupExtension.ReceiveMarkupExtension(String, MarkupExtension, IServiceProvider)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Markup.MarkupExtension\n  parent: System.Windows.Markup\n  isExternal: false\n  name: MarkupExtension\n  nameWithType: MarkupExtension\n  fullName: System.Windows.Markup.MarkupExtension\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: false\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension*\n  parent: System.Windows.Markup.IReceiveMarkupExtension\n  isExternal: false\n  name: ReceiveMarkupExtension\n  nameWithType: IReceiveMarkupExtension.ReceiveMarkupExtension\n  fullName: IReceiveMarkupExtension.ReceiveMarkupExtension\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/IReceiveMarkupExtension.xml\n"}