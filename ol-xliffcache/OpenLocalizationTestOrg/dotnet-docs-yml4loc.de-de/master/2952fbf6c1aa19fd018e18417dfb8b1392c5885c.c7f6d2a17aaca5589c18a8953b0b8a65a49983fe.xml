{"nodes":[{"content":"Contains a collection of locked configuration objects. This class cannot be inherited.","nodes":[{"pos":[0,86],"content":"Contains a collection of locked configuration objects. This class cannot be inherited.","nodes":[{"content":"Contains a collection of locked configuration objects. This class cannot be inherited.","pos":[0,86],"nodes":[{"content":"Contains a collection of locked configuration objects.","pos":[0,54]},{"content":"This class cannot be inherited.","pos":[55,86]}]}]}],"pos":[1615,1702],"yaml":true},{"content":"In a configuration file, a configuration section contains both attributes and elements. A <xref:System.Configuration.ConfigurationLockCollection> collection exists for the locked attributes of a configuration section, and is accessed through the <xref:System.Configuration.ConfigurationElement.LockAttributes%2A> property of the <xref:System.Configuration.ConfigurationElement> class. Another <xref:System.Configuration.ConfigurationLockCollection> collection exists for the locked elements of a configuration section, and is accessed through the <xref:System.Configuration.ConfigurationElement.LockElements%2A> property of the <xref:System.Configuration.ConfigurationElement> class.","nodes":[{"pos":[0,683],"content":"In a configuration file, a configuration section contains both attributes and elements. A <xref:System.Configuration.ConfigurationLockCollection> collection exists for the locked attributes of a configuration section, and is accessed through the <xref:System.Configuration.ConfigurationElement.LockAttributes%2A> property of the <xref:System.Configuration.ConfigurationElement> class. Another <xref:System.Configuration.ConfigurationLockCollection> collection exists for the locked elements of a configuration section, and is accessed through the <xref:System.Configuration.ConfigurationElement.LockElements%2A> property of the <xref:System.Configuration.ConfigurationElement> class.","nodes":[{"content":"In a configuration file, a configuration section contains both attributes and elements. A <xref:System.Configuration.ConfigurationLockCollection> collection exists for the locked attributes of a configuration section, and is accessed through the <xref:System.Configuration.ConfigurationElement.LockAttributes%2A> property of the <xref:System.Configuration.ConfigurationElement> class. Another <xref:System.Configuration.ConfigurationLockCollection> collection exists for the locked elements of a configuration section, and is accessed through the <xref:System.Configuration.ConfigurationElement.LockElements%2A> property of the <xref:System.Configuration.ConfigurationElement> class.","pos":[0,683],"nodes":[{"content":"In a configuration file, a configuration section contains both attributes and elements.","pos":[0,87]},{"content":"A <ph id=\"ph1\">&lt;xref:System.Configuration.ConfigurationLockCollection&gt;</ph> collection exists for the locked attributes of a configuration section, and is accessed through the <ph id=\"ph2\">&lt;xref:System.Configuration.ConfigurationElement.LockAttributes%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Configuration.ConfigurationElement&gt;</ph> class.","pos":[88,384],"source":" A <xref:System.Configuration.ConfigurationLockCollection> collection exists for the locked attributes of a configuration section, and is accessed through the <xref:System.Configuration.ConfigurationElement.LockAttributes%2A> property of the <xref:System.Configuration.ConfigurationElement> class."},{"content":"Another <ph id=\"ph1\">&lt;xref:System.Configuration.ConfigurationLockCollection&gt;</ph> collection exists for the locked elements of a configuration section, and is accessed through the <ph id=\"ph2\">&lt;xref:System.Configuration.ConfigurationElement.LockElements%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Configuration.ConfigurationElement&gt;</ph> class.","pos":[385,683],"source":" Another <xref:System.Configuration.ConfigurationLockCollection> collection exists for the locked elements of a configuration section, and is accessed through the <xref:System.Configuration.ConfigurationElement.LockElements%2A> property of the <xref:System.Configuration.ConfigurationElement> class."}]}]}],"pos":[1713,2397],"yaml":true,"extradata":"MT"},{"content":"Locks a configuration object by adding it to the collection.","nodes":[{"pos":[0,60],"content":"Locks a configuration object by adding it to the collection.","nodes":[{"content":"Locks a configuration object by adding it to the collection.","pos":[0,60]}]}],"pos":[4858,4919],"yaml":true},{"content":"Adding a configuration object to the <xref:System.Configuration.ConfigurationLockCollection> collection specifies that the configuration object is locked and cannot be modified until it has been removed from the collection.","nodes":[{"pos":[0,223],"content":"Adding a configuration object to the <xref:System.Configuration.ConfigurationLockCollection> collection specifies that the configuration object is locked and cannot be modified until it has been removed from the collection.","nodes":[{"content":"Adding a configuration object to the <ph id=\"ph1\">&lt;xref:System.Configuration.ConfigurationLockCollection&gt;</ph> collection specifies that the configuration object is locked and cannot be modified until it has been removed from the collection.","pos":[0,223],"source":"Adding a configuration object to the <xref:System.Configuration.ConfigurationLockCollection> collection specifies that the configuration object is locked and cannot be modified until it has been removed from the collection."}]}],"pos":[4930,5154],"yaml":true,"extradata":"MT"},{"content":"The name of the configuration object.","nodes":[{"pos":[0,37],"content":"The name of the configuration object.","nodes":[{"content":"The name of the configuration object.","pos":[0,37]}]}],"pos":[5960,5998],"yaml":true},{"content":"Occurs when the <code>name</code> does not match an existing configuration object within the collection.","nodes":[{"pos":[0,104],"content":"Occurs when the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not match an existing configuration object within the collection.","source":"Occurs when the <code>name</code> does not match an existing configuration object within the collection."}],"pos":[6222,6327],"yaml":true},{"content":"Gets a list of configuration objects contained in the collection.","nodes":[{"pos":[0,65],"content":"Gets a list of configuration objects contained in the collection.","nodes":[{"content":"Gets a list of configuration objects contained in the collection.","pos":[0,65]}]}],"pos":[7454,7520],"yaml":true},{"content":"A comma-delimited string that lists the lock configuration objects in the collection.","nodes":[{"pos":[0,85],"content":"A comma-delimited string that lists the lock configuration objects in the collection.","nodes":[{"content":"A comma-delimited string that lists the lock configuration objects in the collection.","pos":[0,85]}]}],"pos":[8339,8425],"yaml":true},{"content":"Clears all configuration objects from the collection.","nodes":[{"pos":[0,53],"content":"Clears all configuration objects from the collection.","nodes":[{"content":"Clears all configuration objects from the collection.","pos":[0,53]}]}],"pos":[9601,9655],"yaml":true},{"content":"Verifies whether a specific configuration object is locked.","nodes":[{"pos":[0,59],"content":"Verifies whether a specific configuration object is locked.","nodes":[{"content":"Verifies whether a specific configuration object is locked.","pos":[0,59]}]}],"pos":[11664,11724],"yaml":true},{"content":"The name of the configuration object to verify.","nodes":[{"pos":[0,47],"content":"The name of the configuration object to verify.","nodes":[{"content":"The name of the configuration object to verify.","pos":[0,47]}]}],"pos":[11859,11907],"yaml":true},{"content":"`true` if the <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> contains the specified configuration object; otherwise, `false`.","nodes":[{"pos":[0,148],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Configuration.ConfigurationLockCollection\"&gt;&lt;/xref&gt;</ph> contains the specified configuration object; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> contains the specified configuration object; otherwise, `false`."}],"pos":[11965,12116],"yaml":true},{"content":"Copies the entire <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection to a compatible one-dimensional <xref href=\"System.Array\"></xref>, starting at the specified index of the target array.","nodes":[{"pos":[0,218],"content":"Copies the entire <ph id=\"ph1\">&lt;xref href=\"System.Configuration.ConfigurationLockCollection\"&gt;&lt;/xref&gt;</ph> collection to a compatible one-dimensional <ph id=\"ph2\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph>, starting at the specified index of the target array.","source":"Copies the entire <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection to a compatible one-dimensional <xref href=\"System.Array\"></xref>, starting at the specified index of the target array."}],"pos":[13428,13647],"yaml":true},{"content":"A one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from the <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref>. The <xref href=\"System.Array\"></xref> must have zero-based indexing.","nodes":[{"pos":[0,247],"content":"A one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from the <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref>. The <xref href=\"System.Array\"></xref> must have zero-based indexing.","nodes":[{"content":"A one-dimensional <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> that is the destination of the elements copied from the <ph id=\"ph2\">&lt;xref href=\"System.Configuration.ConfigurationLockCollection\"&gt;&lt;/xref&gt;</ph>.","pos":[0,178],"source":"A one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from the <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref>."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> must have zero-based indexing.","pos":[179,247],"source":" The <xref href=\"System.Array\"></xref> must have zero-based indexing."}]}],"pos":[13797,14045],"yaml":true},{"content":"The zero-based index in <code>array</code> at which copying begins.","nodes":[{"pos":[0,67],"content":"The zero-based index in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which copying begins.","source":"The zero-based index in <code>array</code> at which copying begins."}],"pos":[14105,14173],"yaml":true},{"content":"Gets the number of locked configuration objects contained in the collection.","nodes":[{"pos":[0,76],"content":"Gets the number of locked configuration objects contained in the collection.","nodes":[{"content":"Gets the number of locked configuration objects contained in the collection.","pos":[0,76]}]}],"pos":[15338,15415],"yaml":true},{"content":"The number of locked configuration objects contained in the collection.","nodes":[{"pos":[0,71],"content":"The number of locked configuration objects contained in the collection.","nodes":[{"content":"The number of locked configuration objects contained in the collection.","pos":[0,71]}]}],"pos":[16214,16286],"yaml":true},{"content":"Gets an <xref href=\"System.Collections.IEnumerator\"></xref> object, which is used to iterate through this <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection.","nodes":[{"pos":[0,187],"content":"Gets an <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph> object, which is used to iterate through this <ph id=\"ph2\">&lt;xref href=\"System.Configuration.ConfigurationLockCollection\"&gt;&lt;/xref&gt;</ph> collection.","source":"Gets an <xref href=\"System.Collections.IEnumerator\"></xref> object, which is used to iterate through this <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection."}],"pos":[17502,17690],"yaml":true},{"content":"An <xref href=\"System.Collections.IEnumerator\"></xref> object.","nodes":[{"pos":[0,62],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph> object.","source":"An <xref href=\"System.Collections.IEnumerator\"></xref> object."}],"pos":[17862,17925],"yaml":true},{"content":"Gets a value specifying whether the collection of locked objects has parent elements.","nodes":[{"pos":[0,85],"content":"Gets a value specifying whether the collection of locked objects has parent elements.","nodes":[{"content":"Gets a value specifying whether the collection of locked objects has parent elements.","pos":[0,85]}]}],"pos":[19169,19255],"yaml":true},{"content":"`true` if the <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection has parent elements; otherwise, `false`.","nodes":[{"pos":[0,135],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Configuration.ConfigurationLockCollection\"&gt;&lt;/xref&gt;</ph> collection has parent elements; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection has parent elements; otherwise, `false`."}],"pos":[20081,20219],"yaml":true},{"content":"Gets a value specifying whether the collection has been modified.","nodes":[{"pos":[0,65],"content":"Gets a value specifying whether the collection has been modified.","nodes":[{"content":"Gets a value specifying whether the collection has been modified.","pos":[0,65]}]}],"pos":[21425,21491],"yaml":true},{"content":"`true` if the <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection has been modified; otherwise, `false`.","nodes":[{"pos":[0,133],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Configuration.ConfigurationLockCollection\"&gt;&lt;/xref&gt;</ph> collection has been modified; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection has been modified; otherwise, `false`."}],"pos":[22303,22439],"yaml":true},{"content":"Verifies whether a specific configuration object is read-only.","nodes":[{"pos":[0,62],"content":"Verifies whether a specific configuration object is read-only.","nodes":[{"content":"Verifies whether a specific configuration object is read-only.","pos":[0,62]}]}],"pos":[23705,23768],"yaml":true},{"content":"The name of the configuration object to verify.","nodes":[{"pos":[0,47],"content":"The name of the configuration object to verify.","nodes":[{"content":"The name of the configuration object to verify.","pos":[0,47]}]}],"pos":[24602,24650],"yaml":true},{"content":"`true` if the specified configuration object in the <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection is read-only; otherwise, `false`.","nodes":[{"pos":[0,166],"content":"<ph id=\"ph1\">`true`</ph> if the specified configuration object in the <ph id=\"ph2\">&lt;xref href=\"System.Configuration.ConfigurationLockCollection\"&gt;&lt;/xref&gt;</ph> collection is read-only; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the specified configuration object in the <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection is read-only; otherwise, `false`."}],"pos":[24708,24877],"yaml":true},{"content":"The specified configuration object is not in the collection.","nodes":[{"pos":[0,60],"content":"The specified configuration object is not in the collection.","nodes":[{"content":"The specified configuration object is not in the collection.","pos":[0,60]}]}],"pos":[25108,25169],"yaml":true},{"content":"Gets a value specifying whether the collection is synchronized.","nodes":[{"pos":[0,63],"content":"Gets a value specifying whether the collection is synchronized.","nodes":[{"content":"Gets a value specifying whether the collection is synchronized.","pos":[0,63]}]}],"pos":[26302,26366],"yaml":true},{"content":"`true` if the <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection is synchronized; otherwise, `false`.","nodes":[{"pos":[0,131],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Configuration.ConfigurationLockCollection\"&gt;&lt;/xref&gt;</ph> collection is synchronized; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection is synchronized; otherwise, `false`."}],"pos":[26483,26617],"yaml":true},{"content":"Removes a configuration object from the collection.","nodes":[{"pos":[0,51],"content":"Removes a configuration object from the collection.","nodes":[{"content":"Removes a configuration object from the collection.","pos":[0,51]}]}],"pos":[27863,27915],"yaml":true},{"content":"The name of the configuration object.","nodes":[{"pos":[0,37],"content":"The name of the configuration object.","nodes":[{"content":"The name of the configuration object.","pos":[0,37]}]}],"pos":[28745,28783],"yaml":true},{"content":"Occurs when the <code>name</code> does not match an existing configuration object within the collection.","nodes":[{"pos":[0,104],"content":"Occurs when the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not match an existing configuration object within the collection.","source":"Occurs when the <code>name</code> does not match an existing configuration object within the collection."}],"pos":[29010,29115],"yaml":true},{"content":"Locks a set of configuration objects based on the supplied list.","nodes":[{"pos":[0,64],"content":"Locks a set of configuration objects based on the supplied list.","nodes":[{"content":"Locks a set of configuration objects based on the supplied list.","pos":[0,64]}]}],"pos":[30297,30362],"yaml":true},{"content":"A comma-delimited string.","nodes":[{"pos":[0,25],"content":"A comma-delimited string.","nodes":[{"content":"A comma-delimited string.","pos":[0,25]}]}],"pos":[31220,31246],"yaml":true},{"content":"Occurs when an item in the <code>attributeList</code> parameter is not a valid lockable configuration attribute.","nodes":[{"pos":[0,112],"content":"Occurs when an item in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">attributeList</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid lockable configuration attribute.","source":"Occurs when an item in the <code>attributeList</code> parameter is not a valid lockable configuration attribute."}],"pos":[31478,31591],"yaml":true},{"content":"Gets an object used to synchronize access to this <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection.","nodes":[{"pos":[0,131],"content":"Gets an object used to synchronize access to this <ph id=\"ph1\">&lt;xref href=\"System.Configuration.ConfigurationLockCollection\"&gt;&lt;/xref&gt;</ph> collection.","source":"Gets an object used to synchronize access to this <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection."}],"pos":[32688,32820],"yaml":true},{"content":"An object used to synchronize access to this <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection.","nodes":[{"pos":[0,126],"content":"An object used to synchronize access to this <ph id=\"ph1\">&lt;xref href=\"System.Configuration.ConfigurationLockCollection\"&gt;&lt;/xref&gt;</ph> collection.","source":"An object used to synchronize access to this <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection."}],"pos":[32932,33059],"yaml":true},{"content":"Copies the entire <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection to a compatible one-dimensional <xref href=\"System.Array\"></xref>, starting at the specified index of the target array.","nodes":[{"pos":[0,218],"content":"Copies the entire <ph id=\"ph1\">&lt;xref href=\"System.Configuration.ConfigurationLockCollection\"&gt;&lt;/xref&gt;</ph> collection to a compatible one-dimensional <ph id=\"ph2\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph>, starting at the specified index of the target array.","source":"Copies the entire <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection to a compatible one-dimensional <xref href=\"System.Array\"></xref>, starting at the specified index of the target array."}],"pos":[34496,34715],"yaml":true},{"content":"A one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from the <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection. The <xref href=\"System.Array\"></xref> must have zero-based indexing.","nodes":[{"pos":[0,258],"content":"A one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from the <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection. The <xref href=\"System.Array\"></xref> must have zero-based indexing.","nodes":[{"content":"A one-dimensional <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> that is the destination of the elements copied from the <ph id=\"ph2\">&lt;xref href=\"System.Configuration.ConfigurationLockCollection\"&gt;&lt;/xref&gt;</ph> collection.","pos":[0,189],"source":"A one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from the <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> must have zero-based indexing.","pos":[190,258],"source":" The <xref href=\"System.Array\"></xref> must have zero-based indexing."}]}],"pos":[34864,35123],"yaml":true},{"content":"The zero-based index in <code>array</code> at which copying begins.","nodes":[{"pos":[0,67],"content":"The zero-based index in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which copying begins.","source":"The zero-based index in <code>array</code> at which copying begins."}],"pos":[35183,35251],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.ConfigurationLockCollection\n  commentId: T:System.Configuration.ConfigurationLockCollection\n  id: ConfigurationLockCollection\n  children:\n  - System.Configuration.ConfigurationLockCollection.Add(System.String)\n  - System.Configuration.ConfigurationLockCollection.AttributeList\n  - System.Configuration.ConfigurationLockCollection.Clear\n  - System.Configuration.ConfigurationLockCollection.Contains(System.String)\n  - System.Configuration.ConfigurationLockCollection.CopyTo(System.String[],System.Int32)\n  - System.Configuration.ConfigurationLockCollection.Count\n  - System.Configuration.ConfigurationLockCollection.GetEnumerator\n  - System.Configuration.ConfigurationLockCollection.HasParentElements\n  - System.Configuration.ConfigurationLockCollection.IsModified\n  - System.Configuration.ConfigurationLockCollection.IsReadOnly(System.String)\n  - System.Configuration.ConfigurationLockCollection.IsSynchronized\n  - System.Configuration.ConfigurationLockCollection.Remove(System.String)\n  - System.Configuration.ConfigurationLockCollection.SetFromList(System.String)\n  - System.Configuration.ConfigurationLockCollection.SyncRoot\n  - System.Configuration.ConfigurationLockCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  langs:\n  - csharp\n  name: ConfigurationLockCollection\n  nameWithType: ConfigurationLockCollection\n  fullName: System.Configuration.ConfigurationLockCollection\n  type: Class\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Contains a collection of locked configuration objects. This class cannot be inherited.\n  remarks: In a configuration file, a configuration section contains both attributes and elements. A <xref:System.Configuration.ConfigurationLockCollection> collection exists for the locked attributes of a configuration section, and is accessed through the <xref:System.Configuration.ConfigurationElement.LockAttributes%2A> property of the <xref:System.Configuration.ConfigurationElement> class. Another <xref:System.Configuration.ConfigurationLockCollection> collection exists for the locked elements of a configuration section, and is accessed through the <xref:System.Configuration.ConfigurationElement.LockElements%2A> property of the <xref:System.Configuration.ConfigurationElement> class.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Configuration.ConfigurationLockCollection> type.  \\n  \\n [!code-csharp[System.Configuration.ConfigurationLockCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationLockCollection/CS/ConfigurationLockCollection.cs#1)]\\n [!code-vb[System.Configuration.ConfigurationLockCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationLockCollection/VB/ConfigurationLockCollection.vb#1)]\"\n  syntax:\n    content: 'public sealed class ConfigurationLockCollection : System.Collections.ICollection'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.ICollection\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationLockCollection.Add(System.String)\n  commentId: M:System.Configuration.ConfigurationLockCollection.Add(System.String)\n  id: Add(System.String)\n  parent: System.Configuration.ConfigurationLockCollection\n  langs:\n  - csharp\n  name: Add(String)\n  nameWithType: ConfigurationLockCollection.Add(String)\n  fullName: ConfigurationLockCollection.Add(String)\n  type: Method\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Locks a configuration object by adding it to the collection.\n  remarks: Adding a configuration object to the <xref:System.Configuration.ConfigurationLockCollection> collection specifies that the configuration object is locked and cannot be modified until it has been removed from the collection.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Configuration.ConfigurationLockCollection.Add%2A> method. This code example is part of a larger example provided for the <xref:System.Configuration.ConfigurationLockCollection> class.  \\n  \\n [!code-csharp[System.Configuration.ConfigurationLockCollection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationLockCollection/CS/ConfigurationLockCollection.cs#3)]\\n [!code-vb[System.Configuration.ConfigurationLockCollection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationLockCollection/VB/ConfigurationLockCollection.vb#3)]\"\n  syntax:\n    content: public void Add (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the configuration object.\n  overload: System.Configuration.ConfigurationLockCollection.Add*\n  exceptions:\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: Occurs when the <code>name</code> does not match an existing configuration object within the collection.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationLockCollection.AttributeList\n  commentId: P:System.Configuration.ConfigurationLockCollection.AttributeList\n  id: AttributeList\n  parent: System.Configuration.ConfigurationLockCollection\n  langs:\n  - csharp\n  name: AttributeList\n  nameWithType: ConfigurationLockCollection.AttributeList\n  fullName: ConfigurationLockCollection.AttributeList\n  type: Property\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Gets a list of configuration objects contained in the collection.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Configuration.ConfigurationLockCollection.AttributeList%2A> property. This code example is part of a larger example provided for the <xref:System.Configuration.ConfigurationLockCollection> class.  \\n  \\n [!code-csharp[System.Configuration.ConfigurationLockCollection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationLockCollection/CS/ConfigurationLockCollection.cs#5)]\\n [!code-vb[System.Configuration.ConfigurationLockCollection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationLockCollection/VB/ConfigurationLockCollection.vb#5)]\"\n  syntax:\n    content: public string AttributeList { get; }\n    return:\n      type: System.String\n      description: A comma-delimited string that lists the lock configuration objects in the collection.\n  overload: System.Configuration.ConfigurationLockCollection.AttributeList*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationLockCollection.Clear\n  commentId: M:System.Configuration.ConfigurationLockCollection.Clear\n  id: Clear\n  parent: System.Configuration.ConfigurationLockCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: ConfigurationLockCollection.Clear()\n  fullName: ConfigurationLockCollection.Clear()\n  type: Method\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Clears all configuration objects from the collection.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Configuration.ConfigurationLockCollection.Clear%2A> method. This code example is part of a larger example provided for the <xref:System.Configuration.ConfigurationLockCollection> class.  \\n  \\n [!code-csharp[System.Configuration.ConfigurationLockCollection#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationLockCollection/CS/ConfigurationLockCollection.cs#11)]\\n [!code-vb[System.Configuration.ConfigurationLockCollection#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationLockCollection/VB/ConfigurationLockCollection.vb#11)]\"\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Configuration.ConfigurationLockCollection.Clear*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationLockCollection.Contains(System.String)\n  commentId: M:System.Configuration.ConfigurationLockCollection.Contains(System.String)\n  id: Contains(System.String)\n  parent: System.Configuration.ConfigurationLockCollection\n  langs:\n  - csharp\n  name: Contains(String)\n  nameWithType: ConfigurationLockCollection.Contains(String)\n  fullName: ConfigurationLockCollection.Contains(String)\n  type: Method\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Verifies whether a specific configuration object is locked.\n  syntax:\n    content: public bool Contains (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the configuration object to verify.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> contains the specified configuration object; otherwise, `false`.'\n  overload: System.Configuration.ConfigurationLockCollection.Contains*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationLockCollection.CopyTo(System.String[],System.Int32)\n  commentId: M:System.Configuration.ConfigurationLockCollection.CopyTo(System.String[],System.Int32)\n  id: CopyTo(System.String[],System.Int32)\n  parent: System.Configuration.ConfigurationLockCollection\n  langs:\n  - csharp\n  name: CopyTo(String[], Int32)\n  nameWithType: ConfigurationLockCollection.CopyTo(String[], Int32)\n  fullName: ConfigurationLockCollection.CopyTo(String[], Int32)\n  type: Method\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Copies the entire <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection to a compatible one-dimensional <xref href=\"System.Array\"></xref>, starting at the specified index of the target array.\n  syntax:\n    content: public void CopyTo (string[] array, int index);\n    parameters:\n    - id: array\n      type: System.String[]\n      description: A one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from the <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref>. The <xref href=\"System.Array\"></xref> must have zero-based indexing.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in <code>array</code> at which copying begins.\n  overload: System.Configuration.ConfigurationLockCollection.CopyTo*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationLockCollection.Count\n  commentId: P:System.Configuration.ConfigurationLockCollection.Count\n  id: Count\n  parent: System.Configuration.ConfigurationLockCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: ConfigurationLockCollection.Count\n  fullName: ConfigurationLockCollection.Count\n  type: Property\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Gets the number of locked configuration objects contained in the collection.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Configuration.ConfigurationLockCollection.Count%2A> property. This code example is part of a larger example provided for the <xref:System.Configuration.ConfigurationLockCollection> class.  \\n  \\n [!code-csharp[System.Configuration.ConfigurationLockCollection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationLockCollection/CS/ConfigurationLockCollection.cs#4)]\\n [!code-vb[System.Configuration.ConfigurationLockCollection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationLockCollection/VB/ConfigurationLockCollection.vb#4)]\"\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of locked configuration objects contained in the collection.\n  overload: System.Configuration.ConfigurationLockCollection.Count*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationLockCollection.GetEnumerator\n  commentId: M:System.Configuration.ConfigurationLockCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Configuration.ConfigurationLockCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: ConfigurationLockCollection.GetEnumerator()\n  fullName: ConfigurationLockCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Gets an <xref href=\"System.Collections.IEnumerator\"></xref> object, which is used to iterate through this <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection.\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref href=\"System.Collections.IEnumerator\"></xref> object.\n  overload: System.Configuration.ConfigurationLockCollection.GetEnumerator*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationLockCollection.HasParentElements\n  commentId: P:System.Configuration.ConfigurationLockCollection.HasParentElements\n  id: HasParentElements\n  parent: System.Configuration.ConfigurationLockCollection\n  langs:\n  - csharp\n  name: HasParentElements\n  nameWithType: ConfigurationLockCollection.HasParentElements\n  fullName: ConfigurationLockCollection.HasParentElements\n  type: Property\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Gets a value specifying whether the collection of locked objects has parent elements.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Configuration.ConfigurationLockCollection.HasParentElements%2A> property. This code example is part of a larger example provided for the <xref:System.Configuration.ConfigurationLockCollection> class.  \\n  \\n [!code-csharp[System.Configuration.ConfigurationLockCollection#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationLockCollection/CS/ConfigurationLockCollection.cs#7)]\\n [!code-vb[System.Configuration.ConfigurationLockCollection#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationLockCollection/VB/ConfigurationLockCollection.vb#7)]\"\n  syntax:\n    content: public bool HasParentElements { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection has parent elements; otherwise, `false`.'\n  overload: System.Configuration.ConfigurationLockCollection.HasParentElements*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationLockCollection.IsModified\n  commentId: P:System.Configuration.ConfigurationLockCollection.IsModified\n  id: IsModified\n  parent: System.Configuration.ConfigurationLockCollection\n  langs:\n  - csharp\n  name: IsModified\n  nameWithType: ConfigurationLockCollection.IsModified\n  fullName: ConfigurationLockCollection.IsModified\n  type: Property\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Gets a value specifying whether the collection has been modified.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Configuration.ConfigurationLockCollection.IsModified%2A> property. This code example is part of a larger example provided for the <xref:System.Configuration.ConfigurationLockCollection> class.  \\n  \\n [!code-csharp[System.Configuration.ConfigurationLockCollection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationLockCollection/CS/ConfigurationLockCollection.cs#8)]\\n [!code-vb[System.Configuration.ConfigurationLockCollection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationLockCollection/VB/ConfigurationLockCollection.vb#8)]\"\n  syntax:\n    content: public bool IsModified { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection has been modified; otherwise, `false`.'\n  overload: System.Configuration.ConfigurationLockCollection.IsModified*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationLockCollection.IsReadOnly(System.String)\n  commentId: M:System.Configuration.ConfigurationLockCollection.IsReadOnly(System.String)\n  id: IsReadOnly(System.String)\n  parent: System.Configuration.ConfigurationLockCollection\n  langs:\n  - csharp\n  name: IsReadOnly(String)\n  nameWithType: ConfigurationLockCollection.IsReadOnly(String)\n  fullName: ConfigurationLockCollection.IsReadOnly(String)\n  type: Method\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Verifies whether a specific configuration object is read-only.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Configuration.ConfigurationLockCollection.IsReadOnly%2A> method. This code example is part of a larger example provided for the <xref:System.Configuration.ConfigurationLockCollection> class.  \\n  \\n [!code-csharp[System.Configuration.ConfigurationLockCollection#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationLockCollection/CS/ConfigurationLockCollection.cs#9)]\\n [!code-vb[System.Configuration.ConfigurationLockCollection#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationLockCollection/VB/ConfigurationLockCollection.vb#9)]\"\n  syntax:\n    content: public bool IsReadOnly (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the configuration object to verify.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified configuration object in the <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection is read-only; otherwise, `false`.'\n  overload: System.Configuration.ConfigurationLockCollection.IsReadOnly*\n  exceptions:\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: The specified configuration object is not in the collection.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationLockCollection.IsSynchronized\n  commentId: P:System.Configuration.ConfigurationLockCollection.IsSynchronized\n  id: IsSynchronized\n  parent: System.Configuration.ConfigurationLockCollection\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: ConfigurationLockCollection.IsSynchronized\n  fullName: ConfigurationLockCollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Gets a value specifying whether the collection is synchronized.\n  syntax:\n    content: public bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection is synchronized; otherwise, `false`.'\n  overload: System.Configuration.ConfigurationLockCollection.IsSynchronized*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationLockCollection.Remove(System.String)\n  commentId: M:System.Configuration.ConfigurationLockCollection.Remove(System.String)\n  id: Remove(System.String)\n  parent: System.Configuration.ConfigurationLockCollection\n  langs:\n  - csharp\n  name: Remove(String)\n  nameWithType: ConfigurationLockCollection.Remove(String)\n  fullName: ConfigurationLockCollection.Remove(String)\n  type: Method\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Removes a configuration object from the collection.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Configuration.ConfigurationLockCollection.Remove%2A> method. This code example is part of a larger example provided for the <xref:System.Configuration.ConfigurationLockCollection> class.  \\n  \\n [!code-csharp[System.Configuration.ConfigurationLockCollection#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationLockCollection/CS/ConfigurationLockCollection.cs#10)]\\n [!code-vb[System.Configuration.ConfigurationLockCollection#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationLockCollection/VB/ConfigurationLockCollection.vb#10)]\"\n  syntax:\n    content: public void Remove (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the configuration object.\n  overload: System.Configuration.ConfigurationLockCollection.Remove*\n  exceptions:\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: Occurs when the <code>name</code> does not match an existing configuration object within the collection.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationLockCollection.SetFromList(System.String)\n  commentId: M:System.Configuration.ConfigurationLockCollection.SetFromList(System.String)\n  id: SetFromList(System.String)\n  parent: System.Configuration.ConfigurationLockCollection\n  langs:\n  - csharp\n  name: SetFromList(String)\n  nameWithType: ConfigurationLockCollection.SetFromList(String)\n  fullName: ConfigurationLockCollection.SetFromList(String)\n  type: Method\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Locks a set of configuration objects based on the supplied list.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Configuration.ConfigurationLockCollection.SetFromList%2A> method. This code example is part of a larger example provided for the <xref:System.Configuration.ConfigurationLockCollection> class.  \\n  \\n [!code-csharp[System.Configuration.ConfigurationLockCollection#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationLockCollection/CS/ConfigurationLockCollection.cs#12)]\\n [!code-vb[System.Configuration.ConfigurationLockCollection#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationLockCollection/VB/ConfigurationLockCollection.vb#12)]\"\n  syntax:\n    content: public void SetFromList (string attributeList);\n    parameters:\n    - id: attributeList\n      type: System.String\n      description: A comma-delimited string.\n  overload: System.Configuration.ConfigurationLockCollection.SetFromList*\n  exceptions:\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: Occurs when an item in the <code>attributeList</code> parameter is not a valid lockable configuration attribute.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationLockCollection.SyncRoot\n  commentId: P:System.Configuration.ConfigurationLockCollection.SyncRoot\n  id: SyncRoot\n  parent: System.Configuration.ConfigurationLockCollection\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: ConfigurationLockCollection.SyncRoot\n  fullName: ConfigurationLockCollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Gets an object used to synchronize access to this <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection.\n  syntax:\n    content: public object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: An object used to synchronize access to this <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection.\n  overload: System.Configuration.ConfigurationLockCollection.SyncRoot*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationLockCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  commentId: M:System.Configuration.ConfigurationLockCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Configuration.ConfigurationLockCollection\n  langs:\n  - csharp\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: ConfigurationLockCollection.ICollection.CopyTo(Array, Int32)\n  fullName: ConfigurationLockCollection.ICollection.CopyTo(Array, Int32)\n  type: Method\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Copies the entire <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection to a compatible one-dimensional <xref href=\"System.Array\"></xref>, starting at the specified index of the target array.\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: A one-dimensional <xref href=\"System.Array\"></xref> that is the destination of the elements copied from the <xref href=\"System.Configuration.ConfigurationLockCollection\"></xref> collection. The <xref href=\"System.Array\"></xref> must have zero-based indexing.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in <code>array</code> at which copying begins.\n  overload: System.Configuration.ConfigurationLockCollection.System#Collections#ICollection#CopyTo*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Configuration.ConfigurationErrorsException\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationErrorsException\n  nameWithType: ConfigurationErrorsException\n  fullName: System.Configuration.ConfigurationErrorsException\n- uid: System.Configuration.ConfigurationLockCollection.Add(System.String)\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: Add(String)\n  nameWithType: ConfigurationLockCollection.Add(String)\n  fullName: ConfigurationLockCollection.Add(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Configuration.ConfigurationLockCollection.AttributeList\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: AttributeList\n  nameWithType: ConfigurationLockCollection.AttributeList\n  fullName: ConfigurationLockCollection.AttributeList\n- uid: System.Configuration.ConfigurationLockCollection.Clear\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: ConfigurationLockCollection.Clear()\n  fullName: ConfigurationLockCollection.Clear()\n- uid: System.Configuration.ConfigurationLockCollection.Contains(System.String)\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: Contains(String)\n  nameWithType: ConfigurationLockCollection.Contains(String)\n  fullName: ConfigurationLockCollection.Contains(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Configuration.ConfigurationLockCollection.CopyTo(System.String[],System.Int32)\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: CopyTo(String[], Int32)\n  nameWithType: ConfigurationLockCollection.CopyTo(String[], Int32)\n  fullName: ConfigurationLockCollection.CopyTo(String[], Int32)\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Configuration.ConfigurationLockCollection.Count\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: Count\n  nameWithType: ConfigurationLockCollection.Count\n  fullName: ConfigurationLockCollection.Count\n- uid: System.Configuration.ConfigurationLockCollection.GetEnumerator\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: ConfigurationLockCollection.GetEnumerator()\n  fullName: ConfigurationLockCollection.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Configuration.ConfigurationLockCollection.HasParentElements\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: HasParentElements\n  nameWithType: ConfigurationLockCollection.HasParentElements\n  fullName: ConfigurationLockCollection.HasParentElements\n- uid: System.Configuration.ConfigurationLockCollection.IsModified\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: IsModified\n  nameWithType: ConfigurationLockCollection.IsModified\n  fullName: ConfigurationLockCollection.IsModified\n- uid: System.Configuration.ConfigurationLockCollection.IsReadOnly(System.String)\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: IsReadOnly(String)\n  nameWithType: ConfigurationLockCollection.IsReadOnly(String)\n  fullName: ConfigurationLockCollection.IsReadOnly(String)\n- uid: System.Configuration.ConfigurationLockCollection.IsSynchronized\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: ConfigurationLockCollection.IsSynchronized\n  fullName: ConfigurationLockCollection.IsSynchronized\n- uid: System.Configuration.ConfigurationLockCollection.Remove(System.String)\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: Remove(String)\n  nameWithType: ConfigurationLockCollection.Remove(String)\n  fullName: ConfigurationLockCollection.Remove(String)\n- uid: System.Configuration.ConfigurationLockCollection.SetFromList(System.String)\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: SetFromList(String)\n  nameWithType: ConfigurationLockCollection.SetFromList(String)\n  fullName: ConfigurationLockCollection.SetFromList(String)\n- uid: System.Configuration.ConfigurationLockCollection.SyncRoot\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: ConfigurationLockCollection.SyncRoot\n  fullName: ConfigurationLockCollection.SyncRoot\n- uid: System.Configuration.ConfigurationLockCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: ConfigurationLockCollection.ICollection.CopyTo(Array, Int32)\n  fullName: ConfigurationLockCollection.ICollection.CopyTo(Array, Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Configuration.ConfigurationLockCollection.Add*\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: Add\n  nameWithType: ConfigurationLockCollection.Add\n  fullName: ConfigurationLockCollection.Add\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n- uid: System.Configuration.ConfigurationLockCollection.AttributeList*\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: AttributeList\n  nameWithType: ConfigurationLockCollection.AttributeList\n  fullName: ConfigurationLockCollection.AttributeList\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n- uid: System.Configuration.ConfigurationLockCollection.Clear*\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: Clear\n  nameWithType: ConfigurationLockCollection.Clear\n  fullName: ConfigurationLockCollection.Clear\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n- uid: System.Configuration.ConfigurationLockCollection.Contains*\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: Contains\n  nameWithType: ConfigurationLockCollection.Contains\n  fullName: ConfigurationLockCollection.Contains\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n- uid: System.Configuration.ConfigurationLockCollection.CopyTo*\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: ConfigurationLockCollection.CopyTo\n  fullName: ConfigurationLockCollection.CopyTo\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n- uid: System.Configuration.ConfigurationLockCollection.Count*\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: Count\n  nameWithType: ConfigurationLockCollection.Count\n  fullName: ConfigurationLockCollection.Count\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n- uid: System.Configuration.ConfigurationLockCollection.GetEnumerator*\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: ConfigurationLockCollection.GetEnumerator\n  fullName: ConfigurationLockCollection.GetEnumerator\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n- uid: System.Configuration.ConfigurationLockCollection.HasParentElements*\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: HasParentElements\n  nameWithType: ConfigurationLockCollection.HasParentElements\n  fullName: ConfigurationLockCollection.HasParentElements\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n- uid: System.Configuration.ConfigurationLockCollection.IsModified*\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: IsModified\n  nameWithType: ConfigurationLockCollection.IsModified\n  fullName: ConfigurationLockCollection.IsModified\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n- uid: System.Configuration.ConfigurationLockCollection.IsReadOnly*\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: ConfigurationLockCollection.IsReadOnly\n  fullName: ConfigurationLockCollection.IsReadOnly\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n- uid: System.Configuration.ConfigurationLockCollection.IsSynchronized*\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: ConfigurationLockCollection.IsSynchronized\n  fullName: ConfigurationLockCollection.IsSynchronized\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n- uid: System.Configuration.ConfigurationLockCollection.Remove*\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: Remove\n  nameWithType: ConfigurationLockCollection.Remove\n  fullName: ConfigurationLockCollection.Remove\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n- uid: System.Configuration.ConfigurationLockCollection.SetFromList*\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: SetFromList\n  nameWithType: ConfigurationLockCollection.SetFromList\n  fullName: ConfigurationLockCollection.SetFromList\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n- uid: System.Configuration.ConfigurationLockCollection.SyncRoot*\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: ConfigurationLockCollection.SyncRoot\n  fullName: ConfigurationLockCollection.SyncRoot\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n- uid: System.Configuration.ConfigurationLockCollection.System#Collections#ICollection#CopyTo*\n  parent: System.Configuration.ConfigurationLockCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: ConfigurationLockCollection.System.Collections.ICollection.CopyTo\n  fullName: ConfigurationLockCollection.System.Collections.ICollection.CopyTo\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationLockCollection.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n"}