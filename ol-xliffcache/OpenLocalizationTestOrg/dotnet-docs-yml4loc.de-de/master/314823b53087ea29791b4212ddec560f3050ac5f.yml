### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D
  commentId: T:System.Windows.Input.Manipulations.InertiaProcessor2D
  id: InertiaProcessor2D
  children:
  - System.Windows.Input.Manipulations.InertiaProcessor2D.#ctor
  - System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(System.Int64)
  - System.Windows.Input.Manipulations.InertiaProcessor2D.Completed
  - System.Windows.Input.Manipulations.InertiaProcessor2D.Delta
  - System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior
  - System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX
  - System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY
  - System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning
  - System.Windows.Input.Manipulations.InertiaProcessor2D.Process(System.Int64)
  - System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior
  - System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters(System.Windows.Input.Manipulations.InertiaParameters2D)
  - System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior
  langs:
  - csharp
  name: InertiaProcessor2D
  nameWithType: InertiaProcessor2D
  fullName: System.Windows.Input.Manipulations.InertiaProcessor2D
  type: Class
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: Implements the extrapolation of a manipulation's position, orientation, and average radius.
  remarks: "An <xref:System.Windows.Input.Manipulations.InertiaProcessor2D> object enables your application to extrapolate an element's location, orientation, and other properties by simulating real-world behavior.  \n  \n For instance, when a user moves an element and then releases it, the element can continue moving, decelerate, and then slowly stop. An inertia processor implements this behavior by causing the affine 2-D values (origin, scale, translation, and rotation) to change over a specified time at a specified deceleration rate.  \n  \n An inertia processor by itself does not cause an element to move and decelerate. Your application receives information from an inertia processor and applies the values as needed to an application-specific element. Typically, an application uses the information received from an inertia processor to change the location, size or orientation of an element.  \n  \n Inertia processing is typically used in conjunction with manipulation processing. For more information, see the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D> class."
  syntax:
    content: public class InertiaProcessor2D
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/InertiaProcessor2D.xml
  ms.technology:
  - dotnet-wpf
  author: Xansky
  ms.author: mhopkins
  manager: markl
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.#ctor
  commentId: M:System.Windows.Input.Manipulations.InertiaProcessor2D.#ctor
  id: '#ctor'
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: InertiaProcessor2D()
  nameWithType: InertiaProcessor2D.InertiaProcessor2D()
  fullName: InertiaProcessor2D.InertiaProcessor2D()
  type: Constructor
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: Initializes a new instance of the <xref href="System.Windows.Input.Manipulations.InertiaProcessor2D"></xref> class.
  syntax:
    content: public InertiaProcessor2D ();
    parameters: []
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/InertiaProcessor2D.xml
  ms.technology:
  - dotnet-wpf
  author: Xansky
  ms.author: mhopkins
  manager: markl
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(System.Int64)
  commentId: M:System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(System.Int64)
  id: Complete(System.Int64)
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: Complete(Int64)
  nameWithType: InertiaProcessor2D.Complete(Int64)
  fullName: InertiaProcessor2D.Complete(Int64)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: Completes final extrapolation by using the specified timestamp and raises the <xref href="System.Windows.Input.Manipulations.InertiaProcessor2D.Completed"></xref> event.
  remarks: Timestamps are in 100-nanosecond units.
  example:
  - "In the following example, an event handler for the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started?displayProperty=fullName> event checks to see if inertia processing is running and if so, stops it by calling the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Complete%2A> method.  \n  \n [!code-csharp[ManipulationAPI#_ManipulationItem_OnManipulationStarted](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onmanipulationstarted)]  \n  \n [!code-csharp[ManipulationAPI#_ManipulationItem_Timestamp](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_timestamp)]"
  syntax:
    content: public void Complete (long timestamp);
    parameters:
    - id: timestamp
      type: System.Int64
      description: The timestamp to complete extrapolation, in 100-nanosecond ticks.
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.Complete*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The timestamp parameter is less than the initial or previous timestamp.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/InertiaProcessor2D.xml
  ms.technology:
  - dotnet-wpf
  author: Xansky
  ms.author: mhopkins
  manager: markl
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Completed
  commentId: E:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed
  id: Completed
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: Completed
  nameWithType: InertiaProcessor2D.Completed
  fullName: InertiaProcessor2D.Completed
  type: Event
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: Occurs when extrapolation has completed.
  syntax:
    content: public event EventHandler<System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs> Completed;
    return:
      type: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs}
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/InertiaProcessor2D.xml
  ms.technology:
  - dotnet-wpf
  author: Xansky
  ms.author: mhopkins
  manager: markl
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Delta
  commentId: E:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta
  id: Delta
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: Delta
  nameWithType: InertiaProcessor2D.Delta
  fullName: InertiaProcessor2D.Delta
  type: Event
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: Occurs when the extrapolation origin has changed or when translation, scaling, or rotation have occurred.
  remarks: The <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=fullName> event and the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta?displayProperty=fullName> event are the same type. Typically, you can use the same event handler for both events.
  example:
  - '[!code-csharp[ManipulationAPI#_ManipulationItem_OnManipulationOrInertiaDelta](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onmanipulationorinertiadelta)]'
  syntax:
    content: public event EventHandler<System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs> Delta;
    return:
      type: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs}
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/InertiaProcessor2D.xml
  ms.technology:
  - dotnet-wpf
  author: Xansky
  ms.author: mhopkins
  manager: markl
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior
  commentId: P:System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior
  id: ExpansionBehavior
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: ExpansionBehavior
  nameWithType: InertiaProcessor2D.ExpansionBehavior
  fullName: InertiaProcessor2D.ExpansionBehavior
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: Gets or sets the expansion behavior of the inertia processor.
  syntax:
    content: public System.Windows.Input.Manipulations.InertiaExpansionBehavior2D ExpansionBehavior { get; set; }
    return:
      type: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
      description: The expansion behavior of the inertia processor.
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/InertiaProcessor2D.xml
  ms.technology:
  - dotnet-wpf
  author: Xansky
  ms.author: mhopkins
  manager: markl
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX
  commentId: P:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX
  id: InitialOriginX
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: InitialOriginX
  nameWithType: InertiaProcessor2D.InitialOriginX
  fullName: InertiaProcessor2D.InitialOriginX
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: Gets or sets the x-coordinate for the initial origin, in coordinate units.
  remarks: "The origin point represented by the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A> and <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A> properties is the average position of all manipulators associated with an element.  \n  \n A valid value for <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A> is any finite number. The default value is 0.0."
  syntax:
    content: public float InitialOriginX { get; set; }
    return:
      type: System.Single
      description: The x-coordinate for the initial origin, in coordinate units.
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/InertiaProcessor2D.xml
  ms.technology:
  - dotnet-wpf
  author: Xansky
  ms.author: mhopkins
  manager: markl
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY
  commentId: P:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY
  id: InitialOriginY
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: InitialOriginY
  nameWithType: InertiaProcessor2D.InitialOriginY
  fullName: InertiaProcessor2D.InitialOriginY
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: Gets or sets the y-coordinate for the initial origin, in coordinate units.
  remarks: "The origin point represented by the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX%2A> and <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A> properties is the average position of all manipulators associated with an element.  \n  \n A valid value for <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY%2A> is any finite number. The default value is 0.0."
  syntax:
    content: public float InitialOriginY { get; set; }
    return:
      type: System.Single
      description: The y-coordinate for the initial origin, in coordinate units.
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/InertiaProcessor2D.xml
  ms.technology:
  - dotnet-wpf
  author: Xansky
  ms.author: mhopkins
  manager: markl
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning
  commentId: P:System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning
  id: IsRunning
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: IsRunning
  nameWithType: InertiaProcessor2D.IsRunning
  fullName: InertiaProcessor2D.IsRunning
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: Gets whether inertia is currently in progress.
  remarks: ''
  example:
  - "In the following example, an event handler for the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started?displayProperty=fullName> event checks to see if inertia processing is running and, if so, stops it by calling the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed> method.  \n  \n [!code-csharp[ManipulationAPI#_ManipulationItem_OnManipulationStarted](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onmanipulationstarted)]  \n  \n [!code-csharp[ManipulationAPI#_ManipulationItem_Timestamp](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_timestamp)]"
  syntax:
    content: public bool IsRunning { get; }
    return:
      type: System.Boolean
      description: A Boolean value indicating whether inertia is currently in progress.
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/InertiaProcessor2D.xml
  ms.technology:
  - dotnet-wpf
  author: Xansky
  ms.author: mhopkins
  manager: markl
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Process(System.Int64)
  commentId: M:System.Windows.Input.Manipulations.InertiaProcessor2D.Process(System.Int64)
  id: Process(System.Int64)
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: Process(Int64)
  nameWithType: InertiaProcessor2D.Process(Int64)
  fullName: InertiaProcessor2D.Process(Int64)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: Extrapolates the manipulation's position, orientation, and average radius at the specified time.
  remarks: Timestamps are in 100-nanosecond units.
  syntax:
    content: public bool Process (long timestamp);
    parameters:
    - id: timestamp
      type: System.Int64
      description: The timestamp to perform extrapolation, in 100-nanosecond ticks.
    return:
      type: System.Boolean
      description: The manipulation's position, orientation, and average radius at the specified time. `true` if extrapolation is in progress; otherwise, `false` if extrapolation has completed.
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.Process*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The timestamp parameter is less than the initial or previous timestamp.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/InertiaProcessor2D.xml
  ms.technology:
  - dotnet-wpf
  author: Xansky
  ms.author: mhopkins
  manager: markl
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior
  commentId: P:System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior
  id: RotationBehavior
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: RotationBehavior
  nameWithType: InertiaProcessor2D.RotationBehavior
  fullName: InertiaProcessor2D.RotationBehavior
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: Gets or sets the rotation behavior of the inertia processor.
  remarks: ''
  example:
  - "In the following example, the <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> property is set to enable inertia processing to rotate an object three-and-one-half times from its starting orientation.  \n  \n [!code-csharp[ManipulationAPI#_ManipulationItem_SetDesiredRotation](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_setdesiredrotation)]"
  syntax:
    content: public System.Windows.Input.Manipulations.InertiaRotationBehavior2D RotationBehavior { get; set; }
    return:
      type: System.Windows.Input.Manipulations.InertiaRotationBehavior2D
      description: The rotation behavior of the inertia processor.
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/InertiaProcessor2D.xml
  ms.technology:
  - dotnet-wpf
  author: Xansky
  ms.author: mhopkins
  manager: markl
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters(System.Windows.Input.Manipulations.InertiaParameters2D)
  commentId: M:System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters(System.Windows.Input.Manipulations.InertiaParameters2D)
  id: SetParameters(System.Windows.Input.Manipulations.InertiaParameters2D)
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: SetParameters(InertiaParameters2D)
  nameWithType: InertiaProcessor2D.SetParameters(InertiaParameters2D)
  fullName: InertiaProcessor2D.SetParameters(InertiaParameters2D)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: Sets parameters on the inertia processor.
  syntax:
    content: public void SetParameters (System.Windows.Input.Manipulations.InertiaParameters2D parameters);
    parameters:
    - id: parameters
      type: System.Windows.Input.Manipulations.InertiaParameters2D
      description: Parameters to set.
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/InertiaProcessor2D.xml
  ms.technology:
  - dotnet-wpf
  author: Xansky
  ms.author: mhopkins
  manager: markl
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior
  commentId: P:System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior
  id: TranslationBehavior
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  langs:
  - csharp
  name: TranslationBehavior
  nameWithType: InertiaProcessor2D.TranslationBehavior
  fullName: InertiaProcessor2D.TranslationBehavior
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: Gets or sets the translation behavior of the inertia processor.
  syntax:
    content: public System.Windows.Input.Manipulations.InertiaTranslationBehavior2D TranslationBehavior { get; set; }
    return:
      type: System.Windows.Input.Manipulations.InertiaTranslationBehavior2D
      description: The translation behavior of the inertia processor.
  overload: System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/InertiaProcessor2D.xml
  ms.technology:
  - dotnet-wpf
  author: Xansky
  ms.author: mhopkins
  manager: markl
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.#ctor
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: InertiaProcessor2D()
  nameWithType: InertiaProcessor2D.InertiaProcessor2D()
  fullName: InertiaProcessor2D.InertiaProcessor2D()
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(System.Int64)
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: Complete(Int64)
  nameWithType: InertiaProcessor2D.Complete(Int64)
  fullName: InertiaProcessor2D.Complete(Int64)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Completed
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: Completed
  nameWithType: InertiaProcessor2D.Completed
  fullName: InertiaProcessor2D.Completed
- uid: System.EventHandler`1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
- uid: System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs
  name: Manipulation2DCompletedEventArgs
  nameWithType: Manipulation2DCompletedEventArgs
  fullName: System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs
- uid: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs}
  parent: System
  isExternal: false
  name: EventHandler<Manipulation2DCompletedEventArgs>
  nameWithType: EventHandler<Manipulation2DCompletedEventArgs>
  fullName: System.EventHandler<System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs
    name: Manipulation2DCompletedEventArgs
    nameWithType: Manipulation2DCompletedEventArgs
    fullName: System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Delta
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: Delta
  nameWithType: InertiaProcessor2D.Delta
  fullName: InertiaProcessor2D.Delta
- uid: System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs
  name: Manipulation2DDeltaEventArgs
  nameWithType: Manipulation2DDeltaEventArgs
  fullName: System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs
- uid: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs}
  parent: System
  isExternal: false
  name: EventHandler<Manipulation2DDeltaEventArgs>
  nameWithType: EventHandler<Manipulation2DDeltaEventArgs>
  fullName: System.EventHandler<System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs
    name: Manipulation2DDeltaEventArgs
    nameWithType: Manipulation2DDeltaEventArgs
    fullName: System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: ExpansionBehavior
  nameWithType: InertiaProcessor2D.ExpansionBehavior
  fullName: InertiaProcessor2D.ExpansionBehavior
- uid: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: InertiaExpansionBehavior2D
  nameWithType: InertiaExpansionBehavior2D
  fullName: System.Windows.Input.Manipulations.InertiaExpansionBehavior2D
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: InitialOriginX
  nameWithType: InertiaProcessor2D.InitialOriginX
  fullName: InertiaProcessor2D.InitialOriginX
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: InitialOriginY
  nameWithType: InertiaProcessor2D.InitialOriginY
  fullName: InertiaProcessor2D.InitialOriginY
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: IsRunning
  nameWithType: InertiaProcessor2D.IsRunning
  fullName: InertiaProcessor2D.IsRunning
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Process(System.Int64)
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: Process(Int64)
  nameWithType: InertiaProcessor2D.Process(Int64)
  fullName: InertiaProcessor2D.Process(Int64)
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: RotationBehavior
  nameWithType: InertiaProcessor2D.RotationBehavior
  fullName: InertiaProcessor2D.RotationBehavior
- uid: System.Windows.Input.Manipulations.InertiaRotationBehavior2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: InertiaRotationBehavior2D
  nameWithType: InertiaRotationBehavior2D
  fullName: System.Windows.Input.Manipulations.InertiaRotationBehavior2D
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters(System.Windows.Input.Manipulations.InertiaParameters2D)
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: SetParameters(InertiaParameters2D)
  nameWithType: InertiaProcessor2D.SetParameters(InertiaParameters2D)
  fullName: InertiaProcessor2D.SetParameters(InertiaParameters2D)
- uid: System.Windows.Input.Manipulations.InertiaParameters2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: InertiaParameters2D
  nameWithType: InertiaParameters2D
  fullName: System.Windows.Input.Manipulations.InertiaParameters2D
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: TranslationBehavior
  nameWithType: InertiaProcessor2D.TranslationBehavior
  fullName: InertiaProcessor2D.TranslationBehavior
- uid: System.Windows.Input.Manipulations.InertiaTranslationBehavior2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: InertiaTranslationBehavior2D
  nameWithType: InertiaTranslationBehavior2D
  fullName: System.Windows.Input.Manipulations.InertiaTranslationBehavior2D
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.#ctor*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: InertiaProcessor2D
  nameWithType: InertiaProcessor2D.InertiaProcessor2D
  fullName: InertiaProcessor2D.InertiaProcessor2D
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/InertiaProcessor2D.xml
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Complete*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: Complete
  nameWithType: InertiaProcessor2D.Complete
  fullName: InertiaProcessor2D.Complete
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/InertiaProcessor2D.xml
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: ExpansionBehavior
  nameWithType: InertiaProcessor2D.ExpansionBehavior
  fullName: InertiaProcessor2D.ExpansionBehavior
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/InertiaProcessor2D.xml
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: InitialOriginX
  nameWithType: InertiaProcessor2D.InitialOriginX
  fullName: InertiaProcessor2D.InitialOriginX
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/InertiaProcessor2D.xml
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: InitialOriginY
  nameWithType: InertiaProcessor2D.InitialOriginY
  fullName: InertiaProcessor2D.InitialOriginY
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/InertiaProcessor2D.xml
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: IsRunning
  nameWithType: InertiaProcessor2D.IsRunning
  fullName: InertiaProcessor2D.IsRunning
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/InertiaProcessor2D.xml
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.Process*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: Process
  nameWithType: InertiaProcessor2D.Process
  fullName: InertiaProcessor2D.Process
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/InertiaProcessor2D.xml
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: RotationBehavior
  nameWithType: InertiaProcessor2D.RotationBehavior
  fullName: InertiaProcessor2D.RotationBehavior
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/InertiaProcessor2D.xml
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: SetParameters
  nameWithType: InertiaProcessor2D.SetParameters
  fullName: InertiaProcessor2D.SetParameters
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/InertiaProcessor2D.xml
- uid: System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior*
  parent: System.Windows.Input.Manipulations.InertiaProcessor2D
  isExternal: false
  name: TranslationBehavior
  nameWithType: InertiaProcessor2D.TranslationBehavior
  fullName: InertiaProcessor2D.TranslationBehavior
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input.Manipulations/InertiaProcessor2D.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
