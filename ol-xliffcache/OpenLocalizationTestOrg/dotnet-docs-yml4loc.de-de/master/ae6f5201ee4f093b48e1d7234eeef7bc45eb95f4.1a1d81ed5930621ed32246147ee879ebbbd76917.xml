{"nodes":[{"content":"Provides the ability to control access to objects without direct manipulation of Access Control Lists (ACLs). This class is the abstract base class for the <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> and <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> classes.","nodes":[{"pos":[0,315],"content":"Provides the ability to control access to objects without direct manipulation of Access Control Lists (ACLs). This class is the abstract base class for the <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> and <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> classes.","nodes":[{"content":"Provides the ability to control access to objects without direct manipulation of Access Control Lists (ACLs).","pos":[0,109]},{"content":"This class is the abstract base class for the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CommonObjectSecurity\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"&gt;&lt;/xref&gt;</ph> classes.","pos":[110,315],"source":" This class is the abstract base class for the <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> and <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> classes."}]}],"pos":[5018,5334],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> class.","nodes":[{"pos":[0,106],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> class."}],"pos":[7096,7203],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> class.","nodes":[{"pos":[0,106],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> class."}],"pos":[8688,8795],"yaml":true},{"content":"The <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> of the new <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> instance.","nodes":[{"pos":[0,172],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"&gt;&lt;/xref&gt;</ph> of the new <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.CommonObjectSecurity\"&gt;&lt;/xref&gt;</ph> instance.","source":"The <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> of the new <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> instance."}],"pos":[9051,9224],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> class.","nodes":[{"pos":[0,106],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> class."}],"pos":[10539,10646],"yaml":true},{"content":"`true` if the new <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a container object.","nodes":[{"pos":[0,113],"content":"<ph id=\"ph1\">`true`</ph> if the new <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object is a container object.","source":"`true` if the new <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a container object."}],"pos":[10809,10925],"yaml":true},{"content":"True if the new <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a directory object.","nodes":[{"pos":[0,111],"content":"True if the new <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object is a directory object.","source":"True if the new <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a directory object."}],"pos":[10986,11098],"yaml":true},{"content":"Gets the <xref href=\"System.Type\"></xref> of the securable object associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.","nodes":[{"pos":[0,160],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the securable object associated with this <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the <xref href=\"System.Type\"></xref> of the securable object associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."}],"pos":[12428,12589],"yaml":true},{"content":"The type of the securable object associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.","nodes":[{"pos":[0,127],"content":"The type of the securable object associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"The type of the securable object associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."}],"pos":[12713,12841],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.AccessRule\"></xref> class with the specified values.","nodes":[{"pos":[0,128],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessRule\"&gt;&lt;/xref&gt;</ph> class with the specified values.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.AccessRule\"></xref> class with the specified values."}],"pos":[15106,15235],"yaml":true},{"content":"The identity to which the access rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","nodes":[{"pos":[0,157],"content":"The identity to which the access rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","nodes":[{"content":"The identity to which the access rule applies.","pos":[0,46]},{"content":"It must be an object that can be cast as a <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph>.","pos":[48,157],"source":"  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>."}]}],"pos":[15735,15893],"yaml":true},{"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","nodes":[{"pos":[0,150],"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","nodes":[{"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","pos":[0,150],"nodes":[{"content":"The access mask of this rule.","pos":[0,29]},{"content":"The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","pos":[30,150]}]}]}],"pos":[15958,16109],"yaml":true},{"content":"true if this rule is inherited from a parent container.","nodes":[{"pos":[0,55],"content":"true if this rule is inherited from a parent container.","nodes":[{"content":"true if this rule is inherited from a parent container.","pos":[0,55]}]}],"pos":[16177,16233],"yaml":true},{"content":"Specifies the inheritance properties of the access rule.","nodes":[{"pos":[0,56],"content":"Specifies the inheritance properties of the access rule.","nodes":[{"content":"Specifies the inheritance properties of the access rule.","pos":[0,56]}]}],"pos":[16338,16395],"yaml":true},{"content":"Specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.","nodes":[{"pos":[0,221],"content":"Specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.","nodes":[{"content":"Specifies whether inherited access rules are automatically propagated.","pos":[0,70]},{"content":"The propagation flags are ignored if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inheritanceFlags</ph><ept id=\"p1\">&lt;/code&gt;</ept> is set to <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags.None\"&gt;&lt;/xref&gt;</ph>.","pos":[71,221],"source":" The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>."}]}],"pos":[16500,16722],"yaml":true},{"content":"Specifies the valid access control type.","nodes":[{"pos":[0,40],"content":"Specifies the valid access control type.","nodes":[{"content":"Specifies the valid access control type.","pos":[0,40]}]}],"pos":[16816,16857],"yaml":true},{"content":"The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object that this method creates.","nodes":[{"pos":[0,98],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessRule\"&gt;&lt;/xref&gt;</ph> object that this method creates.","source":"The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object that this method creates."}],"pos":[16941,17040],"yaml":true},{"content":"Gets or sets a Boolean value that specifies whether the access rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object have been modified.","nodes":[{"pos":[0,182],"content":"Gets or sets a Boolean value that specifies whether the access rules associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object have been modified.","source":"Gets or sets a Boolean value that specifies whether the access rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object have been modified."}],"pos":[18406,18589],"yaml":true},{"content":"`true` if the access rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object have been modified; otherwise, `false`.","nodes":[{"pos":[0,160],"content":"<ph id=\"ph1\">`true`</ph> if the access rules associated with this <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object have been modified; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the access rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object have been modified; otherwise, `false`."}],"pos":[18719,18882],"yaml":true},{"content":"Gets the <xref href=\"System.Type\"></xref> of the object associated with the access rules of this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object. The <xref href=\"System.Type\"></xref> object must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","nodes":[{"pos":[0,328],"content":"Gets the <xref href=\"System.Type\"></xref> of the object associated with the access rules of this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object. The <xref href=\"System.Type\"></xref> object must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","nodes":[{"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the object associated with the access rules of this <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,170],"source":"Gets the <xref href=\"System.Type\"></xref> of the object associated with the access rules of this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object must be an object that can be cast as a <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> object.","pos":[171,328],"source":" The <xref href=\"System.Type\"></xref> object must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."}]}],"pos":[20220,20549],"yaml":true},{"content":"The type of the object associated with the access rules of this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.","nodes":[{"pos":[0,137],"content":"The type of the object associated with the access rules of this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"The type of the object associated with the access rules of this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."}],"pos":[20672,20810],"yaml":true},{"content":"Gets a Boolean value that specifies whether the access rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object are in canonical order.","nodes":[{"pos":[0,178],"content":"Gets a Boolean value that specifies whether the access rules associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object are in canonical order.","source":"Gets a Boolean value that specifies whether the access rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object are in canonical order."}],"pos":[22197,22376],"yaml":true},{"content":"`true` if the access rules are in canonical order; otherwise, `false`.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">`true`</ph> if the access rules are in canonical order; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the access rules are in canonical order; otherwise, `false`."}],"pos":[22502,22575],"yaml":true},{"content":"Gets a Boolean value that specifies whether the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is protected.","nodes":[{"pos":[0,196],"content":"Gets a Boolean value that specifies whether the Discretionary Access Control List (DACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object is protected.","source":"Gets a Boolean value that specifies whether the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is protected."}],"pos":[23971,24168],"yaml":true},{"content":"`true` if the DACL is protected; otherwise, `false`.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">`true`</ph> if the DACL is protected; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the DACL is protected; otherwise, `false`."}],"pos":[24294,24349],"yaml":true},{"content":"Gets a Boolean value that specifies whether the audit rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object are in canonical order.","nodes":[{"pos":[0,177],"content":"Gets a Boolean value that specifies whether the audit rules associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object are in canonical order.","source":"Gets a Boolean value that specifies whether the audit rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object are in canonical order."}],"pos":[25739,25917],"yaml":true},{"content":"`true` if the audit rules are in canonical order; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if the audit rules are in canonical order; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the audit rules are in canonical order; otherwise, `false`."}],"pos":[26042,26114],"yaml":true},{"content":"Gets a Boolean value that specifies whether the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is protected.","nodes":[{"pos":[0,189],"content":"Gets a Boolean value that specifies whether the System Access Control List (SACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object is protected.","source":"Gets a Boolean value that specifies whether the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is protected."}],"pos":[27503,27693],"yaml":true},{"content":"`true` if the SACL is protected; otherwise, `false`.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">`true`</ph> if the SACL is protected; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the SACL is protected; otherwise, `false`."}],"pos":[27818,27873],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.AuditRule\"></xref> class with the specified values.","nodes":[{"pos":[0,127],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AuditRule\"&gt;&lt;/xref&gt;</ph> class with the specified values.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.AuditRule\"></xref> class with the specified values."}],"pos":[30097,30225],"yaml":true},{"content":"The identity to which the audit rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","nodes":[{"pos":[0,156],"content":"The identity to which the audit rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","nodes":[{"content":"The identity to which the audit rule applies.","pos":[0,45]},{"content":"It must be an object that can be cast as a <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph>.","pos":[47,156],"source":"  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>."}]}],"pos":[30717,30874],"yaml":true},{"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","nodes":[{"pos":[0,150],"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","nodes":[{"content":"The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","pos":[0,150],"nodes":[{"content":"The access mask of this rule.","pos":[0,29]},{"content":"The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.","pos":[30,150]}]}]}],"pos":[30939,31090],"yaml":true},{"content":"`true` if this rule is inherited from a parent container.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">`true`</ph> if this rule is inherited from a parent container.","source":"`true` if this rule is inherited from a parent container."}],"pos":[31158,31218],"yaml":true},{"content":"Specifies the inheritance properties of the audit rule.","nodes":[{"pos":[0,55],"content":"Specifies the inheritance properties of the audit rule.","nodes":[{"content":"Specifies the inheritance properties of the audit rule.","pos":[0,55]}]}],"pos":[31323,31379],"yaml":true},{"content":"Specifies whether inherited audit rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.","nodes":[{"pos":[0,220],"content":"Specifies whether inherited audit rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.","nodes":[{"content":"Specifies whether inherited audit rules are automatically propagated.","pos":[0,69]},{"content":"The propagation flags are ignored if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inheritanceFlags</ph><ept id=\"p1\">&lt;/code&gt;</ept> is set to <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.InheritanceFlags.None\"&gt;&lt;/xref&gt;</ph>.","pos":[70,220],"source":" The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>."}]}],"pos":[31484,31705],"yaml":true},{"content":"Specifies the conditions for which the rule is audited.","nodes":[{"pos":[0,55],"content":"Specifies the conditions for which the rule is audited.","nodes":[{"content":"Specifies the conditions for which the rule is audited.","pos":[0,55]}]}],"pos":[31793,31849],"yaml":true},{"content":"The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object that this method creates.","nodes":[{"pos":[0,97],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AuditRule\"&gt;&lt;/xref&gt;</ph> object that this method creates.","source":"The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object that this method creates."}],"pos":[31932,32030],"yaml":true},{"content":"Gets or sets a Boolean value that specifies whether the audit rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object have been modified.","nodes":[{"pos":[0,181],"content":"Gets or sets a Boolean value that specifies whether the audit rules associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object have been modified.","source":"Gets or sets a Boolean value that specifies whether the audit rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object have been modified."}],"pos":[33389,33571],"yaml":true},{"content":"`true` if the audit rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object have been modified; otherwise, `false`.","nodes":[{"pos":[0,159],"content":"<ph id=\"ph1\">`true`</ph> if the audit rules associated with this <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object have been modified; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the audit rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object have been modified; otherwise, `false`."}],"pos":[33700,33862],"yaml":true},{"content":"Gets the <xref href=\"System.Type\"></xref> object associated with the audit rules of this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object. The <xref href=\"System.Type\"></xref> object must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","nodes":[{"pos":[0,320],"content":"Gets the <xref href=\"System.Type\"></xref> object associated with the audit rules of this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object. The <xref href=\"System.Type\"></xref> object must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.","nodes":[{"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object associated with the audit rules of this <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,162],"source":"Gets the <xref href=\"System.Type\"></xref> object associated with the audit rules of this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object must be an object that can be cast as a <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> object.","pos":[163,320],"source":" The <xref href=\"System.Type\"></xref> object must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object."}]}],"pos":[35193,35514],"yaml":true},{"content":"The type of the object associated with the audit rules of this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.","nodes":[{"pos":[0,136],"content":"The type of the object associated with the audit rules of this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"The type of the object associated with the audit rules of this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."}],"pos":[35636,35773],"yaml":true},{"content":"Gets the primary group associated with the specified owner.","nodes":[{"pos":[0,59],"content":"Gets the primary group associated with the specified owner.","nodes":[{"content":"Gets the primary group associated with the specified owner.","pos":[0,59]}]}],"pos":[37124,37184],"yaml":true},{"content":"The owner for which to get the primary group.","nodes":[{"pos":[0,45],"content":"The owner for which to get the primary group.","nodes":[{"content":"The owner for which to get the primary group.","pos":[0,45]}]}],"pos":[37366,37412],"yaml":true},{"content":"The primary group associated with the specified owner.","nodes":[{"pos":[0,54],"content":"The primary group associated with the specified owner.","nodes":[{"content":"The primary group associated with the specified owner.","pos":[0,54]}]}],"pos":[37499,37554],"yaml":true},{"content":"Gets the owner associated with the specified primary group.","nodes":[{"pos":[0,59],"content":"Gets the owner associated with the specified primary group.","nodes":[{"content":"Gets the owner associated with the specified primary group.","pos":[0,59]}]}],"pos":[38900,38960],"yaml":true},{"content":"The primary group for which to get the owner.","nodes":[{"pos":[0,45],"content":"The primary group for which to get the owner.","nodes":[{"content":"The primary group for which to get the owner.","pos":[0,45]}]}],"pos":[39142,39188],"yaml":true},{"content":"The owner associated with the specified group.","nodes":[{"pos":[0,46],"content":"The owner associated with the specified group.","nodes":[{"content":"The owner associated with the specified group.","pos":[0,46]}]}],"pos":[39275,39322],"yaml":true},{"content":"<code>targetType</code> is `null`.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;targetType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>targetType</code> is `null`."}],"pos":[39505,39540],"yaml":true},{"content":"<code>targetType</code> is not an <xref href=\"System.Security.Principal.IdentityReference\"></xref> type.","nodes":[{"pos":[0,104],"content":"<ph id=\"ph1\">&lt;code&gt;targetType&lt;/code&gt;</ph> is not an <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph> type.","source":"<code>targetType</code> is not an <xref href=\"System.Security.Principal.IdentityReference\"></xref> type."}],"pos":[39634,39739],"yaml":true},{"content":"Some or all identity references could not be translated.","nodes":[{"pos":[0,56],"content":"Some or all identity references could not be translated.","nodes":[{"content":"Some or all identity references could not be translated.","pos":[0,56]}]}],"pos":[39889,39946],"yaml":true},{"content":"A Win32 error code was returned.","nodes":[{"pos":[0,32],"content":"A Win32 error code was returned.","nodes":[{"content":"A Win32 error code was returned.","pos":[0,32]}]}],"pos":[40036,40069],"yaml":true},{"content":"Returns an array of byte values that represents the security descriptor information for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.","nodes":[{"pos":[0,166],"content":"Returns an array of byte values that represents the security descriptor information for this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns an array of byte values that represents the security descriptor information for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."}],"pos":[41418,41585],"yaml":true},{"content":"This method returns the security descriptor information currently in memory. It does not retrieve information saved in permanent storage.","nodes":[{"pos":[0,137],"content":"This method returns the security descriptor information currently in memory. It does not retrieve information saved in permanent storage.","nodes":[{"content":"This method returns the security descriptor information currently in memory. It does not retrieve information saved in permanent storage.","pos":[0,137],"nodes":[{"content":"This method returns the security descriptor information currently in memory.","pos":[0,76]},{"content":"It does not retrieve information saved in permanent storage.","pos":[77,137]}]}]}],"pos":[41596,41734],"yaml":true,"extradata":"MT"},{"content":"An array of byte values that represents the security descriptor for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object. This method returns `null` if there is no security information in this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.","nodes":[{"pos":[0,291],"content":"An array of byte values that represents the security descriptor for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object. This method returns `null` if there is no security information in this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.","nodes":[{"content":"An array of byte values that represents the security descriptor for this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,146],"source":"An array of byte values that represents the security descriptor for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."},{"content":"This method returns <ph id=\"ph1\">`null`</ph> if there is no security information in this <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","pos":[147,291],"source":" This method returns `null` if there is no security information in this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."}]}],"pos":[41883,42175],"yaml":true},{"content":"Returns the Security Descriptor Definition Language (SDDL) representation of the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.","nodes":[{"pos":[0,221],"content":"Returns the Security Descriptor Definition Language (SDDL) representation of the specified sections of the security descriptor associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns the Security Descriptor Definition Language (SDDL) representation of the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."}],"pos":[43841,44063],"yaml":true},{"content":"Specifies which sections (access rules, audit rules, primary group, owner) of the security descriptor to get.","nodes":[{"pos":[0,109],"content":"Specifies which sections (access rules, audit rules, primary group, owner) of the security descriptor to get.","nodes":[{"content":"Specifies which sections (access rules, audit rules, primary group, owner) of the security descriptor to get.","pos":[0,109]}]}],"pos":[44326,44436],"yaml":true},{"content":"The SDDL representation of the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.","nodes":[{"pos":[0,171],"content":"The SDDL representation of the specified sections of the security descriptor associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"The SDDL representation of the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."}],"pos":[44493,44665],"yaml":true},{"content":"Gets or sets a Boolean value that specifies whether the group associated with the securable object has been modified.","nodes":[{"pos":[0,117],"content":"Gets or sets a Boolean value that specifies whether the group associated with the securable object has been modified.","nodes":[{"content":"Gets or sets a Boolean value that specifies whether the group associated with the securable object has been modified.","pos":[0,117]}]}],"pos":[46007,46125],"yaml":true},{"content":"`true` if the group associated with the securable object has been modified; otherwise, `false`.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">`true`</ph> if the group associated with the securable object has been modified; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the group associated with the securable object has been modified; otherwise, `false`."}],"pos":[46249,46347],"yaml":true},{"content":"Gets a Boolean value that specifies whether this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a container object.","nodes":[{"pos":[0,144],"content":"Gets a Boolean value that specifies whether this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object is a container object.","source":"Gets a Boolean value that specifies whether this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a container object."}],"pos":[47661,47806],"yaml":true},{"content":"`true` if the <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a container object; otherwise, `false`.","nodes":[{"pos":[0,129],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object is a container object; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a container object; otherwise, `false`."}],"pos":[47923,48055],"yaml":true},{"content":"Gets a Boolean value that specifies whether this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a directory object.","nodes":[{"pos":[0,144],"content":"Gets a Boolean value that specifies whether this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object is a directory object.","source":"Gets a Boolean value that specifies whether this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a directory object."}],"pos":[49325,49470],"yaml":true},{"content":"`true` if the <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a directory object; otherwise, `false`.","nodes":[{"pos":[0,129],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object is a directory object; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a directory object; otherwise, `false`."}],"pos":[49580,49712],"yaml":true},{"content":"Returns a Boolean value that specifies whether the security descriptor associated with this  <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object can be converted to the Security Descriptor Definition Language (SDDL) format.","nodes":[{"pos":[0,244],"content":"Returns a Boolean value that specifies whether the security descriptor associated with this  <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object can be converted to the Security Descriptor Definition Language (SDDL) format.","source":"Returns a Boolean value that specifies whether the security descriptor associated with this  <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object can be converted to the Security Descriptor Definition Language (SDDL) format."}],"pos":[51105,51350],"yaml":true},{"content":"`true` if the security descriptor associated with this  <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object can be converted to the Security Descriptor Definition Language (SDDL) format; otherwise, `false`.","nodes":[{"pos":[0,227],"content":"<ph id=\"ph1\">`true`</ph> if the security descriptor associated with this  <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object can be converted to the Security Descriptor Definition Language (SDDL) format; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the security descriptor associated with this  <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object can be converted to the Security Descriptor Definition Language (SDDL) format; otherwise, `false`."}],"pos":[51499,51729],"yaml":true},{"content":"Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.","nodes":[{"pos":[0,177],"content":"Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."}],"pos":[53545,53723],"yaml":true},{"content":"To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.","nodes":[{"pos":[0,205],"content":"To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.","nodes":[{"content":"To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.","pos":[0,205]}]}],"pos":[53734,53940],"yaml":true,"extradata":"MT"},{"content":"The modification to apply to the DACL.","nodes":[{"pos":[0,38],"content":"The modification to apply to the DACL.","nodes":[{"content":"The modification to apply to the DACL.","pos":[0,38]}]}],"pos":[54264,54303],"yaml":true},{"content":"The access rule to modify.","nodes":[{"pos":[0,26],"content":"The access rule to modify.","nodes":[{"content":"The access rule to modify.","pos":[0,26]}]}],"pos":[54390,54417],"yaml":true},{"content":"`true` if the DACL is successfully modified; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if the DACL is successfully modified; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the DACL is successfully modified; otherwise, `false`."}],"pos":[54482,54549],"yaml":true},{"content":"`true` if the DACL is successfully modified; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if the DACL is successfully modified; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the DACL is successfully modified; otherwise, `false`."}],"pos":[54607,54674],"yaml":true},{"content":"Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.","nodes":[{"pos":[0,177],"content":"Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."}],"pos":[56501,56679],"yaml":true},{"content":"To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.","nodes":[{"pos":[0,205],"content":"To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.","nodes":[{"content":"To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.","pos":[0,205]}]}],"pos":[56690,56896],"yaml":true,"extradata":"MT"},{"content":"The modification to apply to the DACL.","nodes":[{"pos":[0,38],"content":"The modification to apply to the DACL.","nodes":[{"content":"The modification to apply to the DACL.","pos":[0,38]}]}],"pos":[57220,57259],"yaml":true},{"content":"The access rule to modify.","nodes":[{"pos":[0,26],"content":"The access rule to modify.","nodes":[{"content":"The access rule to modify.","pos":[0,26]}]}],"pos":[57346,57373],"yaml":true},{"content":"`true` if the DACL is successfully modified; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if the DACL is successfully modified; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the DACL is successfully modified; otherwise, `false`."}],"pos":[57438,57505],"yaml":true},{"content":"`true` if the DACL is successfully modified; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if the DACL is successfully modified; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the DACL is successfully modified; otherwise, `false`."}],"pos":[57563,57630],"yaml":true},{"content":"Applies the specified modification to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.","nodes":[{"pos":[0,170],"content":"Applies the specified modification to the System Access Control List (SACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Applies the specified modification to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."}],"pos":[59425,59596],"yaml":true},{"content":"The modification to apply to the SACL.","nodes":[{"pos":[0,38],"content":"The modification to apply to the SACL.","nodes":[{"content":"The modification to apply to the SACL.","pos":[0,38]}]}],"pos":[59918,59957],"yaml":true},{"content":"The audit rule to modify.","nodes":[{"pos":[0,25],"content":"The audit rule to modify.","nodes":[{"content":"The audit rule to modify.","pos":[0,25]}]}],"pos":[60043,60069],"yaml":true},{"content":"`true` if the SACL is successfully modified; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if the SACL is successfully modified; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the SACL is successfully modified; otherwise, `false`."}],"pos":[60134,60201],"yaml":true},{"content":"`true` if the SACL is successfully modified; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if the SACL is successfully modified; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the SACL is successfully modified; otherwise, `false`."}],"pos":[60259,60326],"yaml":true},{"content":"Applies the specified modification to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.","nodes":[{"pos":[0,170],"content":"Applies the specified modification to the System Access Control List (SACL) associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Applies the specified modification to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."}],"pos":[62140,62311],"yaml":true},{"content":"The modification to apply to the SACL.","nodes":[{"pos":[0,38],"content":"The modification to apply to the SACL.","nodes":[{"content":"The modification to apply to the SACL.","pos":[0,38]}]}],"pos":[62633,62672],"yaml":true},{"content":"The audit rule to modify.","nodes":[{"pos":[0,25],"content":"The audit rule to modify.","nodes":[{"content":"The audit rule to modify.","pos":[0,25]}]}],"pos":[62758,62784],"yaml":true},{"content":"`true` if the SACL is successfully modified; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if the SACL is successfully modified; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the SACL is successfully modified; otherwise, `false`."}],"pos":[62849,62916],"yaml":true},{"content":"`true` if the SACL is successfully modified; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if the SACL is successfully modified; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the SACL is successfully modified; otherwise, `false`."}],"pos":[62974,63041],"yaml":true},{"content":"Gets or sets a Boolean value that specifies whether the owner of the securable object has been modified.","nodes":[{"pos":[0,104],"content":"Gets or sets a Boolean value that specifies whether the owner of the securable object has been modified.","nodes":[{"content":"Gets or sets a Boolean value that specifies whether the owner of the securable object has been modified.","pos":[0,104]}]}],"pos":[64369,64474],"yaml":true},{"content":"`true` if the owner of the securable object has been modified; otherwise, `false`.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">`true`</ph> if the owner of the securable object has been modified; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the owner of the securable object has been modified; otherwise, `false`."}],"pos":[64598,64683],"yaml":true},{"content":"Saves the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object to permanent storage. We recommend that the values of the <code>includeSections</code> parameters passed to the constructor and persist methods be identical.","nodes":[{"pos":[0,307],"content":"Saves the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object to permanent storage. We recommend that the values of the <code>includeSections</code> parameters passed to the constructor and persist methods be identical.","nodes":[{"content":"Saves the specified sections of the security descriptor associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object to permanent storage.","pos":[0,171],"source":"Saves the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object to permanent storage."},{"content":"We recommend that the values of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">includeSections</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameters passed to the constructor and persist methods be identical.","pos":[172,307],"source":" We recommend that the values of the <code>includeSections</code> parameters passed to the constructor and persist methods be identical."}]}],"pos":[66361,66669],"yaml":true},{"content":"When persisting a <xref:System.Security.AccessControl.ObjectSecurity> object, if the value of the `includeSections` parameter passed to the <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is not identical to the value of the `includeSections` parameter passed to the constructor used to create that <xref:System.Security.AccessControl.ObjectSecurity> object, sections of the persisted <xref:System.Security.AccessControl.ObjectSecurity> object can contain unpredictable values. For example, if a constructor is called with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.Access>, and later a <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is called on that object with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.All>, the resulting persisted <xref:System.Security.AccessControl.ObjectSecurity> object will contain unpredictable values for its audit rules, group, and owner.","nodes":[{"pos":[0,1003],"content":"When persisting a <xref:System.Security.AccessControl.ObjectSecurity> object, if the value of the `includeSections` parameter passed to the <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is not identical to the value of the `includeSections` parameter passed to the constructor used to create that <xref:System.Security.AccessControl.ObjectSecurity> object, sections of the persisted <xref:System.Security.AccessControl.ObjectSecurity> object can contain unpredictable values. For example, if a constructor is called with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.Access>, and later a <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is called on that object with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.All>, the resulting persisted <xref:System.Security.AccessControl.ObjectSecurity> object will contain unpredictable values for its audit rules, group, and owner.","nodes":[{"content":"When persisting a <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object, if the value of the <ph id=\"ph2\">`includeSections`</ph> parameter passed to the <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> method is not identical to the value of the <ph id=\"ph4\">`includeSections`</ph> parameter passed to the constructor used to create that <ph id=\"ph5\">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object, sections of the persisted <ph id=\"ph6\">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object can contain unpredictable values.","pos":[0,499],"source":"When persisting a <xref:System.Security.AccessControl.ObjectSecurity> object, if the value of the `includeSections` parameter passed to the <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is not identical to the value of the `includeSections` parameter passed to the constructor used to create that <xref:System.Security.AccessControl.ObjectSecurity> object, sections of the persisted <xref:System.Security.AccessControl.ObjectSecurity> object can contain unpredictable values."},{"content":"For example, if a constructor is called with an <ph id=\"ph1\">`includeSections`</ph> value of <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.AccessControlSections.Access&gt;</ph>, and later a <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> method is called on that object with an <ph id=\"ph4\">`includeSections`</ph> value of <ph id=\"ph5\">&lt;xref:System.Security.AccessControl.AccessControlSections.All&gt;</ph>, the resulting persisted <ph id=\"ph6\">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object will contain unpredictable values for its audit rules, group, and owner.","pos":[500,1003],"source":" For example, if a constructor is called with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.Access>, and later a <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is called on that object with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.All>, the resulting persisted <xref:System.Security.AccessControl.ObjectSecurity> object will contain unpredictable values for its audit rules, group, and owner."}]}],"pos":[66680,67684],"yaml":true,"extradata":"MT"},{"content":"The handle used to retrieve the persisted information.","nodes":[{"pos":[0,54],"content":"The handle used to retrieve the persisted information.","nodes":[{"content":"The handle used to retrieve the persisted information.","pos":[0,54]}]}],"pos":[67965,68020],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.AccessControlSections\"></xref> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.","nodes":[{"pos":[0,240],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessControlSections\"&gt;&lt;/xref&gt;</ph> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.","source":"One of the <xref href=\"System.Security.AccessControl.AccessControlSections\"></xref> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save."}],"pos":[68129,68370],"yaml":true},{"content":"Saves the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object to permanent storage. We recommend that the values of the <code>includeSections</code> parameters passed to the constructor and persist methods be identical.","nodes":[{"pos":[0,307],"content":"Saves the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object to permanent storage. We recommend that the values of the <code>includeSections</code> parameters passed to the constructor and persist methods be identical.","nodes":[{"content":"Saves the specified sections of the security descriptor associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object to permanent storage.","pos":[0,171],"source":"Saves the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object to permanent storage."},{"content":"We recommend that the values of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">includeSections</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameters passed to the constructor and persist methods be identical.","pos":[172,307],"source":" We recommend that the values of the <code>includeSections</code> parameters passed to the constructor and persist methods be identical."}]}],"pos":[69946,70254],"yaml":true},{"content":"When persisting a <xref:System.Security.AccessControl.ObjectSecurity> object, if the value of the `includeSections` parameter passed to the <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is not identical to the value of the `includeSections` parameter passed to the constructor used to create that <xref:System.Security.AccessControl.ObjectSecurity> object, sections of the persisted <xref:System.Security.AccessControl.ObjectSecurity> object can contain unpredictable values. For example, if a constructor is called with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.Access>, and later a <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is called on that object with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.All>, the resulting persisted <xref:System.Security.AccessControl.ObjectSecurity> object will contain unpredictable values for its audit rules, group, and owner.","nodes":[{"pos":[0,1003],"content":"When persisting a <xref:System.Security.AccessControl.ObjectSecurity> object, if the value of the `includeSections` parameter passed to the <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is not identical to the value of the `includeSections` parameter passed to the constructor used to create that <xref:System.Security.AccessControl.ObjectSecurity> object, sections of the persisted <xref:System.Security.AccessControl.ObjectSecurity> object can contain unpredictable values. For example, if a constructor is called with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.Access>, and later a <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is called on that object with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.All>, the resulting persisted <xref:System.Security.AccessControl.ObjectSecurity> object will contain unpredictable values for its audit rules, group, and owner.","nodes":[{"content":"When persisting a <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object, if the value of the <ph id=\"ph2\">`includeSections`</ph> parameter passed to the <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> method is not identical to the value of the <ph id=\"ph4\">`includeSections`</ph> parameter passed to the constructor used to create that <ph id=\"ph5\">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object, sections of the persisted <ph id=\"ph6\">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object can contain unpredictable values.","pos":[0,499],"source":"When persisting a <xref:System.Security.AccessControl.ObjectSecurity> object, if the value of the `includeSections` parameter passed to the <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is not identical to the value of the `includeSections` parameter passed to the constructor used to create that <xref:System.Security.AccessControl.ObjectSecurity> object, sections of the persisted <xref:System.Security.AccessControl.ObjectSecurity> object can contain unpredictable values."},{"content":"For example, if a constructor is called with an <ph id=\"ph1\">`includeSections`</ph> value of <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.AccessControlSections.Access&gt;</ph>, and later a <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> method is called on that object with an <ph id=\"ph4\">`includeSections`</ph> value of <ph id=\"ph5\">&lt;xref:System.Security.AccessControl.AccessControlSections.All&gt;</ph>, the resulting persisted <ph id=\"ph6\">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object will contain unpredictable values for its audit rules, group, and owner.","pos":[500,1003],"source":" For example, if a constructor is called with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.Access>, and later a <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is called on that object with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.All>, the resulting persisted <xref:System.Security.AccessControl.ObjectSecurity> object will contain unpredictable values for its audit rules, group, and owner."}]}],"pos":[70265,71269],"yaml":true,"extradata":"MT"},{"content":"The name used to retrieve the persisted information.","nodes":[{"pos":[0,52],"content":"The name used to retrieve the persisted information.","nodes":[{"content":"The name used to retrieve the persisted information.","pos":[0,52]}]}],"pos":[71483,71536],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.AccessControlSections\"></xref> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.","nodes":[{"pos":[0,240],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessControlSections\"&gt;&lt;/xref&gt;</ph> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.","source":"One of the <xref href=\"System.Security.AccessControl.AccessControlSections\"></xref> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save."}],"pos":[71645,71886],"yaml":true},{"content":"Saves the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object to permanent storage. We recommend that the values of the <code>includeSections</code> parameters passed to the constructor and persist methods be identical.","nodes":[{"pos":[0,307],"content":"Saves the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object to permanent storage. We recommend that the values of the <code>includeSections</code> parameters passed to the constructor and persist methods be identical.","nodes":[{"content":"Saves the specified sections of the security descriptor associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object to permanent storage.","pos":[0,171],"source":"Saves the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object to permanent storage."},{"content":"We recommend that the values of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">includeSections</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameters passed to the constructor and persist methods be identical.","pos":[172,307],"source":" We recommend that the values of the <code>includeSections</code> parameters passed to the constructor and persist methods be identical."}]}],"pos":[73534,73842],"yaml":true},{"content":"When persisting a <xref:System.Security.AccessControl.ObjectSecurity> object, if the value of the `includeSections` parameter passed to the <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is not identical to the value of the `includeSections` parameter passed to the constructor used to create that <xref:System.Security.AccessControl.ObjectSecurity> object, sections of the persisted <xref:System.Security.AccessControl.ObjectSecurity> object can contain unpredictable values. For example, if a constructor is called with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.Access>, and later a <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is called on that object with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.All>, the resulting persisted <xref:System.Security.AccessControl.ObjectSecurity> object will contain unpredictable values for its audit rules, group, and owner.","nodes":[{"pos":[0,1003],"content":"When persisting a <xref:System.Security.AccessControl.ObjectSecurity> object, if the value of the `includeSections` parameter passed to the <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is not identical to the value of the `includeSections` parameter passed to the constructor used to create that <xref:System.Security.AccessControl.ObjectSecurity> object, sections of the persisted <xref:System.Security.AccessControl.ObjectSecurity> object can contain unpredictable values. For example, if a constructor is called with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.Access>, and later a <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is called on that object with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.All>, the resulting persisted <xref:System.Security.AccessControl.ObjectSecurity> object will contain unpredictable values for its audit rules, group, and owner.","nodes":[{"content":"When persisting a <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object, if the value of the <ph id=\"ph2\">`includeSections`</ph> parameter passed to the <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> method is not identical to the value of the <ph id=\"ph4\">`includeSections`</ph> parameter passed to the constructor used to create that <ph id=\"ph5\">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object, sections of the persisted <ph id=\"ph6\">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object can contain unpredictable values.","pos":[0,499],"source":"When persisting a <xref:System.Security.AccessControl.ObjectSecurity> object, if the value of the `includeSections` parameter passed to the <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is not identical to the value of the `includeSections` parameter passed to the constructor used to create that <xref:System.Security.AccessControl.ObjectSecurity> object, sections of the persisted <xref:System.Security.AccessControl.ObjectSecurity> object can contain unpredictable values."},{"content":"For example, if a constructor is called with an <ph id=\"ph1\">`includeSections`</ph> value of <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.AccessControlSections.Access&gt;</ph>, and later a <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> method is called on that object with an <ph id=\"ph4\">`includeSections`</ph> value of <ph id=\"ph5\">&lt;xref:System.Security.AccessControl.AccessControlSections.All&gt;</ph>, the resulting persisted <ph id=\"ph6\">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object will contain unpredictable values for its audit rules, group, and owner.","pos":[500,1003],"source":" For example, if a constructor is called with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.Access>, and later a <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is called on that object with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.All>, the resulting persisted <xref:System.Security.AccessControl.ObjectSecurity> object will contain unpredictable values for its audit rules, group, and owner."}]}],"pos":[73853,74857],"yaml":true,"extradata":"MT"},{"content":"`true` to enable the privilege that allows the caller to take ownership of the object.","nodes":[{"pos":[0,86],"content":"<ph id=\"ph1\">`true`</ph> to enable the privilege that allows the caller to take ownership of the object.","source":"`true` to enable the privilege that allows the caller to take ownership of the object."}],"pos":[75212,75301],"yaml":true},{"content":"The name used to retrieve the persisted information.","nodes":[{"pos":[0,52],"content":"The name used to retrieve the persisted information.","nodes":[{"content":"The name used to retrieve the persisted information.","pos":[0,52]}]}],"pos":[75361,75414],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.AccessControlSections\"></xref> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.","nodes":[{"pos":[0,240],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AccessControlSections\"&gt;&lt;/xref&gt;</ph> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.","source":"One of the <xref href=\"System.Security.AccessControl.AccessControlSections\"></xref> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save."}],"pos":[75523,75764],"yaml":true},{"content":"Removes all access rules associated with the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref>.","nodes":[{"pos":[0,120],"content":"Removes all access rules associated with the specified <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph>.","source":"Removes all access rules associated with the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref>."}],"pos":[77396,77517],"yaml":true},{"content":"The <xref href=\"System.Security.Principal.IdentityReference\"></xref> for which to remove all access rules.","nodes":[{"pos":[0,106],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph> for which to remove all access rules.","source":"The <xref href=\"System.Security.Principal.IdentityReference\"></xref> for which to remove all access rules."}],"pos":[77743,77850],"yaml":true},{"content":"All access rules are not in canonical order.","nodes":[{"pos":[0,44],"content":"All access rules are not in canonical order.","nodes":[{"content":"All access rules are not in canonical order.","pos":[0,44]}]}],"pos":[78049,78094],"yaml":true},{"content":"Removes all audit rules associated with the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref>.","nodes":[{"pos":[0,119],"content":"Removes all audit rules associated with the specified <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph>.","source":"Removes all audit rules associated with the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref>."}],"pos":[79533,79653],"yaml":true},{"content":"The <xref href=\"System.Security.Principal.IdentityReference\"></xref> for which to remove all audit rules.","nodes":[{"pos":[0,105],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.IdentityReference\"&gt;&lt;/xref&gt;</ph> for which to remove all audit rules.","source":"The <xref href=\"System.Security.Principal.IdentityReference\"></xref> for which to remove all audit rules."}],"pos":[79878,79984],"yaml":true},{"content":"All audit rules are not in canonical order.","nodes":[{"pos":[0,43],"content":"All audit rules are not in canonical order.","nodes":[{"content":"All audit rules are not in canonical order.","pos":[0,43]}]}],"pos":[80182,80226],"yaml":true},{"content":"Locks this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object for read access.","nodes":[{"pos":[0,100],"content":"Locks this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object for read access.","source":"Locks this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object for read access."}],"pos":[81437,81538],"yaml":true},{"content":"Unlocks this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object for read access.","nodes":[{"pos":[0,102],"content":"Unlocks this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object for read access.","source":"Unlocks this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object for read access."}],"pos":[82915,83018],"yaml":true},{"content":"Sets or removes protection of the access rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object. Protected access rules cannot be modified by parent objects through inheritance.","nodes":[{"pos":[0,222],"content":"Sets or removes protection of the access rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object. Protected access rules cannot be modified by parent objects through inheritance.","nodes":[{"content":"Sets or removes protection of the access rules associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,141],"source":"Sets or removes protection of the access rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."},{"content":"Protected access rules cannot be modified by parent objects through inheritance.","pos":[142,222]}]}],"pos":[84618,84841],"yaml":true},{"content":"`true` to protect the access rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from inheritance; `false` to allow inheritance.","nodes":[{"pos":[0,176],"content":"<ph id=\"ph1\">`true`</ph> to protect the access rules associated with this <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object from inheritance; <ph id=\"ph3\">`false`</ph> to allow inheritance.","source":"`true` to protect the access rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from inheritance; `false` to allow inheritance."}],"pos":[85030,85209],"yaml":true},{"content":"`true` to preserve inherited access rules; `false` to remove inherited access rules. This parameter is ignored if <code>isProtected</code> is `false`.","nodes":[{"pos":[0,150],"content":"`true` to preserve inherited access rules; `false` to remove inherited access rules. This parameter is ignored if <code>isProtected</code> is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to preserve inherited access rules; <ph id=\"ph2\">`false`</ph> to remove inherited access rules.","pos":[0,84],"source":"`true` to preserve inherited access rules; `false` to remove inherited access rules."},{"content":"This parameter is ignored if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">isProtected</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`false`</ph>.","pos":[85,150],"source":" This parameter is ignored if <code>isProtected</code> is `false`."}]}],"pos":[85285,85438],"yaml":true},{"content":"This method attempts to remove inherited rules from a non-canonical Discretionary Access Control List (DACL).","nodes":[{"pos":[0,109],"content":"This method attempts to remove inherited rules from a non-canonical Discretionary Access Control List (DACL).","nodes":[{"content":"This method attempts to remove inherited rules from a non-canonical Discretionary Access Control List (DACL).","pos":[0,109]}]}],"pos":[85644,85754],"yaml":true},{"content":"Sets or removes protection of the audit rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object. Protected audit rules cannot be modified by parent objects through inheritance.","nodes":[{"pos":[0,220],"content":"Sets or removes protection of the audit rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object. Protected audit rules cannot be modified by parent objects through inheritance.","nodes":[{"content":"Sets or removes protection of the audit rules associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,140],"source":"Sets or removes protection of the audit rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."},{"content":"Protected audit rules cannot be modified by parent objects through inheritance.","pos":[141,220]}]}],"pos":[87190,87411],"yaml":true},{"content":"`true` to protect the audit rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from inheritance; `false` to allow inheritance.","nodes":[{"pos":[0,175],"content":"<ph id=\"ph1\">`true`</ph> to protect the audit rules associated with this <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object from inheritance; <ph id=\"ph3\">`false`</ph> to allow inheritance.","source":"`true` to protect the audit rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from inheritance; `false` to allow inheritance."}],"pos":[87599,87777],"yaml":true},{"content":"`true` to preserve inherited audit rules; `false` to remove inherited audit rules. This parameter is ignored if <code>isProtected</code> is `false`.","nodes":[{"pos":[0,148],"content":"`true` to preserve inherited audit rules; `false` to remove inherited audit rules. This parameter is ignored if <code>isProtected</code> is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to preserve inherited audit rules; <ph id=\"ph2\">`false`</ph> to remove inherited audit rules.","pos":[0,82],"source":"`true` to preserve inherited audit rules; `false` to remove inherited audit rules."},{"content":"This parameter is ignored if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">isProtected</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`false`</ph>.","pos":[83,148],"source":" This parameter is ignored if <code>isProtected</code> is `false`."}]}],"pos":[87853,88004],"yaml":true},{"content":"This method attempts to remove inherited rules from a non-canonical System Access Control List (SACL).","nodes":[{"pos":[0,102],"content":"This method attempts to remove inherited rules from a non-canonical System Access Control List (SACL).","nodes":[{"content":"This method attempts to remove inherited rules from a non-canonical System Access Control List (SACL).","pos":[0,102]}]}],"pos":[88209,88312],"yaml":true},{"content":"Sets the primary group for the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.","nodes":[{"pos":[0,145],"content":"Sets the primary group for the security descriptor associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Sets the primary group for the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."}],"pos":[89709,89855],"yaml":true},{"content":"The primary group to set.","nodes":[{"pos":[0,25],"content":"The primary group to set.","nodes":[{"content":"The primary group to set.","pos":[0,25]}]}],"pos":[90065,90091],"yaml":true},{"content":"Sets the owner for the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.","nodes":[{"pos":[0,137],"content":"Sets the owner for the security descriptor associated with this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object.","source":"Sets the owner for the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object."}],"pos":[91572,91710],"yaml":true},{"content":"The owner to set.","nodes":[{"pos":[0,17],"content":"The owner to set.","nodes":[{"content":"The owner to set.","pos":[0,17]}]}],"pos":[91920,91938],"yaml":true},{"content":"Sets the security descriptor for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from the specified array of byte values.","nodes":[{"pos":[0,151],"content":"Sets the security descriptor for this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object from the specified array of byte values.","source":"Sets the security descriptor for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from the specified array of byte values."}],"pos":[93434,93586],"yaml":true},{"content":"If the security descriptor represented by the binary data contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.  \n  \n This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","nodes":[{"pos":[0,388],"content":"If the security descriptor represented by the binary data contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.","nodes":[{"content":"If the security descriptor represented by the binary data contains <ph id=\"ph1\">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.","pos":[0,221],"source":"If the security descriptor represented by the binary data contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL."},{"content":"If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.","pos":[222,388]}]},{"pos":[395,609],"content":"This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","nodes":[{"content":"This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","pos":[0,214],"nodes":[{"content":"This can result in an application unintentionally allowing access to principals.","pos":[0,80]},{"content":"Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","pos":[81,214]}]}]}],"pos":[93597,94211],"yaml":true,"extradata":"MT"},{"content":"The array of bytes from which to set the security descriptor.","nodes":[{"pos":[0,61],"content":"The array of bytes from which to set the security descriptor.","nodes":[{"content":"The array of bytes from which to set the security descriptor.","pos":[0,61]}]}],"pos":[94381,94443],"yaml":true},{"content":"Sets the specified sections of the security descriptor for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from the specified array of byte values.","nodes":[{"pos":[0,177],"content":"Sets the specified sections of the security descriptor for this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object from the specified array of byte values.","source":"Sets the specified sections of the security descriptor for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from the specified array of byte values."}],"pos":[96187,96365],"yaml":true},{"content":"If the security descriptor represented by the binary data contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.  \n  \n This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","nodes":[{"pos":[0,388],"content":"If the security descriptor represented by the binary data contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.","nodes":[{"content":"If the security descriptor represented by the binary data contains <ph id=\"ph1\">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.","pos":[0,221],"source":"If the security descriptor represented by the binary data contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL."},{"content":"If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.","pos":[222,388]}]},{"pos":[395,609],"content":"This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","nodes":[{"content":"This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","pos":[0,214],"nodes":[{"content":"This can result in an application unintentionally allowing access to principals.","pos":[0,80]},{"content":"Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","pos":[81,214]}]}]}],"pos":[96376,96990],"yaml":true,"extradata":"MT"},{"content":"The array of bytes from which to set the security descriptor.","nodes":[{"pos":[0,61],"content":"The array of bytes from which to set the security descriptor.","nodes":[{"content":"The array of bytes from which to set the security descriptor.","pos":[0,61]}]}],"pos":[97229,97291],"yaml":true},{"content":"The sections (access rules, audit rules, owner, primary group) of the security descriptor to set.","nodes":[{"pos":[0,97],"content":"The sections (access rules, audit rules, owner, primary group) of the security descriptor to set.","nodes":[{"content":"The sections (access rules, audit rules, owner, primary group) of the security descriptor to set.","pos":[0,97]}]}],"pos":[97400,97498],"yaml":true},{"content":"Sets the security descriptor for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from the specified Security Descriptor Definition Language (SDDL) string.","nodes":[{"pos":[0,184],"content":"Sets the security descriptor for this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object from the specified Security Descriptor Definition Language (SDDL) string.","source":"Sets the security descriptor for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from the specified Security Descriptor Definition Language (SDDL) string."}],"pos":[99005,99190],"yaml":true},{"content":"If the security descriptor represented by the SDDL string contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.  \n  \n This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","nodes":[{"pos":[0,388],"content":"If the security descriptor represented by the SDDL string contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.","nodes":[{"content":"If the security descriptor represented by the SDDL string contains <ph id=\"ph1\">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.","pos":[0,221],"source":"If the security descriptor represented by the SDDL string contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL."},{"content":"If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.","pos":[222,388]}]},{"pos":[395,609],"content":"This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","nodes":[{"content":"This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","pos":[0,214],"nodes":[{"content":"This can result in an application unintentionally allowing access to principals.","pos":[0,80]},{"content":"Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","pos":[81,214]}]}]}],"pos":[99201,99815],"yaml":true,"extradata":"MT"},{"content":"The SDDL string from which to set the security descriptor.","nodes":[{"pos":[0,58],"content":"The SDDL string from which to set the security descriptor.","nodes":[{"content":"The SDDL string from which to set the security descriptor.","pos":[0,58]}]}],"pos":[99979,100038],"yaml":true},{"content":"Sets the specified sections of the security descriptor for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from the specified Security Descriptor Definition Language (SDDL) string.","nodes":[{"pos":[0,210],"content":"Sets the specified sections of the security descriptor for this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object from the specified Security Descriptor Definition Language (SDDL) string.","source":"Sets the specified sections of the security descriptor for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from the specified Security Descriptor Definition Language (SDDL) string."}],"pos":[101768,101979],"yaml":true},{"content":"If the security descriptor represented by the SDDL string contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.  \n  \n This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","nodes":[{"pos":[0,388],"content":"If the security descriptor represented by the SDDL string contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.","nodes":[{"content":"If the security descriptor represented by the SDDL string contains <ph id=\"ph1\">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.","pos":[0,221],"source":"If the security descriptor represented by the SDDL string contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL."},{"content":"If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.","pos":[222,388]}]},{"pos":[395,609],"content":"This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","nodes":[{"content":"This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","pos":[0,214],"nodes":[{"content":"This can result in an application unintentionally allowing access to principals.","pos":[0,80]},{"content":"Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.","pos":[81,214]}]}]}],"pos":[101990,102604],"yaml":true,"extradata":"MT"},{"content":"The SDDL string from which to set the security descriptor.","nodes":[{"pos":[0,58],"content":"The SDDL string from which to set the security descriptor.","nodes":[{"content":"The SDDL string from which to set the security descriptor.","pos":[0,58]}]}],"pos":[102837,102896],"yaml":true},{"content":"The sections (access rules, audit rules, owner, primary group) of the security descriptor to set.","nodes":[{"pos":[0,97],"content":"The sections (access rules, audit rules, owner, primary group) of the security descriptor to set.","nodes":[{"content":"The sections (access rules, audit rules, owner, primary group) of the security descriptor to set.","pos":[0,97]}]}],"pos":[103005,103103],"yaml":true},{"content":"Locks this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object for write access.","nodes":[{"pos":[0,101],"content":"Locks this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object for write access.","source":"Locks this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object for write access."}],"pos":[104425,104527],"yaml":true},{"content":"Unlocks this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object for write access.","nodes":[{"pos":[0,103],"content":"Unlocks this <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.ObjectSecurity\"&gt;&lt;/xref&gt;</ph> object for write access.","source":"Unlocks this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object for write access."}],"pos":[105912,106016],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.ObjectSecurity\n  commentId: T:System.Security.AccessControl.ObjectSecurity\n  id: ObjectSecurity\n  children:\n  - System.Security.AccessControl.ObjectSecurity.#ctor\n  - System.Security.AccessControl.ObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)\n  - System.Security.AccessControl.ObjectSecurity.#ctor(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.AccessRightType\n  - System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  - System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  - System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.GroupModified\n  - System.Security.AccessControl.ObjectSecurity.IsContainer\n  - System.Security.AccessControl.ObjectSecurity.IsDS\n  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.OwnerModified\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.ReadLock\n  - System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.WriteLock\n  - System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  langs:\n  - csharp\n  name: ObjectSecurity\n  nameWithType: ObjectSecurity\n  fullName: System.Security.AccessControl.ObjectSecurity\n  type: Class\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Provides the ability to control access to objects without direct manipulation of Access Control Lists (ACLs). This class is the abstract base class for the <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> and <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\"></xref> classes.\n  syntax:\n    content: public abstract class ObjectSecurity\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Security.AccessControl.CommonObjectSecurity\n  - System.Security.AccessControl.DirectoryObjectSecurity\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.#ctor\n  commentId: M:System.Security.AccessControl.ObjectSecurity.#ctor\n  id: '#ctor'\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: ObjectSecurity()\n  nameWithType: ObjectSecurity.ObjectSecurity()\n  fullName: ObjectSecurity.ObjectSecurity()\n  type: Constructor\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> class.\n  syntax:\n    content: protected ObjectSecurity ();\n    parameters: []\n  overload: System.Security.AccessControl.ObjectSecurity.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)\n  commentId: M:System.Security.AccessControl.ObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)\n  id: '#ctor(System.Security.AccessControl.CommonSecurityDescriptor)'\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: ObjectSecurity(CommonSecurityDescriptor)\n  nameWithType: ObjectSecurity.ObjectSecurity(CommonSecurityDescriptor)\n  fullName: ObjectSecurity.ObjectSecurity(CommonSecurityDescriptor)\n  type: Constructor\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> class.\n  syntax:\n    content: protected ObjectSecurity (System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor);\n    parameters:\n    - id: securityDescriptor\n      type: System.Security.AccessControl.CommonSecurityDescriptor\n      description: The <xref href=\"System.Security.AccessControl.CommonSecurityDescriptor\"></xref> of the new <xref href=\"System.Security.AccessControl.CommonObjectSecurity\"></xref> instance.\n  overload: System.Security.AccessControl.ObjectSecurity.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.#ctor(System.Boolean,System.Boolean)\n  commentId: M:System.Security.AccessControl.ObjectSecurity.#ctor(System.Boolean,System.Boolean)\n  id: '#ctor(System.Boolean,System.Boolean)'\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: ObjectSecurity(Boolean, Boolean)\n  nameWithType: ObjectSecurity.ObjectSecurity(Boolean, Boolean)\n  fullName: ObjectSecurity.ObjectSecurity(Boolean, Boolean)\n  type: Constructor\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> class.\n  syntax:\n    content: protected ObjectSecurity (bool isContainer, bool isDS);\n    parameters:\n    - id: isContainer\n      type: System.Boolean\n      description: '`true` if the new <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a container object.'\n    - id: isDS\n      type: System.Boolean\n      description: True if the new <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a directory object.\n  overload: System.Security.AccessControl.ObjectSecurity.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRightType\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AccessRightType\n  id: AccessRightType\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: AccessRightType\n  nameWithType: ObjectSecurity.AccessRightType\n  fullName: ObjectSecurity.AccessRightType\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the <xref href=\"System.Type\"></xref> of the securable object associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  syntax:\n    content: public abstract Type AccessRightType { get; }\n    return:\n      type: System.Type\n      description: The type of the securable object associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  overload: System.Security.AccessControl.ObjectSecurity.AccessRightType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  commentId: M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  nameWithType: ObjectSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: ObjectSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.AccessRule\"></xref> class with the specified values.\n  syntax:\n    content: public abstract System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: The identity to which the access rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.\n    - id: accessMask\n      type: System.Int32\n      description: The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.\n    - id: isInherited\n      type: System.Boolean\n      description: true if this rule is inherited from a parent container.\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Specifies the inheritance properties of the access rule.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: Specifies the valid access control type.\n    return:\n      type: System.Security.AccessControl.AccessRule\n      description: The <xref href=\"System.Security.AccessControl.AccessRule\"></xref> object that this method creates.\n  overload: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  id: AccessRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: AccessRulesModified\n  nameWithType: ObjectSecurity.AccessRulesModified\n  fullName: ObjectSecurity.AccessRulesModified\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets or sets a Boolean value that specifies whether the access rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object have been modified.\n  syntax:\n    content: protected bool AccessRulesModified { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the access rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object have been modified; otherwise, `false`.'\n  overload: System.Security.AccessControl.ObjectSecurity.AccessRulesModified*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  id: AccessRuleType\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: AccessRuleType\n  nameWithType: ObjectSecurity.AccessRuleType\n  fullName: ObjectSecurity.AccessRuleType\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the <xref href=\"System.Type\"></xref> of the object associated with the access rules of this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object. The <xref href=\"System.Type\"></xref> object must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  syntax:\n    content: public abstract Type AccessRuleType { get; }\n    return:\n      type: System.Type\n      description: The type of the object associated with the access rules of this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  overload: System.Security.AccessControl.ObjectSecurity.AccessRuleType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  id: AreAccessRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: AreAccessRulesCanonical\n  nameWithType: ObjectSecurity.AreAccessRulesCanonical\n  fullName: ObjectSecurity.AreAccessRulesCanonical\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets a Boolean value that specifies whether the access rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object are in canonical order.\n  syntax:\n    content: public bool AreAccessRulesCanonical { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the access rules are in canonical order; otherwise, `false`.'\n  overload: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  id: AreAccessRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: AreAccessRulesProtected\n  nameWithType: ObjectSecurity.AreAccessRulesProtected\n  fullName: ObjectSecurity.AreAccessRulesProtected\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets a Boolean value that specifies whether the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is protected.\n  syntax:\n    content: public bool AreAccessRulesProtected { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the DACL is protected; otherwise, `false`.'\n  overload: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  id: AreAuditRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: AreAuditRulesCanonical\n  nameWithType: ObjectSecurity.AreAuditRulesCanonical\n  fullName: ObjectSecurity.AreAuditRulesCanonical\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets a Boolean value that specifies whether the audit rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object are in canonical order.\n  syntax:\n    content: public bool AreAuditRulesCanonical { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the audit rules are in canonical order; otherwise, `false`.'\n  overload: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  id: AreAuditRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: AreAuditRulesProtected\n  nameWithType: ObjectSecurity.AreAuditRulesProtected\n  fullName: ObjectSecurity.AreAuditRulesProtected\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets a Boolean value that specifies whether the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is protected.\n  syntax:\n    content: public bool AreAuditRulesProtected { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the SACL is protected; otherwise, `false`.'\n  overload: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  commentId: M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  nameWithType: ObjectSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  fullName: ObjectSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.AuditRule\"></xref> class with the specified values.\n  syntax:\n    content: public abstract System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: The identity to which the audit rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.\n    - id: accessMask\n      type: System.Int32\n      description: The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.\n    - id: isInherited\n      type: System.Boolean\n      description: '`true` if this rule is inherited from a parent container.'\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Specifies the inheritance properties of the audit rule.\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Specifies whether inherited audit rules are automatically propagated. The propagation flags are ignored if <code>inheritanceFlags</code> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\"></xref>.\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: Specifies the conditions for which the rule is audited.\n    return:\n      type: System.Security.AccessControl.AuditRule\n      description: The <xref href=\"System.Security.AccessControl.AuditRule\"></xref> object that this method creates.\n  overload: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  id: AuditRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: AuditRulesModified\n  nameWithType: ObjectSecurity.AuditRulesModified\n  fullName: ObjectSecurity.AuditRulesModified\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets or sets a Boolean value that specifies whether the audit rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object have been modified.\n  syntax:\n    content: protected bool AuditRulesModified { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the audit rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object have been modified; otherwise, `false`.'\n  overload: System.Security.AccessControl.ObjectSecurity.AuditRulesModified*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  commentId: P:System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  id: AuditRuleType\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: AuditRuleType\n  nameWithType: ObjectSecurity.AuditRuleType\n  fullName: ObjectSecurity.AuditRuleType\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the <xref href=\"System.Type\"></xref> object associated with the audit rules of this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object. The <xref href=\"System.Type\"></xref> object must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> object.\n  syntax:\n    content: public abstract Type AuditRuleType { get; }\n    return:\n      type: System.Type\n      description: The type of the object associated with the audit rules of this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  overload: System.Security.AccessControl.ObjectSecurity.AuditRuleType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  commentId: M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  id: GetGroup(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: GetGroup(Type)\n  nameWithType: ObjectSecurity.GetGroup(Type)\n  fullName: ObjectSecurity.GetGroup(Type)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the primary group associated with the specified owner.\n  syntax:\n    content: public System.Security.Principal.IdentityReference GetGroup (Type targetType);\n    parameters:\n    - id: targetType\n      type: System.Type\n      description: The owner for which to get the primary group.\n    return:\n      type: System.Security.Principal.IdentityReference\n      description: The primary group associated with the specified owner.\n  overload: System.Security.AccessControl.ObjectSecurity.GetGroup*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  commentId: M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  id: GetOwner(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: GetOwner(Type)\n  nameWithType: ObjectSecurity.GetOwner(Type)\n  fullName: ObjectSecurity.GetOwner(Type)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the owner associated with the specified primary group.\n  syntax:\n    content: public System.Security.Principal.IdentityReference GetOwner (Type targetType);\n    parameters:\n    - id: targetType\n      type: System.Type\n      description: The primary group for which to get the owner.\n    return:\n      type: System.Security.Principal.IdentityReference\n      description: The owner associated with the specified group.\n  overload: System.Security.AccessControl.ObjectSecurity.GetOwner*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetType</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>targetType</code> is not an <xref href=\"System.Security.Principal.IdentityReference\"></xref> type.\n  - type: System.Security.Principal.IdentityNotMappedException\n    commentId: T:System.Security.Principal.IdentityNotMappedException\n    description: Some or all identity references could not be translated.\n  - type: System.SystemException\n    commentId: T:System.SystemException\n    description: A Win32 error code was returned.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  commentId: M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  id: GetSecurityDescriptorBinaryForm\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: GetSecurityDescriptorBinaryForm()\n  nameWithType: ObjectSecurity.GetSecurityDescriptorBinaryForm()\n  fullName: ObjectSecurity.GetSecurityDescriptorBinaryForm()\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Returns an array of byte values that represents the security descriptor information for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  remarks: This method returns the security descriptor information currently in memory. It does not retrieve information saved in permanent storage.\n  syntax:\n    content: public byte[] GetSecurityDescriptorBinaryForm ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: An array of byte values that represents the security descriptor for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object. This method returns `null` if there is no security information in this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  overload: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  commentId: M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  id: GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: GetSecurityDescriptorSddlForm(AccessControlSections)\n  nameWithType: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)\n  fullName: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Returns the Security Descriptor Definition Language (SDDL) representation of the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  syntax:\n    content: public string GetSecurityDescriptorSddlForm (System.Security.AccessControl.AccessControlSections includeSections);\n    parameters:\n    - id: includeSections\n      type: System.Security.AccessControl.AccessControlSections\n      description: Specifies which sections (access rules, audit rules, primary group, owner) of the security descriptor to get.\n    return:\n      type: System.String\n      description: The SDDL representation of the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  overload: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.GroupModified\n  commentId: P:System.Security.AccessControl.ObjectSecurity.GroupModified\n  id: GroupModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: GroupModified\n  nameWithType: ObjectSecurity.GroupModified\n  fullName: ObjectSecurity.GroupModified\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets or sets a Boolean value that specifies whether the group associated with the securable object has been modified.\n  syntax:\n    content: protected bool GroupModified { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the group associated with the securable object has been modified; otherwise, `false`.'\n  overload: System.Security.AccessControl.ObjectSecurity.GroupModified*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.IsContainer\n  commentId: P:System.Security.AccessControl.ObjectSecurity.IsContainer\n  id: IsContainer\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: IsContainer\n  nameWithType: ObjectSecurity.IsContainer\n  fullName: ObjectSecurity.IsContainer\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets a Boolean value that specifies whether this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a container object.\n  syntax:\n    content: protected bool IsContainer { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a container object; otherwise, `false`.'\n  overload: System.Security.AccessControl.ObjectSecurity.IsContainer*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.IsDS\n  commentId: P:System.Security.AccessControl.ObjectSecurity.IsDS\n  id: IsDS\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: IsDS\n  nameWithType: ObjectSecurity.IsDS\n  fullName: ObjectSecurity.IsDS\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets a Boolean value that specifies whether this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a directory object.\n  syntax:\n    content: protected bool IsDS { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object is a directory object; otherwise, `false`.'\n  overload: System.Security.AccessControl.ObjectSecurity.IsDS*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  commentId: M:System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  id: IsSddlConversionSupported\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: IsSddlConversionSupported()\n  nameWithType: ObjectSecurity.IsSddlConversionSupported()\n  fullName: ObjectSecurity.IsSddlConversionSupported()\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Returns a Boolean value that specifies whether the security descriptor associated with this  <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object can be converted to the Security Descriptor Definition Language (SDDL) format.\n  syntax:\n    content: public static bool IsSddlConversionSupported ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the security descriptor associated with this  <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object can be converted to the Security Descriptor Definition Language (SDDL) format; otherwise, `false`.'\n  overload: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  id: ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: ModifyAccess(AccessControlModification, AccessRule, Boolean)\n  nameWithType: ObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)\n  fullName: ObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  remarks: To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.\n  syntax:\n    content: protected abstract bool ModifyAccess (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);\n    parameters:\n    - id: modification\n      type: System.Security.AccessControl.AccessControlModification\n      description: The modification to apply to the DACL.\n    - id: rule\n      type: System.Security.AccessControl.AccessRule\n      description: The access rule to modify.\n    - id: modified\n      type: System.Boolean\n      description: '`true` if the DACL is successfully modified; otherwise, `false`.'\n    return:\n      type: System.Boolean\n      description: '`true` if the DACL is successfully modified; otherwise, `false`.'\n  overload: System.Security.AccessControl.ObjectSecurity.ModifyAccess*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  id: ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n  nameWithType: ObjectSecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n  fullName: ObjectSecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  remarks: To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.\n  syntax:\n    content: public virtual bool ModifyAccessRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);\n    parameters:\n    - id: modification\n      type: System.Security.AccessControl.AccessControlModification\n      description: The modification to apply to the DACL.\n    - id: rule\n      type: System.Security.AccessControl.AccessRule\n      description: The access rule to modify.\n    - id: modified\n      type: System.Boolean\n      description: '`true` if the DACL is successfully modified; otherwise, `false`.'\n    return:\n      type: System.Boolean\n      description: '`true` if the DACL is successfully modified; otherwise, `false`.'\n  overload: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  id: ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: ModifyAudit(AccessControlModification, AuditRule, Boolean)\n  nameWithType: ObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)\n  fullName: ObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Applies the specified modification to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  syntax:\n    content: protected abstract bool ModifyAudit (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);\n    parameters:\n    - id: modification\n      type: System.Security.AccessControl.AccessControlModification\n      description: The modification to apply to the SACL.\n    - id: rule\n      type: System.Security.AccessControl.AuditRule\n      description: The audit rule to modify.\n    - id: modified\n      type: System.Boolean\n      description: '`true` if the SACL is successfully modified; otherwise, `false`.'\n    return:\n      type: System.Boolean\n      description: '`true` if the SACL is successfully modified; otherwise, `false`.'\n  overload: System.Security.AccessControl.ObjectSecurity.ModifyAudit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  id: ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n  nameWithType: ObjectSecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n  fullName: ObjectSecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Applies the specified modification to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  syntax:\n    content: public virtual bool ModifyAuditRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);\n    parameters:\n    - id: modification\n      type: System.Security.AccessControl.AccessControlModification\n      description: The modification to apply to the SACL.\n    - id: rule\n      type: System.Security.AccessControl.AuditRule\n      description: The audit rule to modify.\n    - id: modified\n      type: System.Boolean\n      description: '`true` if the SACL is successfully modified; otherwise, `false`.'\n    return:\n      type: System.Boolean\n      description: '`true` if the SACL is successfully modified; otherwise, `false`.'\n  overload: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.OwnerModified\n  commentId: P:System.Security.AccessControl.ObjectSecurity.OwnerModified\n  id: OwnerModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: OwnerModified\n  nameWithType: ObjectSecurity.OwnerModified\n  fullName: ObjectSecurity.OwnerModified\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets or sets a Boolean value that specifies whether the owner of the securable object has been modified.\n  syntax:\n    content: protected bool OwnerModified { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the owner of the securable object has been modified; otherwise, `false`.'\n  overload: System.Security.AccessControl.ObjectSecurity.OwnerModified*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  commentId: M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  id: Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: Persist(SafeHandle, AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(SafeHandle, AccessControlSections)\n  fullName: ObjectSecurity.Persist(SafeHandle, AccessControlSections)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Saves the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object to permanent storage. We recommend that the values of the <code>includeSections</code> parameters passed to the constructor and persist methods be identical.\n  remarks: When persisting a <xref:System.Security.AccessControl.ObjectSecurity> object, if the value of the `includeSections` parameter passed to the <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is not identical to the value of the `includeSections` parameter passed to the constructor used to create that <xref:System.Security.AccessControl.ObjectSecurity> object, sections of the persisted <xref:System.Security.AccessControl.ObjectSecurity> object can contain unpredictable values. For example, if a constructor is called with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.Access>, and later a <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is called on that object with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.All>, the resulting persisted <xref:System.Security.AccessControl.ObjectSecurity> object will contain unpredictable values for its audit rules, group, and owner.\n  syntax:\n    content: protected virtual void Persist (System.Runtime.InteropServices.SafeHandle handle, System.Security.AccessControl.AccessControlSections includeSections);\n    parameters:\n    - id: handle\n      type: System.Runtime.InteropServices.SafeHandle\n      description: The handle used to retrieve the persisted information.\n    - id: includeSections\n      type: System.Security.AccessControl.AccessControlSections\n      description: One of the <xref href=\"System.Security.AccessControl.AccessControlSections\"></xref> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.\n  overload: System.Security.AccessControl.ObjectSecurity.Persist*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  commentId: M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  id: Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: Persist(String, AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(String, AccessControlSections)\n  fullName: ObjectSecurity.Persist(String, AccessControlSections)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Saves the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object to permanent storage. We recommend that the values of the <code>includeSections</code> parameters passed to the constructor and persist methods be identical.\n  remarks: When persisting a <xref:System.Security.AccessControl.ObjectSecurity> object, if the value of the `includeSections` parameter passed to the <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is not identical to the value of the `includeSections` parameter passed to the constructor used to create that <xref:System.Security.AccessControl.ObjectSecurity> object, sections of the persisted <xref:System.Security.AccessControl.ObjectSecurity> object can contain unpredictable values. For example, if a constructor is called with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.Access>, and later a <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is called on that object with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.All>, the resulting persisted <xref:System.Security.AccessControl.ObjectSecurity> object will contain unpredictable values for its audit rules, group, and owner.\n  syntax:\n    content: protected virtual void Persist (string name, System.Security.AccessControl.AccessControlSections includeSections);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name used to retrieve the persisted information.\n    - id: includeSections\n      type: System.Security.AccessControl.AccessControlSections\n      description: One of the <xref href=\"System.Security.AccessControl.AccessControlSections\"></xref> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.\n  overload: System.Security.AccessControl.ObjectSecurity.Persist*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  commentId: M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  id: Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: Persist(Boolean, String, AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(Boolean, String, AccessControlSections)\n  fullName: ObjectSecurity.Persist(Boolean, String, AccessControlSections)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Saves the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object to permanent storage. We recommend that the values of the <code>includeSections</code> parameters passed to the constructor and persist methods be identical.\n  remarks: When persisting a <xref:System.Security.AccessControl.ObjectSecurity> object, if the value of the `includeSections` parameter passed to the <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is not identical to the value of the `includeSections` parameter passed to the constructor used to create that <xref:System.Security.AccessControl.ObjectSecurity> object, sections of the persisted <xref:System.Security.AccessControl.ObjectSecurity> object can contain unpredictable values. For example, if a constructor is called with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.Access>, and later a <xref:System.Security.AccessControl.ObjectSecurity.Persist%2A> method is called on that object with an `includeSections` value of <xref:System.Security.AccessControl.AccessControlSections.All>, the resulting persisted <xref:System.Security.AccessControl.ObjectSecurity> object will contain unpredictable values for its audit rules, group, and owner.\n  syntax:\n    content: >-\n      [System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions]\n\n      protected virtual void Persist (bool enableOwnershipPrivilege, string name, System.Security.AccessControl.AccessControlSections includeSections);\n    parameters:\n    - id: enableOwnershipPrivilege\n      type: System.Boolean\n      description: '`true` to enable the privilege that allows the caller to take ownership of the object.'\n    - id: name\n      type: System.String\n      description: The name used to retrieve the persisted information.\n    - id: includeSections\n      type: System.Security.AccessControl.AccessControlSections\n      description: One of the <xref href=\"System.Security.AccessControl.AccessControlSections\"></xref> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.\n  overload: System.Security.AccessControl.ObjectSecurity.Persist*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  commentId: M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  id: PurgeAccessRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: PurgeAccessRules(IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAccessRules(IdentityReference)\n  fullName: ObjectSecurity.PurgeAccessRules(IdentityReference)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all access rules associated with the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref>.\n  syntax:\n    content: public virtual void PurgeAccessRules (System.Security.Principal.IdentityReference identity);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: The <xref href=\"System.Security.Principal.IdentityReference\"></xref> for which to remove all access rules.\n  overload: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: All access rules are not in canonical order.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  commentId: M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  id: PurgeAuditRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: PurgeAuditRules(IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAuditRules(IdentityReference)\n  fullName: ObjectSecurity.PurgeAuditRules(IdentityReference)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Removes all audit rules associated with the specified <xref href=\"System.Security.Principal.IdentityReference\"></xref>.\n  syntax:\n    content: public virtual void PurgeAuditRules (System.Security.Principal.IdentityReference identity);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: The <xref href=\"System.Security.Principal.IdentityReference\"></xref> for which to remove all audit rules.\n  overload: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: All audit rules are not in canonical order.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.ReadLock\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ReadLock\n  id: ReadLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: ReadLock()\n  nameWithType: ObjectSecurity.ReadLock()\n  fullName: ObjectSecurity.ReadLock()\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Locks this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object for read access.\n  syntax:\n    content: protected void ReadLock ();\n    parameters: []\n  overload: System.Security.AccessControl.ObjectSecurity.ReadLock*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  commentId: M:System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  id: ReadUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: ReadUnlock()\n  nameWithType: ObjectSecurity.ReadUnlock()\n  fullName: ObjectSecurity.ReadUnlock()\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Unlocks this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object for read access.\n  syntax:\n    content: protected void ReadUnlock ();\n    parameters: []\n  overload: System.Security.AccessControl.ObjectSecurity.ReadUnlock*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  id: SetAccessRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: SetAccessRuleProtection(Boolean, Boolean)\n  nameWithType: ObjectSecurity.SetAccessRuleProtection(Boolean, Boolean)\n  fullName: ObjectSecurity.SetAccessRuleProtection(Boolean, Boolean)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets or removes protection of the access rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object. Protected access rules cannot be modified by parent objects through inheritance.\n  syntax:\n    content: public void SetAccessRuleProtection (bool isProtected, bool preserveInheritance);\n    parameters:\n    - id: isProtected\n      type: System.Boolean\n      description: '`true` to protect the access rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from inheritance; `false` to allow inheritance.'\n    - id: preserveInheritance\n      type: System.Boolean\n      description: '`true` to preserve inherited access rules; `false` to remove inherited access rules. This parameter is ignored if <code>isProtected</code> is `false`.'\n  overload: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This method attempts to remove inherited rules from a non-canonical Discretionary Access Control List (DACL).\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  id: SetAuditRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: SetAuditRuleProtection(Boolean, Boolean)\n  nameWithType: ObjectSecurity.SetAuditRuleProtection(Boolean, Boolean)\n  fullName: ObjectSecurity.SetAuditRuleProtection(Boolean, Boolean)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets or removes protection of the audit rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object. Protected audit rules cannot be modified by parent objects through inheritance.\n  syntax:\n    content: public void SetAuditRuleProtection (bool isProtected, bool preserveInheritance);\n    parameters:\n    - id: isProtected\n      type: System.Boolean\n      description: '`true` to protect the audit rules associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from inheritance; `false` to allow inheritance.'\n    - id: preserveInheritance\n      type: System.Boolean\n      description: '`true` to preserve inherited audit rules; `false` to remove inherited audit rules. This parameter is ignored if <code>isProtected</code> is `false`.'\n  overload: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This method attempts to remove inherited rules from a non-canonical System Access Control List (SACL).\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  id: SetGroup(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: SetGroup(IdentityReference)\n  nameWithType: ObjectSecurity.SetGroup(IdentityReference)\n  fullName: ObjectSecurity.SetGroup(IdentityReference)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets the primary group for the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  syntax:\n    content: public void SetGroup (System.Security.Principal.IdentityReference identity);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: The primary group to set.\n  overload: System.Security.AccessControl.ObjectSecurity.SetGroup*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  id: SetOwner(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: SetOwner(IdentityReference)\n  nameWithType: ObjectSecurity.SetOwner(IdentityReference)\n  fullName: ObjectSecurity.SetOwner(IdentityReference)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets the owner for the security descriptor associated with this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object.\n  syntax:\n    content: public void SetOwner (System.Security.Principal.IdentityReference identity);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: The owner to set.\n  overload: System.Security.AccessControl.ObjectSecurity.SetOwner*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  id: SetSecurityDescriptorBinaryForm(System.Byte[])\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: SetSecurityDescriptorBinaryForm(Byte[])\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])\n  fullName: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets the security descriptor for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from the specified array of byte values.\n  remarks: \"If the security descriptor represented by the binary data contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.  \\n  \\n This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.\"\n  syntax:\n    content: public void SetSecurityDescriptorBinaryForm (byte[] binaryForm);\n    parameters:\n    - id: binaryForm\n      type: System.Byte[]\n      description: The array of bytes from which to set the security descriptor.\n  overload: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  id: SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n  fullName: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets the specified sections of the security descriptor for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from the specified array of byte values.\n  remarks: \"If the security descriptor represented by the binary data contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.  \\n  \\n This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.\"\n  syntax:\n    content: public void SetSecurityDescriptorBinaryForm (byte[] binaryForm, System.Security.AccessControl.AccessControlSections includeSections);\n    parameters:\n    - id: binaryForm\n      type: System.Byte[]\n      description: The array of bytes from which to set the security descriptor.\n    - id: includeSections\n      type: System.Security.AccessControl.AccessControlSections\n      description: The sections (access rules, audit rules, owner, primary group) of the security descriptor to set.\n  overload: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  id: SetSecurityDescriptorSddlForm(System.String)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: SetSecurityDescriptorSddlForm(String)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String)\n  fullName: ObjectSecurity.SetSecurityDescriptorSddlForm(String)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets the security descriptor for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from the specified Security Descriptor Definition Language (SDDL) string.\n  remarks: \"If the security descriptor represented by the SDDL string contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.  \\n  \\n This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.\"\n  syntax:\n    content: public void SetSecurityDescriptorSddlForm (string sddlForm);\n    parameters:\n    - id: sddlForm\n      type: System.String\n      description: The SDDL string from which to set the security descriptor.\n  overload: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  id: SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: SetSecurityDescriptorSddlForm(String, AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String, AccessControlSections)\n  fullName: ObjectSecurity.SetSecurityDescriptorSddlForm(String, AccessControlSections)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Sets the specified sections of the security descriptor for this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object from the specified Security Descriptor Definition Language (SDDL) string.\n  remarks: \"If the security descriptor represented by the SDDL string contains `null` for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL. If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.  \\n  \\n This can result in an application unintentionally allowing access to principals. Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.\"\n  syntax:\n    content: public void SetSecurityDescriptorSddlForm (string sddlForm, System.Security.AccessControl.AccessControlSections includeSections);\n    parameters:\n    - id: sddlForm\n      type: System.String\n      description: The SDDL string from which to set the security descriptor.\n    - id: includeSections\n      type: System.Security.AccessControl.AccessControlSections\n      description: The sections (access rules, audit rules, owner, primary group) of the security descriptor to set.\n  overload: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.WriteLock\n  commentId: M:System.Security.AccessControl.ObjectSecurity.WriteLock\n  id: WriteLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: WriteLock()\n  nameWithType: ObjectSecurity.WriteLock()\n  fullName: ObjectSecurity.WriteLock()\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Locks this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object for write access.\n  syntax:\n    content: protected void WriteLock ();\n    parameters: []\n  overload: System.Security.AccessControl.ObjectSecurity.WriteLock*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  commentId: M:System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  id: WriteUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  langs:\n  - csharp\n  name: WriteUnlock()\n  nameWithType: ObjectSecurity.WriteUnlock()\n  fullName: ObjectSecurity.WriteUnlock()\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Unlocks this <xref href=\"System.Security.AccessControl.ObjectSecurity\"></xref> object for write access.\n  syntax:\n    content: protected void WriteUnlock ();\n    parameters: []\n  overload: System.Security.AccessControl.ObjectSecurity.WriteUnlock*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Security.Principal.IdentityNotMappedException\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityNotMappedException\n  nameWithType: IdentityNotMappedException\n  fullName: System.Security.Principal.IdentityNotMappedException\n- uid: System.SystemException\n  parent: System\n  isExternal: false\n  name: SystemException\n  nameWithType: SystemException\n  fullName: System.SystemException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Security.AccessControl.ObjectSecurity.#ctor\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ObjectSecurity()\n  nameWithType: ObjectSecurity.ObjectSecurity()\n  fullName: ObjectSecurity.ObjectSecurity()\n- uid: System.Security.AccessControl.ObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ObjectSecurity(CommonSecurityDescriptor)\n  nameWithType: ObjectSecurity.ObjectSecurity(CommonSecurityDescriptor)\n  fullName: ObjectSecurity.ObjectSecurity(CommonSecurityDescriptor)\n- uid: System.Security.AccessControl.CommonSecurityDescriptor\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CommonSecurityDescriptor\n  nameWithType: CommonSecurityDescriptor\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor\n- uid: System.Security.AccessControl.ObjectSecurity.#ctor(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ObjectSecurity(Boolean, Boolean)\n  nameWithType: ObjectSecurity.ObjectSecurity(Boolean, Boolean)\n  fullName: ObjectSecurity.ObjectSecurity(Boolean, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRightType\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRightType\n  nameWithType: ObjectSecurity.AccessRightType\n  fullName: ObjectSecurity.AccessRightType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  nameWithType: ObjectSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n  fullName: ObjectSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)\n- uid: System.Security.AccessControl.AccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessRule\n  nameWithType: AccessRule\n  fullName: System.Security.AccessControl.AccessRule\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRulesModified\n  nameWithType: ObjectSecurity.AccessRulesModified\n  fullName: ObjectSecurity.AccessRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleType\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRuleType\n  nameWithType: ObjectSecurity.AccessRuleType\n  fullName: ObjectSecurity.AccessRuleType\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesCanonical\n  nameWithType: ObjectSecurity.AreAccessRulesCanonical\n  fullName: ObjectSecurity.AreAccessRulesCanonical\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesProtected\n  nameWithType: ObjectSecurity.AreAccessRulesProtected\n  fullName: ObjectSecurity.AreAccessRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesCanonical\n  nameWithType: ObjectSecurity.AreAuditRulesCanonical\n  fullName: ObjectSecurity.AreAuditRulesCanonical\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesProtected\n  nameWithType: ObjectSecurity.AreAuditRulesProtected\n  fullName: ObjectSecurity.AreAuditRulesProtected\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  nameWithType: ObjectSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n  fullName: ObjectSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)\n- uid: System.Security.AccessControl.AuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditRule\n  nameWithType: AuditRule\n  fullName: System.Security.AccessControl.AuditRule\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRulesModified\n  nameWithType: ObjectSecurity.AuditRulesModified\n  fullName: ObjectSecurity.AuditRulesModified\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleType\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRuleType\n  nameWithType: ObjectSecurity.AuditRuleType\n  fullName: ObjectSecurity.AuditRuleType\n- uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetGroup(Type)\n  nameWithType: ObjectSecurity.GetGroup(Type)\n  fullName: ObjectSecurity.GetGroup(Type)\n- uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetOwner(Type)\n  nameWithType: ObjectSecurity.GetOwner(Type)\n  fullName: ObjectSecurity.GetOwner(Type)\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorBinaryForm()\n  nameWithType: ObjectSecurity.GetSecurityDescriptorBinaryForm()\n  fullName: ObjectSecurity.GetSecurityDescriptorBinaryForm()\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorSddlForm(AccessControlSections)\n  nameWithType: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)\n  fullName: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.AccessControl.AccessControlSections\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlSections\n  nameWithType: AccessControlSections\n  fullName: System.Security.AccessControl.AccessControlSections\n- uid: System.Security.AccessControl.ObjectSecurity.GroupModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GroupModified\n  nameWithType: ObjectSecurity.GroupModified\n  fullName: ObjectSecurity.GroupModified\n- uid: System.Security.AccessControl.ObjectSecurity.IsContainer\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsContainer\n  nameWithType: ObjectSecurity.IsContainer\n  fullName: ObjectSecurity.IsContainer\n- uid: System.Security.AccessControl.ObjectSecurity.IsDS\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsDS\n  nameWithType: ObjectSecurity.IsDS\n  fullName: ObjectSecurity.IsDS\n- uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsSddlConversionSupported()\n  nameWithType: ObjectSecurity.IsSddlConversionSupported()\n  fullName: ObjectSecurity.IsSddlConversionSupported()\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ModifyAccess(AccessControlModification, AccessRule, Boolean)\n  nameWithType: ObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)\n  fullName: ObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)\n- uid: System.Security.AccessControl.AccessControlModification\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlModification\n  nameWithType: AccessControlModification\n  fullName: System.Security.AccessControl.AccessControlModification\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n  nameWithType: ObjectSecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n  fullName: ObjectSecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ModifyAudit(AccessControlModification, AuditRule, Boolean)\n  nameWithType: ObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)\n  fullName: ObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n  nameWithType: ObjectSecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n  fullName: ObjectSecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.OwnerModified\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: OwnerModified\n  nameWithType: ObjectSecurity.OwnerModified\n  fullName: ObjectSecurity.OwnerModified\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: Persist(SafeHandle, AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(SafeHandle, AccessControlSections)\n  fullName: ObjectSecurity.Persist(SafeHandle, AccessControlSections)\n- uid: System.Runtime.InteropServices.SafeHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: SafeHandle\n  nameWithType: SafeHandle\n  fullName: System.Runtime.InteropServices.SafeHandle\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: Persist(String, AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(String, AccessControlSections)\n  fullName: ObjectSecurity.Persist(String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: Persist(Boolean, String, AccessControlSections)\n  nameWithType: ObjectSecurity.Persist(Boolean, String, AccessControlSections)\n  fullName: ObjectSecurity.Persist(Boolean, String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: PurgeAccessRules(IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAccessRules(IdentityReference)\n  fullName: ObjectSecurity.PurgeAccessRules(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: PurgeAuditRules(IdentityReference)\n  nameWithType: ObjectSecurity.PurgeAuditRules(IdentityReference)\n  fullName: ObjectSecurity.PurgeAuditRules(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.ReadLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadLock()\n  nameWithType: ObjectSecurity.ReadLock()\n  fullName: ObjectSecurity.ReadLock()\n- uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadUnlock()\n  nameWithType: ObjectSecurity.ReadUnlock()\n  fullName: ObjectSecurity.ReadUnlock()\n- uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetAccessRuleProtection(Boolean, Boolean)\n  nameWithType: ObjectSecurity.SetAccessRuleProtection(Boolean, Boolean)\n  fullName: ObjectSecurity.SetAccessRuleProtection(Boolean, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetAuditRuleProtection(Boolean, Boolean)\n  nameWithType: ObjectSecurity.SetAuditRuleProtection(Boolean, Boolean)\n  fullName: ObjectSecurity.SetAuditRuleProtection(Boolean, Boolean)\n- uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetGroup(IdentityReference)\n  nameWithType: ObjectSecurity.SetGroup(IdentityReference)\n  fullName: ObjectSecurity.SetGroup(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetOwner(IdentityReference)\n  nameWithType: ObjectSecurity.SetOwner(IdentityReference)\n  fullName: ObjectSecurity.SetOwner(IdentityReference)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorBinaryForm(Byte[])\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])\n  fullName: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n  fullName: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorSddlForm(String)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String)\n  fullName: ObjectSecurity.SetSecurityDescriptorSddlForm(String)\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorSddlForm(String, AccessControlSections)\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String, AccessControlSections)\n  fullName: ObjectSecurity.SetSecurityDescriptorSddlForm(String, AccessControlSections)\n- uid: System.Security.AccessControl.ObjectSecurity.WriteLock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteLock()\n  nameWithType: ObjectSecurity.WriteLock()\n  fullName: ObjectSecurity.WriteLock()\n- uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteUnlock()\n  nameWithType: ObjectSecurity.WriteUnlock()\n  fullName: ObjectSecurity.WriteUnlock()\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorBinaryForm\n  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm\n  fullName: ObjectSecurity.SetSecurityDescriptorBinaryForm\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetSecurityDescriptorSddlForm\n  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm\n  fullName: ObjectSecurity.SetSecurityDescriptorSddlForm\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.#ctor*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ObjectSecurity\n  nameWithType: ObjectSecurity.ObjectSecurity\n  fullName: ObjectSecurity.ObjectSecurity\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRightType*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRightType\n  nameWithType: ObjectSecurity.AccessRightType\n  fullName: ObjectSecurity.AccessRightType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRuleFactory\n  nameWithType: ObjectSecurity.AccessRuleFactory\n  fullName: ObjectSecurity.AccessRuleFactory\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRulesModified*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRulesModified\n  nameWithType: ObjectSecurity.AccessRulesModified\n  fullName: ObjectSecurity.AccessRulesModified\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleType*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AccessRuleType\n  nameWithType: ObjectSecurity.AccessRuleType\n  fullName: ObjectSecurity.AccessRuleType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesCanonical\n  nameWithType: ObjectSecurity.AreAccessRulesCanonical\n  fullName: ObjectSecurity.AreAccessRulesCanonical\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAccessRulesProtected\n  nameWithType: ObjectSecurity.AreAccessRulesProtected\n  fullName: ObjectSecurity.AreAccessRulesProtected\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesCanonical\n  nameWithType: ObjectSecurity.AreAuditRulesCanonical\n  fullName: ObjectSecurity.AreAuditRulesCanonical\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AreAuditRulesProtected\n  nameWithType: ObjectSecurity.AreAuditRulesProtected\n  fullName: ObjectSecurity.AreAuditRulesProtected\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRuleFactory\n  nameWithType: ObjectSecurity.AuditRuleFactory\n  fullName: ObjectSecurity.AuditRuleFactory\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRulesModified*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRulesModified\n  nameWithType: ObjectSecurity.AuditRulesModified\n  fullName: ObjectSecurity.AuditRulesModified\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleType*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: AuditRuleType\n  nameWithType: ObjectSecurity.AuditRuleType\n  fullName: ObjectSecurity.AuditRuleType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.GetGroup*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetGroup\n  nameWithType: ObjectSecurity.GetGroup\n  fullName: ObjectSecurity.GetGroup\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.GetOwner*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetOwner\n  nameWithType: ObjectSecurity.GetOwner\n  fullName: ObjectSecurity.GetOwner\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorBinaryForm\n  nameWithType: ObjectSecurity.GetSecurityDescriptorBinaryForm\n  fullName: ObjectSecurity.GetSecurityDescriptorBinaryForm\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GetSecurityDescriptorSddlForm\n  nameWithType: ObjectSecurity.GetSecurityDescriptorSddlForm\n  fullName: ObjectSecurity.GetSecurityDescriptorSddlForm\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.GroupModified*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: GroupModified\n  nameWithType: ObjectSecurity.GroupModified\n  fullName: ObjectSecurity.GroupModified\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.IsContainer*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsContainer\n  nameWithType: ObjectSecurity.IsContainer\n  fullName: ObjectSecurity.IsContainer\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.IsDS*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsDS\n  nameWithType: ObjectSecurity.IsDS\n  fullName: ObjectSecurity.IsDS\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: IsSddlConversionSupported\n  nameWithType: ObjectSecurity.IsSddlConversionSupported\n  fullName: ObjectSecurity.IsSddlConversionSupported\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccess*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ModifyAccess\n  nameWithType: ObjectSecurity.ModifyAccess\n  fullName: ObjectSecurity.ModifyAccess\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ModifyAccessRule\n  nameWithType: ObjectSecurity.ModifyAccessRule\n  fullName: ObjectSecurity.ModifyAccessRule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAudit*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ModifyAudit\n  nameWithType: ObjectSecurity.ModifyAudit\n  fullName: ObjectSecurity.ModifyAudit\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ModifyAuditRule\n  nameWithType: ObjectSecurity.ModifyAuditRule\n  fullName: ObjectSecurity.ModifyAuditRule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.OwnerModified*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: OwnerModified\n  nameWithType: ObjectSecurity.OwnerModified\n  fullName: ObjectSecurity.OwnerModified\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.Persist*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: Persist\n  nameWithType: ObjectSecurity.Persist\n  fullName: ObjectSecurity.Persist\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: PurgeAccessRules\n  nameWithType: ObjectSecurity.PurgeAccessRules\n  fullName: ObjectSecurity.PurgeAccessRules\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: PurgeAuditRules\n  nameWithType: ObjectSecurity.PurgeAuditRules\n  fullName: ObjectSecurity.PurgeAuditRules\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.ReadLock*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadLock\n  nameWithType: ObjectSecurity.ReadLock\n  fullName: ObjectSecurity.ReadLock\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: ReadUnlock\n  nameWithType: ObjectSecurity.ReadUnlock\n  fullName: ObjectSecurity.ReadUnlock\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetAccessRuleProtection\n  nameWithType: ObjectSecurity.SetAccessRuleProtection\n  fullName: ObjectSecurity.SetAccessRuleProtection\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetAuditRuleProtection\n  nameWithType: ObjectSecurity.SetAuditRuleProtection\n  fullName: ObjectSecurity.SetAuditRuleProtection\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.SetGroup*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetGroup\n  nameWithType: ObjectSecurity.SetGroup\n  fullName: ObjectSecurity.SetGroup\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.SetOwner*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: SetOwner\n  nameWithType: ObjectSecurity.SetOwner\n  fullName: ObjectSecurity.SetOwner\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.WriteLock*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteLock\n  nameWithType: ObjectSecurity.WriteLock\n  fullName: ObjectSecurity.WriteLock\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock*\n  parent: System.Security.AccessControl.ObjectSecurity\n  isExternal: false\n  name: WriteUnlock\n  nameWithType: ObjectSecurity.WriteUnlock\n  fullName: ObjectSecurity.WriteUnlock\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}