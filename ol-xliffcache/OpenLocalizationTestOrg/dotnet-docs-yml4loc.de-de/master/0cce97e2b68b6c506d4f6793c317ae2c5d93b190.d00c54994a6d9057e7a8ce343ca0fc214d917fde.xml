{"nodes":[{"content":"Represents an evaluated design-time project item.","nodes":[{"pos":[0,49],"content":"Represents an evaluated design-time project item.","nodes":[{"content":"Represents an evaluated design-time project item.","pos":[0,49]}]}],"pos":[1382,1432],"yaml":true},{"content":"Gets an enumerator over all item metadata.","nodes":[{"pos":[0,42],"content":"Gets an enumerator over all item metadata.","nodes":[{"content":"Gets an enumerator over all item metadata.","pos":[0,42]}]}],"pos":[2748,2791],"yaml":true},{"content":"Does not include metadata from item definitions. Does not include built-in metadata, such as \"FullPath\".","nodes":[{"pos":[0,104],"content":"Does not include metadata from item definitions. Does not include built-in metadata, such as \"FullPath\".","nodes":[{"content":"Does not include metadata from item definitions. Does not include built-in metadata, such as \"FullPath\".","pos":[0,104],"nodes":[{"content":"Does not include metadata from item definitions.","pos":[0,48]},{"content":"Does not include built-in metadata, such as \"FullPath\".","pos":[49,104]}]}]}],"pos":[2802,2907],"yaml":true,"extradata":"MT"},{"content":"Returns an enumerator over all item metadata, which can never be null.","nodes":[{"pos":[0,70],"content":"Returns an enumerator over all item metadata, which can never be null.","nodes":[{"content":"Returns an enumerator over all item metadata, which can never be null.","pos":[0,70]}]}],"pos":[3170,3241],"yaml":true},{"content":"Gets the count of metadata for this item.","nodes":[{"pos":[0,41],"content":"Gets the count of metadata for this item.","nodes":[{"content":"Gets the count of metadata for this item.","pos":[0,41]}]}],"pos":[4262,4304],"yaml":true},{"content":"Does not include metadata from item definitions. Does not include built-in metadata, such as \"FullPath\".","nodes":[{"pos":[0,104],"content":"Does not include metadata from item definitions. Does not include built-in metadata, such as \"FullPath\".","nodes":[{"content":"Does not include metadata from item definitions. Does not include built-in metadata, such as \"FullPath\".","pos":[0,104],"nodes":[{"content":"Does not include metadata from item definitions.","pos":[0,48]},{"content":"Does not include built-in metadata, such as \"FullPath\".","pos":[49,104]}]}]}],"pos":[4315,4420],"yaml":true,"extradata":"MT"},{"content":"Returns the count of metadata for this item.","nodes":[{"pos":[0,44],"content":"Returns the count of metadata for this item.","nodes":[{"content":"Returns the count of metadata for this item.","pos":[0,44]}]}],"pos":[4601,4646],"yaml":true},{"content":"Gets the evaluated value of the Include attribute.","nodes":[{"pos":[0,50],"content":"Gets the evaluated value of the Include attribute.","nodes":[{"content":"Gets the evaluated value of the Include attribute.","pos":[0,50]}]}],"pos":[5724,5775],"yaml":true},{"content":"Escaped characters are not present.","nodes":[{"pos":[0,35],"content":"Escaped characters are not present.","nodes":[{"content":"Escaped characters are not present.","pos":[0,35]}]}],"pos":[5786,5822],"yaml":true,"extradata":"MT"},{"content":"Returns the evaluated value of the Include attribute.","nodes":[{"pos":[0,53],"content":"Returns the evaluated value of the Include attribute.","nodes":[{"content":"Returns the evaluated value of the Include attribute.","pos":[0,53]}]}],"pos":[6004,6058],"yaml":true},{"content":"Gets the evaluated value of the given metadata for this item.","nodes":[{"pos":[0,61],"content":"Gets the evaluated value of the given metadata for this item.","nodes":[{"content":"Gets the evaluated value of the given metadata for this item.","pos":[0,61]}]}],"pos":[7170,7232],"yaml":true},{"content":"May include metadata from an item definition. Does not include built-in metadata, such as \"FullPath\".","nodes":[{"pos":[0,101],"content":"May include metadata from an item definition. Does not include built-in metadata, such as \"FullPath\".","nodes":[{"content":"May include metadata from an item definition. Does not include built-in metadata, such as \"FullPath\".","pos":[0,101],"nodes":[{"content":"May include metadata from an item definition.","pos":[0,45]},{"content":"Does not include built-in metadata, such as \"FullPath\".","pos":[46,101]}]}]}],"pos":[7243,7345],"yaml":true,"extradata":"MT"},{"content":"The name of the metadata whose value is retrieved.","nodes":[{"pos":[0,50],"content":"The name of the metadata whose value is retrieved.","nodes":[{"content":"The name of the metadata whose value is retrieved.","pos":[0,50]}]}],"pos":[7521,7572],"yaml":true},{"content":"Gets the evaluated value of the given metadata for this item. Returns null if no metadata exists with the given name.","nodes":[{"pos":[0,117],"content":"Gets the evaluated value of the given metadata for this item. Returns null if no metadata exists with the given name.","nodes":[{"content":"Gets the evaluated value of the given metadata for this item. Returns null if no metadata exists with the given name.","pos":[0,117],"nodes":[{"content":"Gets the evaluated value of the given metadata for this item.","pos":[0,61]},{"content":"Returns null if no metadata exists with the given name.","pos":[62,117]}]}]}],"pos":[7658,7776],"yaml":true},{"content":"Get the evaluated value of the given metadata for this item, including metadata originating from an item definition.","nodes":[{"pos":[0,116],"content":"Get the evaluated value of the given metadata for this item, including metadata originating from an item definition.","nodes":[{"content":"Get the evaluated value of the given metadata for this item, including metadata originating from an item definition.","pos":[0,116]}]}],"pos":[8843,8960],"yaml":true},{"content":"To determine whether metadata exist, whether it has a value or not, use <xref:Microsoft.Build.Evaluation.ProjectItem.HasMetadata%2A>.  \n  \n This method may be used to access the value of built-in metadata, such as \"FullPath\".","nodes":[{"pos":[0,133],"content":"To determine whether metadata exist, whether it has a value or not, use <xref:Microsoft.Build.Evaluation.ProjectItem.HasMetadata%2A>.","nodes":[{"content":"To determine whether metadata exist, whether it has a value or not, use <ph id=\"ph1\">&lt;xref:Microsoft.Build.Evaluation.ProjectItem.HasMetadata%2A&gt;</ph>.","pos":[0,133],"source":"To determine whether metadata exist, whether it has a value or not, use <xref:Microsoft.Build.Evaluation.ProjectItem.HasMetadata%2A>."}]},{"pos":[140,225],"content":"This method may be used to access the value of built-in metadata, such as \"FullPath\".","nodes":[{"content":"This method may be used to access the value of built-in metadata, such as \"FullPath\".","pos":[0,85]}]}],"pos":[8971,9203],"yaml":true,"extradata":"MT"},{"content":"The name of the metadata whose value is retrieved.","nodes":[{"pos":[0,50],"content":"The name of the metadata whose value is retrieved.","nodes":[{"content":"The name of the metadata whose value is retrieved.","pos":[0,50]}]}],"pos":[9348,9399],"yaml":true},{"content":"Returns the evaluated value of the given metadata for this item, including metadata originating from an item definition. Returns an empty string if no metadata exists with the given name.","nodes":[{"pos":[0,187],"content":"Returns the evaluated value of the given metadata for this item, including metadata originating from an item definition. Returns an empty string if no metadata exists with the given name.","nodes":[{"content":"Returns the evaluated value of the given metadata for this item, including metadata originating from an item definition. Returns an empty string if no metadata exists with the given name.","pos":[0,187],"nodes":[{"content":"Returns the evaluated value of the given metadata for this item, including metadata originating from an item definition.","pos":[0,120]},{"content":"Returns an empty string if no metadata exists with the given name.","pos":[121,187]}]}]}],"pos":[9456,9644],"yaml":true},{"content":"Determines whether metadata with the given name is defined on this item.","nodes":[{"pos":[0,72],"content":"Determines whether metadata with the given name is defined on this item.","nodes":[{"content":"Determines whether metadata with the given name is defined on this item.","pos":[0,72]}]}],"pos":[10686,10759],"yaml":true},{"content":"Includes built-in metadata and metadata originating from item definitions.","nodes":[{"pos":[0,74],"content":"Includes built-in metadata and metadata originating from item definitions.","nodes":[{"content":"Includes built-in metadata and metadata originating from item definitions.","pos":[0,74]}]}],"pos":[10770,10845],"yaml":true,"extradata":"MT"},{"content":"The name of the metadata to be searched for.","nodes":[{"pos":[0,44],"content":"The name of the metadata to be searched for.","nodes":[{"content":"The name of the metadata to be searched for.","pos":[0,44]}]}],"pos":[10983,11028],"yaml":true},{"content":"Returns true if metadata with the given name is defined on this item; false otherwise.","nodes":[{"pos":[0,86],"content":"Returns true if metadata with the given name is defined on this item; false otherwise.","nodes":[{"content":"Returns true if metadata with the given name is defined on this item; false otherwise.","pos":[0,86]}]}],"pos":[11086,11173],"yaml":true},{"content":"Determines if this item originates from an imported file.","nodes":[{"pos":[0,57],"content":"Determines if this item originates from an imported file.","nodes":[{"content":"Determines if this item originates from an imported file.","pos":[0,57]}]}],"pos":[12137,12195],"yaml":true},{"content":"Return true if this item originates from an imported file; false otherwise.","nodes":[{"pos":[0,75],"content":"Return true if this item originates from an imported file; false otherwise.","nodes":[{"content":"Return true if this item originates from an imported file; false otherwise.","pos":[0,75]}]}],"pos":[12308,12384],"yaml":true},{"content":"Gets or sets the type of this item.","nodes":[{"pos":[0,35],"content":"Gets or sets the type of this item.","nodes":[{"content":"Gets or sets the type of this item.","pos":[0,35]}]}],"pos":[13335,13371],"yaml":true},{"content":"Returns the item type.","nodes":[{"pos":[0,22],"content":"Returns the item type.","nodes":[{"content":"Returns the item type.","pos":[0,22]}]}],"pos":[13550,13573],"yaml":true},{"content":"Gets all the metadata for this item, including metadata originating from item definitions.","nodes":[{"pos":[0,90],"content":"Gets all the metadata for this item, including metadata originating from item definitions.","nodes":[{"content":"Gets all the metadata for this item, including metadata originating from item definitions.","pos":[0,90]}]}],"pos":[14592,14683],"yaml":true},{"content":"Does not include built-in metadata, such as \"FullPath\".  \n  \n To add, remove, or change the values of built-in metadata, use <xref:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue%2A> and <xref:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue%2A>.","nodes":[{"pos":[0,55],"content":"Does not include built-in metadata, such as \"FullPath\".","nodes":[{"content":"Does not include built-in metadata, such as \"FullPath\".","pos":[0,55]}]},{"pos":[62,261],"content":"To add, remove, or change the values of built-in metadata, use <xref:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue%2A> and <xref:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue%2A>.","nodes":[{"content":"To add, remove, or change the values of built-in metadata, use <ph id=\"ph1\">&lt;xref:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue%2A&gt;</ph>.","pos":[0,199],"source":"To add, remove, or change the values of built-in metadata, use <xref:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue%2A> and <xref:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue%2A>."}]}],"pos":[14694,14962],"yaml":true,"extradata":"MT"},{"content":"Returns all the metadata for this item, including metadata originating from item definitions.","nodes":[{"pos":[0,93],"content":"Returns all the metadata for this item, including metadata originating from item definitions.","nodes":[{"content":"Returns all the metadata for this item, including metadata originating from item definitions.","pos":[0,93]}]}],"pos":[15281,15375],"yaml":true},{"content":"Gets the count of metadata for this item, including any metadata originating from item definitions, and any built-in metadata.","nodes":[{"pos":[0,126],"content":"Gets the count of metadata for this item, including any metadata originating from item definitions, and any built-in metadata.","nodes":[{"content":"Gets the count of metadata for this item, including any metadata originating from item definitions, and any built-in metadata.","pos":[0,126]}]}],"pos":[16424,16551],"yaml":true},{"content":"Returns the count of metadata for this item, including any metadata originating from item definitions, and any built-in metadata.","nodes":[{"pos":[0,129],"content":"Returns the count of metadata for this item, including any metadata originating from item definitions, and any built-in metadata.","nodes":[{"content":"Returns the count of metadata for this item, including any metadata originating from item definitions, and any built-in metadata.","pos":[0,129]}]}],"pos":[16726,16856],"yaml":true},{"content":"Gets the project that contains this project item.","nodes":[{"pos":[0,49],"content":"Gets the project that contains this project item.","nodes":[{"content":"Gets the project that contains this project item.","pos":[0,49]}]}],"pos":[17874,17924],"yaml":true},{"content":"Project items are always contained by a project.","nodes":[{"pos":[0,48],"content":"Project items are always contained by a project.","nodes":[{"content":"Project items are always contained by a project.","pos":[0,48]}]}],"pos":[17935,17984],"yaml":true,"extradata":"MT"},{"content":"Returns the project that contains this project item.","nodes":[{"pos":[0,52],"content":"Returns the project that contains this project item.","nodes":[{"content":"Returns the project that contains this project item.","pos":[0,52]}]}],"pos":[18206,18259],"yaml":true},{"content":"Removes any metadata with the given name.","nodes":[{"pos":[0,41],"content":"Removes any metadata with the given name.","nodes":[{"content":"Removes any metadata with the given name.","pos":[0,41]}]}],"pos":[19380,19422],"yaml":true},{"content":"Throws InvalidArgumentException if the metadata name refers to built-in metadata, like \"FullPath\".  \n  \n Throws InvalidOperationException if the metadata name refers to metadata that originates from an item definition.","nodes":[{"pos":[0,98],"content":"Throws InvalidArgumentException if the metadata name refers to built-in metadata, like \"FullPath\".","nodes":[{"content":"Throws InvalidArgumentException if the metadata name refers to built-in metadata, like \"FullPath\".","pos":[0,98]}]},{"pos":[105,218],"content":"Throws InvalidOperationException if the metadata name refers to metadata that originates from an item definition.","nodes":[{"content":"Throws InvalidOperationException if the metadata name refers to metadata that originates from an item definition.","pos":[0,113]}]}],"pos":[19433,19658],"yaml":true,"extradata":"MT"},{"content":"The name of the metadata to remove.","nodes":[{"pos":[0,35],"content":"The name of the metadata to remove.","nodes":[{"content":"The name of the metadata to remove.","pos":[0,35]}]}],"pos":[19799,19835],"yaml":true},{"content":"Returns true if metadata with the given name exists before removal; false otherwise.","nodes":[{"pos":[0,84],"content":"Returns true if metadata with the given name exists before removal; false otherwise.","nodes":[{"content":"Returns true if metadata with the given name exists before removal; false otherwise.","pos":[0,84]}]}],"pos":[19893,19978],"yaml":true},{"content":"Renames the item to the given name.","nodes":[{"pos":[0,35],"content":"Renames the item to the given name.","nodes":[{"content":"Renames the item to the given name.","pos":[0,35]}]}],"pos":[20988,21024],"yaml":true},{"content":"Equivalent to setting the <xref:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude%2A> value. Generally, no evaluation occurs, because this could result in several items, which has no meaning in the context of renaming a single item. However if the item does not need to be split, and the new value evaluates to exactly one item, then its evaluated Include attribute is updated with the evaluated value.","nodes":[{"pos":[0,410],"content":"Equivalent to setting the <xref:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude%2A> value. Generally, no evaluation occurs, because this could result in several items, which has no meaning in the context of renaming a single item. However if the item does not need to be split, and the new value evaluates to exactly one item, then its evaluated Include attribute is updated with the evaluated value.","nodes":[{"content":"Equivalent to setting the <xref:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude%2A> value. Generally, no evaluation occurs, because this could result in several items, which has no meaning in the context of renaming a single item. However if the item does not need to be split, and the new value evaluates to exactly one item, then its evaluated Include attribute is updated with the evaluated value.","pos":[0,410],"nodes":[{"content":"Equivalent to setting the <ph id=\"ph1\">&lt;xref:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude%2A&gt;</ph> value.","pos":[0,100],"source":"Equivalent to setting the <xref:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude%2A> value."},{"content":"Generally, no evaluation occurs, because this could result in several items, which has no meaning in the context of renaming a single item.","pos":[101,240]},{"content":"However if the item does not need to be split, and the new value evaluates to exactly one item, then its evaluated Include attribute is updated with the evaluated value.","pos":[241,410]}]}]}],"pos":[21035,21446],"yaml":true,"extradata":"MT"},{"content":"The new name of the item.","nodes":[{"pos":[0,25],"content":"The new name of the item.","nodes":[{"content":"The new name of the item.","pos":[0,25]}]}],"pos":[21579,21605],"yaml":true},{"content":"Adds metadata with the given name and unevaluated value to the item.","nodes":[{"pos":[0,68],"content":"Adds metadata with the given name and unevaluated value to the item.","nodes":[{"content":"Adds metadata with the given name and unevaluated value to the item.","pos":[0,68]}]}],"pos":[22733,22802],"yaml":true},{"content":"Updates the value of existing metadata if metadata already exists with the given name on the item, as long as it does not originate from an item definition. Updates the evaluated project, but does not affect anything else in the project until reevaluation.  \n  \n For example, if a piece of metadata named \"m\" is added on item of type \"i\", it does not affect \"j\" which is evaluated from \"@(j->'%(m)')\" until reevaluation. Also if the unevaluated value of \"m\" is set to something that is modified by evaluation, such as \"$(p)\", the evaluated value will be set to literally \"$(p)\" until reevaluation.  \n  \n Special characters in the unevaluated value should be converted to escape characters.","nodes":[{"pos":[0,256],"content":"Updates the value of existing metadata if metadata already exists with the given name on the item, as long as it does not originate from an item definition. Updates the evaluated project, but does not affect anything else in the project until reevaluation.","nodes":[{"content":"Updates the value of existing metadata if metadata already exists with the given name on the item, as long as it does not originate from an item definition. Updates the evaluated project, but does not affect anything else in the project until reevaluation.","pos":[0,256],"nodes":[{"content":"Updates the value of existing metadata if metadata already exists with the given name on the item, as long as it does not originate from an item definition.","pos":[0,156]},{"content":"Updates the evaluated project, but does not affect anything else in the project until reevaluation.","pos":[157,256]}]}]},{"pos":[263,597],"content":"For example, if a piece of metadata named \"m\" is added on item of type \"i\", it does not affect \"j\" which is evaluated from \"@(j->'%(m)')\" until reevaluation. Also if the unevaluated value of \"m\" is set to something that is modified by evaluation, such as \"$(p)\", the evaluated value will be set to literally \"$(p)\" until reevaluation.","nodes":[{"content":"For example, if a piece of metadata named \"m\" is added on item of type \"i\", it does not affect \"j\" which is evaluated from \"@(j->'%(m)')\" until reevaluation. Also if the unevaluated value of \"m\" is set to something that is modified by evaluation, such as \"$(p)\", the evaluated value will be set to literally \"$(p)\" until reevaluation.","pos":[0,334],"nodes":[{"content":"For example, if a piece of metadata named \"m\" is added on item of type \"i\", it does not affect \"j\" which is evaluated from \"@(j-&gt;'%(m)')\" until reevaluation.","pos":[0,157],"source":"For example, if a piece of metadata named \"m\" is added on item of type \"i\", it does not affect \"j\" which is evaluated from \"@(j->'%(m)')\" until reevaluation."},{"content":"Also if the unevaluated value of \"m\" is set to something that is modified by evaluation, such as \"$(p)\", the evaluated value will be set to literally \"$(p)\" until reevaluation.","pos":[158,334]}]}]},{"pos":[604,689],"content":"Special characters in the unevaluated value should be converted to escape characters.","nodes":[{"content":"Special characters in the unevaluated value should be converted to escape characters.","pos":[0,85]}]}],"pos":[22813,23523],"yaml":true,"extradata":"MT"},{"content":"The name of the metadata to add.","nodes":[{"pos":[0,32],"content":"The name of the metadata to add.","nodes":[{"content":"The name of the metadata to add.","pos":[0,32]}]}],"pos":[23729,23762],"yaml":true},{"content":"The unevaluated value of the metadata to add.","nodes":[{"pos":[0,45],"content":"The unevaluated value of the metadata to add.","nodes":[{"content":"The unevaluated value of the metadata to add.","pos":[0,45]}]}],"pos":[23834,23880],"yaml":true},{"content":"Returns the new metadata. If metadata with the given name already exists, returns this metadata.","nodes":[{"pos":[0,96],"content":"Returns the new metadata. If metadata with the given name already exists, returns this metadata.","nodes":[{"content":"Returns the new metadata. If metadata with the given name already exists, returns this metadata.","pos":[0,96],"nodes":[{"content":"Returns the new metadata.","pos":[0,25]},{"content":"If metadata with the given name already exists, returns this metadata.","pos":[26,96]}]}]}],"pos":[23966,24063],"yaml":true},{"content":"Gets or sets the unevaluated value of the Include attribute.","nodes":[{"pos":[0,60],"content":"Gets or sets the unevaluated value of the Include attribute.","nodes":[{"content":"Gets or sets the unevaluated value of the Include attribute.","pos":[0,60]}]}],"pos":[25080,25141],"yaml":true},{"content":"Returns the unevaluated value of the Include attribute.","nodes":[{"pos":[0,55],"content":"Returns the unevaluated value of the Include attribute.","nodes":[{"content":"Returns the unevaluated value of the Include attribute.","pos":[0,55]}]}],"pos":[25330,25386],"yaml":true},{"content":"Gets the item element that is associated with this item.","nodes":[{"pos":[0,56],"content":"Gets the item element that is associated with this item.","nodes":[{"content":"Gets the item element that is associated with this item.","pos":[0,56]}]}],"pos":[26385,26442],"yaml":true},{"content":"Returns the item element that is associated with this item, which can never be null.","nodes":[{"pos":[0,84],"content":"Returns the item element that is associated with this item, which can never be null.","nodes":[{"content":"Returns the item element that is associated with this item, which can never be null.","pos":[0,84]}]}],"pos":[26686,26771],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Build.Evaluation.ProjectItem\n  commentId: T:Microsoft.Build.Evaluation.ProjectItem\n  id: ProjectItem\n  children:\n  - Microsoft.Build.Evaluation.ProjectItem.DirectMetadata\n  - Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount\n  - Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude\n  - Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)\n  - Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)\n  - Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)\n  - Microsoft.Build.Evaluation.ProjectItem.IsImported\n  - Microsoft.Build.Evaluation.ProjectItem.ItemType\n  - Microsoft.Build.Evaluation.ProjectItem.Metadata\n  - Microsoft.Build.Evaluation.ProjectItem.MetadataCount\n  - Microsoft.Build.Evaluation.ProjectItem.Project\n  - Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)\n  - Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)\n  - Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)\n  - Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude\n  - Microsoft.Build.Evaluation.ProjectItem.Xml\n  langs:\n  - csharp\n  name: ProjectItem\n  nameWithType: ProjectItem\n  fullName: Microsoft.Build.Evaluation.ProjectItem\n  type: Class\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Represents an evaluated design-time project item.\n  syntax:\n    content: public class ProjectItem\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata\n  commentId: P:Microsoft.Build.Evaluation.ProjectItem.DirectMetadata\n  id: DirectMetadata\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  langs:\n  - csharp\n  name: DirectMetadata\n  nameWithType: ProjectItem.DirectMetadata\n  fullName: ProjectItem.DirectMetadata\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets an enumerator over all item metadata.\n  remarks: Does not include metadata from item definitions. Does not include built-in metadata, such as \"FullPath\".\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectMetadata> DirectMetadata { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectMetadata}\n      description: Returns an enumerator over all item metadata, which can never be null.\n  overload: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount\n  commentId: P:Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount\n  id: DirectMetadataCount\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  langs:\n  - csharp\n  name: DirectMetadataCount\n  nameWithType: ProjectItem.DirectMetadataCount\n  fullName: ProjectItem.DirectMetadataCount\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets the count of metadata for this item.\n  remarks: Does not include metadata from item definitions. Does not include built-in metadata, such as \"FullPath\".\n  syntax:\n    content: >-\n      [get: System.Diagnostics.DebuggerStepThrough]\n\n      public int DirectMetadataCount { get; }\n    return:\n      type: System.Int32\n      description: Returns the count of metadata for this item.\n  overload: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Diagnostics.DebuggerStepThrough'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude\n  commentId: P:Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude\n  id: EvaluatedInclude\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  langs:\n  - csharp\n  name: EvaluatedInclude\n  nameWithType: ProjectItem.EvaluatedInclude\n  fullName: ProjectItem.EvaluatedInclude\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets the evaluated value of the Include attribute.\n  remarks: Escaped characters are not present.\n  syntax:\n    content: >-\n      [get: System.Diagnostics.DebuggerStepThrough]\n\n      public string EvaluatedInclude { get; }\n    return:\n      type: System.String\n      description: Returns the evaluated value of the Include attribute.\n  overload: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Diagnostics.DebuggerStepThrough'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)\n  commentId: M:Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)\n  id: GetMetadata(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  langs:\n  - csharp\n  name: GetMetadata(String)\n  nameWithType: ProjectItem.GetMetadata(String)\n  fullName: ProjectItem.GetMetadata(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets the evaluated value of the given metadata for this item.\n  remarks: May include metadata from an item definition. Does not include built-in metadata, such as \"FullPath\".\n  syntax:\n    content: public Microsoft.Build.Evaluation.ProjectMetadata GetMetadata (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the metadata whose value is retrieved.\n    return:\n      type: Microsoft.Build.Evaluation.ProjectMetadata\n      description: Gets the evaluated value of the given metadata for this item. Returns null if no metadata exists with the given name.\n  overload: Microsoft.Build.Evaluation.ProjectItem.GetMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)\n  commentId: M:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)\n  id: GetMetadataValue(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  langs:\n  - csharp\n  name: GetMetadataValue(String)\n  nameWithType: ProjectItem.GetMetadataValue(String)\n  fullName: ProjectItem.GetMetadataValue(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Get the evaluated value of the given metadata for this item, including metadata originating from an item definition.\n  remarks: \"To determine whether metadata exist, whether it has a value or not, use <xref:Microsoft.Build.Evaluation.ProjectItem.HasMetadata%2A>.  \\n  \\n This method may be used to access the value of built-in metadata, such as \\\"FullPath\\\".\"\n  syntax:\n    content: public string GetMetadataValue (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the metadata whose value is retrieved.\n    return:\n      type: System.String\n      description: Returns the evaluated value of the given metadata for this item, including metadata originating from an item definition. Returns an empty string if no metadata exists with the given name.\n  overload: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)\n  commentId: M:Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)\n  id: HasMetadata(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  langs:\n  - csharp\n  name: HasMetadata(String)\n  nameWithType: ProjectItem.HasMetadata(String)\n  fullName: ProjectItem.HasMetadata(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Determines whether metadata with the given name is defined on this item.\n  remarks: Includes built-in metadata and metadata originating from item definitions.\n  syntax:\n    content: public bool HasMetadata (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the metadata to be searched for.\n    return:\n      type: System.Boolean\n      description: Returns true if metadata with the given name is defined on this item; false otherwise.\n  overload: Microsoft.Build.Evaluation.ProjectItem.HasMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.ProjectItem.IsImported\n  commentId: P:Microsoft.Build.Evaluation.ProjectItem.IsImported\n  id: IsImported\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  langs:\n  - csharp\n  name: IsImported\n  nameWithType: ProjectItem.IsImported\n  fullName: ProjectItem.IsImported\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Determines if this item originates from an imported file.\n  syntax:\n    content: public bool IsImported { get; }\n    return:\n      type: System.Boolean\n      description: Return true if this item originates from an imported file; false otherwise.\n  overload: Microsoft.Build.Evaluation.ProjectItem.IsImported*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.ProjectItem.ItemType\n  commentId: P:Microsoft.Build.Evaluation.ProjectItem.ItemType\n  id: ItemType\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  langs:\n  - csharp\n  name: ItemType\n  nameWithType: ProjectItem.ItemType\n  fullName: ProjectItem.ItemType\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets or sets the type of this item.\n  syntax:\n    content: >-\n      [get: System.Diagnostics.DebuggerStepThrough]\n\n      public string ItemType { get; set; }\n    return:\n      type: System.String\n      description: Returns the item type.\n  overload: Microsoft.Build.Evaluation.ProjectItem.ItemType*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Diagnostics.DebuggerStepThrough'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.ProjectItem.Metadata\n  commentId: P:Microsoft.Build.Evaluation.ProjectItem.Metadata\n  id: Metadata\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  langs:\n  - csharp\n  name: Metadata\n  nameWithType: ProjectItem.Metadata\n  fullName: ProjectItem.Metadata\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets all the metadata for this item, including metadata originating from item definitions.\n  remarks: \"Does not include built-in metadata, such as \\\"FullPath\\\".  \\n  \\n To add, remove, or change the values of built-in metadata, use <xref:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue%2A> and <xref:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue%2A>.\"\n  syntax:\n    content: >-\n      [get: System.Diagnostics.DebuggerStepThrough]\n\n      public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata> Metadata { get; }\n    return:\n      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectMetadata}\n      description: Returns all the metadata for this item, including metadata originating from item definitions.\n  overload: Microsoft.Build.Evaluation.ProjectItem.Metadata*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Diagnostics.DebuggerStepThrough'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.ProjectItem.MetadataCount\n  commentId: P:Microsoft.Build.Evaluation.ProjectItem.MetadataCount\n  id: MetadataCount\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  langs:\n  - csharp\n  name: MetadataCount\n  nameWithType: ProjectItem.MetadataCount\n  fullName: ProjectItem.MetadataCount\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets the count of metadata for this item, including any metadata originating from item definitions, and any built-in metadata.\n  syntax:\n    content: >-\n      [get: System.Diagnostics.DebuggerStepThrough]\n\n      public int MetadataCount { get; }\n    return:\n      type: System.Int32\n      description: Returns the count of metadata for this item, including any metadata originating from item definitions, and any built-in metadata.\n  overload: Microsoft.Build.Evaluation.ProjectItem.MetadataCount*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Diagnostics.DebuggerStepThrough'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.ProjectItem.Project\n  commentId: P:Microsoft.Build.Evaluation.ProjectItem.Project\n  id: Project\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  langs:\n  - csharp\n  name: Project\n  nameWithType: ProjectItem.Project\n  fullName: ProjectItem.Project\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets the project that contains this project item.\n  remarks: Project items are always contained by a project.\n  syntax:\n    content: >-\n      [get: System.Diagnostics.DebuggerStepThrough]\n\n      public Microsoft.Build.Evaluation.Project Project { get; }\n    return:\n      type: Microsoft.Build.Evaluation.Project\n      description: Returns the project that contains this project item.\n  overload: Microsoft.Build.Evaluation.ProjectItem.Project*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Diagnostics.DebuggerStepThrough'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)\n  commentId: M:Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)\n  id: RemoveMetadata(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  langs:\n  - csharp\n  name: RemoveMetadata(String)\n  nameWithType: ProjectItem.RemoveMetadata(String)\n  fullName: ProjectItem.RemoveMetadata(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Removes any metadata with the given name.\n  remarks: \"Throws InvalidArgumentException if the metadata name refers to built-in metadata, like \\\"FullPath\\\".  \\n  \\n Throws InvalidOperationException if the metadata name refers to metadata that originates from an item definition.\"\n  syntax:\n    content: public bool RemoveMetadata (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the metadata to remove.\n    return:\n      type: System.Boolean\n      description: Returns true if metadata with the given name exists before removal; false otherwise.\n  overload: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)\n  commentId: M:Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)\n  id: Rename(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  langs:\n  - csharp\n  name: Rename(String)\n  nameWithType: ProjectItem.Rename(String)\n  fullName: ProjectItem.Rename(String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Renames the item to the given name.\n  remarks: Equivalent to setting the <xref:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude%2A> value. Generally, no evaluation occurs, because this could result in several items, which has no meaning in the context of renaming a single item. However if the item does not need to be split, and the new value evaluates to exactly one item, then its evaluated Include attribute is updated with the evaluated value.\n  syntax:\n    content: public void Rename (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The new name of the item.\n  overload: Microsoft.Build.Evaluation.ProjectItem.Rename*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)\n  commentId: M:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)\n  id: SetMetadataValue(System.String,System.String)\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  langs:\n  - csharp\n  name: SetMetadataValue(String, String)\n  nameWithType: ProjectItem.SetMetadataValue(String, String)\n  fullName: ProjectItem.SetMetadataValue(String, String)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Adds metadata with the given name and unevaluated value to the item.\n  remarks: \"Updates the value of existing metadata if metadata already exists with the given name on the item, as long as it does not originate from an item definition. Updates the evaluated project, but does not affect anything else in the project until reevaluation.  \\n  \\n For example, if a piece of metadata named \\\"m\\\" is added on item of type \\\"i\\\", it does not affect \\\"j\\\" which is evaluated from \\\"@(j->'%(m)')\\\" until reevaluation. Also if the unevaluated value of \\\"m\\\" is set to something that is modified by evaluation, such as \\\"$(p)\\\", the evaluated value will be set to literally \\\"$(p)\\\" until reevaluation.  \\n  \\n Special characters in the unevaluated value should be converted to escape characters.\"\n  syntax:\n    content: public Microsoft.Build.Evaluation.ProjectMetadata SetMetadataValue (string name, string unevaluatedValue);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the metadata to add.\n    - id: unevaluatedValue\n      type: System.String\n      description: The unevaluated value of the metadata to add.\n    return:\n      type: Microsoft.Build.Evaluation.ProjectMetadata\n      description: Returns the new metadata. If metadata with the given name already exists, returns this metadata.\n  overload: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude\n  commentId: P:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude\n  id: UnevaluatedInclude\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  langs:\n  - csharp\n  name: UnevaluatedInclude\n  nameWithType: ProjectItem.UnevaluatedInclude\n  fullName: ProjectItem.UnevaluatedInclude\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets or sets the unevaluated value of the Include attribute.\n  syntax:\n    content: >-\n      [get: System.Diagnostics.DebuggerStepThrough]\n\n      public string UnevaluatedInclude { get; set; }\n    return:\n      type: System.String\n      description: Returns the unevaluated value of the Include attribute.\n  overload: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Diagnostics.DebuggerStepThrough'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n  ms.author: susanno\n  manager: douge\n- uid: Microsoft.Build.Evaluation.ProjectItem.Xml\n  commentId: P:Microsoft.Build.Evaluation.ProjectItem.Xml\n  id: Xml\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  langs:\n  - csharp\n  name: Xml\n  nameWithType: ProjectItem.Xml\n  fullName: ProjectItem.Xml\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Evaluation\n  summary: Gets the item element that is associated with this item.\n  syntax:\n    content: >-\n      [get: System.Diagnostics.DebuggerStepThrough]\n\n      public Microsoft.Build.Construction.ProjectItemElement Xml { get; }\n    return:\n      type: Microsoft.Build.Construction.ProjectItemElement\n      description: Returns the item element that is associated with this item, which can never be null.\n  overload: Microsoft.Build.Evaluation.ProjectItem.Xml*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Diagnostics.DebuggerStepThrough'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n  ms.author: susanno\n  manager: douge\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: DirectMetadata\n  nameWithType: ProjectItem.DirectMetadata\n  fullName: ProjectItem.DirectMetadata\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: Microsoft.Build.Evaluation.ProjectMetadata\n  name: ProjectMetadata\n  nameWithType: ProjectMetadata\n  fullName: Microsoft.Build.Evaluation.ProjectMetadata\n- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectMetadata}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<ProjectMetadata>\n  nameWithType: IEnumerable<ProjectMetadata>\n  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectMetadata>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.Build.Evaluation.ProjectMetadata\n    name: ProjectMetadata\n    nameWithType: ProjectMetadata\n    fullName: Microsoft.Build.Evaluation.ProjectMetadata\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: DirectMetadataCount\n  nameWithType: ProjectItem.DirectMetadataCount\n  fullName: ProjectItem.DirectMetadataCount\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: EvaluatedInclude\n  nameWithType: ProjectItem.EvaluatedInclude\n  fullName: ProjectItem.EvaluatedInclude\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: GetMetadata(String)\n  nameWithType: ProjectItem.GetMetadata(String)\n  fullName: ProjectItem.GetMetadata(String)\n- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: GetMetadataValue(String)\n  nameWithType: ProjectItem.GetMetadataValue(String)\n  fullName: ProjectItem.GetMetadataValue(String)\n- uid: Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: HasMetadata(String)\n  nameWithType: ProjectItem.HasMetadata(String)\n  fullName: ProjectItem.HasMetadata(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.Build.Evaluation.ProjectItem.IsImported\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: IsImported\n  nameWithType: ProjectItem.IsImported\n  fullName: ProjectItem.IsImported\n- uid: Microsoft.Build.Evaluation.ProjectItem.ItemType\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: ItemType\n  nameWithType: ProjectItem.ItemType\n  fullName: ProjectItem.ItemType\n- uid: Microsoft.Build.Evaluation.ProjectItem.Metadata\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: Metadata\n  nameWithType: ProjectItem.Metadata\n  fullName: ProjectItem.Metadata\n- uid: System.Collections.Generic.ICollection`1\n  name: ICollection<T>\n  nameWithType: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n- uid: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectMetadata}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<ProjectMetadata>\n  nameWithType: ICollection<ProjectMetadata>\n  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: Microsoft.Build.Evaluation.ProjectMetadata\n    name: ProjectMetadata\n    nameWithType: ProjectMetadata\n    fullName: Microsoft.Build.Evaluation.ProjectMetadata\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.Build.Evaluation.ProjectItem.MetadataCount\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: MetadataCount\n  nameWithType: ProjectItem.MetadataCount\n  fullName: ProjectItem.MetadataCount\n- uid: Microsoft.Build.Evaluation.ProjectItem.Project\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: Project\n  nameWithType: ProjectItem.Project\n  fullName: ProjectItem.Project\n- uid: Microsoft.Build.Evaluation.Project\n  parent: Microsoft.Build.Evaluation\n  isExternal: false\n  name: Project\n  nameWithType: Project\n  fullName: Microsoft.Build.Evaluation.Project\n- uid: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: RemoveMetadata(String)\n  nameWithType: ProjectItem.RemoveMetadata(String)\n  fullName: ProjectItem.RemoveMetadata(String)\n- uid: Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: Rename(String)\n  nameWithType: ProjectItem.Rename(String)\n  fullName: ProjectItem.Rename(String)\n- uid: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: SetMetadataValue(String, String)\n  nameWithType: ProjectItem.SetMetadataValue(String, String)\n  fullName: ProjectItem.SetMetadataValue(String, String)\n- uid: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: UnevaluatedInclude\n  nameWithType: ProjectItem.UnevaluatedInclude\n  fullName: ProjectItem.UnevaluatedInclude\n- uid: Microsoft.Build.Evaluation.ProjectItem.Xml\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: Xml\n  nameWithType: ProjectItem.Xml\n  fullName: ProjectItem.Xml\n- uid: Microsoft.Build.Construction.ProjectItemElement\n  parent: Microsoft.Build.Construction\n  isExternal: false\n  name: ProjectItemElement\n  nameWithType: ProjectItemElement\n  fullName: Microsoft.Build.Construction.ProjectItemElement\n- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata*\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: DirectMetadata\n  nameWithType: ProjectItem.DirectMetadata\n  fullName: ProjectItem.DirectMetadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount*\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: DirectMetadataCount\n  nameWithType: ProjectItem.DirectMetadataCount\n  fullName: ProjectItem.DirectMetadataCount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n- uid: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude*\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: EvaluatedInclude\n  nameWithType: ProjectItem.EvaluatedInclude\n  fullName: ProjectItem.EvaluatedInclude\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadata*\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: GetMetadata\n  nameWithType: ProjectItem.GetMetadata\n  fullName: ProjectItem.GetMetadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue*\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: GetMetadataValue\n  nameWithType: ProjectItem.GetMetadataValue\n  fullName: ProjectItem.GetMetadataValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n- uid: Microsoft.Build.Evaluation.ProjectItem.HasMetadata*\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: HasMetadata\n  nameWithType: ProjectItem.HasMetadata\n  fullName: ProjectItem.HasMetadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n- uid: Microsoft.Build.Evaluation.ProjectItem.IsImported*\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: IsImported\n  nameWithType: ProjectItem.IsImported\n  fullName: ProjectItem.IsImported\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n- uid: Microsoft.Build.Evaluation.ProjectItem.ItemType*\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: ItemType\n  nameWithType: ProjectItem.ItemType\n  fullName: ProjectItem.ItemType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n- uid: Microsoft.Build.Evaluation.ProjectItem.Metadata*\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: Metadata\n  nameWithType: ProjectItem.Metadata\n  fullName: ProjectItem.Metadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n- uid: Microsoft.Build.Evaluation.ProjectItem.MetadataCount*\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: MetadataCount\n  nameWithType: ProjectItem.MetadataCount\n  fullName: ProjectItem.MetadataCount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n- uid: Microsoft.Build.Evaluation.ProjectItem.Project*\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: Project\n  nameWithType: ProjectItem.Project\n  fullName: ProjectItem.Project\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n- uid: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata*\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: RemoveMetadata\n  nameWithType: ProjectItem.RemoveMetadata\n  fullName: ProjectItem.RemoveMetadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n- uid: Microsoft.Build.Evaluation.ProjectItem.Rename*\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: Rename\n  nameWithType: ProjectItem.Rename\n  fullName: ProjectItem.Rename\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n- uid: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue*\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: SetMetadataValue\n  nameWithType: ProjectItem.SetMetadataValue\n  fullName: ProjectItem.SetMetadataValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n- uid: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude*\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: UnevaluatedInclude\n  nameWithType: ProjectItem.UnevaluatedInclude\n  fullName: ProjectItem.UnevaluatedInclude\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n- uid: Microsoft.Build.Evaluation.ProjectItem.Xml*\n  parent: Microsoft.Build.Evaluation.ProjectItem\n  isExternal: false\n  name: Xml\n  nameWithType: ProjectItem.Xml\n  fullName: ProjectItem.Xml\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Build.Evaluation/ProjectItem.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}