{"nodes":[{"content":"Represents native activity update map metadata.","nodes":[{"pos":[0,47],"content":"Represents native activity update map metadata.","nodes":[{"content":"Represents native activity update map metadata.","pos":[0,47]}]}],"pos":[769,817],"yaml":true},{"content":"This class supports the versioning and dynamic update functionality of Windows Workflow Foundation. [!INCLUDE[crabout](~/includes/crabout-md.md)] workflow versioning, workflow identity, and dynamic update, see the following topics.  \n  \n [Workflow Versioning](http://go.microsoft.com/fwlink/?LinkID=271561)  \n Describes the workflow versioning functionality introduced in [!INCLUDE[net_v45](~/includes/net-v45-md.md)].  \n  \n [Dynamic Update](http://go.microsoft.com/fwlink/?LinkId=271563)  \n Describes how to update the workflow definition of a persisted workflow instance by using dynamic update.  \n  \n [Using WorkflowApplication Identity and Versioning](http://go.microsoft.com/fwlink/?LinkId=271564)  \n Describes how to use <xref:System.Activities.WorkflowIdentity> to host multiple versions of a workflow side-by-side.  \n  \n [Side by Side Versioning in WorkflowServiceHost](http://go.microsoft.com/fwlink/?LinkId=271565)  \n Describes how to host multiple versions of a workflow on a single endpoint.  \n  \n [How to: Host Multiple Versions of a Workflow Side-by-Side](http://go.microsoft.com/fwlink/?LinkId=271566)  \n This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating a workflow definition, and hosting workflows using both the old and new definition at the same time.  \n  \n [How to: Update the Definition of a Running Workflow Instance](http://go.microsoft.com/fwlink/?LinkId=271567)  \n This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating persisted workflow instances to use a new workflow definition.","nodes":[{"pos":[0,231],"content":"This class supports the versioning and dynamic update functionality of Windows Workflow Foundation. [!INCLUDE[crabout](~/includes/crabout-md.md)] workflow versioning, workflow identity, and dynamic update, see the following topics.","nodes":[{"content":"This class supports the versioning and dynamic update functionality of Windows Workflow Foundation.","pos":[0,99]},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> workflow versioning, workflow identity, and dynamic update, see the following topics.","pos":[100,231],"source":"[!INCLUDE[crabout](~/includes/crabout-md.md)] workflow versioning, workflow identity, and dynamic update, see the following topics."}]},{"pos":[238,418],"content":"[Workflow Versioning](http://go.microsoft.com/fwlink/?LinkID=271561)  \n Describes the workflow versioning functionality introduced in [!INCLUDE[net_v45](~/includes/net-v45-md.md)].","nodes":[{"content":"<bpt id=\"p1\">[</bpt>Workflow Versioning<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=271561)</ept>","pos":[0,68],"source":"[Workflow Versioning](http://go.microsoft.com/fwlink/?LinkID=271561)"},{"content":"Describes the workflow versioning functionality introduced in <ph id=\"ph1\">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>.","pos":[72,180],"source":" Describes the workflow versioning functionality introduced in [!INCLUDE[net_v45](~/includes/net-v45-md.md)]."}]},{"pos":[425,597],"content":"[Dynamic Update](http://go.microsoft.com/fwlink/?LinkId=271563)  \n Describes how to update the workflow definition of a persisted workflow instance by using dynamic update.","nodes":[{"content":"<bpt id=\"p1\">[</bpt>Dynamic Update<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=271563)</ept>","pos":[0,63],"source":"[Dynamic Update](http://go.microsoft.com/fwlink/?LinkId=271563)"},{"content":"Describes how to update the workflow definition of a persisted workflow instance by using dynamic update.","pos":[67,172]}]},{"pos":[604,822],"content":"[Using WorkflowApplication Identity and Versioning](http://go.microsoft.com/fwlink/?LinkId=271564)  \n Describes how to use <xref:System.Activities.WorkflowIdentity> to host multiple versions of a workflow side-by-side.","nodes":[{"content":"<bpt id=\"p1\">[</bpt>Using WorkflowApplication Identity and Versioning<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=271564)</ept>","pos":[0,98],"source":"[Using WorkflowApplication Identity and Versioning](http://go.microsoft.com/fwlink/?LinkId=271564)"},{"content":"Describes how to use <ph id=\"ph1\">&lt;xref:System.Activities.WorkflowIdentity&gt;</ph> to host multiple versions of a workflow side-by-side.","pos":[102,218],"source":" Describes how to use <xref:System.Activities.WorkflowIdentity> to host multiple versions of a workflow side-by-side."}]},{"pos":[829,1003],"content":"[Side by Side Versioning in WorkflowServiceHost](http://go.microsoft.com/fwlink/?LinkId=271565)  \n Describes how to host multiple versions of a workflow on a single endpoint.","nodes":[{"content":"<bpt id=\"p1\">[</bpt>Side by Side Versioning in WorkflowServiceHost<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=271565)</ept>","pos":[0,95],"source":"[Side by Side Versioning in WorkflowServiceHost](http://go.microsoft.com/fwlink/?LinkId=271565)"},{"content":"Describes how to host multiple versions of a workflow on a single endpoint.","pos":[99,174]}]},{"pos":[1010,1333],"content":"[How to: Host Multiple Versions of a Workflow Side-by-Side](http://go.microsoft.com/fwlink/?LinkId=271566)  \n This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating a workflow definition, and hosting workflows using both the old and new definition at the same time.","nodes":[{"content":"<bpt id=\"p1\">[</bpt>How to: Host Multiple Versions of a Workflow Side-by-Side<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=271566)</ept>","pos":[0,106],"source":"[How to: Host Multiple Versions of a Workflow Side-by-Side](http://go.microsoft.com/fwlink/?LinkId=271566)"},{"content":"This step in the <bpt id=\"p1\">[</bpt>Getting Started Tutorial<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=271570)</ept> demonstrates updating a workflow definition, and hosting workflows using both the old and new definition at the same time.","pos":[110,323],"source":" This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating a workflow definition, and hosting workflows using both the old and new definition at the same time."}]},{"pos":[1340,1628],"content":"[How to: Update the Definition of a Running Workflow Instance](http://go.microsoft.com/fwlink/?LinkId=271567)  \n This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating persisted workflow instances to use a new workflow definition.","nodes":[{"content":"<bpt id=\"p1\">[</bpt>How to: Update the Definition of a Running Workflow Instance<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=271567)</ept>","pos":[0,109],"source":"[How to: Update the Definition of a Running Workflow Instance](http://go.microsoft.com/fwlink/?LinkId=271567)"},{"content":"This step in the <bpt id=\"p1\">[</bpt>Getting Started Tutorial<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=271570)</ept> demonstrates updating persisted workflow instances to use a new workflow definition.","pos":[113,288],"source":" This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating persisted workflow instances to use a new workflow definition."}]}],"pos":[828,2477],"yaml":true,"extradata":"MT"},{"content":"Indicates the object to save the original value for the current activity.","nodes":[{"pos":[0,73],"content":"Indicates the object to save the original value for the current activity.","nodes":[{"content":"Indicates the object to save the original value for the current activity.","pos":[0,73]}]}],"pos":[5014,5088],"yaml":true},{"content":"The updated child activity.","nodes":[{"pos":[0,27],"content":"The updated child activity.","nodes":[{"content":"The updated child activity.","pos":[0,27]}]}],"pos":[5319,5347],"yaml":true},{"content":"The original value.","nodes":[{"pos":[0,19],"content":"The original value.","nodes":[{"content":"The original value.","pos":[0,19]}]}],"pos":[5416,5436],"yaml":true},{"content":"Indicates the object to save the original value for the current activity.","nodes":[{"pos":[0,73],"content":"Indicates the object to save the original value for the current activity.","nodes":[{"content":"Indicates the object to save the original value for the current activity.","pos":[0,73]}]}],"pos":[6807,6881],"yaml":true},{"content":"The property name.","nodes":[{"pos":[0,18],"content":"The property name.","nodes":[{"content":"The property name.","pos":[0,18]}]}],"pos":[7063,7082],"yaml":true},{"content":"The original value.","nodes":[{"pos":[0,19],"content":"The original value.","nodes":[{"content":"The original value.","pos":[0,19]}]}],"pos":[7151,7171],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n  commentId: T:System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n  id: NativeActivityUpdateMapMetadata\n  children:\n  - System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata.SaveOriginalValue(System.Activities.Activity,System.Object)\n  - System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata.SaveOriginalValue(System.String,System.Object)\n  langs:\n  - csharp\n  name: NativeActivityUpdateMapMetadata\n  nameWithType: NativeActivityUpdateMapMetadata\n  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.DynamicUpdate\n  summary: Represents native activity update map metadata.\n  remarks: \"This class supports the versioning and dynamic update functionality of Windows Workflow Foundation. [!INCLUDE[crabout](~/includes/crabout-md.md)] workflow versioning, workflow identity, and dynamic update, see the following topics.  \\n  \\n [Workflow Versioning](http://go.microsoft.com/fwlink/?LinkID=271561)  \\n Describes the workflow versioning functionality introduced in [!INCLUDE[net_v45](~/includes/net-v45-md.md)].  \\n  \\n [Dynamic Update](http://go.microsoft.com/fwlink/?LinkId=271563)  \\n Describes how to update the workflow definition of a persisted workflow instance by using dynamic update.  \\n  \\n [Using WorkflowApplication Identity and Versioning](http://go.microsoft.com/fwlink/?LinkId=271564)  \\n Describes how to use <xref:System.Activities.WorkflowIdentity> to host multiple versions of a workflow side-by-side.  \\n  \\n [Side by Side Versioning in WorkflowServiceHost](http://go.microsoft.com/fwlink/?LinkId=271565)  \\n Describes how to host multiple versions of a workflow on a single endpoint.  \\n  \\n [How to: Host Multiple Versions of a Workflow Side-by-Side](http://go.microsoft.com/fwlink/?LinkId=271566)  \\n This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating a workflow definition, and hosting workflows using both the old and new definition at the same time.  \\n  \\n [How to: Update the Definition of a Running Workflow Instance](http://go.microsoft.com/fwlink/?LinkId=271567)  \\n This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating persisted workflow instances to use a new workflow definition.\"\n  syntax:\n    content: 'public class NativeActivityUpdateMapMetadata : System.Activities.DynamicUpdate.UpdateMapMetadata'\n  inheritance:\n  - System.Object\n  - System.Activities.DynamicUpdate.UpdateMapMetadata\n  implements: []\n  inheritedMembers:\n  - System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch(System.Activities.Activity,System.Activities.Activity)\n  - System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch(System.Activities.Variable,System.Activities.Variable)\n  - System.Activities.DynamicUpdate.UpdateMapMetadata.AllowUpdateInsideThisActivity\n  - System.Activities.DynamicUpdate.UpdateMapMetadata.DisallowUpdateInsideThisActivity(System.String)\n  - System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch(System.Activities.Activity)\n  - System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch(System.Activities.Variable)\n  - System.Activities.DynamicUpdate.UpdateMapMetadata.IsReferenceToImportedChild(System.Activities.Activity)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.DynamicUpdate/NativeActivityUpdateMapMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata.SaveOriginalValue(System.Activities.Activity,System.Object)\n  commentId: M:System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata.SaveOriginalValue(System.Activities.Activity,System.Object)\n  id: SaveOriginalValue(System.Activities.Activity,System.Object)\n  parent: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n  langs:\n  - csharp\n  name: SaveOriginalValue(Activity, Object)\n  nameWithType: NativeActivityUpdateMapMetadata.SaveOriginalValue(Activity, Object)\n  fullName: NativeActivityUpdateMapMetadata.SaveOriginalValue(Activity, Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.DynamicUpdate\n  summary: Indicates the object to save the original value for the current activity.\n  syntax:\n    content: public void SaveOriginalValue (System.Activities.Activity updatedChildActivity, object originalValue);\n    parameters:\n    - id: updatedChildActivity\n      type: System.Activities.Activity\n      description: The updated child activity.\n    - id: originalValue\n      type: System.Object\n      description: The original value.\n  overload: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata.SaveOriginalValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.DynamicUpdate/NativeActivityUpdateMapMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata.SaveOriginalValue(System.String,System.Object)\n  commentId: M:System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata.SaveOriginalValue(System.String,System.Object)\n  id: SaveOriginalValue(System.String,System.Object)\n  parent: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n  langs:\n  - csharp\n  name: SaveOriginalValue(String, Object)\n  nameWithType: NativeActivityUpdateMapMetadata.SaveOriginalValue(String, Object)\n  fullName: NativeActivityUpdateMapMetadata.SaveOriginalValue(String, Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.DynamicUpdate\n  summary: Indicates the object to save the original value for the current activity.\n  syntax:\n    content: public void SaveOriginalValue (string propertyName, object originalValue);\n    parameters:\n    - id: propertyName\n      type: System.String\n      description: The property name.\n    - id: originalValue\n      type: System.Object\n      description: The original value.\n  overload: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata.SaveOriginalValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.DynamicUpdate/NativeActivityUpdateMapMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: UpdateMapMetadata\n  nameWithType: UpdateMapMetadata\n  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata.SaveOriginalValue(System.Activities.Activity,System.Object)\n  parent: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n  isExternal: false\n  name: SaveOriginalValue(Activity, Object)\n  nameWithType: NativeActivityUpdateMapMetadata.SaveOriginalValue(Activity, Object)\n  fullName: NativeActivityUpdateMapMetadata.SaveOriginalValue(Activity, Object)\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata.SaveOriginalValue(System.String,System.Object)\n  parent: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n  isExternal: false\n  name: SaveOriginalValue(String, Object)\n  nameWithType: NativeActivityUpdateMapMetadata.SaveOriginalValue(String, Object)\n  fullName: NativeActivityUpdateMapMetadata.SaveOriginalValue(String, Object)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata.SaveOriginalValue*\n  parent: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n  isExternal: false\n  name: SaveOriginalValue\n  nameWithType: NativeActivityUpdateMapMetadata.SaveOriginalValue\n  fullName: NativeActivityUpdateMapMetadata.SaveOriginalValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.DynamicUpdate/NativeActivityUpdateMapMetadata.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch(System.Activities.Activity,System.Activities.Activity)\n  parent: System.Activities.DynamicUpdate.UpdateMapMetadata\n  isExternal: false\n  name: AddMatch(Activity, Activity)\n  nameWithType: UpdateMapMetadata.AddMatch(Activity, Activity)\n  fullName: UpdateMapMetadata.AddMatch(Activity, Activity)\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch(System.Activities.Variable,System.Activities.Variable)\n  parent: System.Activities.DynamicUpdate.UpdateMapMetadata\n  isExternal: false\n  name: AddMatch(Variable, Variable)\n  nameWithType: UpdateMapMetadata.AddMatch(Variable, Variable)\n  fullName: UpdateMapMetadata.AddMatch(Variable, Variable)\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.AllowUpdateInsideThisActivity\n  parent: System.Activities.DynamicUpdate.UpdateMapMetadata\n  isExternal: false\n  name: AllowUpdateInsideThisActivity()\n  nameWithType: UpdateMapMetadata.AllowUpdateInsideThisActivity()\n  fullName: UpdateMapMetadata.AllowUpdateInsideThisActivity()\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.DisallowUpdateInsideThisActivity(System.String)\n  parent: System.Activities.DynamicUpdate.UpdateMapMetadata\n  isExternal: false\n  name: DisallowUpdateInsideThisActivity(String)\n  nameWithType: UpdateMapMetadata.DisallowUpdateInsideThisActivity(String)\n  fullName: UpdateMapMetadata.DisallowUpdateInsideThisActivity(String)\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch(System.Activities.Activity)\n  parent: System.Activities.DynamicUpdate.UpdateMapMetadata\n  isExternal: false\n  name: GetMatch(Activity)\n  nameWithType: UpdateMapMetadata.GetMatch(Activity)\n  fullName: UpdateMapMetadata.GetMatch(Activity)\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch(System.Activities.Variable)\n  parent: System.Activities.DynamicUpdate.UpdateMapMetadata\n  isExternal: false\n  name: GetMatch(Variable)\n  nameWithType: UpdateMapMetadata.GetMatch(Variable)\n  fullName: UpdateMapMetadata.GetMatch(Variable)\n- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.IsReferenceToImportedChild(System.Activities.Activity)\n  parent: System.Activities.DynamicUpdate.UpdateMapMetadata\n  isExternal: false\n  name: IsReferenceToImportedChild(Activity)\n  nameWithType: UpdateMapMetadata.IsReferenceToImportedChild(Activity)\n  fullName: UpdateMapMetadata.IsReferenceToImportedChild(Activity)\n"}