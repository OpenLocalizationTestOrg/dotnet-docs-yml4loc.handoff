### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.LicenseException
  commentId: T:System.ComponentModel.LicenseException
  id: LicenseException
  children:
  - System.ComponentModel.LicenseException.#ctor(System.Type)
  - System.ComponentModel.LicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.ComponentModel.LicenseException.#ctor(System.Type,System.Object)
  - System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String)
  - System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)
  - System.ComponentModel.LicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.ComponentModel.LicenseException.LicensedType
  langs:
  - csharp
  name: LicenseException
  nameWithType: LicenseException
  fullName: System.ComponentModel.LicenseException
  type: Class
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Represents the exception thrown when a component cannot be granted a license.
  remarks: "The <xref:System.ComponentModel.LicenseManager.Validate%2A?displayProperty=fullName> method throws <xref:System.ComponentModel.LicenseException> when a component cannot obtain a valid license. This occurs when a component is either not licensed, or is licensed but cannot be granted a valid license.  \n  \n For more information on licensing, see [How to: License Components and Controls](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57)."
  example:
  - "The following code example shows how to catch a <xref:System.ComponentModel.LicenseException> and interpret its content. In the sample, the application calls the <xref:System.ComponentModel.LicenseManager.Validate%2A> method for a <xref:System.Windows.Forms.Form?displayProperty=fullName> that is not licensed. Upon catching the exception, the sample fetches the respective error message, the type of component that was not granted a license, the stack trace, and the origin of the exception.  \n  \n This example requires that you have specified the <xref:System.ComponentModel.LicenseProvider> by marking the <xref:System.Windows.Forms.Form?displayProperty=fullName> with a <xref:System.ComponentModel.LicenseProviderAttribute> attribute. For more information on how to do this, see the <xref:System.ComponentModel.LicenseManager> class.  \n  \n [!code-cpp[LicenseException#1](~/samples/snippets/cpp/VS_Snippets_Winforms/LicenseException/CPP/licenseex.cpp#1)]\n [!code-csharp[LicenseException#1](~/samples/snippets/csharp/VS_Snippets_Winforms/LicenseException/CS/licenseex.cs#1)]\n [!code-vb[LicenseException#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/LicenseException/VB/licenseex.vb#1)]"
  syntax:
    content: 'public class LicenseException : SystemException'
  inheritance:
  - System.Object
  - System.Exception
  - System.SystemException
  implements: []
  inheritedMembers:
  - System.Exception.Data
  - System.Exception.GetBaseException
  - System.Exception.GetType
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.SerializeObjectState
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseException.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.LicenseException.#ctor(System.Type)
  commentId: M:System.ComponentModel.LicenseException.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.LicenseException
  langs:
  - csharp
  name: LicenseException(Type)
  nameWithType: LicenseException.LicenseException(Type)
  fullName: LicenseException.LicenseException(Type)
  type: Constructor
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Initializes a new instance of the <xref href="System.ComponentModel.LicenseException"></xref> class for the type of component that was denied a license.
  syntax:
    content: public LicenseException (Type type);
    parameters:
    - id: type
      type: System.Type
      description: A <xref href="System.Type"></xref> that represents the type of component that was not granted a license.
  overload: System.ComponentModel.LicenseException.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseException.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.LicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.ComponentModel.LicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.ComponentModel.LicenseException
  langs:
  - csharp
  name: LicenseException(SerializationInfo, StreamingContext)
  nameWithType: LicenseException.LicenseException(SerializationInfo, StreamingContext)
  fullName: LicenseException.LicenseException(SerializationInfo, StreamingContext)
  type: Constructor
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Initializes a new instance of the <xref href="System.ComponentModel.LicenseException"></xref> class with the given <xref href="System.Runtime.Serialization.SerializationInfo"></xref> and <xref href="System.Runtime.Serialization.StreamingContext"></xref>.
  syntax:
    content: protected LicenseException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The <xref href="System.Runtime.Serialization.SerializationInfo"></xref> to be used for deserialization.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The destination to be used for deserialization.
  overload: System.ComponentModel.LicenseException.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseException.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.LicenseException.#ctor(System.Type,System.Object)
  commentId: M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object)
  id: '#ctor(System.Type,System.Object)'
  parent: System.ComponentModel.LicenseException
  langs:
  - csharp
  name: LicenseException(Type, Object)
  nameWithType: LicenseException.LicenseException(Type, Object)
  fullName: LicenseException.LicenseException(Type, Object)
  type: Constructor
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Initializes a new instance of the <xref href="System.ComponentModel.LicenseException"></xref> class for the type and the instance of the component that was denied a license.
  syntax:
    content: public LicenseException (Type type, object instance);
    parameters:
    - id: type
      type: System.Type
      description: A <xref href="System.Type"></xref> that represents the type of component that was not granted a license.
    - id: instance
      type: System.Object
      description: The instance of the component that was not granted a license.
  overload: System.ComponentModel.LicenseException.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseException.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String)
  commentId: M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String)
  id: '#ctor(System.Type,System.Object,System.String)'
  parent: System.ComponentModel.LicenseException
  langs:
  - csharp
  name: LicenseException(Type, Object, String)
  nameWithType: LicenseException.LicenseException(Type, Object, String)
  fullName: LicenseException.LicenseException(Type, Object, String)
  type: Constructor
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Initializes a new instance of the <xref href="System.ComponentModel.LicenseException"></xref> class for the type and the instance of the component that was denied a license, along with a message to display.
  syntax:
    content: public LicenseException (Type type, object instance, string message);
    parameters:
    - id: type
      type: System.Type
      description: A <xref href="System.Type"></xref> that represents the type of component that was not granted a license.
    - id: instance
      type: System.Object
      description: The instance of the component that was not granted a license.
    - id: message
      type: System.String
      description: The exception message to display.
  overload: System.ComponentModel.LicenseException.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseException.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)
  commentId: M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)
  id: '#ctor(System.Type,System.Object,System.String,System.Exception)'
  parent: System.ComponentModel.LicenseException
  langs:
  - csharp
  name: LicenseException(Type, Object, String, Exception)
  nameWithType: LicenseException.LicenseException(Type, Object, String, Exception)
  fullName: LicenseException.LicenseException(Type, Object, String, Exception)
  type: Constructor
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Initializes a new instance of the <xref href="System.ComponentModel.LicenseException"></xref> class for the type and the instance of the component that was denied a license, along with a message to display and the original exception thrown.
  syntax:
    content: public LicenseException (Type type, object instance, string message, Exception innerException);
    parameters:
    - id: type
      type: System.Type
      description: A <xref href="System.Type"></xref> that represents the type of component that was not granted a license.
    - id: instance
      type: System.Object
      description: The instance of the component that was not granted a license.
    - id: message
      type: System.String
      description: The exception message to display.
    - id: innerException
      type: System.Exception
      description: An <xref href="System.Exception"></xref> that represents the original exception.
  overload: System.ComponentModel.LicenseException.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseException.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.LicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.ComponentModel.LicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.ComponentModel.LicenseException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: LicenseException.GetObjectData(SerializationInfo, StreamingContext)
  fullName: LicenseException.GetObjectData(SerializationInfo, StreamingContext)
  type: Method
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Sets the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> with information about the exception.
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The <xref href="System.Runtime.Serialization.SerializationInfo"></xref> to be used for deserialization.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The destination to be used for deserialization.
  overload: System.ComponentModel.LicenseException.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>info</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseException.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.LicenseException.LicensedType
  commentId: P:System.ComponentModel.LicenseException.LicensedType
  id: LicensedType
  parent: System.ComponentModel.LicenseException
  langs:
  - csharp
  name: LicensedType
  nameWithType: LicenseException.LicensedType
  fullName: LicenseException.LicensedType
  type: Property
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Gets the type of the component that was not granted a license.
  syntax:
    content: public Type LicensedType { get; }
    return:
      type: System.Type
      description: A <xref href="System.Type"></xref> that represents the type of component that was not granted a license.
  overload: System.ComponentModel.LicenseException.LicensedType*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseException.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ComponentModel.LicenseException.#ctor(System.Type)
  parent: System.ComponentModel.LicenseException
  isExternal: false
  name: LicenseException(Type)
  nameWithType: LicenseException.LicenseException(Type)
  fullName: LicenseException.LicenseException(Type)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.LicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.ComponentModel.LicenseException
  isExternal: false
  name: LicenseException(SerializationInfo, StreamingContext)
  nameWithType: LicenseException.LicenseException(SerializationInfo, StreamingContext)
  fullName: LicenseException.LicenseException(SerializationInfo, StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.ComponentModel.LicenseException.#ctor(System.Type,System.Object)
  parent: System.ComponentModel.LicenseException
  isExternal: false
  name: LicenseException(Type, Object)
  nameWithType: LicenseException.LicenseException(Type, Object)
  fullName: LicenseException.LicenseException(Type, Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String)
  parent: System.ComponentModel.LicenseException
  isExternal: false
  name: LicenseException(Type, Object, String)
  nameWithType: LicenseException.LicenseException(Type, Object, String)
  fullName: LicenseException.LicenseException(Type, Object, String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.LicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)
  parent: System.ComponentModel.LicenseException
  isExternal: false
  name: LicenseException(Type, Object, String, Exception)
  nameWithType: LicenseException.LicenseException(Type, Object, String, Exception)
  fullName: LicenseException.LicenseException(Type, Object, String, Exception)
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.ComponentModel.LicenseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.ComponentModel.LicenseException
  isExternal: false
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: LicenseException.GetObjectData(SerializationInfo, StreamingContext)
  fullName: LicenseException.GetObjectData(SerializationInfo, StreamingContext)
- uid: System.ComponentModel.LicenseException.LicensedType
  parent: System.ComponentModel.LicenseException
  isExternal: false
  name: LicensedType
  nameWithType: LicenseException.LicensedType
  fullName: LicenseException.LicensedType
- uid: System.ComponentModel.LicenseException.#ctor*
  parent: System.ComponentModel.LicenseException
  isExternal: false
  name: LicenseException
  nameWithType: LicenseException.LicenseException
  fullName: LicenseException.LicenseException
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseException.xml
- uid: System.ComponentModel.LicenseException.GetObjectData*
  parent: System.ComponentModel.LicenseException
  isExternal: false
  name: GetObjectData
  nameWithType: LicenseException.GetObjectData
  fullName: LicenseException.GetObjectData
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseException.xml
- uid: System.ComponentModel.LicenseException.LicensedType*
  parent: System.ComponentModel.LicenseException
  isExternal: false
  name: LicensedType
  nameWithType: LicenseException.LicensedType
  fullName: LicenseException.LicensedType
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/LicenseException.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Exception.GetType
  parent: System.Exception
  isExternal: false
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: Exception.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Exception.ToString
  parent: System.Exception
  isExternal: false
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: Exception.ToString()
- uid: System.Exception.Data
  parent: System.Exception
  isExternal: false
  name: Data
  nameWithType: Exception.Data
  fullName: Exception.Data
- uid: System.Exception.GetBaseException
  parent: System.Exception
  isExternal: false
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: Exception.GetBaseException()
- uid: System.Exception.HelpLink
  parent: System.Exception
  isExternal: false
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: Exception.HelpLink
- uid: System.Exception.HResult
  parent: System.Exception
  isExternal: false
  name: HResult
  nameWithType: Exception.HResult
  fullName: Exception.HResult
- uid: System.Exception.InnerException
  parent: System.Exception
  isExternal: false
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: Exception.InnerException
- uid: System.Exception.Message
  parent: System.Exception
  isExternal: false
  name: Message
  nameWithType: Exception.Message
  fullName: Exception.Message
- uid: System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: false
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: Exception.SerializeObjectState
- uid: System.Exception.Source
  parent: System.Exception
  isExternal: false
  name: Source
  nameWithType: Exception.Source
  fullName: Exception.Source
- uid: System.Exception.StackTrace
  parent: System.Exception
  isExternal: false
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: Exception.StackTrace
- uid: System.Exception.TargetSite
  parent: System.Exception
  isExternal: false
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: Exception.TargetSite
