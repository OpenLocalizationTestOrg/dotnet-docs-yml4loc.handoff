{"nodes":[{"content":"Provides task schedulers that coordinate to execute tasks while ensuring that concurrent tasks may run concurrently and exclusive tasks never do.","nodes":[{"pos":[0,145],"content":"Provides task schedulers that coordinate to execute tasks while ensuring that concurrent tasks may run concurrently and exclusive tasks never do.","nodes":[{"content":"Provides task schedulers that coordinate to execute tasks while ensuring that concurrent tasks may run concurrently and exclusive tasks never do.","pos":[0,145]}]}],"pos":[1246,1392],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\"></xref> class.","nodes":[{"pos":[0,117],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\"></xref> class."}],"pos":[4282,4400],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\"></xref> class that targets the specified scheduler.","nodes":[{"pos":[0,154],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\"&gt;&lt;/xref&gt;</ph> class that targets the specified scheduler.","source":"Initializes a new instance of the <xref href=\"System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\"></xref> class that targets the specified scheduler."}],"pos":[7185,7340],"yaml":true},{"content":"The target scheduler on which this pair should execute.","nodes":[{"pos":[0,55],"content":"The target scheduler on which this pair should execute.","nodes":[{"content":"The target scheduler on which this pair should execute.","pos":[0,55]}]}],"pos":[7565,7621],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\"></xref> class that targets the specified scheduler with a maximum concurrency level.","nodes":[{"pos":[0,187],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\"&gt;&lt;/xref&gt;</ph> class that targets the specified scheduler with a maximum concurrency level.","source":"Initializes a new instance of the <xref href=\"System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\"></xref> class that targets the specified scheduler with a maximum concurrency level."}],"pos":[9572,9760],"yaml":true},{"content":"The target scheduler on which this pair should execute.","nodes":[{"pos":[0,55],"content":"The target scheduler on which this pair should execute.","nodes":[{"content":"The target scheduler on which this pair should execute.","pos":[0,55]}]}],"pos":[10010,10066],"yaml":true},{"content":"The maximum number of tasks to run concurrently.","nodes":[{"pos":[0,48],"content":"The maximum number of tasks to run concurrently.","nodes":[{"content":"The maximum number of tasks to run concurrently.","pos":[0,48]}]}],"pos":[10140,10189],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\"></xref> class that targets the specified scheduler with a maximum concurrency level and a maximum number of scheduled tasks that may be processed as a unit.","nodes":[{"pos":[0,259],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\"&gt;&lt;/xref&gt;</ph> class that targets the specified scheduler with a maximum concurrency level and a maximum number of scheduled tasks that may be processed as a unit.","source":"Initializes a new instance of the <xref href=\"System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\"></xref> class that targets the specified scheduler with a maximum concurrency level and a maximum number of scheduled tasks that may be processed as a unit."}],"pos":[12200,12460],"yaml":true},{"content":"The target scheduler on which this pair should execute.","nodes":[{"pos":[0,55],"content":"The target scheduler on which this pair should execute.","nodes":[{"content":"The target scheduler on which this pair should execute.","pos":[0,55]}]}],"pos":[12731,12787],"yaml":true},{"content":"The maximum number of tasks to run concurrently.","nodes":[{"pos":[0,48],"content":"The maximum number of tasks to run concurrently.","nodes":[{"content":"The maximum number of tasks to run concurrently.","pos":[0,48]}]}],"pos":[12861,12910],"yaml":true},{"content":"The maximum number of tasks to process for each underlying scheduled task used by the pair.","nodes":[{"pos":[0,91],"content":"The maximum number of tasks to process for each underlying scheduled task used by the pair.","nodes":[{"content":"The maximum number of tasks to process for each underlying scheduled task used by the pair.","pos":[0,91]}]}],"pos":[12980,13072],"yaml":true},{"content":"Informs the scheduler pair that it should not accept any more tasks.","nodes":[{"pos":[0,68],"content":"Informs the scheduler pair that it should not accept any more tasks.","nodes":[{"content":"Informs the scheduler pair that it should not accept any more tasks.","pos":[0,68]}]}],"pos":[14740,14809],"yaml":true},{"content":"Calling <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete%2A> is optional. It is necessary only if you're relying on the <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion%2A> property for notification that all processing has been completed.","nodes":[{"pos":[0,284],"content":"Calling <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete%2A> is optional. It is necessary only if you're relying on the <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion%2A> property for notification that all processing has been completed.","nodes":[{"content":"Calling <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete%2A> is optional. It is necessary only if you're relying on the <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion%2A> property for notification that all processing has been completed.","pos":[0,284],"nodes":[{"content":"Calling <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete%2A&gt;</ph> is optional.","pos":[0,95],"source":"Calling <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete%2A> is optional."},{"content":"It is necessary only if you're relying on the <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion%2A&gt;</ph> property for notification that all processing has been completed.","pos":[96,284],"source":" It is necessary only if you're relying on the <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion%2A> property for notification that all processing has been completed."}]}]}],"pos":[14820,15105],"yaml":true,"extradata":"MT"},{"content":"Gets a <xref href=\"System.Threading.Tasks.Task\"></xref> that will complete when the scheduler has completed processing.","nodes":[{"pos":[0,119],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task\"&gt;&lt;/xref&gt;</ph> that will complete when the scheduler has completed processing.","source":"Gets a <xref href=\"System.Threading.Tasks.Task\"></xref> that will complete when the scheduler has completed processing."}],"pos":[16851,16971],"yaml":true},{"content":"The asynchronous operation that will complete when the scheduler finishes processing.","nodes":[{"pos":[0,85],"content":"The asynchronous operation that will complete when the scheduler finishes processing.","nodes":[{"content":"The asynchronous operation that will complete when the scheduler finishes processing.","pos":[0,85]}]}],"pos":[17120,17206],"yaml":true},{"content":"Gets a <xref href=\"System.Threading.Tasks.TaskScheduler\"></xref> that can be used to schedule tasks to this pair that may run concurrently with other tasks on this pair.","nodes":[{"pos":[0,169],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.TaskScheduler\"&gt;&lt;/xref&gt;</ph> that can be used to schedule tasks to this pair that may run concurrently with other tasks on this pair.","source":"Gets a <xref href=\"System.Threading.Tasks.TaskScheduler\"></xref> that can be used to schedule tasks to this pair that may run concurrently with other tasks on this pair."}],"pos":[18941,19111],"yaml":true},{"content":"An object that can be used to schedule tasks concurrently.","nodes":[{"pos":[0,58],"content":"An object that can be used to schedule tasks concurrently.","nodes":[{"content":"An object that can be used to schedule tasks concurrently.","pos":[0,58]}]}],"pos":[20034,20093],"yaml":true},{"content":"Gets a <xref href=\"System.Threading.Tasks.TaskScheduler\"></xref> that can be used to schedule tasks to this pair that must run exclusively with regards to other tasks on this pair.","nodes":[{"pos":[0,180],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.TaskScheduler\"&gt;&lt;/xref&gt;</ph> that can be used to schedule tasks to this pair that must run exclusively with regards to other tasks on this pair.","source":"Gets a <xref href=\"System.Threading.Tasks.TaskScheduler\"></xref> that can be used to schedule tasks to this pair that must run exclusively with regards to other tasks on this pair."}],"pos":[21831,22012],"yaml":true},{"content":"An object that can be used to schedule tasks that do not run concurrently with other tasks.","nodes":[{"pos":[0,91],"content":"An object that can be used to schedule tasks that do not run concurrently with other tasks.","nodes":[{"content":"An object that can be used to schedule tasks that do not run concurrently with other tasks.","pos":[0,91]}]}],"pos":[22933,23025],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\n  commentId: T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\n  id: ConcurrentExclusiveSchedulerPair\n  children:\n  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor\n  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)\n  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)\n  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete\n  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion\n  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler\n  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler\n  langs:\n  - csharp\n  name: ConcurrentExclusiveSchedulerPair\n  nameWithType: ConcurrentExclusiveSchedulerPair\n  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\n  type: Class\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Provides task schedulers that coordinate to execute tasks while ensuring that concurrent tasks may run concurrently and exclusive tasks never do.\n  remarks: ''\n  example:\n  - \"The following example shows the use of the <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair> class. Readers run on the concurrent part of the scheduler. The writer runs on the exclusive part of the scheduler. This code example is part of a larger example provided for the [How to: Specify a Task Scheduler in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md) topic.  \\n  \\n [!code-csharp[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/cs/writerreaderswinforms/form1.cs#4)]\\n [!code-vb[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/vb/writerreaderswinforms/form1.vb#4)]\"\n  syntax:\n    content: public class ConcurrentExclusiveSchedulerPair\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor\n  commentId: M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor\n  id: '#ctor'\n  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\n  langs:\n  - csharp\n  name: ConcurrentExclusiveSchedulerPair()\n  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair()\n  fullName: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair()\n  type: Constructor\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Initializes a new instance of the <xref href=\"System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following example shows the use of the <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.%23ctor%2A> constructor to create a new <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair> object. This code example is part of a larger example provided for the [How to: Specify a Task Scheduler in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md) topic.  \\n  \\n [!code-csharp[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/cs/writerreaderswinforms/form1.cs#4)]\\n [!code-vb[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/vb/writerreaderswinforms/form1.vb#4)]\"\n  syntax:\n    content: public ConcurrentExclusiveSchedulerPair ();\n    parameters: []\n  overload: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler)\n  commentId: M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler)\n  id: '#ctor(System.Threading.Tasks.TaskScheduler)'\n  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\n  langs:\n  - csharp\n  name: ConcurrentExclusiveSchedulerPair(TaskScheduler)\n  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler)\n  fullName: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler)\n  type: Constructor\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Initializes a new instance of the <xref href=\"System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\"></xref> class that targets the specified scheduler.\n  syntax:\n    content: public ConcurrentExclusiveSchedulerPair (System.Threading.Tasks.TaskScheduler taskScheduler);\n    parameters:\n    - id: taskScheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: The target scheduler on which this pair should execute.\n  overload: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)\n  commentId: M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)\n  id: '#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)'\n  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\n  langs:\n  - csharp\n  name: ConcurrentExclusiveSchedulerPair(TaskScheduler, Int32)\n  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler, Int32)\n  fullName: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler, Int32)\n  type: Constructor\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Initializes a new instance of the <xref href=\"System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\"></xref> class that targets the specified scheduler with a maximum concurrency level.\n  syntax:\n    content: public ConcurrentExclusiveSchedulerPair (System.Threading.Tasks.TaskScheduler taskScheduler, int maxConcurrencyLevel);\n    parameters:\n    - id: taskScheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: The target scheduler on which this pair should execute.\n    - id: maxConcurrencyLevel\n      type: System.Int32\n      description: The maximum number of tasks to run concurrently.\n  overload: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)\n  commentId: M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)\n  id: '#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)'\n  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\n  langs:\n  - csharp\n  name: ConcurrentExclusiveSchedulerPair(TaskScheduler, Int32, Int32)\n  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler, Int32, Int32)\n  fullName: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler, Int32, Int32)\n  type: Constructor\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Initializes a new instance of the <xref href=\"System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\"></xref> class that targets the specified scheduler with a maximum concurrency level and a maximum number of scheduled tasks that may be processed as a unit.\n  syntax:\n    content: public ConcurrentExclusiveSchedulerPair (System.Threading.Tasks.TaskScheduler taskScheduler, int maxConcurrencyLevel, int maxItemsPerTask);\n    parameters:\n    - id: taskScheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: The target scheduler on which this pair should execute.\n    - id: maxConcurrencyLevel\n      type: System.Int32\n      description: The maximum number of tasks to run concurrently.\n    - id: maxItemsPerTask\n      type: System.Int32\n      description: The maximum number of tasks to process for each underlying scheduled task used by the pair.\n  overload: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete\n  commentId: M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete\n  id: Complete\n  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\n  langs:\n  - csharp\n  name: Complete()\n  nameWithType: ConcurrentExclusiveSchedulerPair.Complete()\n  fullName: ConcurrentExclusiveSchedulerPair.Complete()\n  type: Method\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Informs the scheduler pair that it should not accept any more tasks.\n  remarks: Calling <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete%2A> is optional. It is necessary only if you're relying on the <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion%2A> property for notification that all processing has been completed.\n  syntax:\n    content: public void Complete ();\n    parameters: []\n  overload: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion\n  commentId: P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion\n  id: Completion\n  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\n  langs:\n  - csharp\n  name: Completion\n  nameWithType: ConcurrentExclusiveSchedulerPair.Completion\n  fullName: ConcurrentExclusiveSchedulerPair.Completion\n  type: Property\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Gets a <xref href=\"System.Threading.Tasks.Task\"></xref> that will complete when the scheduler has completed processing.\n  syntax:\n    content: public System.Threading.Tasks.Task Completion { get; }\n    return:\n      type: System.Threading.Tasks.Task\n      description: The asynchronous operation that will complete when the scheduler finishes processing.\n  overload: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler\n  commentId: P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler\n  id: ConcurrentScheduler\n  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\n  langs:\n  - csharp\n  name: ConcurrentScheduler\n  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentScheduler\n  fullName: ConcurrentExclusiveSchedulerPair.ConcurrentScheduler\n  type: Property\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Gets a <xref href=\"System.Threading.Tasks.TaskScheduler\"></xref> that can be used to schedule tasks to this pair that may run concurrently with other tasks on this pair.\n  remarks: ''\n  example:\n  - \"The following example shows the use of the <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler%2A> property to run a reader. This code example is part of a larger example provided for the [How to: Specify a Task Scheduler in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md) topic.  \\n  \\n [!code-csharp[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/cs/writerreaderswinforms/form1.cs#4)]\\n [!code-vb[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/vb/writerreaderswinforms/form1.vb#4)]\"\n  syntax:\n    content: public System.Threading.Tasks.TaskScheduler ConcurrentScheduler { get; }\n    return:\n      type: System.Threading.Tasks.TaskScheduler\n      description: An object that can be used to schedule tasks concurrently.\n  overload: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler\n  commentId: P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler\n  id: ExclusiveScheduler\n  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\n  langs:\n  - csharp\n  name: ExclusiveScheduler\n  nameWithType: ConcurrentExclusiveSchedulerPair.ExclusiveScheduler\n  fullName: ConcurrentExclusiveSchedulerPair.ExclusiveScheduler\n  type: Property\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  namespace: System.Threading.Tasks\n  summary: Gets a <xref href=\"System.Threading.Tasks.TaskScheduler\"></xref> that can be used to schedule tasks to this pair that must run exclusively with regards to other tasks on this pair.\n  remarks: ''\n  example:\n  - \"The following example shows the use of the <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler%2A> property to run a writer. This code example is part of a larger example provided for the [How to: Specify a Task Scheduler in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-a-task-scheduler-in-a-dataflow-block.md) topic.  \\n  \\n [!code-csharp[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/cs/writerreaderswinforms/form1.cs#4)]\\n [!code-vb[TPLDataflow_WriterReadersWinForms#4](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_writerreaderswinforms/vb/writerreaderswinforms/form1.vb#4)]\"\n  syntax:\n    content: public System.Threading.Tasks.TaskScheduler ExclusiveScheduler { get; }\n    return:\n      type: System.Threading.Tasks.TaskScheduler\n      description: An object that can be used to schedule tasks that do not run concurrently with other tasks.\n  overload: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor\n  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\n  isExternal: false\n  name: ConcurrentExclusiveSchedulerPair()\n  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair()\n  fullName: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair()\n- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\n  isExternal: false\n  name: ConcurrentExclusiveSchedulerPair(TaskScheduler)\n  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler)\n  fullName: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler)\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)\n  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\n  isExternal: false\n  name: ConcurrentExclusiveSchedulerPair(TaskScheduler, Int32)\n  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler, Int32)\n  fullName: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler, Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)\n  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\n  isExternal: false\n  name: ConcurrentExclusiveSchedulerPair(TaskScheduler, Int32, Int32)\n  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler, Int32, Int32)\n  fullName: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler, Int32, Int32)\n- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete\n  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\n  isExternal: false\n  name: Complete()\n  nameWithType: ConcurrentExclusiveSchedulerPair.Complete()\n  fullName: ConcurrentExclusiveSchedulerPair.Complete()\n- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion\n  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\n  isExternal: false\n  name: Completion\n  nameWithType: ConcurrentExclusiveSchedulerPair.Completion\n  fullName: ConcurrentExclusiveSchedulerPair.Completion\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler\n  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\n  isExternal: false\n  name: ConcurrentScheduler\n  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentScheduler\n  fullName: ConcurrentExclusiveSchedulerPair.ConcurrentScheduler\n- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler\n  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\n  isExternal: false\n  name: ExclusiveScheduler\n  nameWithType: ConcurrentExclusiveSchedulerPair.ExclusiveScheduler\n  fullName: ConcurrentExclusiveSchedulerPair.ExclusiveScheduler\n- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor*\n  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\n  isExternal: false\n  name: ConcurrentExclusiveSchedulerPair\n  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair\n  fullName: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml\n- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete*\n  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\n  isExternal: false\n  name: Complete\n  nameWithType: ConcurrentExclusiveSchedulerPair.Complete\n  fullName: ConcurrentExclusiveSchedulerPair.Complete\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml\n- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion*\n  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\n  isExternal: false\n  name: Completion\n  nameWithType: ConcurrentExclusiveSchedulerPair.Completion\n  fullName: ConcurrentExclusiveSchedulerPair.Completion\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml\n- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler*\n  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\n  isExternal: false\n  name: ConcurrentScheduler\n  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentScheduler\n  fullName: ConcurrentExclusiveSchedulerPair.ConcurrentScheduler\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml\n- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler*\n  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair\n  isExternal: false\n  name: ExclusiveScheduler\n  nameWithType: ConcurrentExclusiveSchedulerPair.ExclusiveScheduler\n  fullName: ConcurrentExclusiveSchedulerPair.ExclusiveScheduler\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ConcurrentExclusiveSchedulerPair.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}