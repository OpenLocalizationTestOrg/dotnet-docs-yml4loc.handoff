{"nodes":[{"content":"Represents a managed <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object designed to work with the Oracle `BFILE` data type. This class cannot be inherited.","nodes":[{"pos":[0,169],"content":"Represents a managed <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object designed to work with the Oracle `BFILE` data type. This class cannot be inherited.","nodes":[{"content":"Represents a managed <ph id=\"ph1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;&lt;/xref&gt;</ph> object designed to work with the Oracle <ph id=\"ph2\">`BFILE`</ph> data type.","pos":[0,137],"source":"Represents a managed <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object designed to work with the Oracle `BFILE` data type."},{"content":"This class cannot be inherited.","pos":[138,169]}]}],"pos":[1847,2017],"yaml":true},{"content":"The Oracle `BFILE` data type is an Oracle `LOB` data type that contains a reference to binary data with a maximum size of 4 gigabytes. An Oracle `BFILE` differs from other Oracle `LOB` data types in that its data is stored in a physical file in the operating system instead of on the server. Note that the `BFILE` data type provides read-only access to data. Therefore, write-oriented methods inherited from the <xref:System.IO.Stream> class are not supported.  \n  \n Other characteristics of a `BFILE` data type that distinguish it from a `LOB` data type are that it:  \n  \n-   Contains unstructured data.  \n  \n-   Supports server-side chunking.  \n  \n-   Uses reference copy semantics. For example, if you perform a copy operation on a `BFILE`, only the `BFILE` locator (which is a reference to the file) is copied. The data in the file is not copied.  \n  \n The `BFILE` data type should be used for referencing `LOB`s that are large in size, and therefore, not practical to store in the database. There is client, server, and communication overhead for using a `BFILE` data type compared to the `LOB` data type. It is more efficient to access a `BFILE` if you only need to obtain a small amount of data. It is more efficient to access database-resident `LOB`s if you need to obtain the entire object.  \n  \n Each non-NULL <xref:System.Data.OracleClient.OracleBFile> object is associated with two entities that define the location of the underlying physical file:  \n  \n-   An Oracle DIRECTORY object, which is a database alias for a directory in the file system, and  \n  \n-   The file name of the underlying physical file, which is located in the directory associated with the DIRECTORY object.  \n  \n After a `BFILE` is created, you can retrieve its locator in the form of an <xref:System.Data.OracleClient.OracleBFile> object using the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> or <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> methods.  \n  \n To obtain an <xref:System.Data.OracleClient.OracleBFile> object, call the <xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A> method.  \n  \n The physical file that an <xref:System.Data.OracleClient.OracleBFile> object is associated with does not need to exist until you attempt to access it. An application can bind an <xref:System.Data.OracleClient.OracleBFile> to a nonexistent file, create the physical file in the expected location, and then call <xref:System.Data.OracleClient.OracleBFile.Read%2A>.  \n  \n Any attempt to access a closed <xref:System.Data.OracleClient.OracleBFile> using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> or <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods reopens an <xref:System.Data.OracleClient.OracleBFile> stream automatically.  \n  \n The following C# example demonstrates how you can create a `BFILE` in an Oracle table, and then retrieve it in the form of an <xref:System.Data.OracleClient.OracleBFile> object. The example demonstrates the use of the <xref:System.Data.OracleClient.OracleDataReader> object and the <xref:System.Data.OracleClient.OracleBFile><xref:System.Data.OracleClient.OracleBFile.Seek%2A> and <xref:System.Data.OracleClient.OracleBFile.Read%2A> methods.  \n  \n [!code-csharp[DataWorks OracleClient.BFile#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OracleClient.BFile/CS/source.cs#1)]  \n  \n For more information about creating and using an Oracle `BFILE`, see the appropriate topic in your Oracle documentation.  \n  \n> [!NOTE]\n>  The `BeginWrite`, `EndWrite`, and `WriteByte` methods, which are inherited from the `System.IO.Stream` class, are not supported because the `BFILE` data type is read-only.","nodes":[{"pos":[0,460],"content":"The Oracle `BFILE` data type is an Oracle `LOB` data type that contains a reference to binary data with a maximum size of 4 gigabytes. An Oracle `BFILE` differs from other Oracle `LOB` data types in that its data is stored in a physical file in the operating system instead of on the server. Note that the `BFILE` data type provides read-only access to data. Therefore, write-oriented methods inherited from the <xref:System.IO.Stream> class are not supported.","nodes":[{"content":"The Oracle <ph id=\"ph1\">`BFILE`</ph> data type is an Oracle <ph id=\"ph2\">`LOB`</ph> data type that contains a reference to binary data with a maximum size of 4 gigabytes.","pos":[0,134],"source":"The Oracle `BFILE` data type is an Oracle `LOB` data type that contains a reference to binary data with a maximum size of 4 gigabytes."},{"content":"An Oracle <ph id=\"ph1\">`BFILE`</ph> differs from other Oracle <ph id=\"ph2\">`LOB`</ph> data types in that its data is stored in a physical file in the operating system instead of on the server.","pos":[135,291],"source":" An Oracle `BFILE` differs from other Oracle `LOB` data types in that its data is stored in a physical file in the operating system instead of on the server."},{"content":"Note that the <ph id=\"ph1\">`BFILE`</ph> data type provides read-only access to data.","pos":[292,358],"source":" Note that the `BFILE` data type provides read-only access to data."},{"content":"Therefore, write-oriented methods inherited from the <ph id=\"ph1\">&lt;xref:System.IO.Stream&gt;</ph> class are not supported.","pos":[359,460],"source":" Therefore, write-oriented methods inherited from the <xref:System.IO.Stream> class are not supported."}]},{"pos":[467,567],"content":"Other characteristics of a <ph id=\"ph1\">`BFILE`</ph> data type that distinguish it from a <ph id=\"ph2\">`LOB`</ph> data type are that it:","source":"Other characteristics of a `BFILE` data type that distinguish it from a `LOB` data type are that it:"},{"pos":[577,604],"content":"Contains unstructured data.","nodes":[{"content":"Contains unstructured data.","pos":[0,27]}]},{"pos":[614,644],"content":"Supports server-side chunking.","nodes":[{"content":"Supports server-side chunking.","pos":[0,30]}]},{"pos":[654,850],"content":"Uses reference copy semantics. For example, if you perform a copy operation on a `BFILE`, only the `BFILE` locator (which is a reference to the file) is copied. The data in the file is not copied.","nodes":[{"content":"Uses reference copy semantics.","pos":[0,30]},{"content":"For example, if you perform a copy operation on a <ph id=\"ph1\">`BFILE`</ph>, only the <ph id=\"ph2\">`BFILE`</ph> locator (which is a reference to the file) is copied.","pos":[31,160],"source":" For example, if you perform a copy operation on a `BFILE`, only the `BFILE` locator (which is a reference to the file) is copied."},{"content":"The data in the file is not copied.","pos":[161,196]}]},{"pos":[857,1299],"content":"The `BFILE` data type should be used for referencing `LOB`s that are large in size, and therefore, not practical to store in the database. There is client, server, and communication overhead for using a `BFILE` data type compared to the `LOB` data type. It is more efficient to access a `BFILE` if you only need to obtain a small amount of data. It is more efficient to access database-resident `LOB`s if you need to obtain the entire object.","nodes":[{"content":"The <ph id=\"ph1\">`BFILE`</ph> data type should be used for referencing <ph id=\"ph2\">`LOB`</ph>s that are large in size, and therefore, not practical to store in the database.","pos":[0,138],"source":"The `BFILE` data type should be used for referencing `LOB`s that are large in size, and therefore, not practical to store in the database."},{"content":"There is client, server, and communication overhead for using a <ph id=\"ph1\">`BFILE`</ph> data type compared to the <ph id=\"ph2\">`LOB`</ph> data type.","pos":[139,253],"source":" There is client, server, and communication overhead for using a `BFILE` data type compared to the `LOB` data type."},{"content":"It is more efficient to access a <ph id=\"ph1\">`BFILE`</ph> if you only need to obtain a small amount of data.","pos":[254,345],"source":" It is more efficient to access a `BFILE` if you only need to obtain a small amount of data."},{"content":"It is more efficient to access database-resident <ph id=\"ph1\">`LOB`</ph>s if you need to obtain the entire object.","pos":[346,442],"source":" It is more efficient to access database-resident `LOB`s if you need to obtain the entire object."}]},{"pos":[1306,1460],"content":"Each non-NULL <xref:System.Data.OracleClient.OracleBFile> object is associated with two entities that define the location of the underlying physical file:","nodes":[{"content":"Each non-NULL <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object is associated with two entities that define the location of the underlying physical file:","pos":[0,154],"source":"Each non-NULL <xref:System.Data.OracleClient.OracleBFile> object is associated with two entities that define the location of the underlying physical file:"}]},{"pos":[1470,1563],"content":"An Oracle DIRECTORY object, which is a database alias for a directory in the file system, and","nodes":[{"content":"An Oracle DIRECTORY object, which is a database alias for a directory in the file system, and","pos":[0,93]}]},{"pos":[1573,1691],"content":"The file name of the underlying physical file, which is located in the directory associated with the DIRECTORY object.","nodes":[{"content":"The file name of the underlying physical file, which is located in the directory associated with the DIRECTORY object.","pos":[0,118]}]},{"pos":[1698,1971],"content":"After a <ph id=\"ph1\">`BFILE`</ph> is created, you can retrieve its locator in the form of an <ph id=\"ph2\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object using the <ph id=\"ph3\">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A&gt;</ph> methods.","source":"After a `BFILE` is created, you can retrieve its locator in the form of an <xref:System.Data.OracleClient.OracleBFile> object using the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> or <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> methods."},{"pos":[1978,2126],"content":"To obtain an <xref:System.Data.OracleClient.OracleBFile> object, call the <xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A> method.","nodes":[{"content":"To obtain an <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object, call the <ph id=\"ph2\">&lt;xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A&gt;</ph> method.","pos":[0,148],"source":"To obtain an <xref:System.Data.OracleClient.OracleBFile> object, call the <xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A> method."}]},{"pos":[2133,2495],"content":"The physical file that an <xref:System.Data.OracleClient.OracleBFile> object is associated with does not need to exist until you attempt to access it. An application can bind an <xref:System.Data.OracleClient.OracleBFile> to a nonexistent file, create the physical file in the expected location, and then call <xref:System.Data.OracleClient.OracleBFile.Read%2A>.","nodes":[{"content":"The physical file that an <xref:System.Data.OracleClient.OracleBFile> object is associated with does not need to exist until you attempt to access it. An application can bind an <xref:System.Data.OracleClient.OracleBFile> to a nonexistent file, create the physical file in the expected location, and then call <xref:System.Data.OracleClient.OracleBFile.Read%2A>.","pos":[0,362],"nodes":[{"content":"The physical file that an <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object is associated with does not need to exist until you attempt to access it.","pos":[0,150],"source":"The physical file that an <xref:System.Data.OracleClient.OracleBFile> object is associated with does not need to exist until you attempt to access it."},{"content":"An application can bind an <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> to a nonexistent file, create the physical file in the expected location, and then call <ph id=\"ph2\">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph>.","pos":[151,362],"source":" An application can bind an <xref:System.Data.OracleClient.OracleBFile> to a nonexistent file, create the physical file in the expected location, and then call <xref:System.Data.OracleClient.OracleBFile.Read%2A>."}]}]},{"pos":[2502,2778],"content":"Any attempt to access a closed <xref:System.Data.OracleClient.OracleBFile> using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> or <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods reopens an <xref:System.Data.OracleClient.OracleBFile> stream automatically.","nodes":[{"content":"Any attempt to access a closed <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> using the <ph id=\"ph2\">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> methods reopens an <ph id=\"ph4\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> stream automatically.","pos":[0,276],"source":"Any attempt to access a closed <xref:System.Data.OracleClient.OracleBFile> using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> or <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods reopens an <xref:System.Data.OracleClient.OracleBFile> stream automatically."}]},{"pos":[2785,3226],"content":"The following C# example demonstrates how you can create a `BFILE` in an Oracle table, and then retrieve it in the form of an <xref:System.Data.OracleClient.OracleBFile> object. The example demonstrates the use of the <xref:System.Data.OracleClient.OracleDataReader> object and the <xref:System.Data.OracleClient.OracleBFile><xref:System.Data.OracleClient.OracleBFile.Seek%2A> and <xref:System.Data.OracleClient.OracleBFile.Read%2A> methods.","nodes":[{"content":"The following C# example demonstrates how you can create a <ph id=\"ph1\">`BFILE`</ph> in an Oracle table, and then retrieve it in the form of an <ph id=\"ph2\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object.","pos":[0,177],"source":"The following C# example demonstrates how you can create a `BFILE` in an Oracle table, and then retrieve it in the form of an <xref:System.Data.OracleClient.OracleBFile> object."},{"content":"The example demonstrates the use of the <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleDataReader&gt;</ph> object and the <ph id=\"ph2\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph><ph id=\"ph3\">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> methods.","pos":[178,441],"source":" The example demonstrates the use of the <xref:System.Data.OracleClient.OracleDataReader> object and the <xref:System.Data.OracleClient.OracleBFile><xref:System.Data.OracleClient.OracleBFile.Seek%2A> and <xref:System.Data.OracleClient.OracleBFile.Read%2A> methods."}]},{"pos":[3233,3370],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>DataWorks OracleClient.BFile#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OracleClient.BFile/CS/source.cs#1)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[DataWorks OracleClient.BFile#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OracleClient.BFile/CS/source.cs#1)]"},{"pos":[3377,3497],"content":"For more information about creating and using an Oracle <ph id=\"ph1\">`BFILE`</ph>, see the appropriate topic in your Oracle documentation.","source":"For more information about creating and using an Oracle `BFILE`, see the appropriate topic in your Oracle documentation."},{"pos":[3505,3687],"content":"[!NOTE]\n The `BeginWrite`, `EndWrite`, and `WriteByte` methods, which are inherited from the `System.IO.Stream` class, are not supported because the `BFILE` data type is read-only.","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">`BeginWrite`</ph>, <ph id=\"ph2\">`EndWrite`</ph>, and <ph id=\"ph3\">`WriteByte`</ph> methods, which are inherited from the <ph id=\"ph4\">`System.IO.Stream`</ph> class, are not supported because the <ph id=\"ph5\">`BFILE`</ph> data type is read-only.","pos":[9,180],"source":" The `BeginWrite`, `EndWrite`, and `WriteByte` methods, which are inherited from the `System.IO.Stream` class, are not supported because the `BFILE` data type is read-only."}]}],"pos":[2028,5751],"yaml":true,"extradata":"MT"},{"content":"Gets a value indicating whether the `BFILE` stream can be read.","nodes":[{"pos":[0,63],"content":"Gets a value indicating whether the <ph id=\"ph1\">`BFILE`</ph> stream can be read.","source":"Gets a value indicating whether the `BFILE` stream can be read."}],"pos":[8665,8729],"yaml":true},{"content":"`false` if a `BFILE` is closed or disposed; otherwise `true`. Always `true` for <xref href=\"System.Data.OracleClient.OracleBFile.Null\"></xref>.","nodes":[{"pos":[0,143],"content":"`false` if a `BFILE` is closed or disposed; otherwise `true`. Always `true` for <xref href=\"System.Data.OracleClient.OracleBFile.Null\"></xref>.","nodes":[{"content":"<ph id=\"ph1\">`false`</ph> if a <ph id=\"ph2\">`BFILE`</ph> is closed or disposed; otherwise <ph id=\"ph3\">`true`</ph>.","pos":[0,61],"source":"`false` if a `BFILE` is closed or disposed; otherwise `true`."},{"content":"Always <ph id=\"ph1\">`true`</ph> for <ph id=\"ph2\">&lt;xref href=\"System.Data.OracleClient.OracleBFile.Null\"&gt;&lt;/xref&gt;</ph>.","pos":[62,143],"source":" Always `true` for <xref href=\"System.Data.OracleClient.OracleBFile.Null\"></xref>."}]}],"pos":[8848,8994],"yaml":true},{"content":"Gets a value indicating whether forward-seek and backward-seek operations can be performed.","nodes":[{"pos":[0,91],"content":"Gets a value indicating whether forward-seek and backward-seek operations can be performed.","nodes":[{"content":"Gets a value indicating whether forward-seek and backward-seek operations can be performed.","pos":[0,91]}]}],"pos":[9993,10085],"yaml":true},{"content":"`false` if a `BFILE` is closed or disposed; otherwise `true`. Always `true` for <xref href=\"System.Data.OracleClient.OracleBFile.Null\"></xref>.","nodes":[{"pos":[0,143],"content":"`false` if a `BFILE` is closed or disposed; otherwise `true`. Always `true` for <xref href=\"System.Data.OracleClient.OracleBFile.Null\"></xref>.","nodes":[{"content":"<ph id=\"ph1\">`false`</ph> if a <ph id=\"ph2\">`BFILE`</ph> is closed or disposed; otherwise <ph id=\"ph3\">`true`</ph>.","pos":[0,61],"source":"`false` if a `BFILE` is closed or disposed; otherwise `true`."},{"content":"Always <ph id=\"ph1\">`true`</ph> for <ph id=\"ph2\">&lt;xref href=\"System.Data.OracleClient.OracleBFile.Null\"&gt;&lt;/xref&gt;</ph>.","pos":[62,143],"source":" Always `true` for <xref href=\"System.Data.OracleClient.OracleBFile.Null\"></xref>."}]}],"pos":[10204,10350],"yaml":true},{"content":"Gets a value indicating whether the object supports writing.","nodes":[{"pos":[0,60],"content":"Gets a value indicating whether the object supports writing.","nodes":[{"content":"Gets a value indicating whether the object supports writing.","pos":[0,60]}]}],"pos":[11355,11416],"yaml":true},{"content":"Always returns `false` because the Oracle `BFILE` data type is read-only.","nodes":[{"pos":[0,73],"content":"Always returns <ph id=\"ph1\">`false`</ph> because the Oracle <ph id=\"ph2\">`BFILE`</ph> data type is read-only.","source":"Always returns `false` because the Oracle `BFILE` data type is read-only."}],"pos":[11536,11610],"yaml":true},{"content":"Creates a copy of this <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object associated with the same physical file as the original.","nodes":[{"pos":[0,143],"content":"Creates a copy of this <ph id=\"ph1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;&lt;/xref&gt;</ph> object associated with the same physical file as the original.","source":"Creates a copy of this <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object associated with the same physical file as the original."}],"pos":[12602,12746],"yaml":true},{"content":"The properties of the new <xref:System.Data.OracleClient.OracleBFile> object initially have the same values as those of the original object. However, after the <xref:System.Data.OracleClient.OracleBFile.Clone%2A> is complete, each <xref:System.Data.OracleClient.OracleBFile> object is independent from the other. For example, changing the value of the <xref:System.Data.OracleClient.OracleBFile.Position%2A> property on the original <xref:System.Data.OracleClient.OracleBFile> does not change the value of <xref:System.Data.OracleClient.OracleBFile.Position%2A> on the copy.","nodes":[{"pos":[0,574],"content":"The properties of the new <xref:System.Data.OracleClient.OracleBFile> object initially have the same values as those of the original object. However, after the <xref:System.Data.OracleClient.OracleBFile.Clone%2A> is complete, each <xref:System.Data.OracleClient.OracleBFile> object is independent from the other. For example, changing the value of the <xref:System.Data.OracleClient.OracleBFile.Position%2A> property on the original <xref:System.Data.OracleClient.OracleBFile> does not change the value of <xref:System.Data.OracleClient.OracleBFile.Position%2A> on the copy.","nodes":[{"content":"The properties of the new <xref:System.Data.OracleClient.OracleBFile> object initially have the same values as those of the original object. However, after the <xref:System.Data.OracleClient.OracleBFile.Clone%2A> is complete, each <xref:System.Data.OracleClient.OracleBFile> object is independent from the other. For example, changing the value of the <xref:System.Data.OracleClient.OracleBFile.Position%2A> property on the original <xref:System.Data.OracleClient.OracleBFile> does not change the value of <xref:System.Data.OracleClient.OracleBFile.Position%2A> on the copy.","pos":[0,574],"nodes":[{"content":"The properties of the new <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object initially have the same values as those of the original object.","pos":[0,140],"source":"The properties of the new <xref:System.Data.OracleClient.OracleBFile> object initially have the same values as those of the original object."},{"content":"However, after the <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile.Clone%2A&gt;</ph> is complete, each <ph id=\"ph2\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object is independent from the other.","pos":[141,312],"source":" However, after the <xref:System.Data.OracleClient.OracleBFile.Clone%2A> is complete, each <xref:System.Data.OracleClient.OracleBFile> object is independent from the other."},{"content":"For example, changing the value of the <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile.Position%2A&gt;</ph> property on the original <ph id=\"ph2\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> does not change the value of <ph id=\"ph3\">&lt;xref:System.Data.OracleClient.OracleBFile.Position%2A&gt;</ph> on the copy.","pos":[313,574],"source":" For example, changing the value of the <xref:System.Data.OracleClient.OracleBFile.Position%2A> property on the original <xref:System.Data.OracleClient.OracleBFile> does not change the value of <xref:System.Data.OracleClient.OracleBFile.Position%2A> on the copy."}]}]}],"pos":[12757,13332],"yaml":true,"extradata":"MT"},{"content":"A new <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object associated with the same physical file as the original `OracleBFile` object.","nodes":[{"pos":[0,147],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;&lt;/xref&gt;</ph> object associated with the same physical file as the original <ph id=\"ph2\">`OracleBFile`</ph> object.","source":"A new <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object associated with the same physical file as the original `OracleBFile` object."}],"pos":[13455,13603],"yaml":true},{"content":"Gets the <xref href=\"System.Data.OracleClient.OracleConnection\"></xref> used by this instance of the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref>.","nodes":[{"pos":[0,159],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Data.OracleClient.OracleConnection\"&gt;&lt;/xref&gt;</ph> used by this instance of the <ph id=\"ph2\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the <xref href=\"System.Data.OracleClient.OracleConnection\"></xref> used by this instance of the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref>."}],"pos":[14618,14778],"yaml":true},{"content":"The connection to a data source. The default is a null value.","nodes":[{"pos":[0,61],"content":"The connection to a data source. The default is a null value.","nodes":[{"content":"The connection to a data source. The default is a null value.","pos":[0,61],"nodes":[{"content":"The connection to a data source.","pos":[0,32]},{"content":"The default is a null value.","pos":[33,61]}]}]}],"pos":[14955,15017],"yaml":true},{"content":"Copies the entire contents of this <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> to the beginning of a destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref>.","nodes":[{"pos":[0,183],"content":"Copies the entire contents of this <ph id=\"ph1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;&lt;/xref&gt;</ph> to the beginning of a destination <ph id=\"ph2\">&lt;xref href=\"System.Data.OracleClient.OracleLob\"&gt;&lt;/xref&gt;</ph>.","source":"Copies the entire contents of this <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> to the beginning of a destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref>."}],"pos":[16152,16336],"yaml":true},{"content":"The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible. For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type.  \n  \n You must have write access to the destination <xref:System.Data.OracleClient.OracleLob> for the <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> operation to execute correctly.","nodes":[{"pos":[0,297],"content":"The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible. For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type.","nodes":[{"content":"The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible. For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type.","pos":[0,297],"nodes":[{"content":"The underlying data types of the source <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> and the destination <ph id=\"ph2\">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> must be compatible.","pos":[0,165],"source":"The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible."},{"content":"For example, you cannot copy binary data to a destination <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> that has a character data type.","pos":[166,297],"source":" For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type."}]}]},{"pos":[304,485],"content":"You must have write access to the destination <xref:System.Data.OracleClient.OracleLob> for the <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> operation to execute correctly.","nodes":[{"content":"You must have write access to the destination <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> for the <ph id=\"ph2\">&lt;xref:System.Data.OracleClient.OracleBFile.CopyTo%2A&gt;</ph> operation to execute correctly.","pos":[0,181],"source":"You must have write access to the destination <xref:System.Data.OracleClient.OracleLob> for the <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> operation to execute correctly."}]}],"pos":[16347,16837],"yaml":true,"extradata":"MT"},{"content":"The destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref>","nodes":[{"pos":[0,71],"content":"The destination <ph id=\"ph1\">&lt;xref href=\"System.Data.OracleClient.OracleLob\"&gt;&lt;/xref&gt;</ph>","source":"The destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref>"}],"pos":[17033,17105],"yaml":true},{"content":"The number of bytes copied.","nodes":[{"pos":[0,27],"content":"The number of bytes copied.","nodes":[{"content":"The number of bytes copied.","pos":[0,27]}]}],"pos":[17161,17189],"yaml":true},{"content":"The destination `OracleLob` is a null object reference.","nodes":[{"pos":[0,55],"content":"The destination <ph id=\"ph1\">`OracleLob`</ph> is a null object reference.","source":"The destination `OracleLob` is a null object reference."}],"pos":[17362,17418],"yaml":true},{"content":"The destination is a null `OracleLob`.  \n  \n -or-  \n  \n The connection with which this `OracleBFile` is associated is closed.","nodes":[{"pos":[0,38],"content":"The destination is a null <ph id=\"ph1\">`OracleLob`</ph>.","source":"The destination is a null `OracleLob`."},{"pos":[45,49],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[56,125],"content":"The connection with which this <ph id=\"ph1\">`OracleBFile`</ph> is associated is closed.","source":"The connection with which this `OracleBFile` is associated is closed."}],"pos":[17528,17660],"yaml":true},{"content":"The `OracleBFile` object is closed or disposed.","nodes":[{"pos":[0,47],"content":"The <ph id=\"ph1\">`OracleBFile`</ph> object is closed or disposed.","source":"The `OracleBFile` object is closed or disposed."}],"pos":[17766,17814],"yaml":true},{"content":"Copies the entire contents of this <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> to a destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref> at the specified offset.","nodes":[{"pos":[0,190],"content":"Copies the entire contents of this <ph id=\"ph1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;&lt;/xref&gt;</ph> to a destination <ph id=\"ph2\">&lt;xref href=\"System.Data.OracleClient.OracleLob\"&gt;&lt;/xref&gt;</ph> at the specified offset.","source":"Copies the entire contents of this <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> to a destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref> at the specified offset."}],"pos":[18931,19122],"yaml":true},{"content":"The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible. For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type.  \n  \n You must have write access to the destination <xref:System.Data.OracleClient.OracleLob> for the <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> operation to execute correctly.","nodes":[{"pos":[0,297],"content":"The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible. For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type.","nodes":[{"content":"The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible. For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type.","pos":[0,297],"nodes":[{"content":"The underlying data types of the source <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> and the destination <ph id=\"ph2\">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> must be compatible.","pos":[0,165],"source":"The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible."},{"content":"For example, you cannot copy binary data to a destination <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> that has a character data type.","pos":[166,297],"source":" For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type."}]}]},{"pos":[304,485],"content":"You must have write access to the destination <xref:System.Data.OracleClient.OracleLob> for the <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> operation to execute correctly.","nodes":[{"content":"You must have write access to the destination <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> for the <ph id=\"ph2\">&lt;xref:System.Data.OracleClient.OracleBFile.CopyTo%2A&gt;</ph> operation to execute correctly.","pos":[0,181],"source":"You must have write access to the destination <xref:System.Data.OracleClient.OracleLob> for the <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> operation to execute correctly."}]}],"pos":[19133,19623],"yaml":true,"extradata":"MT"},{"content":"The destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref>.","nodes":[{"pos":[0,72],"content":"The destination <ph id=\"ph1\">&lt;xref href=\"System.Data.OracleClient.OracleLob\"&gt;&lt;/xref&gt;</ph>.","source":"The destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref>."}],"pos":[19843,19916],"yaml":true},{"content":"The offset to which to copy.","nodes":[{"pos":[0,28],"content":"The offset to which to copy.","nodes":[{"content":"The offset to which to copy.","pos":[0,28]}]}],"pos":[19988,20017],"yaml":true},{"content":"The number of bytes copied.","nodes":[{"pos":[0,27],"content":"The number of bytes copied.","nodes":[{"content":"The number of bytes copied.","pos":[0,27]}]}],"pos":[20073,20101],"yaml":true},{"content":"The destination `OracleLob` is a null object reference.","nodes":[{"pos":[0,55],"content":"The destination <ph id=\"ph1\">`OracleLob`</ph> is a null object reference.","source":"The destination `OracleLob` is a null object reference."}],"pos":[20274,20330],"yaml":true},{"content":"The destination is a null `OracleLob`.  \n  \n -or-  \n  \n The connection with which this `OracleBFile` is associated is closed.","nodes":[{"pos":[0,38],"content":"The destination is a null <ph id=\"ph1\">`OracleLob`</ph>.","source":"The destination is a null `OracleLob`."},{"pos":[45,49],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[56,125],"content":"The connection with which this <ph id=\"ph1\">`OracleBFile`</ph> is associated is closed.","source":"The connection with which this `OracleBFile` is associated is closed."}],"pos":[20440,20572],"yaml":true},{"content":"The `OracleBFile` object is closed or disposed.","nodes":[{"pos":[0,47],"content":"The <ph id=\"ph1\">`OracleBFile`</ph> object is closed or disposed.","source":"The `OracleBFile` object is closed or disposed."}],"pos":[20678,20726],"yaml":true},{"content":"Copies from this <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> to a destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref> with the specified amount of data, the source offset, and the destination offset.","nodes":[{"pos":[0,229],"content":"Copies from this <ph id=\"ph1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;&lt;/xref&gt;</ph> to a destination <ph id=\"ph2\">&lt;xref href=\"System.Data.OracleClient.OracleLob\"&gt;&lt;/xref&gt;</ph> with the specified amount of data, the source offset, and the destination offset.","source":"Copies from this <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> to a destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref> with the specified amount of data, the source offset, and the destination offset."}],"pos":[21963,22193],"yaml":true},{"content":"The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible. For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type.  \n  \n You must have write access to the destination <xref:System.Data.OracleClient.OracleLob> for the <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> operation to execute correctly.","nodes":[{"pos":[0,297],"content":"The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible. For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type.","nodes":[{"content":"The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible. For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type.","pos":[0,297],"nodes":[{"content":"The underlying data types of the source <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> and the destination <ph id=\"ph2\">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> must be compatible.","pos":[0,165],"source":"The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible."},{"content":"For example, you cannot copy binary data to a destination <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> that has a character data type.","pos":[166,297],"source":" For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type."}]}]},{"pos":[304,485],"content":"You must have write access to the destination <xref:System.Data.OracleClient.OracleLob> for the <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> operation to execute correctly.","nodes":[{"content":"You must have write access to the destination <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleLob&gt;</ph> for the <ph id=\"ph2\">&lt;xref:System.Data.OracleClient.OracleBFile.CopyTo%2A&gt;</ph> operation to execute correctly.","pos":[0,181],"source":"You must have write access to the destination <xref:System.Data.OracleClient.OracleLob> for the <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> operation to execute correctly."}]}],"pos":[22204,22694],"yaml":true,"extradata":"MT"},{"content":"The offset from which to copy.","nodes":[{"pos":[0,30],"content":"The offset from which to copy.","nodes":[{"content":"The offset from which to copy.","pos":[0,30]}]}],"pos":[22925,22956],"yaml":true},{"content":"The destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref>.","nodes":[{"pos":[0,72],"content":"The destination <ph id=\"ph1\">&lt;xref href=\"System.Data.OracleClient.OracleLob\"&gt;&lt;/xref&gt;</ph>.","source":"The destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref>."}],"pos":[23044,23117],"yaml":true},{"content":"The offset to which to copy.","nodes":[{"pos":[0,28],"content":"The offset to which to copy.","nodes":[{"content":"The offset to which to copy.","pos":[0,28]}]}],"pos":[23189,23218],"yaml":true},{"content":"The quantity of data, in bytes, to copy.","nodes":[{"pos":[0,40],"content":"The quantity of data, in bytes, to copy.","nodes":[{"content":"The quantity of data, in bytes, to copy.","pos":[0,40]}]}],"pos":[23279,23320],"yaml":true},{"content":"The number of bytes copied.","nodes":[{"pos":[0,27],"content":"The number of bytes copied.","nodes":[{"content":"The number of bytes copied.","pos":[0,27]}]}],"pos":[23376,23404],"yaml":true},{"content":"The value of the amount parameter is less than zero or greater than 4 gigabytes.","nodes":[{"pos":[0,80],"content":"The value of the amount parameter is less than zero or greater than 4 gigabytes.","nodes":[{"content":"The value of the amount parameter is less than zero or greater than 4 gigabytes.","pos":[0,80]}]}],"pos":[23589,23670],"yaml":true},{"content":"The destination `OracleLob` is a null object reference.","nodes":[{"pos":[0,55],"content":"The destination <ph id=\"ph1\">`OracleLob`</ph> is a null object reference.","source":"The destination `OracleLob` is a null object reference."}],"pos":[23772,23828],"yaml":true},{"content":"The destination is a null `OracleLob`.  \n  \n -or-  \n  \n The connection with which this `OracleBFile` is associated is closed.","nodes":[{"pos":[0,38],"content":"The destination is a null <ph id=\"ph1\">`OracleLob`</ph>.","source":"The destination is a null `OracleLob`."},{"pos":[45,49],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[56,125],"content":"The connection with which this <ph id=\"ph1\">`OracleBFile`</ph> is associated is closed.","source":"The connection with which this `OracleBFile` is associated is closed."}],"pos":[23938,24070],"yaml":true},{"content":"The `OracleBFile` object is closed or disposed.","nodes":[{"pos":[0,47],"content":"The <ph id=\"ph1\">`OracleBFile`</ph> object is closed or disposed.","source":"The `OracleBFile` object is closed or disposed."}],"pos":[24176,24224],"yaml":true},{"content":"Gets the name of the DIRECTORY object, with which an <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object is associated.","nodes":[{"pos":[0,132],"content":"Gets the name of the DIRECTORY object, with which an <ph id=\"ph1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;&lt;/xref&gt;</ph> object is associated.","source":"Gets the name of the DIRECTORY object, with which an <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object is associated."}],"pos":[25184,25317],"yaml":true},{"content":"Each non-NULL <xref:System.Data.OracleClient.OracleBFile> object is associated with two entities that define the location of underlying physical file:  \n  \n-   An Oracle DIRECTORY object, which is a database alias for a directory in the file system, and  \n  \n-   The file name of the underlying physical file, which is located in the directory associated with the DIRECTORY object.  \n  \n The <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> property returns the name of the DIRECTORY object from the Oracle database.  \n  \n For more information about creating and using an Oracle `BFILE`, see the appropriate topic in your Oracle documentation.","nodes":[{"pos":[0,150],"content":"Each non-NULL <xref:System.Data.OracleClient.OracleBFile> object is associated with two entities that define the location of underlying physical file:","nodes":[{"content":"Each non-NULL <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object is associated with two entities that define the location of underlying physical file:","pos":[0,150],"source":"Each non-NULL <xref:System.Data.OracleClient.OracleBFile> object is associated with two entities that define the location of underlying physical file:"}]},{"pos":[160,253],"content":"An Oracle DIRECTORY object, which is a database alias for a directory in the file system, and","nodes":[{"content":"An Oracle DIRECTORY object, which is a database alias for a directory in the file system, and","pos":[0,93]}]},{"pos":[263,381],"content":"The file name of the underlying physical file, which is located in the directory associated with the DIRECTORY object.","nodes":[{"content":"The file name of the underlying physical file, which is located in the directory associated with the DIRECTORY object.","pos":[0,118]}]},{"pos":[388,528],"content":"The <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> property returns the name of the DIRECTORY object from the Oracle database.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A&gt;</ph> property returns the name of the DIRECTORY object from the Oracle database.","pos":[0,140],"source":"The <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> property returns the name of the DIRECTORY object from the Oracle database."}]},{"pos":[535,655],"content":"For more information about creating and using an Oracle <ph id=\"ph1\">`BFILE`</ph>, see the appropriate topic in your Oracle documentation.","source":"For more information about creating and using an Oracle `BFILE`, see the appropriate topic in your Oracle documentation."}],"pos":[25328,25994],"yaml":true,"extradata":"MT"},{"content":"The name of the DIRECTORY object.","nodes":[{"pos":[0,33],"content":"The name of the DIRECTORY object.","nodes":[{"content":"The name of the DIRECTORY object.","pos":[0,33]}]}],"pos":[26111,26145],"yaml":true},{"content":"Attempted to call `DirectoryName` on a closed or disposed `OracleBFile` object.","nodes":[{"pos":[0,79],"content":"Attempted to call <ph id=\"ph1\">`DirectoryName`</ph> on a closed or disposed <ph id=\"ph2\">`OracleBFile`</ph> object.","source":"Attempted to call `DirectoryName` on a closed or disposed `OracleBFile` object."}],"pos":[26329,26409],"yaml":true},{"content":"Gets a value indicating whether a physical file containing `BFILE` data exists in the operating system.","nodes":[{"pos":[0,103],"content":"Gets a value indicating whether a physical file containing <ph id=\"ph1\">`BFILE`</ph> data exists in the operating system.","source":"Gets a value indicating whether a physical file containing `BFILE` data exists in the operating system."}],"pos":[28472,28576],"yaml":true},{"content":"`true` if a physical file containing `BFILE` data exists; otherwise `false`.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> if a physical file containing <ph id=\"ph2\">`BFILE`</ph> data exists; otherwise <ph id=\"ph3\">`false`</ph>.","source":"`true` if a physical file containing `BFILE` data exists; otherwise `false`."}],"pos":[28689,28768],"yaml":true},{"content":"The <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object is closed or disposed.","nodes":[{"pos":[0,91],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;&lt;/xref&gt;</ph> object is closed or disposed.","source":"The <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object is closed or disposed."}],"pos":[28949,29041],"yaml":true},{"content":"The connection with which a `BFILE` is associated is closed.","nodes":[{"pos":[0,60],"content":"The connection with which a <ph id=\"ph1\">`BFILE`</ph> is associated is closed.","source":"The connection with which a `BFILE` is associated is closed."}],"pos":[29151,29212],"yaml":true},{"content":"Gets the name of the `BFILE` without the path.","nodes":[{"pos":[0,46],"content":"Gets the name of the <ph id=\"ph1\">`BFILE`</ph> without the path.","source":"Gets the name of the `BFILE` without the path."}],"pos":[30142,30189],"yaml":true},{"content":"For <xref:System.Data.OracleClient.OracleBFile.Null>, an empty string is returned.","nodes":[{"pos":[0,82],"content":"For <xref:System.Data.OracleClient.OracleBFile.Null>, an empty string is returned.","nodes":[{"content":"For <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile.Null&gt;</ph>, an empty string is returned.","pos":[0,82],"source":"For <xref:System.Data.OracleClient.OracleBFile.Null>, an empty string is returned."}]}],"pos":[30200,30283],"yaml":true,"extradata":"MT"},{"content":"The name of the BFILE.","nodes":[{"pos":[0,22],"content":"The name of the BFILE.","nodes":[{"content":"The name of the BFILE.","pos":[0,22]}]}],"pos":[30395,30418],"yaml":true},{"content":"The <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object is closed or disposed.","nodes":[{"pos":[0,91],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;&lt;/xref&gt;</ph> object is closed or disposed.","source":"The <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object is closed or disposed."}],"pos":[30597,30689],"yaml":true},{"content":"Not currently supported.","nodes":[{"pos":[0,24],"content":"Not currently supported.","nodes":[{"content":"Not currently supported.","pos":[0,24]}]}],"pos":[31605,31630],"yaml":true},{"content":"Gets a value that indicates whether the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> is a <xref href=\"System.Data.OracleClient.OracleBFile.Null\"></xref> stream.","nodes":[{"pos":[0,173],"content":"Gets a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;&lt;/xref&gt;</ph> is a <ph id=\"ph2\">&lt;xref href=\"System.Data.OracleClient.OracleBFile.Null\"&gt;&lt;/xref&gt;</ph> stream.","source":"Gets a value that indicates whether the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> is a <xref href=\"System.Data.OracleClient.OracleBFile.Null\"></xref> stream."}],"pos":[32694,32868],"yaml":true},{"content":"`true` if the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> is a <xref href=\"System.Data.OracleClient.OracleBFile.Null\"></xref> stream; otherwise `false`.","nodes":[{"pos":[0,166],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;&lt;/xref&gt;</ph> is a <ph id=\"ph3\">&lt;xref href=\"System.Data.OracleClient.OracleBFile.Null\"&gt;&lt;/xref&gt;</ph> stream; otherwise <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> is a <xref href=\"System.Data.OracleClient.OracleBFile.Null\"></xref> stream; otherwise `false`."}],"pos":[32977,33146],"yaml":true},{"content":"Gets a value that returns the length in bytes of the physical file with which the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object is associated.","nodes":[{"pos":[0,161],"content":"Gets a value that returns the length in bytes of the physical file with which the <ph id=\"ph1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;&lt;/xref&gt;</ph> object is associated.","source":"Gets a value that returns the length in bytes of the physical file with which the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object is associated."}],"pos":[34138,34300],"yaml":true},{"content":"A long value representing the length of the physical file in bytes.","nodes":[{"pos":[0,67],"content":"A long value representing the length of the physical file in bytes.","nodes":[{"content":"A long value representing the length of the physical file in bytes.","pos":[0,67]}]}],"pos":[34416,34484],"yaml":true},{"content":"Methods were called after the stream was closed or disposed.","nodes":[{"pos":[0,60],"content":"Methods were called after the stream was closed or disposed.","nodes":[{"content":"Methods were called after the stream was closed or disposed.","pos":[0,60]}]}],"pos":[34661,34722],"yaml":true},{"content":"Represents a null <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object that is not bound to a physical file.","nodes":[{"pos":[0,120],"content":"Represents a null <ph id=\"ph1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;&lt;/xref&gt;</ph> object that is not bound to a physical file.","source":"Represents a null <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object that is not bound to a physical file."}],"pos":[35629,35750],"yaml":true},{"content":"<xref:System.Data.OracleClient.OracleBFile.Null> can be useful when you want to perform a comparison operation on an <xref:System.Data.OracleClient.OracleBFile> to determine nullability.  \n  \n Any attempt to perform a read operation on a <xref:System.Data.OracleClient.OracleBFile.Null> object succeeds, but does not return any data. Any attempt to perform a write operation on a <xref:System.Data.OracleClient.OracleBFile.Null> object generates an exception. Selecting a `BFILE` column that contains a null value returns <xref:System.Data.OracleClient.OracleBFile.Null>.","nodes":[{"pos":[0,186],"content":"<xref:System.Data.OracleClient.OracleBFile.Null> can be useful when you want to perform a comparison operation on an <xref:System.Data.OracleClient.OracleBFile> to determine nullability.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile.Null&gt;</ph> can be useful when you want to perform a comparison operation on an <ph id=\"ph2\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> to determine nullability.","pos":[0,186],"source":"<xref:System.Data.OracleClient.OracleBFile.Null> can be useful when you want to perform a comparison operation on an <xref:System.Data.OracleClient.OracleBFile> to determine nullability."}]},{"pos":[193,571],"content":"Any attempt to perform a read operation on a <xref:System.Data.OracleClient.OracleBFile.Null> object succeeds, but does not return any data. Any attempt to perform a write operation on a <xref:System.Data.OracleClient.OracleBFile.Null> object generates an exception. Selecting a `BFILE` column that contains a null value returns <xref:System.Data.OracleClient.OracleBFile.Null>.","nodes":[{"content":"Any attempt to perform a read operation on a <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile.Null&gt;</ph> object succeeds, but does not return any data.","pos":[0,140],"source":"Any attempt to perform a read operation on a <xref:System.Data.OracleClient.OracleBFile.Null> object succeeds, but does not return any data."},{"content":"Any attempt to perform a write operation on a <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile.Null&gt;</ph> object generates an exception.","pos":[141,266],"source":" Any attempt to perform a write operation on a <xref:System.Data.OracleClient.OracleBFile.Null> object generates an exception."},{"content":"Selecting a <ph id=\"ph1\">`BFILE`</ph> column that contains a null value returns <ph id=\"ph2\">&lt;xref:System.Data.OracleClient.OracleBFile.Null&gt;</ph>.","pos":[267,378],"source":" Selecting a `BFILE` column that contains a null value returns <xref:System.Data.OracleClient.OracleBFile.Null>."}]}],"pos":[35761,36337],"yaml":true,"extradata":"MT"},{"content":"Gets the current read position in the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> stream.","nodes":[{"pos":[0,103],"content":"Gets the current read position in the <ph id=\"ph1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;&lt;/xref&gt;</ph> stream.","source":"Gets the current read position in the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> stream."}],"pos":[37456,37560],"yaml":true},{"content":"Seeking to any location beyond the length of the stream is not supported.  \n  \n The `Position` property does not keep track of the number of bytes from the stream that have been consumed, skipped, or both.","nodes":[{"pos":[0,73],"content":"Seeking to any location beyond the length of the stream is not supported.","nodes":[{"content":"Seeking to any location beyond the length of the stream is not supported.","pos":[0,73]}]},{"pos":[80,205],"content":"The <ph id=\"ph1\">`Position`</ph> property does not keep track of the number of bytes from the stream that have been consumed, skipped, or both.","source":"The `Position` property does not keep track of the number of bytes from the stream that have been consumed, skipped, or both."}],"pos":[37571,37781],"yaml":true,"extradata":"MT"},{"content":"The current position within the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> stream.","nodes":[{"pos":[0,97],"content":"The current position within the <ph id=\"ph1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;&lt;/xref&gt;</ph> stream.","source":"The current position within the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> stream."}],"pos":[37904,38002],"yaml":true},{"content":"Attempted to set a position with a negative value or greater than the length of the stream.","nodes":[{"pos":[0,91],"content":"Attempted to set a position with a negative value or greater than the length of the stream.","nodes":[{"content":"Attempted to set a position with a negative value or greater than the length of the stream.","pos":[0,91]}]}],"pos":[38189,38281],"yaml":true},{"content":"Methods were called after the stream was closed or disposed.","nodes":[{"pos":[0,60],"content":"Methods were called after the stream was closed or disposed.","nodes":[{"content":"Methods were called after the stream was closed or disposed.","pos":[0,60]}]}],"pos":[38387,38448],"yaml":true},{"content":"Reads a sequence of bytes from the current <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> stream and advances the position within the stream by the number of bytes read.","nodes":[{"pos":[0,180],"content":"Reads a sequence of bytes from the current <ph id=\"ph1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;&lt;/xref&gt;</ph> stream and advances the position within the stream by the number of bytes read.","source":"Reads a sequence of bytes from the current <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> stream and advances the position within the stream by the number of bytes read."}],"pos":[39541,39722],"yaml":true},{"content":"The <xref:System.Data.OracleClient.OracleBFile.Read%2A> method read a maximum of `count` bytes from the current stream and store them in `buffer` beginning at `offset`. The current position within the stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the stream remains unchanged. <xref:System.Data.OracleClient.OracleBFile.Read%2A> returns the number of bytes read. The return value is zero only if the position is currently at the end of the stream. <xref:System.Data.OracleClient.OracleBFile.Read%2A> will block until at least one byte of data can be read, in the event that no data is available. <xref:System.Data.OracleClient.OracleBFile.Read%2A> returns 0 only when the end of the file has been reached. <xref:System.Data.OracleClient.OracleBFile.Read%2A> is free to return fewer bytes than requested even if the end of the stream has not been reached.  \n  \n Any attempt to access a closed <xref:System.Data.OracleClient.OracleBFile> using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> or <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods reopens an <xref:System.Data.OracleClient.OracleBFile> stream automatically.  \n  \n The following C# example assumes this schema in an Oracle table:  \n  \n```  \n(col1 number, col2 BFILE)  \n```  \n  \n The example demonstrates using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> and <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods to access an <xref:System.Data.OracleClient.OracleBFile> object.  \n  \n```  \nbyte[] buffer = new byte[100];  \nOracleDataReader dataReader = command.ExecuteReader();  \nusing (dataReader) {  \n    if (dataReader.Read()) {  \n            OracleBFile BFile = dataReader.GetOracleBFile(1);  \n        using (BFile) {  \n            BFile.Seek(0, SeekOrigin.Begin);  \n            BFile.Read(buffer, 0, 100);  \n        }  \n    }  \n}  \n```","nodes":[{"pos":[0,917],"content":"The <xref:System.Data.OracleClient.OracleBFile.Read%2A> method read a maximum of `count` bytes from the current stream and store them in `buffer` beginning at `offset`. The current position within the stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the stream remains unchanged. <xref:System.Data.OracleClient.OracleBFile.Read%2A> returns the number of bytes read. The return value is zero only if the position is currently at the end of the stream. <xref:System.Data.OracleClient.OracleBFile.Read%2A> will block until at least one byte of data can be read, in the event that no data is available. <xref:System.Data.OracleClient.OracleBFile.Read%2A> returns 0 only when the end of the file has been reached. <xref:System.Data.OracleClient.OracleBFile.Read%2A> is free to return fewer bytes than requested even if the end of the stream has not been reached.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> method read a maximum of <ph id=\"ph2\">`count`</ph> bytes from the current stream and store them in <ph id=\"ph3\">`buffer`</ph> beginning at <ph id=\"ph4\">`offset`</ph>.","pos":[0,168],"source":"The <xref:System.Data.OracleClient.OracleBFile.Read%2A> method read a maximum of `count` bytes from the current stream and store them in `buffer` beginning at `offset`."},{"content":"The current position within the stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the stream remains unchanged.","pos":[169,339]},{"content":"<ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> returns the number of bytes read.","pos":[340,425],"source":" <xref:System.Data.OracleClient.OracleBFile.Read%2A> returns the number of bytes read."},{"content":"The return value is zero only if the position is currently at the end of the stream.","pos":[426,510]},{"content":"<ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> will block until at least one byte of data can be read, in the event that no data is available.","pos":[511,658],"source":" <xref:System.Data.OracleClient.OracleBFile.Read%2A> will block until at least one byte of data can be read, in the event that no data is available."},{"content":"<ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> returns 0 only when the end of the file has been reached.","pos":[659,768],"source":" <xref:System.Data.OracleClient.OracleBFile.Read%2A> returns 0 only when the end of the file has been reached."},{"content":"<ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> is free to return fewer bytes than requested even if the end of the stream has not been reached.","pos":[769,917],"source":" <xref:System.Data.OracleClient.OracleBFile.Read%2A> is free to return fewer bytes than requested even if the end of the stream has not been reached."}]},{"pos":[924,1200],"content":"Any attempt to access a closed <xref:System.Data.OracleClient.OracleBFile> using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> or <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods reopens an <xref:System.Data.OracleClient.OracleBFile> stream automatically.","nodes":[{"content":"Any attempt to access a closed <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> using the <ph id=\"ph2\">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> methods reopens an <ph id=\"ph4\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> stream automatically.","pos":[0,276],"source":"Any attempt to access a closed <xref:System.Data.OracleClient.OracleBFile> using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> or <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods reopens an <xref:System.Data.OracleClient.OracleBFile> stream automatically."}]},{"pos":[1207,1271],"content":"The following C# example assumes this schema in an Oracle table:","nodes":[{"content":"The following C# example assumes this schema in an Oracle table:","pos":[0,64]}]},{"pos":[1321,1536],"content":"The example demonstrates using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> and <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods to access an <xref:System.Data.OracleClient.OracleBFile> object.","nodes":[{"content":"The example demonstrates using the <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> methods to access an <ph id=\"ph3\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object.","pos":[0,215],"source":"The example demonstrates using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> and <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods to access an <xref:System.Data.OracleClient.OracleBFile> object."}]}],"pos":[39733,41658],"yaml":true,"extradata":"MT"},{"content":"An array of bytes. When this method returns, the buffer contains the specified byte array with the values between <code>offset</code> and (<code>offset</code> + <code>count</code>) replaced by the bytes read from the current source.","nodes":[{"pos":[0,232],"content":"An array of bytes. When this method returns, the buffer contains the specified byte array with the values between <code>offset</code> and (<code>offset</code> + <code>count</code>) replaced by the bytes read from the current source.","nodes":[{"content":"An array of bytes.","pos":[0,18]},{"content":"When this method returns, the buffer contains the specified byte array with the values between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> and (<bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">offset</ph><ept id=\"p2\">&lt;/code&gt;</ept><ph id=\"ph3\"> + </ph><bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph4\">count</ph><ept id=\"p3\">&lt;/code&gt;</ept>) replaced by the bytes read from the current source.","pos":[19,232],"source":" When this method returns, the buffer contains the specified byte array with the values between <code>offset</code> and (<code>offset</code> + <code>count</code>) replaced by the bytes read from the current source."}]}],"pos":[41824,42057],"yaml":true},{"content":"The zero-based byte offset in <code>buffer</code> at which to begin storing the data read from the current stream.","nodes":[{"pos":[0,114],"content":"The zero-based byte offset in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which to begin storing the data read from the current stream.","source":"The zero-based byte offset in <code>buffer</code> at which to begin storing the data read from the current stream."}],"pos":[42118,42233],"yaml":true},{"content":"The maximum number of bytes to be read from the current stream.","nodes":[{"pos":[0,63],"content":"The maximum number of bytes to be read from the current stream.","nodes":[{"content":"The maximum number of bytes to be read from the current stream.","pos":[0,63]}]}],"pos":[42293,42357],"yaml":true},{"content":"The total number of bytes read into the buffer. This may be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the file has been reached.","nodes":[{"pos":[0,196],"content":"The total number of bytes read into the buffer. This may be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the file has been reached.","nodes":[{"content":"The total number of bytes read into the buffer. This may be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the file has been reached.","pos":[0,196],"nodes":[{"content":"The total number of bytes read into the buffer.","pos":[0,47]},{"content":"This may be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the file has been reached.","pos":[48,196]}]}]}],"pos":[42413,42610],"yaml":true},{"content":"The sum of <code>offset</code> and <code>count</code> is larger than the buffer length.","nodes":[{"pos":[0,87],"content":"The sum of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p2\">&lt;/code&gt;</ept> is larger than the buffer length.","source":"The sum of <code>offset</code> and <code>count</code> is larger than the buffer length."}],"pos":[42773,42861],"yaml":true},{"content":"<code>buffer</code> is a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic).","source":"<code>buffer</code> is a null reference (`Nothing` in Visual Basic)."}],"pos":[42963,43032],"yaml":true},{"content":"<code>offset</code> or <code>count</code> is negative.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is negative.","source":"<code>offset</code> or <code>count</code> is negative."}],"pos":[43146,43201],"yaml":true},{"content":"The connection with which a `BFILE` is associated is closed.","nodes":[{"pos":[0,60],"content":"The connection with which a <ph id=\"ph1\">`BFILE`</ph> is associated is closed.","source":"The connection with which a `BFILE` is associated is closed."}],"pos":[43311,43372],"yaml":true},{"content":"An I/O error occurred.","nodes":[{"pos":[0,22],"content":"An I/O error occurred.","nodes":[{"content":"An I/O error occurred.","pos":[0,22]}]}],"pos":[43460,43483],"yaml":true},{"content":"Methods were called after the stream was closed or disposed.","nodes":[{"pos":[0,60],"content":"Methods were called after the stream was closed or disposed.","nodes":[{"content":"Methods were called after the stream was closed or disposed.","pos":[0,60]}]}],"pos":[43589,43650],"yaml":true},{"content":"Sets the position on the current <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> stream.","nodes":[{"pos":[0,98],"content":"Sets the position on the current <ph id=\"ph1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;&lt;/xref&gt;</ph> stream.","source":"Sets the position on the current <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> stream."}],"pos":[44716,44815],"yaml":true},{"content":"If `offset` is negative, the new position is required to precede the position specified by `origin` by the number of bytes specified by `offset`. If `offset` is zero, the new position is required to be the position specified by `origin`. If `offset` is positive, the new position is required to follow the position specified by `origin` by the number of bytes specified by `offset`.  \n  \n Seeking to any location beyond the length of the stream is not supported.  \n  \n Any attempt to access a closed <xref:System.Data.OracleClient.OracleBFile> using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> or <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods reopens an <xref:System.Data.OracleClient.OracleBFile> stream automatically.  \n  \n The following C# example assumes this schema in an Oracle table:  \n  \n```  \n(col1 number, col2 BFILE)  \n```  \n  \n The example demonstrates using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> and <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods to access an <xref:System.Data.OracleClient.OracleBFile> object.  \n  \n```  \nbyte[] buffer = new byte[100];  \nOracleDataReader dataReader = command.ExecuteReader();  \nusing (dataReader) {  \n    if (dataReader.Read()) {  \n            OracleBFile BFile = dataReader.GetOracleBFile(1);  \n        using (BFile) {  \n            BFile.Seek(0, SeekOrigin.Begin);  \n            BFile.Read(buffer, 0, 100);  \n        }  \n    }  \n}  \n```","nodes":[{"pos":[0,382],"content":"If `offset` is negative, the new position is required to precede the position specified by `origin` by the number of bytes specified by `offset`. If `offset` is zero, the new position is required to be the position specified by `origin`. If `offset` is positive, the new position is required to follow the position specified by `origin` by the number of bytes specified by `offset`.","nodes":[{"content":"If <ph id=\"ph1\">`offset`</ph> is negative, the new position is required to precede the position specified by <ph id=\"ph2\">`origin`</ph> by the number of bytes specified by <ph id=\"ph3\">`offset`</ph>.","pos":[0,145],"source":"If `offset` is negative, the new position is required to precede the position specified by `origin` by the number of bytes specified by `offset`."},{"content":"If <ph id=\"ph1\">`offset`</ph> is zero, the new position is required to be the position specified by <ph id=\"ph2\">`origin`</ph>.","pos":[146,237],"source":" If `offset` is zero, the new position is required to be the position specified by `origin`."},{"content":"If <ph id=\"ph1\">`offset`</ph> is positive, the new position is required to follow the position specified by <ph id=\"ph2\">`origin`</ph> by the number of bytes specified by <ph id=\"ph3\">`offset`</ph>.","pos":[238,382],"source":" If `offset` is positive, the new position is required to follow the position specified by `origin` by the number of bytes specified by `offset`."}]},{"pos":[389,462],"content":"Seeking to any location beyond the length of the stream is not supported.","nodes":[{"content":"Seeking to any location beyond the length of the stream is not supported.","pos":[0,73]}]},{"pos":[469,745],"content":"Any attempt to access a closed <xref:System.Data.OracleClient.OracleBFile> using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> or <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods reopens an <xref:System.Data.OracleClient.OracleBFile> stream automatically.","nodes":[{"content":"Any attempt to access a closed <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> using the <ph id=\"ph2\">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> methods reopens an <ph id=\"ph4\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> stream automatically.","pos":[0,276],"source":"Any attempt to access a closed <xref:System.Data.OracleClient.OracleBFile> using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> or <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods reopens an <xref:System.Data.OracleClient.OracleBFile> stream automatically."}]},{"pos":[752,816],"content":"The following C# example assumes this schema in an Oracle table:","nodes":[{"content":"The following C# example assumes this schema in an Oracle table:","pos":[0,64]}]},{"pos":[866,1081],"content":"The example demonstrates using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> and <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods to access an <xref:System.Data.OracleClient.OracleBFile> object.","nodes":[{"content":"The example demonstrates using the <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> methods to access an <ph id=\"ph3\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object.","pos":[0,215],"source":"The example demonstrates using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> and <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods to access an <xref:System.Data.OracleClient.OracleBFile> object."}]}],"pos":[44826,46298],"yaml":true,"extradata":"MT"},{"content":"A byte offset relative to origin. If <code>offset</code> is negative, the new position will precede the position specified by <code>origin</code> by the number of bytes specified by <code>offset</code>. If <code>offset</code> is zero, the new position will be the position specified by <code>origin</code>. If <code>offset</code> is positive, the new position will follow the position specified by <code>origin</code> by the number of bytes specified by <code>offset</code>.","nodes":[{"pos":[0,474],"content":"A byte offset relative to origin. If <code>offset</code> is negative, the new position will precede the position specified by <code>origin</code> by the number of bytes specified by <code>offset</code>. If <code>offset</code> is zero, the new position will be the position specified by <code>origin</code>. If <code>offset</code> is positive, the new position will follow the position specified by <code>origin</code> by the number of bytes specified by <code>offset</code>.","nodes":[{"content":"A byte offset relative to origin.","pos":[0,33]},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> is negative, the new position will precede the position specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">origin</ph><ept id=\"p2\">&lt;/code&gt;</ept> by the number of bytes specified by <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">offset</ph><ept id=\"p3\">&lt;/code&gt;</ept>.","pos":[34,202],"source":" If <code>offset</code> is negative, the new position will precede the position specified by <code>origin</code> by the number of bytes specified by <code>offset</code>."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> is zero, the new position will be the position specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">origin</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","pos":[203,306],"source":" If <code>offset</code> is zero, the new position will be the position specified by <code>origin</code>."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> is positive, the new position will follow the position specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">origin</ph><ept id=\"p2\">&lt;/code&gt;</ept> by the number of bytes specified by <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">offset</ph><ept id=\"p3\">&lt;/code&gt;</ept>.","pos":[307,474],"source":" If <code>offset</code> is positive, the new position will follow the position specified by <code>origin</code> by the number of bytes specified by <code>offset</code>."}]}],"pos":[46468,46943],"yaml":true},{"content":"A value of type `System.IO.SeekOrigin` indicating the reference point used to obtain the new position.","nodes":[{"pos":[0,102],"content":"A value of type <ph id=\"ph1\">`System.IO.SeekOrigin`</ph> indicating the reference point used to obtain the new position.","source":"A value of type `System.IO.SeekOrigin` indicating the reference point used to obtain the new position."}],"pos":[47012,47115],"yaml":true},{"content":"The new position within the current stream.","nodes":[{"pos":[0,43],"content":"The new position within the current stream.","nodes":[{"content":"The new position within the current stream.","pos":[0,43]}]}],"pos":[47171,47215],"yaml":true},{"content":"Attempted to set a position with a negative value or greater than the length of the stream.","nodes":[{"pos":[0,91],"content":"Attempted to set a position with a negative value or greater than the length of the stream.","nodes":[{"content":"Attempted to set a position with a negative value or greater than the length of the stream.","pos":[0,91]}]}],"pos":[47398,47490],"yaml":true},{"content":"Methods were called after the stream was closed or disposed.","nodes":[{"pos":[0,60],"content":"Methods were called after the stream was closed or disposed.","nodes":[{"content":"Methods were called after the stream was closed or disposed.","pos":[0,60]}]}],"pos":[47596,47657],"yaml":true},{"content":"Binds the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object to a different file in the operating system.","nodes":[{"pos":[0,119],"content":"Binds the <ph id=\"ph1\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;&lt;/xref&gt;</ph> object to a different file in the operating system.","source":"Binds the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object to a different file in the operating system."}],"pos":[48738,48858],"yaml":true},{"content":"The <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A> operation must be within a transaction to succeed. Simply calling <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A> on a `BFILE` associates the <xref:System.Data.OracleClient.OracleBFile> object with a different file, but does not update the Oracle table. To update the Oracle table after calling <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, you must call the `Update` method of the <xref:System.Data.OracleClient.OracleDataAdapter> and then commit the transaction.  \n  \n Once you retrieve the <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> or <xref:System.Data.OracleClient.OracleBFile.FileName%2A> property, they are cached in the <xref:System.Data.OracleClient.OracleBFile> object and are unaffected by any cloned <xref:System.Data.OracleClient.OracleBFile> objects' calls to <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, or by any changes to the `BFILE` in the database. In other words, they might not represent the actual values of the `BFILE` object in the server.  \n  \n Furthermore, retrieving either property (<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> or <xref:System.Data.OracleClient.OracleBFile.FileName%2A>) causes both property values to be retrieved from the server and cached in the <xref:System.Data.OracleClient.OracleBFile> object.  \n  \n The following C# example assumes this schema in an Oracle table:  \n  \n```  \n(col1 number, col2 BFILE)  \n```  \n  \n The example demonstrates using the <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, <xref:System.Data.OracleClient.OracleBFile.Read%2A> and <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods to access an <xref:System.Data.OracleClient.OracleBFile> object.  \n  \n```  \nbyte[] buffer = new byte[100];  \nOracleDataReader dataReader = command.ExecuteReader();  \nusing (dataReader) {  \n    if (dataReader.Read()) {  \n        OracleBFile BFile = dataReader.GetOracleBFile(1);  \n        using (BFile) {  \n            BFile.Seek(0, SeekOrigin.Begin);  \n            BFile.Read(buffer, 0, 100);  \n            command.Transaction = connection.BeginTransaction();  \n            BFile.SetFileName(\"TESTDIR\", \"File1.jpg\");  \n            BFile.Read(buffer, 0, 100);  \n        }  \n    }  \n}  \n```","nodes":[{"pos":[0,552],"content":"The <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A> operation must be within a transaction to succeed. Simply calling <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A> on a `BFILE` associates the <xref:System.Data.OracleClient.OracleBFile> object with a different file, but does not update the Oracle table. To update the Oracle table after calling <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, you must call the `Update` method of the <xref:System.Data.OracleClient.OracleDataAdapter> and then commit the transaction.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile.SetFileName%2A&gt;</ph> operation must be within a transaction to succeed.","pos":[0,113],"source":"The <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A> operation must be within a transaction to succeed."},{"content":"Simply calling <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile.SetFileName%2A&gt;</ph> on a <ph id=\"ph2\">`BFILE`</ph> associates the <ph id=\"ph3\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object with a different file, but does not update the Oracle table.","pos":[114,327],"source":" Simply calling <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A> on a `BFILE` associates the <xref:System.Data.OracleClient.OracleBFile> object with a different file, but does not update the Oracle table."},{"content":"To update the Oracle table after calling <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile.SetFileName%2A&gt;</ph>, you must call the <ph id=\"ph2\">`Update`</ph> method of the <ph id=\"ph3\">&lt;xref:System.Data.OracleClient.OracleDataAdapter&gt;</ph> and then commit the transaction.","pos":[328,552],"source":" To update the Oracle table after calling <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, you must call the `Update` method of the <xref:System.Data.OracleClient.OracleDataAdapter> and then commit the transaction."}]},{"pos":[559,1085],"content":"Once you retrieve the <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> or <xref:System.Data.OracleClient.OracleBFile.FileName%2A> property, they are cached in the <xref:System.Data.OracleClient.OracleBFile> object and are unaffected by any cloned <xref:System.Data.OracleClient.OracleBFile> objects' calls to <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, or by any changes to the `BFILE` in the database. In other words, they might not represent the actual values of the `BFILE` object in the server.","nodes":[{"content":"Once you retrieve the <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.OracleClient.OracleBFile.FileName%2A&gt;</ph> property, they are cached in the <ph id=\"ph3\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object and are unaffected by any cloned <ph id=\"ph4\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> objects' calls to <ph id=\"ph5\">&lt;xref:System.Data.OracleClient.OracleBFile.SetFileName%2A&gt;</ph>, or by any changes to the <ph id=\"ph6\">`BFILE`</ph> in the database.","pos":[0,430],"source":"Once you retrieve the <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> or <xref:System.Data.OracleClient.OracleBFile.FileName%2A> property, they are cached in the <xref:System.Data.OracleClient.OracleBFile> object and are unaffected by any cloned <xref:System.Data.OracleClient.OracleBFile> objects' calls to <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, or by any changes to the `BFILE` in the database."},{"content":"In other words, they might not represent the actual values of the <ph id=\"ph1\">`BFILE`</ph> object in the server.","pos":[431,526],"source":" In other words, they might not represent the actual values of the `BFILE` object in the server."}]},{"pos":[1092,1383],"content":"Furthermore, retrieving either property (<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> or <xref:System.Data.OracleClient.OracleBFile.FileName%2A>) causes both property values to be retrieved from the server and cached in the <xref:System.Data.OracleClient.OracleBFile> object.","nodes":[{"content":"Furthermore, retrieving either property (<ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.OracleClient.OracleBFile.FileName%2A&gt;</ph>) causes both property values to be retrieved from the server and cached in the <ph id=\"ph3\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object.","pos":[0,291],"source":"Furthermore, retrieving either property (<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> or <xref:System.Data.OracleClient.OracleBFile.FileName%2A>) causes both property values to be retrieved from the server and cached in the <xref:System.Data.OracleClient.OracleBFile> object."}]},{"pos":[1390,1454],"content":"The following C# example assumes this schema in an Oracle table:","nodes":[{"content":"The following C# example assumes this schema in an Oracle table:","pos":[0,64]}]},{"pos":[1504,1779],"content":"The example demonstrates using the <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, <xref:System.Data.OracleClient.OracleBFile.Read%2A> and <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods to access an <xref:System.Data.OracleClient.OracleBFile> object.","nodes":[{"content":"The example demonstrates using the <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile.SetFileName%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Data.OracleClient.OracleBFile.Read%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Data.OracleClient.OracleBFile.Seek%2A&gt;</ph> methods to access an <ph id=\"ph4\">&lt;xref:System.Data.OracleClient.OracleBFile&gt;</ph> object.","pos":[0,275],"source":"The example demonstrates using the <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, <xref:System.Data.OracleClient.OracleBFile.Read%2A> and <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods to access an <xref:System.Data.OracleClient.OracleBFile> object."}]}],"pos":[48869,51208],"yaml":true,"extradata":"MT"},{"content":"The alias of the directory object that contains a physical file.","nodes":[{"pos":[0,64],"content":"The alias of the directory object that contains a physical file.","nodes":[{"content":"The alias of the directory object that contains a physical file.","pos":[0,64]}]}],"pos":[51369,51434],"yaml":true},{"content":"The name of the file in the operating system.","nodes":[{"pos":[0,45],"content":"The name of the file in the operating system.","nodes":[{"content":"The name of the file in the operating system.","pos":[0,45]}]}],"pos":[51494,51540],"yaml":true},{"content":"The operation must be within a transaction.","nodes":[{"pos":[0,43],"content":"The operation must be within a transaction.","nodes":[{"content":"The operation must be within a transaction.","pos":[0,43]}]}],"pos":[51726,51770],"yaml":true},{"content":"Not currently supported.","nodes":[{"pos":[0,24],"content":"Not currently supported.","nodes":[{"content":"Not currently supported.","pos":[0,24]}]}],"pos":[52767,52792],"yaml":true},{"content":"Not currently supported.","nodes":[{"pos":[0,24],"content":"Not currently supported.","nodes":[{"content":"Not currently supported.","pos":[0,24]}]}],"pos":[52936,52961],"yaml":true},{"content":"The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.","nodes":[{"pos":[0,182],"content":"The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.","nodes":[{"content":"The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.","pos":[0,182]}]}],"pos":[53137,53320],"yaml":true},{"content":"Gets an <xref href=\"System.Array\"></xref> of type <xref href=\"System.Byte\"></xref> that contains the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> data.","nodes":[{"pos":[0,164],"content":"Gets an <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> of type <ph id=\"ph2\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains the <ph id=\"ph3\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;&lt;/xref&gt;</ph> data.","source":"Gets an <xref href=\"System.Array\"></xref> of type <xref href=\"System.Byte\"></xref> that contains the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> data."}],"pos":[54232,54397],"yaml":true},{"content":"The <xref:System.Data.OracleClient.OracleBFile.Value%2A> property reads the entire `BFILE` at one time.  \n  \n> [!NOTE]\n>  A benefit of using `BFILE`s is the ability to retrieve large amounts of data in chunks at the client. However, when you use <xref:System.Data.OracleClient.OracleBFile.Value%2A>, you obtain all the data for the BFILE column as one contiguous chunk, which can significantly increase application overhead.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile.Value%2A&gt;</ph> property reads the entire <ph id=\"ph2\">`BFILE`</ph> at one time.","source":"The <xref:System.Data.OracleClient.OracleBFile.Value%2A> property reads the entire `BFILE` at one time."},{"pos":[111,424],"content":"[!NOTE]\n A benefit of using `BFILE`s is the ability to retrieve large amounts of data in chunks at the client. However, when you use <xref:System.Data.OracleClient.OracleBFile.Value%2A>, you obtain all the data for the BFILE column as one contiguous chunk, which can significantly increase application overhead.","leadings":["","> "],"nodes":[{"content":" A benefit of using `BFILE`s is the ability to retrieve large amounts of data in chunks at the client. However, when you use <xref:System.Data.OracleClient.OracleBFile.Value%2A>, you obtain all the data for the BFILE column as one contiguous chunk, which can significantly increase application overhead.","pos":[8,311],"nodes":[{"content":"A benefit of using <ph id=\"ph1\">`BFILE`</ph>s is the ability to retrieve large amounts of data in chunks at the client.","pos":[1,102],"source":" A benefit of using `BFILE`s is the ability to retrieve large amounts of data in chunks at the client."},{"content":"However, when you use <ph id=\"ph1\">&lt;xref:System.Data.OracleClient.OracleBFile.Value%2A&gt;</ph>, you obtain all the data for the BFILE column as one contiguous chunk, which can significantly increase application overhead.","pos":[103,303],"source":" However, when you use <xref:System.Data.OracleClient.OracleBFile.Value%2A>, you obtain all the data for the BFILE column as one contiguous chunk, which can significantly increase application overhead."}]}]}],"pos":[54408,54838],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Array\"></xref> of type <xref href=\"System.Byte\"></xref> that contains the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> data.","nodes":[{"pos":[0,159],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> of type <ph id=\"ph2\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains the <ph id=\"ph3\">&lt;xref href=\"System.Data.OracleClient.OracleBFile\"&gt;&lt;/xref&gt;</ph> data.","source":"An <xref href=\"System.Array\"></xref> of type <xref href=\"System.Byte\"></xref> that contains the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> data."}],"pos":[54947,55107],"yaml":true},{"content":"Not currently supported.","nodes":[{"pos":[0,24],"content":"Not currently supported.","nodes":[{"content":"Not currently supported.","pos":[0,24]}]}],"pos":[56279,56304],"yaml":true},{"content":"Not currently supported.","nodes":[{"pos":[0,24],"content":"Not currently supported.","nodes":[{"content":"Not currently supported.","pos":[0,24]}]}],"pos":[56472,56497],"yaml":true},{"content":"Not currently supported.","nodes":[{"pos":[0,24],"content":"Not currently supported.","nodes":[{"content":"Not currently supported.","pos":[0,24]}]}],"pos":[56558,56583],"yaml":true},{"content":"Not currently supported.","nodes":[{"pos":[0,24],"content":"Not currently supported.","nodes":[{"content":"Not currently supported.","pos":[0,24]}]}],"pos":[56643,56668],"yaml":true},{"content":"The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.","nodes":[{"pos":[0,182],"content":"The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.","nodes":[{"content":"The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.","pos":[0,182]}]}],"pos":[56840,57023],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.OracleClient.OracleBFile\n  commentId: T:System.Data.OracleClient.OracleBFile\n  id: OracleBFile\n  children:\n  - System.Data.OracleClient.OracleBFile.CanRead\n  - System.Data.OracleClient.OracleBFile.CanSeek\n  - System.Data.OracleClient.OracleBFile.CanWrite\n  - System.Data.OracleClient.OracleBFile.Clone\n  - System.Data.OracleClient.OracleBFile.Connection\n  - System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)\n  - System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)\n  - System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)\n  - System.Data.OracleClient.OracleBFile.DirectoryName\n  - System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)\n  - System.Data.OracleClient.OracleBFile.FileExists\n  - System.Data.OracleClient.OracleBFile.FileName\n  - System.Data.OracleClient.OracleBFile.Flush\n  - System.Data.OracleClient.OracleBFile.IsNull\n  - System.Data.OracleClient.OracleBFile.Length\n  - System.Data.OracleClient.OracleBFile.Null\n  - System.Data.OracleClient.OracleBFile.Position\n  - System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)\n  - System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)\n  - System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)\n  - System.Data.OracleClient.OracleBFile.SetLength(System.Int64)\n  - System.Data.OracleClient.OracleBFile.Value\n  - System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)\n  langs:\n  - csharp\n  name: OracleBFile\n  nameWithType: OracleBFile\n  fullName: System.Data.OracleClient.OracleBFile\n  type: Class\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Represents a managed <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object designed to work with the Oracle `BFILE` data type. This class cannot be inherited.\n  remarks: \"The Oracle `BFILE` data type is an Oracle `LOB` data type that contains a reference to binary data with a maximum size of 4 gigabytes. An Oracle `BFILE` differs from other Oracle `LOB` data types in that its data is stored in a physical file in the operating system instead of on the server. Note that the `BFILE` data type provides read-only access to data. Therefore, write-oriented methods inherited from the <xref:System.IO.Stream> class are not supported.  \\n  \\n Other characteristics of a `BFILE` data type that distinguish it from a `LOB` data type are that it:  \\n  \\n-   Contains unstructured data.  \\n  \\n-   Supports server-side chunking.  \\n  \\n-   Uses reference copy semantics. For example, if you perform a copy operation on a `BFILE`, only the `BFILE` locator (which is a reference to the file) is copied. The data in the file is not copied.  \\n  \\n The `BFILE` data type should be used for referencing `LOB`s that are large in size, and therefore, not practical to store in the database. There is client, server, and communication overhead for using a `BFILE` data type compared to the `LOB` data type. It is more efficient to access a `BFILE` if you only need to obtain a small amount of data. It is more efficient to access database-resident `LOB`s if you need to obtain the entire object.  \\n  \\n Each non-NULL <xref:System.Data.OracleClient.OracleBFile> object is associated with two entities that define the location of the underlying physical file:  \\n  \\n-   An Oracle DIRECTORY object, which is a database alias for a directory in the file system, and  \\n  \\n-   The file name of the underlying physical file, which is located in the directory associated with the DIRECTORY object.  \\n  \\n After a `BFILE` is created, you can retrieve its locator in the form of an <xref:System.Data.OracleClient.OracleBFile> object using the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> or <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> methods.  \\n  \\n To obtain an <xref:System.Data.OracleClient.OracleBFile> object, call the <xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A> method.  \\n  \\n The physical file that an <xref:System.Data.OracleClient.OracleBFile> object is associated with does not need to exist until you attempt to access it. An application can bind an <xref:System.Data.OracleClient.OracleBFile> to a nonexistent file, create the physical file in the expected location, and then call <xref:System.Data.OracleClient.OracleBFile.Read%2A>.  \\n  \\n Any attempt to access a closed <xref:System.Data.OracleClient.OracleBFile> using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> or <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods reopens an <xref:System.Data.OracleClient.OracleBFile> stream automatically.  \\n  \\n The following C# example demonstrates how you can create a `BFILE` in an Oracle table, and then retrieve it in the form of an <xref:System.Data.OracleClient.OracleBFile> object. The example demonstrates the use of the <xref:System.Data.OracleClient.OracleDataReader> object and the <xref:System.Data.OracleClient.OracleBFile><xref:System.Data.OracleClient.OracleBFile.Seek%2A> and <xref:System.Data.OracleClient.OracleBFile.Read%2A> methods.  \\n  \\n [!code-csharp[DataWorks OracleClient.BFile#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OracleClient.BFile/CS/source.cs#1)]  \\n  \\n For more information about creating and using an Oracle `BFILE`, see the appropriate topic in your Oracle documentation.  \\n  \\n> [!NOTE]\\n>  The `BeginWrite`, `EndWrite`, and `WriteByte` methods, which are inherited from the `System.IO.Stream` class, are not supported because the `BFILE` data type is read-only.\"\n  syntax:\n    content: 'public sealed class OracleBFile : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable'\n  inheritance:\n  - System.Object\n  - System.IO.Stream\n  implements:\n  - System.Data.SqlTypes.INullable\n  - System.ICloneable\n  inheritedMembers:\n  - System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Stream.CanTimeout\n  - System.IO.Stream.Close\n  - System.IO.Stream.CopyTo(System.IO.Stream)\n  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.CreateWaitHandle\n  - System.IO.Stream.Dispose\n  - System.IO.Stream.EndRead(System.IAsyncResult)\n  - System.IO.Stream.EndWrite(System.IAsyncResult)\n  - System.IO.Stream.FlushAsync\n  - System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  - System.IO.Stream.ObjectInvariant\n  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.ReadByte\n  - System.IO.Stream.ReadTimeout\n  - System.IO.Stream.Synchronized(System.IO.Stream)\n  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.WriteByte(System.Byte)\n  - System.IO.Stream.WriteTimeout\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OracleClient.OracleBFile.CanRead\n  commentId: P:System.Data.OracleClient.OracleBFile.CanRead\n  id: CanRead\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: CanRead\n  nameWithType: OracleBFile.CanRead\n  fullName: OracleBFile.CanRead\n  type: Property\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Gets a value indicating whether the `BFILE` stream can be read.\n  syntax:\n    content: public override bool CanRead { get; }\n    return:\n      type: System.Boolean\n      description: '`false` if a `BFILE` is closed or disposed; otherwise `true`. Always `true` for <xref href=\"System.Data.OracleClient.OracleBFile.Null\"></xref>.'\n  overload: System.Data.OracleClient.OracleBFile.CanRead*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OracleClient.OracleBFile.CanSeek\n  commentId: P:System.Data.OracleClient.OracleBFile.CanSeek\n  id: CanSeek\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: CanSeek\n  nameWithType: OracleBFile.CanSeek\n  fullName: OracleBFile.CanSeek\n  type: Property\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Gets a value indicating whether forward-seek and backward-seek operations can be performed.\n  syntax:\n    content: public override bool CanSeek { get; }\n    return:\n      type: System.Boolean\n      description: '`false` if a `BFILE` is closed or disposed; otherwise `true`. Always `true` for <xref href=\"System.Data.OracleClient.OracleBFile.Null\"></xref>.'\n  overload: System.Data.OracleClient.OracleBFile.CanSeek*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OracleClient.OracleBFile.CanWrite\n  commentId: P:System.Data.OracleClient.OracleBFile.CanWrite\n  id: CanWrite\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: CanWrite\n  nameWithType: OracleBFile.CanWrite\n  fullName: OracleBFile.CanWrite\n  type: Property\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Gets a value indicating whether the object supports writing.\n  syntax:\n    content: public override bool CanWrite { get; }\n    return:\n      type: System.Boolean\n      description: Always returns `false` because the Oracle `BFILE` data type is read-only.\n  overload: System.Data.OracleClient.OracleBFile.CanWrite*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OracleClient.OracleBFile.Clone\n  commentId: M:System.Data.OracleClient.OracleBFile.Clone\n  id: Clone\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: OracleBFile.Clone()\n  fullName: OracleBFile.Clone()\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Creates a copy of this <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object associated with the same physical file as the original.\n  remarks: The properties of the new <xref:System.Data.OracleClient.OracleBFile> object initially have the same values as those of the original object. However, after the <xref:System.Data.OracleClient.OracleBFile.Clone%2A> is complete, each <xref:System.Data.OracleClient.OracleBFile> object is independent from the other. For example, changing the value of the <xref:System.Data.OracleClient.OracleBFile.Position%2A> property on the original <xref:System.Data.OracleClient.OracleBFile> does not change the value of <xref:System.Data.OracleClient.OracleBFile.Position%2A> on the copy.\n  syntax:\n    content: public object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: A new <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object associated with the same physical file as the original `OracleBFile` object.\n  overload: System.Data.OracleClient.OracleBFile.Clone*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OracleClient.OracleBFile.Connection\n  commentId: P:System.Data.OracleClient.OracleBFile.Connection\n  id: Connection\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: Connection\n  nameWithType: OracleBFile.Connection\n  fullName: OracleBFile.Connection\n  type: Property\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Gets the <xref href=\"System.Data.OracleClient.OracleConnection\"></xref> used by this instance of the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref>.\n  syntax:\n    content: public System.Data.OracleClient.OracleConnection Connection { get; }\n    return:\n      type: System.Data.OracleClient.OracleConnection\n      description: The connection to a data source. The default is a null value.\n  overload: System.Data.OracleClient.OracleBFile.Connection*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)\n  commentId: M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)\n  id: CopyTo(System.Data.OracleClient.OracleLob)\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: CopyTo(OracleLob)\n  nameWithType: OracleBFile.CopyTo(OracleLob)\n  fullName: OracleBFile.CopyTo(OracleLob)\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Copies the entire contents of this <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> to the beginning of a destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref>.\n  remarks: \"The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible. For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type.  \\n  \\n You must have write access to the destination <xref:System.Data.OracleClient.OracleLob> for the <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> operation to execute correctly.\"\n  syntax:\n    content: public long CopyTo (System.Data.OracleClient.OracleLob destination);\n    parameters:\n    - id: destination\n      type: System.Data.OracleClient.OracleLob\n      description: The destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref>\n    return:\n      type: System.Int64\n      description: The number of bytes copied.\n  overload: System.Data.OracleClient.OracleBFile.CopyTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The destination `OracleLob` is a null object reference.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The destination is a null `OracleLob`.  \\n  \\n -or-  \\n  \\n The connection with which this `OracleBFile` is associated is closed.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The `OracleBFile` object is closed or disposed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)\n  commentId: M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)\n  id: CopyTo(System.Data.OracleClient.OracleLob,System.Int64)\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: CopyTo(OracleLob, Int64)\n  nameWithType: OracleBFile.CopyTo(OracleLob, Int64)\n  fullName: OracleBFile.CopyTo(OracleLob, Int64)\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Copies the entire contents of this <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> to a destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref> at the specified offset.\n  remarks: \"The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible. For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type.  \\n  \\n You must have write access to the destination <xref:System.Data.OracleClient.OracleLob> for the <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> operation to execute correctly.\"\n  syntax:\n    content: public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);\n    parameters:\n    - id: destination\n      type: System.Data.OracleClient.OracleLob\n      description: The destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref>.\n    - id: destinationOffset\n      type: System.Int64\n      description: The offset to which to copy.\n    return:\n      type: System.Int64\n      description: The number of bytes copied.\n  overload: System.Data.OracleClient.OracleBFile.CopyTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The destination `OracleLob` is a null object reference.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The destination is a null `OracleLob`.  \\n  \\n -or-  \\n  \\n The connection with which this `OracleBFile` is associated is closed.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The `OracleBFile` object is closed or disposed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)\n  commentId: M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)\n  id: CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: CopyTo(Int64, OracleLob, Int64, Int64)\n  nameWithType: OracleBFile.CopyTo(Int64, OracleLob, Int64, Int64)\n  fullName: OracleBFile.CopyTo(Int64, OracleLob, Int64, Int64)\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Copies from this <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> to a destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref> with the specified amount of data, the source offset, and the destination offset.\n  remarks: \"The underlying data types of the source <xref:System.Data.OracleClient.OracleBFile> and the destination <xref:System.Data.OracleClient.OracleLob> must be compatible. For example, you cannot copy binary data to a destination <xref:System.Data.OracleClient.OracleLob> that has a character data type.  \\n  \\n You must have write access to the destination <xref:System.Data.OracleClient.OracleLob> for the <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> operation to execute correctly.\"\n  syntax:\n    content: public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);\n    parameters:\n    - id: sourceOffset\n      type: System.Int64\n      description: The offset from which to copy.\n    - id: destination\n      type: System.Data.OracleClient.OracleLob\n      description: The destination <xref href=\"System.Data.OracleClient.OracleLob\"></xref>.\n    - id: destinationOffset\n      type: System.Int64\n      description: The offset to which to copy.\n    - id: amount\n      type: System.Int64\n      description: The quantity of data, in bytes, to copy.\n    return:\n      type: System.Int64\n      description: The number of bytes copied.\n  overload: System.Data.OracleClient.OracleBFile.CopyTo*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value of the amount parameter is less than zero or greater than 4 gigabytes.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The destination `OracleLob` is a null object reference.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The destination is a null `OracleLob`.  \\n  \\n -or-  \\n  \\n The connection with which this `OracleBFile` is associated is closed.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The `OracleBFile` object is closed or disposed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OracleClient.OracleBFile.DirectoryName\n  commentId: P:System.Data.OracleClient.OracleBFile.DirectoryName\n  id: DirectoryName\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: DirectoryName\n  nameWithType: OracleBFile.DirectoryName\n  fullName: OracleBFile.DirectoryName\n  type: Property\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Gets the name of the DIRECTORY object, with which an <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object is associated.\n  remarks: \"Each non-NULL <xref:System.Data.OracleClient.OracleBFile> object is associated with two entities that define the location of underlying physical file:  \\n  \\n-   An Oracle DIRECTORY object, which is a database alias for a directory in the file system, and  \\n  \\n-   The file name of the underlying physical file, which is located in the directory associated with the DIRECTORY object.  \\n  \\n The <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> property returns the name of the DIRECTORY object from the Oracle database.  \\n  \\n For more information about creating and using an Oracle `BFILE`, see the appropriate topic in your Oracle documentation.\"\n  syntax:\n    content: public string DirectoryName { get; }\n    return:\n      type: System.String\n      description: The name of the DIRECTORY object.\n  overload: System.Data.OracleClient.OracleBFile.DirectoryName*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: Attempted to call `DirectoryName` on a closed or disposed `OracleBFile` object.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)\n  commentId: M:System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: OracleBFile.Dispose(Boolean)\n  fullName: OracleBFile.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: ''\n  overload: System.Data.OracleClient.OracleBFile.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n- uid: System.Data.OracleClient.OracleBFile.FileExists\n  commentId: P:System.Data.OracleClient.OracleBFile.FileExists\n  id: FileExists\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: FileExists\n  nameWithType: OracleBFile.FileExists\n  fullName: OracleBFile.FileExists\n  type: Property\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Gets a value indicating whether a physical file containing `BFILE` data exists in the operating system.\n  syntax:\n    content: public bool FileExists { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if a physical file containing `BFILE` data exists; otherwise `false`.'\n  overload: System.Data.OracleClient.OracleBFile.FileExists*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object is closed or disposed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The connection with which a `BFILE` is associated is closed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OracleClient.OracleBFile.FileName\n  commentId: P:System.Data.OracleClient.OracleBFile.FileName\n  id: FileName\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: FileName\n  nameWithType: OracleBFile.FileName\n  fullName: OracleBFile.FileName\n  type: Property\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Gets the name of the `BFILE` without the path.\n  remarks: For <xref:System.Data.OracleClient.OracleBFile.Null>, an empty string is returned.\n  syntax:\n    content: public string FileName { get; }\n    return:\n      type: System.String\n      description: The name of the BFILE.\n  overload: System.Data.OracleClient.OracleBFile.FileName*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object is closed or disposed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OracleClient.OracleBFile.Flush\n  commentId: M:System.Data.OracleClient.OracleBFile.Flush\n  id: Flush\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: OracleBFile.Flush()\n  fullName: OracleBFile.Flush()\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Not currently supported.\n  syntax:\n    content: public override void Flush ();\n    parameters: []\n  overload: System.Data.OracleClient.OracleBFile.Flush*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OracleClient.OracleBFile.IsNull\n  commentId: P:System.Data.OracleClient.OracleBFile.IsNull\n  id: IsNull\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: IsNull\n  nameWithType: OracleBFile.IsNull\n  fullName: OracleBFile.IsNull\n  type: Property\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Gets a value that indicates whether the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> is a <xref href=\"System.Data.OracleClient.OracleBFile.Null\"></xref> stream.\n  syntax:\n    content: public bool IsNull { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> is a <xref href=\"System.Data.OracleClient.OracleBFile.Null\"></xref> stream; otherwise `false`.'\n  overload: System.Data.OracleClient.OracleBFile.IsNull*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OracleClient.OracleBFile.Length\n  commentId: P:System.Data.OracleClient.OracleBFile.Length\n  id: Length\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: Length\n  nameWithType: OracleBFile.Length\n  fullName: OracleBFile.Length\n  type: Property\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Gets a value that returns the length in bytes of the physical file with which the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object is associated.\n  syntax:\n    content: public override long Length { get; }\n    return:\n      type: System.Int64\n      description: A long value representing the length of the physical file in bytes.\n  overload: System.Data.OracleClient.OracleBFile.Length*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: Methods were called after the stream was closed or disposed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OracleClient.OracleBFile.Null\n  commentId: F:System.Data.OracleClient.OracleBFile.Null\n  id: \"Null\"\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: \"Null\"\n  nameWithType: OracleBFile.Null\n  fullName: OracleBFile.Null\n  type: Field\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Represents a null <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object that is not bound to a physical file.\n  remarks: \"<xref:System.Data.OracleClient.OracleBFile.Null> can be useful when you want to perform a comparison operation on an <xref:System.Data.OracleClient.OracleBFile> to determine nullability.  \\n  \\n Any attempt to perform a read operation on a <xref:System.Data.OracleClient.OracleBFile.Null> object succeeds, but does not return any data. Any attempt to perform a write operation on a <xref:System.Data.OracleClient.OracleBFile.Null> object generates an exception. Selecting a `BFILE` column that contains a null value returns <xref:System.Data.OracleClient.OracleBFile.Null>.\"\n  syntax:\n    content: public static readonly System.Data.OracleClient.OracleBFile Null;\n    return:\n      type: System.Data.OracleClient.OracleBFile\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OracleClient.OracleBFile.Position\n  commentId: P:System.Data.OracleClient.OracleBFile.Position\n  id: Position\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: Position\n  nameWithType: OracleBFile.Position\n  fullName: OracleBFile.Position\n  type: Property\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Gets the current read position in the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> stream.\n  remarks: \"Seeking to any location beyond the length of the stream is not supported.  \\n  \\n The `Position` property does not keep track of the number of bytes from the stream that have been consumed, skipped, or both.\"\n  syntax:\n    content: public override long Position { get; set; }\n    return:\n      type: System.Int64\n      description: The current position within the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> stream.\n  overload: System.Data.OracleClient.OracleBFile.Position*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: Attempted to set a position with a negative value or greater than the length of the stream.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: Methods were called after the stream was closed or disposed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)\n  id: Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: Read(Byte[], Int32, Int32)\n  nameWithType: OracleBFile.Read(Byte[], Int32, Int32)\n  fullName: OracleBFile.Read(Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Reads a sequence of bytes from the current <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> stream and advances the position within the stream by the number of bytes read.\n  remarks: \"The <xref:System.Data.OracleClient.OracleBFile.Read%2A> method read a maximum of `count` bytes from the current stream and store them in `buffer` beginning at `offset`. The current position within the stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the stream remains unchanged. <xref:System.Data.OracleClient.OracleBFile.Read%2A> returns the number of bytes read. The return value is zero only if the position is currently at the end of the stream. <xref:System.Data.OracleClient.OracleBFile.Read%2A> will block until at least one byte of data can be read, in the event that no data is available. <xref:System.Data.OracleClient.OracleBFile.Read%2A> returns 0 only when the end of the file has been reached. <xref:System.Data.OracleClient.OracleBFile.Read%2A> is free to return fewer bytes than requested even if the end of the stream has not been reached.  \\n  \\n Any attempt to access a closed <xref:System.Data.OracleClient.OracleBFile> using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> or <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods reopens an <xref:System.Data.OracleClient.OracleBFile> stream automatically.  \\n  \\n The following C# example assumes this schema in an Oracle table:  \\n  \\n```  \\n(col1 number, col2 BFILE)  \\n```  \\n  \\n The example demonstrates using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> and <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods to access an <xref:System.Data.OracleClient.OracleBFile> object.  \\n  \\n```  \\nbyte[] buffer = new byte[100];  \\nOracleDataReader dataReader = command.ExecuteReader();  \\nusing (dataReader) {  \\n    if (dataReader.Read()) {  \\n            OracleBFile BFile = dataReader.GetOracleBFile(1);  \\n        using (BFile) {  \\n            BFile.Seek(0, SeekOrigin.Begin);  \\n            BFile.Read(buffer, 0, 100);  \\n        }  \\n    }  \\n}  \\n```\"\n  syntax:\n    content: public override int Read (byte[] buffer, int offset, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: An array of bytes. When this method returns, the buffer contains the specified byte array with the values between <code>offset</code> and (<code>offset</code> + <code>count</code>) replaced by the bytes read from the current source.\n    - id: offset\n      type: System.Int32\n      description: The zero-based byte offset in <code>buffer</code> at which to begin storing the data read from the current stream.\n    - id: count\n      type: System.Int32\n      description: The maximum number of bytes to be read from the current stream.\n    return:\n      type: System.Int32\n      description: The total number of bytes read into the buffer. This may be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the file has been reached.\n  overload: System.Data.OracleClient.OracleBFile.Read*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The sum of <code>offset</code> and <code>count</code> is larger than the buffer length.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is a null reference (`Nothing` in Visual Basic).\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>offset</code> or <code>count</code> is negative.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The connection with which a `BFILE` is associated is closed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurred.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: Methods were called after the stream was closed or disposed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)\n  commentId: M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)\n  id: Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: Seek(Int64, SeekOrigin)\n  nameWithType: OracleBFile.Seek(Int64, SeekOrigin)\n  fullName: OracleBFile.Seek(Int64, SeekOrigin)\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Sets the position on the current <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> stream.\n  remarks: \"If `offset` is negative, the new position is required to precede the position specified by `origin` by the number of bytes specified by `offset`. If `offset` is zero, the new position is required to be the position specified by `origin`. If `offset` is positive, the new position is required to follow the position specified by `origin` by the number of bytes specified by `offset`.  \\n  \\n Seeking to any location beyond the length of the stream is not supported.  \\n  \\n Any attempt to access a closed <xref:System.Data.OracleClient.OracleBFile> using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> or <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods reopens an <xref:System.Data.OracleClient.OracleBFile> stream automatically.  \\n  \\n The following C# example assumes this schema in an Oracle table:  \\n  \\n```  \\n(col1 number, col2 BFILE)  \\n```  \\n  \\n The example demonstrates using the <xref:System.Data.OracleClient.OracleBFile.Read%2A> and <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods to access an <xref:System.Data.OracleClient.OracleBFile> object.  \\n  \\n```  \\nbyte[] buffer = new byte[100];  \\nOracleDataReader dataReader = command.ExecuteReader();  \\nusing (dataReader) {  \\n    if (dataReader.Read()) {  \\n            OracleBFile BFile = dataReader.GetOracleBFile(1);  \\n        using (BFile) {  \\n            BFile.Seek(0, SeekOrigin.Begin);  \\n            BFile.Read(buffer, 0, 100);  \\n        }  \\n    }  \\n}  \\n```\"\n  syntax:\n    content: public override long Seek (long offset, System.IO.SeekOrigin origin);\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: A byte offset relative to origin. If <code>offset</code> is negative, the new position will precede the position specified by <code>origin</code> by the number of bytes specified by <code>offset</code>. If <code>offset</code> is zero, the new position will be the position specified by <code>origin</code>. If <code>offset</code> is positive, the new position will follow the position specified by <code>origin</code> by the number of bytes specified by <code>offset</code>.\n    - id: origin\n      type: System.IO.SeekOrigin\n      description: A value of type `System.IO.SeekOrigin` indicating the reference point used to obtain the new position.\n    return:\n      type: System.Int64\n      description: The new position within the current stream.\n  overload: System.Data.OracleClient.OracleBFile.Seek*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: Attempted to set a position with a negative value or greater than the length of the stream.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: Methods were called after the stream was closed or disposed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)\n  commentId: M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)\n  id: SetFileName(System.String,System.String)\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: SetFileName(String, String)\n  nameWithType: OracleBFile.SetFileName(String, String)\n  fullName: OracleBFile.SetFileName(String, String)\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Binds the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> object to a different file in the operating system.\n  remarks: \"The <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A> operation must be within a transaction to succeed. Simply calling <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A> on a `BFILE` associates the <xref:System.Data.OracleClient.OracleBFile> object with a different file, but does not update the Oracle table. To update the Oracle table after calling <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, you must call the `Update` method of the <xref:System.Data.OracleClient.OracleDataAdapter> and then commit the transaction.  \\n  \\n Once you retrieve the <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> or <xref:System.Data.OracleClient.OracleBFile.FileName%2A> property, they are cached in the <xref:System.Data.OracleClient.OracleBFile> object and are unaffected by any cloned <xref:System.Data.OracleClient.OracleBFile> objects' calls to <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, or by any changes to the `BFILE` in the database. In other words, they might not represent the actual values of the `BFILE` object in the server.  \\n  \\n Furthermore, retrieving either property (<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> or <xref:System.Data.OracleClient.OracleBFile.FileName%2A>) causes both property values to be retrieved from the server and cached in the <xref:System.Data.OracleClient.OracleBFile> object.  \\n  \\n The following C# example assumes this schema in an Oracle table:  \\n  \\n```  \\n(col1 number, col2 BFILE)  \\n```  \\n  \\n The example demonstrates using the <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, <xref:System.Data.OracleClient.OracleBFile.Read%2A> and <xref:System.Data.OracleClient.OracleBFile.Seek%2A> methods to access an <xref:System.Data.OracleClient.OracleBFile> object.  \\n  \\n```  \\nbyte[] buffer = new byte[100];  \\nOracleDataReader dataReader = command.ExecuteReader();  \\nusing (dataReader) {  \\n    if (dataReader.Read()) {  \\n        OracleBFile BFile = dataReader.GetOracleBFile(1);  \\n        using (BFile) {  \\n            BFile.Seek(0, SeekOrigin.Begin);  \\n            BFile.Read(buffer, 0, 100);  \\n            command.Transaction = connection.BeginTransaction();  \\n            BFile.SetFileName(\\\"TESTDIR\\\", \\\"File1.jpg\\\");  \\n            BFile.Read(buffer, 0, 100);  \\n        }  \\n    }  \\n}  \\n```\"\n  syntax:\n    content: public void SetFileName (string directory, string file);\n    parameters:\n    - id: directory\n      type: System.String\n      description: The alias of the directory object that contains a physical file.\n    - id: file\n      type: System.String\n      description: The name of the file in the operating system.\n  overload: System.Data.OracleClient.OracleBFile.SetFileName*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The operation must be within a transaction.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OracleClient.OracleBFile.SetLength(System.Int64)\n  commentId: M:System.Data.OracleClient.OracleBFile.SetLength(System.Int64)\n  id: SetLength(System.Int64)\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: SetLength(Int64)\n  nameWithType: OracleBFile.SetLength(Int64)\n  fullName: OracleBFile.SetLength(Int64)\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Not currently supported.\n  syntax:\n    content: public override void SetLength (long value);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: Not currently supported.\n  overload: System.Data.OracleClient.OracleBFile.SetLength*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OracleClient.OracleBFile.Value\n  commentId: P:System.Data.OracleClient.OracleBFile.Value\n  id: Value\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: Value\n  nameWithType: OracleBFile.Value\n  fullName: OracleBFile.Value\n  type: Property\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Gets an <xref href=\"System.Array\"></xref> of type <xref href=\"System.Byte\"></xref> that contains the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> data.\n  remarks: \"The <xref:System.Data.OracleClient.OracleBFile.Value%2A> property reads the entire `BFILE` at one time.  \\n  \\n> [!NOTE]\\n>  A benefit of using `BFILE`s is the ability to retrieve large amounts of data in chunks at the client. However, when you use <xref:System.Data.OracleClient.OracleBFile.Value%2A>, you obtain all the data for the BFILE column as one contiguous chunk, which can significantly increase application overhead.\"\n  syntax:\n    content: public object Value { get; }\n    return:\n      type: System.Object\n      description: An <xref href=\"System.Array\"></xref> of type <xref href=\"System.Byte\"></xref> that contains the <xref href=\"System.Data.OracleClient.OracleBFile\"></xref> data.\n  overload: System.Data.OracleClient.OracleBFile.Value*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)\n  id: Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.Data.OracleClient.OracleBFile\n  langs:\n  - csharp\n  name: Write(Byte[], Int32, Int32)\n  nameWithType: OracleBFile.Write(Byte[], Int32, Int32)\n  fullName: OracleBFile.Write(Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Data.OracleClient\n  namespace: System.Data.OracleClient\n  summary: Not currently supported.\n  syntax:\n    content: public override void Write (byte[] buffer, int offset, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: Not currently supported.\n    - id: offset\n      type: System.Int32\n      description: Not currently supported.\n    - id: count\n      type: System.Int32\n      description: Not currently supported.\n  overload: System.Data.OracleClient.OracleBFile.Write*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  nameWithType: IOException\n  fullName: System.IO.IOException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Data.OracleClient.OracleBFile.CanRead\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: CanRead\n  nameWithType: OracleBFile.CanRead\n  fullName: OracleBFile.CanRead\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.OracleClient.OracleBFile.CanSeek\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: CanSeek\n  nameWithType: OracleBFile.CanSeek\n  fullName: OracleBFile.CanSeek\n- uid: System.Data.OracleClient.OracleBFile.CanWrite\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: CanWrite\n  nameWithType: OracleBFile.CanWrite\n  fullName: OracleBFile.CanWrite\n- uid: System.Data.OracleClient.OracleBFile.Clone\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Clone()\n  nameWithType: OracleBFile.Clone()\n  fullName: OracleBFile.Clone()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.OracleClient.OracleBFile.Connection\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Connection\n  nameWithType: OracleBFile.Connection\n  fullName: OracleBFile.Connection\n- uid: System.Data.OracleClient.OracleConnection\n  parent: System.Data.OracleClient\n  isExternal: false\n  name: OracleConnection\n  nameWithType: OracleConnection\n  fullName: System.Data.OracleClient.OracleConnection\n- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: CopyTo(OracleLob)\n  nameWithType: OracleBFile.CopyTo(OracleLob)\n  fullName: OracleBFile.CopyTo(OracleLob)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Data.OracleClient.OracleLob\n  parent: System.Data.OracleClient\n  isExternal: false\n  name: OracleLob\n  nameWithType: OracleLob\n  fullName: System.Data.OracleClient.OracleLob\n- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: CopyTo(OracleLob, Int64)\n  nameWithType: OracleBFile.CopyTo(OracleLob, Int64)\n  fullName: OracleBFile.CopyTo(OracleLob, Int64)\n- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: CopyTo(Int64, OracleLob, Int64, Int64)\n  nameWithType: OracleBFile.CopyTo(Int64, OracleLob, Int64, Int64)\n  fullName: OracleBFile.CopyTo(Int64, OracleLob, Int64, Int64)\n- uid: System.Data.OracleClient.OracleBFile.DirectoryName\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: DirectoryName\n  nameWithType: OracleBFile.DirectoryName\n  fullName: OracleBFile.DirectoryName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: OracleBFile.Dispose(Boolean)\n  fullName: OracleBFile.Dispose(Boolean)\n- uid: System.Data.OracleClient.OracleBFile.FileExists\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: FileExists\n  nameWithType: OracleBFile.FileExists\n  fullName: OracleBFile.FileExists\n- uid: System.Data.OracleClient.OracleBFile.FileName\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: FileName\n  nameWithType: OracleBFile.FileName\n  fullName: OracleBFile.FileName\n- uid: System.Data.OracleClient.OracleBFile.Flush\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Flush()\n  nameWithType: OracleBFile.Flush()\n  fullName: OracleBFile.Flush()\n- uid: System.Data.OracleClient.OracleBFile.IsNull\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: IsNull\n  nameWithType: OracleBFile.IsNull\n  fullName: OracleBFile.IsNull\n- uid: System.Data.OracleClient.OracleBFile.Length\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Length\n  nameWithType: OracleBFile.Length\n  fullName: OracleBFile.Length\n- uid: System.Data.OracleClient.OracleBFile.Null\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: \"Null\"\n  nameWithType: OracleBFile.Null\n  fullName: OracleBFile.Null\n- uid: System.Data.OracleClient.OracleBFile\n  parent: System.Data.OracleClient\n  isExternal: false\n  name: OracleBFile\n  nameWithType: OracleBFile\n  fullName: System.Data.OracleClient.OracleBFile\n- uid: System.Data.OracleClient.OracleBFile.Position\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Position\n  nameWithType: OracleBFile.Position\n  fullName: OracleBFile.Position\n- uid: System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Read(Byte[], Int32, Int32)\n  nameWithType: OracleBFile.Read(Byte[], Int32, Int32)\n  fullName: OracleBFile.Read(Byte[], Int32, Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Seek(Int64, SeekOrigin)\n  nameWithType: OracleBFile.Seek(Int64, SeekOrigin)\n  fullName: OracleBFile.Seek(Int64, SeekOrigin)\n- uid: System.IO.SeekOrigin\n  parent: System.IO\n  isExternal: false\n  name: SeekOrigin\n  nameWithType: SeekOrigin\n  fullName: System.IO.SeekOrigin\n- uid: System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: SetFileName(String, String)\n  nameWithType: OracleBFile.SetFileName(String, String)\n  fullName: OracleBFile.SetFileName(String, String)\n- uid: System.Data.OracleClient.OracleBFile.SetLength(System.Int64)\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: SetLength(Int64)\n  nameWithType: OracleBFile.SetLength(Int64)\n  fullName: OracleBFile.SetLength(Int64)\n- uid: System.Data.OracleClient.OracleBFile.Value\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Value\n  nameWithType: OracleBFile.Value\n  fullName: OracleBFile.Value\n- uid: System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Write(Byte[], Int32, Int32)\n  nameWithType: OracleBFile.Write(Byte[], Int32, Int32)\n  fullName: OracleBFile.Write(Byte[], Int32, Int32)\n- uid: System.Data.OracleClient.OracleBFile.CanRead*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: CanRead\n  nameWithType: OracleBFile.CanRead\n  fullName: OracleBFile.CanRead\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n- uid: System.Data.OracleClient.OracleBFile.CanSeek*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: CanSeek\n  nameWithType: OracleBFile.CanSeek\n  fullName: OracleBFile.CanSeek\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n- uid: System.Data.OracleClient.OracleBFile.CanWrite*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: CanWrite\n  nameWithType: OracleBFile.CanWrite\n  fullName: OracleBFile.CanWrite\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n- uid: System.Data.OracleClient.OracleBFile.Clone*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Clone\n  nameWithType: OracleBFile.Clone\n  fullName: OracleBFile.Clone\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n- uid: System.Data.OracleClient.OracleBFile.Connection*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Connection\n  nameWithType: OracleBFile.Connection\n  fullName: OracleBFile.Connection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n- uid: System.Data.OracleClient.OracleBFile.CopyTo*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: CopyTo\n  nameWithType: OracleBFile.CopyTo\n  fullName: OracleBFile.CopyTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n- uid: System.Data.OracleClient.OracleBFile.DirectoryName*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: DirectoryName\n  nameWithType: OracleBFile.DirectoryName\n  fullName: OracleBFile.DirectoryName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n- uid: System.Data.OracleClient.OracleBFile.Dispose*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Dispose\n  nameWithType: OracleBFile.Dispose\n  fullName: OracleBFile.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n- uid: System.Data.OracleClient.OracleBFile.FileExists*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: FileExists\n  nameWithType: OracleBFile.FileExists\n  fullName: OracleBFile.FileExists\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n- uid: System.Data.OracleClient.OracleBFile.FileName*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: FileName\n  nameWithType: OracleBFile.FileName\n  fullName: OracleBFile.FileName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n- uid: System.Data.OracleClient.OracleBFile.Flush*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Flush\n  nameWithType: OracleBFile.Flush\n  fullName: OracleBFile.Flush\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n- uid: System.Data.OracleClient.OracleBFile.IsNull*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: IsNull\n  nameWithType: OracleBFile.IsNull\n  fullName: OracleBFile.IsNull\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n- uid: System.Data.OracleClient.OracleBFile.Length*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Length\n  nameWithType: OracleBFile.Length\n  fullName: OracleBFile.Length\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n- uid: System.Data.OracleClient.OracleBFile.Position*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Position\n  nameWithType: OracleBFile.Position\n  fullName: OracleBFile.Position\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n- uid: System.Data.OracleClient.OracleBFile.Read*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Read\n  nameWithType: OracleBFile.Read\n  fullName: OracleBFile.Read\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n- uid: System.Data.OracleClient.OracleBFile.Seek*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Seek\n  nameWithType: OracleBFile.Seek\n  fullName: OracleBFile.Seek\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n- uid: System.Data.OracleClient.OracleBFile.SetFileName*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: SetFileName\n  nameWithType: OracleBFile.SetFileName\n  fullName: OracleBFile.SetFileName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n- uid: System.Data.OracleClient.OracleBFile.SetLength*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: SetLength\n  nameWithType: OracleBFile.SetLength\n  fullName: OracleBFile.SetLength\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n- uid: System.Data.OracleClient.OracleBFile.Value*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Value\n  nameWithType: OracleBFile.Value\n  fullName: OracleBFile.Value\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n- uid: System.Data.OracleClient.OracleBFile.Write*\n  parent: System.Data.OracleClient.OracleBFile\n  isExternal: false\n  name: Write\n  nameWithType: OracleBFile.Write\n  fullName: OracleBFile.Write\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OracleClient/OracleBFile.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Stream\n  isExternal: false\n  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n- uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Stream\n  isExternal: false\n  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n- uid: System.IO.Stream.CanTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanTimeout\n  nameWithType: Stream.CanTimeout\n  fullName: Stream.CanTimeout\n- uid: System.IO.Stream.Close\n  parent: System.IO.Stream\n  isExternal: false\n  name: Close()\n  nameWithType: Stream.Close()\n  fullName: Stream.Close()\n- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyTo(Stream, Int32)\n  nameWithType: Stream.CopyTo(Stream, Int32)\n  fullName: Stream.CopyTo(Stream, Int32)\n- uid: System.IO.Stream.CopyTo(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyTo(Stream)\n  nameWithType: Stream.CopyTo(Stream)\n  fullName: Stream.CopyTo(Stream)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream)\n  nameWithType: Stream.CopyToAsync(Stream)\n  fullName: Stream.CopyToAsync(Stream)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream, Int32)\n  nameWithType: Stream.CopyToAsync(Stream, Int32)\n  fullName: Stream.CopyToAsync(Stream, Int32)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream, Int32, CancellationToken)\n  nameWithType: Stream.CopyToAsync(Stream, Int32, CancellationToken)\n  fullName: Stream.CopyToAsync(Stream, Int32, CancellationToken)\n- uid: System.IO.Stream.CreateWaitHandle\n  parent: System.IO.Stream\n  isExternal: false\n  name: CreateWaitHandle()\n  nameWithType: Stream.CreateWaitHandle()\n  fullName: Stream.CreateWaitHandle()\n- uid: System.IO.Stream.Dispose\n  parent: System.IO.Stream\n  isExternal: false\n  name: Dispose()\n  nameWithType: Stream.Dispose()\n  fullName: Stream.Dispose()\n- uid: System.IO.Stream.EndRead(System.IAsyncResult)\n  parent: System.IO.Stream\n  isExternal: false\n  name: EndRead(IAsyncResult)\n  nameWithType: Stream.EndRead(IAsyncResult)\n  fullName: Stream.EndRead(IAsyncResult)\n- uid: System.IO.Stream.EndWrite(System.IAsyncResult)\n  parent: System.IO.Stream\n  isExternal: false\n  name: EndWrite(IAsyncResult)\n  nameWithType: Stream.EndWrite(IAsyncResult)\n  fullName: Stream.EndWrite(IAsyncResult)\n- uid: System.IO.Stream.FlushAsync\n  parent: System.IO.Stream\n  isExternal: false\n  name: FlushAsync()\n  nameWithType: Stream.FlushAsync()\n  fullName: Stream.FlushAsync()\n- uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: false\n  name: FlushAsync(CancellationToken)\n  nameWithType: Stream.FlushAsync(CancellationToken)\n  fullName: Stream.FlushAsync(CancellationToken)\n- uid: System.IO.Stream.ObjectInvariant\n  parent: System.IO.Stream\n  isExternal: false\n  name: ObjectInvariant()\n  nameWithType: Stream.ObjectInvariant()\n  fullName: Stream.ObjectInvariant()\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadAsync(Byte[], Int32, Int32)\n  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32)\n  fullName: Stream.ReadAsync(Byte[], Int32, Int32)\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n- uid: System.IO.Stream.ReadByte\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadByte()\n  nameWithType: Stream.ReadByte()\n  fullName: Stream.ReadByte()\n- uid: System.IO.Stream.ReadTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadTimeout\n  nameWithType: Stream.ReadTimeout\n  fullName: Stream.ReadTimeout\n- uid: System.IO.Stream.Synchronized(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: Synchronized(Stream)\n  nameWithType: Stream.Synchronized(Stream)\n  fullName: Stream.Synchronized(Stream)\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteAsync(Byte[], Int32, Int32)\n  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32)\n  fullName: Stream.WriteAsync(Byte[], Int32, Int32)\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n- uid: System.IO.Stream.WriteByte(System.Byte)\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteByte(Byte)\n  nameWithType: Stream.WriteByte(Byte)\n  fullName: Stream.WriteByte(Byte)\n- uid: System.IO.Stream.WriteTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteTimeout\n  nameWithType: Stream.WriteTimeout\n  fullName: Stream.WriteTimeout\n- uid: System.Data.SqlTypes.INullable\n  parent: System.Data.SqlTypes\n  isExternal: false\n  name: INullable\n  nameWithType: INullable\n  fullName: System.Data.SqlTypes.INullable\n- uid: System.ICloneable\n  parent: System\n  isExternal: false\n  name: ICloneable\n  nameWithType: ICloneable\n  fullName: System.ICloneable\n"}