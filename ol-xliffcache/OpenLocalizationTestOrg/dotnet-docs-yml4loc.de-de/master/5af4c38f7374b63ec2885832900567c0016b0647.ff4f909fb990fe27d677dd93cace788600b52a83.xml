{"nodes":[{"content":"Implements the record and playback logic that templates use for deferring content when they interact with XAML readers and writers.","nodes":[{"pos":[0,131],"content":"Implements the record and playback logic that templates use for deferring content when they interact with XAML readers and writers.","nodes":[{"content":"Implements the record and playback logic that templates use for deferring content when they interact with XAML readers and writers.","pos":[0,131]}]}],"pos":[369,501],"yaml":true},{"content":"This class has no public API in .NET Framework 4.5 Beta. It provides a property value for <xref:System.Windows.FrameworkTemplate.Template%2A>. Its constructor is internal. There is an instantiation pathway, but it is complex. Instantiating a template relies on <xref:System.Windows.TemplateContentLoader>, which requires a <xref:System.Xaml.XamlReader> representing a deferred reader instance, and a <xref:System.Xaml.IXamlObjectWriterFactory> service. Both these considerations are typically only relevant to those that are not using the default XAML for WPF processing behavior, which includes deferred content processing of templates as part of its infrastructure, and does not require the typical WPF application author to access the aforementioned APIs.","nodes":[{"pos":[0,758],"content":"This class has no public API in .NET Framework 4.5 Beta. It provides a property value for <xref:System.Windows.FrameworkTemplate.Template%2A>. Its constructor is internal. There is an instantiation pathway, but it is complex. Instantiating a template relies on <xref:System.Windows.TemplateContentLoader>, which requires a <xref:System.Xaml.XamlReader> representing a deferred reader instance, and a <xref:System.Xaml.IXamlObjectWriterFactory> service. Both these considerations are typically only relevant to those that are not using the default XAML for WPF processing behavior, which includes deferred content processing of templates as part of its infrastructure, and does not require the typical WPF application author to access the aforementioned APIs.","nodes":[{"content":"This class has no public API in .NET Framework 4.5 Beta. It provides a property value for <xref:System.Windows.FrameworkTemplate.Template%2A>. Its constructor is internal. There is an instantiation pathway, but it is complex. Instantiating a template relies on <xref:System.Windows.TemplateContentLoader>, which requires a <xref:System.Xaml.XamlReader> representing a deferred reader instance, and a <xref:System.Xaml.IXamlObjectWriterFactory> service. Both these considerations are typically only relevant to those that are not using the default XAML for WPF processing behavior, which includes deferred content processing of templates as part of its infrastructure, and does not require the typical WPF application author to access the aforementioned APIs.","pos":[0,758],"nodes":[{"content":"This class has no public API in .NET Framework 4.5 Beta.","pos":[0,56]},{"content":"It provides a property value for <ph id=\"ph1\">&lt;xref:System.Windows.FrameworkTemplate.Template%2A&gt;</ph>.","pos":[57,142],"source":" It provides a property value for <xref:System.Windows.FrameworkTemplate.Template%2A>."},{"content":"Its constructor is internal.","pos":[143,171]},{"content":"There is an instantiation pathway, but it is complex.","pos":[172,225]},{"content":"Instantiating a template relies on <ph id=\"ph1\">&lt;xref:System.Windows.TemplateContentLoader&gt;</ph>, which requires a <ph id=\"ph2\">&lt;xref:System.Xaml.XamlReader&gt;</ph> representing a deferred reader instance, and a <ph id=\"ph3\">&lt;xref:System.Xaml.IXamlObjectWriterFactory&gt;</ph> service.","pos":[226,452],"source":" Instantiating a template relies on <xref:System.Windows.TemplateContentLoader>, which requires a <xref:System.Xaml.XamlReader> representing a deferred reader instance, and a <xref:System.Xaml.IXamlObjectWriterFactory> service."},{"content":"Both these considerations are typically only relevant to those that are not using the default XAML for WPF processing behavior, which includes deferred content processing of templates as part of its infrastructure, and does not require the typical WPF application author to access the aforementioned APIs.","pos":[453,758]}]}]}],"pos":[512,1271],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.TemplateContent\n  commentId: T:System.Windows.TemplateContent\n  id: TemplateContent\n  children: []\n  langs:\n  - csharp\n  name: TemplateContent\n  nameWithType: TemplateContent\n  fullName: System.Windows.TemplateContent\n  type: Class\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Implements the record and playback logic that templates use for deferring content when they interact with XAML readers and writers.\n  remarks: This class has no public API in .NET Framework 4.5 Beta. It provides a property value for <xref:System.Windows.FrameworkTemplate.Template%2A>. Its constructor is internal. There is an instantiation pathway, but it is complex. Instantiating a template relies on <xref:System.Windows.TemplateContentLoader>, which requires a <xref:System.Xaml.XamlReader> representing a deferred reader instance, and a <xref:System.Xaml.IXamlObjectWriterFactory> service. Both these considerations are typically only relevant to those that are not using the default XAML for WPF processing behavior, which includes deferred content processing of templates as part of its infrastructure, and does not require the typical WPF application author to access the aforementioned APIs.\n  syntax:\n    content: >-\n      [System.Windows.Markup.XamlDeferLoad(typeof(System.Windows.TemplateContentLoader), typeof(System.Windows.FrameworkElement))]\n\n      public class TemplateContent\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Windows.Markup.XamlDeferLoadAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/TemplateContent.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}