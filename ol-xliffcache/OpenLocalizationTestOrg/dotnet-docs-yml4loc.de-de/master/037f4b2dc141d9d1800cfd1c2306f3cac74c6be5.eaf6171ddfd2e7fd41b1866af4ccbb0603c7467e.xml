{"nodes":[{"content":"Represents a single composition operation for transactional composition.","nodes":[{"pos":[0,72],"content":"Represents a single composition operation for transactional composition.","nodes":[{"content":"Represents a single composition operation for transactional composition.","pos":[0,72]}]}],"pos":[1439,1512],"yaml":true},{"content":"> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","nodes":[{"pos":[2,528],"content":"[!IMPORTANT]\n This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","leadings":["","> "],"nodes":[{"content":" This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","pos":[13,524],"nodes":[{"content":"This type implements the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface.","pos":[1,62],"source":" This type implements the <xref:System.IDisposable> interface."},{"content":"When you have finished using the type, you should dispose of it either directly or indirectly.","pos":[63,157]},{"content":"To dispose of the type directly, call its <ph id=\"ph1\">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id=\"ph2\">`try`</ph><ph id=\"ph3\">/</ph><ph id=\"ph4\">`catch`</ph> block.","pos":[158,269],"source":" To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block."},{"content":"To dispose of it indirectly, use a language construct such as <ph id=\"ph1\">`using`</ph> (in C#) or <ph id=\"ph2\">`Using`</ph> (in Visual Basic).","pos":[270,377],"source":" To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic)."},{"content":"For more information, see the \"Using an Object that Implements IDisposable\" section in the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface topic.","pos":[378,511],"source":" For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic."}]}]}],"pos":[1523,2064],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition\"></xref> class.","nodes":[{"pos":[0,121],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition\"></xref> class."}],"pos":[3710,3832],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition\"></xref> class with the specified parent <xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition\"></xref>.","nodes":[{"pos":[0,228],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition\"&gt;&lt;/xref&gt;</ph> class with the specified parent <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition\"></xref> class with the specified parent <xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition\"></xref>."}],"pos":[5445,5674],"yaml":true},{"content":"The parent of this composition operation.","nodes":[{"pos":[0,41],"content":"The parent of this composition operation.","nodes":[{"content":"The parent of this composition operation.","pos":[0,41]}]}],"pos":[5948,5990],"yaml":true},{"content":"Adds an action to be executed when the overall composition operation completes successfully.","nodes":[{"pos":[0,92],"content":"Adds an action to be executed when the overall composition operation completes successfully.","nodes":[{"content":"Adds an action to be executed when the overall composition operation completes successfully.","pos":[0,92]}]}],"pos":[7390,7483],"yaml":true},{"content":"The action to be executed.","nodes":[{"pos":[0,26],"content":"The action to be executed.","nodes":[{"content":"The action to be executed.","pos":[0,26]}]}],"pos":[7647,7674],"yaml":true},{"content":"Adds an action to be executed if the overall composition operation fails.","nodes":[{"pos":[0,73],"content":"Adds an action to be executed if the overall composition operation fails.","nodes":[{"content":"Adds an action to be executed if the overall composition operation fails.","pos":[0,73]}]}],"pos":[9074,9148],"yaml":true},{"content":"The action to be executed.","nodes":[{"pos":[0,26],"content":"The action to be executed.","nodes":[{"content":"The action to be executed.","pos":[0,26]}]}],"pos":[9306,9333],"yaml":true},{"content":"Marks this composition operation as complete.","nodes":[{"pos":[0,45],"content":"Marks this composition operation as complete.","nodes":[{"content":"Marks this composition operation as complete.","pos":[0,45]}]}],"pos":[10626,10672],"yaml":true},{"content":"If this <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> is nested, completion actions will not be executed until the parent composition operation has also completed.","nodes":[{"pos":[0,184],"content":"If this <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> is nested, completion actions will not be executed until the parent composition operation has also completed.","nodes":[{"content":"If this <ph id=\"ph1\">&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;</ph> is nested, completion actions will not be executed until the parent composition operation has also completed.","pos":[0,184],"source":"If this <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> is nested, completion actions will not be executed until the parent composition operation has also completed."}]}],"pos":[10683,10868],"yaml":true,"extradata":"MT"},{"content":"Releases all resources used by the current instance of the <xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition\"></xref> class, and mark this composition operation as failed.","nodes":[{"pos":[0,193],"content":"Releases all resources used by the current instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition\"&gt;&lt;/xref&gt;</ph> class, and mark this composition operation as failed.","source":"Releases all resources used by the current instance of the <xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition\"></xref> class, and mark this composition operation as failed."}],"pos":[12215,12409],"yaml":true},{"content":"Call `Dispose` when you are finished using the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition>. The `Dispose` method leaves the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> was occupying.  \n  \n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> object's `Finalize` method.","nodes":[{"pos":[0,505],"content":"Call `Dispose` when you are finished using the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition>. The `Dispose` method leaves the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> was occupying.","nodes":[{"content":"Call <ph id=\"ph1\">`Dispose`</ph> when you are finished using the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;</ph>.","pos":[0,114],"source":"Call `Dispose` when you are finished using the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition>."},{"content":"The <ph id=\"ph1\">`Dispose`</ph> method leaves the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;</ph> in an unusable state.","pos":[115,235],"source":" The `Dispose` method leaves the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> in an unusable state."},{"content":"After calling <ph id=\"ph1\">`Dispose`</ph>, you must release all references to the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;</ph> so the garbage collector can reclaim the memory that the <ph id=\"ph3\">&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;</ph> was occupying.","pos":[236,505],"source":" After calling `Dispose`, you must release all references to the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> was occupying."}]},{"pos":[512,717],"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.","source":"For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)."},{"pos":[725,1059],"content":"[!NOTE]\n Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> object's `Finalize` method.","leadings":["","> "],"nodes":[{"content":" Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> object's `Finalize` method.","pos":[8,332],"nodes":[{"content":"Always call <ph id=\"ph1\">`Dispose`</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;</ph>.","pos":[1,136],"source":" Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;</ph> object's <ph id=\"ph2\">`Finalize`</ph> method.","pos":[137,324],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> object's `Finalize` method."}]}]}],"pos":[12420,13487],"yaml":true,"extradata":"MT"},{"content":"Releases the unmanaged resources used by the <xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition\"></xref> and optionally releases the managed resources.","nodes":[{"pos":[0,172],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition\"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition\"></xref> and optionally releases the managed resources."}],"pos":[14901,15074],"yaml":true},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[15228,15331],"yaml":true},{"content":"Saves a key-value pair in the transaction to track tentative state.","nodes":[{"pos":[0,67],"content":"Saves a key-value pair in the transaction to track tentative state.","nodes":[{"content":"Saves a key-value pair in the transaction to track tentative state.","pos":[0,67]}]}],"pos":[16745,16813],"yaml":true},{"content":"The key to save.","nodes":[{"pos":[0,16],"content":"The key to save.","nodes":[{"content":"The key to save.","pos":[0,16]}]}],"pos":[16960,16977],"yaml":true},{"content":"The value to save.","nodes":[{"pos":[0,18],"content":"The value to save.","nodes":[{"content":"The value to save.","pos":[0,18]}]}],"pos":[17038,17057],"yaml":true},{"content":"Gets a value saved by the <xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)\"></xref> method.","nodes":[{"pos":[0,152],"content":"Gets a value saved by the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)\"&gt;&lt;/xref&gt;</ph> method.","source":"Gets a value saved by the <xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)\"></xref> method."}],"pos":[18466,18619],"yaml":true},{"content":"The key to retrieve from.","nodes":[{"pos":[0,25],"content":"The key to retrieve from.","nodes":[{"content":"The key to retrieve from.","pos":[0,25]}]}],"pos":[18771,18797],"yaml":true},{"content":"The retrieved value.","nodes":[{"pos":[0,20],"content":"The retrieved value.","nodes":[{"content":"The retrieved value.","pos":[0,20]}]}],"pos":[18846,18867],"yaml":true},{"content":"The type of the value to be retrieved.","nodes":[{"pos":[0,38],"content":"The type of the value to be retrieved.","nodes":[{"content":"The type of the value to be retrieved.","pos":[0,38]}]}],"pos":[18918,18957],"yaml":true},{"content":"`true` if the value was successfully retrieved; otherwise, `false`.","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">`true`</ph> if the value was successfully retrieved; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the value was successfully retrieved; otherwise, `false`."}],"pos":[19015,19085],"yaml":true},{"content":"Gets a value saved by the <xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)\"></xref> method, with the option of not searching parent transactions.","nodes":[{"pos":[0,206],"content":"Gets a value saved by the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)\"&gt;&lt;/xref&gt;</ph> method, with the option of not searching parent transactions.","source":"Gets a value saved by the <xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)\"></xref> method, with the option of not searching parent transactions."}],"pos":[20572,20779],"yaml":true},{"content":"The key to retrieve from.","nodes":[{"pos":[0,25],"content":"The key to retrieve from.","nodes":[{"content":"The key to retrieve from.","pos":[0,25]}]}],"pos":[20964,20990],"yaml":true},{"content":"`true` to exclude parent transactions; otherwise, `false`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">`true`</ph> to exclude parent transactions; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to exclude parent transactions; otherwise, `false`."}],"pos":[21073,21134],"yaml":true},{"content":"The retrieved value.","nodes":[{"pos":[0,20],"content":"The retrieved value.","nodes":[{"content":"The retrieved value.","pos":[0,20]}]}],"pos":[21183,21204],"yaml":true},{"content":"The type of the value to be retrieved.","nodes":[{"pos":[0,38],"content":"The type of the value to be retrieved.","nodes":[{"content":"The type of the value to be retrieved.","pos":[0,38]}]}],"pos":[21255,21294],"yaml":true},{"content":"`true` if the value was successfully retrieved; otherwise, `false`.","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">`true`</ph> if the value was successfully retrieved; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the value was successfully retrieved; otherwise, `false`."}],"pos":[21352,21422],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition\n  commentId: T:System.ComponentModel.Composition.Hosting.AtomicComposition\n  id: AtomicComposition\n  children:\n  - System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor\n  - System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor(System.ComponentModel.Composition.Hosting.AtomicComposition)\n  - System.ComponentModel.Composition.Hosting.AtomicComposition.AddCompleteAction(System.Action)\n  - System.ComponentModel.Composition.Hosting.AtomicComposition.AddRevertAction(System.Action)\n  - System.ComponentModel.Composition.Hosting.AtomicComposition.Complete\n  - System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose\n  - System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose(System.Boolean)\n  - System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)\n  - System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,``0@)\n  - System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,System.Boolean,``0@)\n  langs:\n  - csharp\n  name: AtomicComposition\n  nameWithType: AtomicComposition\n  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition\n  type: Class\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Represents a single composition operation for transactional composition.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.\n  syntax:\n    content: 'public class AtomicComposition : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/AtomicComposition.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor\n  commentId: M:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.Composition.Hosting.AtomicComposition\n  langs:\n  - csharp\n  name: AtomicComposition()\n  nameWithType: AtomicComposition.AtomicComposition()\n  fullName: AtomicComposition.AtomicComposition()\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition\"></xref> class.\n  syntax:\n    content: public AtomicComposition ();\n    parameters: []\n  overload: System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/AtomicComposition.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor(System.ComponentModel.Composition.Hosting.AtomicComposition)\n  commentId: M:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor(System.ComponentModel.Composition.Hosting.AtomicComposition)\n  id: '#ctor(System.ComponentModel.Composition.Hosting.AtomicComposition)'\n  parent: System.ComponentModel.Composition.Hosting.AtomicComposition\n  langs:\n  - csharp\n  name: AtomicComposition(AtomicComposition)\n  nameWithType: AtomicComposition.AtomicComposition(AtomicComposition)\n  fullName: AtomicComposition.AtomicComposition(AtomicComposition)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition\"></xref> class with the specified parent <xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition\"></xref>.\n  syntax:\n    content: public AtomicComposition (System.ComponentModel.Composition.Hosting.AtomicComposition outerAtomicComposition);\n    parameters:\n    - id: outerAtomicComposition\n      type: System.ComponentModel.Composition.Hosting.AtomicComposition\n      description: The parent of this composition operation.\n  overload: System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/AtomicComposition.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.AddCompleteAction(System.Action)\n  commentId: M:System.ComponentModel.Composition.Hosting.AtomicComposition.AddCompleteAction(System.Action)\n  id: AddCompleteAction(System.Action)\n  parent: System.ComponentModel.Composition.Hosting.AtomicComposition\n  langs:\n  - csharp\n  name: AddCompleteAction(Action)\n  nameWithType: AtomicComposition.AddCompleteAction(Action)\n  fullName: AtomicComposition.AddCompleteAction(Action)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Adds an action to be executed when the overall composition operation completes successfully.\n  syntax:\n    content: public void AddCompleteAction (Action completeAction);\n    parameters:\n    - id: completeAction\n      type: System.Action\n      description: The action to be executed.\n  overload: System.ComponentModel.Composition.Hosting.AtomicComposition.AddCompleteAction*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/AtomicComposition.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.AddRevertAction(System.Action)\n  commentId: M:System.ComponentModel.Composition.Hosting.AtomicComposition.AddRevertAction(System.Action)\n  id: AddRevertAction(System.Action)\n  parent: System.ComponentModel.Composition.Hosting.AtomicComposition\n  langs:\n  - csharp\n  name: AddRevertAction(Action)\n  nameWithType: AtomicComposition.AddRevertAction(Action)\n  fullName: AtomicComposition.AddRevertAction(Action)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Adds an action to be executed if the overall composition operation fails.\n  syntax:\n    content: public void AddRevertAction (Action revertAction);\n    parameters:\n    - id: revertAction\n      type: System.Action\n      description: The action to be executed.\n  overload: System.ComponentModel.Composition.Hosting.AtomicComposition.AddRevertAction*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/AtomicComposition.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.Complete\n  commentId: M:System.ComponentModel.Composition.Hosting.AtomicComposition.Complete\n  id: Complete\n  parent: System.ComponentModel.Composition.Hosting.AtomicComposition\n  langs:\n  - csharp\n  name: Complete()\n  nameWithType: AtomicComposition.Complete()\n  fullName: AtomicComposition.Complete()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Marks this composition operation as complete.\n  remarks: If this <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> is nested, completion actions will not be executed until the parent composition operation has also completed.\n  syntax:\n    content: public void Complete ();\n    parameters: []\n  overload: System.ComponentModel.Composition.Hosting.AtomicComposition.Complete*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/AtomicComposition.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose\n  commentId: M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose\n  id: Dispose\n  parent: System.ComponentModel.Composition.Hosting.AtomicComposition\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: AtomicComposition.Dispose()\n  fullName: AtomicComposition.Dispose()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Releases all resources used by the current instance of the <xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition\"></xref> class, and mark this composition operation as failed.\n  remarks: \"Call `Dispose` when you are finished using the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition>. The `Dispose` method leaves the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> was occupying.  \\n  \\n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \\n  \\n> [!NOTE]\\n>  Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.Hosting.AtomicComposition> object's `Finalize` method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/AtomicComposition.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose(System.Boolean)\n  commentId: M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.ComponentModel.Composition.Hosting.AtomicComposition\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: AtomicComposition.Dispose(Boolean)\n  fullName: AtomicComposition.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Releases the unmanaged resources used by the <xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition\"></xref> and optionally releases the managed resources.\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/AtomicComposition.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)\n  commentId: M:System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)\n  id: SetValue(System.Object,System.Object)\n  parent: System.ComponentModel.Composition.Hosting.AtomicComposition\n  langs:\n  - csharp\n  name: SetValue(Object, Object)\n  nameWithType: AtomicComposition.SetValue(Object, Object)\n  fullName: AtomicComposition.SetValue(Object, Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Saves a key-value pair in the transaction to track tentative state.\n  syntax:\n    content: public void SetValue (object key, object value);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key to save.\n    - id: value\n      type: System.Object\n      description: The value to save.\n  overload: System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/AtomicComposition.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,``0@)\n  commentId: M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,``0@)\n  id: TryGetValue``1(System.Object,``0@)\n  parent: System.ComponentModel.Composition.Hosting.AtomicComposition\n  langs:\n  - csharp\n  name: TryGetValue<T>(Object, T)\n  nameWithType: AtomicComposition.TryGetValue<T>(Object, T)\n  fullName: AtomicComposition.TryGetValue<T>(Object, T)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Gets a value saved by the <xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)\"></xref> method.\n  syntax:\n    content: public bool TryGetValue<T> (object key, out T value);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key to retrieve from.\n    - id: value\n      type: T\n      description: The retrieved value.\n    typeParameters:\n    - id: T\n      description: The type of the value to be retrieved.\n    return:\n      type: System.Boolean\n      description: '`true` if the value was successfully retrieved; otherwise, `false`.'\n  overload: System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/AtomicComposition.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,System.Boolean,``0@)\n  commentId: M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,System.Boolean,``0@)\n  id: TryGetValue``1(System.Object,System.Boolean,``0@)\n  parent: System.ComponentModel.Composition.Hosting.AtomicComposition\n  langs:\n  - csharp\n  name: TryGetValue<T>(Object, Boolean, T)\n  nameWithType: AtomicComposition.TryGetValue<T>(Object, Boolean, T)\n  fullName: AtomicComposition.TryGetValue<T>(Object, Boolean, T)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.Hosting\n  summary: Gets a value saved by the <xref href=\"System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)\"></xref> method, with the option of not searching parent transactions.\n  syntax:\n    content: public bool TryGetValue<T> (object key, bool localAtomicCompositionOnly, out T value);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The key to retrieve from.\n    - id: localAtomicCompositionOnly\n      type: System.Boolean\n      description: '`true` to exclude parent transactions; otherwise, `false`.'\n    - id: value\n      type: T\n      description: The retrieved value.\n    typeParameters:\n    - id: T\n      description: The type of the value to be retrieved.\n    return:\n      type: System.Boolean\n      description: '`true` if the value was successfully retrieved; otherwise, `false`.'\n  overload: System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/AtomicComposition.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor\n  parent: System.ComponentModel.Composition.Hosting.AtomicComposition\n  isExternal: false\n  name: AtomicComposition()\n  nameWithType: AtomicComposition.AtomicComposition()\n  fullName: AtomicComposition.AtomicComposition()\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor(System.ComponentModel.Composition.Hosting.AtomicComposition)\n  parent: System.ComponentModel.Composition.Hosting.AtomicComposition\n  isExternal: false\n  name: AtomicComposition(AtomicComposition)\n  nameWithType: AtomicComposition.AtomicComposition(AtomicComposition)\n  fullName: AtomicComposition.AtomicComposition(AtomicComposition)\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition\n  parent: System.ComponentModel.Composition.Hosting\n  isExternal: false\n  name: AtomicComposition\n  nameWithType: AtomicComposition\n  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.AddCompleteAction(System.Action)\n  parent: System.ComponentModel.Composition.Hosting.AtomicComposition\n  isExternal: false\n  name: AddCompleteAction(Action)\n  nameWithType: AtomicComposition.AddCompleteAction(Action)\n  fullName: AtomicComposition.AddCompleteAction(Action)\n- uid: System.Action\n  parent: System\n  isExternal: false\n  name: Action\n  nameWithType: Action\n  fullName: System.Action\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.AddRevertAction(System.Action)\n  parent: System.ComponentModel.Composition.Hosting.AtomicComposition\n  isExternal: false\n  name: AddRevertAction(Action)\n  nameWithType: AtomicComposition.AddRevertAction(Action)\n  fullName: AtomicComposition.AddRevertAction(Action)\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.Complete\n  parent: System.ComponentModel.Composition.Hosting.AtomicComposition\n  isExternal: false\n  name: Complete()\n  nameWithType: AtomicComposition.Complete()\n  fullName: AtomicComposition.Complete()\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose\n  parent: System.ComponentModel.Composition.Hosting.AtomicComposition\n  isExternal: false\n  name: Dispose()\n  nameWithType: AtomicComposition.Dispose()\n  fullName: AtomicComposition.Dispose()\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose(System.Boolean)\n  parent: System.ComponentModel.Composition.Hosting.AtomicComposition\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: AtomicComposition.Dispose(Boolean)\n  fullName: AtomicComposition.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)\n  parent: System.ComponentModel.Composition.Hosting.AtomicComposition\n  isExternal: false\n  name: SetValue(Object, Object)\n  nameWithType: AtomicComposition.SetValue(Object, Object)\n  fullName: AtomicComposition.SetValue(Object, Object)\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,``0@)\n  parent: System.ComponentModel.Composition.Hosting.AtomicComposition\n  isExternal: false\n  name: TryGetValue<T>(Object, T)\n  nameWithType: AtomicComposition.TryGetValue<T>(Object, T)\n  fullName: AtomicComposition.TryGetValue<T>(Object, T)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,System.Boolean,``0@)\n  parent: System.ComponentModel.Composition.Hosting.AtomicComposition\n  isExternal: false\n  name: TryGetValue<T>(Object, Boolean, T)\n  nameWithType: AtomicComposition.TryGetValue<T>(Object, Boolean, T)\n  fullName: AtomicComposition.TryGetValue<T>(Object, Boolean, T)\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor*\n  parent: System.ComponentModel.Composition.Hosting.AtomicComposition\n  isExternal: false\n  name: AtomicComposition\n  nameWithType: AtomicComposition.AtomicComposition\n  fullName: AtomicComposition.AtomicComposition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/AtomicComposition.xml\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.AddCompleteAction*\n  parent: System.ComponentModel.Composition.Hosting.AtomicComposition\n  isExternal: false\n  name: AddCompleteAction\n  nameWithType: AtomicComposition.AddCompleteAction\n  fullName: AtomicComposition.AddCompleteAction\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/AtomicComposition.xml\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.AddRevertAction*\n  parent: System.ComponentModel.Composition.Hosting.AtomicComposition\n  isExternal: false\n  name: AddRevertAction\n  nameWithType: AtomicComposition.AddRevertAction\n  fullName: AtomicComposition.AddRevertAction\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/AtomicComposition.xml\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.Complete*\n  parent: System.ComponentModel.Composition.Hosting.AtomicComposition\n  isExternal: false\n  name: Complete\n  nameWithType: AtomicComposition.Complete\n  fullName: AtomicComposition.Complete\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/AtomicComposition.xml\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose*\n  parent: System.ComponentModel.Composition.Hosting.AtomicComposition\n  isExternal: false\n  name: Dispose\n  nameWithType: AtomicComposition.Dispose\n  fullName: AtomicComposition.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/AtomicComposition.xml\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue*\n  parent: System.ComponentModel.Composition.Hosting.AtomicComposition\n  isExternal: false\n  name: SetValue\n  nameWithType: AtomicComposition.SetValue\n  fullName: AtomicComposition.SetValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/AtomicComposition.xml\n- uid: System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1*\n  parent: System.ComponentModel.Composition.Hosting.AtomicComposition\n  isExternal: false\n  name: TryGetValue<T>\n  nameWithType: AtomicComposition.TryGetValue<T>\n  fullName: AtomicComposition.TryGetValue<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.Hosting/AtomicComposition.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}