{"nodes":[{"content":"Specifies one of two factors that determine the memory alignment of fields when a type is marshaled.","nodes":[{"pos":[0,100],"content":"Specifies one of two factors that determine the memory alignment of fields when a type is marshaled.","nodes":[{"content":"Specifies one of two factors that determine the memory alignment of fields when a type is marshaled.","pos":[0,100]}]}],"pos":[825,926],"yaml":true},{"content":"Packing size affects the alignment of fields in structures and classes whose organization is <xref:System.Runtime.InteropServices.LayoutKind?displayProperty=fullName>. The packing size is one of two factors that determine the offset of a field when the structure or class is marshaled; the other factor is the effective size of the field. To determine the offset of a field:  \n  \n1.  Compute the minimum value for the offset by adding the size of the preceding field to the offset of the preceding field.  \n  \n2.  Compute the natural packing size for the field: If the field is a simple data type, use the size. If the field is an array, use the size of an array element. If the field is itself a structure, compare the packing size of that structure to the size of the largest field in that structure, and use the smaller of the two values.  \n  \n3.  Compute the effective packing size by comparing the packing size to the natural packing size of the field, computed in step 2. Use the smaller of the two numbers.  \n  \n4.  Compute the offset. The offset is the first memory location that is equal to or larger than the minimum, and a multiple of the effective packing size computed in step 3.  \n  \n> [!NOTE]\n>  Once offsets have been computed for all the fields in the class or structure, padding is added so that the overall size is a multiple of the packing size.  \n  \n For example, in a class containing a `byte` and a `long`, using packing size `Size1`, the offset of the `byte` field is zero (0) and the offset of the `long` field is one (1). If the packing size is `Size4`, the `long` field has offset four (4). In a class containing two `short` fields, using any packing size, the offset of the second `short` field is two (2).  \n  \n> [!NOTE]\n>  Changing the packing size can affect performance if it causes fields to be aligned on offsets that are not multiples of their size.","nodes":[{"pos":[0,374],"content":"Packing size affects the alignment of fields in structures and classes whose organization is <xref:System.Runtime.InteropServices.LayoutKind?displayProperty=fullName>. The packing size is one of two factors that determine the offset of a field when the structure or class is marshaled; the other factor is the effective size of the field. To determine the offset of a field:","nodes":[{"content":"Packing size affects the alignment of fields in structures and classes whose organization is <xref:System.Runtime.InteropServices.LayoutKind?displayProperty=fullName>. The packing size is one of two factors that determine the offset of a field when the structure or class is marshaled; the other factor is the effective size of the field. To determine the offset of a field:","pos":[0,374],"nodes":[{"content":"Packing size affects the alignment of fields in structures and classes whose organization is <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.LayoutKind?displayProperty=fullName&gt;</ph>.","pos":[0,167],"source":"Packing size affects the alignment of fields in structures and classes whose organization is <xref:System.Runtime.InteropServices.LayoutKind?displayProperty=fullName>."},{"content":"The packing size is one of two factors that determine the offset of a field when the structure or class is marshaled; the other factor is the effective size of the field.","pos":[168,338]},{"content":"To determine the offset of a field:","pos":[339,374]}]}]},{"pos":[384,504],"content":"Compute the minimum value for the offset by adding the size of the preceding field to the offset of the preceding field.","nodes":[{"content":"Compute the minimum value for the offset by adding the size of the preceding field to the offset of the preceding field.","pos":[0,120]}]},{"pos":[514,841],"content":"Compute the natural packing size for the field: If the field is a simple data type, use the size. If the field is an array, use the size of an array element. If the field is itself a structure, compare the packing size of that structure to the size of the largest field in that structure, and use the smaller of the two values.","nodes":[{"content":"Compute the natural packing size for the field: If the field is a simple data type, use the size. If the field is an array, use the size of an array element. If the field is itself a structure, compare the packing size of that structure to the size of the largest field in that structure, and use the smaller of the two values.","pos":[0,327],"nodes":[{"content":"Compute the natural packing size for the field: If the field is a simple data type, use the size.","pos":[0,97]},{"content":"If the field is an array, use the size of an array element.","pos":[98,157]},{"content":"If the field is itself a structure, compare the packing size of that structure to the size of the largest field in that structure, and use the smaller of the two values.","pos":[158,327]}]}]},{"pos":[851,1013],"content":"Compute the effective packing size by comparing the packing size to the natural packing size of the field, computed in step 2. Use the smaller of the two numbers.","nodes":[{"content":"Compute the effective packing size by comparing the packing size to the natural packing size of the field, computed in step 2. Use the smaller of the two numbers.","pos":[0,162],"nodes":[{"content":"Compute the effective packing size by comparing the packing size to the natural packing size of the field, computed in step 2.","pos":[0,126]},{"content":"Use the smaller of the two numbers.","pos":[127,162]}]}]},{"pos":[1023,1192],"content":"Compute the offset. The offset is the first memory location that is equal to or larger than the minimum, and a multiple of the effective packing size computed in step 3.","nodes":[{"content":"Compute the offset. The offset is the first memory location that is equal to or larger than the minimum, and a multiple of the effective packing size computed in step 3.","pos":[0,169],"nodes":[{"content":"Compute the offset.","pos":[0,19]},{"content":"The offset is the first memory location that is equal to or larger than the minimum, and a multiple of the effective packing size computed in step 3.","pos":[20,169]}]}]},{"pos":[1200,1365],"content":"[!NOTE]\n Once offsets have been computed for all the fields in the class or structure, padding is added so that the overall size is a multiple of the packing size.","leadings":["","> "],"nodes":[{"content":"Once offsets have been computed for all the fields in the class or structure, padding is added so that the overall size is a multiple of the packing size.","pos":[9,163]}]},{"pos":[1372,1734],"content":"For example, in a class containing a `byte` and a `long`, using packing size `Size1`, the offset of the `byte` field is zero (0) and the offset of the `long` field is one (1). If the packing size is `Size4`, the `long` field has offset four (4). In a class containing two `short` fields, using any packing size, the offset of the second `short` field is two (2).","nodes":[{"content":"For example, in a class containing a <ph id=\"ph1\">`byte`</ph> and a <ph id=\"ph2\">`long`</ph>, using packing size <ph id=\"ph3\">`Size1`</ph>, the offset of the <ph id=\"ph4\">`byte`</ph> field is zero (0) and the offset of the <ph id=\"ph5\">`long`</ph> field is one (1).","pos":[0,175],"source":"For example, in a class containing a `byte` and a `long`, using packing size `Size1`, the offset of the `byte` field is zero (0) and the offset of the `long` field is one (1)."},{"content":"If the packing size is <ph id=\"ph1\">`Size4`</ph>, the <ph id=\"ph2\">`long`</ph> field has offset four (4).","pos":[176,245],"source":" If the packing size is `Size4`, the `long` field has offset four (4)."},{"content":"In a class containing two <ph id=\"ph1\">`short`</ph> fields, using any packing size, the offset of the second <ph id=\"ph2\">`short`</ph> field is two (2).","pos":[246,362],"source":" In a class containing two `short` fields, using any packing size, the offset of the second `short` field is two (2)."}]},{"pos":[1742,1884],"content":"[!NOTE]\n Changing the packing size can affect performance if it causes fields to be aligned on offsets that are not multiples of their size.","leadings":["","> "],"nodes":[{"content":"Changing the packing size can affect performance if it causes fields to be aligned on offsets that are not multiples of their size.","pos":[9,140]}]}],"pos":[937,2840],"yaml":true,"extradata":"MT"},{"content":"The packing size is 1 byte.","nodes":[{"pos":[0,27],"content":"The packing size is 1 byte.","nodes":[{"content":"The packing size is 1 byte.","pos":[0,27]}]}],"pos":[4529,4557],"yaml":true},{"content":"The packing size is 128 bytes.","nodes":[{"pos":[0,30],"content":"The packing size is 128 bytes.","nodes":[{"content":"The packing size is 128 bytes.","pos":[0,30]}]}],"pos":[6030,6061],"yaml":true},{"content":"The packing size is 16 bytes.","nodes":[{"pos":[0,29],"content":"The packing size is 16 bytes.","nodes":[{"content":"The packing size is 16 bytes.","pos":[0,29]}]}],"pos":[7530,7560],"yaml":true},{"content":"The packing size is 2 bytes.","nodes":[{"pos":[0,28],"content":"The packing size is 2 bytes.","nodes":[{"content":"The packing size is 2 bytes.","pos":[0,28]}]}],"pos":[9022,9051],"yaml":true},{"content":"The packing size is 32 bytes.","nodes":[{"pos":[0,29],"content":"The packing size is 32 bytes.","nodes":[{"content":"The packing size is 32 bytes.","pos":[0,29]}]}],"pos":[10518,10548],"yaml":true},{"content":"The packing size is 4 bytes.","nodes":[{"pos":[0,28],"content":"The packing size is 4 bytes.","nodes":[{"content":"The packing size is 4 bytes.","pos":[0,28]}]}],"pos":[12010,12039],"yaml":true},{"content":"The packing size is 64 bytes.","nodes":[{"pos":[0,29],"content":"The packing size is 64 bytes.","nodes":[{"content":"The packing size is 64 bytes.","pos":[0,29]}]}],"pos":[13506,13536],"yaml":true},{"content":"The packing size is 8 bytes.","nodes":[{"pos":[0,28],"content":"The packing size is 8 bytes.","nodes":[{"content":"The packing size is 8 bytes.","pos":[0,28]}]}],"pos":[14998,15027],"yaml":true},{"content":"The packing size is not specified.","nodes":[{"pos":[0,34],"content":"The packing size is not specified.","nodes":[{"content":"The packing size is not specified.","pos":[0,34]}]}],"pos":[16524,16559],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.Emit.PackingSize\n  commentId: T:System.Reflection.Emit.PackingSize\n  id: PackingSize\n  children:\n  - System.Reflection.Emit.PackingSize.Size1\n  - System.Reflection.Emit.PackingSize.Size128\n  - System.Reflection.Emit.PackingSize.Size16\n  - System.Reflection.Emit.PackingSize.Size2\n  - System.Reflection.Emit.PackingSize.Size32\n  - System.Reflection.Emit.PackingSize.Size4\n  - System.Reflection.Emit.PackingSize.Size64\n  - System.Reflection.Emit.PackingSize.Size8\n  - System.Reflection.Emit.PackingSize.Unspecified\n  langs:\n  - csharp\n  name: PackingSize\n  nameWithType: PackingSize\n  fullName: System.Reflection.Emit.PackingSize\n  type: Enum\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection.Emit\n  summary: Specifies one of two factors that determine the memory alignment of fields when a type is marshaled.\n  remarks: \"Packing size affects the alignment of fields in structures and classes whose organization is <xref:System.Runtime.InteropServices.LayoutKind?displayProperty=fullName>. The packing size is one of two factors that determine the offset of a field when the structure or class is marshaled; the other factor is the effective size of the field. To determine the offset of a field:  \\n  \\n1.  Compute the minimum value for the offset by adding the size of the preceding field to the offset of the preceding field.  \\n  \\n2.  Compute the natural packing size for the field: If the field is a simple data type, use the size. If the field is an array, use the size of an array element. If the field is itself a structure, compare the packing size of that structure to the size of the largest field in that structure, and use the smaller of the two values.  \\n  \\n3.  Compute the effective packing size by comparing the packing size to the natural packing size of the field, computed in step 2. Use the smaller of the two numbers.  \\n  \\n4.  Compute the offset. The offset is the first memory location that is equal to or larger than the minimum, and a multiple of the effective packing size computed in step 3.  \\n  \\n> [!NOTE]\\n>  Once offsets have been computed for all the fields in the class or structure, padding is added so that the overall size is a multiple of the packing size.  \\n  \\n For example, in a class containing a `byte` and a `long`, using packing size `Size1`, the offset of the `byte` field is zero (0) and the offset of the `long` field is one (1). If the packing size is `Size4`, the `long` field has offset four (4). In a class containing two `short` fields, using any packing size, the offset of the second `short` field is two (2).  \\n  \\n> [!NOTE]\\n>  Changing the packing size can affect performance if it causes fields to be aligned on offsets that are not multiples of their size.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public enum PackingSize\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PackingSize.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.PackingSize.Size1\n  commentId: F:System.Reflection.Emit.PackingSize.Size1\n  id: Size1\n  parent: System.Reflection.Emit.PackingSize\n  langs:\n  - csharp\n  name: Size1\n  nameWithType: PackingSize.Size1\n  fullName: PackingSize.Size1\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection.Emit\n  summary: The packing size is 1 byte.\n  syntax:\n    content: Size1\n    return:\n      type: System.Reflection.Emit.PackingSize\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PackingSize.xml\n- uid: System.Reflection.Emit.PackingSize.Size128\n  commentId: F:System.Reflection.Emit.PackingSize.Size128\n  id: Size128\n  parent: System.Reflection.Emit.PackingSize\n  langs:\n  - csharp\n  name: Size128\n  nameWithType: PackingSize.Size128\n  fullName: PackingSize.Size128\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection.Emit\n  summary: The packing size is 128 bytes.\n  syntax:\n    content: Size128\n    return:\n      type: System.Reflection.Emit.PackingSize\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PackingSize.xml\n- uid: System.Reflection.Emit.PackingSize.Size16\n  commentId: F:System.Reflection.Emit.PackingSize.Size16\n  id: Size16\n  parent: System.Reflection.Emit.PackingSize\n  langs:\n  - csharp\n  name: Size16\n  nameWithType: PackingSize.Size16\n  fullName: PackingSize.Size16\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection.Emit\n  summary: The packing size is 16 bytes.\n  syntax:\n    content: Size16\n    return:\n      type: System.Reflection.Emit.PackingSize\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PackingSize.xml\n- uid: System.Reflection.Emit.PackingSize.Size2\n  commentId: F:System.Reflection.Emit.PackingSize.Size2\n  id: Size2\n  parent: System.Reflection.Emit.PackingSize\n  langs:\n  - csharp\n  name: Size2\n  nameWithType: PackingSize.Size2\n  fullName: PackingSize.Size2\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection.Emit\n  summary: The packing size is 2 bytes.\n  syntax:\n    content: Size2\n    return:\n      type: System.Reflection.Emit.PackingSize\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PackingSize.xml\n- uid: System.Reflection.Emit.PackingSize.Size32\n  commentId: F:System.Reflection.Emit.PackingSize.Size32\n  id: Size32\n  parent: System.Reflection.Emit.PackingSize\n  langs:\n  - csharp\n  name: Size32\n  nameWithType: PackingSize.Size32\n  fullName: PackingSize.Size32\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection.Emit\n  summary: The packing size is 32 bytes.\n  syntax:\n    content: Size32\n    return:\n      type: System.Reflection.Emit.PackingSize\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PackingSize.xml\n- uid: System.Reflection.Emit.PackingSize.Size4\n  commentId: F:System.Reflection.Emit.PackingSize.Size4\n  id: Size4\n  parent: System.Reflection.Emit.PackingSize\n  langs:\n  - csharp\n  name: Size4\n  nameWithType: PackingSize.Size4\n  fullName: PackingSize.Size4\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection.Emit\n  summary: The packing size is 4 bytes.\n  syntax:\n    content: Size4\n    return:\n      type: System.Reflection.Emit.PackingSize\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PackingSize.xml\n- uid: System.Reflection.Emit.PackingSize.Size64\n  commentId: F:System.Reflection.Emit.PackingSize.Size64\n  id: Size64\n  parent: System.Reflection.Emit.PackingSize\n  langs:\n  - csharp\n  name: Size64\n  nameWithType: PackingSize.Size64\n  fullName: PackingSize.Size64\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection.Emit\n  summary: The packing size is 64 bytes.\n  syntax:\n    content: Size64\n    return:\n      type: System.Reflection.Emit.PackingSize\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PackingSize.xml\n- uid: System.Reflection.Emit.PackingSize.Size8\n  commentId: F:System.Reflection.Emit.PackingSize.Size8\n  id: Size8\n  parent: System.Reflection.Emit.PackingSize\n  langs:\n  - csharp\n  name: Size8\n  nameWithType: PackingSize.Size8\n  fullName: PackingSize.Size8\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection.Emit\n  summary: The packing size is 8 bytes.\n  syntax:\n    content: Size8\n    return:\n      type: System.Reflection.Emit.PackingSize\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PackingSize.xml\n- uid: System.Reflection.Emit.PackingSize.Unspecified\n  commentId: F:System.Reflection.Emit.PackingSize.Unspecified\n  id: Unspecified\n  parent: System.Reflection.Emit.PackingSize\n  langs:\n  - csharp\n  name: Unspecified\n  nameWithType: PackingSize.Unspecified\n  fullName: PackingSize.Unspecified\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection.Emit\n  summary: The packing size is not specified.\n  syntax:\n    content: Unspecified\n    return:\n      type: System.Reflection.Emit.PackingSize\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/PackingSize.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Reflection.Emit.PackingSize.Size1\n  parent: System.Reflection.Emit.PackingSize\n  isExternal: false\n  name: Size1\n  nameWithType: PackingSize.Size1\n  fullName: PackingSize.Size1\n- uid: System.Reflection.Emit.PackingSize\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: PackingSize\n  nameWithType: PackingSize\n  fullName: System.Reflection.Emit.PackingSize\n- uid: System.Reflection.Emit.PackingSize.Size128\n  parent: System.Reflection.Emit.PackingSize\n  isExternal: false\n  name: Size128\n  nameWithType: PackingSize.Size128\n  fullName: PackingSize.Size128\n- uid: System.Reflection.Emit.PackingSize.Size16\n  parent: System.Reflection.Emit.PackingSize\n  isExternal: false\n  name: Size16\n  nameWithType: PackingSize.Size16\n  fullName: PackingSize.Size16\n- uid: System.Reflection.Emit.PackingSize.Size2\n  parent: System.Reflection.Emit.PackingSize\n  isExternal: false\n  name: Size2\n  nameWithType: PackingSize.Size2\n  fullName: PackingSize.Size2\n- uid: System.Reflection.Emit.PackingSize.Size32\n  parent: System.Reflection.Emit.PackingSize\n  isExternal: false\n  name: Size32\n  nameWithType: PackingSize.Size32\n  fullName: PackingSize.Size32\n- uid: System.Reflection.Emit.PackingSize.Size4\n  parent: System.Reflection.Emit.PackingSize\n  isExternal: false\n  name: Size4\n  nameWithType: PackingSize.Size4\n  fullName: PackingSize.Size4\n- uid: System.Reflection.Emit.PackingSize.Size64\n  parent: System.Reflection.Emit.PackingSize\n  isExternal: false\n  name: Size64\n  nameWithType: PackingSize.Size64\n  fullName: PackingSize.Size64\n- uid: System.Reflection.Emit.PackingSize.Size8\n  parent: System.Reflection.Emit.PackingSize\n  isExternal: false\n  name: Size8\n  nameWithType: PackingSize.Size8\n  fullName: PackingSize.Size8\n- uid: System.Reflection.Emit.PackingSize.Unspecified\n  parent: System.Reflection.Emit.PackingSize\n  isExternal: false\n  name: Unspecified\n  nameWithType: PackingSize.Unspecified\n  fullName: PackingSize.Unspecified\n"}