{"nodes":[{"content":"Provides information about security failures.","nodes":[{"pos":[0,45],"content":"Provides information about security failures.","nodes":[{"content":"Provides information about security failures.","pos":[0,45]}]}],"pos":[685,731],"yaml":true},{"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management?displayProperty=fullName> namespace contains the health event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.  \n  \n The <xref:System.Web.Management.WebFailureAuditEvent> class is used when a security operation fails. An example of this is a failed URL authorization for a Web request.  \n  \n By default, ASP.NET is configured to raise the <xref:System.Web.Management.WebFailureAuditEvent> event for the following features:  \n  \n-   File authorization. ASP.NET attempts file authorization only when a Windows Identity is associated with the request. The related event audit code is <xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationFailure>.  \n  \n-   URL authorization. This governs unauthorized attempts to access a URL resource. Failed attempts by an anonymous user are not audited, because anonymous authentication failure is acceptable in most circumstances. The related event audit code is <xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationFailure>.  \n  \n-   Generic unhandled or security unhandled conditions. The following is a list of the event codes related to these conditions:  \n  \n    -   <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationFailure>  \n  \n    -   <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationFailure>  \n  \n    -   <xref:System.Web.Management.WebEventCodes.AuditInvalidViewStateFailure>  \n  \n    -   <xref:System.Web.Management.WebEventCodes.AuditUnhandledSecurityException>  \n  \n    -   <xref:System.Web.Management.WebEventCodes.AuditUnhandledAccessException>  \n  \n When a <xref:System.Web.Management.WebFailureAuditEvent> event is raised, ASP.NET health monitoring increments the related Audit Failure Events Raised performance counter and then checks the `healthMonitoring` configuration section to determine whether any providers subscribe to the event. If providers subscribe to the event, ASP.NET dispatches the event to them for processing.  \n  \n> [!NOTE]\n>  To view the Audit Failure Events Raised performance counter in System Monitor (PerfMon), in the **Add Counters** window, select **ASP.NET** from the **Performance object** drop-down list, select the **Audit Failure Events Raised** performance counter, and click the **Add** button. For more information, see [Using the System Monitor (PerfMon) with ASP.NET Applications](http://go.microsoft.com/fwlink/?linkid=36882) in the IIS documentation on MSDN.  \n  \n> [!NOTE]\n>  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of deriving from the <xref:System.Web.Management.WebFailureAuditEvent> class, see the Example section.","nodes":[{"pos":[0,403],"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management?displayProperty=fullName> namespace contains the health event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.","nodes":[{"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management?displayProperty=fullName> namespace contains the health event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.","pos":[0,403],"nodes":[{"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.","pos":[0,101]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Management?displayProperty=fullName&gt;</ph> namespace contains the health event types responsible for packaging application health-status data and the provider types responsible for processing this data.","pos":[102,319],"source":" The <xref:System.Web.Management?displayProperty=fullName> namespace contains the health event types responsible for packaging application health-status data and the provider types responsible for processing this data."},{"content":"It also contains supporting types that help during the management of health events.","pos":[320,403]}]}]},{"pos":[410,578],"content":"The <xref:System.Web.Management.WebFailureAuditEvent> class is used when a security operation fails. An example of this is a failed URL authorization for a Web request.","nodes":[{"content":"The <xref:System.Web.Management.WebFailureAuditEvent> class is used when a security operation fails. An example of this is a failed URL authorization for a Web request.","pos":[0,168],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Management.WebFailureAuditEvent&gt;</ph> class is used when a security operation fails.","pos":[0,100],"source":"The <xref:System.Web.Management.WebFailureAuditEvent> class is used when a security operation fails."},{"content":"An example of this is a failed URL authorization for a Web request.","pos":[101,168]}]}]},{"pos":[585,715],"content":"By default, ASP.NET is configured to raise the <xref:System.Web.Management.WebFailureAuditEvent> event for the following features:","nodes":[{"content":"By default, ASP.NET is configured to raise the <ph id=\"ph1\">&lt;xref:System.Web.Management.WebFailureAuditEvent&gt;</ph> event for the following features:","pos":[0,130],"source":"By default, ASP.NET is configured to raise the <xref:System.Web.Management.WebFailureAuditEvent> event for the following features:"}]},{"pos":[725,947],"content":"File authorization. ASP.NET attempts file authorization only when a Windows Identity is associated with the request. The related event audit code is <xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationFailure>.","nodes":[{"content":"File authorization. ASP.NET attempts file authorization only when a Windows Identity is associated with the request. The related event audit code is <xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationFailure>.","pos":[0,222],"nodes":[{"content":"File authorization.","pos":[0,19]},{"content":"ASP.NET attempts file authorization only when a Windows Identity is associated with the request.","pos":[20,116]},{"content":"The related event audit code is <ph id=\"ph1\">&lt;xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationFailure&gt;</ph>.","pos":[117,222],"source":" The related event audit code is <xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationFailure>."}]}]},{"pos":[957,1273],"content":"URL authorization. This governs unauthorized attempts to access a URL resource. Failed attempts by an anonymous user are not audited, because anonymous authentication failure is acceptable in most circumstances. The related event audit code is <xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationFailure>.","nodes":[{"content":"URL authorization. This governs unauthorized attempts to access a URL resource. Failed attempts by an anonymous user are not audited, because anonymous authentication failure is acceptable in most circumstances. The related event audit code is <xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationFailure>.","pos":[0,316],"nodes":[{"content":"URL authorization.","pos":[0,18]},{"content":"This governs unauthorized attempts to access a URL resource.","pos":[19,79]},{"content":"Failed attempts by an anonymous user are not audited, because anonymous authentication failure is acceptable in most circumstances.","pos":[80,211]},{"content":"The related event audit code is <ph id=\"ph1\">&lt;xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationFailure&gt;</ph>.","pos":[212,316],"source":" The related event audit code is <xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationFailure>."}]}]},{"pos":[1283,1406],"content":"Generic unhandled or security unhandled conditions. The following is a list of the event codes related to these conditions:","nodes":[{"content":"Generic unhandled or security unhandled conditions. The following is a list of the event codes related to these conditions:","pos":[0,123],"nodes":[{"content":"Generic unhandled or security unhandled conditions.","pos":[0,51]},{"content":"The following is a list of the event codes related to these conditions:","pos":[52,123]}]}]},{"pos":[1420,1494],"content":"<xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationFailure>","nodes":[]},{"pos":[1508,1587],"content":"<xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationFailure>","nodes":[]},{"pos":[1601,1672],"content":"<xref:System.Web.Management.WebEventCodes.AuditInvalidViewStateFailure>","nodes":[]},{"pos":[1686,1760],"content":"<xref:System.Web.Management.WebEventCodes.AuditUnhandledSecurityException>","nodes":[]},{"pos":[1774,1846],"content":"<xref:System.Web.Management.WebEventCodes.AuditUnhandledAccessException>","nodes":[]},{"pos":[1853,2233],"content":"When a <xref:System.Web.Management.WebFailureAuditEvent> event is raised, ASP.NET health monitoring increments the related Audit Failure Events Raised performance counter and then checks the `healthMonitoring` configuration section to determine whether any providers subscribe to the event. If providers subscribe to the event, ASP.NET dispatches the event to them for processing.","nodes":[{"content":"When a <ph id=\"ph1\">&lt;xref:System.Web.Management.WebFailureAuditEvent&gt;</ph> event is raised, ASP.NET health monitoring increments the related Audit Failure Events Raised performance counter and then checks the <ph id=\"ph2\">`healthMonitoring`</ph> configuration section to determine whether any providers subscribe to the event.","pos":[0,290],"source":"When a <xref:System.Web.Management.WebFailureAuditEvent> event is raised, ASP.NET health monitoring increments the related Audit Failure Events Raised performance counter and then checks the `healthMonitoring` configuration section to determine whether any providers subscribe to the event."},{"content":"If providers subscribe to the event, ASP.NET dispatches the event to them for processing.","pos":[291,380]}]},{"pos":[2241,2702],"content":"[!NOTE]\n To view the Audit Failure Events Raised performance counter in System Monitor (PerfMon), in the **Add Counters** window, select **ASP.NET** from the **Performance object** drop-down list, select the **Audit Failure Events Raised** performance counter, and click the **Add** button. For more information, see [Using the System Monitor (PerfMon) with ASP.NET Applications](http://go.microsoft.com/fwlink/?linkid=36882) in the IIS documentation on MSDN.","leadings":["","> "],"nodes":[{"content":" To view the Audit Failure Events Raised performance counter in System Monitor (PerfMon), in the **Add Counters** window, select **ASP.NET** from the **Performance object** drop-down list, select the **Audit Failure Events Raised** performance counter, and click the **Add** button. For more information, see [Using the System Monitor (PerfMon) with ASP.NET Applications](http://go.microsoft.com/fwlink/?linkid=36882) in the IIS documentation on MSDN.","pos":[8,459],"nodes":[{"content":"To view the Audit Failure Events Raised performance counter in System Monitor (PerfMon), in the <bpt id=\"p1\">**</bpt>Add Counters<ept id=\"p1\">**</ept> window, select <bpt id=\"p2\">**</bpt>ASP.NET<ept id=\"p2\">**</ept> from the <bpt id=\"p3\">**</bpt>Performance object<ept id=\"p3\">**</ept> drop-down list, select the <bpt id=\"p4\">**</bpt>Audit Failure Events Raised<ept id=\"p4\">**</ept> performance counter, and click the <bpt id=\"p5\">**</bpt>Add<ept id=\"p5\">**</ept> button.","pos":[1,282],"source":" To view the Audit Failure Events Raised performance counter in System Monitor (PerfMon), in the **Add Counters** window, select **ASP.NET** from the **Performance object** drop-down list, select the **Audit Failure Events Raised** performance counter, and click the **Add** button."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using the System Monitor (PerfMon) with ASP.NET Applications<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=36882)</ept> in the IIS documentation on MSDN.","pos":[283,451],"source":" For more information, see [Using the System Monitor (PerfMon) with ASP.NET Applications](http://go.microsoft.com/fwlink/?linkid=36882) in the IIS documentation on MSDN."}]}]},{"pos":[2710,3149],"content":"[!NOTE]\n In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of deriving from the <xref:System.Web.Management.WebFailureAuditEvent> class, see the Example section.","leadings":["","> "],"nodes":[{"content":" In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of deriving from the <xref:System.Web.Management.WebFailureAuditEvent> class, see the Example section.","pos":[8,437],"nodes":[{"content":"In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the <ph id=\"ph1\">`healthMonitoring`</ph> configuration section.","pos":[1,210],"source":" In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section."},{"content":"You can also derive from the health-monitoring types to create your own custom events and providers.","pos":[211,311]},{"content":"For an example of deriving from the <ph id=\"ph1\">&lt;xref:System.Web.Management.WebFailureAuditEvent&gt;</ph> class, see the Example section.","pos":[312,429],"source":" For an example of deriving from the <xref:System.Web.Management.WebFailureAuditEvent> class, see the Example section."}]}]}],"pos":[742,3922],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.Management.WebFailureAuditEvent\"></xref> class using the supplied parameters.","nodes":[{"pos":[0,134],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Management.WebFailureAuditEvent\"&gt;&lt;/xref&gt;</ph> class using the supplied parameters.","source":"Initializes a new instance of the <xref href=\"System.Web.Management.WebFailureAuditEvent\"></xref> class using the supplied parameters."}],"pos":[8245,8380],"yaml":true},{"content":"This constructor is used internally by the ASP.NET health-monitoring system. You will never use it to create an instance of <xref:System.Web.Management.WebFailureAuditEvent>, but you can call this constructor when implementing your own event type that inherits from this class.","nodes":[{"pos":[0,277],"content":"This constructor is used internally by the ASP.NET health-monitoring system. You will never use it to create an instance of <xref:System.Web.Management.WebFailureAuditEvent>, but you can call this constructor when implementing your own event type that inherits from this class.","nodes":[{"content":"This constructor is used internally by the ASP.NET health-monitoring system. You will never use it to create an instance of <xref:System.Web.Management.WebFailureAuditEvent>, but you can call this constructor when implementing your own event type that inherits from this class.","pos":[0,277],"nodes":[{"content":"This constructor is used internally by the ASP.NET health-monitoring system.","pos":[0,76]},{"content":"You will never use it to create an instance of <ph id=\"ph1\">&lt;xref:System.Web.Management.WebFailureAuditEvent&gt;</ph>, but you can call this constructor when implementing your own event type that inherits from this class.","pos":[77,277],"source":" You will never use it to create an instance of <xref:System.Web.Management.WebFailureAuditEvent>, but you can call this constructor when implementing your own event type that inherits from this class."}]}]}],"pos":[8391,8669],"yaml":true,"extradata":"MT"},{"content":"The event description.","nodes":[{"pos":[0,22],"content":"The event description.","nodes":[{"content":"The event description.","pos":[0,22]}]}],"pos":[9475,9498],"yaml":true},{"content":"The object that is the source of the event.","nodes":[{"pos":[0,43],"content":"The object that is the source of the event.","nodes":[{"content":"The object that is the source of the event.","pos":[0,43]}]}],"pos":[9565,9609],"yaml":true},{"content":"The code associated with the event. When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>.","nodes":[{"pos":[0,180],"content":"The code associated with the event. When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>.","nodes":[{"content":"The code associated with the event.","pos":[0,35]},{"content":"When you implement a custom event, the event code must be greater than <ph id=\"ph1\">&lt;xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"&gt;&lt;/xref&gt;</ph>.","pos":[36,180],"source":" When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>."}]}],"pos":[9673,9854],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Web.Management.WebFailureAuditEvent\"></xref> class using the supplied parameters.","nodes":[{"pos":[0,134],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Management.WebFailureAuditEvent\"&gt;&lt;/xref&gt;</ph> class using the supplied parameters.","source":"Initializes a new instance of the <xref href=\"System.Web.Management.WebFailureAuditEvent\"></xref> class using the supplied parameters."}],"pos":[11175,11310],"yaml":true},{"content":"This constructor is used internally by the ASP.NET health-monitoring system. You will never use it to create an instance of <xref:System.Web.Management.WebFailureAuditEvent>, but you can call this constructor when implementing your own event type that inherits from this class.","nodes":[{"pos":[0,277],"content":"This constructor is used internally by the ASP.NET health-monitoring system. You will never use it to create an instance of <xref:System.Web.Management.WebFailureAuditEvent>, but you can call this constructor when implementing your own event type that inherits from this class.","nodes":[{"content":"This constructor is used internally by the ASP.NET health-monitoring system. You will never use it to create an instance of <xref:System.Web.Management.WebFailureAuditEvent>, but you can call this constructor when implementing your own event type that inherits from this class.","pos":[0,277],"nodes":[{"content":"This constructor is used internally by the ASP.NET health-monitoring system.","pos":[0,76]},{"content":"You will never use it to create an instance of <ph id=\"ph1\">&lt;xref:System.Web.Management.WebFailureAuditEvent&gt;</ph>, but you can call this constructor when implementing your own event type that inherits from this class.","pos":[77,277],"source":" You will never use it to create an instance of <xref:System.Web.Management.WebFailureAuditEvent>, but you can call this constructor when implementing your own event type that inherits from this class."}]}]}],"pos":[11321,11599],"yaml":true,"extradata":"MT"},{"content":"The event description.","nodes":[{"pos":[0,22],"content":"The event description.","nodes":[{"content":"The event description.","pos":[0,22]}]}],"pos":[12426,12449],"yaml":true},{"content":"The object that is the source of the event.","nodes":[{"pos":[0,43],"content":"The object that is the source of the event.","nodes":[{"content":"The object that is the source of the event.","pos":[0,43]}]}],"pos":[12516,12560],"yaml":true},{"content":"The code associated with the event. When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>.","nodes":[{"pos":[0,180],"content":"The code associated with the event. When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>.","nodes":[{"content":"The code associated with the event.","pos":[0,35]},{"content":"When you implement a custom event, the event code must be greater than <ph id=\"ph1\">&lt;xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"&gt;&lt;/xref&gt;</ph>.","pos":[36,180],"source":" When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>."}]}],"pos":[12624,12805],"yaml":true},{"content":"The <xref href=\"System.Web.Management.WebEventCodes\"></xref> value that specifies the detailed identifier for the event.","nodes":[{"pos":[0,120],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.Management.WebEventCodes\"&gt;&lt;/xref&gt;</ph> value that specifies the detailed identifier for the event.","source":"The <xref href=\"System.Web.Management.WebEventCodes\"></xref> value that specifies the detailed identifier for the event."}],"pos":[12875,12996],"yaml":true},{"content":"Increments the Audit Failure Events Raised performance counter.","nodes":[{"pos":[0,63],"content":"Increments the Audit Failure Events Raised performance counter.","nodes":[{"content":"Increments the Audit Failure Events Raised performance counter.","pos":[0,63]}]}],"pos":[14112,14176],"yaml":true},{"content":"The Audit Failure Events Raised performance counter tracks the number of failed audit events raised since the application started. This method also calls the parent <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A> method, which increments the Events Raised counter. This counter tracks the total number of events raised.  \n  \n To view these performance counters in System Monitor (PerfMon), in the **Add Counters** window select **ASP.NET** from the **Performance object** drop-down list, select the performance counter you want to view, and click the **Add** button. For more information, see [Using the System Monitor (PerfMon) with ASP.NET Applications](http://go.microsoft.com/fwlink/?linkid=36882) in the IIS documentation on MSDN.","nodes":[{"pos":[0,338],"content":"The Audit Failure Events Raised performance counter tracks the number of failed audit events raised since the application started. This method also calls the parent <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A> method, which increments the Events Raised counter. This counter tracks the total number of events raised.","nodes":[{"content":"The Audit Failure Events Raised performance counter tracks the number of failed audit events raised since the application started. This method also calls the parent <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A> method, which increments the Events Raised counter. This counter tracks the total number of events raised.","pos":[0,338],"nodes":[{"content":"The Audit Failure Events Raised performance counter tracks the number of failed audit events raised since the application started.","pos":[0,130]},{"content":"This method also calls the parent <ph id=\"ph1\">&lt;xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A&gt;</ph> method, which increments the Events Raised counter.","pos":[131,283],"source":" This method also calls the parent <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A> method, which increments the Events Raised counter."},{"content":"This counter tracks the total number of events raised.","pos":[284,338]}]}]},{"pos":[345,754],"content":"To view these performance counters in System Monitor (PerfMon), in the **Add Counters** window select **ASP.NET** from the **Performance object** drop-down list, select the performance counter you want to view, and click the **Add** button. For more information, see [Using the System Monitor (PerfMon) with ASP.NET Applications](http://go.microsoft.com/fwlink/?linkid=36882) in the IIS documentation on MSDN.","nodes":[{"content":"To view these performance counters in System Monitor (PerfMon), in the <bpt id=\"p1\">**</bpt>Add Counters<ept id=\"p1\">**</ept> window select <bpt id=\"p2\">**</bpt>ASP.NET<ept id=\"p2\">**</ept> from the <bpt id=\"p3\">**</bpt>Performance object<ept id=\"p3\">**</ept> drop-down list, select the performance counter you want to view, and click the <bpt id=\"p4\">**</bpt>Add<ept id=\"p4\">**</ept> button.","pos":[0,240],"source":"To view these performance counters in System Monitor (PerfMon), in the **Add Counters** window select **ASP.NET** from the **Performance object** drop-down list, select the performance counter you want to view, and click the **Add** button."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using the System Monitor (PerfMon) with ASP.NET Applications<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=36882)</ept> in the IIS documentation on MSDN.","pos":[241,409],"source":" For more information, see [Using the System Monitor (PerfMon) with ASP.NET Applications](http://go.microsoft.com/fwlink/?linkid=36882) in the IIS documentation on MSDN."}]}],"pos":[14187,14946],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Management.WebFailureAuditEvent\n  commentId: T:System.Web.Management.WebFailureAuditEvent\n  id: WebFailureAuditEvent\n  children:\n  - System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32)\n  - System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)\n  - System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters\n  langs:\n  - csharp\n  name: WebFailureAuditEvent\n  nameWithType: WebFailureAuditEvent\n  fullName: System.Web.Management.WebFailureAuditEvent\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Provides information about security failures.\n  remarks: \"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management?displayProperty=fullName> namespace contains the health event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.  \\n  \\n The <xref:System.Web.Management.WebFailureAuditEvent> class is used when a security operation fails. An example of this is a failed URL authorization for a Web request.  \\n  \\n By default, ASP.NET is configured to raise the <xref:System.Web.Management.WebFailureAuditEvent> event for the following features:  \\n  \\n-   File authorization. ASP.NET attempts file authorization only when a Windows Identity is associated with the request. The related event audit code is <xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationFailure>.  \\n  \\n-   URL authorization. This governs unauthorized attempts to access a URL resource. Failed attempts by an anonymous user are not audited, because anonymous authentication failure is acceptable in most circumstances. The related event audit code is <xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationFailure>.  \\n  \\n-   Generic unhandled or security unhandled conditions. The following is a list of the event codes related to these conditions:  \\n  \\n    -   <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationFailure>  \\n  \\n    -   <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationFailure>  \\n  \\n    -   <xref:System.Web.Management.WebEventCodes.AuditInvalidViewStateFailure>  \\n  \\n    -   <xref:System.Web.Management.WebEventCodes.AuditUnhandledSecurityException>  \\n  \\n    -   <xref:System.Web.Management.WebEventCodes.AuditUnhandledAccessException>  \\n  \\n When a <xref:System.Web.Management.WebFailureAuditEvent> event is raised, ASP.NET health monitoring increments the related Audit Failure Events Raised performance counter and then checks the `healthMonitoring` configuration section to determine whether any providers subscribe to the event. If providers subscribe to the event, ASP.NET dispatches the event to them for processing.  \\n  \\n> [!NOTE]\\n>  To view the Audit Failure Events Raised performance counter in System Monitor (PerfMon), in the **Add Counters** window, select **ASP.NET** from the **Performance object** drop-down list, select the **Audit Failure Events Raised** performance counter, and click the **Add** button. For more information, see [Using the System Monitor (PerfMon) with ASP.NET Applications](http://go.microsoft.com/fwlink/?linkid=36882) in the IIS documentation on MSDN.  \\n  \\n> [!NOTE]\\n>  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of deriving from the <xref:System.Web.Management.WebFailureAuditEvent> class, see the Example section.\"\n  example:\n  - \"The following code example demonstrates how to derive from the <xref:System.Web.Management.WebFailureAuditEvent> class to create a custom audit event.  \\n  \\n [!code-csharp[System.Web.Management.WebFailureAuditEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/CS/webfailureauditevent.cs#1)]\\n [!code-vb[System.Web.Management.WebFailureAuditEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/VB/webfailureauditevent.vb#1)]  \\n  \\n The following configuration excerpt shows how to enable ASP.NET to use the <xref:System.Web.Management.WebFailureAuditEvent> event.  \\n  \\n```  \\n<healthMonitoring   \\nenabled=\\\"true\\\"  \\nheartBeatInterval=\\\"0\\\">   \\n<providers>  \\n<add name=\\\"EventLogProvider\\\"   \\ntype=\\\"System.Web.Management.EventLogWebEventProvider,  \\nSystem.Web,Version=2.0.3600.0,Culture=neutral,  \\nPublicKeyToken=b03f5f7f11d50a3a\\\"/>  \\n</providers>  \\n  \\n<eventMappings>  \\n<add  name=\\\"SampleWebFailureAuditEvent\\\"   \\ntype=\\\"SamplesAspNet.SampleWebFailureAuditEvent,  \\nwebfailureauditevent,Version=1.0.1663.31140,   \\nCulture=neutral,   \\nPublicKeyToken=0d1fa0f69d94de96,   \\nprocessorArchitecture=MSIL\\\"/>  \\n</eventMappings>  \\n  \\n<rules>  \\n<add name=\\\"Custom Failure Audit Default\\\"  \\neventName=\\\" SampleWebFailureAuditEvent \\\"  \\nprovider=\\\"EventLogProvider\\\"  \\nprofile=\\\"Default\\\"/>    \\n</rules>  \\n  \\n</healthMonitoring>  \\n```\"\n  syntax:\n    content: 'public class WebFailureAuditEvent : System.Web.Management.WebAuditEvent'\n  inheritance:\n  - System.Object\n  - System.Web.Management.WebBaseEvent\n  - System.Web.Management.WebManagementEvent\n  - System.Web.Management.WebAuditEvent\n  derivedClasses:\n  - System.Web.Management.WebAuthenticationFailureAuditEvent\n  - System.Web.Management.WebViewStateFailureAuditEvent\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Web.Management.WebAuditEvent.RequestInformation\n  - System.Web.Management.WebBaseEvent.ApplicationInformation\n  - System.Web.Management.WebBaseEvent.EventCode\n  - System.Web.Management.WebBaseEvent.EventDetailCode\n  - System.Web.Management.WebBaseEvent.EventID\n  - System.Web.Management.WebBaseEvent.EventOccurrence\n  - System.Web.Management.WebBaseEvent.EventSequence\n  - System.Web.Management.WebBaseEvent.EventSource\n  - System.Web.Management.WebBaseEvent.EventTime\n  - System.Web.Management.WebBaseEvent.EventTimeUtc\n  - System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)\n  - System.Web.Management.WebBaseEvent.Message\n  - System.Web.Management.WebBaseEvent.Raise\n  - System.Web.Management.WebBaseEvent.Raise(System.Web.Management.WebBaseEvent)\n  - System.Web.Management.WebBaseEvent.ToString\n  - System.Web.Management.WebBaseEvent.ToString(System.Boolean,System.Boolean)\n  - System.Web.Management.WebManagementEvent.ProcessInformation\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebFailureAuditEvent.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32)\n  commentId: M:System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32)\n  id: '#ctor(System.String,System.Object,System.Int32)'\n  parent: System.Web.Management.WebFailureAuditEvent\n  langs:\n  - csharp\n  name: WebFailureAuditEvent(String, Object, Int32)\n  nameWithType: WebFailureAuditEvent.WebFailureAuditEvent(String, Object, Int32)\n  fullName: WebFailureAuditEvent.WebFailureAuditEvent(String, Object, Int32)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Initializes a new instance of the <xref href=\"System.Web.Management.WebFailureAuditEvent\"></xref> class using the supplied parameters.\n  remarks: This constructor is used internally by the ASP.NET health-monitoring system. You will never use it to create an instance of <xref:System.Web.Management.WebFailureAuditEvent>, but you can call this constructor when implementing your own event type that inherits from this class.\n  example:\n  - \"The following code example shows how to call this constructor in the `SampleWebFailureAuditEvent` class. This code example is part of a larger example provided for the <xref:System.Web.Management.WebFailureAuditEvent> class overview.  \\n  \\n [!code-csharp[System.Web.Management.WebFailureAuditEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/CS/webfailureauditevent.cs#2)]\\n [!code-vb[System.Web.Management.WebFailureAuditEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/VB/webfailureauditevent.vb#2)]\"\n  syntax:\n    content: protected WebFailureAuditEvent (string message, object eventSource, int eventCode);\n    parameters:\n    - id: message\n      type: System.String\n      description: The event description.\n    - id: eventSource\n      type: System.Object\n      description: The object that is the source of the event.\n    - id: eventCode\n      type: System.Int32\n      description: The code associated with the event. When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>.\n  overload: System.Web.Management.WebFailureAuditEvent.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebFailureAuditEvent.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)\n  commentId: M:System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)\n  id: '#ctor(System.String,System.Object,System.Int32,System.Int32)'\n  parent: System.Web.Management.WebFailureAuditEvent\n  langs:\n  - csharp\n  name: WebFailureAuditEvent(String, Object, Int32, Int32)\n  nameWithType: WebFailureAuditEvent.WebFailureAuditEvent(String, Object, Int32, Int32)\n  fullName: WebFailureAuditEvent.WebFailureAuditEvent(String, Object, Int32, Int32)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Initializes a new instance of the <xref href=\"System.Web.Management.WebFailureAuditEvent\"></xref> class using the supplied parameters.\n  remarks: This constructor is used internally by the ASP.NET health-monitoring system. You will never use it to create an instance of <xref:System.Web.Management.WebFailureAuditEvent>, but you can call this constructor when implementing your own event type that inherits from this class.\n  example:\n  - \"The following code example shows how to call this constructor in the `SampleWebFailureAuditEvent` class. This code example is part of a larger example provided for the <xref:System.Web.Management.WebFailureAuditEvent> class overview.  \\n  \\n [!code-csharp[System.Web.Management.WebFailureAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/CS/webfailureauditevent.cs#3)]\\n [!code-vb[System.Web.Management.WebFailureAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/VB/webfailureauditevent.vb#3)]\"\n  syntax:\n    content: protected WebFailureAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode);\n    parameters:\n    - id: message\n      type: System.String\n      description: The event description.\n    - id: eventSource\n      type: System.Object\n      description: The object that is the source of the event.\n    - id: eventCode\n      type: System.Int32\n      description: The code associated with the event. When you implement a custom event, the event code must be greater than <xref href=\"System.Web.Management.WebEventCodes.WebExtendedBase\"></xref>.\n    - id: eventDetailCode\n      type: System.Int32\n      description: The <xref href=\"System.Web.Management.WebEventCodes\"></xref> value that specifies the detailed identifier for the event.\n  overload: System.Web.Management.WebFailureAuditEvent.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebFailureAuditEvent.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters\n  commentId: M:System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters\n  id: IncrementPerfCounters\n  parent: System.Web.Management.WebFailureAuditEvent\n  langs:\n  - csharp\n  name: IncrementPerfCounters()\n  nameWithType: WebFailureAuditEvent.IncrementPerfCounters()\n  fullName: WebFailureAuditEvent.IncrementPerfCounters()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Increments the Audit Failure Events Raised performance counter.\n  remarks: \"The Audit Failure Events Raised performance counter tracks the number of failed audit events raised since the application started. This method also calls the parent <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A> method, which increments the Events Raised counter. This counter tracks the total number of events raised.  \\n  \\n To view these performance counters in System Monitor (PerfMon), in the **Add Counters** window select **ASP.NET** from the **Performance object** drop-down list, select the performance counter you want to view, and click the **Add** button. For more information, see [Using the System Monitor (PerfMon) with ASP.NET Applications](http://go.microsoft.com/fwlink/?linkid=36882) in the IIS documentation on MSDN.\"\n  syntax:\n    content: protected override void IncrementPerfCounters ();\n    parameters: []\n  overload: System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebFailureAuditEvent.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\nreferences:\n- uid: System.Web.Management.WebAuditEvent\n  parent: System.Web.Management\n  isExternal: false\n  name: WebAuditEvent\n  nameWithType: WebAuditEvent\n  fullName: System.Web.Management.WebAuditEvent\n- uid: System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32)\n  parent: System.Web.Management.WebFailureAuditEvent\n  isExternal: false\n  name: WebFailureAuditEvent(String, Object, Int32)\n  nameWithType: WebFailureAuditEvent.WebFailureAuditEvent(String, Object, Int32)\n  fullName: WebFailureAuditEvent.WebFailureAuditEvent(String, Object, Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)\n  parent: System.Web.Management.WebFailureAuditEvent\n  isExternal: false\n  name: WebFailureAuditEvent(String, Object, Int32, Int32)\n  nameWithType: WebFailureAuditEvent.WebFailureAuditEvent(String, Object, Int32, Int32)\n  fullName: WebFailureAuditEvent.WebFailureAuditEvent(String, Object, Int32, Int32)\n- uid: System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters\n  parent: System.Web.Management.WebFailureAuditEvent\n  isExternal: false\n  name: IncrementPerfCounters()\n  nameWithType: WebFailureAuditEvent.IncrementPerfCounters()\n  fullName: WebFailureAuditEvent.IncrementPerfCounters()\n- uid: System.Web.Management.WebFailureAuditEvent.#ctor*\n  parent: System.Web.Management.WebFailureAuditEvent\n  isExternal: false\n  name: WebFailureAuditEvent\n  nameWithType: WebFailureAuditEvent.WebFailureAuditEvent\n  fullName: WebFailureAuditEvent.WebFailureAuditEvent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebFailureAuditEvent.xml\n- uid: System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters*\n  parent: System.Web.Management.WebFailureAuditEvent\n  isExternal: false\n  name: IncrementPerfCounters\n  nameWithType: WebFailureAuditEvent.IncrementPerfCounters\n  fullName: WebFailureAuditEvent.IncrementPerfCounters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebFailureAuditEvent.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Web.Management.WebBaseEvent.ToString\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: ToString()\n  nameWithType: WebBaseEvent.ToString()\n  fullName: WebBaseEvent.ToString()\n- uid: System.Web.Management.WebBaseEvent.ApplicationInformation\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: ApplicationInformation\n  nameWithType: WebBaseEvent.ApplicationInformation\n  fullName: WebBaseEvent.ApplicationInformation\n- uid: System.Web.Management.WebBaseEvent.EventCode\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: EventCode\n  nameWithType: WebBaseEvent.EventCode\n  fullName: WebBaseEvent.EventCode\n- uid: System.Web.Management.WebBaseEvent.EventDetailCode\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: EventDetailCode\n  nameWithType: WebBaseEvent.EventDetailCode\n  fullName: WebBaseEvent.EventDetailCode\n- uid: System.Web.Management.WebBaseEvent.EventID\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: EventID\n  nameWithType: WebBaseEvent.EventID\n  fullName: WebBaseEvent.EventID\n- uid: System.Web.Management.WebBaseEvent.EventOccurrence\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: EventOccurrence\n  nameWithType: WebBaseEvent.EventOccurrence\n  fullName: WebBaseEvent.EventOccurrence\n- uid: System.Web.Management.WebBaseEvent.EventSequence\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: EventSequence\n  nameWithType: WebBaseEvent.EventSequence\n  fullName: WebBaseEvent.EventSequence\n- uid: System.Web.Management.WebBaseEvent.EventSource\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: EventSource\n  nameWithType: WebBaseEvent.EventSource\n  fullName: WebBaseEvent.EventSource\n- uid: System.Web.Management.WebBaseEvent.EventTime\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: EventTime\n  nameWithType: WebBaseEvent.EventTime\n  fullName: WebBaseEvent.EventTime\n- uid: System.Web.Management.WebBaseEvent.EventTimeUtc\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: EventTimeUtc\n  nameWithType: WebBaseEvent.EventTimeUtc\n  fullName: WebBaseEvent.EventTimeUtc\n- uid: System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: FormatCustomEventDetails(WebEventFormatter)\n  nameWithType: WebBaseEvent.FormatCustomEventDetails(WebEventFormatter)\n  fullName: WebBaseEvent.FormatCustomEventDetails(WebEventFormatter)\n- uid: System.Web.Management.WebBaseEvent.Message\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: Message\n  nameWithType: WebBaseEvent.Message\n  fullName: WebBaseEvent.Message\n- uid: System.Web.Management.WebBaseEvent.Raise\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: Raise()\n  nameWithType: WebBaseEvent.Raise()\n  fullName: WebBaseEvent.Raise()\n- uid: System.Web.Management.WebBaseEvent.Raise(System.Web.Management.WebBaseEvent)\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: Raise(WebBaseEvent)\n  nameWithType: WebBaseEvent.Raise(WebBaseEvent)\n  fullName: WebBaseEvent.Raise(WebBaseEvent)\n- uid: System.Web.Management.WebBaseEvent.ToString(System.Boolean,System.Boolean)\n  parent: System.Web.Management.WebBaseEvent\n  isExternal: false\n  name: ToString(Boolean, Boolean)\n  nameWithType: WebBaseEvent.ToString(Boolean, Boolean)\n  fullName: WebBaseEvent.ToString(Boolean, Boolean)\n- uid: System.Web.Management.WebManagementEvent.ProcessInformation\n  parent: System.Web.Management.WebManagementEvent\n  isExternal: false\n  name: ProcessInformation\n  nameWithType: WebManagementEvent.ProcessInformation\n  fullName: WebManagementEvent.ProcessInformation\n- uid: System.Web.Management.WebAuditEvent.RequestInformation\n  parent: System.Web.Management.WebAuditEvent\n  isExternal: false\n  name: RequestInformation\n  nameWithType: WebAuditEvent.RequestInformation\n  fullName: WebAuditEvent.RequestInformation\n"}