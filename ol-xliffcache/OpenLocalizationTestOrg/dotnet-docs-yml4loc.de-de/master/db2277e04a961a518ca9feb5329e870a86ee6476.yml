### YamlMime:ManagedReference
items:
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  id: CancellationToken
  children:
  - System.Threading.CancellationToken.#ctor(System.Boolean)
  - System.Threading.CancellationToken.CanBeCanceled
  - System.Threading.CancellationToken.Equals(System.Object)
  - System.Threading.CancellationToken.Equals(System.Threading.CancellationToken)
  - System.Threading.CancellationToken.GetHashCode
  - System.Threading.CancellationToken.IsCancellationRequested
  - System.Threading.CancellationToken.None
  - System.Threading.CancellationToken.op_Equality(System.Threading.CancellationToken,System.Threading.CancellationToken)
  - System.Threading.CancellationToken.op_Inequality(System.Threading.CancellationToken,System.Threading.CancellationToken)
  - System.Threading.CancellationToken.Register(System.Action)
  - System.Threading.CancellationToken.Register(System.Action,System.Boolean)
  - System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object)
  - System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object,System.Boolean)
  - System.Threading.CancellationToken.ThrowIfCancellationRequested
  - System.Threading.CancellationToken.WaitHandle
  langs:
  - csharp
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
  type: Struct
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Threading
  summary: Propagates notification that operations should be canceled.
  remarks: "A <xref:System.Threading.CancellationToken> enables cooperative cancellation between threads, thread pool work items, or <xref:System.Threading.Tasks.Task> objects. You create a cancellation token by instantiating a <xref:System.Threading.CancellationTokenSource> object, which manages cancellation tokens retrieved from its <xref:System.Threading.CancellationTokenSource.Token%2A?displayProperty=fullName> property. You then  pass the cancellation token to any number of threads, tasks, or operations that should receive notice of cancellation. The token cannot be used to initiate cancellation. When the owning object calls <xref:System.Threading.CancellationTokenSource.Cancel%2A?displayProperty=fullName>, the <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> property on every copy of the cancellation token is set to `true`. The objects that receive the notification can respond in whatever manner is appropriate.  \n  \n For more information and code examples see [Cancellation in Managed Threads](~/docs/standard/threading/cancellation-in-managed-threads.md)."
  example:
  - "The following example uses a random number generator to emulate a data collection application that reads 10 integral values from eleven different instruments. A value of zero indicates that the measurement has failed for one instrument, in which case the operation should be cancelled and no overall mean should be computed.  \n  \n To handle the possible cancellation of the operation, the example instantiates a <xref:System.Threading.CancellationTokenSource> object that generates a cancellation token which is passed to a <xref:System.Threading.Tasks.TaskFactory> object. The <xref:System.Threading.Tasks.TaskFactory> object in turn passes the cancellation token to each of the tasks responsible for collecting readings for a particular instrument. The <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%60%602%28System.Threading.Tasks.Task%7B%60%600%7D%5B%5D%2CSystem.Func%7BSystem.Threading.Tasks.Task%7B%60%600%7D%5B%5D%2C%60%601%7D%2CSystem.Threading.CancellationToken%29?displayProperty=fullName> method is called to ensure that the mean is computed only after all readings have been gathered successfully. If a task has not because it has been cancelled, the call to the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A?displayProperty=fullName> method throws an exception.  \n  \n [!code-csharp[System.Threading.CancellationTokenSource.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.cancellationtokensource.class/cs/cancel1.cs#1)]\n [!code-vb[System.Threading.CancellationTokenSource.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.cancellationtokensource.class/vb/cancel1.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public struct CancellationToken
  inheritance:
  - System.Object
  - System.ValueType
  implements: []
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationToken.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CancellationToken.#ctor(System.Boolean)
  commentId: M:System.Threading.CancellationToken.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: CancellationToken(Boolean)
  nameWithType: CancellationToken.CancellationToken(Boolean)
  fullName: CancellationToken.CancellationToken(Boolean)
  type: Constructor
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Threading
  summary: Initializes the <xref href="System.Threading.CancellationToken"></xref>.
  remarks: "Tokens created with this constructor will remain in the canceled state specified by the `canceled` parameter. If `canceled` is `false`, both <xref:System.Threading.CancellationToken.CanBeCanceled%2A> and <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> will be `false`.  \n  \n If `canceled` is `true`, both <xref:System.Threading.CancellationToken.CanBeCanceled%2A> and <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> will be `true`."
  syntax:
    content: public CancellationToken (bool canceled);
    parameters:
    - id: canceled
      type: System.Boolean
      description: The canceled state for the token.
  overload: System.Threading.CancellationToken.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationToken.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CancellationToken.CanBeCanceled
  commentId: P:System.Threading.CancellationToken.CanBeCanceled
  id: CanBeCanceled
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: CanBeCanceled
  nameWithType: CancellationToken.CanBeCanceled
  fullName: CancellationToken.CanBeCanceled
  type: Property
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Threading
  summary: Gets whether this token is capable of being in the canceled state.
  remarks: "If <xref:System.Threading.CancellationToken.CanBeCanceled%2A> returns `false`, it is guaranteed that the token will never transition into a canceled state, meaning that <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> will never return `true`. A cancellation token that cannot be canceled is returned by the static <xref:System.Threading.CancellationToken.None%2A?displayProperty=fullName> property.  \n  \n You can optionally use this property to determine whether a cancellation token can be canceled before examing the value of the <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> property to determine whether it has been canceled."
  syntax:
    content: public bool CanBeCanceled { get; }
    return:
      type: System.Boolean
      description: '`true` if this token is capable of being in the canceled state; otherwise, `false`.'
  overload: System.Threading.CancellationToken.CanBeCanceled*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationToken.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CancellationToken.Equals(System.Object)
  commentId: M:System.Threading.CancellationToken.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CancellationToken.Equals(Object)
  fullName: CancellationToken.Equals(Object)
  type: Method
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Threading
  summary: Determines whether the current <xref href="System.Threading.CancellationToken"></xref> instance is equal to the specified <xref href="System.Object"></xref>.
  syntax:
    content: public override bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: The other object to which to compare this instance.
    return:
      type: System.Boolean
      description: '`true` if <code>other</code> is a <xref href="System.Threading.CancellationToken"></xref> and if the two instances are equal; otherwise, `false`. Two tokens are equal if they are associated with the same <xref href="System.Threading.CancellationTokenSource"></xref> or if they were both constructed from public <xref href="System.Threading.CancellationToken"></xref> constructors and their <xref href="System.Threading.CancellationToken.IsCancellationRequested"></xref> values are equal.'
  overload: System.Threading.CancellationToken.Equals*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: An associated <xref href="System.Threading.CancellationTokenSource"></xref> has been disposed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationToken.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CancellationToken.Equals(System.Threading.CancellationToken)
  commentId: M:System.Threading.CancellationToken.Equals(System.Threading.CancellationToken)
  id: Equals(System.Threading.CancellationToken)
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: Equals(CancellationToken)
  nameWithType: CancellationToken.Equals(CancellationToken)
  fullName: CancellationToken.Equals(CancellationToken)
  type: Method
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Threading
  summary: Determines whether the current <xref href="System.Threading.CancellationToken"></xref> instance is equal to the specified token.
  syntax:
    content: public bool Equals (System.Threading.CancellationToken other);
    parameters:
    - id: other
      type: System.Threading.CancellationToken
      description: The other <xref href="System.Threading.CancellationToken"></xref> to which to compare this instance.
    return:
      type: System.Boolean
      description: '`true` if the instances are equal; otherwise, `false`. Two tokens are equal if they are associated with the same <xref href="System.Threading.CancellationTokenSource"></xref> or if they were both constructed from public <xref href="System.Threading.CancellationToken"></xref> constructors and their <xref href="System.Threading.CancellationToken.IsCancellationRequested"></xref> values are equal.'
  overload: System.Threading.CancellationToken.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationToken.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CancellationToken.GetHashCode
  commentId: M:System.Threading.CancellationToken.GetHashCode
  id: GetHashCode
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CancellationToken.GetHashCode()
  fullName: CancellationToken.GetHashCode()
  type: Method
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Threading
  summary: Serves as a hash function for a <xref href="System.Threading.CancellationToken"></xref>.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: A hash code for the current <xref href="System.Threading.CancellationToken"></xref> instance.
  overload: System.Threading.CancellationToken.GetHashCode*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationToken.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CancellationToken.IsCancellationRequested
  commentId: P:System.Threading.CancellationToken.IsCancellationRequested
  id: IsCancellationRequested
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: IsCancellationRequested
  nameWithType: CancellationToken.IsCancellationRequested
  fullName: CancellationToken.IsCancellationRequested
  type: Property
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Threading
  summary: Gets whether cancellation has been requested for this token.
  remarks: "This property indicates whether cancellation has been requested for this token, either through the token initially being constructed in a canceled state, or through calling <xref:System.Threading.CancellationTokenSource.Cancel%2A> on the token's associated <xref:System.Threading.CancellationTokenSource>.  \n  \n If this property is `true`, it only guarantees that cancellation has been requested. It does not guarantee that every registered handler has finished executing, nor that cancellation requests have finished propagating to all registered handlers. Additional synchronization may be required, particularly in situations where related objects are being canceled concurrently."
  example:
  - "The following is a simple example that executes a server process until the <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> property returns `true`.  \n  \n [!code-csharp[System.Threading.Tasks.CancellationToken.IsCancellationRequested#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Threading.Tasks.CancellationToken.IsCancellationRequested/cs/cancellation.cs#12)]\n [!code-vb[System.Threading.Tasks.CancellationToken.IsCancellationRequested#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Threading.Tasks.CancellationToken.IsCancellationRequested/vb/cancelthreads.vb#12)]  \n  \n The example instantiates a <xref:System.Threading.CancellationTokenSource> object, which controls access to the cancellation token. It then defines two thread procedures. The first is defined as a lambda expression that pools the keyboard and, when the \"C\" key is pressed, calls <xref:System.Threading.CancellationTokenSource.Cancel%2A?displayProperty=fullName> to set the cancellation token to the cancelled state. The second is a parameterized method, `ServerClass.StaticMethod`, that executes a loop until the <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> property is `true`.  \n  \n The main thread then starts the two threads and blocks until the thread that executes the `ServerClass.StaticMethod` method terminates."
  syntax:
    content: public bool IsCancellationRequested { get; }
    return:
      type: System.Boolean
      description: '`true` if cancellation has been requested for this token; otherwise, `false`.'
  overload: System.Threading.CancellationToken.IsCancellationRequested*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationToken.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CancellationToken.None
  commentId: P:System.Threading.CancellationToken.None
  id: None
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: None
  nameWithType: CancellationToken.None
  fullName: CancellationToken.None
  type: Property
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Threading
  summary: Returns an empty <xref href="System.Threading.CancellationToken"></xref> value.
  remarks: "The cancellation token returned by this property cannot be canceled; that is, its <xref:System.Threading.CancellationToken.CanBeCanceled%2A> property is `false`.  \n  \n You can also use the C#  [default(CancellationToken)](~/docs/csharp/language-reference/keywords/default.md) statement to create an empty cancellation token."
  syntax:
    content: public static System.Threading.CancellationToken None { get; }
    return:
      type: System.Threading.CancellationToken
      description: An empty cancellation token.
  overload: System.Threading.CancellationToken.None*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationToken.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CancellationToken.op_Equality(System.Threading.CancellationToken,System.Threading.CancellationToken)
  commentId: M:System.Threading.CancellationToken.op_Equality(System.Threading.CancellationToken,System.Threading.CancellationToken)
  id: op_Equality(System.Threading.CancellationToken,System.Threading.CancellationToken)
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: op_Equality(CancellationToken, CancellationToken)
  nameWithType: CancellationToken.op_Equality(CancellationToken, CancellationToken)
  fullName: CancellationToken.op_Equality(CancellationToken, CancellationToken)
  type: Operator
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Threading
  summary: Determines whether two <xref href="System.Threading.CancellationToken"></xref> instances are equal.
  syntax:
    content: public static bool op_Equality (System.Threading.CancellationToken left, System.Threading.CancellationToken right);
    parameters:
    - id: left
      type: System.Threading.CancellationToken
      description: The first instance.
    - id: right
      type: System.Threading.CancellationToken
      description: The second instance.
    return:
      type: System.Boolean
      description: '`true` if the instances are equal; otherwise, `false`.'
  overload: System.Threading.CancellationToken.op_Equality*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: An associated <xref href="System.Threading.CancellationTokenSource"></xref> has been disposed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationToken.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CancellationToken.op_Inequality(System.Threading.CancellationToken,System.Threading.CancellationToken)
  commentId: M:System.Threading.CancellationToken.op_Inequality(System.Threading.CancellationToken,System.Threading.CancellationToken)
  id: op_Inequality(System.Threading.CancellationToken,System.Threading.CancellationToken)
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: op_Inequality(CancellationToken, CancellationToken)
  nameWithType: CancellationToken.op_Inequality(CancellationToken, CancellationToken)
  fullName: CancellationToken.op_Inequality(CancellationToken, CancellationToken)
  type: Operator
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Threading
  summary: Determines whether two <xref href="System.Threading.CancellationToken"></xref> instances are not equal.
  syntax:
    content: public static bool op_Inequality (System.Threading.CancellationToken left, System.Threading.CancellationToken right);
    parameters:
    - id: left
      type: System.Threading.CancellationToken
      description: The first instance.
    - id: right
      type: System.Threading.CancellationToken
      description: The second instance.
    return:
      type: System.Boolean
      description: '`true` if the instances are not equal; otherwise, `false`.'
  overload: System.Threading.CancellationToken.op_Inequality*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: An associated <xref href="System.Threading.CancellationTokenSource"></xref> has been disposed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationToken.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CancellationToken.Register(System.Action)
  commentId: M:System.Threading.CancellationToken.Register(System.Action)
  id: Register(System.Action)
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: Register(Action)
  nameWithType: CancellationToken.Register(Action)
  fullName: CancellationToken.Register(Action)
  type: Method
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Threading
  summary: Registers a delegate that will be called when this <xref href="System.Threading.CancellationToken"></xref> is canceled.
  remarks: "If this token is already in the canceled state, the delegate will be run immediately and synchronously. Any exception the delegate generates will be propagated out of this method call.  \n  \n The current <xref:System.Threading.ExecutionContext>, if one exists, will be captured along with the delegate and will be used when executing it."
  syntax:
    content: public System.Threading.CancellationTokenRegistration Register (Action callback);
    parameters:
    - id: callback
      type: System.Action
      description: The delegate to be executed when the <xref href="System.Threading.CancellationToken"></xref> is canceled.
    return:
      type: System.Threading.CancellationTokenRegistration
      description: The <xref href="System.Threading.CancellationTokenRegistration"></xref> instance that can be used to deregister the callback.
  overload: System.Threading.CancellationToken.Register*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The associated <xref href="System.Threading.CancellationTokenSource"></xref> has been disposed.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>callback</code> is null.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationToken.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CancellationToken.Register(System.Action,System.Boolean)
  commentId: M:System.Threading.CancellationToken.Register(System.Action,System.Boolean)
  id: Register(System.Action,System.Boolean)
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: Register(Action, Boolean)
  nameWithType: CancellationToken.Register(Action, Boolean)
  fullName: CancellationToken.Register(Action, Boolean)
  type: Method
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Threading
  summary: Registers a delegate that will be called when this <xref href="System.Threading.CancellationToken"></xref> is canceled.
  remarks: "If this token is already in the canceled state, the delegate will be run immediately and synchronously. Any exception the delegate generates will be propogated out of this method call.  \n  \n If `useSynchronizationContext` is `true`, the current <xref:System.Threading.ExecutionContext>, if one exists, will be captured along with the delegate and will be used when executing it."
  syntax:
    content: public System.Threading.CancellationTokenRegistration Register (Action callback, bool useSynchronizationContext);
    parameters:
    - id: callback
      type: System.Action
      description: The delegate to be executed when the <xref href="System.Threading.CancellationToken"></xref> is canceled.
    - id: useSynchronizationContext
      type: System.Boolean
      description: A value that indicates whether to capture the current <xref href="System.Threading.SynchronizationContext"></xref> and use it when invoking the <code>callback</code>.
    return:
      type: System.Threading.CancellationTokenRegistration
      description: The <xref href="System.Threading.CancellationTokenRegistration"></xref> instance that can be used to deregister the callback.
  overload: System.Threading.CancellationToken.Register*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The associated <xref href="System.Threading.CancellationTokenSource"></xref> has been disposed.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>callback</code> is null.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationToken.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object)
  commentId: M:System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object)
  id: Register(System.Action{System.Object},System.Object)
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: Register(Action<Object>, Object)
  nameWithType: CancellationToken.Register(Action<Object>, Object)
  fullName: CancellationToken.Register(Action<Object>, Object)
  type: Method
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Threading
  summary: Registers a delegate that will be called when this <xref href="System.Threading.CancellationToken"></xref> is canceled.
  remarks: "If this token is already in the canceled state, the delegate will be run immediately and synchronously. Any exception the delegate generates will be propogated out of this method call.  \n  \n The current <xref:System.Threading.ExecutionContext>, if one exists, will be captured along with the delegate and will be used when executing it."
  syntax:
    content: public System.Threading.CancellationTokenRegistration Register (Action<object> callback, object state);
    parameters:
    - id: callback
      type: System.Action{System.Object}
      description: The delegate to be executed when the <xref href="System.Threading.CancellationToken"></xref> is canceled.
    - id: state
      type: System.Object
      description: The state to pass to the <code>callback</code> when the delegate is invoked. This may be null.
    return:
      type: System.Threading.CancellationTokenRegistration
      description: The <xref href="System.Threading.CancellationTokenRegistration"></xref> instance that can be used to deregister the callback.
  overload: System.Threading.CancellationToken.Register*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The associated <xref href="System.Threading.CancellationTokenSource"></xref> has been disposed.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>callback</code> is null.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationToken.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object,System.Boolean)
  commentId: M:System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object,System.Boolean)
  id: Register(System.Action{System.Object},System.Object,System.Boolean)
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: Register(Action<Object>, Object, Boolean)
  nameWithType: CancellationToken.Register(Action<Object>, Object, Boolean)
  fullName: CancellationToken.Register(Action<Object>, Object, Boolean)
  type: Method
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Threading
  summary: Registers a delegate that will be called when this <xref href="System.Threading.CancellationToken"></xref> is canceled.
  remarks: "If this token is already in the canceled state, the delegate will be run immediately and synchronously. Any exception the delegate generates will be propogated out of this method call.  \n  \n The current <xref:System.Threading.ExecutionContext>, if one exists, will be captured along with the delegate and will be used when executing it."
  syntax:
    content: public System.Threading.CancellationTokenRegistration Register (Action<object> callback, object state, bool useSynchronizationContext);
    parameters:
    - id: callback
      type: System.Action{System.Object}
      description: The delegate to be executed when the <xref href="System.Threading.CancellationToken"></xref> is canceled.
    - id: state
      type: System.Object
      description: The state to pass to the <code>callback</code> when the delegate is invoked. This may be null.
    - id: useSynchronizationContext
      type: System.Boolean
      description: A Boolean value that indicates whether to capture the current <xref href="System.Threading.SynchronizationContext"></xref> and use it when invoking the <code>callback</code>.
    return:
      type: System.Threading.CancellationTokenRegistration
      description: The <xref href="System.Threading.CancellationTokenRegistration"></xref> instance that can be used to deregister the callback.
  overload: System.Threading.CancellationToken.Register*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The associated <xref href="System.Threading.CancellationTokenSource"></xref> has been disposed.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>callback</code> is null.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationToken.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CancellationToken.ThrowIfCancellationRequested
  commentId: M:System.Threading.CancellationToken.ThrowIfCancellationRequested
  id: ThrowIfCancellationRequested
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: ThrowIfCancellationRequested()
  nameWithType: CancellationToken.ThrowIfCancellationRequested()
  fullName: CancellationToken.ThrowIfCancellationRequested()
  type: Method
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Threading
  summary: Throws a <xref href="System.OperationCanceledException"></xref> if this token has had cancellation requested.
  remarks: "This method provides functionality equivalent to:  \n  \n C#  \n  \n```  \nif (token.IsCancellationRequested)   \n    throw new OperationCanceledException(token);  \n```  \n  \n```vb  \nIf token.IsCancellationRequested Then  \n    Throw New OperationCanceledException(token)  \nEnd If  \n```"
  syntax:
    content: public void ThrowIfCancellationRequested ();
    parameters: []
  overload: System.Threading.CancellationToken.ThrowIfCancellationRequested*
  exceptions:
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: The token has had cancellation requested.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The associated <xref href="System.Threading.CancellationTokenSource"></xref> has been disposed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationToken.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.CancellationToken.WaitHandle
  commentId: P:System.Threading.CancellationToken.WaitHandle
  id: WaitHandle
  parent: System.Threading.CancellationToken
  langs:
  - csharp
  name: WaitHandle
  nameWithType: CancellationToken.WaitHandle
  fullName: CancellationToken.WaitHandle
  type: Property
  assemblies:
  - System.Threading.Tasks
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Threading
  summary: Gets a <xref href="System.Threading.WaitHandle"></xref> that is signaled when the token is canceled.
  remarks: Accessing this property causes a <xref:System.Threading.WaitHandle> to be instantiated. It is preferable to only use this property when necessary, and to then dispose the associated <xref:System.Threading.CancellationTokenSource> instance at the earliest opportunity (disposing the source will dispose of this allocated handle). The handle should not be closed or disposed directly.
  syntax:
    content: public System.Threading.WaitHandle WaitHandle { get; }
    return:
      type: System.Threading.WaitHandle
      description: A <xref href="System.Threading.WaitHandle"></xref> that is signaled when the token is canceled.
  overload: System.Threading.CancellationToken.WaitHandle*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The associated <xref href="System.Threading.CancellationTokenSource"></xref> has been disposed.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationToken.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ObjectDisposedException
  parent: System
  isExternal: false
  name: ObjectDisposedException
  nameWithType: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.OperationCanceledException
  parent: System
  isExternal: false
  name: OperationCanceledException
  nameWithType: OperationCanceledException
  fullName: System.OperationCanceledException
- uid: System.Threading.CancellationToken.#ctor(System.Boolean)
  parent: System.Threading.CancellationToken
  isExternal: false
  name: CancellationToken(Boolean)
  nameWithType: CancellationToken.CancellationToken(Boolean)
  fullName: CancellationToken.CancellationToken(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.CancellationToken.CanBeCanceled
  parent: System.Threading.CancellationToken
  isExternal: false
  name: CanBeCanceled
  nameWithType: CancellationToken.CanBeCanceled
  fullName: CancellationToken.CanBeCanceled
- uid: System.Threading.CancellationToken.Equals(System.Object)
  parent: System.Threading.CancellationToken
  isExternal: false
  name: Equals(Object)
  nameWithType: CancellationToken.Equals(Object)
  fullName: CancellationToken.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.CancellationToken.Equals(System.Threading.CancellationToken)
  parent: System.Threading.CancellationToken
  isExternal: false
  name: Equals(CancellationToken)
  nameWithType: CancellationToken.Equals(CancellationToken)
  fullName: CancellationToken.Equals(CancellationToken)
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.CancellationToken.GetHashCode
  parent: System.Threading.CancellationToken
  isExternal: false
  name: GetHashCode()
  nameWithType: CancellationToken.GetHashCode()
  fullName: CancellationToken.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.CancellationToken.IsCancellationRequested
  parent: System.Threading.CancellationToken
  isExternal: false
  name: IsCancellationRequested
  nameWithType: CancellationToken.IsCancellationRequested
  fullName: CancellationToken.IsCancellationRequested
- uid: System.Threading.CancellationToken.None
  parent: System.Threading.CancellationToken
  isExternal: false
  name: None
  nameWithType: CancellationToken.None
  fullName: CancellationToken.None
- uid: System.Threading.CancellationToken.op_Equality(System.Threading.CancellationToken,System.Threading.CancellationToken)
  parent: System.Threading.CancellationToken
  isExternal: false
  name: op_Equality(CancellationToken, CancellationToken)
  nameWithType: CancellationToken.op_Equality(CancellationToken, CancellationToken)
  fullName: CancellationToken.op_Equality(CancellationToken, CancellationToken)
- uid: System.Threading.CancellationToken.op_Inequality(System.Threading.CancellationToken,System.Threading.CancellationToken)
  parent: System.Threading.CancellationToken
  isExternal: false
  name: op_Inequality(CancellationToken, CancellationToken)
  nameWithType: CancellationToken.op_Inequality(CancellationToken, CancellationToken)
  fullName: CancellationToken.op_Inequality(CancellationToken, CancellationToken)
- uid: System.Threading.CancellationToken.Register(System.Action)
  parent: System.Threading.CancellationToken
  isExternal: false
  name: Register(Action)
  nameWithType: CancellationToken.Register(Action)
  fullName: CancellationToken.Register(Action)
- uid: System.Threading.CancellationTokenRegistration
  parent: System.Threading
  isExternal: false
  name: CancellationTokenRegistration
  nameWithType: CancellationTokenRegistration
  fullName: System.Threading.CancellationTokenRegistration
- uid: System.Action
  parent: System
  isExternal: false
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Threading.CancellationToken.Register(System.Action,System.Boolean)
  parent: System.Threading.CancellationToken
  isExternal: false
  name: Register(Action, Boolean)
  nameWithType: CancellationToken.Register(Action, Boolean)
  fullName: CancellationToken.Register(Action, Boolean)
- uid: System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object)
  parent: System.Threading.CancellationToken
  isExternal: false
  name: Register(Action<Object>, Object)
  nameWithType: CancellationToken.Register(Action<Object>, Object)
  fullName: CancellationToken.Register(Action<Object>, Object)
- uid: System.Action`1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
- uid: System.Action{System.Object}
  parent: System
  isExternal: false
  name: Action<Object>
  nameWithType: Action<Object>
  fullName: System.Action<System.Object>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object,System.Boolean)
  parent: System.Threading.CancellationToken
  isExternal: false
  name: Register(Action<Object>, Object, Boolean)
  nameWithType: CancellationToken.Register(Action<Object>, Object, Boolean)
  fullName: CancellationToken.Register(Action<Object>, Object, Boolean)
- uid: System.Threading.CancellationToken.ThrowIfCancellationRequested
  parent: System.Threading.CancellationToken
  isExternal: false
  name: ThrowIfCancellationRequested()
  nameWithType: CancellationToken.ThrowIfCancellationRequested()
  fullName: CancellationToken.ThrowIfCancellationRequested()
- uid: System.Threading.CancellationToken.WaitHandle
  parent: System.Threading.CancellationToken
  isExternal: false
  name: WaitHandle
  nameWithType: CancellationToken.WaitHandle
  fullName: CancellationToken.WaitHandle
- uid: System.Threading.WaitHandle
  parent: System.Threading
  isExternal: false
  name: WaitHandle
  nameWithType: WaitHandle
  fullName: System.Threading.WaitHandle
- uid: System.Threading.CancellationToken.#ctor*
  parent: System.Threading.CancellationToken
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken.CancellationToken
  fullName: CancellationToken.CancellationToken
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationToken.xml
- uid: System.Threading.CancellationToken.CanBeCanceled*
  parent: System.Threading.CancellationToken
  isExternal: false
  name: CanBeCanceled
  nameWithType: CancellationToken.CanBeCanceled
  fullName: CancellationToken.CanBeCanceled
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationToken.xml
- uid: System.Threading.CancellationToken.Equals*
  parent: System.Threading.CancellationToken
  isExternal: false
  name: Equals
  nameWithType: CancellationToken.Equals
  fullName: CancellationToken.Equals
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationToken.xml
- uid: System.Threading.CancellationToken.GetHashCode*
  parent: System.Threading.CancellationToken
  isExternal: false
  name: GetHashCode
  nameWithType: CancellationToken.GetHashCode
  fullName: CancellationToken.GetHashCode
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationToken.xml
- uid: System.Threading.CancellationToken.IsCancellationRequested*
  parent: System.Threading.CancellationToken
  isExternal: false
  name: IsCancellationRequested
  nameWithType: CancellationToken.IsCancellationRequested
  fullName: CancellationToken.IsCancellationRequested
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationToken.xml
- uid: System.Threading.CancellationToken.None*
  parent: System.Threading.CancellationToken
  isExternal: false
  name: None
  nameWithType: CancellationToken.None
  fullName: CancellationToken.None
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationToken.xml
- uid: System.Threading.CancellationToken.op_Equality*
  parent: System.Threading.CancellationToken
  isExternal: false
  name: op_Equality
  nameWithType: CancellationToken.op_Equality
  fullName: CancellationToken.op_Equality
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationToken.xml
- uid: System.Threading.CancellationToken.op_Inequality*
  parent: System.Threading.CancellationToken
  isExternal: false
  name: op_Inequality
  nameWithType: CancellationToken.op_Inequality
  fullName: CancellationToken.op_Inequality
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationToken.xml
- uid: System.Threading.CancellationToken.Register*
  parent: System.Threading.CancellationToken
  isExternal: false
  name: Register
  nameWithType: CancellationToken.Register
  fullName: CancellationToken.Register
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationToken.xml
- uid: System.Threading.CancellationToken.ThrowIfCancellationRequested*
  parent: System.Threading.CancellationToken
  isExternal: false
  name: ThrowIfCancellationRequested
  nameWithType: CancellationToken.ThrowIfCancellationRequested
  fullName: CancellationToken.ThrowIfCancellationRequested
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationToken.xml
- uid: System.Threading.CancellationToken.WaitHandle*
  parent: System.Threading.CancellationToken
  isExternal: false
  name: WaitHandle
  nameWithType: CancellationToken.WaitHandle
  fullName: CancellationToken.WaitHandle
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/CancellationToken.xml
