{"nodes":[{"content":"Provides properties for getting information about the computer's memory, loaded assemblies, name, and operating system.","nodes":[{"pos":[0,119],"content":"Provides properties for getting information about the computer's memory, loaded assemblies, name, and operating system.","nodes":[{"content":"Provides properties for getting information about the computer's memory, loaded assemblies, name, and operating system.","pos":[0,119]}]}],"pos":[974,1094],"yaml":true},{"content":"The properties exposed by the `My.Computer.Info` object return information about the computer from which the application is deployed, as determined at run time. Typically, this data differs from what was available on the development computer.","nodes":[{"pos":[0,242],"content":"The properties exposed by the `My.Computer.Info` object return information about the computer from which the application is deployed, as determined at run time. Typically, this data differs from what was available on the development computer.","nodes":[{"content":"The properties exposed by the <ph id=\"ph1\">`My.Computer.Info`</ph> object return information about the computer from which the application is deployed, as determined at run time.","pos":[0,160],"source":"The properties exposed by the `My.Computer.Info` object return information about the computer from which the application is deployed, as determined at run time."},{"content":"Typically, this data differs from what was available on the development computer.","pos":[161,242]}]}],"pos":[1105,1348],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.Devices.ComputerInfo\"></xref> class.","nodes":[{"pos":[0,104],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Devices.ComputerInfo\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.Devices.ComputerInfo\"></xref> class."}],"pos":[3000,3105],"yaml":true},{"content":"Gets the total amount of free physical memory for the computer.","nodes":[{"pos":[0,63],"content":"Gets the total amount of free physical memory for the computer.","nodes":[{"content":"Gets the total amount of free physical memory for the computer.","pos":[0,63]}]}],"pos":[4276,4340],"yaml":true},{"content":"The `My.Computer.Info.AvailablePhysicalMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista.","nodes":[{"pos":[0,163],"content":"The <ph id=\"ph1\">`My.Computer.Info.AvailablePhysicalMemory`</ph> property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista.","source":"The `My.Computer.Info.AvailablePhysicalMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista."}],"pos":[4351,4515],"yaml":true,"extradata":"MT"},{"content":"A `ULong` containing the number of bytes of free physical memory for the computer.","nodes":[{"pos":[0,82],"content":"A <ph id=\"ph1\">`ULong`</ph> containing the number of bytes of free physical memory for the computer.","source":"A `ULong` containing the number of bytes of free physical memory for the computer."}],"pos":[5046,5129],"yaml":true},{"content":"The application cannot obtain the memory status.","nodes":[{"pos":[0,48],"content":"The application cannot obtain the memory status.","nodes":[{"content":"The application cannot obtain the memory status.","pos":[0,48]}]}],"pos":[5341,5390],"yaml":true},{"content":"Gets the total amount of the computer's free virtual address space.","nodes":[{"pos":[0,67],"content":"Gets the total amount of the computer's free virtual address space.","nodes":[{"content":"Gets the total amount of the computer's free virtual address space.","pos":[0,67]}]}],"pos":[6500,6568],"yaml":true},{"content":"The `My.Computer.Info.AvailableVirtualMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista.","nodes":[{"pos":[0,162],"content":"The <ph id=\"ph1\">`My.Computer.Info.AvailableVirtualMemory`</ph> property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista.","source":"The `My.Computer.Info.AvailableVirtualMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista."}],"pos":[6579,6742],"yaml":true,"extradata":"MT"},{"content":"A `ULong` containing the number of bytes of the computer's free virtual address space.","nodes":[{"pos":[0,86],"content":"A <ph id=\"ph1\">`ULong`</ph> containing the number of bytes of the computer's free virtual address space.","source":"A `ULong` containing the number of bytes of the computer's free virtual address space."}],"pos":[7270,7357],"yaml":true},{"content":"The application cannot obtain the memory status.","nodes":[{"pos":[0,48],"content":"The application cannot obtain the memory status.","nodes":[{"content":"The application cannot obtain the memory status.","pos":[0,48]}]}],"pos":[7568,7617],"yaml":true},{"content":"Gets the current UI culture installed with the operating system.","nodes":[{"pos":[0,64],"content":"Gets the current UI culture installed with the operating system.","nodes":[{"content":"Gets the current UI culture installed with the operating system.","pos":[0,64]}]}],"pos":[8703,8768],"yaml":true},{"content":"The `My.Computer.Info.InstalledUICulture` property has the same behavior as the <xref:System.Globalization.CultureInfo.InstalledUICulture%2A> property.  \n  \n In a localized operating system, such as Japanese Windows 2000 Professional, this property returns the culture of the operating system.","nodes":[{"pos":[0,151],"content":"The <ph id=\"ph1\">`My.Computer.Info.InstalledUICulture`</ph> property has the same behavior as the <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.InstalledUICulture%2A&gt;</ph> property.","source":"The `My.Computer.Info.InstalledUICulture` property has the same behavior as the <xref:System.Globalization.CultureInfo.InstalledUICulture%2A> property."},{"pos":[158,293],"content":"In a localized operating system, such as Japanese Windows 2000 Professional, this property returns the culture of the operating system.","nodes":[{"content":"In a localized operating system, such as Japanese Windows 2000 Professional, this property returns the culture of the operating system.","pos":[0,135]}]}],"pos":[8779,9077],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Globalization.CultureInfo\"></xref> object represents the UI culture installed on the computer.","nodes":[{"pos":[0,115],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CultureInfo\"&gt;&lt;/xref&gt;</ph> object represents the UI culture installed on the computer.","source":"A <xref href=\"System.Globalization.CultureInfo\"></xref> object represents the UI culture installed on the computer."}],"pos":[9514,9630],"yaml":true},{"content":"Gets the full operating system name.","nodes":[{"pos":[0,36],"content":"Gets the full operating system name.","nodes":[{"content":"Gets the full operating system name.","pos":[0,36]}]}],"pos":[10653,10690],"yaml":true},{"content":"This property returns detailed information about the operating system name if Windows Management Instrumentation (WMI) is installed on the computer. Otherwise, this property returns the same string as the `My.Computer.Info.OSPlatform` property, which provides less detailed information than WMI can provide.","nodes":[{"pos":[0,307],"content":"This property returns detailed information about the operating system name if Windows Management Instrumentation (WMI) is installed on the computer. Otherwise, this property returns the same string as the `My.Computer.Info.OSPlatform` property, which provides less detailed information than WMI can provide.","nodes":[{"content":"This property returns detailed information about the operating system name if Windows Management Instrumentation (WMI) is installed on the computer.","pos":[0,148]},{"content":"Otherwise, this property returns the same string as the <ph id=\"ph1\">`My.Computer.Info.OSPlatform`</ph> property, which provides less detailed information than WMI can provide.","pos":[149,307],"source":" Otherwise, this property returns the same string as the `My.Computer.Info.OSPlatform` property, which provides less detailed information than WMI can provide."}]}],"pos":[10701,11009],"yaml":true,"extradata":"MT"},{"content":"A `String` containing the operating-system name.","nodes":[{"pos":[0,48],"content":"A <ph id=\"ph1\">`String`</ph> containing the operating-system name.","source":"A `String` containing the operating-system name."}],"pos":[11443,11492],"yaml":true},{"content":"The calling code does not have full trust.","nodes":[{"pos":[0,42],"content":"The calling code does not have full trust.","nodes":[{"content":"The calling code does not have full trust.","pos":[0,42]}]}],"pos":[11685,11728],"yaml":true},{"content":"Gets the platform identifier for the operating system of the computer.","nodes":[{"pos":[0,70],"content":"Gets the platform identifier for the operating system of the computer.","nodes":[{"content":"Gets the platform identifier for the operating system of the computer.","pos":[0,70]}]}],"pos":[12727,12798],"yaml":true},{"content":"The `My.Computer.Info.OSPlatform` property provides functionality similar to the <xref:System.OperatingSystem.Platform%2A> property of the object returned by the <xref:System.Environment.OSVersion%2A> property.","nodes":[{"pos":[0,210],"content":"The <ph id=\"ph1\">`My.Computer.Info.OSPlatform`</ph> property provides functionality similar to the <ph id=\"ph2\">&lt;xref:System.OperatingSystem.Platform%2A&gt;</ph> property of the object returned by the <ph id=\"ph3\">&lt;xref:System.Environment.OSVersion%2A&gt;</ph> property.","source":"The `My.Computer.Info.OSPlatform` property provides functionality similar to the <xref:System.OperatingSystem.Platform%2A> property of the object returned by the <xref:System.Environment.OSVersion%2A> property."}],"pos":[12809,13020],"yaml":true,"extradata":"MT"},{"content":"A `String` containing the platform identifier for the operating system of the computer, chosen from the member names of the <xref href=\"System.PlatformID\"></xref> enumeration.","nodes":[{"pos":[0,175],"content":"A <ph id=\"ph1\">`String`</ph> containing the platform identifier for the operating system of the computer, chosen from the member names of the <ph id=\"ph2\">&lt;xref href=\"System.PlatformID\"&gt;&lt;/xref&gt;</ph> enumeration.","source":"A `String` containing the platform identifier for the operating system of the computer, chosen from the member names of the <xref href=\"System.PlatformID\"></xref> enumeration."}],"pos":[13398,13574],"yaml":true},{"content":"The application cannot obtain the operating-system platform information.","nodes":[{"pos":[0,72],"content":"The application cannot obtain the operating-system platform information.","nodes":[{"content":"The application cannot obtain the operating-system platform information.","pos":[0,72]}]}],"pos":[13763,13836],"yaml":true},{"content":"Gets the version of the computer's operating system.","nodes":[{"pos":[0,52],"content":"Gets the version of the computer's operating system.","nodes":[{"content":"Gets the version of the computer's operating system.","pos":[0,52]}]}],"pos":[14761,14814],"yaml":true},{"content":"The `My.Computer.Info.OSVersion` property formats the version as \"major.minor.build.revision\".  \n  \n The `My.Computer.Info.OSVersion` property provides functionality similar to the <xref:System.OperatingSystem.Version%2A> property of the object returned by the <xref:System.Environment.OSVersion%2A> property.","nodes":[{"pos":[0,94],"content":"The <ph id=\"ph1\">`My.Computer.Info.OSVersion`</ph> property formats the version as \"major.minor.build.revision\".","source":"The `My.Computer.Info.OSVersion` property formats the version as \"major.minor.build.revision\"."},{"pos":[101,309],"content":"The <ph id=\"ph1\">`My.Computer.Info.OSVersion`</ph> property provides functionality similar to the <ph id=\"ph2\">&lt;xref:System.OperatingSystem.Version%2A&gt;</ph> property of the object returned by the <ph id=\"ph3\">&lt;xref:System.Environment.OSVersion%2A&gt;</ph> property.","source":"The `My.Computer.Info.OSVersion` property provides functionality similar to the <xref:System.OperatingSystem.Version%2A> property of the object returned by the <xref:System.Environment.OSVersion%2A> property."}],"pos":[14825,15141],"yaml":true,"extradata":"MT"},{"content":"A `String` containing the current version number of the operating system.","nodes":[{"pos":[0,73],"content":"A <ph id=\"ph1\">`String`</ph> containing the current version number of the operating system.","source":"A `String` containing the current version number of the operating system."}],"pos":[15516,15590],"yaml":true},{"content":"The application cannot obtain the operating-system version information.","nodes":[{"pos":[0,71],"content":"The application cannot obtain the operating-system version information.","nodes":[{"content":"The application cannot obtain the operating-system version information.","pos":[0,71]}]}],"pos":[15778,15850],"yaml":true},{"content":"Gets the total amount of physical memory for the computer.","nodes":[{"pos":[0,58],"content":"Gets the total amount of physical memory for the computer.","nodes":[{"content":"Gets the total amount of physical memory for the computer.","pos":[0,58]}]}],"pos":[16835,16894],"yaml":true},{"content":"The `My.Computer.Info.TotalPhysicalMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista..","nodes":[{"pos":[0,160],"content":"The <ph id=\"ph1\">`My.Computer.Info.TotalPhysicalMemory`</ph> property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista..","source":"The `My.Computer.Info.TotalPhysicalMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista.."}],"pos":[16905,17066],"yaml":true,"extradata":"MT"},{"content":"A `ULong` containing the number of bytes of physical memory for the computer.","nodes":[{"pos":[0,77],"content":"A <ph id=\"ph1\">`ULong`</ph> containing the number of bytes of physical memory for the computer.","source":"A `ULong` containing the number of bytes of physical memory for the computer."}],"pos":[17585,17663],"yaml":true},{"content":"The application cannot obtain the memory status.","nodes":[{"pos":[0,48],"content":"The application cannot obtain the memory status.","nodes":[{"content":"The application cannot obtain the memory status.","pos":[0,48]}]}],"pos":[17871,17920],"yaml":true},{"content":"Gets the total amount of virtual address space available for the computer.","nodes":[{"pos":[0,74],"content":"Gets the total amount of virtual address space available for the computer.","nodes":[{"content":"Gets the total amount of virtual address space available for the computer.","pos":[0,74]}]}],"pos":[19006,19081],"yaml":true},{"content":"The `My.Computer.Info.TotalVirtualMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista..","nodes":[{"pos":[0,159],"content":"The <ph id=\"ph1\">`My.Computer.Info.TotalVirtualMemory`</ph> property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista..","source":"The `My.Computer.Info.TotalVirtualMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista.."}],"pos":[19092,19252],"yaml":true,"extradata":"MT"},{"content":"A `ULong` containing the number of bytes of virtual address space available for the computer.","nodes":[{"pos":[0,93],"content":"A <ph id=\"ph1\">`ULong`</ph> containing the number of bytes of virtual address space available for the computer.","source":"A `ULong` containing the number of bytes of virtual address space available for the computer."}],"pos":[19768,19862],"yaml":true},{"content":"The application cannot obtain the memory status.","nodes":[{"pos":[0,48],"content":"The application cannot obtain the memory status.","nodes":[{"content":"The application cannot obtain the memory status.","pos":[0,48]}]}],"pos":[20069,20118],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo\n  commentId: T:Microsoft.VisualBasic.Devices.ComputerInfo\n  id: ComputerInfo\n  children:\n  - Microsoft.VisualBasic.Devices.ComputerInfo.#ctor\n  - Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory\n  - Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory\n  - Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture\n  - Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName\n  - Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform\n  - Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion\n  - Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory\n  - Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory\n  langs:\n  - csharp\n  name: ComputerInfo\n  nameWithType: ComputerInfo\n  fullName: Microsoft.VisualBasic.Devices.ComputerInfo\n  type: Class\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Provides properties for getting information about the computer's memory, loaded assemblies, name, and operating system.\n  remarks: The properties exposed by the `My.Computer.Info` object return information about the computer from which the application is deployed, as determined at run time. Typically, this data differs from what was available on the development computer.\n  example:\n  - \"This example uses the `My.Computer.Info.AvailablePhysicalMemory` property to display the amount of available physical memory for the computer on which the code runs.  \\n  \\n [!code-vb[VbVbalrMyComputer#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#2)]\"\n  syntax:\n    content: public class ComputerInfo\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/ComputerInfo.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.#ctor\n  commentId: M:Microsoft.VisualBasic.Devices.ComputerInfo.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  langs:\n  - csharp\n  name: ComputerInfo()\n  nameWithType: ComputerInfo.ComputerInfo()\n  fullName: ComputerInfo.ComputerInfo()\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.Devices.ComputerInfo\"></xref> class.\n  syntax:\n    content: public ComputerInfo ();\n    parameters: []\n  overload: Microsoft.VisualBasic.Devices.ComputerInfo.#ctor*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/ComputerInfo.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory\n  commentId: P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory\n  id: AvailablePhysicalMemory\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  langs:\n  - csharp\n  name: AvailablePhysicalMemory\n  nameWithType: ComputerInfo.AvailablePhysicalMemory\n  fullName: ComputerInfo.AvailablePhysicalMemory\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets the total amount of free physical memory for the computer.\n  remarks: The `My.Computer.Info.AvailablePhysicalMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista.\n  example:\n  - \"This example uses the `My.Computer.Info.AvailablePhysicalMemory` property to display the amount of available physical memory for the computer on which the code runs.  \\n  \\n [!code-vb[VbVbalrMyComputer#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#2)]\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      [get: System.Security.SecuritySafeCritical]\n\n      public ulong AvailablePhysicalMemory { get; }\n    return:\n      type: System.UInt64\n      description: A `ULong` containing the number of bytes of free physical memory for the computer.\n  overload: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: The application cannot obtain the memory status.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  - type: 'get: System.Security.SecuritySafeCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/ComputerInfo.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory\n  commentId: P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory\n  id: AvailableVirtualMemory\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  langs:\n  - csharp\n  name: AvailableVirtualMemory\n  nameWithType: ComputerInfo.AvailableVirtualMemory\n  fullName: ComputerInfo.AvailableVirtualMemory\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets the total amount of the computer's free virtual address space.\n  remarks: The `My.Computer.Info.AvailableVirtualMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista.\n  example:\n  - \"This example uses the `My.Computer.Info.AvailableVirtualMemory` property to display the amount of available virtual memory for the computer on which the code runs.  \\n  \\n [!code-vb[VbVbalrMyComputer#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#3)]\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      [get: System.Security.SecuritySafeCritical]\n\n      public ulong AvailableVirtualMemory { get; }\n    return:\n      type: System.UInt64\n      description: A `ULong` containing the number of bytes of the computer's free virtual address space.\n  overload: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: The application cannot obtain the memory status.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  - type: 'get: System.Security.SecuritySafeCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/ComputerInfo.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture\n  commentId: P:Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture\n  id: InstalledUICulture\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  langs:\n  - csharp\n  name: InstalledUICulture\n  nameWithType: ComputerInfo.InstalledUICulture\n  fullName: ComputerInfo.InstalledUICulture\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets the current UI culture installed with the operating system.\n  remarks: \"The `My.Computer.Info.InstalledUICulture` property has the same behavior as the <xref:System.Globalization.CultureInfo.InstalledUICulture%2A> property.  \\n  \\n In a localized operating system, such as Japanese Windows 2000 Professional, this property returns the culture of the operating system.\"\n  example:\n  - \"This example uses the `My.Computer.Info.InstalledUICulture` property to display the name of the operating system's UI culture.  \\n  \\n [!code-vb[VbVbalrMyComputer#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#4)]\"\n  syntax:\n    content: public System.Globalization.CultureInfo InstalledUICulture { get; }\n    return:\n      type: System.Globalization.CultureInfo\n      description: A <xref href=\"System.Globalization.CultureInfo\"></xref> object represents the UI culture installed on the computer.\n  overload: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/ComputerInfo.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName\n  commentId: P:Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName\n  id: OSFullName\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  langs:\n  - csharp\n  name: OSFullName\n  nameWithType: ComputerInfo.OSFullName\n  fullName: ComputerInfo.OSFullName\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets the full operating system name.\n  remarks: This property returns detailed information about the operating system name if Windows Management Instrumentation (WMI) is installed on the computer. Otherwise, this property returns the same string as the `My.Computer.Info.OSPlatform` property, which provides less detailed information than WMI can provide.\n  example:\n  - \"This example uses the `My.Computer.Info.OSFullName` property to display the name of the computer's operating system.  \\n  \\n [!code-vb[VbVbalrMyComputer#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#5)]\"\n  syntax:\n    content: >-\n      [get: System.Security.SecuritySafeCritical]\n\n      public string OSFullName { get; }\n    return:\n      type: System.String\n      description: A `String` containing the operating-system name.\n  overload: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The calling code does not have full trust.\n  attributes:\n  - type: 'get: System.Security.SecuritySafeCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/ComputerInfo.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform\n  commentId: P:Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform\n  id: OSPlatform\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  langs:\n  - csharp\n  name: OSPlatform\n  nameWithType: ComputerInfo.OSPlatform\n  fullName: ComputerInfo.OSPlatform\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets the platform identifier for the operating system of the computer.\n  remarks: The `My.Computer.Info.OSPlatform` property provides functionality similar to the <xref:System.OperatingSystem.Platform%2A> property of the object returned by the <xref:System.Environment.OSVersion%2A> property.\n  example:\n  - \"This example uses the `My.Computer.Info.OSPlatform` property to display the platform of the computer's operating system.  \\n  \\n [!code-vb[VbVbalrMyComputer#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#6)]\"\n  syntax:\n    content: public string OSPlatform { get; }\n    return:\n      type: System.String\n      description: A `String` containing the platform identifier for the operating system of the computer, chosen from the member names of the <xref href=\"System.PlatformID\"></xref> enumeration.\n  overload: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform*\n  exceptions:\n  - type: System.ExecutionEngineException\n    commentId: T:System.ExecutionEngineException\n    description: The application cannot obtain the operating-system platform information.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/ComputerInfo.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion\n  commentId: P:Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion\n  id: OSVersion\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  langs:\n  - csharp\n  name: OSVersion\n  nameWithType: ComputerInfo.OSVersion\n  fullName: ComputerInfo.OSVersion\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets the version of the computer's operating system.\n  remarks: \"The `My.Computer.Info.OSVersion` property formats the version as \\\"major.minor.build.revision\\\".  \\n  \\n The `My.Computer.Info.OSVersion` property provides functionality similar to the <xref:System.OperatingSystem.Version%2A> property of the object returned by the <xref:System.Environment.OSVersion%2A> property.\"\n  example:\n  - \"This example uses the `My.Computer.Info.OSVersion` property to display the version of the computer's operating system.  \\n  \\n [!code-vb[VbVbalrMyComputer#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#7)]\"\n  syntax:\n    content: public string OSVersion { get; }\n    return:\n      type: System.String\n      description: A `String` containing the current version number of the operating system.\n  overload: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion*\n  exceptions:\n  - type: System.ExecutionEngineException\n    commentId: T:System.ExecutionEngineException\n    description: The application cannot obtain the operating-system version information.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/ComputerInfo.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory\n  commentId: P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory\n  id: TotalPhysicalMemory\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  langs:\n  - csharp\n  name: TotalPhysicalMemory\n  nameWithType: ComputerInfo.TotalPhysicalMemory\n  fullName: ComputerInfo.TotalPhysicalMemory\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets the total amount of physical memory for the computer.\n  remarks: The `My.Computer.Info.TotalPhysicalMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista..\n  example:\n  - \"This example uses the `My.Computer.Info.TotalPhysicalMemory` property to display the total amount of physical memory for the computer on which the code runs.  \\n  \\n [!code-vb[VbVbalrMyComputer#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#8)]\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      [get: System.Security.SecuritySafeCritical]\n\n      public ulong TotalPhysicalMemory { get; }\n    return:\n      type: System.UInt64\n      description: A `ULong` containing the number of bytes of physical memory for the computer.\n  overload: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: The application cannot obtain the memory status.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  - type: 'get: System.Security.SecuritySafeCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/ComputerInfo.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory\n  commentId: P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory\n  id: TotalVirtualMemory\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  langs:\n  - csharp\n  name: TotalVirtualMemory\n  nameWithType: ComputerInfo.TotalVirtualMemory\n  fullName: ComputerInfo.TotalVirtualMemory\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets the total amount of virtual address space available for the computer.\n  remarks: The `My.Computer.Info.TotalVirtualMemory` property requires Windows XP, Windows 2000 Professional, Windows Server 2003, Windows 2000 Server, or Windows Vista..\n  example:\n  - \"This example uses the `My.Computer.Info.TotalVirtualMemory` property to display the total amount of virtual memory for the computer on which the code runs.  \\n  \\n [!code-vb[VbVbalrMyComputer#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class1.vb#9)]\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      [get: System.Security.SecuritySafeCritical]\n\n      public ulong TotalVirtualMemory { get; }\n    return:\n      type: System.UInt64\n      description: A `ULong` containing the number of bytes of virtual address space available for the computer.\n  overload: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory*\n  exceptions:\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: The application cannot obtain the memory status.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  - type: 'get: System.Security.SecuritySafeCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/ComputerInfo.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.Win32Exception\n  parent: System.ComponentModel\n  isExternal: false\n  name: Win32Exception\n  nameWithType: Win32Exception\n  fullName: System.ComponentModel.Win32Exception\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: System.ExecutionEngineException\n  parent: System\n  isExternal: false\n  name: ExecutionEngineException\n  nameWithType: ExecutionEngineException\n  fullName: System.ExecutionEngineException\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.#ctor\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: ComputerInfo()\n  nameWithType: ComputerInfo.ComputerInfo()\n  fullName: ComputerInfo.ComputerInfo()\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: AvailablePhysicalMemory\n  nameWithType: ComputerInfo.AvailablePhysicalMemory\n  fullName: ComputerInfo.AvailablePhysicalMemory\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  nameWithType: UInt64\n  fullName: System.UInt64\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: AvailableVirtualMemory\n  nameWithType: ComputerInfo.AvailableVirtualMemory\n  fullName: ComputerInfo.AvailableVirtualMemory\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: InstalledUICulture\n  nameWithType: ComputerInfo.InstalledUICulture\n  fullName: ComputerInfo.InstalledUICulture\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: OSFullName\n  nameWithType: ComputerInfo.OSFullName\n  fullName: ComputerInfo.OSFullName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: OSPlatform\n  nameWithType: ComputerInfo.OSPlatform\n  fullName: ComputerInfo.OSPlatform\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: OSVersion\n  nameWithType: ComputerInfo.OSVersion\n  fullName: ComputerInfo.OSVersion\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: TotalPhysicalMemory\n  nameWithType: ComputerInfo.TotalPhysicalMemory\n  fullName: ComputerInfo.TotalPhysicalMemory\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: TotalVirtualMemory\n  nameWithType: ComputerInfo.TotalVirtualMemory\n  fullName: ComputerInfo.TotalVirtualMemory\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.#ctor*\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: ComputerInfo\n  nameWithType: ComputerInfo.ComputerInfo\n  fullName: ComputerInfo.ComputerInfo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/ComputerInfo.xml\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory*\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: AvailablePhysicalMemory\n  nameWithType: ComputerInfo.AvailablePhysicalMemory\n  fullName: ComputerInfo.AvailablePhysicalMemory\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/ComputerInfo.xml\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory*\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: AvailableVirtualMemory\n  nameWithType: ComputerInfo.AvailableVirtualMemory\n  fullName: ComputerInfo.AvailableVirtualMemory\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/ComputerInfo.xml\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture*\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: InstalledUICulture\n  nameWithType: ComputerInfo.InstalledUICulture\n  fullName: ComputerInfo.InstalledUICulture\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/ComputerInfo.xml\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName*\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: OSFullName\n  nameWithType: ComputerInfo.OSFullName\n  fullName: ComputerInfo.OSFullName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/ComputerInfo.xml\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform*\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: OSPlatform\n  nameWithType: ComputerInfo.OSPlatform\n  fullName: ComputerInfo.OSPlatform\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/ComputerInfo.xml\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion*\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: OSVersion\n  nameWithType: ComputerInfo.OSVersion\n  fullName: ComputerInfo.OSVersion\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/ComputerInfo.xml\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory*\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: TotalPhysicalMemory\n  nameWithType: ComputerInfo.TotalPhysicalMemory\n  fullName: ComputerInfo.TotalPhysicalMemory\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/ComputerInfo.xml\n- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory*\n  parent: Microsoft.VisualBasic.Devices.ComputerInfo\n  isExternal: false\n  name: TotalVirtualMemory\n  nameWithType: ComputerInfo.TotalVirtualMemory\n  fullName: ComputerInfo.TotalVirtualMemory\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/ComputerInfo.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}