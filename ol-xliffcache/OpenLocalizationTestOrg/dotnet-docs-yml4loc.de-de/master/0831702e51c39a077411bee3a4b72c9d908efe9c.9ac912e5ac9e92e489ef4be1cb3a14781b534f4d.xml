{"nodes":[{"content":"Represents an object that monitors changes to files.","nodes":[{"pos":[0,52],"content":"Represents an object that monitors changes to files.","nodes":[{"content":"Represents an object that monitors changes to files.","pos":[0,52]}]}],"pos":[575,628],"yaml":true},{"content":"The <xref:System.Runtime.Caching.FileChangeMonitor> class is a base <xref:System.Runtime.Caching.ChangeMonitor> type for classes that monitor changes to files. To create a monitor for changes in the file system, you can inherit from this class.","nodes":[{"pos":[0,244],"content":"The <xref:System.Runtime.Caching.FileChangeMonitor> class is a base <xref:System.Runtime.Caching.ChangeMonitor> type for classes that monitor changes to files. To create a monitor for changes in the file system, you can inherit from this class.","nodes":[{"content":"The <xref:System.Runtime.Caching.FileChangeMonitor> class is a base <xref:System.Runtime.Caching.ChangeMonitor> type for classes that monitor changes to files. To create a monitor for changes in the file system, you can inherit from this class.","pos":[0,244],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.FileChangeMonitor&gt;</ph> class is a base <ph id=\"ph2\">&lt;xref:System.Runtime.Caching.ChangeMonitor&gt;</ph> type for classes that monitor changes to files.","pos":[0,159],"source":"The <xref:System.Runtime.Caching.FileChangeMonitor> class is a base <xref:System.Runtime.Caching.ChangeMonitor> type for classes that monitor changes to files."},{"content":"To create a monitor for changes in the file system, you can inherit from this class.","pos":[160,244]}]}]}],"pos":[639,884],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Caching.FileChangeMonitor\"></xref> class. This constructor is called from constructors in derived classes in order to initialize the base class.","nodes":[{"pos":[0,205],"content":"Initializes a new instance of the <xref href=\"System.Runtime.Caching.FileChangeMonitor\"></xref> class. This constructor is called from constructors in derived classes in order to initialize the base class.","nodes":[{"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Caching.FileChangeMonitor\"&gt;&lt;/xref&gt;</ph> class.","pos":[0,102],"source":"Initializes a new instance of the <xref href=\"System.Runtime.Caching.FileChangeMonitor\"></xref> class."},{"content":"This constructor is called from constructors in derived classes in order to initialize the base class.","pos":[103,205]}]}],"pos":[3684,3890],"yaml":true},{"content":"Gets a collection that contains the paths of files that are monitored for changes.","nodes":[{"pos":[0,82],"content":"Gets a collection that contains the paths of files that are monitored for changes.","nodes":[{"content":"Gets a collection that contains the paths of files that are monitored for changes.","pos":[0,82]}]}],"pos":[4978,5061],"yaml":true},{"content":"The collection is typically set in the constructor of a derived <xref:System.Runtime.Caching.FileChangeMonitor> type.  \n  \n To provide custom file-change monitoring, you must override this method in a derived class.","nodes":[{"pos":[0,117],"content":"The collection is typically set in the constructor of a derived <xref:System.Runtime.Caching.FileChangeMonitor> type.","nodes":[{"content":"The collection is typically set in the constructor of a derived <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.FileChangeMonitor&gt;</ph> type.","pos":[0,117],"source":"The collection is typically set in the constructor of a derived <xref:System.Runtime.Caching.FileChangeMonitor> type."}]},{"pos":[124,215],"content":"To provide custom file-change monitoring, you must override this method in a derived class.","nodes":[{"content":"To provide custom file-change monitoring, you must override this method in a derived class.","pos":[0,91]}]}],"pos":[5072,5292],"yaml":true,"extradata":"MT"},{"content":"A collection of file paths.","nodes":[{"pos":[0,27],"content":"A collection of file paths.","nodes":[{"content":"A collection of file paths.","pos":[0,27]}]}],"pos":[5516,5544],"yaml":true},{"content":"Gets a value that indicates the last time that a file that is being monitored was changed.","nodes":[{"pos":[0,90],"content":"Gets a value that indicates the last time that a file that is being monitored was changed.","nodes":[{"content":"Gets a value that indicates the last time that a file that is being monitored was changed.","pos":[0,90]}]}],"pos":[6580,6671],"yaml":true},{"content":"The value of the <xref:System.Runtime.Caching.FileChangeMonitor.LastModified%2A> property is typically calculated during the initialization phase of a derived class.  \n  \n To provide custom file change monitoring, you must override this method in a derived class.","nodes":[{"pos":[0,165],"content":"The value of the <xref:System.Runtime.Caching.FileChangeMonitor.LastModified%2A> property is typically calculated during the initialization phase of a derived class.","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.FileChangeMonitor.LastModified%2A&gt;</ph> property is typically calculated during the initialization phase of a derived class.","pos":[0,165],"source":"The value of the <xref:System.Runtime.Caching.FileChangeMonitor.LastModified%2A> property is typically calculated during the initialization phase of a derived class."}]},{"pos":[172,263],"content":"To provide custom file change monitoring, you must override this method in a derived class.","nodes":[{"content":"To provide custom file change monitoring, you must override this method in a derived class.","pos":[0,91]}]}],"pos":[6682,6950],"yaml":true,"extradata":"MT"},{"content":"If multiple files are monitored, the last modified time of the most recently modified file; otherwise, the last time that the file that is being monitored was changed.","nodes":[{"pos":[0,167],"content":"If multiple files are monitored, the last modified time of the most recently modified file; otherwise, the last time that the file that is being monitored was changed.","nodes":[{"content":"If multiple files are monitored, the last modified time of the most recently modified file; otherwise, the last time that the file that is being monitored was changed.","pos":[0,167]}]}],"pos":[7091,7259],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Caching.FileChangeMonitor\n  commentId: T:System.Runtime.Caching.FileChangeMonitor\n  id: FileChangeMonitor\n  children:\n  - System.Runtime.Caching.FileChangeMonitor.#ctor\n  - System.Runtime.Caching.FileChangeMonitor.FilePaths\n  - System.Runtime.Caching.FileChangeMonitor.LastModified\n  langs:\n  - csharp\n  name: FileChangeMonitor\n  nameWithType: FileChangeMonitor\n  fullName: System.Runtime.Caching.FileChangeMonitor\n  type: Class\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: Represents an object that monitors changes to files.\n  remarks: The <xref:System.Runtime.Caching.FileChangeMonitor> class is a base <xref:System.Runtime.Caching.ChangeMonitor> type for classes that monitor changes to files. To create a monitor for changes in the file system, you can inherit from this class.\n  example:\n  - \"The following example shows how to create a cache item that uses a <xref:System.Runtime.Caching.HostFileChangeMonitor> object to monitor the state of the source data (a file) on the file system. The <xref:System.Runtime.Caching.HostFileChangeMonitor> class inherits from the <xref:System.Runtime.Caching.FileChangeMonitor> class. The cache entry is defined using a <xref:System.Runtime.Caching.CacheItemPolicy> object that provides eviction and expiration details for the cache entry.  \\n  \\n [!code-csharp[CachingASPNetApplications#1](~/samples/snippets/csharp/VS_Snippets_WebNet/cachingaspnetapplications/cs/default.aspx.cs#1)]\\n [!code-vb[CachingASPNetApplications#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/cachingaspnetapplications/vb/default.aspx.vb#1)]\"\n  syntax:\n    content: 'public abstract class FileChangeMonitor : System.Runtime.Caching.ChangeMonitor'\n  inheritance:\n  - System.Object\n  - System.Runtime.Caching.ChangeMonitor\n  derivedClasses:\n  - System.Runtime.Caching.HostFileChangeMonitor\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Runtime.Caching.ChangeMonitor.Dispose\n  - System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)\n  - System.Runtime.Caching.ChangeMonitor.HasChanged\n  - System.Runtime.Caching.ChangeMonitor.InitializationComplete\n  - System.Runtime.Caching.ChangeMonitor.IsDisposed\n  - System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)\n  - System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)\n  - System.Runtime.Caching.ChangeMonitor.UniqueId\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/FileChangeMonitor.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.FileChangeMonitor.#ctor\n  commentId: M:System.Runtime.Caching.FileChangeMonitor.#ctor\n  id: '#ctor'\n  parent: System.Runtime.Caching.FileChangeMonitor\n  langs:\n  - csharp\n  name: FileChangeMonitor()\n  nameWithType: FileChangeMonitor.FileChangeMonitor()\n  fullName: FileChangeMonitor.FileChangeMonitor()\n  type: Constructor\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Caching.FileChangeMonitor\"></xref> class. This constructor is called from constructors in derived classes in order to initialize the base class.\n  syntax:\n    content: protected FileChangeMonitor ();\n    parameters: []\n  overload: System.Runtime.Caching.FileChangeMonitor.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/FileChangeMonitor.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.FileChangeMonitor.FilePaths\n  commentId: P:System.Runtime.Caching.FileChangeMonitor.FilePaths\n  id: FilePaths\n  parent: System.Runtime.Caching.FileChangeMonitor\n  langs:\n  - csharp\n  name: FilePaths\n  nameWithType: FileChangeMonitor.FilePaths\n  fullName: FileChangeMonitor.FilePaths\n  type: Property\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: Gets a collection that contains the paths of files that are monitored for changes.\n  remarks: \"The collection is typically set in the constructor of a derived <xref:System.Runtime.Caching.FileChangeMonitor> type.  \\n  \\n To provide custom file-change monitoring, you must override this method in a derived class.\"\n  syntax:\n    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<string> FilePaths { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}\n      description: A collection of file paths.\n  overload: System.Runtime.Caching.FileChangeMonitor.FilePaths*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/FileChangeMonitor.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\n- uid: System.Runtime.Caching.FileChangeMonitor.LastModified\n  commentId: P:System.Runtime.Caching.FileChangeMonitor.LastModified\n  id: LastModified\n  parent: System.Runtime.Caching.FileChangeMonitor\n  langs:\n  - csharp\n  name: LastModified\n  nameWithType: FileChangeMonitor.LastModified\n  fullName: FileChangeMonitor.LastModified\n  type: Property\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching\n  summary: Gets a value that indicates the last time that a file that is being monitored was changed.\n  remarks: \"The value of the <xref:System.Runtime.Caching.FileChangeMonitor.LastModified%2A> property is typically calculated during the initialization phase of a derived class.  \\n  \\n To provide custom file change monitoring, you must override this method in a derived class.\"\n  syntax:\n    content: public abstract DateTimeOffset LastModified { get; }\n    return:\n      type: System.DateTimeOffset\n      description: If multiple files are monitored, the last modified time of the most recently modified file; otherwise, the last time that the file that is being monitored was changed.\n  overload: System.Runtime.Caching.FileChangeMonitor.LastModified*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/FileChangeMonitor.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: ghogen\nreferences:\n- uid: System.Runtime.Caching.ChangeMonitor\n  parent: System.Runtime.Caching\n  isExternal: false\n  name: ChangeMonitor\n  nameWithType: ChangeMonitor\n  fullName: System.Runtime.Caching.ChangeMonitor\n- uid: System.Runtime.Caching.FileChangeMonitor.#ctor\n  parent: System.Runtime.Caching.FileChangeMonitor\n  isExternal: false\n  name: FileChangeMonitor()\n  nameWithType: FileChangeMonitor.FileChangeMonitor()\n  fullName: FileChangeMonitor.FileChangeMonitor()\n- uid: System.Runtime.Caching.FileChangeMonitor.FilePaths\n  parent: System.Runtime.Caching.FileChangeMonitor\n  isExternal: false\n  name: FilePaths\n  nameWithType: FileChangeMonitor.FilePaths\n  fullName: FileChangeMonitor.FilePaths\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.String\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<String>\n  nameWithType: ReadOnlyCollection<String>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Runtime.Caching.FileChangeMonitor.LastModified\n  parent: System.Runtime.Caching.FileChangeMonitor\n  isExternal: false\n  name: LastModified\n  nameWithType: FileChangeMonitor.LastModified\n  fullName: FileChangeMonitor.LastModified\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.Runtime.Caching.FileChangeMonitor.#ctor*\n  parent: System.Runtime.Caching.FileChangeMonitor\n  isExternal: false\n  name: FileChangeMonitor\n  nameWithType: FileChangeMonitor.FileChangeMonitor\n  fullName: FileChangeMonitor.FileChangeMonitor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/FileChangeMonitor.xml\n- uid: System.Runtime.Caching.FileChangeMonitor.FilePaths*\n  parent: System.Runtime.Caching.FileChangeMonitor\n  isExternal: false\n  name: FilePaths\n  nameWithType: FileChangeMonitor.FilePaths\n  fullName: FileChangeMonitor.FilePaths\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/FileChangeMonitor.xml\n- uid: System.Runtime.Caching.FileChangeMonitor.LastModified*\n  parent: System.Runtime.Caching.FileChangeMonitor\n  isExternal: false\n  name: LastModified\n  nameWithType: FileChangeMonitor.LastModified\n  fullName: FileChangeMonitor.LastModified\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching/FileChangeMonitor.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Runtime.Caching.ChangeMonitor.Dispose\n  parent: System.Runtime.Caching.ChangeMonitor\n  isExternal: false\n  name: Dispose()\n  nameWithType: ChangeMonitor.Dispose()\n  fullName: ChangeMonitor.Dispose()\n- uid: System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)\n  parent: System.Runtime.Caching.ChangeMonitor\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: ChangeMonitor.Dispose(Boolean)\n  fullName: ChangeMonitor.Dispose(Boolean)\n- uid: System.Runtime.Caching.ChangeMonitor.HasChanged\n  parent: System.Runtime.Caching.ChangeMonitor\n  isExternal: false\n  name: HasChanged\n  nameWithType: ChangeMonitor.HasChanged\n  fullName: ChangeMonitor.HasChanged\n- uid: System.Runtime.Caching.ChangeMonitor.InitializationComplete\n  parent: System.Runtime.Caching.ChangeMonitor\n  isExternal: false\n  name: InitializationComplete()\n  nameWithType: ChangeMonitor.InitializationComplete()\n  fullName: ChangeMonitor.InitializationComplete()\n- uid: System.Runtime.Caching.ChangeMonitor.IsDisposed\n  parent: System.Runtime.Caching.ChangeMonitor\n  isExternal: false\n  name: IsDisposed\n  nameWithType: ChangeMonitor.IsDisposed\n  fullName: ChangeMonitor.IsDisposed\n- uid: System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)\n  parent: System.Runtime.Caching.ChangeMonitor\n  isExternal: false\n  name: NotifyOnChanged(OnChangedCallback)\n  nameWithType: ChangeMonitor.NotifyOnChanged(OnChangedCallback)\n  fullName: ChangeMonitor.NotifyOnChanged(OnChangedCallback)\n- uid: System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)\n  parent: System.Runtime.Caching.ChangeMonitor\n  isExternal: false\n  name: OnChanged(Object)\n  nameWithType: ChangeMonitor.OnChanged(Object)\n  fullName: ChangeMonitor.OnChanged(Object)\n- uid: System.Runtime.Caching.ChangeMonitor.UniqueId\n  parent: System.Runtime.Caching.ChangeMonitor\n  isExternal: false\n  name: UniqueId\n  nameWithType: ChangeMonitor.UniqueId\n  fullName: ChangeMonitor.UniqueId\n"}