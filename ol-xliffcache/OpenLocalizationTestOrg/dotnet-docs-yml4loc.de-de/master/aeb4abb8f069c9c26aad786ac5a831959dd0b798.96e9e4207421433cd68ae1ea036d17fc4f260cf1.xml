{"nodes":[{"content":"Provides a constructor-like means of calling <xref href=\"System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\"></xref>.","nodes":[{"pos":[0,284],"content":"Provides a constructor-like means of calling <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\"&gt;&lt;/xref&gt;</ph>.","source":"Provides a constructor-like means of calling <xref href=\"System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\"></xref>."}],"pos":[942,1227],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Data.Common.CommandTrees.ExpressionBuilder.Row\"></xref> class with the specified first column value and optional successive column values.","nodes":[{"pos":[0,191],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.ExpressionBuilder.Row\"&gt;&lt;/xref&gt;</ph> class with the specified first column value and optional successive column values.","source":"Initializes a new instance of the <xref href=\"System.Data.Common.CommandTrees.ExpressionBuilder.Row\"></xref> class with the specified first column value and optional successive column values."}],"pos":[3425,3617],"yaml":true},{"content":"A key-value pair that provides the first column in the new row instance. (required)","nodes":[{"pos":[0,83],"content":"A key-value pair that provides the first column in the new row instance. (required)","nodes":[{"content":"A key-value pair that provides the first column in the new row instance. (required)","pos":[0,83],"nodes":[{"content":"A key-value pair that provides the first column in the new row instance.","pos":[0,72]},{"content":"(required)","pos":[73,83]}]}]}],"pos":[4037,4121],"yaml":true},{"content":"A key-value pairs that provide any subsequent columns in the new row instance. (optional)","nodes":[{"pos":[0,89],"content":"A key-value pairs that provide any subsequent columns in the new row instance. (optional)","nodes":[{"content":"A key-value pairs that provide any subsequent columns in the new row instance. (optional)","pos":[0,89],"nodes":[{"content":"A key-value pairs that provide any subsequent columns in the new row instance.","pos":[0,78]},{"content":"(optional)","pos":[79,89]}]}]}],"pos":[4277,4367],"yaml":true},{"content":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"></xref> that constructs a new row based on the columns contained in this Row instance.","nodes":[{"pos":[0,169],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"&gt;&lt;/xref&gt;</ph> that constructs a new row based on the columns contained in this Row instance.","source":"Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"></xref> that constructs a new row based on the columns contained in this Row instance."}],"pos":[7225,7395],"yaml":true},{"content":"A new DbNewInstanceExpression that constructs a row with the same column names and DbExpression values as this Row instance.","nodes":[{"pos":[0,124],"content":"A new DbNewInstanceExpression that constructs a row with the same column names and DbExpression values as this Row instance.","nodes":[{"content":"A new DbNewInstanceExpression that constructs a row with the same column names and DbExpression values as this Row instance.","pos":[0,124]}]}],"pos":[7616,7741],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  commentId: T:System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  id: Row\n  children:\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Row.#ctor(System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[])\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit(System.Data.Common.CommandTrees.ExpressionBuilder.Row to System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression\n  langs:\n  - csharp\n  name: Row\n  nameWithType: Row\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  type: Class\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Provides a constructor-like means of calling <xref href=\"System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\"></xref>.\n  syntax:\n    content: public sealed class Row\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/Row.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.#ctor(System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[])\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.Row.#ctor(System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[])\n  id: '#ctor(System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[])'\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  langs:\n  - csharp\n  name: Row(KeyValuePair<String,DbExpression>, KeyValuePair<String,DbExpression>[])\n  nameWithType: Row.Row(KeyValuePair<String,DbExpression>, KeyValuePair<String,DbExpression>[])\n  fullName: Row.Row(KeyValuePair<String,DbExpression>, KeyValuePair<String,DbExpression>[])\n  type: Constructor\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Initializes a new instance of the <xref href=\"System.Data.Common.CommandTrees.ExpressionBuilder.Row\"></xref> class with the specified first column value and optional successive column values.\n  syntax:\n    content: public Row (System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression> columnValue, System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>[] columnValues);\n    parameters:\n    - id: columnValue\n      type: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}\n      description: A key-value pair that provides the first column in the new row instance. (required)\n    - id: columnValues\n      type: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[]\n      description: A key-value pairs that provide any subsequent columns in the new row instance. (optional)\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.Row.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/Row.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit(System.Data.Common.CommandTrees.ExpressionBuilder.Row to System.Data.Common.CommandTrees.DbExpression)\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit(System.Data.Common.CommandTrees.ExpressionBuilder.Row)~System.Data.Common.CommandTrees.DbExpression\n  id: op_Implicit(System.Data.Common.CommandTrees.ExpressionBuilder.Row to System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  langs:\n  - csharp\n  name: op_Implicit(Row to DbExpression)\n  nameWithType: Row.op_Implicit(Row to DbExpression)\n  fullName: Row.op_Implicit(Row to DbExpression)\n  type: Operator\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression op_Implicit (System.Data.Common.CommandTrees.ExpressionBuilder.Row row);\n    parameters:\n    - id: row\n      type: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n      description: ''\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: ''\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/Row.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression\n  commentId: M:System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression\n  id: ToExpression\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  langs:\n  - csharp\n  name: ToExpression()\n  nameWithType: Row.ToExpression()\n  fullName: Row.ToExpression()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  summary: Creates a new <xref href=\"System.Data.Common.CommandTrees.DbNewInstanceExpression\"></xref> that constructs a new row based on the columns contained in this Row instance.\n  syntax:\n    content: public System.Data.Common.CommandTrees.DbNewInstanceExpression ToExpression ();\n    parameters: []\n    return:\n      type: System.Data.Common.CommandTrees.DbNewInstanceExpression\n      description: A new DbNewInstanceExpression that constructs a row with the same column names and DbExpression values as this Row instance.\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/Row.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.#ctor(System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  isExternal: false\n  name: Row(KeyValuePair<String,DbExpression>, KeyValuePair<String,DbExpression>[])\n  nameWithType: Row.Row(KeyValuePair<String,DbExpression>, KeyValuePair<String,DbExpression>[])\n  fullName: Row.Row(KeyValuePair<String,DbExpression>, KeyValuePair<String,DbExpression>[])\n- uid: System.Collections.Generic.KeyValuePair`2\n  name: KeyValuePair<TKey,TValue>\n  nameWithType: KeyValuePair<TKey,TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>\n- uid: System.String\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Common.CommandTrees.DbExpression\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<String,DbExpression>\n  nameWithType: KeyValuePair<String,DbExpression>\n  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Data.Common.CommandTrees.DbExpression\n    name: DbExpression\n    nameWithType: DbExpression\n    fullName: System.Data.Common.CommandTrees.DbExpression\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[]\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<String,DbExpression>[]\n  nameWithType: KeyValuePair<String,DbExpression>[]\n  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>[]\n  spec.csharp:\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Data.Common.CommandTrees.DbExpression\n    name: DbExpression\n    nameWithType: DbExpression\n    fullName: System.Data.Common.CommandTrees.DbExpression\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit(System.Data.Common.CommandTrees.ExpressionBuilder.Row to System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  isExternal: false\n  name: op_Implicit(Row to DbExpression)\n  nameWithType: Row.op_Implicit(Row to DbExpression)\n  fullName: Row.op_Implicit(Row to DbExpression)\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder\n  isExternal: false\n  name: Row\n  nameWithType: Row\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  isExternal: false\n  name: ToExpression()\n  nameWithType: Row.ToExpression()\n  fullName: Row.ToExpression()\n- uid: System.Data.Common.CommandTrees.DbNewInstanceExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbNewInstanceExpression\n  nameWithType: DbNewInstanceExpression\n  fullName: System.Data.Common.CommandTrees.DbNewInstanceExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.#ctor*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  isExternal: false\n  name: Row\n  nameWithType: Row.Row\n  fullName: Row.Row\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/Row.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.op_Implicit*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  isExternal: false\n  name: op_Implicit\n  nameWithType: Row.op_Implicit\n  fullName: Row.op_Implicit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/Row.xml\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.Row\n  isExternal: false\n  name: ToExpression\n  nameWithType: Row.ToExpression\n  fullName: Row.ToExpression\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Common.CommandTrees.ExpressionBuilder/Row.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}