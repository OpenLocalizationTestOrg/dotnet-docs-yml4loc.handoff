{"nodes":[{"content":"Specifies the action that occurs when an exception escapes the root of a workflow.","nodes":[{"pos":[0,82],"content":"Specifies the action that occurs when an exception escapes the root of a workflow.","nodes":[{"content":"Specifies the action that occurs when an exception escapes the root of a workflow.","pos":[0,82]}]}],"pos":[591,674],"yaml":true},{"content":"The <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> function is invoked if an exception escapes the root of the workflow. The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> provides access to the exception as well as a pointer to the <xref:System.Activities.Activity> that generated the exception. Terminate is the default action if no <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is specified.","nodes":[{"pos":[0,472],"content":"The <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> function is invoked if an exception escapes the root of the workflow. The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> provides access to the exception as well as a pointer to the <xref:System.Activities.Activity> that generated the exception. Terminate is the default action if no <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is specified.","nodes":[{"content":"The <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> function is invoked if an exception escapes the root of the workflow. The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> provides access to the exception as well as a pointer to the <xref:System.Activities.Activity> that generated the exception. Terminate is the default action if no <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is specified.","pos":[0,472],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Activities.WorkflowApplication.OnUnhandledException%2A&gt;</ph> function is invoked if an exception escapes the root of the workflow.","pos":[0,142],"source":"The <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> function is invoked if an exception escapes the root of the workflow."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs&gt;</ph> provides access to the exception as well as a pointer to the <ph id=\"ph2\">&lt;xref:System.Activities.Activity&gt;</ph> that generated the exception.","pos":[143,343],"source":" The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> provides access to the exception as well as a pointer to the <xref:System.Activities.Activity> that generated the exception."},{"content":"Terminate is the default action if no <ph id=\"ph1\">&lt;xref:System.Activities.WorkflowApplication.OnUnhandledException%2A&gt;</ph> handler is specified.","pos":[344,472],"source":" Terminate is the default action if no <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is specified."}]}]}],"pos":[685,1158],"yaml":true,"extradata":"MT"},{"content":"Specifies that the <xref href=\"System.Activities.WorkflowApplication\"></xref> should abort the workflow.","nodes":[{"pos":[0,104],"content":"Specifies that the <ph id=\"ph1\">&lt;xref href=\"System.Activities.WorkflowApplication\"&gt;&lt;/xref&gt;</ph> should abort the workflow.","source":"Specifies that the <xref href=\"System.Activities.WorkflowApplication\"></xref> should abort the workflow."}],"pos":[2764,2869],"yaml":true},{"content":"This results in <xref:System.Activities.WorkflowApplication.Aborted%2A> being called when the abort process is complete. The unhandled exception is used as the abort reason.","nodes":[{"pos":[0,173],"content":"This results in <xref:System.Activities.WorkflowApplication.Aborted%2A> being called when the abort process is complete. The unhandled exception is used as the abort reason.","nodes":[{"content":"This results in <xref:System.Activities.WorkflowApplication.Aborted%2A> being called when the abort process is complete. The unhandled exception is used as the abort reason.","pos":[0,173],"nodes":[{"content":"This results in <ph id=\"ph1\">&lt;xref:System.Activities.WorkflowApplication.Aborted%2A&gt;</ph> being called when the abort process is complete.","pos":[0,120],"source":"This results in <xref:System.Activities.WorkflowApplication.Aborted%2A> being called when the abort process is complete."},{"content":"The unhandled exception is used as the abort reason.","pos":[121,173]}]}]}],"pos":[2880,3054],"yaml":true,"extradata":"MT"},{"content":"Specifies that the <xref href=\"System.Activities.WorkflowApplication\"></xref> should schedule the cancellation of the root activity and resume execution.","nodes":[{"pos":[0,153],"content":"Specifies that the <ph id=\"ph1\">&lt;xref href=\"System.Activities.WorkflowApplication\"&gt;&lt;/xref&gt;</ph> should schedule the cancellation of the root activity and resume execution.","source":"Specifies that the <xref href=\"System.Activities.WorkflowApplication\"></xref> should schedule the cancellation of the root activity and resume execution."}],"pos":[4576,4730],"yaml":true},{"content":"This results in <xref:System.Activities.WorkflowApplication.Completed%2A> being called when the cancellation process is complete.","nodes":[{"pos":[0,129],"content":"This results in <xref:System.Activities.WorkflowApplication.Completed%2A> being called when the cancellation process is complete.","nodes":[{"content":"This results in <ph id=\"ph1\">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> being called when the cancellation process is complete.","pos":[0,129],"source":"This results in <xref:System.Activities.WorkflowApplication.Completed%2A> being called when the cancellation process is complete."}]}],"pos":[4741,4871],"yaml":true,"extradata":"MT"},{"content":"Specifies that the <xref href=\"System.Activities.WorkflowApplication\"></xref> should schedule termination of the root activity and resume execution.","nodes":[{"pos":[0,148],"content":"Specifies that the <ph id=\"ph1\">&lt;xref href=\"System.Activities.WorkflowApplication\"&gt;&lt;/xref&gt;</ph> should schedule termination of the root activity and resume execution.","source":"Specifies that the <xref href=\"System.Activities.WorkflowApplication\"></xref> should schedule termination of the root activity and resume execution."}],"pos":[6414,6563],"yaml":true},{"content":"This results in <xref:System.Activities.WorkflowApplication.Completed%2A> being called when the termination process is complete. The unhandled exception is used as the termination reason. Terminate is the default action if no <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is specified.","nodes":[{"pos":[0,316],"content":"This results in <xref:System.Activities.WorkflowApplication.Completed%2A> being called when the termination process is complete. The unhandled exception is used as the termination reason. Terminate is the default action if no <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is specified.","nodes":[{"content":"This results in <xref:System.Activities.WorkflowApplication.Completed%2A> being called when the termination process is complete. The unhandled exception is used as the termination reason. Terminate is the default action if no <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is specified.","pos":[0,316],"nodes":[{"content":"This results in <ph id=\"ph1\">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> being called when the termination process is complete.","pos":[0,128],"source":"This results in <xref:System.Activities.WorkflowApplication.Completed%2A> being called when the termination process is complete."},{"content":"The unhandled exception is used as the termination reason.","pos":[129,187]},{"content":"Terminate is the default action if no <ph id=\"ph1\">&lt;xref:System.Activities.WorkflowApplication.OnUnhandledException%2A&gt;</ph> handler is specified.","pos":[188,316],"source":" Terminate is the default action if no <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is specified."}]}]}],"pos":[6574,6891],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.UnhandledExceptionAction\n  commentId: T:System.Activities.UnhandledExceptionAction\n  id: UnhandledExceptionAction\n  children:\n  - System.Activities.UnhandledExceptionAction.Abort\n  - System.Activities.UnhandledExceptionAction.Cancel\n  - System.Activities.UnhandledExceptionAction.Terminate\n  langs:\n  - csharp\n  name: UnhandledExceptionAction\n  nameWithType: UnhandledExceptionAction\n  fullName: System.Activities.UnhandledExceptionAction\n  type: Enum\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Specifies the action that occurs when an exception escapes the root of a workflow.\n  remarks: The <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> function is invoked if an exception escapes the root of the workflow. The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> provides access to the exception as well as a pointer to the <xref:System.Activities.Activity> that generated the exception. Terminate is the default action if no <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is specified.\n  example:\n  - \"The following example invokes a workflow that throws an exception. The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked. The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.  \\n  \\n [!code-csharp[CFX_WorkflowApplicationExample#6](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#6)]\"\n  syntax:\n    content: public enum UnhandledExceptionAction\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/UnhandledExceptionAction.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.UnhandledExceptionAction.Abort\n  commentId: F:System.Activities.UnhandledExceptionAction.Abort\n  id: Abort\n  parent: System.Activities.UnhandledExceptionAction\n  langs:\n  - csharp\n  name: Abort\n  nameWithType: UnhandledExceptionAction.Abort\n  fullName: UnhandledExceptionAction.Abort\n  type: Field\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Specifies that the <xref href=\"System.Activities.WorkflowApplication\"></xref> should abort the workflow.\n  remarks: This results in <xref:System.Activities.WorkflowApplication.Aborted%2A> being called when the abort process is complete. The unhandled exception is used as the abort reason.\n  example:\n  - \"The following example invokes a workflow that throws an exception. The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked. The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is aborted.  \\n  \\n [!code-csharp[CFX_WorkflowApplicationExample#7](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#7)]\"\n  syntax:\n    content: Abort\n    return:\n      type: System.Activities.UnhandledExceptionAction\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/UnhandledExceptionAction.xml\n- uid: System.Activities.UnhandledExceptionAction.Cancel\n  commentId: F:System.Activities.UnhandledExceptionAction.Cancel\n  id: Cancel\n  parent: System.Activities.UnhandledExceptionAction\n  langs:\n  - csharp\n  name: Cancel\n  nameWithType: UnhandledExceptionAction.Cancel\n  fullName: UnhandledExceptionAction.Cancel\n  type: Field\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Specifies that the <xref href=\"System.Activities.WorkflowApplication\"></xref> should schedule the cancellation of the root activity and resume execution.\n  remarks: This results in <xref:System.Activities.WorkflowApplication.Completed%2A> being called when the cancellation process is complete.\n  example:\n  - \"The following example invokes a workflow that throws an exception. The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked. The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is cancelled.  \\n  \\n [!code-csharp[CFX_WorkflowApplicationExample#8](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#8)]\"\n  syntax:\n    content: Cancel\n    return:\n      type: System.Activities.UnhandledExceptionAction\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/UnhandledExceptionAction.xml\n- uid: System.Activities.UnhandledExceptionAction.Terminate\n  commentId: F:System.Activities.UnhandledExceptionAction.Terminate\n  id: Terminate\n  parent: System.Activities.UnhandledExceptionAction\n  langs:\n  - csharp\n  name: Terminate\n  nameWithType: UnhandledExceptionAction.Terminate\n  fullName: UnhandledExceptionAction.Terminate\n  type: Field\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Specifies that the <xref href=\"System.Activities.WorkflowApplication\"></xref> should schedule termination of the root activity and resume execution.\n  remarks: This results in <xref:System.Activities.WorkflowApplication.Completed%2A> being called when the termination process is complete. The unhandled exception is used as the termination reason. Terminate is the default action if no <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is specified.\n  example:\n  - \"The following example invokes a workflow that throws an exception. The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked. The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.  \\n  \\n [!code-csharp[CFX_WorkflowApplicationExample#6](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#6)]\"\n  syntax:\n    content: Terminate\n    return:\n      type: System.Activities.UnhandledExceptionAction\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/UnhandledExceptionAction.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Activities.UnhandledExceptionAction.Abort\n  parent: System.Activities.UnhandledExceptionAction\n  isExternal: false\n  name: Abort\n  nameWithType: UnhandledExceptionAction.Abort\n  fullName: UnhandledExceptionAction.Abort\n- uid: System.Activities.UnhandledExceptionAction\n  parent: System.Activities\n  isExternal: false\n  name: UnhandledExceptionAction\n  nameWithType: UnhandledExceptionAction\n  fullName: System.Activities.UnhandledExceptionAction\n- uid: System.Activities.UnhandledExceptionAction.Cancel\n  parent: System.Activities.UnhandledExceptionAction\n  isExternal: false\n  name: Cancel\n  nameWithType: UnhandledExceptionAction.Cancel\n  fullName: UnhandledExceptionAction.Cancel\n- uid: System.Activities.UnhandledExceptionAction.Terminate\n  parent: System.Activities.UnhandledExceptionAction\n  isExternal: false\n  name: Terminate\n  nameWithType: UnhandledExceptionAction.Terminate\n  fullName: UnhandledExceptionAction.Terminate\n"}