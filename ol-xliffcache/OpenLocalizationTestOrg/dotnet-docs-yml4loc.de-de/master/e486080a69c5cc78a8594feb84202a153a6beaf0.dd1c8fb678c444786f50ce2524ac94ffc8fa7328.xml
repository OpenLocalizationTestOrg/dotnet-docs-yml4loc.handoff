{"nodes":[{"content":"Used to mark a method definition in an assembly as a trigger in SQL Server. The properties on the attribute reflect the physical attributes used when the type is registered with SQL Server. This class cannot be inherited.","nodes":[{"pos":[0,221],"content":"Used to mark a method definition in an assembly as a trigger in SQL Server. The properties on the attribute reflect the physical attributes used when the type is registered with SQL Server. This class cannot be inherited.","nodes":[{"content":"Used to mark a method definition in an assembly as a trigger in SQL Server. The properties on the attribute reflect the physical attributes used when the type is registered with SQL Server. This class cannot be inherited.","pos":[0,221],"nodes":[{"content":"Used to mark a method definition in an assembly as a trigger in SQL Server.","pos":[0,75]},{"content":"The properties on the attribute reflect the physical attributes used when the type is registered with SQL Server.","pos":[76,189]},{"content":"This class cannot be inherited.","pos":[190,221]}]}]}],"pos":[656,878],"yaml":true},{"content":"See \"CLR Triggers\" in SQL Server 2005 Books Online for more information on CLR triggers and examples.","nodes":[{"pos":[0,101],"content":"See \"CLR Triggers\" in SQL Server 2005 Books Online for more information on CLR triggers and examples.","nodes":[{"content":"See \"CLR Triggers\" in SQL Server 2005 Books Online for more information on CLR triggers and examples.","pos":[0,101]}]}],"pos":[889,991],"yaml":true,"extradata":"MT"},{"content":"An attribute on a method definition in an assembly, used to mark the method as a trigger in SQL Server.","nodes":[{"pos":[0,103],"content":"An attribute on a method definition in an assembly, used to mark the method as a trigger in SQL Server.","nodes":[{"content":"An attribute on a method definition in an assembly, used to mark the method as a trigger in SQL Server.","pos":[0,103]}]}],"pos":[6601,6705],"yaml":true},{"content":"The following example specifies that the trigger is activated by updating existing data (`UPDATE`) in the table `authors`.","nodes":[{"pos":[0,122],"content":"The following example specifies that the trigger is activated by updating existing data (<ph id=\"ph1\">`UPDATE`</ph>) in the table <ph id=\"ph2\">`authors`</ph>.","source":"The following example specifies that the trigger is activated by updating existing data (`UPDATE`) in the table `authors`."}],"pos":[6716,6839],"yaml":true,"extradata":"MT"},{"content":"The type of trigger and what data manipulation language (DML) action activates the trigger.","nodes":[{"pos":[0,91],"content":"The type of trigger and what data manipulation language (DML) action activates the trigger.","nodes":[{"content":"The type of trigger and what data manipulation language (DML) action activates the trigger.","pos":[0,91]}]}],"pos":[8271,8363],"yaml":true},{"content":"The DML action that activates the trigger could be an UPDATE, a DELETE, or an INSERT action. The type of the trigger can be AFTER or INSTEAD OF. Specifying FOR for the trigger type is the same as specifying AFTER.  \n  \n The <xref:Microsoft.SqlServer.Server.SqlTriggerAttribute.Event%2A> property is required.","nodes":[{"pos":[0,213],"content":"The DML action that activates the trigger could be an UPDATE, a DELETE, or an INSERT action. The type of the trigger can be AFTER or INSTEAD OF. Specifying FOR for the trigger type is the same as specifying AFTER.","nodes":[{"content":"The DML action that activates the trigger could be an UPDATE, a DELETE, or an INSERT action. The type of the trigger can be AFTER or INSTEAD OF. Specifying FOR for the trigger type is the same as specifying AFTER.","pos":[0,213],"nodes":[{"content":"The DML action that activates the trigger could be an UPDATE, a DELETE, or an INSERT action.","pos":[0,92]},{"content":"The type of the trigger can be AFTER or INSTEAD OF.","pos":[93,144]},{"content":"Specifying FOR for the trigger type is the same as specifying AFTER.","pos":[145,213]}]}]},{"pos":[220,308],"content":"The <xref:Microsoft.SqlServer.Server.SqlTriggerAttribute.Event%2A> property is required.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:Microsoft.SqlServer.Server.SqlTriggerAttribute.Event%2A&gt;</ph> property is required.","pos":[0,88],"source":"The <xref:Microsoft.SqlServer.Server.SqlTriggerAttribute.Event%2A> property is required."}]}],"pos":[8374,8687],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> value representing the type of trigger and what data manipulation language (DML) action activates the trigger.","nodes":[{"pos":[0,147],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> value representing the type of trigger and what data manipulation language (DML) action activates the trigger.","source":"A <xref href=\"System.String\"></xref> value representing the type of trigger and what data manipulation language (DML) action activates the trigger."}],"pos":[8801,8949],"yaml":true},{"content":"The name of the trigger.","nodes":[{"pos":[0,24],"content":"The name of the trigger.","nodes":[{"content":"The name of the trigger.","pos":[0,24]}]}],"pos":[10028,10053],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> value representing the name of the trigger.","nodes":[{"pos":[0,80],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> value representing the name of the trigger.","source":"A <xref href=\"System.String\"></xref> value representing the name of the trigger."}],"pos":[10166,10247],"yaml":true},{"content":"The table to which the trigger applies.","nodes":[{"pos":[0,39],"content":"The table to which the trigger applies.","nodes":[{"content":"The table to which the trigger applies.","pos":[0,39]}]}],"pos":[11337,11377],"yaml":true},{"content":"The <xref:Microsoft.SqlServer.Server.SqlTriggerAttribute.Target%2A> property is required.  \n  \n The following example specifies that the trigger is referenced by using the name `trig_onpubinsert`. The trigger is activated by adding new data (`INSERT`) to the table `publishers`.","nodes":[{"pos":[0,89],"content":"The <xref:Microsoft.SqlServer.Server.SqlTriggerAttribute.Target%2A> property is required.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:Microsoft.SqlServer.Server.SqlTriggerAttribute.Target%2A&gt;</ph> property is required.","pos":[0,89],"source":"The <xref:Microsoft.SqlServer.Server.SqlTriggerAttribute.Target%2A> property is required."}]},{"pos":[96,278],"content":"The following example specifies that the trigger is referenced by using the name `trig_onpubinsert`. The trigger is activated by adding new data (`INSERT`) to the table `publishers`.","nodes":[{"content":"The following example specifies that the trigger is referenced by using the name <ph id=\"ph1\">`trig_onpubinsert`</ph>.","pos":[0,100],"source":"The following example specifies that the trigger is referenced by using the name `trig_onpubinsert`."},{"content":"The trigger is activated by adding new data (<ph id=\"ph1\">`INSERT`</ph>) to the table <ph id=\"ph2\">`publishers`</ph>.","pos":[101,182],"source":" The trigger is activated by adding new data (`INSERT`) to the table `publishers`."}]}],"pos":[11388,11671],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> value representing the table name.","nodes":[{"pos":[0,71],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> value representing the table name.","source":"A <xref href=\"System.String\"></xref> value representing the table name."}],"pos":[12060,12132],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.SqlServer.Server.SqlTriggerAttribute\n  commentId: T:Microsoft.SqlServer.Server.SqlTriggerAttribute\n  id: SqlTriggerAttribute\n  children:\n  - Microsoft.SqlServer.Server.SqlTriggerAttribute.#ctor\n  - Microsoft.SqlServer.Server.SqlTriggerAttribute.Event\n  - Microsoft.SqlServer.Server.SqlTriggerAttribute.Name\n  - Microsoft.SqlServer.Server.SqlTriggerAttribute.Target\n  langs:\n  - csharp\n  name: SqlTriggerAttribute\n  nameWithType: SqlTriggerAttribute\n  fullName: Microsoft.SqlServer.Server.SqlTriggerAttribute\n  type: Class\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: Used to mark a method definition in an assembly as a trigger in SQL Server. The properties on the attribute reflect the physical attributes used when the type is registered with SQL Server. This class cannot be inherited.\n  remarks: See \"CLR Triggers\" in SQL Server 2005 Books Online for more information on CLR triggers and examples.\n  example:\n  - \"The following example shows the <xref:Microsoft.SqlServer.Server.SqlTriggerAttribute> specifying the name of the trigger, the target table, and the event that will fire the trigger. See <xref:Microsoft.SqlServer.Server.SqlTriggerContext> for the full trigger example.  \\n  \\n [!code-csharp[DataWorks SqlTriggerAttribute Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlTriggerAttribute Sample/CS/source.cs#1)]\\n [!code-vb[DataWorks SqlTriggerAttribute Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlTriggerAttribute Sample/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)]\n\n      public sealed class SqlTriggerAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlTriggerAttribute.xml\n  manager: mblythe\n- uid: Microsoft.SqlServer.Server.SqlTriggerAttribute.#ctor\n  commentId: M:Microsoft.SqlServer.Server.SqlTriggerAttribute.#ctor\n  id: '#ctor'\n  parent: Microsoft.SqlServer.Server.SqlTriggerAttribute\n  langs:\n  - csharp\n  name: SqlTriggerAttribute()\n  nameWithType: SqlTriggerAttribute.SqlTriggerAttribute()\n  fullName: SqlTriggerAttribute.SqlTriggerAttribute()\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: An attribute on a method definition in an assembly, used to mark the method as a trigger in SQL Server.\n  remarks: The following example specifies that the trigger is activated by updating existing data (`UPDATE`) in the table `authors`.\n  example:\n  - >-\n    [!code-csharp[VbRaddataSQLObjects#8](~/samples/snippets/csharp/VS_Snippets_VBCSharp/VbRaddataSQLObjects/CS/Trigger1.cs#8)]\n     [!code-vb[VbRaddataSQLObjects#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRaddataSQLObjects/VB/Trigger1.vb#8)]\n  syntax:\n    content: public SqlTriggerAttribute ();\n    parameters: []\n  overload: Microsoft.SqlServer.Server.SqlTriggerAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlTriggerAttribute.xml\n  manager: mblythe\n- uid: Microsoft.SqlServer.Server.SqlTriggerAttribute.Event\n  commentId: P:Microsoft.SqlServer.Server.SqlTriggerAttribute.Event\n  id: Event\n  parent: Microsoft.SqlServer.Server.SqlTriggerAttribute\n  langs:\n  - csharp\n  name: Event\n  nameWithType: SqlTriggerAttribute.Event\n  fullName: SqlTriggerAttribute.Event\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: The type of trigger and what data manipulation language (DML) action activates the trigger.\n  remarks: \"The DML action that activates the trigger could be an UPDATE, a DELETE, or an INSERT action. The type of the trigger can be AFTER or INSTEAD OF. Specifying FOR for the trigger type is the same as specifying AFTER.  \\n  \\n The <xref:Microsoft.SqlServer.Server.SqlTriggerAttribute.Event%2A> property is required.\"\n  syntax:\n    content: public string Event { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> value representing the type of trigger and what data manipulation language (DML) action activates the trigger.\n  overload: Microsoft.SqlServer.Server.SqlTriggerAttribute.Event*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlTriggerAttribute.xml\n  manager: mblythe\n- uid: Microsoft.SqlServer.Server.SqlTriggerAttribute.Name\n  commentId: P:Microsoft.SqlServer.Server.SqlTriggerAttribute.Name\n  id: Name\n  parent: Microsoft.SqlServer.Server.SqlTriggerAttribute\n  langs:\n  - csharp\n  name: Name\n  nameWithType: SqlTriggerAttribute.Name\n  fullName: SqlTriggerAttribute.Name\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: The name of the trigger.\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> value representing the name of the trigger.\n  overload: Microsoft.SqlServer.Server.SqlTriggerAttribute.Name*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlTriggerAttribute.xml\n  manager: mblythe\n- uid: Microsoft.SqlServer.Server.SqlTriggerAttribute.Target\n  commentId: P:Microsoft.SqlServer.Server.SqlTriggerAttribute.Target\n  id: Target\n  parent: Microsoft.SqlServer.Server.SqlTriggerAttribute\n  langs:\n  - csharp\n  name: Target\n  nameWithType: SqlTriggerAttribute.Target\n  fullName: SqlTriggerAttribute.Target\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: The table to which the trigger applies.\n  remarks: \"The <xref:Microsoft.SqlServer.Server.SqlTriggerAttribute.Target%2A> property is required.  \\n  \\n The following example specifies that the trigger is referenced by using the name `trig_onpubinsert`. The trigger is activated by adding new data (`INSERT`) to the table `publishers`.\"\n  example:\n  - >-\n    [!code-csharp[VbRaddataSQLObjects#9](~/samples/snippets/csharp/VS_Snippets_VBCSharp/VbRaddataSQLObjects/CS/Trigger1.cs#9)]\n     [!code-vb[VbRaddataSQLObjects#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRaddataSQLObjects/VB/Trigger1.vb#9)]\n  syntax:\n    content: public string Target { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> value representing the table name.\n  overload: Microsoft.SqlServer.Server.SqlTriggerAttribute.Target*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlTriggerAttribute.xml\n  manager: mblythe\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: Microsoft.SqlServer.Server.SqlTriggerAttribute.#ctor\n  parent: Microsoft.SqlServer.Server.SqlTriggerAttribute\n  isExternal: false\n  name: SqlTriggerAttribute()\n  nameWithType: SqlTriggerAttribute.SqlTriggerAttribute()\n  fullName: SqlTriggerAttribute.SqlTriggerAttribute()\n- uid: Microsoft.SqlServer.Server.SqlTriggerAttribute.Event\n  parent: Microsoft.SqlServer.Server.SqlTriggerAttribute\n  isExternal: false\n  name: Event\n  nameWithType: SqlTriggerAttribute.Event\n  fullName: SqlTriggerAttribute.Event\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.SqlServer.Server.SqlTriggerAttribute.Name\n  parent: Microsoft.SqlServer.Server.SqlTriggerAttribute\n  isExternal: false\n  name: Name\n  nameWithType: SqlTriggerAttribute.Name\n  fullName: SqlTriggerAttribute.Name\n- uid: Microsoft.SqlServer.Server.SqlTriggerAttribute.Target\n  parent: Microsoft.SqlServer.Server.SqlTriggerAttribute\n  isExternal: false\n  name: Target\n  nameWithType: SqlTriggerAttribute.Target\n  fullName: SqlTriggerAttribute.Target\n- uid: Microsoft.SqlServer.Server.SqlTriggerAttribute.#ctor*\n  parent: Microsoft.SqlServer.Server.SqlTriggerAttribute\n  isExternal: false\n  name: SqlTriggerAttribute\n  nameWithType: SqlTriggerAttribute.SqlTriggerAttribute\n  fullName: SqlTriggerAttribute.SqlTriggerAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlTriggerAttribute.xml\n- uid: Microsoft.SqlServer.Server.SqlTriggerAttribute.Event*\n  parent: Microsoft.SqlServer.Server.SqlTriggerAttribute\n  isExternal: false\n  name: Event\n  nameWithType: SqlTriggerAttribute.Event\n  fullName: SqlTriggerAttribute.Event\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlTriggerAttribute.xml\n- uid: Microsoft.SqlServer.Server.SqlTriggerAttribute.Name*\n  parent: Microsoft.SqlServer.Server.SqlTriggerAttribute\n  isExternal: false\n  name: Name\n  nameWithType: SqlTriggerAttribute.Name\n  fullName: SqlTriggerAttribute.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlTriggerAttribute.xml\n- uid: Microsoft.SqlServer.Server.SqlTriggerAttribute.Target*\n  parent: Microsoft.SqlServer.Server.SqlTriggerAttribute\n  isExternal: false\n  name: Target\n  nameWithType: SqlTriggerAttribute.Target\n  fullName: SqlTriggerAttribute.Target\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlTriggerAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}