{"nodes":[{"content":"Allows a designer to store and retrieve its state.","nodes":[{"pos":[0,50],"content":"Allows a designer to store and retrieve its state.","nodes":[{"content":"Allows a designer to store and retrieve its state.","pos":[0,50]}]}],"pos":[764,815],"yaml":true},{"content":"Designer state is keyed by the component with which the designer is associated. The Web Forms design surface offers this service and component designers use the service. This is an optional host service, and control designers should not assume it will always be provided.  \n  \n Designer state is represented as a set of name/value pairs, in the form of a dictionary. Values stored in the dictionary must be serializable. The specified component should be sited in the designer and should have a non-empty name.  \n  \n> [!CAUTION]\n>  Do not store sensitive information to the <xref:System.ComponentModel.Design.IComponentDesignerStateService>. Sensitive information includes password and authentication data, or any data you do not want to expose to an unwanted source.","nodes":[{"pos":[0,271],"content":"Designer state is keyed by the component with which the designer is associated. The Web Forms design surface offers this service and component designers use the service. This is an optional host service, and control designers should not assume it will always be provided.","nodes":[{"content":"Designer state is keyed by the component with which the designer is associated. The Web Forms design surface offers this service and component designers use the service. This is an optional host service, and control designers should not assume it will always be provided.","pos":[0,271],"nodes":[{"content":"Designer state is keyed by the component with which the designer is associated.","pos":[0,79]},{"content":"The Web Forms design surface offers this service and component designers use the service.","pos":[80,169]},{"content":"This is an optional host service, and control designers should not assume it will always be provided.","pos":[170,271]}]}]},{"pos":[278,510],"content":"Designer state is represented as a set of name/value pairs, in the form of a dictionary. Values stored in the dictionary must be serializable. The specified component should be sited in the designer and should have a non-empty name.","nodes":[{"content":"Designer state is represented as a set of name/value pairs, in the form of a dictionary. Values stored in the dictionary must be serializable. The specified component should be sited in the designer and should have a non-empty name.","pos":[0,232],"nodes":[{"content":"Designer state is represented as a set of name/value pairs, in the form of a dictionary.","pos":[0,88]},{"content":"Values stored in the dictionary must be serializable.","pos":[89,142]},{"content":"The specified component should be sited in the designer and should have a non-empty name.","pos":[143,232]}]}]},{"pos":[518,767],"content":"[!CAUTION]\n Do not store sensitive information to the <xref:System.ComponentModel.Design.IComponentDesignerStateService>. Sensitive information includes password and authentication data, or any data you do not want to expose to an unwanted source.","leadings":["","> "],"nodes":[{"content":" Do not store sensitive information to the <xref:System.ComponentModel.Design.IComponentDesignerStateService>. Sensitive information includes password and authentication data, or any data you do not want to expose to an unwanted source.","pos":[11,247],"nodes":[{"content":"Do not store sensitive information to the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IComponentDesignerStateService&gt;</ph>.","pos":[1,110],"source":" Do not store sensitive information to the <xref:System.ComponentModel.Design.IComponentDesignerStateService>."},{"content":"Sensitive information includes password and authentication data, or any data you do not want to expose to an unwanted source.","pos":[111,236]}]}]}],"pos":[826,1601],"yaml":true,"extradata":"MT"},{"content":"Gets a state item specified by the key for the given component.","nodes":[{"pos":[0,63],"content":"Gets a state item specified by the key for the given component.","nodes":[{"content":"Gets a state item specified by the key for the given component.","pos":[0,63]}]}],"pos":[2942,3006],"yaml":true},{"content":"The component for which to retrieve the designer state item.","nodes":[{"pos":[0,60],"content":"The component for which to retrieve the designer state item.","nodes":[{"content":"The component for which to retrieve the designer state item.","pos":[0,60]}]}],"pos":[3210,3271],"yaml":true},{"content":"The name of the designer state item.","nodes":[{"pos":[0,36],"content":"The name of the designer state item.","nodes":[{"content":"The name of the designer state item.","pos":[0,36]}]}],"pos":[3330,3367],"yaml":true},{"content":"The designer state for <code>component</code> specified by <code>key</code>.","nodes":[{"pos":[0,76],"content":"The designer state for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">component</ph><ept id=\"p1\">&lt;/code&gt;</ept> specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">key</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The designer state for <code>component</code> specified by <code>key</code>."}],"pos":[3424,3501],"yaml":true},{"content":"Sets a state item specified by the key for the given component.","nodes":[{"pos":[0,63],"content":"Sets a state item specified by the key for the given component.","nodes":[{"content":"Sets a state item specified by the key for the given component.","pos":[0,63]}]}],"pos":[4919,4983],"yaml":true},{"content":"The component for which to set the designer state item.","nodes":[{"pos":[0,55],"content":"The component for which to set the designer state item.","nodes":[{"content":"The component for which to set the designer state item.","pos":[0,55]}]}],"pos":[5199,5255],"yaml":true},{"content":"The name of the designer state item.","nodes":[{"pos":[0,36],"content":"The name of the designer state item.","nodes":[{"content":"The name of the designer state item.","pos":[0,36]}]}],"pos":[5314,5351],"yaml":true},{"content":"The designer state item for <code>component</code>.","nodes":[{"pos":[0,51],"content":"The designer state item for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">component</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The designer state item for <code>component</code>."}],"pos":[5412,5464],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.IComponentDesignerStateService\n  commentId: T:System.ComponentModel.Design.IComponentDesignerStateService\n  id: IComponentDesignerStateService\n  children:\n  - System.ComponentModel.Design.IComponentDesignerStateService.GetState(System.ComponentModel.IComponent,System.String)\n  - System.ComponentModel.Design.IComponentDesignerStateService.SetState(System.ComponentModel.IComponent,System.String,System.Object)\n  langs:\n  - csharp\n  name: IComponentDesignerStateService\n  nameWithType: IComponentDesignerStateService\n  fullName: System.ComponentModel.Design.IComponentDesignerStateService\n  type: Interface\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Allows a designer to store and retrieve its state.\n  remarks: \"Designer state is keyed by the component with which the designer is associated. The Web Forms design surface offers this service and component designers use the service. This is an optional host service, and control designers should not assume it will always be provided.  \\n  \\n Designer state is represented as a set of name/value pairs, in the form of a dictionary. Values stored in the dictionary must be serializable. The specified component should be sited in the designer and should have a non-empty name.  \\n  \\n> [!CAUTION]\\n>  Do not store sensitive information to the <xref:System.ComponentModel.Design.IComponentDesignerStateService>. Sensitive information includes password and authentication data, or any data you do not want to expose to an unwanted source.\"\n  syntax:\n    content: public interface IComponentDesignerStateService\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IComponentDesignerStateService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IComponentDesignerStateService.GetState(System.ComponentModel.IComponent,System.String)\n  commentId: M:System.ComponentModel.Design.IComponentDesignerStateService.GetState(System.ComponentModel.IComponent,System.String)\n  id: GetState(System.ComponentModel.IComponent,System.String)\n  parent: System.ComponentModel.Design.IComponentDesignerStateService\n  langs:\n  - csharp\n  name: GetState(IComponent, String)\n  nameWithType: IComponentDesignerStateService.GetState(IComponent, String)\n  fullName: IComponentDesignerStateService.GetState(IComponent, String)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Gets a state item specified by the key for the given component.\n  syntax:\n    content: public object GetState (System.ComponentModel.IComponent component, string key);\n    parameters:\n    - id: component\n      type: System.ComponentModel.IComponent\n      description: The component for which to retrieve the designer state item.\n    - id: key\n      type: System.String\n      description: The name of the designer state item.\n    return:\n      type: System.Object\n      description: The designer state for <code>component</code> specified by <code>key</code>.\n  overload: System.ComponentModel.Design.IComponentDesignerStateService.GetState*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IComponentDesignerStateService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IComponentDesignerStateService.SetState(System.ComponentModel.IComponent,System.String,System.Object)\n  commentId: M:System.ComponentModel.Design.IComponentDesignerStateService.SetState(System.ComponentModel.IComponent,System.String,System.Object)\n  id: SetState(System.ComponentModel.IComponent,System.String,System.Object)\n  parent: System.ComponentModel.Design.IComponentDesignerStateService\n  langs:\n  - csharp\n  name: SetState(IComponent, String, Object)\n  nameWithType: IComponentDesignerStateService.SetState(IComponent, String, Object)\n  fullName: IComponentDesignerStateService.SetState(IComponent, String, Object)\n  type: Method\n  assemblies:\n  - System.Design\n  namespace: System.ComponentModel.Design\n  summary: Sets a state item specified by the key for the given component.\n  syntax:\n    content: public void SetState (System.ComponentModel.IComponent component, string key, object value);\n    parameters:\n    - id: component\n      type: System.ComponentModel.IComponent\n      description: The component for which to set the designer state item.\n    - id: key\n      type: System.String\n      description: The name of the designer state item.\n    - id: value\n      type: System.Object\n      description: The designer state item for <code>component</code>.\n  overload: System.ComponentModel.Design.IComponentDesignerStateService.SetState*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IComponentDesignerStateService.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.Design.IComponentDesignerStateService.GetState(System.ComponentModel.IComponent,System.String)\n  parent: System.ComponentModel.Design.IComponentDesignerStateService\n  isExternal: false\n  name: GetState(IComponent, String)\n  nameWithType: IComponentDesignerStateService.GetState(IComponent, String)\n  fullName: IComponentDesignerStateService.GetState(IComponent, String)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.IComponent\n  parent: System.ComponentModel\n  isExternal: false\n  name: IComponent\n  nameWithType: IComponent\n  fullName: System.ComponentModel.IComponent\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.Design.IComponentDesignerStateService.SetState(System.ComponentModel.IComponent,System.String,System.Object)\n  parent: System.ComponentModel.Design.IComponentDesignerStateService\n  isExternal: false\n  name: SetState(IComponent, String, Object)\n  nameWithType: IComponentDesignerStateService.SetState(IComponent, String, Object)\n  fullName: IComponentDesignerStateService.SetState(IComponent, String, Object)\n- uid: System.ComponentModel.Design.IComponentDesignerStateService.GetState*\n  parent: System.ComponentModel.Design.IComponentDesignerStateService\n  isExternal: false\n  name: GetState\n  nameWithType: IComponentDesignerStateService.GetState\n  fullName: IComponentDesignerStateService.GetState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IComponentDesignerStateService.xml\n- uid: System.ComponentModel.Design.IComponentDesignerStateService.SetState*\n  parent: System.ComponentModel.Design.IComponentDesignerStateService\n  isExternal: false\n  name: SetState\n  nameWithType: IComponentDesignerStateService.SetState\n  fullName: IComponentDesignerStateService.SetState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IComponentDesignerStateService.xml\n"}