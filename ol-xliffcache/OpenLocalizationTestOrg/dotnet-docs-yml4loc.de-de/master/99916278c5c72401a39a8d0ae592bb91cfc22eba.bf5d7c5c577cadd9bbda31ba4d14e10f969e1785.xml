{"nodes":[{"content":"Provides a property and a method for accessing the computer's serial ports.","nodes":[{"pos":[0,75],"content":"Provides a property and a method for accessing the computer's serial ports.","nodes":[{"content":"Provides a property and a method for accessing the computer's serial ports.","pos":[0,75]}]}],"pos":[990,1066],"yaml":true},{"content":"The `My.Computer.Ports` object provides a straightforward entry point for accessing the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] serial port class, <xref:System.IO.Ports.SerialPort>.  \n  \n The following table lists examples of tasks involving the `My.Computer.Ports` object.  \n  \n|To|See|  \n|-|-|  \n|Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  \n|Send a string to a serial port|[How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  \n|Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  \n|Show available serial ports|[How to: Show Available Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)|  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|-|-|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|","nodes":[{"pos":[0,195],"content":"The <ph id=\"ph1\">`My.Computer.Ports`</ph> object provides a straightforward entry point for accessing the <ph id=\"ph2\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> serial port class, <ph id=\"ph3\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph>.","source":"The `My.Computer.Ports` object provides a straightforward entry point for accessing the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] serial port class, <xref:System.IO.Ports.SerialPort>."},{"pos":[202,287],"content":"The following table lists examples of tasks involving the <ph id=\"ph1\">`My.Computer.Ports`</ph> object.","source":"The following table lists examples of tasks involving the `My.Computer.Ports` object."},{"pos":[294,296],"content":"To","nodes":[{"content":"To","pos":[0,2]}]},{"pos":[297,300],"content":"See","nodes":[{"content":"See","pos":[0,3]}]},{"pos":[313,351],"content":"Dial a modem attached to a serial port","nodes":[{"content":"Dial a modem attached to a serial port","pos":[0,38]}]},{"pos":[352,513],"content":"<bpt id=\"p1\">[</bpt>How to: Dial Modems Attached to Serial Ports<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)</ept>","source":"[How to: Dial Modems Attached to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)"},{"pos":[518,548],"content":"Send a string to a serial port","nodes":[{"content":"Send a string to a serial port","pos":[0,30]}]},{"pos":[549,694],"content":"<bpt id=\"p1\">[</bpt>How to: Send Strings to Serial Ports<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)</ept>","source":"[How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)"},{"pos":[699,733],"content":"Receive strings from a serial port","nodes":[{"content":"Receive strings from a serial port","pos":[0,34]}]},{"pos":[734,889],"content":"<bpt id=\"p1\">[</bpt>How to: Receive Strings From Serial Ports<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)</ept>","source":"[How to: Receive Strings From Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)"},{"pos":[894,921],"content":"Show available serial ports","nodes":[{"content":"Show available serial ports","pos":[0,27]}]},{"pos":[922,1065],"content":"<bpt id=\"p1\">[</bpt>How to: Show Available Serial Ports<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)</ept>","source":"[How to: Show Available Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)"},{"pos":[1075,1103],"content":"Availability by Project Type","linkify":"Availability by Project Type","nodes":[{"content":"Availability by Project Type","pos":[0,28]}]},{"pos":[1110,1122],"content":"Project type","nodes":[{"content":"Project type","pos":[0,12]}]},{"pos":[1123,1132],"content":"Available","nodes":[{"content":"Available","pos":[0,9]}]},{"pos":[1145,1164],"content":"Windows Application","nodes":[{"content":"Windows Application","pos":[0,19]}]},{"pos":[1165,1172],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1177,1190],"content":"Class Library","nodes":[{"content":"Class Library","pos":[0,13]}]},{"pos":[1191,1198],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1203,1222],"content":"Console Application","nodes":[{"content":"Console Application","pos":[0,19]}]},{"pos":[1223,1230],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1235,1258],"content":"Windows Control Library","nodes":[{"content":"Windows Control Library","pos":[0,23]}]},{"pos":[1259,1266],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1271,1290],"content":"Web Control Library","nodes":[{"content":"Web Control Library","pos":[0,19]}]},{"pos":[1291,1293],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[1298,1313],"content":"Windows Service","nodes":[{"content":"Windows Service","pos":[0,15]}]},{"pos":[1314,1321],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1326,1334],"content":"Web Site","nodes":[{"content":"Web Site","pos":[0,8]}]},{"pos":[1335,1337],"content":"No","nodes":[{"content":"No","pos":[0,2]}]}],"pos":[1077,2439],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.Devices.Ports\"></xref> class.","nodes":[{"pos":[0,97],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Devices.Ports\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.Devices.Ports\"></xref> class."}],"pos":[4503,4601],"yaml":true},{"content":"Creates and opens a <xref href=\"System.IO.Ports.SerialPort\"></xref> object.","nodes":[{"pos":[0,75],"content":"Creates and opens a <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object.","source":"Creates and opens a <xref href=\"System.IO.Ports.SerialPort\"></xref> object."}],"pos":[5712,5788],"yaml":true},{"content":"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.  \n  \n Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.  \n  \n The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.  \n  \n|To|See|  \n|-|-|  \n|Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  \n|Send a string to serial port|[How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  \n|Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|-|-|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|","nodes":[{"pos":[0,224],"content":"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.","nodes":[{"content":"The <ph id=\"ph1\">`My.Computer.Ports.OpenSerialPort`</ph> method creates and opens a <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object.","pos":[0,107],"source":"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object."},{"content":"The arguments to the <ph id=\"ph1\">`OpenSerialPort`</ph> method determine the settings of the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object.","pos":[108,224],"source":" The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object."}]},{"pos":[231,534],"content":"Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.","nodes":[{"content":"Your code should close the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object when it is finished using the object.","pos":[0,105],"source":"Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.Close%2A&gt;</ph> method to close the object explicitly or the <ph id=\"ph2\">`Using`</ph> statement to close it implicitly.","pos":[106,251],"source":" You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly."},{"content":"See the example in this topic for more information.","pos":[252,303]}]},{"pos":[541,641],"content":"The following table lists examples of tasks involving the <ph id=\"ph1\">`My.Computer.Ports.OpenSerialPort`</ph> method.","source":"The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method."},{"pos":[648,650],"content":"To","nodes":[{"content":"To","pos":[0,2]}]},{"pos":[651,654],"content":"See","nodes":[{"content":"See","pos":[0,3]}]},{"pos":[667,705],"content":"Dial a modem attached to a serial port","nodes":[{"content":"Dial a modem attached to a serial port","pos":[0,38]}]},{"pos":[706,867],"content":"<bpt id=\"p1\">[</bpt>How to: Dial Modems Attached to Serial Ports<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)</ept>","source":"[How to: Dial Modems Attached to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)"},{"pos":[872,900],"content":"Send a string to serial port","nodes":[{"content":"Send a string to serial port","pos":[0,28]}]},{"pos":[901,1046],"content":"<bpt id=\"p1\">[</bpt>How to: Send Strings to Serial Ports<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)</ept>","source":"[How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)"},{"pos":[1051,1085],"content":"Receive strings from a serial port","nodes":[{"content":"Receive strings from a serial port","pos":[0,34]}]},{"pos":[1086,1241],"content":"<bpt id=\"p1\">[</bpt>How to: Receive Strings From Serial Ports<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)</ept>","source":"[How to: Receive Strings From Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)"},{"pos":[1251,1279],"content":"Availability by Project Type","linkify":"Availability by Project Type","nodes":[{"content":"Availability by Project Type","pos":[0,28]}]},{"pos":[1286,1298],"content":"Project type","nodes":[{"content":"Project type","pos":[0,12]}]},{"pos":[1299,1308],"content":"Available","nodes":[{"content":"Available","pos":[0,9]}]},{"pos":[1321,1340],"content":"Windows Application","nodes":[{"content":"Windows Application","pos":[0,19]}]},{"pos":[1341,1348],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1353,1366],"content":"Class Library","nodes":[{"content":"Class Library","pos":[0,13]}]},{"pos":[1367,1374],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1379,1398],"content":"Console Application","nodes":[{"content":"Console Application","pos":[0,19]}]},{"pos":[1399,1406],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1411,1434],"content":"Windows Control Library","nodes":[{"content":"Windows Control Library","pos":[0,23]}]},{"pos":[1435,1442],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1447,1466],"content":"Web Control Library","nodes":[{"content":"Web Control Library","pos":[0,19]}]},{"pos":[1467,1469],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[1474,1489],"content":"Windows Service","nodes":[{"content":"Windows Service","pos":[0,15]}]},{"pos":[1490,1497],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1502,1510],"content":"Web Site","nodes":[{"content":"Web Site","pos":[0,8]}]},{"pos":[1511,1513],"content":"No","nodes":[{"content":"No","pos":[0,2]}]}],"pos":[5799,7338],"yaml":true,"extradata":"MT"},{"content":"`String`. Required. Name of the port to open.","nodes":[{"pos":[0,45],"content":"`String`. Required. Name of the port to open.","nodes":[{"content":"<ph id=\"ph1\">`String`</ph>.","pos":[0,9],"source":"`String`."},{"content":"Required.","pos":[10,19]},{"content":"Name of the port to open.","pos":[20,45]}]}],"pos":[8317,8365],"yaml":true},{"content":"An open <xref href=\"System.IO.Ports.SerialPort\"></xref> object, configured with the supplied arguments.","nodes":[{"pos":[0,103],"content":"An open <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object, configured with the supplied arguments.","source":"An open <xref href=\"System.IO.Ports.SerialPort\"></xref> object, configured with the supplied arguments."}],"pos":[8435,8539],"yaml":true},{"content":"<code>portName</code> is `Nothing` or an empty string.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;portName&lt;/code&gt;</ph> is <ph id=\"ph2\">`Nothing`</ph> or an empty string.","source":"<code>portName</code> is `Nothing` or an empty string."}],"pos":[8719,8774],"yaml":true},{"content":"Creates and opens a <xref href=\"System.IO.Ports.SerialPort\"></xref> object.","nodes":[{"pos":[0,75],"content":"Creates and opens a <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object.","source":"Creates and opens a <xref href=\"System.IO.Ports.SerialPort\"></xref> object."}],"pos":[9814,9890],"yaml":true},{"content":"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.  \n  \n Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.  \n  \n The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.  \n  \n|To|See|  \n|-|-|  \n|Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  \n|Send a string to serial port|[How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  \n|Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|-|-|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|","nodes":[{"pos":[0,224],"content":"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.","nodes":[{"content":"The <ph id=\"ph1\">`My.Computer.Ports.OpenSerialPort`</ph> method creates and opens a <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object.","pos":[0,107],"source":"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object."},{"content":"The arguments to the <ph id=\"ph1\">`OpenSerialPort`</ph> method determine the settings of the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object.","pos":[108,224],"source":" The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object."}]},{"pos":[231,534],"content":"Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.","nodes":[{"content":"Your code should close the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object when it is finished using the object.","pos":[0,105],"source":"Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.Close%2A&gt;</ph> method to close the object explicitly or the <ph id=\"ph2\">`Using`</ph> statement to close it implicitly.","pos":[106,251],"source":" You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly."},{"content":"See the example in this topic for more information.","pos":[252,303]}]},{"pos":[541,641],"content":"The following table lists examples of tasks involving the <ph id=\"ph1\">`My.Computer.Ports.OpenSerialPort`</ph> method.","source":"The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method."},{"pos":[648,650],"content":"To","nodes":[{"content":"To","pos":[0,2]}]},{"pos":[651,654],"content":"See","nodes":[{"content":"See","pos":[0,3]}]},{"pos":[667,705],"content":"Dial a modem attached to a serial port","nodes":[{"content":"Dial a modem attached to a serial port","pos":[0,38]}]},{"pos":[706,867],"content":"<bpt id=\"p1\">[</bpt>How to: Dial Modems Attached to Serial Ports<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)</ept>","source":"[How to: Dial Modems Attached to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)"},{"pos":[872,900],"content":"Send a string to serial port","nodes":[{"content":"Send a string to serial port","pos":[0,28]}]},{"pos":[901,1046],"content":"<bpt id=\"p1\">[</bpt>How to: Send Strings to Serial Ports<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)</ept>","source":"[How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)"},{"pos":[1051,1085],"content":"Receive strings from a serial port","nodes":[{"content":"Receive strings from a serial port","pos":[0,34]}]},{"pos":[1086,1241],"content":"<bpt id=\"p1\">[</bpt>How to: Receive Strings From Serial Ports<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)</ept>","source":"[How to: Receive Strings From Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)"},{"pos":[1251,1279],"content":"Availability by Project Type","linkify":"Availability by Project Type","nodes":[{"content":"Availability by Project Type","pos":[0,28]}]},{"pos":[1286,1298],"content":"Project type","nodes":[{"content":"Project type","pos":[0,12]}]},{"pos":[1299,1308],"content":"Available","nodes":[{"content":"Available","pos":[0,9]}]},{"pos":[1321,1340],"content":"Windows Application","nodes":[{"content":"Windows Application","pos":[0,19]}]},{"pos":[1341,1348],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1353,1366],"content":"Class Library","nodes":[{"content":"Class Library","pos":[0,13]}]},{"pos":[1367,1374],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1379,1398],"content":"Console Application","nodes":[{"content":"Console Application","pos":[0,19]}]},{"pos":[1399,1406],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1411,1434],"content":"Windows Control Library","nodes":[{"content":"Windows Control Library","pos":[0,23]}]},{"pos":[1435,1442],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1447,1466],"content":"Web Control Library","nodes":[{"content":"Web Control Library","pos":[0,19]}]},{"pos":[1467,1469],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[1474,1489],"content":"Windows Service","nodes":[{"content":"Windows Service","pos":[0,15]}]},{"pos":[1490,1497],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1502,1510],"content":"Web Site","nodes":[{"content":"Web Site","pos":[0,8]}]},{"pos":[1511,1513],"content":"No","nodes":[{"content":"No","pos":[0,2]}]}],"pos":[9901,11440],"yaml":true,"extradata":"MT"},{"content":"`String`. Required. Name of the port to open.","nodes":[{"pos":[0,45],"content":"`String`. Required. Name of the port to open.","nodes":[{"content":"<ph id=\"ph1\">`String`</ph>.","pos":[0,9],"source":"`String`."},{"content":"Required.","pos":[10,19]},{"content":"Name of the port to open.","pos":[20,45]}]}],"pos":[12433,12481],"yaml":true},{"content":"`Integer`. Baud rate of the port.","nodes":[{"pos":[0,33],"content":"`Integer`. Baud rate of the port.","nodes":[{"content":"<ph id=\"ph1\">`Integer`</ph>.","pos":[0,10],"source":"`Integer`."},{"content":"Baud rate of the port.","pos":[11,33]}]}],"pos":[12544,12580],"yaml":true},{"content":"An open <xref href=\"System.IO.Ports.SerialPort\"></xref> object, configured with the supplied arguments.","nodes":[{"pos":[0,103],"content":"An open <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object, configured with the supplied arguments.","source":"An open <xref href=\"System.IO.Ports.SerialPort\"></xref> object, configured with the supplied arguments."}],"pos":[12650,12754],"yaml":true},{"content":"<code>portName</code> is `Nothing` or an empty string.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;portName&lt;/code&gt;</ph> is <ph id=\"ph2\">`Nothing`</ph> or an empty string.","source":"<code>portName</code> is `Nothing` or an empty string."}],"pos":[12934,12989],"yaml":true},{"content":"<code>baudRate</code> is less than or equal to zero.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">&lt;code&gt;baudRate&lt;/code&gt;</ph> is less than or equal to zero.","source":"<code>baudRate</code> is less than or equal to zero."}],"pos":[13083,13136],"yaml":true},{"content":"Creates and opens a <xref href=\"System.IO.Ports.SerialPort\"></xref> object.","nodes":[{"pos":[0,75],"content":"Creates and opens a <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object.","source":"Creates and opens a <xref href=\"System.IO.Ports.SerialPort\"></xref> object."}],"pos":[14269,14345],"yaml":true},{"content":"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.  \n  \n Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.  \n  \n The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.  \n  \n|To|See|  \n|-|-|  \n|Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  \n|Send a string to serial port|[How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  \n|Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|-|-|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|","nodes":[{"pos":[0,224],"content":"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.","nodes":[{"content":"The <ph id=\"ph1\">`My.Computer.Ports.OpenSerialPort`</ph> method creates and opens a <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object.","pos":[0,107],"source":"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object."},{"content":"The arguments to the <ph id=\"ph1\">`OpenSerialPort`</ph> method determine the settings of the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object.","pos":[108,224],"source":" The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object."}]},{"pos":[231,534],"content":"Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.","nodes":[{"content":"Your code should close the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object when it is finished using the object.","pos":[0,105],"source":"Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.Close%2A&gt;</ph> method to close the object explicitly or the <ph id=\"ph2\">`Using`</ph> statement to close it implicitly.","pos":[106,251],"source":" You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly."},{"content":"See the example in this topic for more information.","pos":[252,303]}]},{"pos":[541,641],"content":"The following table lists examples of tasks involving the <ph id=\"ph1\">`My.Computer.Ports.OpenSerialPort`</ph> method.","source":"The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method."},{"pos":[648,650],"content":"To","nodes":[{"content":"To","pos":[0,2]}]},{"pos":[651,654],"content":"See","nodes":[{"content":"See","pos":[0,3]}]},{"pos":[667,705],"content":"Dial a modem attached to a serial port","nodes":[{"content":"Dial a modem attached to a serial port","pos":[0,38]}]},{"pos":[706,867],"content":"<bpt id=\"p1\">[</bpt>How to: Dial Modems Attached to Serial Ports<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)</ept>","source":"[How to: Dial Modems Attached to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)"},{"pos":[872,900],"content":"Send a string to serial port","nodes":[{"content":"Send a string to serial port","pos":[0,28]}]},{"pos":[901,1046],"content":"<bpt id=\"p1\">[</bpt>How to: Send Strings to Serial Ports<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)</ept>","source":"[How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)"},{"pos":[1051,1085],"content":"Receive strings from a serial port","nodes":[{"content":"Receive strings from a serial port","pos":[0,34]}]},{"pos":[1086,1241],"content":"<bpt id=\"p1\">[</bpt>How to: Receive Strings From Serial Ports<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)</ept>","source":"[How to: Receive Strings From Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)"},{"pos":[1251,1279],"content":"Availability by Project Type","linkify":"Availability by Project Type","nodes":[{"content":"Availability by Project Type","pos":[0,28]}]},{"pos":[1286,1298],"content":"Project type","nodes":[{"content":"Project type","pos":[0,12]}]},{"pos":[1299,1308],"content":"Available","nodes":[{"content":"Available","pos":[0,9]}]},{"pos":[1321,1340],"content":"Windows Application","nodes":[{"content":"Windows Application","pos":[0,19]}]},{"pos":[1341,1348],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1353,1366],"content":"Class Library","nodes":[{"content":"Class Library","pos":[0,13]}]},{"pos":[1367,1374],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1379,1398],"content":"Console Application","nodes":[{"content":"Console Application","pos":[0,19]}]},{"pos":[1399,1406],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1411,1434],"content":"Windows Control Library","nodes":[{"content":"Windows Control Library","pos":[0,23]}]},{"pos":[1435,1442],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1447,1466],"content":"Web Control Library","nodes":[{"content":"Web Control Library","pos":[0,19]}]},{"pos":[1467,1469],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[1474,1489],"content":"Windows Service","nodes":[{"content":"Windows Service","pos":[0,15]}]},{"pos":[1490,1497],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1502,1510],"content":"Web Site","nodes":[{"content":"Web Site","pos":[0,8]}]},{"pos":[1511,1513],"content":"No","nodes":[{"content":"No","pos":[0,2]}]}],"pos":[14356,15895],"yaml":true,"extradata":"MT"},{"content":"`String`. Required. Name of the port to open.","nodes":[{"pos":[0,45],"content":"`String`. Required. Name of the port to open.","nodes":[{"content":"<ph id=\"ph1\">`String`</ph>.","pos":[0,9],"source":"`String`."},{"content":"Required.","pos":[10,19]},{"content":"Name of the port to open.","pos":[20,45]}]}],"pos":[16919,16967],"yaml":true},{"content":"`Integer`. Baud rate of the port.","nodes":[{"pos":[0,33],"content":"`Integer`. Baud rate of the port.","nodes":[{"content":"<ph id=\"ph1\">`Integer`</ph>.","pos":[0,10],"source":"`Integer`."},{"content":"Baud rate of the port.","pos":[11,33]}]}],"pos":[17030,17066],"yaml":true},{"content":"<xref href=\"System.IO.Ports.Parity\"></xref>. Parity of the port.","nodes":[{"pos":[0,64],"content":"<xref href=\"System.IO.Ports.Parity\"></xref>. Parity of the port.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.Parity\"&gt;&lt;/xref&gt;</ph>.","pos":[0,44],"source":"<xref href=\"System.IO.Ports.Parity\"></xref>."},{"content":"Parity of the port.","pos":[45,64]}]}],"pos":[17137,17202],"yaml":true},{"content":"An open <xref href=\"System.IO.Ports.SerialPort\"></xref> object, configured with the supplied arguments.","nodes":[{"pos":[0,103],"content":"An open <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object, configured with the supplied arguments.","source":"An open <xref href=\"System.IO.Ports.SerialPort\"></xref> object, configured with the supplied arguments."}],"pos":[17272,17376],"yaml":true},{"content":"<code>portName</code> is `Nothing` or an empty string.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;portName&lt;/code&gt;</ph> is <ph id=\"ph2\">`Nothing`</ph> or an empty string.","source":"<code>portName</code> is `Nothing` or an empty string."}],"pos":[17556,17611],"yaml":true},{"content":"<code>baudRate</code> is less than or equal to zero.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">&lt;code&gt;baudRate&lt;/code&gt;</ph> is less than or equal to zero.","source":"<code>baudRate</code> is less than or equal to zero."}],"pos":[17705,17758],"yaml":true},{"content":"<code>parity</code> is not one of the <xref href=\"System.IO.Ports.Parity\"></xref> enumeration values.","nodes":[{"pos":[0,101],"content":"<ph id=\"ph1\">&lt;code&gt;parity&lt;/code&gt;</ph> is not one of the <ph id=\"ph2\">&lt;xref href=\"System.IO.Ports.Parity\"&gt;&lt;/xref&gt;</ph> enumeration values.","source":"<code>parity</code> is not one of the <xref href=\"System.IO.Ports.Parity\"></xref> enumeration values."}],"pos":[17904,18006],"yaml":true},{"content":"Creates and opens a <xref href=\"System.IO.Ports.SerialPort\"></xref> object.","nodes":[{"pos":[0,75],"content":"Creates and opens a <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object.","source":"Creates and opens a <xref href=\"System.IO.Ports.SerialPort\"></xref> object."}],"pos":[19199,19275],"yaml":true},{"content":"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.  \n  \n Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.  \n  \n The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.  \n  \n|To|See|  \n|-|-|  \n|Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  \n|Send a string to serial port|[How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  \n|Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|-|-|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|","nodes":[{"pos":[0,224],"content":"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.","nodes":[{"content":"The <ph id=\"ph1\">`My.Computer.Ports.OpenSerialPort`</ph> method creates and opens a <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object.","pos":[0,107],"source":"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object."},{"content":"The arguments to the <ph id=\"ph1\">`OpenSerialPort`</ph> method determine the settings of the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object.","pos":[108,224],"source":" The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object."}]},{"pos":[231,534],"content":"Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.","nodes":[{"content":"Your code should close the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object when it is finished using the object.","pos":[0,105],"source":"Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.Close%2A&gt;</ph> method to close the object explicitly or the <ph id=\"ph2\">`Using`</ph> statement to close it implicitly.","pos":[106,251],"source":" You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly."},{"content":"See the example in this topic for more information.","pos":[252,303]}]},{"pos":[541,641],"content":"The following table lists examples of tasks involving the <ph id=\"ph1\">`My.Computer.Ports.OpenSerialPort`</ph> method.","source":"The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method."},{"pos":[648,650],"content":"To","nodes":[{"content":"To","pos":[0,2]}]},{"pos":[651,654],"content":"See","nodes":[{"content":"See","pos":[0,3]}]},{"pos":[667,705],"content":"Dial a modem attached to a serial port","nodes":[{"content":"Dial a modem attached to a serial port","pos":[0,38]}]},{"pos":[706,867],"content":"<bpt id=\"p1\">[</bpt>How to: Dial Modems Attached to Serial Ports<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)</ept>","source":"[How to: Dial Modems Attached to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)"},{"pos":[872,900],"content":"Send a string to serial port","nodes":[{"content":"Send a string to serial port","pos":[0,28]}]},{"pos":[901,1046],"content":"<bpt id=\"p1\">[</bpt>How to: Send Strings to Serial Ports<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)</ept>","source":"[How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)"},{"pos":[1051,1085],"content":"Receive strings from a serial port","nodes":[{"content":"Receive strings from a serial port","pos":[0,34]}]},{"pos":[1086,1241],"content":"<bpt id=\"p1\">[</bpt>How to: Receive Strings From Serial Ports<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)</ept>","source":"[How to: Receive Strings From Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)"},{"pos":[1251,1279],"content":"Availability by Project Type","linkify":"Availability by Project Type","nodes":[{"content":"Availability by Project Type","pos":[0,28]}]},{"pos":[1286,1298],"content":"Project type","nodes":[{"content":"Project type","pos":[0,12]}]},{"pos":[1299,1308],"content":"Available","nodes":[{"content":"Available","pos":[0,9]}]},{"pos":[1321,1340],"content":"Windows Application","nodes":[{"content":"Windows Application","pos":[0,19]}]},{"pos":[1341,1348],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1353,1366],"content":"Class Library","nodes":[{"content":"Class Library","pos":[0,13]}]},{"pos":[1367,1374],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1379,1398],"content":"Console Application","nodes":[{"content":"Console Application","pos":[0,19]}]},{"pos":[1399,1406],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1411,1434],"content":"Windows Control Library","nodes":[{"content":"Windows Control Library","pos":[0,23]}]},{"pos":[1435,1442],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1447,1466],"content":"Web Control Library","nodes":[{"content":"Web Control Library","pos":[0,19]}]},{"pos":[1467,1469],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[1474,1489],"content":"Windows Service","nodes":[{"content":"Windows Service","pos":[0,15]}]},{"pos":[1490,1497],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1502,1510],"content":"Web Site","nodes":[{"content":"Web Site","pos":[0,8]}]},{"pos":[1511,1513],"content":"No","nodes":[{"content":"No","pos":[0,2]}]}],"pos":[19286,20825],"yaml":true,"extradata":"MT"},{"content":"`String`. Required. Name of the port to open.","nodes":[{"pos":[0,45],"content":"`String`. Required. Name of the port to open.","nodes":[{"content":"<ph id=\"ph1\">`String`</ph>.","pos":[0,9],"source":"`String`."},{"content":"Required.","pos":[10,19]},{"content":"Name of the port to open.","pos":[20,45]}]}],"pos":[21863,21911],"yaml":true},{"content":"`Integer`. Baud rate of the port.","nodes":[{"pos":[0,33],"content":"`Integer`. Baud rate of the port.","nodes":[{"content":"<ph id=\"ph1\">`Integer`</ph>.","pos":[0,10],"source":"`Integer`."},{"content":"Baud rate of the port.","pos":[11,33]}]}],"pos":[21974,22010],"yaml":true},{"content":"<xref href=\"System.IO.Ports.Parity\"></xref>. Parity of the port.","nodes":[{"pos":[0,64],"content":"<xref href=\"System.IO.Ports.Parity\"></xref>. Parity of the port.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.Parity\"&gt;&lt;/xref&gt;</ph>.","pos":[0,44],"source":"<xref href=\"System.IO.Ports.Parity\"></xref>."},{"content":"Parity of the port.","pos":[45,64]}]}],"pos":[22081,22146],"yaml":true},{"content":"`Integer`. Data-bit setting of the port.","nodes":[{"pos":[0,40],"content":"`Integer`. Data-bit setting of the port.","nodes":[{"content":"<ph id=\"ph1\">`Integer`</ph>.","pos":[0,10],"source":"`Integer`."},{"content":"Data-bit setting of the port.","pos":[11,40]}]}],"pos":[22209,22252],"yaml":true},{"content":"An open <xref href=\"System.IO.Ports.SerialPort\"></xref> object, configured with the supplied arguments.","nodes":[{"pos":[0,103],"content":"An open <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object, configured with the supplied arguments.","source":"An open <xref href=\"System.IO.Ports.SerialPort\"></xref> object, configured with the supplied arguments."}],"pos":[22322,22426],"yaml":true},{"content":"<code>portName</code> is `Nothing` or an empty string.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;portName&lt;/code&gt;</ph> is <ph id=\"ph2\">`Nothing`</ph> or an empty string.","source":"<code>portName</code> is `Nothing` or an empty string."}],"pos":[22606,22661],"yaml":true},{"content":"<code>dataBits</code> is less than or equal to zero.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">&lt;code&gt;dataBits&lt;/code&gt;</ph> is less than or equal to zero.","source":"<code>dataBits</code> is less than or equal to zero."}],"pos":[22755,22808],"yaml":true},{"content":"<code>parity</code> is not one of the <xref href=\"System.IO.Ports.Parity\"></xref> enumeration values.","nodes":[{"pos":[0,101],"content":"<ph id=\"ph1\">&lt;code&gt;parity&lt;/code&gt;</ph> is not one of the <ph id=\"ph2\">&lt;xref href=\"System.IO.Ports.Parity\"&gt;&lt;/xref&gt;</ph> enumeration values.","source":"<code>parity</code> is not one of the <xref href=\"System.IO.Ports.Parity\"></xref> enumeration values."}],"pos":[22954,23056],"yaml":true},{"content":"Creates and opens a <xref href=\"System.IO.Ports.SerialPort\"></xref> object.","nodes":[{"pos":[0,75],"content":"Creates and opens a <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object.","source":"Creates and opens a <xref href=\"System.IO.Ports.SerialPort\"></xref> object."}],"pos":[24354,24430],"yaml":true},{"content":"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.  \n  \n Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.  \n  \n The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.  \n  \n|To|See|  \n|-|-|  \n|Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  \n|Send a string to serial port|[How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  \n|Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|-|-|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|","nodes":[{"pos":[0,224],"content":"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.","nodes":[{"content":"The <ph id=\"ph1\">`My.Computer.Ports.OpenSerialPort`</ph> method creates and opens a <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object.","pos":[0,107],"source":"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object."},{"content":"The arguments to the <ph id=\"ph1\">`OpenSerialPort`</ph> method determine the settings of the <ph id=\"ph2\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object.","pos":[108,224],"source":" The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object."}]},{"pos":[231,534],"content":"Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.","nodes":[{"content":"Your code should close the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort&gt;</ph> object when it is finished using the object.","pos":[0,105],"source":"Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.IO.Ports.SerialPort.Close%2A&gt;</ph> method to close the object explicitly or the <ph id=\"ph2\">`Using`</ph> statement to close it implicitly.","pos":[106,251],"source":" You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly."},{"content":"See the example in this topic for more information.","pos":[252,303]}]},{"pos":[541,641],"content":"The following table lists examples of tasks involving the <ph id=\"ph1\">`My.Computer.Ports.OpenSerialPort`</ph> method.","source":"The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method."},{"pos":[648,650],"content":"To","nodes":[{"content":"To","pos":[0,2]}]},{"pos":[651,654],"content":"See","nodes":[{"content":"See","pos":[0,3]}]},{"pos":[667,705],"content":"Dial a modem attached to a serial port","nodes":[{"content":"Dial a modem attached to a serial port","pos":[0,38]}]},{"pos":[706,867],"content":"<bpt id=\"p1\">[</bpt>How to: Dial Modems Attached to Serial Ports<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)</ept>","source":"[How to: Dial Modems Attached to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)"},{"pos":[872,900],"content":"Send a string to serial port","nodes":[{"content":"Send a string to serial port","pos":[0,28]}]},{"pos":[901,1046],"content":"<bpt id=\"p1\">[</bpt>How to: Send Strings to Serial Ports<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)</ept>","source":"[How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)"},{"pos":[1051,1085],"content":"Receive strings from a serial port","nodes":[{"content":"Receive strings from a serial port","pos":[0,34]}]},{"pos":[1086,1241],"content":"<bpt id=\"p1\">[</bpt>How to: Receive Strings From Serial Ports<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)</ept>","source":"[How to: Receive Strings From Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)"},{"pos":[1251,1279],"content":"Availability by Project Type","linkify":"Availability by Project Type","nodes":[{"content":"Availability by Project Type","pos":[0,28]}]},{"pos":[1286,1298],"content":"Project type","nodes":[{"content":"Project type","pos":[0,12]}]},{"pos":[1299,1308],"content":"Available","nodes":[{"content":"Available","pos":[0,9]}]},{"pos":[1321,1340],"content":"Windows Application","nodes":[{"content":"Windows Application","pos":[0,19]}]},{"pos":[1341,1348],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1353,1366],"content":"Class Library","nodes":[{"content":"Class Library","pos":[0,13]}]},{"pos":[1367,1374],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1379,1398],"content":"Console Application","nodes":[{"content":"Console Application","pos":[0,19]}]},{"pos":[1399,1406],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1411,1434],"content":"Windows Control Library","nodes":[{"content":"Windows Control Library","pos":[0,23]}]},{"pos":[1435,1442],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1447,1466],"content":"Web Control Library","nodes":[{"content":"Web Control Library","pos":[0,19]}]},{"pos":[1467,1469],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[1474,1489],"content":"Windows Service","nodes":[{"content":"Windows Service","pos":[0,15]}]},{"pos":[1490,1497],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[1502,1510],"content":"Web Site","nodes":[{"content":"Web Site","pos":[0,8]}]},{"pos":[1511,1513],"content":"No","nodes":[{"content":"No","pos":[0,2]}]}],"pos":[24441,25980],"yaml":true,"extradata":"MT"},{"content":"`String`. Required. Name of the port to open.","nodes":[{"pos":[0,45],"content":"`String`. Required. Name of the port to open.","nodes":[{"content":"<ph id=\"ph1\">`String`</ph>.","pos":[0,9],"source":"`String`."},{"content":"Required.","pos":[10,19]},{"content":"Name of the port to open.","pos":[20,45]}]}],"pos":[27053,27101],"yaml":true},{"content":"`Integer`. Baud rate of the port.","nodes":[{"pos":[0,33],"content":"`Integer`. Baud rate of the port.","nodes":[{"content":"<ph id=\"ph1\">`Integer`</ph>.","pos":[0,10],"source":"`Integer`."},{"content":"Baud rate of the port.","pos":[11,33]}]}],"pos":[27164,27200],"yaml":true},{"content":"<xref href=\"System.IO.Ports.Parity\"></xref>. Parity of the port.","nodes":[{"pos":[0,64],"content":"<xref href=\"System.IO.Ports.Parity\"></xref>. Parity of the port.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.Parity\"&gt;&lt;/xref&gt;</ph>.","pos":[0,44],"source":"<xref href=\"System.IO.Ports.Parity\"></xref>."},{"content":"Parity of the port.","pos":[45,64]}]}],"pos":[27271,27336],"yaml":true},{"content":"`Integer`. Data-bit setting of the port.","nodes":[{"pos":[0,40],"content":"`Integer`. Data-bit setting of the port.","nodes":[{"content":"<ph id=\"ph1\">`Integer`</ph>.","pos":[0,10],"source":"`Integer`."},{"content":"Data-bit setting of the port.","pos":[11,40]}]}],"pos":[27399,27442],"yaml":true},{"content":"<xref href=\"System.IO.Ports.StopBits\"></xref>. Stop-bit setting of the port.","nodes":[{"pos":[0,76],"content":"<xref href=\"System.IO.Ports.StopBits\"></xref>. Stop-bit setting of the port.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.StopBits\"&gt;&lt;/xref&gt;</ph>.","pos":[0,46],"source":"<xref href=\"System.IO.Ports.StopBits\"></xref>."},{"content":"Stop-bit setting of the port.","pos":[47,76]}]}],"pos":[27517,27594],"yaml":true},{"content":"An open <xref href=\"System.IO.Ports.SerialPort\"></xref> object, configured with the supplied arguments.","nodes":[{"pos":[0,103],"content":"An open <ph id=\"ph1\">&lt;xref href=\"System.IO.Ports.SerialPort\"&gt;&lt;/xref&gt;</ph> object, configured with the supplied arguments.","source":"An open <xref href=\"System.IO.Ports.SerialPort\"></xref> object, configured with the supplied arguments."}],"pos":[27664,27768],"yaml":true},{"content":"<code>portName</code> is `Nothing` or an empty string.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;portName&lt;/code&gt;</ph> is <ph id=\"ph2\">`Nothing`</ph> or an empty string.","source":"<code>portName</code> is `Nothing` or an empty string."}],"pos":[27948,28003],"yaml":true},{"content":"<code>dataBits</code> is less than or equal to zero.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">&lt;code&gt;dataBits&lt;/code&gt;</ph> is less than or equal to zero.","source":"<code>dataBits</code> is less than or equal to zero."}],"pos":[28097,28150],"yaml":true},{"content":"<code>stopBits</code> is not one of the <xref href=\"System.IO.Ports.StopBits\"></xref> enumeration values.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">&lt;code&gt;stopBits&lt;/code&gt;</ph> is not one of the <ph id=\"ph2\">&lt;xref href=\"System.IO.Ports.StopBits\"&gt;&lt;/xref&gt;</ph> enumeration values.","source":"<code>stopBits</code> is not one of the <xref href=\"System.IO.Ports.StopBits\"></xref> enumeration values."}],"pos":[28296,28402],"yaml":true},{"content":"Gets a collection of the names of the serial ports on the computer.","nodes":[{"pos":[0,67],"content":"Gets a collection of the names of the serial ports on the computer.","nodes":[{"content":"Gets a collection of the names of the serial ports on the computer.","pos":[0,67]}]}],"pos":[29321,29389],"yaml":true},{"content":"The `My.Computer.Ports.SerialPortNames` property gets a collection of the names of the serial ports on the computer.  \n  \n> [!NOTE]\n>  The port names returned by `My.Computer.Ports.SerialPortNames` may be incorrect when run on Windows 98. To prevent application errors, use exception handling, such as the `Try...Catch...Finally` statement or the `Using` statement, when using the port names to open ports.  \n  \n The following table lists an example of a task involving the `My.Computer.Ports.SerialPortNames` property.  \n  \n|To|See|  \n|-|-|  \n|Show available serial ports|[How to: Show Available Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)|  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|-|-|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|","nodes":[{"pos":[0,116],"content":"The <ph id=\"ph1\">`My.Computer.Ports.SerialPortNames`</ph> property gets a collection of the names of the serial ports on the computer.","source":"The `My.Computer.Ports.SerialPortNames` property gets a collection of the names of the serial ports on the computer."},{"pos":[124,406],"content":"[!NOTE]\n The port names returned by `My.Computer.Ports.SerialPortNames` may be incorrect when run on Windows 98. To prevent application errors, use exception handling, such as the `Try...Catch...Finally` statement or the `Using` statement, when using the port names to open ports.","leadings":["","> "],"nodes":[{"content":" The port names returned by `My.Computer.Ports.SerialPortNames` may be incorrect when run on Windows 98. To prevent application errors, use exception handling, such as the `Try...Catch...Finally` statement or the `Using` statement, when using the port names to open ports.","pos":[8,280],"nodes":[{"content":"The port names returned by <ph id=\"ph1\">`My.Computer.Ports.SerialPortNames`</ph> may be incorrect when run on Windows 98.","pos":[1,104],"source":" The port names returned by `My.Computer.Ports.SerialPortNames` may be incorrect when run on Windows 98."},{"content":"To prevent application errors, use exception handling, such as the <ph id=\"ph1\">`Try...Catch...Finally`</ph> statement or the <ph id=\"ph2\">`Using`</ph> statement, when using the port names to open ports.","pos":[105,272],"source":" To prevent application errors, use exception handling, such as the `Try...Catch...Finally` statement or the `Using` statement, when using the port names to open ports."}]}]},{"pos":[413,519],"content":"The following table lists an example of a task involving the <ph id=\"ph1\">`My.Computer.Ports.SerialPortNames`</ph> property.","source":"The following table lists an example of a task involving the `My.Computer.Ports.SerialPortNames` property."},{"pos":[526,528],"content":"To","nodes":[{"content":"To","pos":[0,2]}]},{"pos":[529,532],"content":"See","nodes":[{"content":"See","pos":[0,3]}]},{"pos":[545,572],"content":"Show available serial ports","nodes":[{"content":"Show available serial ports","pos":[0,27]}]},{"pos":[573,716],"content":"<bpt id=\"p1\">[</bpt>How to: Show Available Serial Ports<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)</ept>","source":"[How to: Show Available Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)"},{"pos":[726,754],"content":"Availability by Project Type","linkify":"Availability by Project Type","nodes":[{"content":"Availability by Project Type","pos":[0,28]}]},{"pos":[761,773],"content":"Project type","nodes":[{"content":"Project type","pos":[0,12]}]},{"pos":[774,783],"content":"Available","nodes":[{"content":"Available","pos":[0,9]}]},{"pos":[796,815],"content":"Windows Application","nodes":[{"content":"Windows Application","pos":[0,19]}]},{"pos":[816,823],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[828,841],"content":"Class Library","nodes":[{"content":"Class Library","pos":[0,13]}]},{"pos":[842,849],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[854,873],"content":"Console Application","nodes":[{"content":"Console Application","pos":[0,19]}]},{"pos":[874,881],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[886,909],"content":"Windows Control Library","nodes":[{"content":"Windows Control Library","pos":[0,23]}]},{"pos":[910,917],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[922,941],"content":"Web Control Library","nodes":[{"content":"Web Control Library","pos":[0,19]}]},{"pos":[942,944],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[949,964],"content":"Windows Service","nodes":[{"content":"Windows Service","pos":[0,15]}]},{"pos":[965,972],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[977,985],"content":"Web Site","nodes":[{"content":"Web Site","pos":[0,8]}]},{"pos":[986,988],"content":"No","nodes":[{"content":"No","pos":[0,2]}]}],"pos":[29400,30413],"yaml":true,"extradata":"MT"},{"content":"A collection of the names of the serial ports on the computer.","nodes":[{"pos":[0,62],"content":"A collection of the names of the serial ports on the computer.","nodes":[{"content":"A collection of the names of the serial ports on the computer.","pos":[0,62]}]}],"pos":[31669,31732],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.Devices.Ports\n  commentId: T:Microsoft.VisualBasic.Devices.Ports\n  id: Ports\n  children:\n  - Microsoft.VisualBasic.Devices.Ports.#ctor\n  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)\n  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)\n  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)\n  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)\n  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)\n  - Microsoft.VisualBasic.Devices.Ports.SerialPortNames\n  langs:\n  - csharp\n  name: Ports\n  nameWithType: Ports\n  fullName: Microsoft.VisualBasic.Devices.Ports\n  type: Class\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Provides a property and a method for accessing the computer's serial ports.\n  remarks: \"The `My.Computer.Ports` object provides a straightforward entry point for accessing the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] serial port class, <xref:System.IO.Ports.SerialPort>.  \\n  \\n The following table lists examples of tasks involving the `My.Computer.Ports` object.  \\n  \\n|To|See|  \\n|-|-|  \\n|Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  \\n|Send a string to a serial port|[How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  \\n|Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  \\n|Show available serial ports|[How to: Show Available Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)|  \\n  \\n## Availability by Project Type  \\n  \\n|Project type|Available|  \\n|-|-|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example describes how to send strings to the computer's `COM1` serial port.  \\n  \\n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \\n  \\n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \\n  \\n [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  \\n  \\n For more information, see [How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).\"\n  syntax:\n    content: public class Ports\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Ports.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Devices.Ports.#ctor\n  commentId: M:Microsoft.VisualBasic.Devices.Ports.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualBasic.Devices.Ports\n  langs:\n  - csharp\n  name: Ports()\n  nameWithType: Ports.Ports()\n  fullName: Ports.Ports()\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.Devices.Ports\"></xref> class.\n  syntax:\n    content: public Ports ();\n    parameters: []\n  overload: Microsoft.VisualBasic.Devices.Ports.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Ports.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)\n  commentId: M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)\n  id: OpenSerialPort(System.String)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  langs:\n  - csharp\n  name: OpenSerialPort(String)\n  nameWithType: Ports.OpenSerialPort(String)\n  fullName: Ports.OpenSerialPort(String)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Creates and opens a <xref href=\"System.IO.Ports.SerialPort\"></xref> object.\n  remarks: \"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.  \\n  \\n Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.  \\n  \\n The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.  \\n  \\n|To|See|  \\n|-|-|  \\n|Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  \\n|Send a string to serial port|[How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  \\n|Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  \\n  \\n## Availability by Project Type  \\n  \\n|Project type|Available|  \\n|-|-|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example describes how to send strings to the computer's `COM1` serial port.  \\n  \\n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \\n  \\n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \\n  \\n [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  \\n  \\n For more information, see [How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).\"\n  syntax:\n    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName);\n    parameters:\n    - id: portName\n      type: System.String\n      description: '`String`. Required. Name of the port to open.'\n    return:\n      type: System.IO.Ports.SerialPort\n      description: An open <xref href=\"System.IO.Ports.SerialPort\"></xref> object, configured with the supplied arguments.\n  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>portName</code> is `Nothing` or an empty string.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Ports.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)\n  commentId: M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)\n  id: OpenSerialPort(System.String,System.Int32)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  langs:\n  - csharp\n  name: OpenSerialPort(String, Int32)\n  nameWithType: Ports.OpenSerialPort(String, Int32)\n  fullName: Ports.OpenSerialPort(String, Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Creates and opens a <xref href=\"System.IO.Ports.SerialPort\"></xref> object.\n  remarks: \"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.  \\n  \\n Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.  \\n  \\n The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.  \\n  \\n|To|See|  \\n|-|-|  \\n|Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  \\n|Send a string to serial port|[How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  \\n|Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  \\n  \\n## Availability by Project Type  \\n  \\n|Project type|Available|  \\n|-|-|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example describes how to send strings to the computer's `COM1` serial port.  \\n  \\n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \\n  \\n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \\n  \\n [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  \\n  \\n For more information, see [How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).\"\n  syntax:\n    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate);\n    parameters:\n    - id: portName\n      type: System.String\n      description: '`String`. Required. Name of the port to open.'\n    - id: baudRate\n      type: System.Int32\n      description: '`Integer`. Baud rate of the port.'\n    return:\n      type: System.IO.Ports.SerialPort\n      description: An open <xref href=\"System.IO.Ports.SerialPort\"></xref> object, configured with the supplied arguments.\n  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>portName</code> is `Nothing` or an empty string.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>baudRate</code> is less than or equal to zero.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Ports.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)\n  commentId: M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)\n  id: OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  langs:\n  - csharp\n  name: OpenSerialPort(String, Int32, Parity)\n  nameWithType: Ports.OpenSerialPort(String, Int32, Parity)\n  fullName: Ports.OpenSerialPort(String, Int32, Parity)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Creates and opens a <xref href=\"System.IO.Ports.SerialPort\"></xref> object.\n  remarks: \"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.  \\n  \\n Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.  \\n  \\n The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.  \\n  \\n|To|See|  \\n|-|-|  \\n|Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  \\n|Send a string to serial port|[How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  \\n|Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  \\n  \\n## Availability by Project Type  \\n  \\n|Project type|Available|  \\n|-|-|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example describes how to send strings to the computer's `COM1` serial port.  \\n  \\n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \\n  \\n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \\n  \\n [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  \\n  \\n For more information, see [How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).\"\n  syntax:\n    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity);\n    parameters:\n    - id: portName\n      type: System.String\n      description: '`String`. Required. Name of the port to open.'\n    - id: baudRate\n      type: System.Int32\n      description: '`Integer`. Baud rate of the port.'\n    - id: parity\n      type: System.IO.Ports.Parity\n      description: <xref href=\"System.IO.Ports.Parity\"></xref>. Parity of the port.\n    return:\n      type: System.IO.Ports.SerialPort\n      description: An open <xref href=\"System.IO.Ports.SerialPort\"></xref> object, configured with the supplied arguments.\n  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>portName</code> is `Nothing` or an empty string.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>baudRate</code> is less than or equal to zero.\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: <code>parity</code> is not one of the <xref href=\"System.IO.Ports.Parity\"></xref> enumeration values.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Ports.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)\n  commentId: M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)\n  id: OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  langs:\n  - csharp\n  name: OpenSerialPort(String, Int32, Parity, Int32)\n  nameWithType: Ports.OpenSerialPort(String, Int32, Parity, Int32)\n  fullName: Ports.OpenSerialPort(String, Int32, Parity, Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Creates and opens a <xref href=\"System.IO.Ports.SerialPort\"></xref> object.\n  remarks: \"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.  \\n  \\n Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.  \\n  \\n The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.  \\n  \\n|To|See|  \\n|-|-|  \\n|Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  \\n|Send a string to serial port|[How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  \\n|Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  \\n  \\n## Availability by Project Type  \\n  \\n|Project type|Available|  \\n|-|-|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example describes how to send strings to the computer's `COM1` serial port.  \\n  \\n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \\n  \\n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \\n  \\n [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  \\n  \\n For more information, see [How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).\"\n  syntax:\n    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits);\n    parameters:\n    - id: portName\n      type: System.String\n      description: '`String`. Required. Name of the port to open.'\n    - id: baudRate\n      type: System.Int32\n      description: '`Integer`. Baud rate of the port.'\n    - id: parity\n      type: System.IO.Ports.Parity\n      description: <xref href=\"System.IO.Ports.Parity\"></xref>. Parity of the port.\n    - id: dataBits\n      type: System.Int32\n      description: '`Integer`. Data-bit setting of the port.'\n    return:\n      type: System.IO.Ports.SerialPort\n      description: An open <xref href=\"System.IO.Ports.SerialPort\"></xref> object, configured with the supplied arguments.\n  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>portName</code> is `Nothing` or an empty string.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>dataBits</code> is less than or equal to zero.\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: <code>parity</code> is not one of the <xref href=\"System.IO.Ports.Parity\"></xref> enumeration values.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Ports.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)\n  commentId: M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)\n  id: OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  langs:\n  - csharp\n  name: OpenSerialPort(String, Int32, Parity, Int32, StopBits)\n  nameWithType: Ports.OpenSerialPort(String, Int32, Parity, Int32, StopBits)\n  fullName: Ports.OpenSerialPort(String, Int32, Parity, Int32, StopBits)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Creates and opens a <xref href=\"System.IO.Ports.SerialPort\"></xref> object.\n  remarks: \"The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.  \\n  \\n Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.  \\n  \\n The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.  \\n  \\n|To|See|  \\n|-|-|  \\n|Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  \\n|Send a string to serial port|[How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  \\n|Receive strings from a serial port|[How to: Receive Strings From Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  \\n  \\n## Availability by Project Type  \\n  \\n|Project type|Available|  \\n|-|-|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example describes how to send strings to the computer's `COM1` serial port.  \\n  \\n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \\n  \\n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \\n  \\n [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  \\n  \\n For more information, see [How to: Send Strings to Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md).\"\n  syntax:\n    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits, System.IO.Ports.StopBits stopBits);\n    parameters:\n    - id: portName\n      type: System.String\n      description: '`String`. Required. Name of the port to open.'\n    - id: baudRate\n      type: System.Int32\n      description: '`Integer`. Baud rate of the port.'\n    - id: parity\n      type: System.IO.Ports.Parity\n      description: <xref href=\"System.IO.Ports.Parity\"></xref>. Parity of the port.\n    - id: dataBits\n      type: System.Int32\n      description: '`Integer`. Data-bit setting of the port.'\n    - id: stopBits\n      type: System.IO.Ports.StopBits\n      description: <xref href=\"System.IO.Ports.StopBits\"></xref>. Stop-bit setting of the port.\n    return:\n      type: System.IO.Ports.SerialPort\n      description: An open <xref href=\"System.IO.Ports.SerialPort\"></xref> object, configured with the supplied arguments.\n  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>portName</code> is `Nothing` or an empty string.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>dataBits</code> is less than or equal to zero.\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: <code>stopBits</code> is not one of the <xref href=\"System.IO.Ports.StopBits\"></xref> enumeration values.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Ports.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Devices.Ports.SerialPortNames\n  commentId: P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames\n  id: SerialPortNames\n  parent: Microsoft.VisualBasic.Devices.Ports\n  langs:\n  - csharp\n  name: SerialPortNames\n  nameWithType: Ports.SerialPortNames\n  fullName: Ports.SerialPortNames\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets a collection of the names of the serial ports on the computer.\n  remarks: \"The `My.Computer.Ports.SerialPortNames` property gets a collection of the names of the serial ports on the computer.  \\n  \\n> [!NOTE]\\n>  The port names returned by `My.Computer.Ports.SerialPortNames` may be incorrect when run on Windows 98. To prevent application errors, use exception handling, such as the `Try...Catch...Finally` statement or the `Using` statement, when using the port names to open ports.  \\n  \\n The following table lists an example of a task involving the `My.Computer.Ports.SerialPortNames` property.  \\n  \\n|To|See|  \\n|-|-|  \\n|Show available serial ports|[How to: Show Available Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)|  \\n  \\n## Availability by Project Type  \\n  \\n|Project type|Available|  \\n|-|-|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example loops over all the strings that the `My.Computer.Ports.SerialPortNames` property returns. These strings are the names of the available serial ports on the computer.  \\n  \\n Typically, a user selects which serial port the application should use from the list of available ports. In this example, the serial port names are stored in a <xref:System.Windows.Forms.ListBox> control. For more information, see [ListBox Control](~/docs/framework/winforms/controls/listbox-control-windows-forms.md).  \\n  \\n [!code-vb[VbVbalrMyComputer#45](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#45)]  \\n  \\n This example requires:  \\n  \\n-   A reference to the <xref:System?displayProperty=fullName> namespace.  \\n  \\n-   That your form have a <xref:System.Windows.Forms.ListBox> control named `ListBox1`.  \\n  \\n For more information, see [How to: Show Available Serial Ports](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md).\"\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> SerialPortNames { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}\n      description: A collection of the names of the serial ports on the computer.\n  overload: Microsoft.VisualBasic.Devices.Ports.SerialPortNames*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  altCompliant: None.\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Ports.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ComponentModel.InvalidEnumArgumentException\n  parent: System.ComponentModel\n  isExternal: false\n  name: InvalidEnumArgumentException\n  nameWithType: InvalidEnumArgumentException\n  fullName: System.ComponentModel.InvalidEnumArgumentException\n- uid: Microsoft.VisualBasic.Devices.Ports.#ctor\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  name: Ports()\n  nameWithType: Ports.Ports()\n  fullName: Ports.Ports()\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  name: OpenSerialPort(String)\n  nameWithType: Ports.OpenSerialPort(String)\n  fullName: Ports.OpenSerialPort(String)\n- uid: System.IO.Ports.SerialPort\n  parent: System.IO.Ports\n  isExternal: false\n  name: SerialPort\n  nameWithType: SerialPort\n  fullName: System.IO.Ports.SerialPort\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  name: OpenSerialPort(String, Int32)\n  nameWithType: Ports.OpenSerialPort(String, Int32)\n  fullName: Ports.OpenSerialPort(String, Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  name: OpenSerialPort(String, Int32, Parity)\n  nameWithType: Ports.OpenSerialPort(String, Int32, Parity)\n  fullName: Ports.OpenSerialPort(String, Int32, Parity)\n- uid: System.IO.Ports.Parity\n  parent: System.IO.Ports\n  isExternal: false\n  name: Parity\n  nameWithType: Parity\n  fullName: System.IO.Ports.Parity\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  name: OpenSerialPort(String, Int32, Parity, Int32)\n  nameWithType: Ports.OpenSerialPort(String, Int32, Parity, Int32)\n  fullName: Ports.OpenSerialPort(String, Int32, Parity, Int32)\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  name: OpenSerialPort(String, Int32, Parity, Int32, StopBits)\n  nameWithType: Ports.OpenSerialPort(String, Int32, Parity, Int32, StopBits)\n  fullName: Ports.OpenSerialPort(String, Int32, Parity, Int32, StopBits)\n- uid: System.IO.Ports.StopBits\n  parent: System.IO.Ports\n  isExternal: false\n  name: StopBits\n  nameWithType: StopBits\n  fullName: System.IO.Ports.StopBits\n- uid: Microsoft.VisualBasic.Devices.Ports.SerialPortNames\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  name: SerialPortNames\n  nameWithType: Ports.SerialPortNames\n  fullName: Ports.SerialPortNames\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<String>\n  nameWithType: ReadOnlyCollection<String>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: Microsoft.VisualBasic.Devices.Ports.#ctor*\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  name: Ports\n  nameWithType: Ports.Ports\n  fullName: Ports.Ports\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Ports.xml\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  name: OpenSerialPort\n  nameWithType: Ports.OpenSerialPort\n  fullName: Ports.OpenSerialPort\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Ports.xml\n- uid: Microsoft.VisualBasic.Devices.Ports.SerialPortNames*\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  name: SerialPortNames\n  nameWithType: Ports.SerialPortNames\n  fullName: Ports.SerialPortNames\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Ports.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}