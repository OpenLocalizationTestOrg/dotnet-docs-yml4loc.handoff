{"nodes":[{"content":"Configures the security settings of a local service. This class cannot be inherited.","nodes":[{"pos":[0,84],"content":"Configures the security settings of a local service. This class cannot be inherited.","nodes":[{"content":"Configures the security settings of a local service. This class cannot be inherited.","pos":[0,84],"nodes":[{"content":"Configures the security settings of a local service.","pos":[0,52]},{"content":"This class cannot be inherited.","pos":[53,84]}]}]}],"pos":[2042,2127],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\"></xref> class.","nodes":[{"pos":[0,131],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\"></xref> class."}],"pos":[6682,6814],"yaml":true},{"content":"Gets or sets a Boolean value that specifies whether replay attacks against the channel are detected and dealt with automatically.","nodes":[{"pos":[0,129],"content":"Gets or sets a Boolean value that specifies whether replay attacks against the channel are detected and dealt with automatically.","nodes":[{"content":"Gets or sets a Boolean value that specifies whether replay attacks against the channel are detected and dealt with automatically.","pos":[0,129]}]}],"pos":[8147,8277],"yaml":true},{"content":"`true` if replay attacks against the channel are detected and dealt with automatically; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,131],"content":"`true` if replay attacks against the channel are detected and dealt with automatically; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if replay attacks against the channel are detected and dealt with automatically; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,107],"source":"`true` if replay attacks against the channel are detected and dealt with automatically; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[108,131],"source":" The default is `false`."}]}],"pos":[8525,8659],"yaml":true},{"content":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the duration of inactivity the channel waits before it times out.","nodes":[{"pos":[0,132],"content":"Gets or sets a <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the duration of inactivity the channel waits before it times out.","source":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the duration of inactivity the channel waits before it times out."}],"pos":[10011,10144],"yaml":true},{"content":"A positive <xref href=\"System.TimeSpan\"></xref> that specifies the duration of inactivity the channel waits before it times out. The default is \"01:00:00\".","nodes":[{"pos":[0,155],"content":"A positive <xref href=\"System.TimeSpan\"></xref> that specifies the duration of inactivity the channel waits before it times out. The default is \"01:00:00\".","nodes":[{"content":"A positive <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the duration of inactivity the channel waits before it times out.","pos":[0,128],"source":"A positive <xref href=\"System.TimeSpan\"></xref> that specifies the duration of inactivity the channel waits before it times out."},{"content":"The default is \"01:00:00\".","pos":[129,155]}]}],"pos":[10521,10677],"yaml":true},{"content":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the lifetime issued to all new security cookies.","nodes":[{"pos":[0,115],"content":"Gets or sets a <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the lifetime issued to all new security cookies.","source":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the lifetime issued to all new security cookies."}],"pos":[12106,12222],"yaml":true},{"content":"Cookies that exceed their lifetime are recycled and must be negotiated again.","nodes":[{"pos":[0,77],"content":"Cookies that exceed their lifetime are recycled and must be negotiated again.","nodes":[{"content":"Cookies that exceed their lifetime are recycled and must be negotiated again.","pos":[0,77]}]}],"pos":[12233,12311],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.TimeSpan\"></xref> that specifies the lifetime issued to all new security cookies. The default value is \"10:00:00\".","nodes":[{"pos":[0,135],"content":"A <xref href=\"System.TimeSpan\"></xref> that specifies the lifetime issued to all new security cookies. The default value is \"10:00:00\".","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the lifetime issued to all new security cookies.","pos":[0,102],"source":"A <xref href=\"System.TimeSpan\"></xref> that specifies the lifetime issued to all new security cookies."},{"content":"The default value is \"10:00:00\".","pos":[103,135]}]}],"pos":[12694,12830],"yaml":true},{"content":"Gets or sets a value that specifies the maximum number of cookies that can be cached.","nodes":[{"pos":[0,85],"content":"Gets or sets a value that specifies the maximum number of cookies that can be cached.","nodes":[{"content":"Gets or sets a value that specifies the maximum number of cookies that can be cached.","pos":[0,85]}]}],"pos":[14238,14324],"yaml":true},{"content":"The maximum number of cookies that can be cached.","nodes":[{"pos":[0,49],"content":"The maximum number of cookies that can be cached.","nodes":[{"content":"The maximum number of cookies that can be cached.","pos":[0,49]}]}],"pos":[14634,14684],"yaml":true},{"content":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the maximum time difference between the system clocks of the two communicating parties.","nodes":[{"pos":[0,154],"content":"Gets or sets a <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the maximum time difference between the system clocks of the two communicating parties.","source":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the maximum time difference between the system clocks of the two communicating parties."}],"pos":[16066,16221],"yaml":true},{"content":"When this property is set to the default, the receiver accepts messages with send-time timestamps up to 5 minutes later or earlier than the time the message was received. Messages that do not pass the send-time test are rejected. This setting is used in conjunction with the <xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayWindow%2A> property.","nodes":[{"pos":[0,376],"content":"When this property is set to the default, the receiver accepts messages with send-time timestamps up to 5 minutes later or earlier than the time the message was received. Messages that do not pass the send-time test are rejected. This setting is used in conjunction with the <xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayWindow%2A> property.","nodes":[{"content":"When this property is set to the default, the receiver accepts messages with send-time timestamps up to 5 minutes later or earlier than the time the message was received. Messages that do not pass the send-time test are rejected. This setting is used in conjunction with the <xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayWindow%2A> property.","pos":[0,376],"nodes":[{"content":"When this property is set to the default, the receiver accepts messages with send-time timestamps up to 5 minutes later or earlier than the time the message was received.","pos":[0,170]},{"content":"Messages that do not pass the send-time test are rejected.","pos":[171,229]},{"content":"This setting is used in conjunction with the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayWindow%2A&gt;</ph> property.","pos":[230,376],"source":" This setting is used in conjunction with the <xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayWindow%2A> property."}]}]}],"pos":[16232,16609],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.TimeSpan\"></xref> that specifies the maximum time difference between the system clocks of the two communicating parties. The default value is \"00:05:00\".","nodes":[{"pos":[0,174],"content":"A <xref href=\"System.TimeSpan\"></xref> that specifies the maximum time difference between the system clocks of the two communicating parties. The default value is \"00:05:00\".","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the maximum time difference between the system clocks of the two communicating parties.","pos":[0,141],"source":"A <xref href=\"System.TimeSpan\"></xref> that specifies the maximum time difference between the system clocks of the two communicating parties."},{"content":"The default value is \"00:05:00\".","pos":[142,174]}]}],"pos":[16976,17151],"yaml":true},{"content":"Gets or sets a value that specifies the maximum number of pending security sessions that the service supports.","nodes":[{"pos":[0,110],"content":"Gets or sets a value that specifies the maximum number of pending security sessions that the service supports.","nodes":[{"content":"Gets or sets a value that specifies the maximum number of pending security sessions that the service supports.","pos":[0,110]}]}],"pos":[18563,18674],"yaml":true},{"content":"When this limit is reached, all new clients receive SOAP faults.","nodes":[{"pos":[0,64],"content":"When this limit is reached, all new clients receive SOAP faults.","nodes":[{"content":"When this limit is reached, all new clients receive SOAP faults.","pos":[0,64]}]}],"pos":[18685,18750],"yaml":true,"extradata":"MT"},{"content":"The maximum number of pending security sessions that the service supports. The default value is 1000.","nodes":[{"pos":[0,101],"content":"The maximum number of pending security sessions that the service supports. The default value is 1000.","nodes":[{"content":"The maximum number of pending security sessions that the service supports. The default value is 1000.","pos":[0,101],"nodes":[{"content":"The maximum number of pending security sessions that the service supports.","pos":[0,74]},{"content":"The default value is 1000.","pos":[75,101]}]}]}],"pos":[19064,19166],"yaml":true},{"content":"Gets or sets a value that specifies the number of security negotiations that can be active concurrently.","nodes":[{"pos":[0,104],"content":"Gets or sets a value that specifies the number of security negotiations that can be active concurrently.","nodes":[{"content":"Gets or sets a value that specifies the number of security negotiations that can be active concurrently.","pos":[0,104]}]}],"pos":[20616,20721],"yaml":true},{"content":"Negotiation sessions in excess of the limit are queued. They can only be completed when a space below the limit becomes available.","nodes":[{"pos":[0,130],"content":"Negotiation sessions in excess of the limit are queued. They can only be completed when a space below the limit becomes available.","nodes":[{"content":"Negotiation sessions in excess of the limit are queued. They can only be completed when a space below the limit becomes available.","pos":[0,130],"nodes":[{"content":"Negotiation sessions in excess of the limit are queued.","pos":[0,55]},{"content":"They can only be completed when a space below the limit becomes available.","pos":[56,130]}]}]}],"pos":[20732,20863],"yaml":true,"extradata":"MT"},{"content":"The number of security negotiations that can be active concurrently. The default value is 1024.","nodes":[{"pos":[0,95],"content":"The number of security negotiations that can be active concurrently. The default value is 1024.","nodes":[{"content":"The number of security negotiations that can be active concurrently. The default value is 1024.","pos":[0,95],"nodes":[{"content":"The number of security negotiations that can be active concurrently.","pos":[0,68]},{"content":"The default value is 1024.","pos":[69,95]}]}]}],"pos":[21187,21283],"yaml":true},{"content":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the maximum duration for the security negotiation phase between server and client.","nodes":[{"pos":[0,149],"content":"Gets or sets a <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the maximum duration for the security negotiation phase between server and client.","source":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the maximum duration for the security negotiation phase between server and client."}],"pos":[22708,22858],"yaml":true},{"content":"If the time limit expires, an exception is thrown.","nodes":[{"pos":[0,50],"content":"If the time limit expires, an exception is thrown.","nodes":[{"content":"If the time limit expires, an exception is thrown.","pos":[0,50]}]}],"pos":[22869,22920],"yaml":true,"extradata":"MT"},{"content":"A positive <xref href=\"System.TimeSpan\"></xref> value that specifies the maximum duration for the security negotiation phase between server and client. The default is \"00:02:00\"","nodes":[{"pos":[0,177],"content":"A positive <xref href=\"System.TimeSpan\"></xref> value that specifies the maximum duration for the security negotiation phase between server and client. The default is \"00:02:00\"","nodes":[{"content":"A positive <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> value that specifies the maximum duration for the security negotiation phase between server and client.","pos":[0,151],"source":"A positive <xref href=\"System.TimeSpan\"></xref> value that specifies the maximum duration for the security negotiation phase between server and client."},{"content":"The default is \"00:02:00\"","pos":[152,177]}]}],"pos":[23299,23477],"yaml":true},{"content":"Gets or sets a Boolean value that specifies whether connections using WS-Reliable messaging attempt to reconnect after transport failures.","nodes":[{"pos":[0,138],"content":"Gets or sets a Boolean value that specifies whether connections using WS-Reliable messaging attempt to reconnect after transport failures.","nodes":[{"content":"Gets or sets a Boolean value that specifies whether connections using WS-Reliable messaging attempt to reconnect after transport failures.","pos":[0,138]}]}],"pos":[26291,26430],"yaml":true},{"content":"If this property is `true`, infinite reconnect attempts are attempted. The cycle is only broken by the inactivity time-out, which causes the channel to throw an exception when it cannot be reconnected.","nodes":[{"pos":[0,201],"content":"If this property is `true`, infinite reconnect attempts are attempted. The cycle is only broken by the inactivity time-out, which causes the channel to throw an exception when it cannot be reconnected.","nodes":[{"content":"If this property is <ph id=\"ph1\">`true`</ph>, infinite reconnect attempts are attempted.","pos":[0,70],"source":"If this property is `true`, infinite reconnect attempts are attempted."},{"content":"The cycle is only broken by the inactivity time-out, which causes the channel to throw an exception when it cannot be reconnected.","pos":[71,201]}]}],"pos":[26441,26643],"yaml":true,"extradata":"MT"},{"content":"`true` if connections using WS-Reliable messaging attempt to reconnect after transport failures; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,139],"content":"`true` if connections using WS-Reliable messaging attempt to reconnect after transport failures; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if connections using WS-Reliable messaging attempt to reconnect after transport failures; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,116],"source":"`true` if connections using WS-Reliable messaging attempt to reconnect after transport failures; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[117,139],"source":" The default is `true`."}]}],"pos":[26919,27061],"yaml":true},{"content":"Gets or sets a value that specifies the number of cached nonces used for replay detection.","nodes":[{"pos":[0,90],"content":"Gets or sets a value that specifies the number of cached nonces used for replay detection.","nodes":[{"content":"Gets or sets a value that specifies the number of cached nonces used for replay detection.","pos":[0,90]}]}],"pos":[28415,28506],"yaml":true},{"content":"If this limit is exceeded, the oldest nonce is removed and a new nonce is created for the new message.","nodes":[{"pos":[0,102],"content":"If this limit is exceeded, the oldest nonce is removed and a new nonce is created for the new message.","nodes":[{"content":"If this limit is exceeded, the oldest nonce is removed and a new nonce is created for the new message.","pos":[0,102]}]}],"pos":[28517,28620],"yaml":true,"extradata":"MT"},{"content":"The number of cached nonces used for replay detection. The default value is 500000.","nodes":[{"pos":[0,83],"content":"The number of cached nonces used for replay detection. The default value is 500000.","nodes":[{"content":"The number of cached nonces used for replay detection. The default value is 500000.","pos":[0,83],"nodes":[{"content":"The number of cached nonces used for replay detection.","pos":[0,54]},{"content":"The default value is 500000.","pos":[55,83]}]}]}],"pos":[28928,29012],"yaml":true},{"content":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the duration in which individual message nonces are valid.","nodes":[{"pos":[0,125],"content":"Gets or sets a <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the duration in which individual message nonces are valid.","source":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the duration in which individual message nonces are valid."}],"pos":[30393,30519],"yaml":true},{"content":"After the time specified by this property, a message sent with the same nonce as the one sent before is not accepted. This property is used in conjunction with the <xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxClockSkew%2A> property to prevent replay attacks. An attacker can replay a message after its replay window has expired. This message, however, fails the maxClockSkew test that rejects messages with send-time timestamps up to a specified time later or earlier than the time the message was received.","nodes":[{"pos":[0,540],"content":"After the time specified by this property, a message sent with the same nonce as the one sent before is not accepted. This property is used in conjunction with the <xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxClockSkew%2A> property to prevent replay attacks. An attacker can replay a message after its replay window has expired. This message, however, fails the maxClockSkew test that rejects messages with send-time timestamps up to a specified time later or earlier than the time the message was received.","nodes":[{"content":"After the time specified by this property, a message sent with the same nonce as the one sent before is not accepted. This property is used in conjunction with the <xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxClockSkew%2A> property to prevent replay attacks. An attacker can replay a message after its replay window has expired. This message, however, fails the maxClockSkew test that rejects messages with send-time timestamps up to a specified time later or earlier than the time the message was received.","pos":[0,540],"nodes":[{"content":"After the time specified by this property, a message sent with the same nonce as the one sent before is not accepted.","pos":[0,117]},{"content":"This property is used in conjunction with the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxClockSkew%2A&gt;</ph> property to prevent replay attacks.","pos":[118,291],"source":" This property is used in conjunction with the <xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxClockSkew%2A> property to prevent replay attacks."},{"content":"An attacker can replay a message after its replay window has expired.","pos":[292,361]},{"content":"This message, however, fails the maxClockSkew test that rejects messages with send-time timestamps up to a specified time later or earlier than the time the message was received.","pos":[362,540]}]}]}],"pos":[30530,31071],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.TimeSpan\"></xref> that specifies the duration in which individual message nonces are valid.","nodes":[{"pos":[0,112],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the duration in which individual message nonces are valid.","source":"A <xref href=\"System.TimeSpan\"></xref> that specifies the duration in which individual message nonces are valid."}],"pos":[31438,31551],"yaml":true},{"content":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the duration after which the initiator renews the key for the security session.","nodes":[{"pos":[0,146],"content":"Gets or sets a <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the duration after which the initiator renews the key for the security session.","source":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the duration after which the initiator renews the key for the security session."}],"pos":[33005,33152],"yaml":true},{"content":"A <xref href=\"System.TimeSpan\"></xref> that specifies the duration after which the initiator renews the key for the security session. The default is \"10:00:00\".","nodes":[{"pos":[0,160],"content":"A <xref href=\"System.TimeSpan\"></xref> that specifies the duration after which the initiator renews the key for the security session. The default is \"10:00:00\".","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the duration after which the initiator renews the key for the security session.","pos":[0,133],"source":"A <xref href=\"System.TimeSpan\"></xref> that specifies the duration after which the initiator renews the key for the security session."},{"content":"The default is \"10:00:00\".","pos":[134,160]}]}],"pos":[33545,33706],"yaml":true},{"content":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the time interval a previous session key is valid on incoming messages during a key renewal. The default is \"00:05:00\".","nodes":[{"pos":[0,186],"content":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the time interval a previous session key is valid on incoming messages during a key renewal. The default is \"00:05:00\".","nodes":[{"content":"Gets or sets a <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the time interval a previous session key is valid on incoming messages during a key renewal.","pos":[0,159],"source":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the time interval a previous session key is valid on incoming messages during a key renewal."},{"content":"The default is \"00:05:00\".","pos":[160,186]}]}],"pos":[35179,35366],"yaml":true},{"content":"During key renewal, the client and server must always send messages using the most current available key. Both parties accept incoming messages secured with the previous session key until the rollover time specified by this property expires.","nodes":[{"pos":[0,241],"content":"During key renewal, the client and server must always send messages using the most current available key. Both parties accept incoming messages secured with the previous session key until the rollover time specified by this property expires.","nodes":[{"content":"During key renewal, the client and server must always send messages using the most current available key. Both parties accept incoming messages secured with the previous session key until the rollover time specified by this property expires.","pos":[0,241],"nodes":[{"content":"During key renewal, the client and server must always send messages using the most current available key.","pos":[0,105]},{"content":"Both parties accept incoming messages secured with the previous session key until the rollover time specified by this property expires.","pos":[106,241]}]}]}],"pos":[35377,35619],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.TimeSpan\"></xref> that specifies the duration a previous session key is valid on incoming messages during a key renewal. The default is \"00:05:00\".","nodes":[{"pos":[0,168],"content":"A <xref href=\"System.TimeSpan\"></xref> that specifies the duration a previous session key is valid on incoming messages during a key renewal. The default is \"00:05:00\".","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the duration a previous session key is valid on incoming messages during a key renewal.","pos":[0,141],"source":"A <xref href=\"System.TimeSpan\"></xref> that specifies the duration a previous session key is valid on incoming messages during a key renewal."},{"content":"The default is \"00:05:00\".","pos":[142,168]}]}],"pos":[36014,36183],"yaml":true},{"content":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the duration in which a time stamp is valid.","nodes":[{"pos":[0,111],"content":"Gets or sets a <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the duration in which a time stamp is valid.","source":"Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the duration in which a time stamp is valid."}],"pos":[37651,37763],"yaml":true},{"content":"A positive <xref href=\"System.TimeSpan\"></xref> that specifies the duration in which a time stamp is valid. The default is \"00:15:00\".","nodes":[{"pos":[0,134],"content":"A positive <xref href=\"System.TimeSpan\"></xref> that specifies the duration in which a time stamp is valid. The default is \"00:15:00\".","nodes":[{"content":"A positive <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies the duration in which a time stamp is valid.","pos":[0,107],"source":"A positive <xref href=\"System.TimeSpan\"></xref> that specifies the duration in which a time stamp is valid."},{"content":"The default is \"00:15:00\".","pos":[108,134]}]}],"pos":[38156,38291],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  commentId: T:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  id: LocalServiceSecuritySettingsElement\n  children:\n  - System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.#ctor\n  - System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.DetectReplays\n  - System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.InactivityTimeout\n  - System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.IssuedCookieLifetime\n  - System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxCachedCookies\n  - System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxClockSkew\n  - System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxPendingSessions\n  - System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxStatefulNegotiations\n  - System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.NegotiationTimeout\n  - System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.Properties\n  - System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.ReconnectTransportOnFailure\n  - System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.ReplayCacheSize\n  - System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.ReplayWindow\n  - System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.SessionKeyRenewalInterval\n  - System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.SessionKeyRolloverInterval\n  - System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.TimestampValidityDuration\n  langs:\n  - csharp\n  name: LocalServiceSecuritySettingsElement\n  nameWithType: LocalServiceSecuritySettingsElement\n  fullName: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Configures the security settings of a local service. This class cannot be inherited.\n  syntax:\n    content: 'public sealed class LocalServiceSecuritySettingsElement : System.ServiceModel.Configuration.ServiceModelConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.#ctor\n  commentId: M:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  langs:\n  - csharp\n  name: LocalServiceSecuritySettingsElement()\n  nameWithType: LocalServiceSecuritySettingsElement.LocalServiceSecuritySettingsElement()\n  fullName: LocalServiceSecuritySettingsElement.LocalServiceSecuritySettingsElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\"></xref> class.\n  syntax:\n    content: public LocalServiceSecuritySettingsElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.DetectReplays\n  commentId: P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.DetectReplays\n  id: DetectReplays\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  langs:\n  - csharp\n  name: DetectReplays\n  nameWithType: LocalServiceSecuritySettingsElement.DetectReplays\n  fullName: LocalServiceSecuritySettingsElement.DetectReplays\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a Boolean value that specifies whether replay attacks against the channel are detected and dealt with automatically.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"detectReplays\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool DetectReplays { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if replay attacks against the channel are detected and dealt with automatically; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.DetectReplays*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.InactivityTimeout\n  commentId: P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.InactivityTimeout\n  id: InactivityTimeout\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  langs:\n  - csharp\n  name: InactivityTimeout\n  nameWithType: LocalServiceSecuritySettingsElement.InactivityTimeout\n  fullName: LocalServiceSecuritySettingsElement.InactivityTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the duration of inactivity the channel waits before it times out.\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"inactivityTimeout\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public TimeSpan InactivityTimeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A positive <xref href=\"System.TimeSpan\"></xref> that specifies the duration of inactivity the channel waits before it times out. The default is \"01:00:00\".\n  overload: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.InactivityTimeout*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.IssuedCookieLifetime\n  commentId: P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.IssuedCookieLifetime\n  id: IssuedCookieLifetime\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  langs:\n  - csharp\n  name: IssuedCookieLifetime\n  nameWithType: LocalServiceSecuritySettingsElement.IssuedCookieLifetime\n  fullName: LocalServiceSecuritySettingsElement.IssuedCookieLifetime\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the lifetime issued to all new security cookies.\n  remarks: Cookies that exceed their lifetime are recycled and must be negotiated again.\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"issuedCookieLifetime\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public TimeSpan IssuedCookieLifetime { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A <xref href=\"System.TimeSpan\"></xref> that specifies the lifetime issued to all new security cookies. The default value is \"10:00:00\".\n  overload: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.IssuedCookieLifetime*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxCachedCookies\n  commentId: P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxCachedCookies\n  id: MaxCachedCookies\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  langs:\n  - csharp\n  name: MaxCachedCookies\n  nameWithType: LocalServiceSecuritySettingsElement.MaxCachedCookies\n  fullName: LocalServiceSecuritySettingsElement.MaxCachedCookies\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies the maximum number of cookies that can be cached.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"maxCachedCookies\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.IntegerValidator(MinValue=0)]\n\n      public int MaxCachedCookies { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of cookies that can be cached.\n  overload: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxCachedCookies*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.IntegerValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxClockSkew\n  commentId: P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxClockSkew\n  id: MaxClockSkew\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  langs:\n  - csharp\n  name: MaxClockSkew\n  nameWithType: LocalServiceSecuritySettingsElement.MaxClockSkew\n  fullName: LocalServiceSecuritySettingsElement.MaxClockSkew\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the maximum time difference between the system clocks of the two communicating parties.\n  remarks: When this property is set to the default, the receiver accepts messages with send-time timestamps up to 5 minutes later or earlier than the time the message was received. Messages that do not pass the send-time test are rejected. This setting is used in conjunction with the <xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.ReplayWindow%2A> property.\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"maxClockSkew\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public TimeSpan MaxClockSkew { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A <xref href=\"System.TimeSpan\"></xref> that specifies the maximum time difference between the system clocks of the two communicating parties. The default value is \"00:05:00\".\n  overload: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxClockSkew*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxPendingSessions\n  commentId: P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxPendingSessions\n  id: MaxPendingSessions\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  langs:\n  - csharp\n  name: MaxPendingSessions\n  nameWithType: LocalServiceSecuritySettingsElement.MaxPendingSessions\n  fullName: LocalServiceSecuritySettingsElement.MaxPendingSessions\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies the maximum number of pending security sessions that the service supports.\n  remarks: When this limit is reached, all new clients receive SOAP faults.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"maxPendingSessions\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.IntegerValidator(MinValue=1)]\n\n      public int MaxPendingSessions { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of pending security sessions that the service supports. The default value is 1000.\n  overload: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxPendingSessions*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.IntegerValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxStatefulNegotiations\n  commentId: P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxStatefulNegotiations\n  id: MaxStatefulNegotiations\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  langs:\n  - csharp\n  name: MaxStatefulNegotiations\n  nameWithType: LocalServiceSecuritySettingsElement.MaxStatefulNegotiations\n  fullName: LocalServiceSecuritySettingsElement.MaxStatefulNegotiations\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies the number of security negotiations that can be active concurrently.\n  remarks: Negotiation sessions in excess of the limit are queued. They can only be completed when a space below the limit becomes available.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"maxStatefulNegotiations\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.IntegerValidator(MinValue=0)]\n\n      public int MaxStatefulNegotiations { get; set; }\n    return:\n      type: System.Int32\n      description: The number of security negotiations that can be active concurrently. The default value is 1024.\n  overload: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxStatefulNegotiations*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.IntegerValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.NegotiationTimeout\n  commentId: P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.NegotiationTimeout\n  id: NegotiationTimeout\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  langs:\n  - csharp\n  name: NegotiationTimeout\n  nameWithType: LocalServiceSecuritySettingsElement.NegotiationTimeout\n  fullName: LocalServiceSecuritySettingsElement.NegotiationTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the maximum duration for the security negotiation phase between server and client.\n  remarks: If the time limit expires, an exception is thrown.\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"negotiationTimeout\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public TimeSpan NegotiationTimeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A positive <xref href=\"System.TimeSpan\"></xref> value that specifies the maximum duration for the security negotiation phase between server and client. The default is \"00:02:00\"\n  overload: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.NegotiationTimeout*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.Properties\n  commentId: P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: LocalServiceSecuritySettingsElement.Properties\n  fullName: LocalServiceSecuritySettingsElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: ''\n  overload: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.Properties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.ReconnectTransportOnFailure\n  commentId: P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.ReconnectTransportOnFailure\n  id: ReconnectTransportOnFailure\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  langs:\n  - csharp\n  name: ReconnectTransportOnFailure\n  nameWithType: LocalServiceSecuritySettingsElement.ReconnectTransportOnFailure\n  fullName: LocalServiceSecuritySettingsElement.ReconnectTransportOnFailure\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a Boolean value that specifies whether connections using WS-Reliable messaging attempt to reconnect after transport failures.\n  remarks: If this property is `true`, infinite reconnect attempts are attempted. The cycle is only broken by the inactivity time-out, which causes the channel to throw an exception when it cannot be reconnected.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"reconnectTransportOnFailure\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool ReconnectTransportOnFailure { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if connections using WS-Reliable messaging attempt to reconnect after transport failures; otherwise, `false`. The default is `true`.'\n  overload: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.ReconnectTransportOnFailure*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.ReplayCacheSize\n  commentId: P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.ReplayCacheSize\n  id: ReplayCacheSize\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  langs:\n  - csharp\n  name: ReplayCacheSize\n  nameWithType: LocalServiceSecuritySettingsElement.ReplayCacheSize\n  fullName: LocalServiceSecuritySettingsElement.ReplayCacheSize\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that specifies the number of cached nonces used for replay detection.\n  remarks: If this limit is exceeded, the oldest nonce is removed and a new nonce is created for the new message.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"replayCacheSize\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.IntegerValidator(MinValue=1)]\n\n      public int ReplayCacheSize { get; set; }\n    return:\n      type: System.Int32\n      description: The number of cached nonces used for replay detection. The default value is 500000.\n  overload: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.ReplayCacheSize*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.IntegerValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.ReplayWindow\n  commentId: P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.ReplayWindow\n  id: ReplayWindow\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  langs:\n  - csharp\n  name: ReplayWindow\n  nameWithType: LocalServiceSecuritySettingsElement.ReplayWindow\n  fullName: LocalServiceSecuritySettingsElement.ReplayWindow\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the duration in which individual message nonces are valid.\n  remarks: After the time specified by this property, a message sent with the same nonce as the one sent before is not accepted. This property is used in conjunction with the <xref:System.ServiceModel.Configuration.LocalClientSecuritySettingsElement.MaxClockSkew%2A> property to prevent replay attacks. An attacker can replay a message after its replay window has expired. This message, however, fails the maxClockSkew test that rejects messages with send-time timestamps up to a specified time later or earlier than the time the message was received.\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"replayWindow\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public TimeSpan ReplayWindow { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A <xref href=\"System.TimeSpan\"></xref> that specifies the duration in which individual message nonces are valid.\n  overload: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.ReplayWindow*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.SessionKeyRenewalInterval\n  commentId: P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.SessionKeyRenewalInterval\n  id: SessionKeyRenewalInterval\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  langs:\n  - csharp\n  name: SessionKeyRenewalInterval\n  nameWithType: LocalServiceSecuritySettingsElement.SessionKeyRenewalInterval\n  fullName: LocalServiceSecuritySettingsElement.SessionKeyRenewalInterval\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the duration after which the initiator renews the key for the security session.\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"sessionKeyRenewalInterval\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public TimeSpan SessionKeyRenewalInterval { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A <xref href=\"System.TimeSpan\"></xref> that specifies the duration after which the initiator renews the key for the security session. The default is \"10:00:00\".\n  overload: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.SessionKeyRenewalInterval*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.SessionKeyRolloverInterval\n  commentId: P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.SessionKeyRolloverInterval\n  id: SessionKeyRolloverInterval\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  langs:\n  - csharp\n  name: SessionKeyRolloverInterval\n  nameWithType: LocalServiceSecuritySettingsElement.SessionKeyRolloverInterval\n  fullName: LocalServiceSecuritySettingsElement.SessionKeyRolloverInterval\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the time interval a previous session key is valid on incoming messages during a key renewal. The default is \"00:05:00\".\n  remarks: During key renewal, the client and server must always send messages using the most current available key. Both parties accept incoming messages secured with the previous session key until the rollover time specified by this property expires.\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"sessionKeyRolloverInterval\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public TimeSpan SessionKeyRolloverInterval { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A <xref href=\"System.TimeSpan\"></xref> that specifies the duration a previous session key is valid on incoming messages during a key renewal. The default is \"00:05:00\".\n  overload: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.SessionKeyRolloverInterval*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.TimestampValidityDuration\n  commentId: P:System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.TimestampValidityDuration\n  id: TimestampValidityDuration\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  langs:\n  - csharp\n  name: TimestampValidityDuration\n  nameWithType: LocalServiceSecuritySettingsElement.TimestampValidityDuration\n  fullName: LocalServiceSecuritySettingsElement.TimestampValidityDuration\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a <xref href=\"System.TimeSpan\"></xref> that specifies the duration in which a time stamp is valid.\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"timestampValidityDuration\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public TimeSpan TimestampValidityDuration { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A positive <xref href=\"System.TimeSpan\"></xref> that specifies the duration in which a time stamp is valid. The default is \"00:15:00\".\n  overload: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.TimestampValidityDuration*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: ServiceModelConfigurationElement\n  nameWithType: ServiceModelConfigurationElement\n  fullName: System.ServiceModel.Configuration.ServiceModelConfigurationElement\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.#ctor\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: LocalServiceSecuritySettingsElement()\n  nameWithType: LocalServiceSecuritySettingsElement.LocalServiceSecuritySettingsElement()\n  fullName: LocalServiceSecuritySettingsElement.LocalServiceSecuritySettingsElement()\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.DetectReplays\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: DetectReplays\n  nameWithType: LocalServiceSecuritySettingsElement.DetectReplays\n  fullName: LocalServiceSecuritySettingsElement.DetectReplays\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.InactivityTimeout\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: InactivityTimeout\n  nameWithType: LocalServiceSecuritySettingsElement.InactivityTimeout\n  fullName: LocalServiceSecuritySettingsElement.InactivityTimeout\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.IssuedCookieLifetime\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: IssuedCookieLifetime\n  nameWithType: LocalServiceSecuritySettingsElement.IssuedCookieLifetime\n  fullName: LocalServiceSecuritySettingsElement.IssuedCookieLifetime\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxCachedCookies\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: MaxCachedCookies\n  nameWithType: LocalServiceSecuritySettingsElement.MaxCachedCookies\n  fullName: LocalServiceSecuritySettingsElement.MaxCachedCookies\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxClockSkew\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: MaxClockSkew\n  nameWithType: LocalServiceSecuritySettingsElement.MaxClockSkew\n  fullName: LocalServiceSecuritySettingsElement.MaxClockSkew\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxPendingSessions\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: MaxPendingSessions\n  nameWithType: LocalServiceSecuritySettingsElement.MaxPendingSessions\n  fullName: LocalServiceSecuritySettingsElement.MaxPendingSessions\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxStatefulNegotiations\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: MaxStatefulNegotiations\n  nameWithType: LocalServiceSecuritySettingsElement.MaxStatefulNegotiations\n  fullName: LocalServiceSecuritySettingsElement.MaxStatefulNegotiations\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.NegotiationTimeout\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: NegotiationTimeout\n  nameWithType: LocalServiceSecuritySettingsElement.NegotiationTimeout\n  fullName: LocalServiceSecuritySettingsElement.NegotiationTimeout\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.Properties\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: Properties\n  nameWithType: LocalServiceSecuritySettingsElement.Properties\n  fullName: LocalServiceSecuritySettingsElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.ReconnectTransportOnFailure\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: ReconnectTransportOnFailure\n  nameWithType: LocalServiceSecuritySettingsElement.ReconnectTransportOnFailure\n  fullName: LocalServiceSecuritySettingsElement.ReconnectTransportOnFailure\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.ReplayCacheSize\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: ReplayCacheSize\n  nameWithType: LocalServiceSecuritySettingsElement.ReplayCacheSize\n  fullName: LocalServiceSecuritySettingsElement.ReplayCacheSize\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.ReplayWindow\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: ReplayWindow\n  nameWithType: LocalServiceSecuritySettingsElement.ReplayWindow\n  fullName: LocalServiceSecuritySettingsElement.ReplayWindow\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.SessionKeyRenewalInterval\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: SessionKeyRenewalInterval\n  nameWithType: LocalServiceSecuritySettingsElement.SessionKeyRenewalInterval\n  fullName: LocalServiceSecuritySettingsElement.SessionKeyRenewalInterval\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.SessionKeyRolloverInterval\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: SessionKeyRolloverInterval\n  nameWithType: LocalServiceSecuritySettingsElement.SessionKeyRolloverInterval\n  fullName: LocalServiceSecuritySettingsElement.SessionKeyRolloverInterval\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.TimestampValidityDuration\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: TimestampValidityDuration\n  nameWithType: LocalServiceSecuritySettingsElement.TimestampValidityDuration\n  fullName: LocalServiceSecuritySettingsElement.TimestampValidityDuration\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.#ctor*\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: LocalServiceSecuritySettingsElement\n  nameWithType: LocalServiceSecuritySettingsElement.LocalServiceSecuritySettingsElement\n  fullName: LocalServiceSecuritySettingsElement.LocalServiceSecuritySettingsElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.DetectReplays*\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: DetectReplays\n  nameWithType: LocalServiceSecuritySettingsElement.DetectReplays\n  fullName: LocalServiceSecuritySettingsElement.DetectReplays\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.InactivityTimeout*\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: InactivityTimeout\n  nameWithType: LocalServiceSecuritySettingsElement.InactivityTimeout\n  fullName: LocalServiceSecuritySettingsElement.InactivityTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.IssuedCookieLifetime*\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: IssuedCookieLifetime\n  nameWithType: LocalServiceSecuritySettingsElement.IssuedCookieLifetime\n  fullName: LocalServiceSecuritySettingsElement.IssuedCookieLifetime\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxCachedCookies*\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: MaxCachedCookies\n  nameWithType: LocalServiceSecuritySettingsElement.MaxCachedCookies\n  fullName: LocalServiceSecuritySettingsElement.MaxCachedCookies\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxClockSkew*\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: MaxClockSkew\n  nameWithType: LocalServiceSecuritySettingsElement.MaxClockSkew\n  fullName: LocalServiceSecuritySettingsElement.MaxClockSkew\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxPendingSessions*\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: MaxPendingSessions\n  nameWithType: LocalServiceSecuritySettingsElement.MaxPendingSessions\n  fullName: LocalServiceSecuritySettingsElement.MaxPendingSessions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.MaxStatefulNegotiations*\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: MaxStatefulNegotiations\n  nameWithType: LocalServiceSecuritySettingsElement.MaxStatefulNegotiations\n  fullName: LocalServiceSecuritySettingsElement.MaxStatefulNegotiations\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.NegotiationTimeout*\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: NegotiationTimeout\n  nameWithType: LocalServiceSecuritySettingsElement.NegotiationTimeout\n  fullName: LocalServiceSecuritySettingsElement.NegotiationTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.Properties*\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: Properties\n  nameWithType: LocalServiceSecuritySettingsElement.Properties\n  fullName: LocalServiceSecuritySettingsElement.Properties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.ReconnectTransportOnFailure*\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: ReconnectTransportOnFailure\n  nameWithType: LocalServiceSecuritySettingsElement.ReconnectTransportOnFailure\n  fullName: LocalServiceSecuritySettingsElement.ReconnectTransportOnFailure\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.ReplayCacheSize*\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: ReplayCacheSize\n  nameWithType: LocalServiceSecuritySettingsElement.ReplayCacheSize\n  fullName: LocalServiceSecuritySettingsElement.ReplayCacheSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.ReplayWindow*\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: ReplayWindow\n  nameWithType: LocalServiceSecuritySettingsElement.ReplayWindow\n  fullName: LocalServiceSecuritySettingsElement.ReplayWindow\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.SessionKeyRenewalInterval*\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: SessionKeyRenewalInterval\n  nameWithType: LocalServiceSecuritySettingsElement.SessionKeyRenewalInterval\n  fullName: LocalServiceSecuritySettingsElement.SessionKeyRenewalInterval\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.SessionKeyRolloverInterval*\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: SessionKeyRolloverInterval\n  nameWithType: LocalServiceSecuritySettingsElement.SessionKeyRolloverInterval\n  fullName: LocalServiceSecuritySettingsElement.SessionKeyRolloverInterval\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n- uid: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement.TimestampValidityDuration*\n  parent: System.ServiceModel.Configuration.LocalServiceSecuritySettingsElement\n  isExternal: false\n  name: TimestampValidityDuration\n  nameWithType: LocalServiceSecuritySettingsElement.TimestampValidityDuration\n  fullName: LocalServiceSecuritySettingsElement.TimestampValidityDuration\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/LocalServiceSecuritySettingsElement.xml\n- uid: System.Configuration.ConfigurationElement.Equals(System.Object)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ConfigurationElement.Equals(Object)\n  fullName: ConfigurationElement.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Configuration.ConfigurationElement.GetHashCode\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ConfigurationElement.GetHashCode()\n  fullName: ConfigurationElement.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.ConfigurationElement.CurrentConfiguration\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: CurrentConfiguration\n  nameWithType: ConfigurationElement.CurrentConfiguration\n  fullName: ConfigurationElement.CurrentConfiguration\n- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: DeserializeElement(XmlReader, Boolean)\n  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n  fullName: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n- uid: System.Configuration.ConfigurationElement.ElementInformation\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementInformation\n  nameWithType: ConfigurationElement.ElementInformation\n  fullName: ConfigurationElement.ElementInformation\n- uid: System.Configuration.ConfigurationElement.ElementProperty\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementProperty\n  nameWithType: ConfigurationElement.ElementProperty\n  fullName: ConfigurationElement.ElementProperty\n- uid: System.Configuration.ConfigurationElement.EvaluationContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: EvaluationContext\n  nameWithType: ConfigurationElement.EvaluationContext\n  fullName: ConfigurationElement.EvaluationContext\n- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedAssemblyString(String)\n  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)\n  fullName: ConfigurationElement.GetTransformedAssemblyString(String)\n- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedTypeString(String)\n  nameWithType: ConfigurationElement.GetTransformedTypeString(String)\n  fullName: ConfigurationElement.GetTransformedTypeString(String)\n- uid: System.Configuration.ConfigurationElement.HasContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: HasContext\n  nameWithType: ConfigurationElement.HasContext\n  fullName: ConfigurationElement.HasContext\n- uid: System.Configuration.ConfigurationElement.Init\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Init()\n  nameWithType: ConfigurationElement.Init()\n  fullName: ConfigurationElement.Init()\n- uid: System.Configuration.ConfigurationElement.InitializeDefault\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: InitializeDefault()\n  nameWithType: ConfigurationElement.InitializeDefault()\n  fullName: ConfigurationElement.InitializeDefault()\n- uid: System.Configuration.ConfigurationElement.IsModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsModified()\n  nameWithType: ConfigurationElement.IsModified()\n  fullName: ConfigurationElement.IsModified()\n- uid: System.Configuration.ConfigurationElement.IsReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsReadOnly()\n  nameWithType: ConfigurationElement.IsReadOnly()\n  fullName: ConfigurationElement.IsReadOnly()\n- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(ConfigurationProperty)\n  nameWithType: ConfigurationElement.Item(ConfigurationProperty)\n  fullName: ConfigurationElement.Item(ConfigurationProperty)\n- uid: System.Configuration.ConfigurationElement.Item(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(String)\n  nameWithType: ConfigurationElement.Item(String)\n  fullName: ConfigurationElement.Item(String)\n- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ListErrors(IList)\n  nameWithType: ConfigurationElement.ListErrors(IList)\n  fullName: ConfigurationElement.ListErrors(IList)\n- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllAttributesExcept\n  nameWithType: ConfigurationElement.LockAllAttributesExcept\n  fullName: ConfigurationElement.LockAllAttributesExcept\n- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllElementsExcept\n  nameWithType: ConfigurationElement.LockAllElementsExcept\n  fullName: ConfigurationElement.LockAllElementsExcept\n- uid: System.Configuration.ConfigurationElement.LockAttributes\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAttributes\n  nameWithType: ConfigurationElement.LockAttributes\n  fullName: ConfigurationElement.LockAttributes\n- uid: System.Configuration.ConfigurationElement.LockElements\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockElements\n  nameWithType: ConfigurationElement.LockElements\n  fullName: ConfigurationElement.LockElements\n- uid: System.Configuration.ConfigurationElement.LockItem\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockItem\n  nameWithType: ConfigurationElement.LockItem\n  fullName: ConfigurationElement.LockItem\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedAttribute(String, String)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedElement(String, XmlReader)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnRequiredPropertyNotFound(String)\n  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)\n  fullName: ConfigurationElement.OnRequiredPropertyNotFound(String)\n- uid: System.Configuration.ConfigurationElement.PostDeserialize\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PostDeserialize()\n  nameWithType: ConfigurationElement.PostDeserialize()\n  fullName: ConfigurationElement.PostDeserialize()\n- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PreSerialize(XmlWriter)\n  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)\n  fullName: ConfigurationElement.PreSerialize(XmlWriter)\n- uid: System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: ConfigurationElement.Reset(ConfigurationElement)\n  fullName: ConfigurationElement.Reset(ConfigurationElement)\n- uid: System.Configuration.ConfigurationElement.ResetModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ResetModified()\n  nameWithType: ConfigurationElement.ResetModified()\n  fullName: ConfigurationElement.ResetModified()\n- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeElement(XmlWriter, Boolean)\n  nameWithType: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n  fullName: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeToXmlElement(XmlWriter, String)\n  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n  fullName: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  fullName: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n- uid: System.Configuration.ConfigurationElement.SetReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetReadOnly()\n  nameWithType: ConfigurationElement.SetReadOnly()\n  fullName: ConfigurationElement.SetReadOnly()\n- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  fullName: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n- uid: System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)\n  parent: System.ServiceModel.Configuration.ServiceModelConfigurationElement\n  isExternal: false\n  name: SetPropertyValueIfNotDefaultValue<T>(String, T)\n  nameWithType: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)\n  fullName: ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue<T>(String, T)\n"}