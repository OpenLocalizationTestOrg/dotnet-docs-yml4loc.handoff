{"nodes":[{"content":"Provides a wrapper class that represents the handle of an X.509 chain object. For more information, see <xref href=\"System.Security.Cryptography.X509Certificates.X509Chain\"></xref>.","nodes":[{"pos":[0,181],"content":"Provides a wrapper class that represents the handle of an X.509 chain object. For more information, see <xref href=\"System.Security.Cryptography.X509Certificates.X509Chain\"></xref>.","nodes":[{"content":"Provides a wrapper class that represents the handle of an X.509 chain object.","pos":[0,77]},{"content":"For more information, see <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Chain\"&gt;&lt;/xref&gt;</ph>.","pos":[78,181],"source":" For more information, see <xref href=\"System.Security.Cryptography.X509Certificates.X509Chain\"></xref>."}]}],"pos":[697,879],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Win32.SafeHandles.SafeX509ChainHandle\n  commentId: T:Microsoft.Win32.SafeHandles.SafeX509ChainHandle\n  id: SafeX509ChainHandle\n  children:\n  - Microsoft.Win32.SafeHandles.SafeX509ChainHandle.Dispose(System.Boolean)\n  - Microsoft.Win32.SafeHandles.SafeX509ChainHandle.IsInvalid\n  - Microsoft.Win32.SafeHandles.SafeX509ChainHandle.ReleaseHandle\n  langs:\n  - csharp\n  name: SafeX509ChainHandle\n  nameWithType: SafeX509ChainHandle\n  fullName: Microsoft.Win32.SafeHandles.SafeX509ChainHandle\n  type: Class\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - System\n  - netstandard\n  namespace: Microsoft.Win32.SafeHandles\n  summary: Provides a wrapper class that represents the handle of an X.509 chain object. For more information, see <xref href=\"System.Security.Cryptography.X509Certificates.X509Chain\"></xref>.\n  syntax:\n    content: 'public sealed class SafeX509ChainHandle : Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid'\n  inheritance:\n  - System.Object\n  - System.Runtime.InteropServices.SafeHandle\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Runtime.InteropServices.SafeHandle.Close\n  - System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)\n  - System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n  - System.Runtime.InteropServices.SafeHandle.DangerousRelease\n  - System.Runtime.InteropServices.SafeHandle.Dispose\n  - System.Runtime.InteropServices.SafeHandle.handle\n  - System.Runtime.InteropServices.SafeHandle.IsClosed\n  - System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n  - System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32.SafeHandles/SafeX509ChainHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: Microsoft.Win32.SafeHandles.SafeX509ChainHandle.Dispose(System.Boolean)\n  commentId: M:Microsoft.Win32.SafeHandles.SafeX509ChainHandle.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: Microsoft.Win32.SafeHandles.SafeX509ChainHandle\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: SafeX509ChainHandle.Dispose(Boolean)\n  fullName: SafeX509ChainHandle.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: Microsoft.Win32.SafeHandles\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: ''\n  overload: Microsoft.Win32.SafeHandles.SafeX509ChainHandle.Dispose*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32.SafeHandles/SafeX509ChainHandle.xml\n- uid: Microsoft.Win32.SafeHandles.SafeX509ChainHandle.IsInvalid\n  commentId: P:Microsoft.Win32.SafeHandles.SafeX509ChainHandle.IsInvalid\n  id: IsInvalid\n  parent: Microsoft.Win32.SafeHandles.SafeX509ChainHandle\n  langs:\n  - csharp\n  name: IsInvalid\n  nameWithType: SafeX509ChainHandle.IsInvalid\n  fullName: SafeX509ChainHandle.IsInvalid\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  namespace: Microsoft.Win32.SafeHandles\n  syntax:\n    content: >-\n      [get: System.Security.SecurityCritical]\n\n      public override bool IsInvalid { get; }\n    return:\n      type: System.Boolean\n      description: ''\n  overload: Microsoft.Win32.SafeHandles.SafeX509ChainHandle.IsInvalid*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecurityCritical'\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32.SafeHandles/SafeX509ChainHandle.xml\n- uid: Microsoft.Win32.SafeHandles.SafeX509ChainHandle.ReleaseHandle\n  commentId: M:Microsoft.Win32.SafeHandles.SafeX509ChainHandle.ReleaseHandle\n  id: ReleaseHandle\n  parent: Microsoft.Win32.SafeHandles.SafeX509ChainHandle\n  langs:\n  - csharp\n  name: ReleaseHandle()\n  nameWithType: SafeX509ChainHandle.ReleaseHandle()\n  fullName: SafeX509ChainHandle.ReleaseHandle()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - System\n  - netstandard\n  namespace: Microsoft.Win32.SafeHandles\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      protected override bool ReleaseHandle ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: ''\n  overload: Microsoft.Win32.SafeHandles.SafeX509ChainHandle.ReleaseHandle*\n  exceptions: []\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32.SafeHandles/SafeX509ChainHandle.xml\nreferences:\n- uid: System.Runtime.InteropServices.SafeHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: SafeHandle\n  nameWithType: SafeHandle\n  fullName: System.Runtime.InteropServices.SafeHandle\n- uid: Microsoft.Win32.SafeHandles.SafeX509ChainHandle.Dispose(System.Boolean)\n  parent: Microsoft.Win32.SafeHandles.SafeX509ChainHandle\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: SafeX509ChainHandle.Dispose(Boolean)\n  fullName: SafeX509ChainHandle.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.Win32.SafeHandles.SafeX509ChainHandle.IsInvalid\n  parent: Microsoft.Win32.SafeHandles.SafeX509ChainHandle\n  isExternal: false\n  name: IsInvalid\n  nameWithType: SafeX509ChainHandle.IsInvalid\n  fullName: SafeX509ChainHandle.IsInvalid\n- uid: Microsoft.Win32.SafeHandles.SafeX509ChainHandle.ReleaseHandle\n  parent: Microsoft.Win32.SafeHandles.SafeX509ChainHandle\n  isExternal: false\n  name: ReleaseHandle()\n  nameWithType: SafeX509ChainHandle.ReleaseHandle()\n  fullName: SafeX509ChainHandle.ReleaseHandle()\n- uid: Microsoft.Win32.SafeHandles.SafeX509ChainHandle.Dispose*\n  parent: Microsoft.Win32.SafeHandles.SafeX509ChainHandle\n  isExternal: false\n  name: Dispose\n  nameWithType: SafeX509ChainHandle.Dispose\n  fullName: SafeX509ChainHandle.Dispose\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32.SafeHandles/SafeX509ChainHandle.xml\n- uid: Microsoft.Win32.SafeHandles.SafeX509ChainHandle.IsInvalid*\n  parent: Microsoft.Win32.SafeHandles.SafeX509ChainHandle\n  isExternal: false\n  name: IsInvalid\n  nameWithType: SafeX509ChainHandle.IsInvalid\n  fullName: SafeX509ChainHandle.IsInvalid\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32.SafeHandles/SafeX509ChainHandle.xml\n- uid: Microsoft.Win32.SafeHandles.SafeX509ChainHandle.ReleaseHandle*\n  parent: Microsoft.Win32.SafeHandles.SafeX509ChainHandle\n  isExternal: false\n  name: ReleaseHandle\n  nameWithType: SafeX509ChainHandle.ReleaseHandle\n  fullName: SafeX509ChainHandle.ReleaseHandle\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.Win32.SafeHandles/SafeX509ChainHandle.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Runtime.InteropServices.SafeHandle.Close\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: Close()\n  nameWithType: SafeHandle.Close()\n  fullName: SafeHandle.Close()\n- uid: System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: DangerousAddRef(Boolean)\n  nameWithType: SafeHandle.DangerousAddRef(Boolean)\n  fullName: SafeHandle.DangerousAddRef(Boolean)\n- uid: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: DangerousGetHandle()\n  nameWithType: SafeHandle.DangerousGetHandle()\n  fullName: SafeHandle.DangerousGetHandle()\n- uid: System.Runtime.InteropServices.SafeHandle.DangerousRelease\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: DangerousRelease()\n  nameWithType: SafeHandle.DangerousRelease()\n  fullName: SafeHandle.DangerousRelease()\n- uid: System.Runtime.InteropServices.SafeHandle.Dispose\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: Dispose()\n  nameWithType: SafeHandle.Dispose()\n  fullName: SafeHandle.Dispose()\n- uid: System.Runtime.InteropServices.SafeHandle.handle\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: handle\n  nameWithType: SafeHandle.handle\n  fullName: SafeHandle.handle\n- uid: System.Runtime.InteropServices.SafeHandle.IsClosed\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: IsClosed\n  nameWithType: SafeHandle.IsClosed\n  fullName: SafeHandle.IsClosed\n- uid: System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: SetHandle(IntPtr)\n  nameWithType: SafeHandle.SetHandle(IntPtr)\n  fullName: SafeHandle.SetHandle(IntPtr)\n- uid: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n  parent: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: SetHandleAsInvalid()\n  nameWithType: SafeHandle.SetHandleAsInvalid()\n  fullName: SafeHandle.SetHandleAsInvalid()\n"}