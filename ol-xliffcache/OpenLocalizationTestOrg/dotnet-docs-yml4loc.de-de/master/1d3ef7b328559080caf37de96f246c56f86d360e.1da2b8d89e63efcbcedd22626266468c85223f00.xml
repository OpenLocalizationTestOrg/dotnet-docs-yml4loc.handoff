{"nodes":[{"content":"Represents a command interface that is used for integration of Windows Workflow Designer actions (for example, context menu), with custom-provided implementations, such as property browser service, debugging service, and so on.","nodes":[{"pos":[0,227],"content":"Represents a command interface that is used for integration of Windows Workflow Designer actions (for example, context menu), with custom-provided implementations, such as property browser service, debugging service, and so on.","nodes":[{"content":"Represents a command interface that is used for integration of Windows Workflow Designer actions (for example, context menu), with custom-provided implementations, such as property browser service, debugging service, and so on.","pos":[0,227]}]}],"pos":[813,1041],"yaml":true},{"content":"Verifies whether the specified command can be executed.","nodes":[{"pos":[0,55],"content":"Verifies whether the specified command can be executed.","nodes":[{"content":"Verifies whether the specified command can be executed.","pos":[0,55]}]}],"pos":[2253,2309],"yaml":true},{"content":"The command identifier to be checked.","nodes":[{"pos":[0,37],"content":"The command identifier to be checked.","nodes":[{"content":"The command identifier to be checked.","pos":[0,37]}]}],"pos":[2459,2497],"yaml":true},{"content":"`true` if the specified command can be executed; otherwise, `false`.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">`true`</ph> if the specified command can be executed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified command can be executed; otherwise, `false`."}],"pos":[2555,2626],"yaml":true},{"content":"The command is not supported.","nodes":[{"pos":[0,29],"content":"The command is not supported.","nodes":[{"content":"The command is not supported.","pos":[0,29]}]}],"pos":[2828,2858],"yaml":true},{"content":"Executes the command with the specified command identifier and parameters.","nodes":[{"pos":[0,74],"content":"Executes the command with the specified command identifier and parameters.","nodes":[{"content":"Executes the command with the specified command identifier and parameters.","pos":[0,74]}]}],"pos":[4261,4336],"yaml":true},{"content":"The command identifier to be checked.","nodes":[{"pos":[0,37],"content":"The command identifier to be checked.","nodes":[{"content":"The command identifier to be checked.","pos":[0,37]}]}],"pos":[4548,4586],"yaml":true},{"content":"The parameters of the command.","nodes":[{"pos":[0,30],"content":"The parameters of the command.","nodes":[{"content":"The parameters of the command.","pos":[0,30]}]}],"pos":[4705,4736],"yaml":true},{"content":"The command is not supported.","nodes":[{"pos":[0,29],"content":"The command is not supported.","nodes":[{"content":"The command is not supported.","pos":[0,29]}]}],"pos":[4935,4965],"yaml":true},{"content":"Returns a Boolean value that indicates whether the specified command identifier is supported.","nodes":[{"pos":[0,93],"content":"Returns a Boolean value that indicates whether the specified command identifier is supported.","nodes":[{"content":"Returns a Boolean value that indicates whether the specified command identifier is supported.","pos":[0,93]}]}],"pos":[6110,6204],"yaml":true},{"content":"The command identifier to be checked.","nodes":[{"pos":[0,37],"content":"The command identifier to be checked.","nodes":[{"content":"The command identifier to be checked.","pos":[0,37]}]}],"pos":[6355,6393],"yaml":true},{"content":"`true` if the specified command ID is supported; otherwise, `false`.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">`true`</ph> if the specified command ID is supported; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified command ID is supported; otherwise, `false`."}],"pos":[6451,6522],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.Hosting.ICommandService\n  commentId: T:System.Activities.Presentation.Hosting.ICommandService\n  id: ICommandService\n  children:\n  - System.Activities.Presentation.Hosting.ICommandService.CanExecuteCommand(System.Int32)\n  - System.Activities.Presentation.Hosting.ICommandService.ExecuteCommand(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})\n  - System.Activities.Presentation.Hosting.ICommandService.IsCommandSupported(System.Int32)\n  langs:\n  - csharp\n  name: ICommandService\n  nameWithType: ICommandService\n  fullName: System.Activities.Presentation.Hosting.ICommandService\n  type: Interface\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Hosting\n  summary: Represents a command interface that is used for integration of Windows Workflow Designer actions (for example, context menu), with custom-provided implementations, such as property browser service, debugging service, and so on.\n  syntax:\n    content: public interface ICommandService\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Hosting/ICommandService.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Hosting.ICommandService.CanExecuteCommand(System.Int32)\n  commentId: M:System.Activities.Presentation.Hosting.ICommandService.CanExecuteCommand(System.Int32)\n  id: CanExecuteCommand(System.Int32)\n  parent: System.Activities.Presentation.Hosting.ICommandService\n  langs:\n  - csharp\n  name: CanExecuteCommand(Int32)\n  nameWithType: ICommandService.CanExecuteCommand(Int32)\n  fullName: ICommandService.CanExecuteCommand(Int32)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Hosting\n  summary: Verifies whether the specified command can be executed.\n  syntax:\n    content: public bool CanExecuteCommand (int commandId);\n    parameters:\n    - id: commandId\n      type: System.Int32\n      description: The command identifier to be checked.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified command can be executed; otherwise, `false`.'\n  overload: System.Activities.Presentation.Hosting.ICommandService.CanExecuteCommand*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The command is not supported.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Hosting/ICommandService.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Hosting.ICommandService.ExecuteCommand(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})\n  commentId: M:System.Activities.Presentation.Hosting.ICommandService.ExecuteCommand(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})\n  id: ExecuteCommand(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})\n  parent: System.Activities.Presentation.Hosting.ICommandService\n  langs:\n  - csharp\n  name: ExecuteCommand(Int32, Dictionary<String,Object>)\n  nameWithType: ICommandService.ExecuteCommand(Int32, Dictionary<String,Object>)\n  fullName: ICommandService.ExecuteCommand(Int32, Dictionary<String,Object>)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Hosting\n  summary: Executes the command with the specified command identifier and parameters.\n  syntax:\n    content: public void ExecuteCommand (int commandId, System.Collections.Generic.Dictionary<string,object> parameters);\n    parameters:\n    - id: commandId\n      type: System.Int32\n      description: The command identifier to be checked.\n    - id: parameters\n      type: System.Collections.Generic.Dictionary{System.String,System.Object}\n      description: The parameters of the command.\n  overload: System.Activities.Presentation.Hosting.ICommandService.ExecuteCommand*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The command is not supported.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Hosting/ICommandService.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Hosting.ICommandService.IsCommandSupported(System.Int32)\n  commentId: M:System.Activities.Presentation.Hosting.ICommandService.IsCommandSupported(System.Int32)\n  id: IsCommandSupported(System.Int32)\n  parent: System.Activities.Presentation.Hosting.ICommandService\n  langs:\n  - csharp\n  name: IsCommandSupported(Int32)\n  nameWithType: ICommandService.IsCommandSupported(Int32)\n  fullName: ICommandService.IsCommandSupported(Int32)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Hosting\n  summary: Returns a Boolean value that indicates whether the specified command identifier is supported.\n  syntax:\n    content: public bool IsCommandSupported (int commandId);\n    parameters:\n    - id: commandId\n      type: System.Int32\n      description: The command identifier to be checked.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified command ID is supported; otherwise, `false`.'\n  overload: System.Activities.Presentation.Hosting.ICommandService.IsCommandSupported*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Hosting/ICommandService.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Activities.Presentation.Hosting.ICommandService.CanExecuteCommand(System.Int32)\n  parent: System.Activities.Presentation.Hosting.ICommandService\n  isExternal: false\n  name: CanExecuteCommand(Int32)\n  nameWithType: ICommandService.CanExecuteCommand(Int32)\n  fullName: ICommandService.CanExecuteCommand(Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Activities.Presentation.Hosting.ICommandService.ExecuteCommand(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})\n  parent: System.Activities.Presentation.Hosting.ICommandService\n  isExternal: false\n  name: ExecuteCommand(Int32, Dictionary<String,Object>)\n  nameWithType: ICommandService.ExecuteCommand(Int32, Dictionary<String,Object>)\n  fullName: ICommandService.ExecuteCommand(Int32, Dictionary<String,Object>)\n- uid: System.Collections.Generic.Dictionary`2\n  name: Dictionary<TKey,TValue>\n  nameWithType: Dictionary<TKey,TValue>\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>\n- uid: System.String\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Generic.Dictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: Dictionary<String,Object>\n  nameWithType: Dictionary<String,Object>\n  fullName: System.Collections.Generic.Dictionary<System.String,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.Dictionary`2\n    name: Dictionary\n    nameWithType: Dictionary\n    fullName: System.Collections.Generic.Dictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Presentation.Hosting.ICommandService.IsCommandSupported(System.Int32)\n  parent: System.Activities.Presentation.Hosting.ICommandService\n  isExternal: false\n  name: IsCommandSupported(Int32)\n  nameWithType: ICommandService.IsCommandSupported(Int32)\n  fullName: ICommandService.IsCommandSupported(Int32)\n- uid: System.Activities.Presentation.Hosting.ICommandService.CanExecuteCommand*\n  parent: System.Activities.Presentation.Hosting.ICommandService\n  isExternal: false\n  name: CanExecuteCommand\n  nameWithType: ICommandService.CanExecuteCommand\n  fullName: ICommandService.CanExecuteCommand\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Hosting/ICommandService.xml\n- uid: System.Activities.Presentation.Hosting.ICommandService.ExecuteCommand*\n  parent: System.Activities.Presentation.Hosting.ICommandService\n  isExternal: false\n  name: ExecuteCommand\n  nameWithType: ICommandService.ExecuteCommand\n  fullName: ICommandService.ExecuteCommand\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Hosting/ICommandService.xml\n- uid: System.Activities.Presentation.Hosting.ICommandService.IsCommandSupported*\n  parent: System.Activities.Presentation.Hosting.ICommandService\n  isExternal: false\n  name: IsCommandSupported\n  nameWithType: ICommandService.IsCommandSupported\n  fullName: ICommandService.IsCommandSupported\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Hosting/ICommandService.xml\n"}