{"nodes":[{"content":"Represents an Access Control Entry (ACE), and is the base class for all other ACE classes.","nodes":[{"pos":[0,90],"content":"Represents an Access Control Entry (ACE), and is the base class for all other ACE classes.","nodes":[{"content":"Represents an Access Control Entry (ACE), and is the base class for all other ACE classes.","pos":[0,90]}]}],"pos":[1456,1547],"yaml":true},{"content":"An ACE contains both an ACE header and a binary blob. The header contains information about the type of the ACE, various flags, and the size of the binary blob.","nodes":[{"pos":[0,160],"content":"An ACE contains both an ACE header and a binary blob. The header contains information about the type of the ACE, various flags, and the size of the binary blob.","nodes":[{"content":"An ACE contains both an ACE header and a binary blob. The header contains information about the type of the ACE, various flags, and the size of the binary blob.","pos":[0,160],"nodes":[{"content":"An ACE contains both an ACE header and a binary blob.","pos":[0,53]},{"content":"The header contains information about the type of the ACE, various flags, and the size of the binary blob.","pos":[54,160]}]}]}],"pos":[1558,1719],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the <xref href=\"System.Security.AccessControl.AceFlags\"></xref> associated with this <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object.","nodes":[{"pos":[0,167],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AceFlags\"&gt;&lt;/xref&gt;</ph> associated with this <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.GenericAce\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets or sets the <xref href=\"System.Security.AccessControl.AceFlags\"></xref> associated with this <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object."}],"pos":[3337,3505],"yaml":true},{"content":"An <xref:System.Security.AccessControl.AceFlags> object contains flags that specify information about the inheritance, inheritance propagation, and auditing conditions for an Access Control Entry (ACE).","nodes":[{"pos":[0,202],"content":"An <xref:System.Security.AccessControl.AceFlags> object contains flags that specify information about the inheritance, inheritance propagation, and auditing conditions for an Access Control Entry (ACE).","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.AceFlags&gt;</ph> object contains flags that specify information about the inheritance, inheritance propagation, and auditing conditions for an Access Control Entry (ACE).","pos":[0,202],"source":"An <xref:System.Security.AccessControl.AceFlags> object contains flags that specify information about the inheritance, inheritance propagation, and auditing conditions for an Access Control Entry (ACE)."}]}],"pos":[3516,3719],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Security.AccessControl.AceFlags\"></xref> associated with this <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object.","nodes":[{"pos":[0,154],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AceFlags\"&gt;&lt;/xref&gt;</ph> associated with this <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.GenericAce\"&gt;&lt;/xref&gt;</ph> object.","source":"The <xref href=\"System.Security.AccessControl.AceFlags\"></xref> associated with this <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object."}],"pos":[3893,4048],"yaml":true},{"content":"Gets the type of this Access Control Entry (ACE).","nodes":[{"pos":[0,49],"content":"Gets the type of this Access Control Entry (ACE).","nodes":[{"content":"Gets the type of this Access Control Entry (ACE).","pos":[0,49]}]}],"pos":[5305,5355],"yaml":true},{"content":"The type of this ACE.","nodes":[{"pos":[0,21],"content":"The type of this ACE.","nodes":[{"content":"The type of this ACE.","pos":[0,21]}]}],"pos":[5521,5543],"yaml":true},{"content":"Gets the audit information associated with this Access Control Entry (ACE).","nodes":[{"pos":[0,75],"content":"Gets the audit information associated with this Access Control Entry (ACE).","nodes":[{"content":"Gets the audit information associated with this Access Control Entry (ACE).","pos":[0,75]}]}],"pos":[6817,6893],"yaml":true},{"content":"The audit information associated with this Access Control Entry (ACE).","nodes":[{"pos":[0,70],"content":"The audit information associated with this Access Control Entry (ACE).","nodes":[{"content":"The audit information associated with this Access Control Entry (ACE).","pos":[0,70]}]}],"pos":[7068,7139],"yaml":true},{"content":"Gets the length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object. This length should be used before marshaling the ACL into a binary array with the <xref href=\"System.Security.AccessControl.GenericAce.GetBinaryForm(System.Byte[],System.Int32)\"></xref> method.","nodes":[{"pos":[0,334],"content":"Gets the length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object. This length should be used before marshaling the ACL into a binary array with the <xref href=\"System.Security.AccessControl.GenericAce.GetBinaryForm(System.Byte[],System.Int32)\"></xref> method.","nodes":[{"content":"Gets the length, in bytes, of the binary representation of the current <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.GenericAce\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,140],"source":"Gets the length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object."},{"content":"This length should be used before marshaling the ACL into a binary array with the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.GenericAce.GetBinaryForm(System.Byte[],System.Int32)\"&gt;&lt;/xref&gt;</ph> method.","pos":[141,334],"source":" This length should be used before marshaling the ACL into a binary array with the <xref href=\"System.Security.AccessControl.GenericAce.GetBinaryForm(System.Byte[],System.Int32)\"></xref> method."}]}],"pos":[8428,8763],"yaml":true},{"content":"The length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object.","nodes":[{"pos":[0,135],"content":"The length, in bytes, of the binary representation of the current <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.GenericAce\"&gt;&lt;/xref&gt;</ph> object.","source":"The length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object."}],"pos":[8884,9020],"yaml":true},{"content":"Creates a deep copy of this Access Control Entry (ACE).","nodes":[{"pos":[0,55],"content":"Creates a deep copy of this Access Control Entry (ACE).","nodes":[{"content":"Creates a deep copy of this Access Control Entry (ACE).","pos":[0,55]}]}],"pos":[10267,10323],"yaml":true},{"content":"The <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object that this method creates.","nodes":[{"pos":[0,98],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.GenericAce\"&gt;&lt;/xref&gt;</ph> object that this method creates.","source":"The <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object that this method creates."}],"pos":[10506,10605],"yaml":true},{"content":"Creates a <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object from the specified binary data.","nodes":[{"pos":[0,110],"content":"Creates a <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.GenericAce\"&gt;&lt;/xref&gt;</ph> object from the specified binary data.","source":"Creates a <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object from the specified binary data."}],"pos":[12063,12174],"yaml":true},{"content":"The binary data from which to create the new <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object.","nodes":[{"pos":[0,114],"content":"The binary data from which to create the new <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.GenericAce\"&gt;&lt;/xref&gt;</ph> object.","source":"The binary data from which to create the new <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object."}],"pos":[12388,12503],"yaml":true},{"content":"The offset at which to begin unmarshaling.","nodes":[{"pos":[0,42],"content":"The offset at which to begin unmarshaling.","nodes":[{"content":"The offset at which to begin unmarshaling.","pos":[0,42]}]}],"pos":[12564,12607],"yaml":true},{"content":"The <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object this method creates.","nodes":[{"pos":[0,93],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.GenericAce\"&gt;&lt;/xref&gt;</ph> object this method creates.","source":"The <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object this method creates."}],"pos":[12691,12785],"yaml":true},{"content":"Determines whether the specified <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object is equal to the current <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object.","nodes":[{"pos":[0,195],"content":"Determines whether the specified <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.GenericAce\"&gt;&lt;/xref&gt;</ph> object is equal to the current <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.GenericAce\"&gt;&lt;/xref&gt;</ph> object.","source":"Determines whether the specified <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object is equal to the current <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object."}],"pos":[14115,14311],"yaml":true},{"content":"The <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object to compare to the current <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object.","nodes":[{"pos":[0,168],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.GenericAce\"&gt;&lt;/xref&gt;</ph> object to compare to the current <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.GenericAce\"&gt;&lt;/xref&gt;</ph> object.","source":"The <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object to compare to the current <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object."}],"pos":[14454,14623],"yaml":true},{"content":"`true` if the specified <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object is equal to the current <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object; otherwise, `false`.","nodes":[{"pos":[0,206],"content":"<ph id=\"ph1\">`true`</ph> if the specified <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.GenericAce\"&gt;&lt;/xref&gt;</ph> object is equal to the current <ph id=\"ph3\">&lt;xref href=\"System.Security.AccessControl.GenericAce\"&gt;&lt;/xref&gt;</ph> object; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the specified <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object is equal to the current <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object; otherwise, `false`."}],"pos":[14681,14890],"yaml":true},{"content":"Marshals the contents of the <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object into the specified byte array beginning at the specified offset.","nodes":[{"pos":[0,162],"content":"Marshals the contents of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.GenericAce\"&gt;&lt;/xref&gt;</ph> object into the specified byte array beginning at the specified offset.","source":"Marshals the contents of the <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object into the specified byte array beginning at the specified offset."}],"pos":[16308,16471],"yaml":true},{"content":"The byte array into which the contents of the <xref href=\"System.Security.AccessControl.GenericAce\"></xref> is marshaled.","nodes":[{"pos":[0,121],"content":"The byte array into which the contents of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.GenericAce\"&gt;&lt;/xref&gt;</ph> is marshaled.","source":"The byte array into which the contents of the <xref href=\"System.Security.AccessControl.GenericAce\"></xref> is marshaled."}],"pos":[16644,16766],"yaml":true},{"content":"The offset at which to start marshaling.","nodes":[{"pos":[0,40],"content":"The offset at which to start marshaling.","nodes":[{"content":"The offset at which to start marshaling.","pos":[0,40]}]}],"pos":[16827,16868],"yaml":true},{"content":"<code>offset</code> is negative or too high to allow the entire <xref href=\"System.Security.AccessControl.GenericAcl\"></xref> to be copied into <code>array</code>.","nodes":[{"pos":[0,163],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is negative or too high to allow the entire <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.GenericAcl\"&gt;&lt;/xref&gt;</ph> to be copied into <ph id=\"ph3\">&lt;code&gt;array&lt;/code&gt;</ph>.","source":"<code>offset</code> is negative or too high to allow the entire <xref href=\"System.Security.AccessControl.GenericAcl\"></xref> to be copied into <code>array</code>."}],"pos":[17064,17228],"yaml":true},{"content":"Serves as a hash function for the <xref href=\"System.Security.AccessControl.GenericAce\"></xref> class. The  <xref href=\"System.Security.AccessControl.GenericAce.GetHashCode\"></xref> method is suitable for use in hashing algorithms and data structures like a hash table.","nodes":[{"pos":[0,269],"content":"Serves as a hash function for the <xref href=\"System.Security.AccessControl.GenericAce\"></xref> class. The  <xref href=\"System.Security.AccessControl.GenericAce.GetHashCode\"></xref> method is suitable for use in hashing algorithms and data structures like a hash table.","nodes":[{"content":"Serves as a hash function for the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.GenericAce\"&gt;&lt;/xref&gt;</ph> class.","pos":[0,102],"source":"Serves as a hash function for the <xref href=\"System.Security.AccessControl.GenericAce\"></xref> class."},{"content":"The  <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.GenericAce.GetHashCode\"&gt;&lt;/xref&gt;</ph> method is suitable for use in hashing algorithms and data structures like a hash table.","pos":[103,269],"source":" The  <xref href=\"System.Security.AccessControl.GenericAce.GetHashCode\"></xref> method is suitable for use in hashing algorithms and data structures like a hash table."}]}],"pos":[18433,18703],"yaml":true},{"content":"A hash code for the current <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object.","nodes":[{"pos":[0,97],"content":"A hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.GenericAce\"&gt;&lt;/xref&gt;</ph> object.","source":"A hash code for the current <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object."}],"pos":[18844,18942],"yaml":true},{"content":"Gets flags that specify the inheritance properties of this Access Control Entry (ACE).","nodes":[{"pos":[0,86],"content":"Gets flags that specify the inheritance properties of this Access Control Entry (ACE).","nodes":[{"content":"Gets flags that specify the inheritance properties of this Access Control Entry (ACE).","pos":[0,86]}]}],"pos":[20256,20343],"yaml":true},{"content":"Flags that specify the inheritance properties of this ACE.","nodes":[{"pos":[0,58],"content":"Flags that specify the inheritance properties of this ACE.","nodes":[{"content":"Flags that specify the inheritance properties of this ACE.","pos":[0,58]}]}],"pos":[20536,20595],"yaml":true},{"content":"Gets a Boolean value that specifies whether this Access Control Entry (ACE) is inherited or is set explicitly.","nodes":[{"pos":[0,110],"content":"Gets a Boolean value that specifies whether this Access Control Entry (ACE) is inherited or is set explicitly.","nodes":[{"content":"Gets a Boolean value that specifies whether this Access Control Entry (ACE) is inherited or is set explicitly.","pos":[0,110]}]}],"pos":[21884,21995],"yaml":true},{"content":"`true` if this ACE is inherited; otherwise, `false`.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">`true`</ph> if this ACE is inherited; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this ACE is inherited; otherwise, `false`."}],"pos":[22109,22164],"yaml":true},{"content":"Determines whether the specified <xref href=\"System.Security.AccessControl.GenericAce\"></xref> objects are considered equal.","nodes":[{"pos":[0,124],"content":"Determines whether the specified <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.GenericAce\"&gt;&lt;/xref&gt;</ph> objects are considered equal.","source":"Determines whether the specified <xref href=\"System.Security.AccessControl.GenericAce\"></xref> objects are considered equal."}],"pos":[23769,23894],"yaml":true},{"content":"The equivalent method for this operator is <xref:System.Security.AccessControl.GenericAce.Equals%28System.Security.AccessControl.GenericAce%2CSystem.Security.AccessControl.GenericAce%29?displayProperty=fullName>","nodes":[{"pos":[0,211],"content":"The equivalent method for this operator is <xref:System.Security.AccessControl.GenericAce.Equals%28System.Security.AccessControl.GenericAce%2CSystem.Security.AccessControl.GenericAce%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.GenericAce.Equals%28System.Security.AccessControl.GenericAce%2CSystem.Security.AccessControl.GenericAce%29?displayProperty=fullName&gt;</ph>","pos":[0,211],"source":"The equivalent method for this operator is <xref:System.Security.AccessControl.GenericAce.Equals%28System.Security.AccessControl.GenericAce%2CSystem.Security.AccessControl.GenericAce%29?displayProperty=fullName>"}]}],"pos":[23905,24117],"yaml":true,"extradata":"MT"},{"content":"The first <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object to compare.","nodes":[{"pos":[0,90],"content":"The first <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.GenericAce\"&gt;&lt;/xref&gt;</ph> object to compare.","source":"The first <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object to compare."}],"pos":[24371,24462],"yaml":true},{"content":"The second <xref href=\"System.Security.AccessControl.GenericAce\"></xref> to compare.","nodes":[{"pos":[0,84],"content":"The second <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.GenericAce\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The second <xref href=\"System.Security.AccessControl.GenericAce\"></xref> to compare."}],"pos":[24550,24635],"yaml":true},{"content":"`true` if the two <xref href=\"System.Security.AccessControl.GenericAce\"></xref> objects are equal; otherwise, `false`.","nodes":[{"pos":[0,118],"content":"<ph id=\"ph1\">`true`</ph> if the two <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.GenericAce\"&gt;&lt;/xref&gt;</ph> objects are equal; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the two <xref href=\"System.Security.AccessControl.GenericAce\"></xref> objects are equal; otherwise, `false`."}],"pos":[24693,24814],"yaml":true},{"content":"Determines whether the specified <xref href=\"System.Security.AccessControl.GenericAce\"></xref> objects are considered unequal.","nodes":[{"pos":[0,126],"content":"Determines whether the specified <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.GenericAce\"&gt;&lt;/xref&gt;</ph> objects are considered unequal.","source":"Determines whether the specified <xref href=\"System.Security.AccessControl.GenericAce\"></xref> objects are considered unequal."}],"pos":[26431,26558],"yaml":true},{"content":"The equivalent method for this operator is <xref:System.Security.AccessControl.GenericAce.Compare%28System.Security.AccessControl.GenericAce%2CSystem.Security.AccessControl.GenericAce%29?displayProperty=fullName>","nodes":[{"pos":[0,212],"content":"The equivalent method for this operator is <xref:System.Security.AccessControl.GenericAce.Compare%28System.Security.AccessControl.GenericAce%2CSystem.Security.AccessControl.GenericAce%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.GenericAce.Compare%28System.Security.AccessControl.GenericAce%2CSystem.Security.AccessControl.GenericAce%29?displayProperty=fullName&gt;</ph>","pos":[0,212],"source":"The equivalent method for this operator is <xref:System.Security.AccessControl.GenericAce.Compare%28System.Security.AccessControl.GenericAce%2CSystem.Security.AccessControl.GenericAce%29?displayProperty=fullName>"}]}],"pos":[26569,26782],"yaml":true,"extradata":"MT"},{"content":"The first <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object to compare.","nodes":[{"pos":[0,90],"content":"The first <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.GenericAce\"&gt;&lt;/xref&gt;</ph> object to compare.","source":"The first <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object to compare."}],"pos":[27038,27129],"yaml":true},{"content":"The second <xref href=\"System.Security.AccessControl.GenericAce\"></xref> to compare.","nodes":[{"pos":[0,84],"content":"The second <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.GenericAce\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The second <xref href=\"System.Security.AccessControl.GenericAce\"></xref> to compare."}],"pos":[27217,27302],"yaml":true},{"content":"`true` if the two <xref href=\"System.Security.AccessControl.GenericAce\"></xref> objects are unequal; otherwise, `false`.","nodes":[{"pos":[0,120],"content":"<ph id=\"ph1\">`true`</ph> if the two <ph id=\"ph2\">&lt;xref href=\"System.Security.AccessControl.GenericAce\"&gt;&lt;/xref&gt;</ph> objects are unequal; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the two <xref href=\"System.Security.AccessControl.GenericAce\"></xref> objects are unequal; otherwise, `false`."}],"pos":[27360,27483],"yaml":true},{"content":"Gets flags that specify the inheritance propagation properties of this Access Control Entry (ACE).","nodes":[{"pos":[0,98],"content":"Gets flags that specify the inheritance propagation properties of this Access Control Entry (ACE).","nodes":[{"content":"Gets flags that specify the inheritance propagation properties of this Access Control Entry (ACE).","pos":[0,98]}]}],"pos":[28799,28898],"yaml":true},{"content":"Flags that specify the inheritance propagation properties of this ACE.","nodes":[{"pos":[0,70],"content":"Flags that specify the inheritance propagation properties of this ACE.","nodes":[{"content":"Flags that specify the inheritance propagation properties of this ACE.","pos":[0,70]}]}],"pos":[29091,29162],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.GenericAce\n  commentId: T:System.Security.AccessControl.GenericAce\n  id: GenericAce\n  children:\n  - System.Security.AccessControl.GenericAce.AceFlags\n  - System.Security.AccessControl.GenericAce.AceType\n  - System.Security.AccessControl.GenericAce.AuditFlags\n  - System.Security.AccessControl.GenericAce.BinaryLength\n  - System.Security.AccessControl.GenericAce.Copy\n  - System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)\n  - System.Security.AccessControl.GenericAce.Equals(System.Object)\n  - System.Security.AccessControl.GenericAce.GetBinaryForm(System.Byte[],System.Int32)\n  - System.Security.AccessControl.GenericAce.GetHashCode\n  - System.Security.AccessControl.GenericAce.InheritanceFlags\n  - System.Security.AccessControl.GenericAce.IsInherited\n  - System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  - System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  - System.Security.AccessControl.GenericAce.PropagationFlags\n  langs:\n  - csharp\n  name: GenericAce\n  nameWithType: GenericAce\n  fullName: System.Security.AccessControl.GenericAce\n  type: Class\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Represents an Access Control Entry (ACE), and is the base class for all other ACE classes.\n  remarks: An ACE contains both an ACE header and a binary blob. The header contains information about the type of the ACE, various flags, and the size of the binary blob.\n  syntax:\n    content: public abstract class GenericAce\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Security.AccessControl.CustomAce\n  - System.Security.AccessControl.KnownAce\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.GenericAce.AceFlags\n  commentId: P:System.Security.AccessControl.GenericAce.AceFlags\n  id: AceFlags\n  parent: System.Security.AccessControl.GenericAce\n  langs:\n  - csharp\n  name: AceFlags\n  nameWithType: GenericAce.AceFlags\n  fullName: GenericAce.AceFlags\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets or sets the <xref href=\"System.Security.AccessControl.AceFlags\"></xref> associated with this <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object.\n  remarks: An <xref:System.Security.AccessControl.AceFlags> object contains flags that specify information about the inheritance, inheritance propagation, and auditing conditions for an Access Control Entry (ACE).\n  syntax:\n    content: public System.Security.AccessControl.AceFlags AceFlags { get; set; }\n    return:\n      type: System.Security.AccessControl.AceFlags\n      description: The <xref href=\"System.Security.AccessControl.AceFlags\"></xref> associated with this <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object.\n  overload: System.Security.AccessControl.GenericAce.AceFlags*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.GenericAce.AceType\n  commentId: P:System.Security.AccessControl.GenericAce.AceType\n  id: AceType\n  parent: System.Security.AccessControl.GenericAce\n  langs:\n  - csharp\n  name: AceType\n  nameWithType: GenericAce.AceType\n  fullName: GenericAce.AceType\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the type of this Access Control Entry (ACE).\n  syntax:\n    content: public System.Security.AccessControl.AceType AceType { get; }\n    return:\n      type: System.Security.AccessControl.AceType\n      description: The type of this ACE.\n  overload: System.Security.AccessControl.GenericAce.AceType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.GenericAce.AuditFlags\n  commentId: P:System.Security.AccessControl.GenericAce.AuditFlags\n  id: AuditFlags\n  parent: System.Security.AccessControl.GenericAce\n  langs:\n  - csharp\n  name: AuditFlags\n  nameWithType: GenericAce.AuditFlags\n  fullName: GenericAce.AuditFlags\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the audit information associated with this Access Control Entry (ACE).\n  syntax:\n    content: public System.Security.AccessControl.AuditFlags AuditFlags { get; }\n    return:\n      type: System.Security.AccessControl.AuditFlags\n      description: The audit information associated with this Access Control Entry (ACE).\n  overload: System.Security.AccessControl.GenericAce.AuditFlags*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.GenericAce.BinaryLength\n  commentId: P:System.Security.AccessControl.GenericAce.BinaryLength\n  id: BinaryLength\n  parent: System.Security.AccessControl.GenericAce\n  langs:\n  - csharp\n  name: BinaryLength\n  nameWithType: GenericAce.BinaryLength\n  fullName: GenericAce.BinaryLength\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object. This length should be used before marshaling the ACL into a binary array with the <xref href=\"System.Security.AccessControl.GenericAce.GetBinaryForm(System.Byte[],System.Int32)\"></xref> method.\n  syntax:\n    content: public abstract int BinaryLength { get; }\n    return:\n      type: System.Int32\n      description: The length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object.\n  overload: System.Security.AccessControl.GenericAce.BinaryLength*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.GenericAce.Copy\n  commentId: M:System.Security.AccessControl.GenericAce.Copy\n  id: Copy\n  parent: System.Security.AccessControl.GenericAce\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: GenericAce.Copy()\n  fullName: GenericAce.Copy()\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Creates a deep copy of this Access Control Entry (ACE).\n  syntax:\n    content: public System.Security.AccessControl.GenericAce Copy ();\n    parameters: []\n    return:\n      type: System.Security.AccessControl.GenericAce\n      description: The <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object that this method creates.\n  overload: System.Security.AccessControl.GenericAce.Copy*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)\n  commentId: M:System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)\n  id: CreateFromBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.GenericAce\n  langs:\n  - csharp\n  name: CreateFromBinaryForm(Byte[], Int32)\n  nameWithType: GenericAce.CreateFromBinaryForm(Byte[], Int32)\n  fullName: GenericAce.CreateFromBinaryForm(Byte[], Int32)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Creates a <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object from the specified binary data.\n  syntax:\n    content: public static System.Security.AccessControl.GenericAce CreateFromBinaryForm (byte[] binaryForm, int offset);\n    parameters:\n    - id: binaryForm\n      type: System.Byte[]\n      description: The binary data from which to create the new <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object.\n    - id: offset\n      type: System.Int32\n      description: The offset at which to begin unmarshaling.\n    return:\n      type: System.Security.AccessControl.GenericAce\n      description: The <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object this method creates.\n  overload: System.Security.AccessControl.GenericAce.CreateFromBinaryForm*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.GenericAce.Equals(System.Object)\n  commentId: M:System.Security.AccessControl.GenericAce.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.AccessControl.GenericAce\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: GenericAce.Equals(Object)\n  fullName: GenericAce.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Determines whether the specified <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object is equal to the current <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object.\n  syntax:\n    content: public override sealed bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: The <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object to compare to the current <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object is equal to the current <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object; otherwise, `false`.'\n  overload: System.Security.AccessControl.GenericAce.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.GenericAce.GetBinaryForm(System.Byte[],System.Int32)\n  commentId: M:System.Security.AccessControl.GenericAce.GetBinaryForm(System.Byte[],System.Int32)\n  id: GetBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.GenericAce\n  langs:\n  - csharp\n  name: GetBinaryForm(Byte[], Int32)\n  nameWithType: GenericAce.GetBinaryForm(Byte[], Int32)\n  fullName: GenericAce.GetBinaryForm(Byte[], Int32)\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Marshals the contents of the <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object into the specified byte array beginning at the specified offset.\n  syntax:\n    content: public abstract void GetBinaryForm (byte[] binaryForm, int offset);\n    parameters:\n    - id: binaryForm\n      type: System.Byte[]\n      description: The byte array into which the contents of the <xref href=\"System.Security.AccessControl.GenericAce\"></xref> is marshaled.\n    - id: offset\n      type: System.Int32\n      description: The offset at which to start marshaling.\n  overload: System.Security.AccessControl.GenericAce.GetBinaryForm*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>offset</code> is negative or too high to allow the entire <xref href=\"System.Security.AccessControl.GenericAcl\"></xref> to be copied into <code>array</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.GenericAce.GetHashCode\n  commentId: M:System.Security.AccessControl.GenericAce.GetHashCode\n  id: GetHashCode\n  parent: System.Security.AccessControl.GenericAce\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: GenericAce.GetHashCode()\n  fullName: GenericAce.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Serves as a hash function for the <xref href=\"System.Security.AccessControl.GenericAce\"></xref> class. The  <xref href=\"System.Security.AccessControl.GenericAce.GetHashCode\"></xref> method is suitable for use in hashing algorithms and data structures like a hash table.\n  syntax:\n    content: public override sealed int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object.\n  overload: System.Security.AccessControl.GenericAce.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.GenericAce.InheritanceFlags\n  commentId: P:System.Security.AccessControl.GenericAce.InheritanceFlags\n  id: InheritanceFlags\n  parent: System.Security.AccessControl.GenericAce\n  langs:\n  - csharp\n  name: InheritanceFlags\n  nameWithType: GenericAce.InheritanceFlags\n  fullName: GenericAce.InheritanceFlags\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets flags that specify the inheritance properties of this Access Control Entry (ACE).\n  syntax:\n    content: public System.Security.AccessControl.InheritanceFlags InheritanceFlags { get; }\n    return:\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Flags that specify the inheritance properties of this ACE.\n  overload: System.Security.AccessControl.GenericAce.InheritanceFlags*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.GenericAce.IsInherited\n  commentId: P:System.Security.AccessControl.GenericAce.IsInherited\n  id: IsInherited\n  parent: System.Security.AccessControl.GenericAce\n  langs:\n  - csharp\n  name: IsInherited\n  nameWithType: GenericAce.IsInherited\n  fullName: GenericAce.IsInherited\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets a Boolean value that specifies whether this Access Control Entry (ACE) is inherited or is set explicitly.\n  syntax:\n    content: public bool IsInherited { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this ACE is inherited; otherwise, `false`.'\n  overload: System.Security.AccessControl.GenericAce.IsInherited*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  commentId: M:System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  id: op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  parent: System.Security.AccessControl.GenericAce\n  langs:\n  - csharp\n  name: op_Equality(GenericAce, GenericAce)\n  nameWithType: GenericAce.op_Equality(GenericAce, GenericAce)\n  fullName: GenericAce.op_Equality(GenericAce, GenericAce)\n  type: Operator\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Determines whether the specified <xref href=\"System.Security.AccessControl.GenericAce\"></xref> objects are considered equal.\n  remarks: The equivalent method for this operator is <xref:System.Security.AccessControl.GenericAce.Equals%28System.Security.AccessControl.GenericAce%2CSystem.Security.AccessControl.GenericAce%29?displayProperty=fullName>\n  syntax:\n    content: public static bool op_Equality (System.Security.AccessControl.GenericAce left, System.Security.AccessControl.GenericAce right);\n    parameters:\n    - id: left\n      type: System.Security.AccessControl.GenericAce\n      description: The first <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object to compare.\n    - id: right\n      type: System.Security.AccessControl.GenericAce\n      description: The second <xref href=\"System.Security.AccessControl.GenericAce\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the two <xref href=\"System.Security.AccessControl.GenericAce\"></xref> objects are equal; otherwise, `false`.'\n  overload: System.Security.AccessControl.GenericAce.op_Equality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  commentId: M:System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  id: op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  parent: System.Security.AccessControl.GenericAce\n  langs:\n  - csharp\n  name: op_Inequality(GenericAce, GenericAce)\n  nameWithType: GenericAce.op_Inequality(GenericAce, GenericAce)\n  fullName: GenericAce.op_Inequality(GenericAce, GenericAce)\n  type: Operator\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Determines whether the specified <xref href=\"System.Security.AccessControl.GenericAce\"></xref> objects are considered unequal.\n  remarks: The equivalent method for this operator is <xref:System.Security.AccessControl.GenericAce.Compare%28System.Security.AccessControl.GenericAce%2CSystem.Security.AccessControl.GenericAce%29?displayProperty=fullName>\n  syntax:\n    content: public static bool op_Inequality (System.Security.AccessControl.GenericAce left, System.Security.AccessControl.GenericAce right);\n    parameters:\n    - id: left\n      type: System.Security.AccessControl.GenericAce\n      description: The first <xref href=\"System.Security.AccessControl.GenericAce\"></xref> object to compare.\n    - id: right\n      type: System.Security.AccessControl.GenericAce\n      description: The second <xref href=\"System.Security.AccessControl.GenericAce\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the two <xref href=\"System.Security.AccessControl.GenericAce\"></xref> objects are unequal; otherwise, `false`.'\n  overload: System.Security.AccessControl.GenericAce.op_Inequality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.GenericAce.PropagationFlags\n  commentId: P:System.Security.AccessControl.GenericAce.PropagationFlags\n  id: PropagationFlags\n  parent: System.Security.AccessControl.GenericAce\n  langs:\n  - csharp\n  name: PropagationFlags\n  nameWithType: GenericAce.PropagationFlags\n  fullName: GenericAce.PropagationFlags\n  type: Property\n  assemblies:\n  - System.Security.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets flags that specify the inheritance propagation properties of this Access Control Entry (ACE).\n  syntax:\n    content: public System.Security.AccessControl.PropagationFlags PropagationFlags { get; }\n    return:\n      type: System.Security.AccessControl.PropagationFlags\n      description: Flags that specify the inheritance propagation properties of this ACE.\n  overload: System.Security.AccessControl.GenericAce.PropagationFlags*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Security.AccessControl.GenericAce.AceFlags\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: AceFlags\n  nameWithType: GenericAce.AceFlags\n  fullName: GenericAce.AceFlags\n- uid: System.Security.AccessControl.AceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AceFlags\n  nameWithType: AceFlags\n  fullName: System.Security.AccessControl.AceFlags\n- uid: System.Security.AccessControl.GenericAce.AceType\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: AceType\n  nameWithType: GenericAce.AceType\n  fullName: GenericAce.AceType\n- uid: System.Security.AccessControl.AceType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AceType\n  nameWithType: AceType\n  fullName: System.Security.AccessControl.AceType\n- uid: System.Security.AccessControl.GenericAce.AuditFlags\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: AuditFlags\n  nameWithType: GenericAce.AuditFlags\n  fullName: GenericAce.AuditFlags\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n- uid: System.Security.AccessControl.GenericAce.BinaryLength\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: BinaryLength\n  nameWithType: GenericAce.BinaryLength\n  fullName: GenericAce.BinaryLength\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.GenericAce.Copy\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: Copy()\n  nameWithType: GenericAce.Copy()\n  fullName: GenericAce.Copy()\n- uid: System.Security.AccessControl.GenericAce\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: GenericAce\n  nameWithType: GenericAce\n  fullName: System.Security.AccessControl.GenericAce\n- uid: System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: CreateFromBinaryForm(Byte[], Int32)\n  nameWithType: GenericAce.CreateFromBinaryForm(Byte[], Int32)\n  fullName: GenericAce.CreateFromBinaryForm(Byte[], Int32)\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.AccessControl.GenericAce.Equals(System.Object)\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: GenericAce.Equals(Object)\n  fullName: GenericAce.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.AccessControl.GenericAce.GetBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: GetBinaryForm(Byte[], Int32)\n  nameWithType: GenericAce.GetBinaryForm(Byte[], Int32)\n  fullName: GenericAce.GetBinaryForm(Byte[], Int32)\n- uid: System.Security.AccessControl.GenericAce.GetHashCode\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: GenericAce.GetHashCode()\n  fullName: GenericAce.GetHashCode()\n- uid: System.Security.AccessControl.GenericAce.InheritanceFlags\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: GenericAce.InheritanceFlags\n  fullName: GenericAce.InheritanceFlags\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n- uid: System.Security.AccessControl.GenericAce.IsInherited\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: IsInherited\n  nameWithType: GenericAce.IsInherited\n  fullName: GenericAce.IsInherited\n- uid: System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: op_Equality(GenericAce, GenericAce)\n  nameWithType: GenericAce.op_Equality(GenericAce, GenericAce)\n  fullName: GenericAce.op_Equality(GenericAce, GenericAce)\n- uid: System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: op_Inequality(GenericAce, GenericAce)\n  nameWithType: GenericAce.op_Inequality(GenericAce, GenericAce)\n  fullName: GenericAce.op_Inequality(GenericAce, GenericAce)\n- uid: System.Security.AccessControl.GenericAce.PropagationFlags\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: GenericAce.PropagationFlags\n  fullName: GenericAce.PropagationFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n- uid: System.Security.AccessControl.GenericAce.AceFlags*\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: AceFlags\n  nameWithType: GenericAce.AceFlags\n  fullName: GenericAce.AceFlags\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n- uid: System.Security.AccessControl.GenericAce.AceType*\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: AceType\n  nameWithType: GenericAce.AceType\n  fullName: GenericAce.AceType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n- uid: System.Security.AccessControl.GenericAce.AuditFlags*\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: AuditFlags\n  nameWithType: GenericAce.AuditFlags\n  fullName: GenericAce.AuditFlags\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n- uid: System.Security.AccessControl.GenericAce.BinaryLength*\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: BinaryLength\n  nameWithType: GenericAce.BinaryLength\n  fullName: GenericAce.BinaryLength\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n- uid: System.Security.AccessControl.GenericAce.Copy*\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: Copy\n  nameWithType: GenericAce.Copy\n  fullName: GenericAce.Copy\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n- uid: System.Security.AccessControl.GenericAce.CreateFromBinaryForm*\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: CreateFromBinaryForm\n  nameWithType: GenericAce.CreateFromBinaryForm\n  fullName: GenericAce.CreateFromBinaryForm\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n- uid: System.Security.AccessControl.GenericAce.Equals*\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: Equals\n  nameWithType: GenericAce.Equals\n  fullName: GenericAce.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n- uid: System.Security.AccessControl.GenericAce.GetBinaryForm*\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: GetBinaryForm\n  nameWithType: GenericAce.GetBinaryForm\n  fullName: GenericAce.GetBinaryForm\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n- uid: System.Security.AccessControl.GenericAce.GetHashCode*\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: GetHashCode\n  nameWithType: GenericAce.GetHashCode\n  fullName: GenericAce.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n- uid: System.Security.AccessControl.GenericAce.InheritanceFlags*\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: GenericAce.InheritanceFlags\n  fullName: GenericAce.InheritanceFlags\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n- uid: System.Security.AccessControl.GenericAce.IsInherited*\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: IsInherited\n  nameWithType: GenericAce.IsInherited\n  fullName: GenericAce.IsInherited\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n- uid: System.Security.AccessControl.GenericAce.op_Equality*\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: op_Equality\n  nameWithType: GenericAce.op_Equality\n  fullName: GenericAce.op_Equality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n- uid: System.Security.AccessControl.GenericAce.op_Inequality*\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: op_Inequality\n  nameWithType: GenericAce.op_Inequality\n  fullName: GenericAce.op_Inequality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n- uid: System.Security.AccessControl.GenericAce.PropagationFlags*\n  parent: System.Security.AccessControl.GenericAce\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: GenericAce.PropagationFlags\n  fullName: GenericAce.PropagationFlags\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/GenericAce.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}