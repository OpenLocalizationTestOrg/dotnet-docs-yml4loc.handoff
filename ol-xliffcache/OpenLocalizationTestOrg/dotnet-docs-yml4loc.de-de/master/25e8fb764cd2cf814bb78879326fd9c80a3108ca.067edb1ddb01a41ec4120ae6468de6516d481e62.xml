{"nodes":[{"content":"Defines an element that is used to configure a cache that is based on the <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> class. This class cannot be inherited.","nodes":[{"pos":[0,168],"content":"Defines an element that is used to configure a cache that is based on the <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> class. This class cannot be inherited.","nodes":[{"content":"Defines an element that is used to configure a cache that is based on the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Caching.MemoryCache\"&gt;&lt;/xref&gt;</ph> class.","pos":[0,136],"source":"Defines an element that is used to configure a cache that is based on the <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> class."},{"content":"This class cannot be inherited.","pos":[137,168]}]}],"pos":[942,1111],"yaml":true},{"content":"The <xref:System.Runtime.Caching.Configuration.MemoryCacheElement> class defines a  element that you can use to configure the cache. Multiple instances of the <xref:System.Runtime.Caching.MemoryCache> class can be used in a single application. Each `memoryCache` element in the configuration file can contain settings for a named <xref:System.Runtime.Caching.MemoryCache> instance.  \n  \n The `memoryCache` element requires a `namedCaches` child element. To define named configurations of the cache in addition to the default configuration, you can add `namedCaches` elements. For more information about how to add named cache configurations, see [\\&lt;namedCaches\\&gt; Element (Cache Settings)](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md).","nodes":[{"pos":[0,381],"content":"The <xref:System.Runtime.Caching.Configuration.MemoryCacheElement> class defines a  element that you can use to configure the cache. Multiple instances of the <xref:System.Runtime.Caching.MemoryCache> class can be used in a single application. Each `memoryCache` element in the configuration file can contain settings for a named <xref:System.Runtime.Caching.MemoryCache> instance.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.Configuration.MemoryCacheElement&gt;</ph> class defines a  element that you can use to configure the cache.","pos":[0,132],"source":"The <xref:System.Runtime.Caching.Configuration.MemoryCacheElement> class defines a  element that you can use to configure the cache."},{"content":"Multiple instances of the <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.MemoryCache&gt;</ph> class can be used in a single application.","pos":[133,243],"source":" Multiple instances of the <xref:System.Runtime.Caching.MemoryCache> class can be used in a single application."},{"content":"Each <ph id=\"ph1\">`memoryCache`</ph> element in the configuration file can contain settings for a named <ph id=\"ph2\">&lt;xref:System.Runtime.Caching.MemoryCache&gt;</ph> instance.","pos":[244,381],"source":" Each `memoryCache` element in the configuration file can contain settings for a named <xref:System.Runtime.Caching.MemoryCache> instance."}]},{"pos":[388,786],"content":"The `memoryCache` element requires a `namedCaches` child element. To define named configurations of the cache in addition to the default configuration, you can add `namedCaches` elements. For more information about how to add named cache configurations, see [\\&lt;namedCaches\\&gt; Element (Cache Settings)](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md).","nodes":[{"content":"The <ph id=\"ph1\">`memoryCache`</ph> element requires a <ph id=\"ph2\">`namedCaches`</ph> child element.","pos":[0,65],"source":"The `memoryCache` element requires a `namedCaches` child element."},{"content":"To define named configurations of the cache in addition to the default configuration, you can add <ph id=\"ph1\">`namedCaches`</ph> elements.","pos":[66,187],"source":" To define named configurations of the cache in addition to the default configuration, you can add `namedCaches` elements."},{"content":"For more information about how to add named cache configurations, see <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&amp;</ph>lt;namedCaches<ph id=\"ph2\">\\&amp;</ph>gt; Element (Cache Settings)<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md)</ept>.","pos":[188,398],"source":" For more information about how to add named cache configurations, see [\\&lt;namedCaches\\&gt; Element (Cache Settings)](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md)."}]}],"pos":[1122,1915],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Caching.Configuration.MemoryCacheElement\"></xref> class.","nodes":[{"pos":[0,117],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Caching.Configuration.MemoryCacheElement\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Caching.Configuration.MemoryCacheElement\"></xref> class."}],"pos":[6158,6276],"yaml":true},{"content":"The unique name for a specific cache configuration.","nodes":[{"pos":[0,51],"content":"The unique name for a specific cache configuration.","nodes":[{"content":"The unique name for a specific cache configuration.","pos":[0,51]}]}],"pos":[6416,6468],"yaml":true},{"content":"Gets or sets the maximum memory size, in megabytes, that an instance of a <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> object can grow to.","nodes":[{"pos":[0,149],"content":"Gets or sets the maximum memory size, in megabytes, that an instance of a <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Caching.MemoryCache\"&gt;&lt;/xref&gt;</ph> object can grow to.","source":"Gets or sets the maximum memory size, in megabytes, that an instance of a <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> object can grow to."}],"pos":[7686,7836],"yaml":true},{"content":"The <xref:System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes%2A> property value represents the `cacheMemoryLimitMegabytes` configuration attribute in the `namedCaches` configuration element.  \n  \n If the cache size exceeds the specified limit, the memory cache implementation removes cache entries.  \n  \n This property can be set individually in `namedCaches` elements, with each `namedCaches` element corresponding to a unique cache configuration.  \n  \n The settings for the <xref:System.Runtime.Caching.MemoryCache.CacheMemoryLimit%2A> property can be read from the `cacheMemoryLimitMegabytes` configuration attribute in the configuration file. Alternatively, the settings can be passed when the <xref:System.Runtime.Caching.MemoryCache> class is initialized.  \n  \n For more information about how to configure the cache, see [\\&lt;namedCaches\\&gt; Element (Cache Settings)](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md).","nodes":[{"pos":[0,221],"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes%2A&gt;</ph> property value represents the <ph id=\"ph2\">`cacheMemoryLimitMegabytes`</ph> configuration attribute in the <ph id=\"ph3\">`namedCaches`</ph> configuration element.","source":"The <xref:System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes%2A> property value represents the `cacheMemoryLimitMegabytes` configuration attribute in the `namedCaches` configuration element."},{"pos":[228,329],"content":"If the cache size exceeds the specified limit, the memory cache implementation removes cache entries.","nodes":[{"content":"If the cache size exceeds the specified limit, the memory cache implementation removes cache entries.","pos":[0,101]}]},{"pos":[336,479],"content":"This property can be set individually in <ph id=\"ph1\">`namedCaches`</ph> elements, with each <ph id=\"ph2\">`namedCaches`</ph> element corresponding to a unique cache configuration.","source":"This property can be set individually in `namedCaches` elements, with each `namedCaches` element corresponding to a unique cache configuration."},{"pos":[486,792],"content":"The settings for the <xref:System.Runtime.Caching.MemoryCache.CacheMemoryLimit%2A> property can be read from the `cacheMemoryLimitMegabytes` configuration attribute in the configuration file. Alternatively, the settings can be passed when the <xref:System.Runtime.Caching.MemoryCache> class is initialized.","nodes":[{"content":"The settings for the <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.MemoryCache.CacheMemoryLimit%2A&gt;</ph> property can be read from the <ph id=\"ph2\">`cacheMemoryLimitMegabytes`</ph> configuration attribute in the configuration file.","pos":[0,191],"source":"The settings for the <xref:System.Runtime.Caching.MemoryCache.CacheMemoryLimit%2A> property can be read from the `cacheMemoryLimitMegabytes` configuration attribute in the configuration file."},{"content":"Alternatively, the settings can be passed when the <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.MemoryCache&gt;</ph> class is initialized.","pos":[192,306],"source":" Alternatively, the settings can be passed when the <xref:System.Runtime.Caching.MemoryCache> class is initialized."}]},{"pos":[799,998],"content":"For more information about how to configure the cache, see <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&amp;</ph>lt;namedCaches<ph id=\"ph2\">\\&amp;</ph>gt; Element (Cache Settings)<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md)</ept>.","source":"For more information about how to configure the cache, see [\\&lt;namedCaches\\&gt; Element (Cache Settings)](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md)."}],"pos":[7847,8858],"yaml":true,"extradata":"MT"},{"content":"The amount of maximum memory size, in megabytes. The default is zero, which indicates that <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> instances manage their own memory based on the amount of memory that is installed on the computer.","nodes":[{"pos":[0,245],"content":"The amount of maximum memory size, in megabytes. The default is zero, which indicates that <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> instances manage their own memory based on the amount of memory that is installed on the computer.","nodes":[{"content":"The amount of maximum memory size, in megabytes.","pos":[0,48]},{"content":"The default is zero, which indicates that <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Caching.MemoryCache\"&gt;&lt;/xref&gt;</ph> instances manage their own memory based on the amount of memory that is installed on the computer.","pos":[49,245],"source":" The default is zero, which indicates that <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> instances manage their own memory based on the amount of memory that is installed on the computer."}]}],"pos":[9186,9432],"yaml":true},{"content":"Gets or sets the name of a particular cache configuration.","nodes":[{"pos":[0,58],"content":"Gets or sets the name of a particular cache configuration.","nodes":[{"content":"Gets or sets the name of a particular cache configuration.","pos":[0,58]}]}],"pos":[10677,10736],"yaml":true},{"content":"The <xref:System.Runtime.Caching.Configuration.MemoryCacheElement.Name%2A> property value is the unique identifier for a particular named cache configuration. Each cache configuration must have a unique ID.  \n  \n In the `memoryCache` section of a configuration file, a unique cache configuration is defined by a `namedCaches` configuration collection. Each named cache entry requires a unique name in the configuration file. This value must be at least one character long.  \n  \n For more information about how to configure the cache, see [\\&lt;namedCaches\\&gt; Element (Cache Settings)](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md).","nodes":[{"pos":[0,206],"content":"The <xref:System.Runtime.Caching.Configuration.MemoryCacheElement.Name%2A> property value is the unique identifier for a particular named cache configuration. Each cache configuration must have a unique ID.","nodes":[{"content":"The <xref:System.Runtime.Caching.Configuration.MemoryCacheElement.Name%2A> property value is the unique identifier for a particular named cache configuration. Each cache configuration must have a unique ID.","pos":[0,206],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.Configuration.MemoryCacheElement.Name%2A&gt;</ph> property value is the unique identifier for a particular named cache configuration.","pos":[0,158],"source":"The <xref:System.Runtime.Caching.Configuration.MemoryCacheElement.Name%2A> property value is the unique identifier for a particular named cache configuration."},{"content":"Each cache configuration must have a unique ID.","pos":[159,206]}]}]},{"pos":[213,472],"content":"In the `memoryCache` section of a configuration file, a unique cache configuration is defined by a `namedCaches` configuration collection. Each named cache entry requires a unique name in the configuration file. This value must be at least one character long.","nodes":[{"content":"In the <ph id=\"ph1\">`memoryCache`</ph> section of a configuration file, a unique cache configuration is defined by a <ph id=\"ph2\">`namedCaches`</ph> configuration collection.","pos":[0,138],"source":"In the `memoryCache` section of a configuration file, a unique cache configuration is defined by a `namedCaches` configuration collection."},{"content":"Each named cache entry requires a unique name in the configuration file.","pos":[139,211]},{"content":"This value must be at least one character long.","pos":[212,259]}]},{"pos":[479,678],"content":"For more information about how to configure the cache, see <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&amp;</ph>lt;namedCaches<ph id=\"ph2\">\\&amp;</ph>gt; Element (Cache Settings)<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md)</ept>.","source":"For more information about how to configure the cache, see [\\&lt;namedCaches\\&gt; Element (Cache Settings)](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md)."}],"pos":[10747,11434],"yaml":true,"extradata":"MT"},{"content":"The name of a cache configuration.","nodes":[{"pos":[0,34],"content":"The name of a cache configuration.","nodes":[{"content":"The name of a cache configuration.","pos":[0,34]}]}],"pos":[11858,11893],"yaml":true},{"content":"Gets or sets the percentage of server memory that can be used by the cache.","nodes":[{"pos":[0,75],"content":"Gets or sets the percentage of server memory that can be used by the cache.","nodes":[{"content":"Gets or sets the percentage of server memory that can be used by the cache.","pos":[0,75]}]}],"pos":[13321,13397],"yaml":true},{"content":"If the cache size exceeds the specified limit, the memory cache implementation removes cache entries.  \n  \n The setting for the <xref:System.Runtime.Caching.MemoryCache.PhysicalMemoryLimit%2A> property can be read from `physicalMemoryLimitPercentage` configuration attribute in the application configuration file. Alternatively, the value can be passed when the <xref:System.Runtime.Caching.MemoryCache> class is initialized.  \n  \n For more information about how to configure the cache, see [\\&lt;namedCaches\\&gt; Element (Cache Settings)](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md).","nodes":[{"pos":[0,101],"content":"If the cache size exceeds the specified limit, the memory cache implementation removes cache entries.","nodes":[{"content":"If the cache size exceeds the specified limit, the memory cache implementation removes cache entries.","pos":[0,101]}]},{"pos":[108,425],"content":"The setting for the <xref:System.Runtime.Caching.MemoryCache.PhysicalMemoryLimit%2A> property can be read from `physicalMemoryLimitPercentage` configuration attribute in the application configuration file. Alternatively, the value can be passed when the <xref:System.Runtime.Caching.MemoryCache> class is initialized.","nodes":[{"content":"The setting for the <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.MemoryCache.PhysicalMemoryLimit%2A&gt;</ph> property can be read from <ph id=\"ph2\">`physicalMemoryLimitPercentage`</ph> configuration attribute in the application configuration file.","pos":[0,205],"source":"The setting for the <xref:System.Runtime.Caching.MemoryCache.PhysicalMemoryLimit%2A> property can be read from `physicalMemoryLimitPercentage` configuration attribute in the application configuration file."},{"content":"Alternatively, the value can be passed when the <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.MemoryCache&gt;</ph> class is initialized.","pos":[206,317],"source":" Alternatively, the value can be passed when the <xref:System.Runtime.Caching.MemoryCache> class is initialized."}]},{"pos":[432,631],"content":"For more information about how to configure the cache, see <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&amp;</ph>lt;namedCaches<ph id=\"ph2\">\\&amp;</ph>gt; Element (Cache Settings)<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md)</ept>.","source":"For more information about how to configure the cache, see [\\&lt;namedCaches\\&gt; Element (Cache Settings)](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md)."}],"pos":[13408,14048],"yaml":true,"extradata":"MT"},{"content":"The percentage of physical memory that the cache can use, expressed as an integer value from 1 to 100. The default is zero, which indicates that <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> instances manage their own memory based on the amount of memory that is installed on the computer.","nodes":[{"pos":[0,299],"content":"The percentage of physical memory that the cache can use, expressed as an integer value from 1 to 100. The default is zero, which indicates that <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> instances manage their own memory based on the amount of memory that is installed on the computer.","nodes":[{"content":"The percentage of physical memory that the cache can use, expressed as an integer value from 1 to 100.","pos":[0,102]},{"content":"The default is zero, which indicates that <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Caching.MemoryCache\"&gt;&lt;/xref&gt;</ph> instances manage their own memory based on the amount of memory that is installed on the computer.","pos":[103,299],"source":" The default is zero, which indicates that <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> instances manage their own memory based on the amount of memory that is installed on the computer."}]}],"pos":[14398,14698],"yaml":true},{"content":"Gets or sets a value that indicates the time interval after which the cache implementation compares the current memory load against the absolute and percentage-based memory limits that are set for the cache instance.","nodes":[{"pos":[0,216],"content":"Gets or sets a value that indicates the time interval after which the cache implementation compares the current memory load against the absolute and percentage-based memory limits that are set for the cache instance.","nodes":[{"content":"Gets or sets a value that indicates the time interval after which the cache implementation compares the current memory load against the absolute and percentage-based memory limits that are set for the cache instance.","pos":[0,216]}]}],"pos":[16013,16230],"yaml":true},{"content":"The <xref:System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval%2A> property corresponds to the `pollingInterval` configuration attribute of the `namedCaches` element. The settings for this configuration attribute are specified in the format `HH:MM:SS` and can be read from the `pollingInterval` configuration attribute in the application configuration. Alternatively, the value can be passed when the <xref:System.Runtime.Caching.MemoryCache> class is initialized.  \n  \n For more information about how to configure the cache, see [\\&lt;namedCaches\\&gt; Element (Cache Settings)](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md).","nodes":[{"pos":[0,483],"content":"The <xref:System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval%2A> property corresponds to the `pollingInterval` configuration attribute of the `namedCaches` element. The settings for this configuration attribute are specified in the format `HH:MM:SS` and can be read from the `pollingInterval` configuration attribute in the application configuration. Alternatively, the value can be passed when the <xref:System.Runtime.Caching.MemoryCache> class is initialized.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval%2A&gt;</ph> property corresponds to the <ph id=\"ph2\">`pollingInterval`</ph> configuration attribute of the <ph id=\"ph3\">`namedCaches`</ph> element.","pos":[0,185],"source":"The <xref:System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval%2A> property corresponds to the `pollingInterval` configuration attribute of the `namedCaches` element."},{"content":"The settings for this configuration attribute are specified in the format <ph id=\"ph1\">`HH:MM:SS`</ph> and can be read from the <ph id=\"ph2\">`pollingInterval`</ph> configuration attribute in the application configuration.","pos":[186,371],"source":" The settings for this configuration attribute are specified in the format `HH:MM:SS` and can be read from the `pollingInterval` configuration attribute in the application configuration."},{"content":"Alternatively, the value can be passed when the <ph id=\"ph1\">&lt;xref:System.Runtime.Caching.MemoryCache&gt;</ph> class is initialized.","pos":[372,483],"source":" Alternatively, the value can be passed when the <xref:System.Runtime.Caching.MemoryCache> class is initialized."}]},{"pos":[490,689],"content":"For more information about how to configure the cache, see <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&amp;</ph>lt;namedCaches<ph id=\"ph2\">\\&amp;</ph>gt; Element (Cache Settings)<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md)</ept>.","source":"For more information about how to configure the cache, see [\\&lt;namedCaches\\&gt; Element (Cache Settings)](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md)."}],"pos":[16241,16937],"yaml":true,"extradata":"MT"},{"content":"The time interval after which the cache implementation compares the current memory load against the absolute and percentage-based memory limits that are set for the cache instance. The default is two minutes.","nodes":[{"pos":[0,208],"content":"The time interval after which the cache implementation compares the current memory load against the absolute and percentage-based memory limits that are set for the cache instance. The default is two minutes.","nodes":[{"content":"The time interval after which the cache implementation compares the current memory load against the absolute and percentage-based memory limits that are set for the cache instance. The default is two minutes.","pos":[0,208],"nodes":[{"content":"The time interval after which the cache implementation compares the current memory load against the absolute and percentage-based memory limits that are set for the cache instance.","pos":[0,180]},{"content":"The default is two minutes.","pos":[181,208]}]}]}],"pos":[17295,17504],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement\n  commentId: T:System.Runtime.Caching.Configuration.MemoryCacheElement\n  id: MemoryCacheElement\n  children:\n  - System.Runtime.Caching.Configuration.MemoryCacheElement.#ctor(System.String)\n  - System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes\n  - System.Runtime.Caching.Configuration.MemoryCacheElement.Name\n  - System.Runtime.Caching.Configuration.MemoryCacheElement.PhysicalMemoryLimitPercentage\n  - System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval\n  - System.Runtime.Caching.Configuration.MemoryCacheElement.Properties\n  langs:\n  - csharp\n  name: MemoryCacheElement\n  nameWithType: MemoryCacheElement\n  fullName: System.Runtime.Caching.Configuration.MemoryCacheElement\n  type: Class\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching.Configuration\n  summary: Defines an element that is used to configure a cache that is based on the <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> class. This class cannot be inherited.\n  remarks: \"The <xref:System.Runtime.Caching.Configuration.MemoryCacheElement> class defines a  element that you can use to configure the cache. Multiple instances of the <xref:System.Runtime.Caching.MemoryCache> class can be used in a single application. Each `memoryCache` element in the configuration file can contain settings for a named <xref:System.Runtime.Caching.MemoryCache> instance.  \\n  \\n The `memoryCache` element requires a `namedCaches` child element. To define named configurations of the cache in addition to the default configuration, you can add `namedCaches` elements. For more information about how to add named cache configurations, see [\\\\&lt;namedCaches\\\\&gt; Element (Cache Settings)](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md).\"\n  syntax:\n    content: 'public sealed class MemoryCacheElement : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching.Configuration/MemoryCacheElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: ghogen\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.#ctor(System.String)\n  commentId: M:System.Runtime.Caching.Configuration.MemoryCacheElement.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  langs:\n  - csharp\n  name: MemoryCacheElement(String)\n  nameWithType: MemoryCacheElement.MemoryCacheElement(String)\n  fullName: MemoryCacheElement.MemoryCacheElement(String)\n  type: Constructor\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Caching.Configuration.MemoryCacheElement\"></xref> class.\n  syntax:\n    content: public MemoryCacheElement (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The unique name for a specific cache configuration.\n  overload: System.Runtime.Caching.Configuration.MemoryCacheElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching.Configuration/MemoryCacheElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: ghogen\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes\n  commentId: P:System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes\n  id: CacheMemoryLimitMegabytes\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  langs:\n  - csharp\n  name: CacheMemoryLimitMegabytes\n  nameWithType: MemoryCacheElement.CacheMemoryLimitMegabytes\n  fullName: MemoryCacheElement.CacheMemoryLimitMegabytes\n  type: Property\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching.Configuration\n  summary: Gets or sets the maximum memory size, in megabytes, that an instance of a <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> object can grow to.\n  remarks: \"The <xref:System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes%2A> property value represents the `cacheMemoryLimitMegabytes` configuration attribute in the `namedCaches` configuration element.  \\n  \\n If the cache size exceeds the specified limit, the memory cache implementation removes cache entries.  \\n  \\n This property can be set individually in `namedCaches` elements, with each `namedCaches` element corresponding to a unique cache configuration.  \\n  \\n The settings for the <xref:System.Runtime.Caching.MemoryCache.CacheMemoryLimit%2A> property can be read from the `cacheMemoryLimitMegabytes` configuration attribute in the configuration file. Alternatively, the settings can be passed when the <xref:System.Runtime.Caching.MemoryCache> class is initialized.  \\n  \\n For more information about how to configure the cache, see [\\\\&lt;namedCaches\\\\&gt; Element (Cache Settings)](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md).\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"cacheMemoryLimitMegabytes\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.IntegerValidator(MinValue=0)]\n\n      public int CacheMemoryLimitMegabytes { get; set; }\n    return:\n      type: System.Int32\n      description: The amount of maximum memory size, in megabytes. The default is zero, which indicates that <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> instances manage their own memory based on the amount of memory that is installed on the computer.\n  overload: System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.IntegerValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching.Configuration/MemoryCacheElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: ghogen\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.Name\n  commentId: P:System.Runtime.Caching.Configuration.MemoryCacheElement.Name\n  id: Name\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  langs:\n  - csharp\n  name: Name\n  nameWithType: MemoryCacheElement.Name\n  fullName: MemoryCacheElement.Name\n  type: Property\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching.Configuration\n  summary: Gets or sets the name of a particular cache configuration.\n  remarks: \"The <xref:System.Runtime.Caching.Configuration.MemoryCacheElement.Name%2A> property value is the unique identifier for a particular named cache configuration. Each cache configuration must have a unique ID.  \\n  \\n In the `memoryCache` section of a configuration file, a unique cache configuration is defined by a `namedCaches` configuration collection. Each named cache entry requires a unique name in the configuration file. This value must be at least one character long.  \\n  \\n For more information about how to configure the cache, see [\\\\&lt;namedCaches\\\\&gt; Element (Cache Settings)](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md).\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"name\", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsKey=true, IsRequired=true)]\n\n      [System.Configuration.StringValidator(MinLength=1)]\n\n      public string Name { get; set; }\n    return:\n      type: System.String\n      description: The name of a cache configuration.\n  overload: System.Runtime.Caching.Configuration.MemoryCacheElement.Name*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.StringValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching.Configuration/MemoryCacheElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: ghogen\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.PhysicalMemoryLimitPercentage\n  commentId: P:System.Runtime.Caching.Configuration.MemoryCacheElement.PhysicalMemoryLimitPercentage\n  id: PhysicalMemoryLimitPercentage\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  langs:\n  - csharp\n  name: PhysicalMemoryLimitPercentage\n  nameWithType: MemoryCacheElement.PhysicalMemoryLimitPercentage\n  fullName: MemoryCacheElement.PhysicalMemoryLimitPercentage\n  type: Property\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching.Configuration\n  summary: Gets or sets the percentage of server memory that can be used by the cache.\n  remarks: \"If the cache size exceeds the specified limit, the memory cache implementation removes cache entries.  \\n  \\n The setting for the <xref:System.Runtime.Caching.MemoryCache.PhysicalMemoryLimit%2A> property can be read from `physicalMemoryLimitPercentage` configuration attribute in the application configuration file. Alternatively, the value can be passed when the <xref:System.Runtime.Caching.MemoryCache> class is initialized.  \\n  \\n For more information about how to configure the cache, see [\\\\&lt;namedCaches\\\\&gt; Element (Cache Settings)](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md).\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"physicalMemoryLimitPercentage\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.IntegerValidator(MaxValue=100, MinValue=0)]\n\n      public int PhysicalMemoryLimitPercentage { get; set; }\n    return:\n      type: System.Int32\n      description: The percentage of physical memory that the cache can use, expressed as an integer value from 1 to 100. The default is zero, which indicates that <xref href=\"System.Runtime.Caching.MemoryCache\"></xref> instances manage their own memory based on the amount of memory that is installed on the computer.\n  overload: System.Runtime.Caching.Configuration.MemoryCacheElement.PhysicalMemoryLimitPercentage*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.IntegerValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching.Configuration/MemoryCacheElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: ghogen\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval\n  commentId: P:System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval\n  id: PollingInterval\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  langs:\n  - csharp\n  name: PollingInterval\n  nameWithType: MemoryCacheElement.PollingInterval\n  fullName: MemoryCacheElement.PollingInterval\n  type: Property\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching.Configuration\n  summary: Gets or sets a value that indicates the time interval after which the cache implementation compares the current memory load against the absolute and percentage-based memory limits that are set for the cache instance.\n  remarks: \"The <xref:System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval%2A> property corresponds to the `pollingInterval` configuration attribute of the `namedCaches` element. The settings for this configuration attribute are specified in the format `HH:MM:SS` and can be read from the `pollingInterval` configuration attribute in the application configuration. Alternatively, the value can be passed when the <xref:System.Runtime.Caching.MemoryCache> class is initialized.  \\n  \\n For more information about how to configure the cache, see [\\\\&lt;namedCaches\\\\&gt; Element (Cache Settings)](~/docs/framework/configure-apps/file-schema/runtime/namedcaches-element-cache-settings.md).\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Configuration.InfiniteTimeSpanConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"pollingInterval\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public TimeSpan PollingInterval { get; set; }\n    return:\n      type: System.TimeSpan\n      description: The time interval after which the cache implementation compares the current memory load against the absolute and percentage-based memory limits that are set for the cache instance. The default is two minutes.\n  overload: System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching.Configuration/MemoryCacheElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: ghogen\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.Properties\n  commentId: P:System.Runtime.Caching.Configuration.MemoryCacheElement.Properties\n  id: Properties\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: MemoryCacheElement.Properties\n  fullName: MemoryCacheElement.Properties\n  type: Property\n  assemblies:\n  - System.Runtime.Caching\n  namespace: System.Runtime.Caching.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: ''\n  overload: System.Runtime.Caching.Configuration.MemoryCacheElement.Properties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching.Configuration/MemoryCacheElement.xml\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationElement\n  nameWithType: ConfigurationElement\n  fullName: System.Configuration.ConfigurationElement\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.#ctor(System.String)\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  isExternal: false\n  name: MemoryCacheElement(String)\n  nameWithType: MemoryCacheElement.MemoryCacheElement(String)\n  fullName: MemoryCacheElement.MemoryCacheElement(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  isExternal: false\n  name: CacheMemoryLimitMegabytes\n  nameWithType: MemoryCacheElement.CacheMemoryLimitMegabytes\n  fullName: MemoryCacheElement.CacheMemoryLimitMegabytes\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.Name\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  isExternal: false\n  name: Name\n  nameWithType: MemoryCacheElement.Name\n  fullName: MemoryCacheElement.Name\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.PhysicalMemoryLimitPercentage\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  isExternal: false\n  name: PhysicalMemoryLimitPercentage\n  nameWithType: MemoryCacheElement.PhysicalMemoryLimitPercentage\n  fullName: MemoryCacheElement.PhysicalMemoryLimitPercentage\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  isExternal: false\n  name: PollingInterval\n  nameWithType: MemoryCacheElement.PollingInterval\n  fullName: MemoryCacheElement.PollingInterval\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.Properties\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  isExternal: false\n  name: Properties\n  nameWithType: MemoryCacheElement.Properties\n  fullName: MemoryCacheElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.#ctor*\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  isExternal: false\n  name: MemoryCacheElement\n  nameWithType: MemoryCacheElement.MemoryCacheElement\n  fullName: MemoryCacheElement.MemoryCacheElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching.Configuration/MemoryCacheElement.xml\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes*\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  isExternal: false\n  name: CacheMemoryLimitMegabytes\n  nameWithType: MemoryCacheElement.CacheMemoryLimitMegabytes\n  fullName: MemoryCacheElement.CacheMemoryLimitMegabytes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching.Configuration/MemoryCacheElement.xml\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.Name*\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  isExternal: false\n  name: Name\n  nameWithType: MemoryCacheElement.Name\n  fullName: MemoryCacheElement.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching.Configuration/MemoryCacheElement.xml\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.PhysicalMemoryLimitPercentage*\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  isExternal: false\n  name: PhysicalMemoryLimitPercentage\n  nameWithType: MemoryCacheElement.PhysicalMemoryLimitPercentage\n  fullName: MemoryCacheElement.PhysicalMemoryLimitPercentage\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching.Configuration/MemoryCacheElement.xml\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval*\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  isExternal: false\n  name: PollingInterval\n  nameWithType: MemoryCacheElement.PollingInterval\n  fullName: MemoryCacheElement.PollingInterval\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching.Configuration/MemoryCacheElement.xml\n- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.Properties*\n  parent: System.Runtime.Caching.Configuration.MemoryCacheElement\n  isExternal: false\n  name: Properties\n  nameWithType: MemoryCacheElement.Properties\n  fullName: MemoryCacheElement.Properties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Caching.Configuration/MemoryCacheElement.xml\n- uid: System.Configuration.ConfigurationElement.Equals(System.Object)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ConfigurationElement.Equals(Object)\n  fullName: ConfigurationElement.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Configuration.ConfigurationElement.GetHashCode\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ConfigurationElement.GetHashCode()\n  fullName: ConfigurationElement.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.ConfigurationElement.CurrentConfiguration\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: CurrentConfiguration\n  nameWithType: ConfigurationElement.CurrentConfiguration\n  fullName: ConfigurationElement.CurrentConfiguration\n- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: DeserializeElement(XmlReader, Boolean)\n  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n  fullName: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n- uid: System.Configuration.ConfigurationElement.ElementInformation\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementInformation\n  nameWithType: ConfigurationElement.ElementInformation\n  fullName: ConfigurationElement.ElementInformation\n- uid: System.Configuration.ConfigurationElement.ElementProperty\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementProperty\n  nameWithType: ConfigurationElement.ElementProperty\n  fullName: ConfigurationElement.ElementProperty\n- uid: System.Configuration.ConfigurationElement.EvaluationContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: EvaluationContext\n  nameWithType: ConfigurationElement.EvaluationContext\n  fullName: ConfigurationElement.EvaluationContext\n- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedAssemblyString(String)\n  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)\n  fullName: ConfigurationElement.GetTransformedAssemblyString(String)\n- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedTypeString(String)\n  nameWithType: ConfigurationElement.GetTransformedTypeString(String)\n  fullName: ConfigurationElement.GetTransformedTypeString(String)\n- uid: System.Configuration.ConfigurationElement.HasContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: HasContext\n  nameWithType: ConfigurationElement.HasContext\n  fullName: ConfigurationElement.HasContext\n- uid: System.Configuration.ConfigurationElement.Init\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Init()\n  nameWithType: ConfigurationElement.Init()\n  fullName: ConfigurationElement.Init()\n- uid: System.Configuration.ConfigurationElement.InitializeDefault\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: InitializeDefault()\n  nameWithType: ConfigurationElement.InitializeDefault()\n  fullName: ConfigurationElement.InitializeDefault()\n- uid: System.Configuration.ConfigurationElement.IsModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsModified()\n  nameWithType: ConfigurationElement.IsModified()\n  fullName: ConfigurationElement.IsModified()\n- uid: System.Configuration.ConfigurationElement.IsReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsReadOnly()\n  nameWithType: ConfigurationElement.IsReadOnly()\n  fullName: ConfigurationElement.IsReadOnly()\n- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(ConfigurationProperty)\n  nameWithType: ConfigurationElement.Item(ConfigurationProperty)\n  fullName: ConfigurationElement.Item(ConfigurationProperty)\n- uid: System.Configuration.ConfigurationElement.Item(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(String)\n  nameWithType: ConfigurationElement.Item(String)\n  fullName: ConfigurationElement.Item(String)\n- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ListErrors(IList)\n  nameWithType: ConfigurationElement.ListErrors(IList)\n  fullName: ConfigurationElement.ListErrors(IList)\n- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllAttributesExcept\n  nameWithType: ConfigurationElement.LockAllAttributesExcept\n  fullName: ConfigurationElement.LockAllAttributesExcept\n- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllElementsExcept\n  nameWithType: ConfigurationElement.LockAllElementsExcept\n  fullName: ConfigurationElement.LockAllElementsExcept\n- uid: System.Configuration.ConfigurationElement.LockAttributes\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAttributes\n  nameWithType: ConfigurationElement.LockAttributes\n  fullName: ConfigurationElement.LockAttributes\n- uid: System.Configuration.ConfigurationElement.LockElements\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockElements\n  nameWithType: ConfigurationElement.LockElements\n  fullName: ConfigurationElement.LockElements\n- uid: System.Configuration.ConfigurationElement.LockItem\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockItem\n  nameWithType: ConfigurationElement.LockItem\n  fullName: ConfigurationElement.LockItem\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedAttribute(String, String)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedElement(String, XmlReader)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnRequiredPropertyNotFound(String)\n  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)\n  fullName: ConfigurationElement.OnRequiredPropertyNotFound(String)\n- uid: System.Configuration.ConfigurationElement.PostDeserialize\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PostDeserialize()\n  nameWithType: ConfigurationElement.PostDeserialize()\n  fullName: ConfigurationElement.PostDeserialize()\n- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PreSerialize(XmlWriter)\n  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)\n  fullName: ConfigurationElement.PreSerialize(XmlWriter)\n- uid: System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: ConfigurationElement.Reset(ConfigurationElement)\n  fullName: ConfigurationElement.Reset(ConfigurationElement)\n- uid: System.Configuration.ConfigurationElement.ResetModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ResetModified()\n  nameWithType: ConfigurationElement.ResetModified()\n  fullName: ConfigurationElement.ResetModified()\n- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeElement(XmlWriter, Boolean)\n  nameWithType: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n  fullName: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeToXmlElement(XmlWriter, String)\n  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n  fullName: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  fullName: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n- uid: System.Configuration.ConfigurationElement.SetReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetReadOnly()\n  nameWithType: ConfigurationElement.SetReadOnly()\n  fullName: ConfigurationElement.SetReadOnly()\n- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  fullName: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n"}