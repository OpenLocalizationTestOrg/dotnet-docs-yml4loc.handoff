{"nodes":[{"content":"A helper class to enable impersonation while serializing the body of the reply message.","nodes":[{"pos":[0,87],"content":"A helper class to enable impersonation while serializing the body of the reply message.","nodes":[{"content":"A helper class to enable impersonation while serializing the body of the reply message.","pos":[0,87]}]}],"pos":[1512,1600],"yaml":true},{"content":"Creates a copy of the message property.","nodes":[{"pos":[0,39],"content":"Creates a copy of the message property.","nodes":[{"content":"Creates a copy of the message property.","pos":[0,39]}]}],"pos":[3260,3300],"yaml":true},{"content":"The copy of the message property.","nodes":[{"pos":[0,33],"content":"The copy of the message property.","nodes":[{"content":"The copy of the message property.","pos":[0,33]}]}],"pos":[3499,3533],"yaml":true},{"content":"Gets the name of the message property.","nodes":[{"pos":[0,38],"content":"Gets the name of the message property.","nodes":[{"content":"Gets the name of the message property.","pos":[0,38]}]}],"pos":[4746,4785],"yaml":true},{"content":"The name of the message property.","nodes":[{"pos":[0,33],"content":"The name of the message property.","nodes":[{"content":"The name of the message property.","pos":[0,33]}]}],"pos":[4900,4934],"yaml":true},{"content":"Starts impersonating with the caller's context if impersonation is enabled on the service and sets the appropriate principal on the thread as per the service configuration.","nodes":[{"pos":[0,172],"content":"Starts impersonating with the caller's context if impersonation is enabled on the service and sets the appropriate principal on the thread as per the service configuration.","nodes":[{"content":"Starts impersonating with the caller's context if impersonation is enabled on the service and sets the appropriate principal on the thread as per the service configuration.","pos":[0,172]}]}],"pos":[6550,6723],"yaml":true},{"content":"When this method returns, contains the impersonated context. This parameter is treated as uninitialized.","nodes":[{"pos":[0,104],"content":"When this method returns, contains the impersonated context. This parameter is treated as uninitialized.","nodes":[{"content":"When this method returns, contains the impersonated context. This parameter is treated as uninitialized.","pos":[0,104],"nodes":[{"content":"When this method returns, contains the impersonated context.","pos":[0,60]},{"content":"This parameter is treated as uninitialized.","pos":[61,104]}]}]}],"pos":[7005,7110],"yaml":true},{"content":"When this method returns, contains the original principal on the thread before invoking this method. This parameter is treated as uninitialized.","nodes":[{"pos":[0,144],"content":"When this method returns, contains the original principal on the thread before invoking this method. This parameter is treated as uninitialized.","nodes":[{"content":"When this method returns, contains the original principal on the thread before invoking this method. This parameter is treated as uninitialized.","pos":[0,144],"nodes":[{"content":"When this method returns, contains the original principal on the thread before invoking this method.","pos":[0,100]},{"content":"This parameter is treated as uninitialized.","pos":[101,144]}]}]}],"pos":[7206,7351],"yaml":true},{"content":"When this method returns, contains a value that indicates whether the principal was set on the thread by this method. This parameter returns `false` if the operation context was not available to impersonate. This parameter is treated as uninitialized.","nodes":[{"pos":[0,251],"content":"When this method returns, contains a value that indicates whether the principal was set on the thread by this method. This parameter returns `false` if the operation context was not available to impersonate. This parameter is treated as uninitialized.","nodes":[{"content":"When this method returns, contains a value that indicates whether the principal was set on the thread by this method.","pos":[0,117]},{"content":"This parameter returns <ph id=\"ph1\">`false`</ph> if the operation context was not available to impersonate.","pos":[118,207],"source":" This parameter returns `false` if the operation context was not available to impersonate."},{"content":"This parameter is treated as uninitialized.","pos":[208,251]}]}],"pos":[7428,7680],"yaml":true},{"content":"Reverts impersonation and sets the specified original principal on the thread.","nodes":[{"pos":[0,78],"content":"Reverts impersonation and sets the specified original principal on the thread.","nodes":[{"content":"Reverts impersonation and sets the specified original principal on the thread.","pos":[0,78]}]}],"pos":[9312,9391],"yaml":true},{"content":"The impersonation context to revert.","nodes":[{"pos":[0,36],"content":"The impersonation context to revert.","nodes":[{"content":"The impersonation context to revert.","pos":[0,36]}]}],"pos":[9660,9697],"yaml":true},{"content":"The original principal to set on the thread.","nodes":[{"pos":[0,44],"content":"The original principal to set on the thread.","nodes":[{"content":"The original principal to set on the thread.","pos":[0,44]}]}],"pos":[9793,9838],"yaml":true},{"content":"A value that indicates whether the thread principal was set during impersonation. `true` if the principal was set; otherwise, `false`.","nodes":[{"pos":[0,134],"content":"A value that indicates whether the thread principal was set during impersonation. `true` if the principal was set; otherwise, `false`.","nodes":[{"content":"A value that indicates whether the thread principal was set during impersonation.","pos":[0,81]},{"content":"<ph id=\"ph1\">`true`</ph> if the principal was set; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[82,134],"source":"`true` if the principal was set; otherwise, `false`."}]}],"pos":[9915,10050],"yaml":true},{"content":"Gets the <xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"></xref> property from the specified message.","nodes":[{"pos":[0,140],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"&gt;&lt;/xref&gt;</ph> property from the specified message.","source":"Gets the <xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"></xref> property from the specified message."}],"pos":[11801,11942],"yaml":true},{"content":"The message from which to extract the property.","nodes":[{"pos":[0,47],"content":"The message from which to extract the property.","nodes":[{"content":"The message from which to extract the property.","pos":[0,47]}]}],"pos":[12229,12277],"yaml":true},{"content":"When this method returns, contains the <xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"></xref> property extracted from the message.","nodes":[{"pos":[0,170],"content":"When this method returns, contains the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"&gt;&lt;/xref&gt;</ph> property extracted from the message.","source":"When this method returns, contains the <xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"></xref> property extracted from the message."}],"pos":[12401,12572],"yaml":true},{"content":"`true` if the  property was found; otherwise, `false`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">`true`</ph> if the  property was found; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the  property was found; otherwise, `false`."}],"pos":[12630,12687],"yaml":true},{"content":"Gets the <xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"></xref> property from the specified <xref href=\"System.ServiceModel.Channels.MessageProperties\"></xref> object..","nodes":[{"pos":[0,208],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"&gt;&lt;/xref&gt;</ph> property from the specified <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.MessageProperties\"&gt;&lt;/xref&gt;</ph> object..","source":"Gets the <xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"></xref> property from the specified <xref href=\"System.ServiceModel.Channels.MessageProperties\"></xref> object.."}],"pos":[14470,14679],"yaml":true},{"content":"The message properties object from which to extract the property.","nodes":[{"pos":[0,65],"content":"The message properties object from which to extract the property.","nodes":[{"content":"The message properties object from which to extract the property.","pos":[0,65]}]}],"pos":[14992,15058],"yaml":true},{"content":"When this method returns, contains the <xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"></xref> property extracted from the message.","nodes":[{"pos":[0,170],"content":"When this method returns, contains the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"&gt;&lt;/xref&gt;</ph> property extracted from the message.","source":"When this method returns, contains the <xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"></xref> property extracted from the message."}],"pos":[15182,15353],"yaml":true},{"content":"`true` if the  property was found; otherwise, `false`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">`true`</ph> if the  property was found; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the  property was found; otherwise, `false`."}],"pos":[15411,15468],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  commentId: T:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  id: ImpersonateOnSerializingReplyMessageProperty\n  children:\n  - System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy\n  - System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name\n  - System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)\n  - System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)\n  - System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)\n  - System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)\n  langs:\n  - csharp\n  name: ImpersonateOnSerializingReplyMessageProperty\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty\n  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: A helper class to enable impersonation while serializing the body of the reply message.\n  syntax:\n    content: 'public class ImpersonateOnSerializingReplyMessageProperty : System.ServiceModel.Channels.IMessageProperty'\n  inheritance:\n  - System.Object\n  implements:\n  - System.ServiceModel.Channels.IMessageProperty\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/ImpersonateOnSerializingReplyMessageProperty.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: ghogen\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy\n  commentId: M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy\n  id: CreateCopy\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  langs:\n  - csharp\n  name: CreateCopy()\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.CreateCopy()\n  fullName: ImpersonateOnSerializingReplyMessageProperty.CreateCopy()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Creates a copy of the message property.\n  syntax:\n    content: public System.ServiceModel.Channels.IMessageProperty CreateCopy ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Channels.IMessageProperty\n      description: The copy of the message property.\n  overload: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/ImpersonateOnSerializingReplyMessageProperty.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: ghogen\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name\n  commentId: P:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name\n  id: Name\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.Name\n  fullName: ImpersonateOnSerializingReplyMessageProperty.Name\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the name of the message property.\n  syntax:\n    content: public static string Name { get; }\n    return:\n      type: System.String\n      description: The name of the message property.\n  overload: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/ImpersonateOnSerializingReplyMessageProperty.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: ghogen\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)\n  commentId: M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)\n  id: StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  langs:\n  - csharp\n  name: StartImpersonation(IDisposable, IPrincipal, Boolean)\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(IDisposable, IPrincipal, Boolean)\n  fullName: ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(IDisposable, IPrincipal, Boolean)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Starts impersonating with the caller's context if impersonation is enabled on the service and sets the appropriate principal on the thread as per the service configuration.\n  syntax:\n    content: public void StartImpersonation (out IDisposable impersonationContext, out System.Security.Principal.IPrincipal originalPrincipal, out bool isThreadPrincipalSet);\n    parameters:\n    - id: impersonationContext\n      type: System.IDisposable\n      description: When this method returns, contains the impersonated context. This parameter is treated as uninitialized.\n    - id: originalPrincipal\n      type: System.Security.Principal.IPrincipal\n      description: When this method returns, contains the original principal on the thread before invoking this method. This parameter is treated as uninitialized.\n    - id: isThreadPrincipalSet\n      type: System.Boolean\n      description: When this method returns, contains a value that indicates whether the principal was set on the thread by this method. This parameter returns `false` if the operation context was not available to impersonate. This parameter is treated as uninitialized.\n  overload: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/ImpersonateOnSerializingReplyMessageProperty.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: ghogen\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)\n  commentId: M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)\n  id: StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  langs:\n  - csharp\n  name: StopImpersonation(IDisposable, IPrincipal, Boolean)\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(IDisposable, IPrincipal, Boolean)\n  fullName: ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(IDisposable, IPrincipal, Boolean)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Reverts impersonation and sets the specified original principal on the thread.\n  syntax:\n    content: public void StopImpersonation (IDisposable impersonationContext, System.Security.Principal.IPrincipal originalPrincipal, bool isThreadPrincipalSet);\n    parameters:\n    - id: impersonationContext\n      type: System.IDisposable\n      description: The impersonation context to revert.\n    - id: originalPrincipal\n      type: System.Security.Principal.IPrincipal\n      description: The original principal to set on the thread.\n    - id: isThreadPrincipalSet\n      type: System.Boolean\n      description: A value that indicates whether the thread principal was set during impersonation. `true` if the principal was set; otherwise, `false`.\n  overload: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/ImpersonateOnSerializingReplyMessageProperty.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: ghogen\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)\n  commentId: M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)\n  id: TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  langs:\n  - csharp\n  name: TryGet(Message, ImpersonateOnSerializingReplyMessageProperty)\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.TryGet(Message, ImpersonateOnSerializingReplyMessageProperty)\n  fullName: ImpersonateOnSerializingReplyMessageProperty.TryGet(Message, ImpersonateOnSerializingReplyMessageProperty)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the <xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"></xref> property from the specified message.\n  syntax:\n    content: public static bool TryGet (System.ServiceModel.Channels.Message message, out System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty property);\n    parameters:\n    - id: message\n      type: System.ServiceModel.Channels.Message\n      description: The message from which to extract the property.\n    - id: property\n      type: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n      description: When this method returns, contains the <xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"></xref> property extracted from the message.\n    return:\n      type: System.Boolean\n      description: '`true` if the  property was found; otherwise, `false`.'\n  overload: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/ImpersonateOnSerializingReplyMessageProperty.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: ghogen\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)\n  commentId: M:System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)\n  id: TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  langs:\n  - csharp\n  name: TryGet(MessageProperties, ImpersonateOnSerializingReplyMessageProperty)\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.TryGet(MessageProperties, ImpersonateOnSerializingReplyMessageProperty)\n  fullName: ImpersonateOnSerializingReplyMessageProperty.TryGet(MessageProperties, ImpersonateOnSerializingReplyMessageProperty)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the <xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"></xref> property from the specified <xref href=\"System.ServiceModel.Channels.MessageProperties\"></xref> object..\n  syntax:\n    content: public static bool TryGet (System.ServiceModel.Channels.MessageProperties properties, out System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty property);\n    parameters:\n    - id: properties\n      type: System.ServiceModel.Channels.MessageProperties\n      description: The message properties object from which to extract the property.\n    - id: property\n      type: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n      description: When this method returns, contains the <xref href=\"System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\"></xref> property extracted from the message.\n    return:\n      type: System.Boolean\n      description: '`true` if the  property was found; otherwise, `false`.'\n  overload: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/ImpersonateOnSerializingReplyMessageProperty.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: ghogen\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  isExternal: false\n  name: CreateCopy()\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.CreateCopy()\n  fullName: ImpersonateOnSerializingReplyMessageProperty.CreateCopy()\n- uid: System.ServiceModel.Channels.IMessageProperty\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IMessageProperty\n  nameWithType: IMessageProperty\n  fullName: System.ServiceModel.Channels.IMessageProperty\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  isExternal: false\n  name: Name\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.Name\n  fullName: ImpersonateOnSerializingReplyMessageProperty.Name\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(System.IDisposable@,System.Security.Principal.IPrincipal@,System.Boolean@)\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  isExternal: false\n  name: StartImpersonation(IDisposable, IPrincipal, Boolean)\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(IDisposable, IPrincipal, Boolean)\n  fullName: ImpersonateOnSerializingReplyMessageProperty.StartImpersonation(IDisposable, IPrincipal, Boolean)\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n- uid: System.Security.Principal.IPrincipal\n  parent: System.Security.Principal\n  isExternal: false\n  name: IPrincipal\n  nameWithType: IPrincipal\n  fullName: System.Security.Principal.IPrincipal\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(System.IDisposable,System.Security.Principal.IPrincipal,System.Boolean)\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  isExternal: false\n  name: StopImpersonation(IDisposable, IPrincipal, Boolean)\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(IDisposable, IPrincipal, Boolean)\n  fullName: ImpersonateOnSerializingReplyMessageProperty.StopImpersonation(IDisposable, IPrincipal, Boolean)\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  isExternal: false\n  name: TryGet(Message, ImpersonateOnSerializingReplyMessageProperty)\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.TryGet(Message, ImpersonateOnSerializingReplyMessageProperty)\n  fullName: ImpersonateOnSerializingReplyMessageProperty.TryGet(Message, ImpersonateOnSerializingReplyMessageProperty)\n- uid: System.ServiceModel.Channels.Message\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: Message\n  nameWithType: Message\n  fullName: System.ServiceModel.Channels.Message\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  parent: System.ServiceModel.Security\n  isExternal: false\n  name: ImpersonateOnSerializingReplyMessageProperty\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty\n  fullName: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty@)\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  isExternal: false\n  name: TryGet(MessageProperties, ImpersonateOnSerializingReplyMessageProperty)\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.TryGet(MessageProperties, ImpersonateOnSerializingReplyMessageProperty)\n  fullName: ImpersonateOnSerializingReplyMessageProperty.TryGet(MessageProperties, ImpersonateOnSerializingReplyMessageProperty)\n- uid: System.ServiceModel.Channels.MessageProperties\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: MessageProperties\n  nameWithType: MessageProperties\n  fullName: System.ServiceModel.Channels.MessageProperties\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.CreateCopy*\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  isExternal: false\n  name: CreateCopy\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.CreateCopy\n  fullName: ImpersonateOnSerializingReplyMessageProperty.CreateCopy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/ImpersonateOnSerializingReplyMessageProperty.xml\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.Name*\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  isExternal: false\n  name: Name\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.Name\n  fullName: ImpersonateOnSerializingReplyMessageProperty.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/ImpersonateOnSerializingReplyMessageProperty.xml\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StartImpersonation*\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  isExternal: false\n  name: StartImpersonation\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.StartImpersonation\n  fullName: ImpersonateOnSerializingReplyMessageProperty.StartImpersonation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/ImpersonateOnSerializingReplyMessageProperty.xml\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.StopImpersonation*\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  isExternal: false\n  name: StopImpersonation\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.StopImpersonation\n  fullName: ImpersonateOnSerializingReplyMessageProperty.StopImpersonation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/ImpersonateOnSerializingReplyMessageProperty.xml\n- uid: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty.TryGet*\n  parent: System.ServiceModel.Security.ImpersonateOnSerializingReplyMessageProperty\n  isExternal: false\n  name: TryGet\n  nameWithType: ImpersonateOnSerializingReplyMessageProperty.TryGet\n  fullName: ImpersonateOnSerializingReplyMessageProperty.TryGet\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/ImpersonateOnSerializingReplyMessageProperty.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}