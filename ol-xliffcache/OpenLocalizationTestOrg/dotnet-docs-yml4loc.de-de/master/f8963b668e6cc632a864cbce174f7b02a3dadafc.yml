### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.TypeLibConverter
  commentId: T:System.Runtime.InteropServices.TypeLibConverter
  id: TypeLibConverter
  children:
  - System.Runtime.InteropServices.TypeLibConverter.#ctor
  - System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)
  - System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)
  - System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)
  - System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)
  langs:
  - csharp
  name: TypeLibConverter
  nameWithType: TypeLibConverter
  fullName: System.Runtime.InteropServices.TypeLibConverter
  type: Class
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides a set of services that convert a managed assembly to a COM type library and vice versa.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("f1c3bf79-c3e4-11d3-88e7-00902754c43a")]

      public sealed class TypeLibConverter : System.Runtime.InteropServices.ITypeLibConverter
  inheritance:
  - System.Object
  implements:
  - System.Runtime.InteropServices.ITypeLibConverter
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.InteropServices.ClassInterfaceAttribute
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  - type: System.Runtime.InteropServices.GuidAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/TypeLibConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices.TypeLibConverter.#ctor
  commentId: M:System.Runtime.InteropServices.TypeLibConverter.#ctor
  id: '#ctor'
  parent: System.Runtime.InteropServices.TypeLibConverter
  langs:
  - csharp
  name: TypeLibConverter()
  nameWithType: TypeLibConverter.TypeLibConverter()
  fullName: TypeLibConverter.TypeLibConverter()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Initializes a new instance of the <xref href="System.Runtime.InteropServices.TypeLibConverter"></xref> class.
  syntax:
    content: public TypeLibConverter ();
    parameters: []
  overload: System.Runtime.InteropServices.TypeLibConverter.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/TypeLibConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)
  commentId: M:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)
  id: ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)
  parent: System.Runtime.InteropServices.TypeLibConverter
  langs:
  - csharp
  name: ConvertAssemblyToTypeLib(Assembly, String, TypeLibExporterFlags, ITypeLibExporterNotifySink)
  nameWithType: TypeLibConverter.ConvertAssemblyToTypeLib(Assembly, String, TypeLibExporterFlags, ITypeLibExporterNotifySink)
  fullName: TypeLibConverter.ConvertAssemblyToTypeLib(Assembly, String, TypeLibExporterFlags, ITypeLibExporterNotifySink)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Converts an assembly to a COM type library.
  remarks: For more information on `ITypeLib`, please see its existing documentation in the MSDN library.
  example:
  - >-
    [!code-cpp[System.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1/CPP/convert2.cpp#1)]
     [!code-csharp[System.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1/CS/convert2.cs#1)]
     [!code-vb[System.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1/VB/convert2.vb#1)]
  syntax:
    content: public object ConvertAssemblyToTypeLib (System.Reflection.Assembly assembly, string strTypeLibName, System.Runtime.InteropServices.TypeLibExporterFlags flags, System.Runtime.InteropServices.ITypeLibExporterNotifySink notifySink);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: The assembly to convert.
    - id: strTypeLibName
      type: System.String
      description: The file name of the resulting type library.
    - id: flags
      type: System.Runtime.InteropServices.TypeLibExporterFlags
      description: A <xref href="System.Runtime.InteropServices.TypeLibExporterFlags"></xref> value indicating any special settings.
    - id: notifySink
      type: System.Runtime.InteropServices.ITypeLibExporterNotifySink
      description: The <xref href="System.Runtime.InteropServices.ITypeLibExporterNotifySink"></xref> interface implemented by the caller.
    return:
      type: System.Object
      description: An object that implements the `ITypeLib` interface.
  overload: System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/TypeLibConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)
  commentId: M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)
  id: ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)
  parent: System.Runtime.InteropServices.TypeLibConverter
  langs:
  - csharp
  name: ConvertTypeLibToAssembly(Object, String, Int32, ITypeLibImporterNotifySink, Byte[], StrongNameKeyPair, Boolean)
  nameWithType: TypeLibConverter.ConvertTypeLibToAssembly(Object, String, Int32, ITypeLibImporterNotifySink, Byte[], StrongNameKeyPair, Boolean)
  fullName: TypeLibConverter.ConvertTypeLibToAssembly(Object, String, Int32, ITypeLibImporterNotifySink, Byte[], StrongNameKeyPair, Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Converts a COM type library to an assembly.
  remarks: "If you do not want to generate a strong name for your assembly, it is valid for `publicKey` and `keyPair` to be `null`, as long as `flags` does not equal <xref:System.Runtime.InteropServices.TypeLibImporterFlags?displayProperty=fullName>. Otherwise, at least one of these parameters must be specified. If `publicKey` is `null`, the public key in `keyPair` will be set in the target assembly's manifest metadata and a signature will be generated based on the contents of the assembly. If `keyPair` is `null`, `publicKey` will be set in the target assembly's manifest metadata and no signature will be generated. Specifying both parameters is not generally useful, and can result in an invalid signature.  \n  \n For more information on `ITypeLib`, please see its existing documentation in the MSDN library."
  syntax:
    content: public System.Reflection.Emit.AssemblyBuilder ConvertTypeLibToAssembly (object typeLib, string asmFileName, int flags, System.Runtime.InteropServices.ITypeLibImporterNotifySink notifySink, byte[] publicKey, System.Reflection.StrongNameKeyPair keyPair, bool unsafeInterfaces);
    parameters:
    - id: typeLib
      type: System.Object
      description: The object that implements the `ITypeLib` interface.
    - id: asmFileName
      type: System.String
      description: The file name of the resulting assembly.
    - id: flags
      type: System.Int32
      description: A <xref href="System.Runtime.InteropServices.TypeLibImporterFlags"></xref> value indicating any special settings.
    - id: notifySink
      type: System.Runtime.InteropServices.ITypeLibImporterNotifySink
      description: <xref href="System.Runtime.InteropServices.ITypeLibImporterNotifySink"></xref> interface implemented by the caller.
    - id: publicKey
      type: System.Byte[]
      description: A `byte` array containing the public key.
    - id: keyPair
      type: System.Reflection.StrongNameKeyPair
      description: A <xref href="System.Reflection.StrongNameKeyPair"></xref> object containing the public and private cryptographic key pair.
    - id: unsafeInterfaces
      type: System.Boolean
      description: If `true`, the interfaces require link time checks for <xref href="System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode"></xref> permission. If `false`, the interfaces require run time checks that require a stack walk and are more expensive, but help provide greater protection.
    return:
      type: System.Reflection.Emit.AssemblyBuilder
      description: An <xref href="System.Reflection.Emit.AssemblyBuilder"></xref> object containing the converted type library.
  overload: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>typeLib</code> is `null`.  \n  \n -or-  \n  \n <code>asmFileName</code> is `null`.  \n  \n -or-  \n  \n <code>notifySink</code> is `null`."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asmFileName</code> is an empty string.  \n  \n -or-  \n  \n <code>asmFileName</code> is longer than MAX_PATH."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>flags</code> is not <xref href=\"System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly\"></xref>.  \n  \n -or-  \n  \n <code>publicKey</code> and <code>keyPair</code> are `null`."
  - type: System.Reflection.ReflectionTypeLoadException
    commentId: T:System.Reflection.ReflectionTypeLoadException
    description: The metadata produced has errors preventing any types from loading.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/TypeLibConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)
  commentId: M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)
  id: ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)
  parent: System.Runtime.InteropServices.TypeLibConverter
  langs:
  - csharp
  name: ConvertTypeLibToAssembly(Object, String, TypeLibImporterFlags, ITypeLibImporterNotifySink, Byte[], StrongNameKeyPair, String, Version)
  nameWithType: TypeLibConverter.ConvertTypeLibToAssembly(Object, String, TypeLibImporterFlags, ITypeLibImporterNotifySink, Byte[], StrongNameKeyPair, String, Version)
  fullName: TypeLibConverter.ConvertTypeLibToAssembly(Object, String, TypeLibImporterFlags, ITypeLibImporterNotifySink, Byte[], StrongNameKeyPair, String, Version)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Converts a COM type library to an assembly.
  remarks: "If you do not want to generate a strong name for your assembly, it is valid for `publicKey` and `keyPair` to be `null`, as long as `flags` does not equal <xref:System.Runtime.InteropServices.TypeLibImporterFlags?displayProperty=fullName>. Otherwise, atleast one of these parameters must be specified. If `publicKey` is `null`, the public key in `keyPair` will be set in the target assembly's manifest metadata and a signature will be generated based on the contents of the assembly. If `keyPair` is `null`, `publicKey` will be set in the target assembly's manifest metadata and no signature will be generated. Specifying both parameters is not generally useful, and can result in an invalid signature.  \n  \n For more information on `ITypeLib`, please see its existing documentation in the MSDN library."
  example:
  - >-
    [!code-cpp[System.Runtime.InteropServices.ConvertTypelibToASSembly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Runtime.InteropServices.ConvertTypelibToASSembly/CPP/convert1.cpp#1)]
     [!code-csharp[System.Runtime.InteropServices.ConvertTypelibToASSembly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.ConvertTypelibToASSembly/CS/convert1.cs#1)]
     [!code-vb[System.Runtime.InteropServices.ConvertTypelibToASSembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.ConvertTypelibToASSembly/VB/convert1.vb#1)]
  syntax:
    content: public System.Reflection.Emit.AssemblyBuilder ConvertTypeLibToAssembly (object typeLib, string asmFileName, System.Runtime.InteropServices.TypeLibImporterFlags flags, System.Runtime.InteropServices.ITypeLibImporterNotifySink notifySink, byte[] publicKey, System.Reflection.StrongNameKeyPair keyPair, string asmNamespace, Version asmVersion);
    parameters:
    - id: typeLib
      type: System.Object
      description: The object that implements the `ITypeLib` interface.
    - id: asmFileName
      type: System.String
      description: The file name of the resulting assembly.
    - id: flags
      type: System.Runtime.InteropServices.TypeLibImporterFlags
      description: A <xref href="System.Runtime.InteropServices.TypeLibImporterFlags"></xref> value indicating any special settings.
    - id: notifySink
      type: System.Runtime.InteropServices.ITypeLibImporterNotifySink
      description: <xref href="System.Runtime.InteropServices.ITypeLibImporterNotifySink"></xref> interface implemented by the caller.
    - id: publicKey
      type: System.Byte[]
      description: A `byte` array containing the public key.
    - id: keyPair
      type: System.Reflection.StrongNameKeyPair
      description: A <xref href="System.Reflection.StrongNameKeyPair"></xref> object containing the public and private cryptographic key pair.
    - id: asmNamespace
      type: System.String
      description: The namespace for the resulting assembly.
    - id: asmVersion
      type: System.Version
      description: The version of the resulting assembly. If `null`, the version of the type library is used.
    return:
      type: System.Reflection.Emit.AssemblyBuilder
      description: An <xref href="System.Reflection.Emit.AssemblyBuilder"></xref> object containing the converted type library.
  overload: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>typeLib</code> is `null`.  \n  \n -or-  \n  \n <code>asmFileName</code> is `null`.  \n  \n -or-  \n  \n <code>notifySink</code> is `null`."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asmFileName</code> is an empty string.  \n  \n -or-  \n  \n <code>asmFileName</code> is longer than MAX_PATH."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>flags</code> is not <xref href=\"System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly\"></xref>.  \n  \n -or-  \n  \n <code>publicKey</code> and <code>keyPair</code> are `null`."
  - type: System.Reflection.ReflectionTypeLoadException
    commentId: T:System.Reflection.ReflectionTypeLoadException
    description: The metadata produced has errors preventing any types from loading.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/TypeLibConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)
  commentId: M:System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)
  id: GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)
  parent: System.Runtime.InteropServices.TypeLibConverter
  langs:
  - csharp
  name: GetPrimaryInteropAssembly(Guid, Int32, Int32, Int32, String, String)
  nameWithType: TypeLibConverter.GetPrimaryInteropAssembly(Guid, Int32, Int32, Int32, String, String)
  fullName: TypeLibConverter.GetPrimaryInteropAssembly(Guid, Int32, Int32, Int32, String, String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Gets the name and code base of a primary interop assembly for a specified type library.
  syntax:
    content: public bool GetPrimaryInteropAssembly (Guid g, int major, int minor, int lcid, out string asmName, out string asmCodeBase);
    parameters:
    - id: g
      type: System.Guid
      description: The GUID of the type library.
    - id: major
      type: System.Int32
      description: The major version number of the type library.
    - id: minor
      type: System.Int32
      description: The minor version number of the type library.
    - id: lcid
      type: System.Int32
      description: The LCID of the type library.
    - id: asmName
      type: System.String
      description: On successful return, the name of the primary interop assembly associated with <code>g</code>.
    - id: asmCodeBase
      type: System.String
      description: On successful return, the code base of the primary interop assembly associated with <code>g</code>.
    return:
      type: System.Boolean
      description: '`true` if the primary interop assembly was found in the registry; otherwise `false`.'
  overload: System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/TypeLibConverter.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Reflection.ReflectionTypeLoadException
  parent: System.Reflection
  isExternal: false
  name: ReflectionTypeLoadException
  nameWithType: ReflectionTypeLoadException
  fullName: System.Reflection.ReflectionTypeLoadException
- uid: System.Runtime.InteropServices.TypeLibConverter.#ctor
  parent: System.Runtime.InteropServices.TypeLibConverter
  isExternal: false
  name: TypeLibConverter()
  nameWithType: TypeLibConverter.TypeLibConverter()
  fullName: TypeLibConverter.TypeLibConverter()
- uid: System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)
  parent: System.Runtime.InteropServices.TypeLibConverter
  isExternal: false
  name: ConvertAssemblyToTypeLib(Assembly, String, TypeLibExporterFlags, ITypeLibExporterNotifySink)
  nameWithType: TypeLibConverter.ConvertAssemblyToTypeLib(Assembly, String, TypeLibExporterFlags, ITypeLibExporterNotifySink)
  fullName: TypeLibConverter.ConvertAssemblyToTypeLib(Assembly, String, TypeLibExporterFlags, ITypeLibExporterNotifySink)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices.TypeLibExporterFlags
  parent: System.Runtime.InteropServices
  isExternal: false
  name: TypeLibExporterFlags
  nameWithType: TypeLibExporterFlags
  fullName: System.Runtime.InteropServices.TypeLibExporterFlags
- uid: System.Runtime.InteropServices.ITypeLibExporterNotifySink
  parent: System.Runtime.InteropServices
  isExternal: false
  name: ITypeLibExporterNotifySink
  nameWithType: ITypeLibExporterNotifySink
  fullName: System.Runtime.InteropServices.ITypeLibExporterNotifySink
- uid: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)
  parent: System.Runtime.InteropServices.TypeLibConverter
  isExternal: false
  name: ConvertTypeLibToAssembly(Object, String, Int32, ITypeLibImporterNotifySink, Byte[], StrongNameKeyPair, Boolean)
  nameWithType: TypeLibConverter.ConvertTypeLibToAssembly(Object, String, Int32, ITypeLibImporterNotifySink, Byte[], StrongNameKeyPair, Boolean)
  fullName: TypeLibConverter.ConvertTypeLibToAssembly(Object, String, Int32, ITypeLibImporterNotifySink, Byte[], StrongNameKeyPair, Boolean)
- uid: System.Reflection.Emit.AssemblyBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: AssemblyBuilder
  nameWithType: AssemblyBuilder
  fullName: System.Reflection.Emit.AssemblyBuilder
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices.ITypeLibImporterNotifySink
  parent: System.Runtime.InteropServices
  isExternal: false
  name: ITypeLibImporterNotifySink
  nameWithType: ITypeLibImporterNotifySink
  fullName: System.Runtime.InteropServices.ITypeLibImporterNotifySink
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.StrongNameKeyPair
  parent: System.Reflection
  isExternal: false
  name: StrongNameKeyPair
  nameWithType: StrongNameKeyPair
  fullName: System.Reflection.StrongNameKeyPair
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)
  parent: System.Runtime.InteropServices.TypeLibConverter
  isExternal: false
  name: ConvertTypeLibToAssembly(Object, String, TypeLibImporterFlags, ITypeLibImporterNotifySink, Byte[], StrongNameKeyPair, String, Version)
  nameWithType: TypeLibConverter.ConvertTypeLibToAssembly(Object, String, TypeLibImporterFlags, ITypeLibImporterNotifySink, Byte[], StrongNameKeyPair, String, Version)
  fullName: TypeLibConverter.ConvertTypeLibToAssembly(Object, String, TypeLibImporterFlags, ITypeLibImporterNotifySink, Byte[], StrongNameKeyPair, String, Version)
- uid: System.Runtime.InteropServices.TypeLibImporterFlags
  parent: System.Runtime.InteropServices
  isExternal: false
  name: TypeLibImporterFlags
  nameWithType: TypeLibImporterFlags
  fullName: System.Runtime.InteropServices.TypeLibImporterFlags
- uid: System.Version
  parent: System
  isExternal: false
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)
  parent: System.Runtime.InteropServices.TypeLibConverter
  isExternal: false
  name: GetPrimaryInteropAssembly(Guid, Int32, Int32, Int32, String, String)
  nameWithType: TypeLibConverter.GetPrimaryInteropAssembly(Guid, Int32, Int32, Int32, String, String)
  fullName: TypeLibConverter.GetPrimaryInteropAssembly(Guid, Int32, Int32, Int32, String, String)
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Runtime.InteropServices.TypeLibConverter.#ctor*
  parent: System.Runtime.InteropServices.TypeLibConverter
  isExternal: false
  name: TypeLibConverter
  nameWithType: TypeLibConverter.TypeLibConverter
  fullName: TypeLibConverter.TypeLibConverter
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/TypeLibConverter.xml
- uid: System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib*
  parent: System.Runtime.InteropServices.TypeLibConverter
  isExternal: false
  name: ConvertAssemblyToTypeLib
  nameWithType: TypeLibConverter.ConvertAssemblyToTypeLib
  fullName: TypeLibConverter.ConvertAssemblyToTypeLib
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/TypeLibConverter.xml
- uid: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly*
  parent: System.Runtime.InteropServices.TypeLibConverter
  isExternal: false
  name: ConvertTypeLibToAssembly
  nameWithType: TypeLibConverter.ConvertTypeLibToAssembly
  fullName: TypeLibConverter.ConvertTypeLibToAssembly
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/TypeLibConverter.xml
- uid: System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly*
  parent: System.Runtime.InteropServices.TypeLibConverter
  isExternal: false
  name: GetPrimaryInteropAssembly
  nameWithType: TypeLibConverter.GetPrimaryInteropAssembly
  fullName: TypeLibConverter.GetPrimaryInteropAssembly
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/TypeLibConverter.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Runtime.InteropServices.ITypeLibConverter
  parent: System.Runtime.InteropServices
  isExternal: false
  name: ITypeLibConverter
  nameWithType: ITypeLibConverter
  fullName: System.Runtime.InteropServices.ITypeLibConverter
