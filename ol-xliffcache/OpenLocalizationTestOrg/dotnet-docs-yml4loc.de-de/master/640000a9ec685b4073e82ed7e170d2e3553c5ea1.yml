### YamlMime:ManagedReference
items:
- uid: System.Globalization.CultureNotFoundException
  commentId: T:System.Globalization.CultureNotFoundException
  id: CultureNotFoundException
  children:
  - System.Globalization.CultureNotFoundException.#ctor
  - System.Globalization.CultureNotFoundException.#ctor(System.String)
  - System.Globalization.CultureNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Globalization.CultureNotFoundException.#ctor(System.String,System.Exception)
  - System.Globalization.CultureNotFoundException.#ctor(System.String,System.String)
  - System.Globalization.CultureNotFoundException.#ctor(System.String,System.Int32,System.Exception)
  - System.Globalization.CultureNotFoundException.#ctor(System.String,System.Int32,System.String)
  - System.Globalization.CultureNotFoundException.#ctor(System.String,System.String,System.Exception)
  - System.Globalization.CultureNotFoundException.#ctor(System.String,System.String,System.String)
  - System.Globalization.CultureNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Globalization.CultureNotFoundException.InvalidCultureId
  - System.Globalization.CultureNotFoundException.InvalidCultureName
  - System.Globalization.CultureNotFoundException.Message
  langs:
  - csharp
  name: CultureNotFoundException
  nameWithType: CultureNotFoundException
  fullName: System.Globalization.CultureNotFoundException
  type: Class
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: The exception that is thrown when a method attempts to construct a culture that is not available.
  remarks: "A <xref:System.Globalization.CultureNotFoundException> exception is thrown whenever the construction of an invalid culture is eventually attempted within a method. Most commonly, this exception is thrown when a call to one of the following methods fails to create or return a culture:  \n  \n-   <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=fullName> constructors.  \n  \n-   The <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=fullName> method.  \n  \n-   The <xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=fullName> method.  \n  \n> [!WARNING]\n>  On Windows 7 and later operating systems, the .NET Framework retrieves culture data from the operating system. The <xref:System.Globalization.CultureNotFoundException> exception is thrown if the operating system is unable to find the culture, and the culture is not a custom culture or a replacement culture.  \n  \n If the calling code attempted to instantiate a <xref:System.Globalization.CultureInfo> object by using a culture name, the <xref:System.Globalization.CultureNotFoundException.InvalidCultureName%2A> property contains the invalid name, and the <xref:System.Nullable%601.HasValue%2A> property of the <xref:System.Nullable%601> object returned by the <xref:System.Globalization.CultureNotFoundException.InvalidCultureId%2A> property is `false`. If the calling code attempted to instantiate a <xref:System.Globalization.CultureInfo> object by using a culture identifier, the <xref:System.Nullable%601.Value%2A> property of the <xref:System.Nullable%601> object returned by the <xref:System.Globalization.CultureNotFoundException.InvalidCultureId%2A> property contains the invalid identifier, and the value of the <xref:System.Globalization.CultureNotFoundException.InvalidCultureName%2A> property is `null`.  \n  \n <xref:System.Globalization.CultureNotFoundException> uses the HRESULT COR_E_ARGUMENT, which has the value 0x80070057."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class CultureNotFoundException : ArgumentException
  inheritance:
  - System.Object
  - System.Exception
  - System.ArgumentException
  implements: []
  inheritedMembers:
  - System.ArgumentException.ParamName
  - System.Exception.Data
  - System.Exception.GetBaseException
  - System.Exception.GetType
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.SerializeObjectState
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureNotFoundException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.CultureNotFoundException.#ctor
  commentId: M:System.Globalization.CultureNotFoundException.#ctor
  id: '#ctor'
  parent: System.Globalization.CultureNotFoundException
  langs:
  - csharp
  name: CultureNotFoundException()
  nameWithType: CultureNotFoundException.CultureNotFoundException()
  fullName: CultureNotFoundException.CultureNotFoundException()
  type: Constructor
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Initializes a new instance of the <xref href="System.Globalization.CultureNotFoundException"></xref> class with its message string set to a system-supplied message.
  remarks: <xref:System.Globalization.CultureNotFoundException> uses the HRESULT COR_E_ARGUMENT, which has the value 0x80070057.
  syntax:
    content: public CultureNotFoundException ();
    parameters: []
  overload: System.Globalization.CultureNotFoundException.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureNotFoundException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.CultureNotFoundException.#ctor(System.String)
  commentId: M:System.Globalization.CultureNotFoundException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Globalization.CultureNotFoundException
  langs:
  - csharp
  name: CultureNotFoundException(String)
  nameWithType: CultureNotFoundException.CultureNotFoundException(String)
  fullName: CultureNotFoundException.CultureNotFoundException(String)
  type: Constructor
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Initializes a new instance of the <xref href="System.Globalization.CultureNotFoundException"></xref> class with the specified error message.
  remarks: "This constructor initializes the <xref:System.Globalization.CultureNotFoundException.Message%2A> property of the new instance using the value of the `message` parameter. The content of the `message` parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \n  \n <xref:System.Globalization.CultureNotFoundException> uses the HRESULT COR_E_ARGUMENT, which has the value 0x80070057."
  syntax:
    content: public CultureNotFoundException (string message);
    parameters:
    - id: message
      type: System.String
      description: The error message to display with this exception.
  overload: System.Globalization.CultureNotFoundException.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureNotFoundException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.CultureNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Globalization.CultureNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Globalization.CultureNotFoundException
  langs:
  - csharp
  name: CultureNotFoundException(SerializationInfo, StreamingContext)
  nameWithType: CultureNotFoundException.CultureNotFoundException(SerializationInfo, StreamingContext)
  fullName: CultureNotFoundException.CultureNotFoundException(SerializationInfo, StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Initializes a new instance of the <xref href="System.Globalization.CultureNotFoundException"></xref> class using the specified serialization data and context.
  remarks: This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.
  syntax:
    content: protected CultureNotFoundException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The object that holds the serialized object data.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The contextual information about the source or destination.
  overload: System.Globalization.CultureNotFoundException.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureNotFoundException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.CultureNotFoundException.#ctor(System.String,System.Exception)
  commentId: M:System.Globalization.CultureNotFoundException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Globalization.CultureNotFoundException
  langs:
  - csharp
  name: CultureNotFoundException(String, Exception)
  nameWithType: CultureNotFoundException.CultureNotFoundException(String, Exception)
  fullName: CultureNotFoundException.CultureNotFoundException(String, Exception)
  type: Constructor
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Initializes a new instance of the <xref href="System.Globalization.CultureNotFoundException"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.
  remarks: "This constructor initializes the <xref:System.Globalization.CultureNotFoundException.Message%2A> property of the new instance using the value of the `message` parameter. The content of the `message` parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \n  \n An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor."
  syntax:
    content: public CultureNotFoundException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: The error message to display with this exception.
    - id: innerException
      type: System.Exception
      description: The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not a null reference, the current exception is raised in a `catch` block that handles the inner exception.
  overload: System.Globalization.CultureNotFoundException.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureNotFoundException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.CultureNotFoundException.#ctor(System.String,System.String)
  commentId: M:System.Globalization.CultureNotFoundException.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Globalization.CultureNotFoundException
  langs:
  - csharp
  name: CultureNotFoundException(String, String)
  nameWithType: CultureNotFoundException.CultureNotFoundException(String, String)
  fullName: CultureNotFoundException.CultureNotFoundException(String, String)
  type: Constructor
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Initializes a new instance of the <xref href="System.Globalization.CultureNotFoundException"></xref> class with a specified error message and the name of the parameter that is the cause this exception.
  remarks: "This constructor initializes the <xref:System.Globalization.CultureNotFoundException.Message%2A> property of the new instance using the value of the `message` parameter. The content of the `message` parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \n  \n This constructor initializes the <xref:System.ArgumentException.ParamName%2A> property of the new instance using `paramName`. The content of `paramName` is intended to be understood by humans.  \n  \n <xref:System.Globalization.CultureNotFoundException> uses the HRESULT COR_E_ARGUMENT, which has the value 0x80070057."
  syntax:
    content: public CultureNotFoundException (string paramName, string message);
    parameters:
    - id: paramName
      type: System.String
      description: The name of the parameter that is the cause of the current exception.
    - id: message
      type: System.String
      description: The error message to display with this exception.
  overload: System.Globalization.CultureNotFoundException.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureNotFoundException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.CultureNotFoundException.#ctor(System.String,System.Int32,System.Exception)
  commentId: M:System.Globalization.CultureNotFoundException.#ctor(System.String,System.Int32,System.Exception)
  id: '#ctor(System.String,System.Int32,System.Exception)'
  parent: System.Globalization.CultureNotFoundException
  langs:
  - csharp
  name: CultureNotFoundException(String, Int32, Exception)
  nameWithType: CultureNotFoundException.CultureNotFoundException(String, Int32, Exception)
  fullName: CultureNotFoundException.CultureNotFoundException(String, Int32, Exception)
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Initializes a new instance of the <xref href="System.Globalization.CultureNotFoundException"></xref> class with a specified error message, the invalid Culture ID, and a reference to the inner exception that is the cause of this exception.
  remarks: "This constructor initializes the <xref:System.Globalization.CultureNotFoundException.Message%2A> property of the new instance using the value of the `message` parameter. The content of the `message` parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \n  \n <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor."
  syntax:
    content: public CultureNotFoundException (string message, int invalidCultureId, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: The error message to display with this exception.
    - id: invalidCultureId
      type: System.Int32
      description: The Culture ID that cannot be found.
    - id: innerException
      type: System.Exception
      description: The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not a null reference, the current exception is raised in a `catch` block that handles the inner exception.
  overload: System.Globalization.CultureNotFoundException.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureNotFoundException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.CultureNotFoundException.#ctor(System.String,System.Int32,System.String)
  commentId: M:System.Globalization.CultureNotFoundException.#ctor(System.String,System.Int32,System.String)
  id: '#ctor(System.String,System.Int32,System.String)'
  parent: System.Globalization.CultureNotFoundException
  langs:
  - csharp
  name: CultureNotFoundException(String, Int32, String)
  nameWithType: CultureNotFoundException.CultureNotFoundException(String, Int32, String)
  fullName: CultureNotFoundException.CultureNotFoundException(String, Int32, String)
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Initializes a new instance of the <xref href="System.Globalization.CultureNotFoundException"></xref> class with a specified error message, the invalid Culture ID, and the name of the parameter that is the cause this exception.
  remarks: "This constructor initializes the <xref:System.Globalization.CultureNotFoundException.Message%2A> property of the new instance using the value of the `message` parameter. The content of the `message` parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \n  \n This constructor initializes the <xref:System.ArgumentException.ParamName%2A> property of the new instance using `paramName`. The content of `paramName` is intended to be understood by humans.  \n  \n <xref:System.Globalization.CultureNotFoundException> uses the HRESULT COR_E_ARGUMENT, which has the value 0x80070057."
  syntax:
    content: public CultureNotFoundException (string paramName, int invalidCultureId, string message);
    parameters:
    - id: paramName
      type: System.String
      description: The name of the parameter that is the cause the current exception.
    - id: invalidCultureId
      type: System.Int32
      description: The Culture ID that cannot be found.
    - id: message
      type: System.String
      description: The error message to display with this exception.
  overload: System.Globalization.CultureNotFoundException.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureNotFoundException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.CultureNotFoundException.#ctor(System.String,System.String,System.Exception)
  commentId: M:System.Globalization.CultureNotFoundException.#ctor(System.String,System.String,System.Exception)
  id: '#ctor(System.String,System.String,System.Exception)'
  parent: System.Globalization.CultureNotFoundException
  langs:
  - csharp
  name: CultureNotFoundException(String, String, Exception)
  nameWithType: CultureNotFoundException.CultureNotFoundException(String, String, Exception)
  fullName: CultureNotFoundException.CultureNotFoundException(String, String, Exception)
  type: Constructor
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Initializes a new instance of the <xref href="System.Globalization.CultureNotFoundException"></xref> class with a specified error message, the invalid Culture Name, and a reference to the inner exception that is the cause of this exception.
  remarks: "This constructor initializes the <xref:System.Globalization.CultureNotFoundException.Message%2A> property of the new instance using the value of the `message` parameter. The content of the `message` parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \n  \n <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor."
  syntax:
    content: public CultureNotFoundException (string message, string invalidCultureName, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: The error message to display with this exception.
    - id: invalidCultureName
      type: System.String
      description: The Culture Name that cannot be found.
    - id: innerException
      type: System.Exception
      description: The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not a null reference, the current exception is raised in a `catch` block that handles the inner exception.
  overload: System.Globalization.CultureNotFoundException.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureNotFoundException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.CultureNotFoundException.#ctor(System.String,System.String,System.String)
  commentId: M:System.Globalization.CultureNotFoundException.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Globalization.CultureNotFoundException
  langs:
  - csharp
  name: CultureNotFoundException(String, String, String)
  nameWithType: CultureNotFoundException.CultureNotFoundException(String, String, String)
  fullName: CultureNotFoundException.CultureNotFoundException(String, String, String)
  type: Constructor
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Initializes a new instance of the <xref href="System.Globalization.CultureNotFoundException"></xref> class with a specified error message, the invalid Culture Name, and the name of the parameter that is the cause this exception.
  remarks: "This constructor initializes the <xref:System.Globalization.CultureNotFoundException.Message%2A> property of the new instance using the value of the `message` parameter. The content of the `message` parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \n  \n This constructor initializes the <xref:System.ArgumentException.ParamName%2A> property of the new instance using `paramName`. The content of `paramName` is intended to be understood by humans.  \n  \n <xref:System.Globalization.CultureNotFoundException> uses the HRESULT COR_E_ARGUMENT, which has the value 0x80070057."
  syntax:
    content: public CultureNotFoundException (string paramName, string invalidCultureName, string message);
    parameters:
    - id: paramName
      type: System.String
      description: The name of the parameter that is the cause the current exception.
    - id: invalidCultureName
      type: System.String
      description: The Culture Name that cannot be found.
    - id: message
      type: System.String
      description: The error message to display with this exception.
  overload: System.Globalization.CultureNotFoundException.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureNotFoundException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.CultureNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Globalization.CultureNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Globalization.CultureNotFoundException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: CultureNotFoundException.GetObjectData(SerializationInfo, StreamingContext)
  fullName: CultureNotFoundException.GetObjectData(SerializationInfo, StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Sets the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> object with the parameter name and additional exception information.
  remarks: "<xref:System.Globalization.CultureNotFoundException.GetObjectData%2A> sets a <xref:System.Runtime.Serialization.SerializationInfo> with all the exception object data targeted for serialization. During deserialization, the exception object is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.  \n  \n For more information, see <xref:System.Runtime.Serialization.SerializationInfo>."
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The object that holds the serialized object data.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The contextual information about the source or destination.
  overload: System.Globalization.CultureNotFoundException.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>info</code> is `null`.
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureNotFoundException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.CultureNotFoundException.InvalidCultureId
  commentId: P:System.Globalization.CultureNotFoundException.InvalidCultureId
  id: InvalidCultureId
  parent: System.Globalization.CultureNotFoundException
  langs:
  - csharp
  name: InvalidCultureId
  nameWithType: CultureNotFoundException.InvalidCultureId
  fullName: CultureNotFoundException.InvalidCultureId
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets the culture identifier that cannot be found.
  remarks: If the calling code attempted to instantiate or retrieve a <xref:System.Globalization.CultureInfo> object by using an invalid culture identifier, the <xref:System.Nullable%601.Value%2A> property of the <xref:System.Nullable%601> object returned by the <xref:System.Globalization.CultureNotFoundException.InvalidCultureId%2A> property contains the invalid identifier. Otherwise, its <xref:System.Nullable%601.HasValue%2A> property is `false`.
  syntax:
    content: public virtual Nullable<int> InvalidCultureId { get; }
    return:
      type: System.Nullable{System.Int32}
      description: The invalid culture identifier.
  overload: System.Globalization.CultureNotFoundException.InvalidCultureId*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureNotFoundException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.CultureNotFoundException.InvalidCultureName
  commentId: P:System.Globalization.CultureNotFoundException.InvalidCultureName
  id: InvalidCultureName
  parent: System.Globalization.CultureNotFoundException
  langs:
  - csharp
  name: InvalidCultureName
  nameWithType: CultureNotFoundException.InvalidCultureName
  fullName: CultureNotFoundException.InvalidCultureName
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets the culture name that cannot be found.
  remarks: If the calling code attempted to instantiate a <xref:System.Globalization.CultureInfo> object by using a culture name, the <xref:System.Globalization.CultureNotFoundException.InvalidCultureName%2A> property contains the invalid name. Otherwise, its value is `null`.
  syntax:
    content: public virtual string InvalidCultureName { get; }
    return:
      type: System.String
      description: The invalid culture name.
  overload: System.Globalization.CultureNotFoundException.InvalidCultureName*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureNotFoundException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.CultureNotFoundException.Message
  commentId: P:System.Globalization.CultureNotFoundException.Message
  id: Message
  parent: System.Globalization.CultureNotFoundException
  langs:
  - csharp
  name: Message
  nameWithType: CultureNotFoundException.Message
  fullName: CultureNotFoundException.Message
  type: Property
  assemblies:
  - System.Globalization
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets the error message that explains the reason for the exception.
  syntax:
    content: public override string Message { get; }
    return:
      type: System.String
      description: A text string describing the details of the exception.
  overload: System.Globalization.CultureNotFoundException.Message*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureNotFoundException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Globalization.CultureNotFoundException.#ctor
  parent: System.Globalization.CultureNotFoundException
  isExternal: false
  name: CultureNotFoundException()
  nameWithType: CultureNotFoundException.CultureNotFoundException()
  fullName: CultureNotFoundException.CultureNotFoundException()
- uid: System.Globalization.CultureNotFoundException.#ctor(System.String)
  parent: System.Globalization.CultureNotFoundException
  isExternal: false
  name: CultureNotFoundException(String)
  nameWithType: CultureNotFoundException.CultureNotFoundException(String)
  fullName: CultureNotFoundException.CultureNotFoundException(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Globalization.CultureNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Globalization.CultureNotFoundException
  isExternal: false
  name: CultureNotFoundException(SerializationInfo, StreamingContext)
  nameWithType: CultureNotFoundException.CultureNotFoundException(SerializationInfo, StreamingContext)
  fullName: CultureNotFoundException.CultureNotFoundException(SerializationInfo, StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Globalization.CultureNotFoundException.#ctor(System.String,System.Exception)
  parent: System.Globalization.CultureNotFoundException
  isExternal: false
  name: CultureNotFoundException(String, Exception)
  nameWithType: CultureNotFoundException.CultureNotFoundException(String, Exception)
  fullName: CultureNotFoundException.CultureNotFoundException(String, Exception)
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Globalization.CultureNotFoundException.#ctor(System.String,System.String)
  parent: System.Globalization.CultureNotFoundException
  isExternal: false
  name: CultureNotFoundException(String, String)
  nameWithType: CultureNotFoundException.CultureNotFoundException(String, String)
  fullName: CultureNotFoundException.CultureNotFoundException(String, String)
- uid: System.Globalization.CultureNotFoundException.#ctor(System.String,System.Int32,System.Exception)
  parent: System.Globalization.CultureNotFoundException
  isExternal: false
  name: CultureNotFoundException(String, Int32, Exception)
  nameWithType: CultureNotFoundException.CultureNotFoundException(String, Int32, Exception)
  fullName: CultureNotFoundException.CultureNotFoundException(String, Int32, Exception)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.CultureNotFoundException.#ctor(System.String,System.Int32,System.String)
  parent: System.Globalization.CultureNotFoundException
  isExternal: false
  name: CultureNotFoundException(String, Int32, String)
  nameWithType: CultureNotFoundException.CultureNotFoundException(String, Int32, String)
  fullName: CultureNotFoundException.CultureNotFoundException(String, Int32, String)
- uid: System.Globalization.CultureNotFoundException.#ctor(System.String,System.String,System.Exception)
  parent: System.Globalization.CultureNotFoundException
  isExternal: false
  name: CultureNotFoundException(String, String, Exception)
  nameWithType: CultureNotFoundException.CultureNotFoundException(String, String, Exception)
  fullName: CultureNotFoundException.CultureNotFoundException(String, String, Exception)
- uid: System.Globalization.CultureNotFoundException.#ctor(System.String,System.String,System.String)
  parent: System.Globalization.CultureNotFoundException
  isExternal: false
  name: CultureNotFoundException(String, String, String)
  nameWithType: CultureNotFoundException.CultureNotFoundException(String, String, String)
  fullName: CultureNotFoundException.CultureNotFoundException(String, String, String)
- uid: System.Globalization.CultureNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Globalization.CultureNotFoundException
  isExternal: false
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: CultureNotFoundException.GetObjectData(SerializationInfo, StreamingContext)
  fullName: CultureNotFoundException.GetObjectData(SerializationInfo, StreamingContext)
- uid: System.Globalization.CultureNotFoundException.InvalidCultureId
  parent: System.Globalization.CultureNotFoundException
  isExternal: false
  name: InvalidCultureId
  nameWithType: CultureNotFoundException.InvalidCultureId
  fullName: CultureNotFoundException.InvalidCultureId
- uid: System.Nullable`1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
- uid: System.Nullable{System.Int32}
  parent: System
  isExternal: false
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Globalization.CultureNotFoundException.InvalidCultureName
  parent: System.Globalization.CultureNotFoundException
  isExternal: false
  name: InvalidCultureName
  nameWithType: CultureNotFoundException.InvalidCultureName
  fullName: CultureNotFoundException.InvalidCultureName
- uid: System.Globalization.CultureNotFoundException.Message
  parent: System.Globalization.CultureNotFoundException
  isExternal: false
  name: Message
  nameWithType: CultureNotFoundException.Message
  fullName: CultureNotFoundException.Message
- uid: System.Globalization.CultureNotFoundException.#ctor*
  parent: System.Globalization.CultureNotFoundException
  isExternal: false
  name: CultureNotFoundException
  nameWithType: CultureNotFoundException.CultureNotFoundException
  fullName: CultureNotFoundException.CultureNotFoundException
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureNotFoundException.xml
- uid: System.Globalization.CultureNotFoundException.GetObjectData*
  parent: System.Globalization.CultureNotFoundException
  isExternal: false
  name: GetObjectData
  nameWithType: CultureNotFoundException.GetObjectData
  fullName: CultureNotFoundException.GetObjectData
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureNotFoundException.xml
- uid: System.Globalization.CultureNotFoundException.InvalidCultureId*
  parent: System.Globalization.CultureNotFoundException
  isExternal: false
  name: InvalidCultureId
  nameWithType: CultureNotFoundException.InvalidCultureId
  fullName: CultureNotFoundException.InvalidCultureId
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureNotFoundException.xml
- uid: System.Globalization.CultureNotFoundException.InvalidCultureName*
  parent: System.Globalization.CultureNotFoundException
  isExternal: false
  name: InvalidCultureName
  nameWithType: CultureNotFoundException.InvalidCultureName
  fullName: CultureNotFoundException.InvalidCultureName
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureNotFoundException.xml
- uid: System.Globalization.CultureNotFoundException.Message*
  parent: System.Globalization.CultureNotFoundException
  isExternal: false
  name: Message
  nameWithType: CultureNotFoundException.Message
  fullName: CultureNotFoundException.Message
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/CultureNotFoundException.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Exception.GetType
  parent: System.Exception
  isExternal: false
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: Exception.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Exception.ToString
  parent: System.Exception
  isExternal: false
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: Exception.ToString()
- uid: System.Exception.Data
  parent: System.Exception
  isExternal: false
  name: Data
  nameWithType: Exception.Data
  fullName: Exception.Data
- uid: System.Exception.GetBaseException
  parent: System.Exception
  isExternal: false
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: Exception.GetBaseException()
- uid: System.Exception.HelpLink
  parent: System.Exception
  isExternal: false
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: Exception.HelpLink
- uid: System.Exception.HResult
  parent: System.Exception
  isExternal: false
  name: HResult
  nameWithType: Exception.HResult
  fullName: Exception.HResult
- uid: System.Exception.InnerException
  parent: System.Exception
  isExternal: false
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: Exception.InnerException
- uid: System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: false
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: Exception.SerializeObjectState
- uid: System.Exception.Source
  parent: System.Exception
  isExternal: false
  name: Source
  nameWithType: Exception.Source
  fullName: Exception.Source
- uid: System.Exception.StackTrace
  parent: System.Exception
  isExternal: false
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: Exception.StackTrace
- uid: System.Exception.TargetSite
  parent: System.Exception
  isExternal: false
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: Exception.TargetSite
- uid: System.ArgumentException.ParamName
  parent: System.ArgumentException
  isExternal: false
  name: ParamName
  nameWithType: ArgumentException.ParamName
  fullName: ArgumentException.ParamName
