{"nodes":[{"content":"Interface that can be implemented for providing accessing location data and receiving location updates.","nodes":[{"pos":[0,103],"content":"Interface that can be implemented for providing accessing location data and receiving location updates.","nodes":[{"content":"Interface that can be implemented for providing accessing location data and receiving location updates.","pos":[0,103]}]}],"pos":[945,1049],"yaml":true},{"content":"The <xref:System.Device.Location.GeoCoordinateWatcher> class implements <xref:System.Device.Location.IGeoPositionWatcher%601>, using <xref:System.Device.Location.GeoCoordinate> as the type parameter.","nodes":[{"pos":[0,199],"content":"The <xref:System.Device.Location.GeoCoordinateWatcher> class implements <xref:System.Device.Location.IGeoPositionWatcher%601>, using <xref:System.Device.Location.GeoCoordinate> as the type parameter.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Device.Location.GeoCoordinateWatcher&gt;</ph> class implements <ph id=\"ph2\">&lt;xref:System.Device.Location.IGeoPositionWatcher%601&gt;</ph>, using <ph id=\"ph3\">&lt;xref:System.Device.Location.GeoCoordinate&gt;</ph> as the type parameter.","pos":[0,199],"source":"The <xref:System.Device.Location.GeoCoordinateWatcher> class implements <xref:System.Device.Location.IGeoPositionWatcher%601>, using <xref:System.Device.Location.GeoCoordinate> as the type parameter."}]}],"pos":[1060,1260],"yaml":true,"extradata":"MT"},{"content":"The type of the object that contains the location data.","nodes":[{"pos":[0,55],"content":"The type of the object that contains the location data.","nodes":[{"content":"The type of the object that contains the location data.","pos":[0,55]}]}],"pos":[1374,1430],"yaml":true},{"content":"Gets the location data.","nodes":[{"pos":[0,23],"content":"Gets the location data.","nodes":[{"content":"Gets the location data.","pos":[0,23]}]}],"pos":[2443,2467],"yaml":true},{"content":"The <xref href=\"System.Device.Location.GeoPosition`1\"></xref> containing the location data.","nodes":[{"pos":[0,91],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.GeoPosition`1\"&gt;&lt;/xref&gt;</ph> containing the location data.","source":"The <xref href=\"System.Device.Location.GeoPosition`1\"></xref> containing the location data."}],"pos":[2633,2725],"yaml":true},{"content":"Occurs when the <xref href=\"System.Device.Location.IGeoPositionWatcher`1.Position\"></xref> property has changed.","nodes":[{"pos":[0,112],"content":"Occurs when the <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.IGeoPositionWatcher`1.Position\"&gt;&lt;/xref&gt;</ph> property has changed.","source":"Occurs when the <xref href=\"System.Device.Location.IGeoPositionWatcher`1.Position\"></xref> property has changed."}],"pos":[3778,3891],"yaml":true},{"content":"Initiate the acquisition of location data.","nodes":[{"pos":[0,42],"content":"Initiate the acquisition of location data.","nodes":[{"content":"Initiate the acquisition of location data.","pos":[0,42]}]}],"pos":[5066,5109],"yaml":true},{"content":"Start acquiring location data, specifying whether or not to suppress prompting for permissions. This method returns synchronously.","nodes":[{"pos":[0,130],"content":"Start acquiring location data, specifying whether or not to suppress prompting for permissions. This method returns synchronously.","nodes":[{"content":"Start acquiring location data, specifying whether or not to suppress prompting for permissions. This method returns synchronously.","pos":[0,130],"nodes":[{"content":"Start acquiring location data, specifying whether or not to suppress prompting for permissions.","pos":[0,95]},{"content":"This method returns synchronously.","pos":[96,130]}]}]}],"pos":[6239,6370],"yaml":true},{"content":"If `true`, do not prompt the user to enable location providers and only start if location data is already enabled.  \n  \n If `false`, a dialog box may be displayed to prompt the user to enable location sensors that are disabled.","nodes":[{"pos":[0,114],"content":"If <ph id=\"ph1\">`true`</ph>, do not prompt the user to enable location providers and only start if location data is already enabled.","source":"If `true`, do not prompt the user to enable location providers and only start if location data is already enabled."},{"pos":[121,227],"content":"If <ph id=\"ph1\">`false`</ph>, a dialog box may be displayed to prompt the user to enable location sensors that are disabled.","source":"If `false`, a dialog box may be displayed to prompt the user to enable location sensors that are disabled."}],"pos":[6541,6773],"yaml":true},{"content":"Gets the status of location data.","nodes":[{"pos":[0,33],"content":"Gets the status of location data.","nodes":[{"content":"Gets the status of location data.","pos":[0,33]}]}],"pos":[7772,7806],"yaml":true},{"content":"The status of location data.","nodes":[{"pos":[0,28],"content":"The status of location data.","nodes":[{"content":"The status of location data.","pos":[0,28]}]}],"pos":[7977,8006],"yaml":true},{"content":"Occurs when the <xref href=\"System.Device.Location.IGeoPositionWatcher`1.Status\"></xref> property changes.","nodes":[{"pos":[0,106],"content":"Occurs when the <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.IGeoPositionWatcher`1.Status\"&gt;&lt;/xref&gt;</ph> property changes.","source":"Occurs when the <xref href=\"System.Device.Location.IGeoPositionWatcher`1.Status\"></xref> property changes."}],"pos":[9045,9152],"yaml":true},{"content":"Stop acquiring location data.","nodes":[{"pos":[0,29],"content":"Stop acquiring location data.","nodes":[{"content":"Stop acquiring location data.","pos":[0,29]}]}],"pos":[10325,10355],"yaml":true},{"content":"Start acquiring location data, specifying an initialization timeout. This method returns synchronously.","nodes":[{"pos":[0,103],"content":"Start acquiring location data, specifying an initialization timeout. This method returns synchronously.","nodes":[{"content":"Start acquiring location data, specifying an initialization timeout. This method returns synchronously.","pos":[0,103],"nodes":[{"content":"Start acquiring location data, specifying an initialization timeout.","pos":[0,68]},{"content":"This method returns synchronously.","pos":[69,103]}]}]}],"pos":[11579,11683],"yaml":true},{"content":"If `true`, do not prompt the user to enable location providers and only start if location data is already enabled.  \n  \n If `false`, a dialog box may be displayed to prompt the user to enable location sensors that are disabled.","nodes":[{"pos":[0,114],"content":"If <ph id=\"ph1\">`true`</ph>, do not prompt the user to enable location providers and only start if location data is already enabled.","source":"If `true`, do not prompt the user to enable location providers and only start if location data is already enabled."},{"pos":[121,227],"content":"If <ph id=\"ph1\">`false`</ph>, a dialog box may be displayed to prompt the user to enable location sensors that are disabled.","source":"If `false`, a dialog box may be displayed to prompt the user to enable location sensors that are disabled."}],"pos":[11875,12107],"yaml":true},{"content":"Time in milliseconds to wait for initialization to complete.","nodes":[{"pos":[0,60],"content":"Time in milliseconds to wait for initialization to complete.","nodes":[{"content":"Time in milliseconds to wait for initialization to complete.","pos":[0,60]}]}],"pos":[12172,12233],"yaml":true},{"content":"`true` if succeeded, `false` if timed out.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">`true`</ph> if succeeded, <ph id=\"ph2\">`false`</ph> if timed out.","source":"`true` if succeeded, `false` if timed out."}],"pos":[12291,12336],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Device.Location.IGeoPositionWatcher`1\n  commentId: T:System.Device.Location.IGeoPositionWatcher`1\n  id: IGeoPositionWatcher`1\n  children:\n  - System.Device.Location.IGeoPositionWatcher`1.Position\n  - System.Device.Location.IGeoPositionWatcher`1.PositionChanged\n  - System.Device.Location.IGeoPositionWatcher`1.Start\n  - System.Device.Location.IGeoPositionWatcher`1.Start(System.Boolean)\n  - System.Device.Location.IGeoPositionWatcher`1.Status\n  - System.Device.Location.IGeoPositionWatcher`1.StatusChanged\n  - System.Device.Location.IGeoPositionWatcher`1.Stop\n  - System.Device.Location.IGeoPositionWatcher`1.TryStart(System.Boolean,System.TimeSpan)\n  langs:\n  - csharp\n  name: IGeoPositionWatcher<T>\n  nameWithType: IGeoPositionWatcher<T>\n  fullName: System.Device.Location.IGeoPositionWatcher<T>\n  type: Interface\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Interface that can be implemented for providing accessing location data and receiving location updates.\n  remarks: The <xref:System.Device.Location.GeoCoordinateWatcher> class implements <xref:System.Device.Location.IGeoPositionWatcher%601>, using <xref:System.Device.Location.GeoCoordinate> as the type parameter.\n  syntax:\n    content: public interface IGeoPositionWatcher<T>\n    typeParameters:\n    - id: T\n      description: The type of the object that contains the location data.\n  derivedClasses:\n  - System.Device.Location.GeoCoordinateWatcher\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/IGeoPositionWatcher`1.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.IGeoPositionWatcher`1.Position\n  commentId: P:System.Device.Location.IGeoPositionWatcher`1.Position\n  id: Position\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  langs:\n  - csharp\n  name: Position\n  nameWithType: IGeoPositionWatcher<T>.Position\n  fullName: IGeoPositionWatcher<T>.Position\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets the location data.\n  syntax:\n    content: public System.Device.Location.GeoPosition<T> Position { get; }\n    return:\n      type: System.Device.Location.GeoPosition`1\n      description: The <xref href=\"System.Device.Location.GeoPosition`1\"></xref> containing the location data.\n  overload: System.Device.Location.IGeoPositionWatcher`1.Position*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/IGeoPositionWatcher`1.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.IGeoPositionWatcher`1.PositionChanged\n  commentId: E:System.Device.Location.IGeoPositionWatcher`1.PositionChanged\n  id: PositionChanged\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  langs:\n  - csharp\n  name: PositionChanged\n  nameWithType: IGeoPositionWatcher<T>.PositionChanged\n  fullName: IGeoPositionWatcher<T>.PositionChanged\n  type: Event\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Occurs when the <xref href=\"System.Device.Location.IGeoPositionWatcher`1.Position\"></xref> property has changed.\n  syntax:\n    content: public event EventHandler<System.Device.Location.GeoPositionChangedEventArgs<T>> PositionChanged;\n    return:\n      type: System.EventHandler{System.Device.Location.GeoPositionChangedEventArgs{T}}\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/IGeoPositionWatcher`1.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.IGeoPositionWatcher`1.Start\n  commentId: M:System.Device.Location.IGeoPositionWatcher`1.Start\n  id: Start\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  langs:\n  - csharp\n  name: Start()\n  nameWithType: IGeoPositionWatcher<T>.Start()\n  fullName: IGeoPositionWatcher<T>.Start()\n  type: Method\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Initiate the acquisition of location data.\n  syntax:\n    content: public void Start ();\n    parameters: []\n  overload: System.Device.Location.IGeoPositionWatcher`1.Start*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/IGeoPositionWatcher`1.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.IGeoPositionWatcher`1.Start(System.Boolean)\n  commentId: M:System.Device.Location.IGeoPositionWatcher`1.Start(System.Boolean)\n  id: Start(System.Boolean)\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  langs:\n  - csharp\n  name: Start(Boolean)\n  nameWithType: IGeoPositionWatcher<T>.Start(Boolean)\n  fullName: IGeoPositionWatcher<T>.Start(Boolean)\n  type: Method\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Start acquiring location data, specifying whether or not to suppress prompting for permissions. This method returns synchronously.\n  syntax:\n    content: public void Start (bool suppressPermissionPrompt);\n    parameters:\n    - id: suppressPermissionPrompt\n      type: System.Boolean\n      description: \"If `true`, do not prompt the user to enable location providers and only start if location data is already enabled.  \\n  \\n If `false`, a dialog box may be displayed to prompt the user to enable location sensors that are disabled.\"\n  overload: System.Device.Location.IGeoPositionWatcher`1.Start*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/IGeoPositionWatcher`1.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.IGeoPositionWatcher`1.Status\n  commentId: P:System.Device.Location.IGeoPositionWatcher`1.Status\n  id: Status\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  langs:\n  - csharp\n  name: Status\n  nameWithType: IGeoPositionWatcher<T>.Status\n  fullName: IGeoPositionWatcher<T>.Status\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets the status of location data.\n  syntax:\n    content: public System.Device.Location.GeoPositionStatus Status { get; }\n    return:\n      type: System.Device.Location.GeoPositionStatus\n      description: The status of location data.\n  overload: System.Device.Location.IGeoPositionWatcher`1.Status*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/IGeoPositionWatcher`1.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.IGeoPositionWatcher`1.StatusChanged\n  commentId: E:System.Device.Location.IGeoPositionWatcher`1.StatusChanged\n  id: StatusChanged\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  langs:\n  - csharp\n  name: StatusChanged\n  nameWithType: IGeoPositionWatcher<T>.StatusChanged\n  fullName: IGeoPositionWatcher<T>.StatusChanged\n  type: Event\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Occurs when the <xref href=\"System.Device.Location.IGeoPositionWatcher`1.Status\"></xref> property changes.\n  syntax:\n    content: public event EventHandler<System.Device.Location.GeoPositionStatusChangedEventArgs> StatusChanged;\n    return:\n      type: System.EventHandler{System.Device.Location.GeoPositionStatusChangedEventArgs}\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/IGeoPositionWatcher`1.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.IGeoPositionWatcher`1.Stop\n  commentId: M:System.Device.Location.IGeoPositionWatcher`1.Stop\n  id: Stop\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  langs:\n  - csharp\n  name: Stop()\n  nameWithType: IGeoPositionWatcher<T>.Stop()\n  fullName: IGeoPositionWatcher<T>.Stop()\n  type: Method\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Stop acquiring location data.\n  syntax:\n    content: public void Stop ();\n    parameters: []\n  overload: System.Device.Location.IGeoPositionWatcher`1.Stop*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/IGeoPositionWatcher`1.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.IGeoPositionWatcher`1.TryStart(System.Boolean,System.TimeSpan)\n  commentId: M:System.Device.Location.IGeoPositionWatcher`1.TryStart(System.Boolean,System.TimeSpan)\n  id: TryStart(System.Boolean,System.TimeSpan)\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  langs:\n  - csharp\n  name: TryStart(Boolean, TimeSpan)\n  nameWithType: IGeoPositionWatcher<T>.TryStart(Boolean, TimeSpan)\n  fullName: IGeoPositionWatcher<T>.TryStart(Boolean, TimeSpan)\n  type: Method\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Start acquiring location data, specifying an initialization timeout. This method returns synchronously.\n  syntax:\n    content: public bool TryStart (bool suppressPermissionPrompt, TimeSpan timeout);\n    parameters:\n    - id: suppressPermissionPrompt\n      type: System.Boolean\n      description: \"If `true`, do not prompt the user to enable location providers and only start if location data is already enabled.  \\n  \\n If `false`, a dialog box may be displayed to prompt the user to enable location sensors that are disabled.\"\n    - id: timeout\n      type: System.TimeSpan\n      description: Time in milliseconds to wait for initialization to complete.\n    return:\n      type: System.Boolean\n      description: '`true` if succeeded, `false` if timed out.'\n  overload: System.Device.Location.IGeoPositionWatcher`1.TryStart*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/IGeoPositionWatcher`1.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\nreferences:\n- uid: System.Device.Location.IGeoPositionWatcher`1.Position\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  isExternal: false\n  name: Position\n  nameWithType: IGeoPositionWatcher<T>.Position\n  fullName: IGeoPositionWatcher<T>.Position\n- uid: System.Device.Location.GeoPosition`1\n  parent: System.Device.Location\n  isExternal: false\n  name: GeoPosition<T>\n  nameWithType: GeoPosition<T>\n  fullName: System.Device.Location.GeoPosition<T>\n- uid: System.Device.Location.IGeoPositionWatcher`1.PositionChanged\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  isExternal: false\n  name: PositionChanged\n  nameWithType: IGeoPositionWatcher<T>.PositionChanged\n  fullName: IGeoPositionWatcher<T>.PositionChanged\n- uid: System.EventHandler`1\n  name: EventHandler<TEventArgs>\n  nameWithType: EventHandler<TEventArgs>\n  fullName: System.EventHandler<TEventArgs>\n- uid: System.Device.Location.GeoPositionChangedEventArgs`1\n  name: GeoPositionChangedEventArgs<T>\n  nameWithType: GeoPositionChangedEventArgs<T>\n  fullName: System.Device.Location.GeoPositionChangedEventArgs<T>\n- uid: T\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.EventHandler{System.Device.Location.GeoPositionChangedEventArgs{T}}\n  parent: System\n  isExternal: false\n  name: EventHandler<GeoPositionChangedEventArgs<T>>\n  nameWithType: EventHandler<GeoPositionChangedEventArgs<T>>\n  fullName: System.EventHandler<System.Device.Location.GeoPositionChangedEventArgs<T>>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Device.Location.GeoPositionChangedEventArgs`1\n    name: GeoPositionChangedEventArgs\n    nameWithType: GeoPositionChangedEventArgs\n    fullName: System.Device.Location.GeoPositionChangedEventArgs\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Device.Location.IGeoPositionWatcher`1.Start\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  isExternal: false\n  name: Start()\n  nameWithType: IGeoPositionWatcher<T>.Start()\n  fullName: IGeoPositionWatcher<T>.Start()\n- uid: System.Device.Location.IGeoPositionWatcher`1.Start(System.Boolean)\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  isExternal: false\n  name: Start(Boolean)\n  nameWithType: IGeoPositionWatcher<T>.Start(Boolean)\n  fullName: IGeoPositionWatcher<T>.Start(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Device.Location.IGeoPositionWatcher`1.Status\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  isExternal: false\n  name: Status\n  nameWithType: IGeoPositionWatcher<T>.Status\n  fullName: IGeoPositionWatcher<T>.Status\n- uid: System.Device.Location.GeoPositionStatus\n  parent: System.Device.Location\n  isExternal: false\n  name: GeoPositionStatus\n  nameWithType: GeoPositionStatus\n  fullName: System.Device.Location.GeoPositionStatus\n- uid: System.Device.Location.IGeoPositionWatcher`1.StatusChanged\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  isExternal: false\n  name: StatusChanged\n  nameWithType: IGeoPositionWatcher<T>.StatusChanged\n  fullName: IGeoPositionWatcher<T>.StatusChanged\n- uid: System.Device.Location.GeoPositionStatusChangedEventArgs\n  name: GeoPositionStatusChangedEventArgs\n  nameWithType: GeoPositionStatusChangedEventArgs\n  fullName: System.Device.Location.GeoPositionStatusChangedEventArgs\n- uid: System.EventHandler{System.Device.Location.GeoPositionStatusChangedEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<GeoPositionStatusChangedEventArgs>\n  nameWithType: EventHandler<GeoPositionStatusChangedEventArgs>\n  fullName: System.EventHandler<System.Device.Location.GeoPositionStatusChangedEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Device.Location.GeoPositionStatusChangedEventArgs\n    name: GeoPositionStatusChangedEventArgs\n    nameWithType: GeoPositionStatusChangedEventArgs\n    fullName: System.Device.Location.GeoPositionStatusChangedEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Device.Location.IGeoPositionWatcher`1.Stop\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  isExternal: false\n  name: Stop()\n  nameWithType: IGeoPositionWatcher<T>.Stop()\n  fullName: IGeoPositionWatcher<T>.Stop()\n- uid: System.Device.Location.IGeoPositionWatcher`1.TryStart(System.Boolean,System.TimeSpan)\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  isExternal: false\n  name: TryStart(Boolean, TimeSpan)\n  nameWithType: IGeoPositionWatcher<T>.TryStart(Boolean, TimeSpan)\n  fullName: IGeoPositionWatcher<T>.TryStart(Boolean, TimeSpan)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Device.Location.IGeoPositionWatcher`1.Position*\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  isExternal: false\n  name: Position\n  nameWithType: IGeoPositionWatcher<T>.Position\n  fullName: IGeoPositionWatcher<T>.Position\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/IGeoPositionWatcher`1.xml\n- uid: System.Device.Location.IGeoPositionWatcher`1.Start*\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  isExternal: false\n  name: Start\n  nameWithType: IGeoPositionWatcher<T>.Start\n  fullName: IGeoPositionWatcher<T>.Start\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/IGeoPositionWatcher`1.xml\n- uid: System.Device.Location.IGeoPositionWatcher`1.Status*\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  isExternal: false\n  name: Status\n  nameWithType: IGeoPositionWatcher<T>.Status\n  fullName: IGeoPositionWatcher<T>.Status\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/IGeoPositionWatcher`1.xml\n- uid: System.Device.Location.IGeoPositionWatcher`1.Stop*\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  isExternal: false\n  name: Stop\n  nameWithType: IGeoPositionWatcher<T>.Stop\n  fullName: IGeoPositionWatcher<T>.Stop\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/IGeoPositionWatcher`1.xml\n- uid: System.Device.Location.IGeoPositionWatcher`1.TryStart*\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  isExternal: false\n  name: TryStart\n  nameWithType: IGeoPositionWatcher<T>.TryStart\n  fullName: IGeoPositionWatcher<T>.TryStart\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/IGeoPositionWatcher`1.xml\n"}