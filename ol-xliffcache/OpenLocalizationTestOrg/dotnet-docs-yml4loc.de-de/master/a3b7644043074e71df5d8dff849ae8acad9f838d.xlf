<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a3b7644043074e71df5d8dff849ae8acad9f838d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Printing.PrintQueueStream.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9a2a9984d85586a32515486e4968fe696a27adae</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f501d1a990d9e72e166e1a842da7f02f99a60a93</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>A stream that represents a spooled print job in a print queue.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this class to write device specific information to a spool file that is not automatically included by the <ph id="ph1">[!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)]</ph> spooler.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Of course, you need to know whether the spool file is <ph id="ph1">[!INCLUDE[TLA#tla_emf](~/includes/tlasharptla-emf-md.md)]</ph> or <ph id="ph2">[!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you prefer working with a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> array, you can also use two of the overloads of the <ph id="ph2">&lt;xref:System.Printing.PrintQueue.AddJob%2A&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Printing.PrintSystemJobInfo.JobStream%2A&gt;</ph> property to write to the spool file.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes within the <ph id="ph1">&lt;xref:System.Printing&gt;</ph> namespace are not supported for use within a Windows service or ASP.NET application or service.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to print from a Windows Forms application, see the <ph id="ph1">&lt;xref:System.Drawing.Printing&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Printing.PrintQueueStream"&gt;&lt;/xref&gt;</ph> class for the specified print job that is hosted in the specified <ph id="ph2">&lt;xref href="System.Printing.PrintQueue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Printing.PrintQueue"&gt;&lt;/xref&gt;</ph> that hosts the print job that provides the content of the stream.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The name of the print job that provides the content of the stream.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Printing.PrintQueueStream"&gt;&lt;/xref&gt;</ph> class for the specified print job that is hosted in the specified <ph id="ph2">&lt;xref href="System.Printing.PrintQueue"&gt;&lt;/xref&gt;</ph>, with an indication of whether data in the <ph id="ph3">&lt;xref href="System.Printing.PrintQueueStream"&gt;&lt;/xref&gt;</ph> should be committed when the stream is closed.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Printing.PrintQueue"&gt;&lt;/xref&gt;</ph> that hosts the print job that provides the content of the stream.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The name of the print job that provides the content of the stream.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to commit data in the <ph id="ph2">&lt;xref href="System.Printing.PrintQueueStream"&gt;&lt;/xref&gt;</ph> when the <ph id="ph3">&lt;xref href="System.Printing.PrintQueueStream.Close"&gt;&lt;/xref&gt;</ph> method is called; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Printing.PrintQueueStream"&gt;&lt;/xref&gt;</ph> class for the specified print job that is hosted in the specified <ph id="ph2">&lt;xref href="System.Printing.PrintQueue"&gt;&lt;/xref&gt;</ph>, with the specified settings and an indication of whether data in the <ph id="ph3">&lt;xref href="System.Printing.PrintQueueStream"&gt;&lt;/xref&gt;</ph> should be committed when the stream is closed.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Printing.PrintQueue"&gt;&lt;/xref&gt;</ph> that hosts the print job that provides the content of the stream.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The name of the print job that provides the content of the stream.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to commit data in the <ph id="ph2">&lt;xref href="System.Printing.PrintQueueStream"&gt;&lt;/xref&gt;</ph> when the <ph id="ph3">&lt;xref href="System.Printing.PrintQueueStream.Close"&gt;&lt;/xref&gt;</ph> method is called; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The settings of the print job.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous write operation.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The buffer from which to write data.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The byte offset in the buffer from which to begin writing.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to write.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An asynchronous callback, which is called when the writing operation is complete.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A user-provided object that distinguishes this asynchronous writing request from other requests.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that represents the asynchronous write, which might still be pending.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the stream supports reading.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if reading is supported; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the stream supports seeking, which is moving the read/write position to a new position in the stream.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if seeking is supported; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the stream supports writing.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if writing is supported; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Closes the stream and releases any resources, such as sockets and file handles, that are associated with it.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources that are used by the <ph id="ph1">&lt;xref href="System.Printing.PrintQueueStream"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the unnamed Boolean parameter set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with the unnamed Boolean parameter set to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the unnamed Boolean parameter is <ph id="ph1">`true`</ph>, this method releases all resources that are held by any managed objects that this <ph id="ph2">&lt;xref:System.Printing.PrintQueueStream&gt;</ph> references.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Ends an asynchronous write operation.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Printing.PrintQueueStream.EndWrite%2A&gt;</ph> must be called exactly once on every <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> that is returned from a call to <ph id="ph3">&lt;xref:System.Printing.PrintQueueStream.BeginWrite%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A reference to the pending asynchronous I/O request.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Enables a <ph id="ph1">&lt;xref href="System.Printing.PrintQueueStream"&gt;&lt;/xref&gt;</ph> to attempt to free resources and perform other cleanup operations before the <ph id="ph2">&lt;xref href="System.Printing.PrintQueueStream"&gt;&lt;/xref&gt;</ph> is reclaimed by garbage collection.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Application code should not call this method; an object's <ph id="ph1">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Finalize Methods and Destructors<ept id="p1">](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>Cleaning Up Unmanaged Resources<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, and <bpt id="p3">[</bpt>Overriding the Finalize Method<ept id="p3">](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Clears all the buffers for this stream and writes any buffered data to the underlying device.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Enables the <ph id="ph1">&lt;xref href="System.Printing.PrintQueueStream"&gt;&lt;/xref&gt;</ph> to respond to the packaging progress by handling the <ph id="ph2">&lt;xref href="System.Windows.Xps.Serialization.XpsPackagingPolicy.PackagingProgressEvent"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The source of the event.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The event data.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets the ID number of the print job.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> that represents an ID number.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets the length of the stream in bytes.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Int64"&gt;&lt;/xref&gt;</ph> that represents the length of the stream in bytes.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets or sets the current read/write position in the stream.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Int64"&gt;&lt;/xref&gt;</ph> that represents the current position in the stream.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Reads a sequence of bytes from the stream and advances the read/write position in the stream by the number of bytes that were read.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value can be less than the number of requested bytes if that many bytes are not currently available; or the number can be zero (0) if the read/write position is at the end of the stream.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this method returns, <ph id="ph1">`buffer`</ph> contains the specified byte array and the values between <ph id="ph2">`offset`</ph> and (offset + count - 1) are replaced by the bytes that are read from the source.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>An array of bytes.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in the buffer where you want to begin storing the data that is read from the stream.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to be read from the stream.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> that holds the total number of bytes that are read into the buffer.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Sets the read/write position within the stream.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A byte offset that is relative to the origin parameter.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A value of type <ph id="ph1">&lt;xref href="System.IO.SeekOrigin"&gt;&lt;/xref&gt;</ph> that indicates the reference point that is used to obtain the new position.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Int64"&gt;&lt;/xref&gt;</ph> that represents the new read/write position.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Sets the length of the stream.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>A stream must support both writing and seeking for <ph id="ph1">&lt;xref:System.Printing.PrintQueueStream.SetLength%2A&gt;</ph> to work.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Printing.PrintQueueStream.CanWrite%2A&gt;</ph> property to determine whether the current instance supports writing, and use the <ph id="ph2">&lt;xref:System.Printing.PrintQueueStream.CanSeek%2A&gt;</ph> property to determine whether seeking is supported.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The needed length, in bytes, of the current stream.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to the stream and advances the read/write position in the stream by the number of bytes that are written.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An array of bytes from which to copy to the stream.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The zero-based byte offset in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">buffer</ph><ept id="p1">&lt;/code&gt;</ept> where you want to begin copying bytes to the stream.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The number of bytes to write to the stream.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>