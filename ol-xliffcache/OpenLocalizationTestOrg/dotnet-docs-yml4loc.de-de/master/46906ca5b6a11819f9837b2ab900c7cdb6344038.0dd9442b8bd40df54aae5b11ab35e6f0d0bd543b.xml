{"nodes":[{"content":"Indicates whether a given item is present in a given collection.","nodes":[{"pos":[0,64],"content":"Indicates whether a given item is present in a given collection.","nodes":[{"content":"Indicates whether a given item is present in a given collection.","pos":[0,64]}]}],"pos":[844,909],"yaml":true},{"content":"The type of elements in the specified collection.","nodes":[{"pos":[0,49],"content":"The type of elements in the specified collection.","nodes":[{"content":"The type of elements in the specified collection.","pos":[0,49]}]}],"pos":[1134,1184],"yaml":true},{"content":"Creates a new instance of the <xref href=\"System.Activities.Statements.ExistsInCollection`1\"></xref> class.","nodes":[{"pos":[0,107],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.ExistsInCollection`1\"&gt;&lt;/xref&gt;</ph> class.","source":"Creates a new instance of the <xref href=\"System.Activities.Statements.ExistsInCollection`1\"></xref> class."}],"pos":[3960,4068],"yaml":true},{"content":"The collection to be searched for the specified element.","nodes":[{"pos":[0,56],"content":"The collection to be searched for the specified element.","nodes":[{"content":"The collection to be searched for the specified element.","pos":[0,56]}]}],"pos":[6649,6706],"yaml":true},{"content":"The collection.","nodes":[{"pos":[0,15],"content":"The collection.","nodes":[{"content":"The collection.","pos":[0,15]}]}],"pos":[7001,7017],"yaml":true},{"content":"The item to search the specified collection for.","nodes":[{"pos":[0,48],"content":"The item to search the specified collection for.","nodes":[{"content":"The item to search the specified collection for.","pos":[0,48]}]}],"pos":[9566,9615],"yaml":true},{"content":"The item.","nodes":[{"pos":[0,9],"content":"The item.","nodes":[{"content":"The item.","pos":[0,9]}]}],"pos":[9823,9833],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.ExistsInCollection`1\n  commentId: T:System.Activities.Statements.ExistsInCollection`1\n  id: ExistsInCollection`1\n  children:\n  - System.Activities.Statements.ExistsInCollection`1.#ctor\n  - System.Activities.Statements.ExistsInCollection`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  - System.Activities.Statements.ExistsInCollection`1.Collection\n  - System.Activities.Statements.ExistsInCollection`1.Execute(System.Activities.CodeActivityContext)\n  - System.Activities.Statements.ExistsInCollection`1.Item\n  langs:\n  - csharp\n  name: ExistsInCollection<T>\n  nameWithType: ExistsInCollection<T>\n  fullName: System.Activities.Statements.ExistsInCollection<T>\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Indicates whether a given item is present in a given collection.\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Collection\")]\n\n      public sealed class ExistsInCollection<T> : System.Activities.CodeActivity<bool>\n    typeParameters:\n    - id: T\n      description: The type of elements in the specified collection.\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.ActivityWithResult\n  - System.Activities.Activity`1\n  - System.Activities.CodeActivity`1\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.Activity`1.FromValue(`0)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable to System.Activities.Activity{TResult})\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{TResult} to System.Activities.Activity{TResult})\n  - System.Activities.Activity`1.op_Implicit(TResult to System.Activities.Activity{TResult})\n  - System.Activities.Activity`1.Result\n  - System.Activities.ActivityWithResult.ResultType\n  - System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.CodeActivity`1.Implementation\n  - System.Activities.CodeActivity`1.ImplementationVersion\n  - System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Windows.Markup.ContentPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/ExistsInCollection`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.ExistsInCollection`1.#ctor\n  commentId: M:System.Activities.Statements.ExistsInCollection`1.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.ExistsInCollection`1\n  langs:\n  - csharp\n  name: ExistsInCollection<T>()\n  nameWithType: ExistsInCollection<T>.ExistsInCollection<T>()\n  fullName: ExistsInCollection<T>.ExistsInCollection<T>()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Creates a new instance of the <xref href=\"System.Activities.Statements.ExistsInCollection`1\"></xref> class.\n  syntax:\n    content: public ExistsInCollection ();\n    parameters: []\n  overload: System.Activities.Statements.ExistsInCollection`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/ExistsInCollection`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.ExistsInCollection`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  commentId: M:System.Activities.Statements.ExistsInCollection`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  id: CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Statements.ExistsInCollection`1\n  langs:\n  - csharp\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: ExistsInCollection<T>.CacheMetadata(CodeActivityMetadata)\n  fullName: ExistsInCollection<T>.CacheMetadata(CodeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.CodeActivityMetadata\n      description: ''\n  overload: System.Activities.Statements.ExistsInCollection`1.CacheMetadata*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/ExistsInCollection`1.xml\n- uid: System.Activities.Statements.ExistsInCollection`1.Collection\n  commentId: P:System.Activities.Statements.ExistsInCollection`1.Collection\n  id: Collection\n  parent: System.Activities.Statements.ExistsInCollection`1\n  langs:\n  - csharp\n  name: Collection\n  nameWithType: ExistsInCollection<T>.Collection\n  fullName: ExistsInCollection<T>.Collection\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The collection to be searched for the specified element.\n  syntax:\n    content: >-\n      [System.Activities.RequiredArgument]\n\n      public System.Activities.InArgument<System.Collections.Generic.ICollection<T>> Collection { get; set; }\n    return:\n      type: System.Activities.InArgument{System.Collections.Generic.ICollection{T}}\n      description: The collection.\n  overload: System.Activities.Statements.ExistsInCollection`1.Collection*\n  exceptions: []\n  attributes:\n  - type: System.Activities.RequiredArgumentAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/ExistsInCollection`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.ExistsInCollection`1.Execute(System.Activities.CodeActivityContext)\n  commentId: M:System.Activities.Statements.ExistsInCollection`1.Execute(System.Activities.CodeActivityContext)\n  id: Execute(System.Activities.CodeActivityContext)\n  parent: System.Activities.Statements.ExistsInCollection`1\n  langs:\n  - csharp\n  name: Execute(CodeActivityContext)\n  nameWithType: ExistsInCollection<T>.Execute(CodeActivityContext)\n  fullName: ExistsInCollection<T>.Execute(CodeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override bool Execute (System.Activities.CodeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.CodeActivityContext\n      description: ''\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Activities.Statements.ExistsInCollection`1.Execute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/ExistsInCollection`1.xml\n- uid: System.Activities.Statements.ExistsInCollection`1.Item\n  commentId: P:System.Activities.Statements.ExistsInCollection`1.Item\n  id: Item\n  parent: System.Activities.Statements.ExistsInCollection`1\n  langs:\n  - csharp\n  name: Item\n  nameWithType: ExistsInCollection<T>.Item\n  fullName: ExistsInCollection<T>.Item\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The item to search the specified collection for.\n  syntax:\n    content: >-\n      [System.Activities.RequiredArgument]\n\n      public System.Activities.InArgument<T> Item { get; set; }\n    return:\n      type: System.Activities.InArgument`1\n      description: The item.\n  overload: System.Activities.Statements.ExistsInCollection`1.Item*\n  exceptions: []\n  attributes:\n  - type: System.Activities.RequiredArgumentAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/ExistsInCollection`1.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.CodeActivity`1\n  name: CodeActivity<TResult>\n  nameWithType: CodeActivity<TResult>\n  fullName: System.Activities.CodeActivity<TResult>\n- uid: System.Boolean\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.CodeActivity{System.Boolean}\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivity<Boolean>\n  nameWithType: CodeActivity<Boolean>\n  fullName: System.Activities.CodeActivity<System.Boolean>\n  spec.csharp:\n  - uid: System.Activities.CodeActivity`1\n    name: CodeActivity\n    nameWithType: CodeActivity\n    fullName: System.Activities.CodeActivity\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: System.Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.ExistsInCollection`1.#ctor\n  parent: System.Activities.Statements.ExistsInCollection`1\n  isExternal: false\n  name: ExistsInCollection<T>()\n  nameWithType: ExistsInCollection<T>.ExistsInCollection<T>()\n  fullName: ExistsInCollection<T>.ExistsInCollection<T>()\n- uid: System.Activities.Statements.ExistsInCollection`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: System.Activities.Statements.ExistsInCollection`1\n  isExternal: false\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: ExistsInCollection<T>.CacheMetadata(CodeActivityMetadata)\n  fullName: ExistsInCollection<T>.CacheMetadata(CodeActivityMetadata)\n- uid: System.Activities.CodeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityMetadata\n  nameWithType: CodeActivityMetadata\n  fullName: System.Activities.CodeActivityMetadata\n- uid: System.Activities.Statements.ExistsInCollection`1.Collection\n  parent: System.Activities.Statements.ExistsInCollection`1\n  isExternal: false\n  name: Collection\n  nameWithType: ExistsInCollection<T>.Collection\n  fullName: ExistsInCollection<T>.Collection\n- uid: System.Activities.InArgument`1\n  name: InArgument<T>\n  nameWithType: InArgument<T>\n  fullName: System.Activities.InArgument<T>\n- uid: System.Collections.Generic.ICollection`1\n  name: ICollection<T>\n  nameWithType: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n- uid: T\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Activities.InArgument{System.Collections.Generic.ICollection{T}}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<ICollection<T>>\n  nameWithType: InArgument<ICollection<T>>\n  fullName: System.Activities.InArgument<System.Collections.Generic.ICollection<T>>\n  spec.csharp:\n  - uid: System.Activities.InArgument`1\n    name: InArgument\n    nameWithType: InArgument\n    fullName: System.Activities.InArgument\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Activities.Statements.ExistsInCollection`1.Execute(System.Activities.CodeActivityContext)\n  parent: System.Activities.Statements.ExistsInCollection`1\n  isExternal: false\n  name: Execute(CodeActivityContext)\n  nameWithType: ExistsInCollection<T>.Execute(CodeActivityContext)\n  fullName: ExistsInCollection<T>.Execute(CodeActivityContext)\n- uid: System.Activities.CodeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityContext\n  nameWithType: CodeActivityContext\n  fullName: System.Activities.CodeActivityContext\n- uid: System.Activities.Statements.ExistsInCollection`1.Item\n  parent: System.Activities.Statements.ExistsInCollection`1\n  isExternal: false\n  name: Item\n  nameWithType: ExistsInCollection<T>.Item\n  fullName: ExistsInCollection<T>.Item\n- uid: System.Activities.Statements.ExistsInCollection`1.#ctor*\n  parent: System.Activities.Statements.ExistsInCollection`1\n  isExternal: false\n  name: ExistsInCollection<T>\n  nameWithType: ExistsInCollection<T>.ExistsInCollection<T>\n  fullName: ExistsInCollection<T>.ExistsInCollection<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/ExistsInCollection`1.xml\n- uid: System.Activities.Statements.ExistsInCollection`1.CacheMetadata*\n  parent: System.Activities.Statements.ExistsInCollection`1\n  isExternal: false\n  name: CacheMetadata\n  nameWithType: ExistsInCollection<T>.CacheMetadata\n  fullName: ExistsInCollection<T>.CacheMetadata\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/ExistsInCollection`1.xml\n- uid: System.Activities.Statements.ExistsInCollection`1.Collection*\n  parent: System.Activities.Statements.ExistsInCollection`1\n  isExternal: false\n  name: Collection\n  nameWithType: ExistsInCollection<T>.Collection\n  fullName: ExistsInCollection<T>.Collection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/ExistsInCollection`1.xml\n- uid: System.Activities.Statements.ExistsInCollection`1.Execute*\n  parent: System.Activities.Statements.ExistsInCollection`1\n  isExternal: false\n  name: Execute\n  nameWithType: ExistsInCollection<T>.Execute\n  fullName: ExistsInCollection<T>.Execute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/ExistsInCollection`1.xml\n- uid: System.Activities.Statements.ExistsInCollection`1.Item*\n  parent: System.Activities.Statements.ExistsInCollection`1\n  isExternal: false\n  name: Item\n  nameWithType: ExistsInCollection<T>.Item\n  fullName: ExistsInCollection<T>.Item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/ExistsInCollection`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Activities.Activity.ToString\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: Activity.ToString()\n- uid: System.Activities.Activity.CacheId\n  parent: System.Activities.Activity\n  isExternal: false\n  name: CacheId\n  nameWithType: Activity.CacheId\n  fullName: Activity.CacheId\n- uid: System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)\n  parent: System.Activities.CodeActivity`1\n  isExternal: false\n  name: CacheMetadata(ActivityMetadata)\n  nameWithType: CodeActivity<TResult>.CacheMetadata(ActivityMetadata)\n  fullName: CodeActivity<TResult>.CacheMetadata(ActivityMetadata)\n- uid: System.Activities.Activity.Constraints\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Constraints\n  nameWithType: Activity.Constraints\n  fullName: Activity.Constraints\n- uid: System.Activities.Activity.DisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: DisplayName\n  nameWithType: Activity.DisplayName\n  fullName: Activity.DisplayName\n- uid: System.Activities.Activity.Id\n  parent: System.Activities.Activity\n  isExternal: false\n  name: Id\n  nameWithType: Activity.Id\n  fullName: Activity.Id\n- uid: System.Activities.CodeActivity`1.Implementation\n  parent: System.Activities.CodeActivity`1\n  isExternal: false\n  name: Implementation\n  nameWithType: CodeActivity<TResult>.Implementation\n  fullName: CodeActivity<TResult>.Implementation\n- uid: System.Activities.CodeActivity`1.ImplementationVersion\n  parent: System.Activities.CodeActivity`1\n  isExternal: false\n  name: ImplementationVersion\n  nameWithType: CodeActivity<TResult>.ImplementationVersion\n  fullName: CodeActivity<TResult>.ImplementationVersion\n- uid: System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.CodeActivity`1\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  nameWithType: CodeActivity<TResult>.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n  fullName: CodeActivity<TResult>.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)\n- uid: System.Activities.Activity.ShouldSerializeDisplayName\n  parent: System.Activities.Activity\n  isExternal: false\n  name: ShouldSerializeDisplayName()\n  nameWithType: Activity.ShouldSerializeDisplayName()\n  fullName: Activity.ShouldSerializeDisplayName()\n- uid: System.Activities.Activity`1.Result\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: Result\n  nameWithType: Activity<TResult>.Result\n  fullName: Activity<TResult>.Result\n- uid: System.Activities.ActivityWithResult.ResultType\n  parent: System.Activities.ActivityWithResult\n  isExternal: false\n  name: ResultType\n  nameWithType: ActivityWithResult.ResultType\n  fullName: ActivityWithResult.ResultType\n- uid: System.Activities.Activity`1.FromValue(`0)\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: FromValue(TResult)\n  nameWithType: Activity<TResult>.FromValue(TResult)\n  fullName: Activity<TResult>.FromValue(TResult)\n- uid: System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: FromVariable(Variable)\n  nameWithType: Activity<TResult>.FromVariable(Variable)\n  fullName: Activity<TResult>.FromVariable(Variable)\n- uid: System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: FromVariable(Variable<TResult>)\n  nameWithType: Activity<TResult>.FromVariable(Variable<TResult>)\n  fullName: Activity<TResult>.FromVariable(Variable<TResult>)\n- uid: System.Activities.Activity`1.op_Implicit(System.Activities.Variable to System.Activities.Activity{TResult})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: op_Implicit(Variable to Activity<TResult>)\n  nameWithType: Activity<TResult>.op_Implicit(Variable to Activity<TResult>)\n  fullName: Activity<TResult>.op_Implicit(Variable to Activity<TResult>)\n- uid: System.Activities.Activity`1.op_Implicit(System.Activities.Variable{TResult} to System.Activities.Activity{TResult})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: op_Implicit(Variable<TResult> to Activity<TResult>)\n  nameWithType: Activity<TResult>.op_Implicit(Variable<TResult> to Activity<TResult>)\n  fullName: Activity<TResult>.op_Implicit(Variable<TResult> to Activity<TResult>)\n- uid: System.Activities.Activity`1.op_Implicit(TResult to System.Activities.Activity{TResult})\n  parent: System.Activities.Activity`1\n  isExternal: false\n  name: op_Implicit(TResult to Activity<TResult>)\n  nameWithType: Activity<TResult>.op_Implicit(TResult to Activity<TResult>)\n  fullName: Activity<TResult>.op_Implicit(TResult to Activity<TResult>)\n"}