{"nodes":[{"content":"Provides functionality to an object to return a list that can be bound to a data source.","nodes":[{"pos":[0,88],"content":"Provides functionality to an object to return a list that can be bound to a data source.","nodes":[{"content":"Provides functionality to an object to return a list that can be bound to a data source.","pos":[0,88]}]}],"pos":[522,611],"yaml":true},{"content":"You typically use this interface to return a list that can be bound to a data source, from an object that does not implement <xref:System.Collections.IList> itself.  \n  \n Binding to data can occur at either run time or in a designer, but there are rules for each. At run time, you can bind to data in any of the following:  \n  \n-   <xref:System.Array>  \n  \n-   Implementer of <xref:System.Collections.IList>, provided the implementer has a strongly typed <xref:System.Collections.IList.Item%2A> property (that is, the <xref:System.Type> is anything but <xref:System.Object>). You can accomplish this by making the default implementation of <xref:System.Collections.IList.Item%2A> private. If you want to create an <xref:System.Collections.IList> that follows the rules of a strongly typed collection, you should derive from <xref:System.Collections.CollectionBase>.  \n  \n-   Implementer of <xref:System.ComponentModel.ITypedList>.  \n  \n In a designer, you can initialize binding to <xref:System.ComponentModel.Component> objects by following the same rules.  \n  \n> [!NOTE]\n>  Implementers of <xref:System.ComponentModel.IListSource> can return an <xref:System.Collections.IList> that contains a collection of <xref:System.Collections.IList> objects.","nodes":[{"pos":[0,164],"content":"You typically use this interface to return a list that can be bound to a data source, from an object that does not implement <xref:System.Collections.IList> itself.","nodes":[{"content":"You typically use this interface to return a list that can be bound to a data source, from an object that does not implement <ph id=\"ph1\">&lt;xref:System.Collections.IList&gt;</ph> itself.","pos":[0,164],"source":"You typically use this interface to return a list that can be bound to a data source, from an object that does not implement <xref:System.Collections.IList> itself."}]},{"pos":[171,322],"content":"Binding to data can occur at either run time or in a designer, but there are rules for each. At run time, you can bind to data in any of the following:","nodes":[{"content":"Binding to data can occur at either run time or in a designer, but there are rules for each. At run time, you can bind to data in any of the following:","pos":[0,151],"nodes":[{"content":"Binding to data can occur at either run time or in a designer, but there are rules for each.","pos":[0,92]},{"content":"At run time, you can bind to data in any of the following:","pos":[93,151]}]}]},{"pos":[332,351],"content":"<xref:System.Array>","nodes":[]},{"pos":[361,865],"content":"Implementer of <xref:System.Collections.IList>, provided the implementer has a strongly typed <xref:System.Collections.IList.Item%2A> property (that is, the <xref:System.Type> is anything but <xref:System.Object>). You can accomplish this by making the default implementation of <xref:System.Collections.IList.Item%2A> private. If you want to create an <xref:System.Collections.IList> that follows the rules of a strongly typed collection, you should derive from <xref:System.Collections.CollectionBase>.","nodes":[{"content":"Implementer of <xref:System.Collections.IList>, provided the implementer has a strongly typed <xref:System.Collections.IList.Item%2A> property (that is, the <xref:System.Type> is anything but <xref:System.Object>). You can accomplish this by making the default implementation of <xref:System.Collections.IList.Item%2A> private. If you want to create an <xref:System.Collections.IList> that follows the rules of a strongly typed collection, you should derive from <xref:System.Collections.CollectionBase>.","pos":[0,504],"nodes":[{"content":"Implementer of <ph id=\"ph1\">&lt;xref:System.Collections.IList&gt;</ph>, provided the implementer has a strongly typed <ph id=\"ph2\">&lt;xref:System.Collections.IList.Item%2A&gt;</ph> property (that is, the <ph id=\"ph3\">&lt;xref:System.Type&gt;</ph> is anything but <ph id=\"ph4\">&lt;xref:System.Object&gt;</ph>).","pos":[0,214],"source":"Implementer of <xref:System.Collections.IList>, provided the implementer has a strongly typed <xref:System.Collections.IList.Item%2A> property (that is, the <xref:System.Type> is anything but <xref:System.Object>)."},{"content":"You can accomplish this by making the default implementation of <ph id=\"ph1\">&lt;xref:System.Collections.IList.Item%2A&gt;</ph> private.","pos":[215,327],"source":" You can accomplish this by making the default implementation of <xref:System.Collections.IList.Item%2A> private."},{"content":"If you want to create an <ph id=\"ph1\">&lt;xref:System.Collections.IList&gt;</ph> that follows the rules of a strongly typed collection, you should derive from <ph id=\"ph2\">&lt;xref:System.Collections.CollectionBase&gt;</ph>.","pos":[328,504],"source":" If you want to create an <xref:System.Collections.IList> that follows the rules of a strongly typed collection, you should derive from <xref:System.Collections.CollectionBase>."}]}]},{"pos":[875,930],"content":"Implementer of <xref:System.ComponentModel.ITypedList>.","nodes":[{"content":"Implementer of <ph id=\"ph1\">&lt;xref:System.ComponentModel.ITypedList&gt;</ph>.","pos":[0,55],"source":"Implementer of <xref:System.ComponentModel.ITypedList>."}]},{"pos":[937,1057],"content":"In a designer, you can initialize binding to <xref:System.ComponentModel.Component> objects by following the same rules.","nodes":[{"content":"In a designer, you can initialize binding to <ph id=\"ph1\">&lt;xref:System.ComponentModel.Component&gt;</ph> objects by following the same rules.","pos":[0,120],"source":"In a designer, you can initialize binding to <xref:System.ComponentModel.Component> objects by following the same rules."}]},{"pos":[1065,1249],"content":"[!NOTE]\n Implementers of <xref:System.ComponentModel.IListSource> can return an <xref:System.Collections.IList> that contains a collection of <xref:System.Collections.IList> objects.","leadings":["","> "],"nodes":[{"content":"Implementers of <ph id=\"ph1\">&lt;xref:System.ComponentModel.IListSource&gt;</ph> can return an <ph id=\"ph2\">&lt;xref:System.Collections.IList&gt;</ph> that contains a collection of <ph id=\"ph3\">&lt;xref:System.Collections.IList&gt;</ph> objects.","pos":[9,182],"source":" Implementers of <xref:System.ComponentModel.IListSource> can return an <xref:System.Collections.IList> that contains a collection of <xref:System.Collections.IList> objects."}]}],"pos":[622,1887],"yaml":true,"extradata":"MT"},{"content":"Gets a value indicating whether the collection is a collection of <xref href=\"System.Collections.IList\"></xref> objects.","nodes":[{"pos":[0,120],"content":"Gets a value indicating whether the collection is a collection of <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> objects.","source":"Gets a value indicating whether the collection is a collection of <xref href=\"System.Collections.IList\"></xref> objects."}],"pos":[4722,4843],"yaml":true},{"content":"Using this property in <xref:System.Data.DataSet> returns `true` because the <xref:System.Data.DataSet> class contains a collection of collections. Using this property in <xref:System.Data.DataTable> returns `false` because the <xref:System.Data.DataTable> class contains a collection of objects.","nodes":[{"pos":[0,296],"content":"Using this property in <xref:System.Data.DataSet> returns `true` because the <xref:System.Data.DataSet> class contains a collection of collections. Using this property in <xref:System.Data.DataTable> returns `false` because the <xref:System.Data.DataTable> class contains a collection of objects.","nodes":[{"content":"Using this property in <ph id=\"ph1\">&lt;xref:System.Data.DataSet&gt;</ph> returns <ph id=\"ph2\">`true`</ph> because the <ph id=\"ph3\">&lt;xref:System.Data.DataSet&gt;</ph> class contains a collection of collections.","pos":[0,147],"source":"Using this property in <xref:System.Data.DataSet> returns `true` because the <xref:System.Data.DataSet> class contains a collection of collections."},{"content":"Using this property in <ph id=\"ph1\">&lt;xref:System.Data.DataTable&gt;</ph> returns <ph id=\"ph2\">`false`</ph> because the <ph id=\"ph3\">&lt;xref:System.Data.DataTable&gt;</ph> class contains a collection of objects.","pos":[148,296],"source":" Using this property in <xref:System.Data.DataTable> returns `false` because the <xref:System.Data.DataTable> class contains a collection of objects."}]}],"pos":[4854,5151],"yaml":true,"extradata":"MT"},{"content":"`true` if the collection is a collection of <xref href=\"System.Collections.IList\"></xref> objects; otherwise, `false`.","nodes":[{"pos":[0,118],"content":"<ph id=\"ph1\">`true`</ph> if the collection is a collection of <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> objects; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the collection is a collection of <xref href=\"System.Collections.IList\"></xref> objects; otherwise, `false`."}],"pos":[6119,6240],"yaml":true},{"content":"Returns an <xref href=\"System.Collections.IList\"></xref> that can be bound to a data source from an object that does not implement an <xref href=\"System.Collections.IList\"></xref> itself.","nodes":[{"pos":[0,187],"content":"Returns an <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> that can be bound to a data source from an object that does not implement an <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> itself.","source":"Returns an <xref href=\"System.Collections.IList\"></xref> that can be bound to a data source from an object that does not implement an <xref href=\"System.Collections.IList\"></xref> itself."}],"pos":[7536,7724],"yaml":true},{"content":"An <xref href=\"System.Collections.IList\"></xref> that can be bound to a data source from the object.","nodes":[{"pos":[0,100],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> that can be bound to a data source from the object.","source":"An <xref href=\"System.Collections.IList\"></xref> that can be bound to a data source from the object."}],"pos":[8683,8784],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.IListSource\n  commentId: T:System.ComponentModel.IListSource\n  id: IListSource\n  children:\n  - System.ComponentModel.IListSource.ContainsListCollection\n  - System.ComponentModel.IListSource.GetList\n  langs:\n  - csharp\n  name: IListSource\n  nameWithType: IListSource\n  fullName: System.ComponentModel.IListSource\n  type: Interface\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Provides functionality to an object to return a list that can be bound to a data source.\n  remarks: \"You typically use this interface to return a list that can be bound to a data source, from an object that does not implement <xref:System.Collections.IList> itself.  \\n  \\n Binding to data can occur at either run time or in a designer, but there are rules for each. At run time, you can bind to data in any of the following:  \\n  \\n-   <xref:System.Array>  \\n  \\n-   Implementer of <xref:System.Collections.IList>, provided the implementer has a strongly typed <xref:System.Collections.IList.Item%2A> property (that is, the <xref:System.Type> is anything but <xref:System.Object>). You can accomplish this by making the default implementation of <xref:System.Collections.IList.Item%2A> private. If you want to create an <xref:System.Collections.IList> that follows the rules of a strongly typed collection, you should derive from <xref:System.Collections.CollectionBase>.  \\n  \\n-   Implementer of <xref:System.ComponentModel.ITypedList>.  \\n  \\n In a designer, you can initialize binding to <xref:System.ComponentModel.Component> objects by following the same rules.  \\n  \\n> [!NOTE]\\n>  Implementers of <xref:System.ComponentModel.IListSource> can return an <xref:System.Collections.IList> that contains a collection of <xref:System.Collections.IList> objects.\"\n  example:\n  - \"The following code example demonstrates how to implement the <xref:System.ComponentModel.IListSource> interface. A component named `EmployeeListSource` exposes an <xref:System.Collections.IList> for data binding by implementing the <xref:System.ComponentModel.IListSource.GetList%2A> method. For a full code listing, see [How to: Implement the IListSource Interface](~/docs/framework/winforms/how-to-implement-the-ilistsource-interface.md).  \\n  \\n [!code-csharp[System.ComponentModel.IListSource#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.IListSource/CS/EmployeeListSource.cs#1)]\\n [!code-vb[System.ComponentModel.IListSource#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.IListSource/VB/EmployeeListSource.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(\"System.Windows.Forms.Design.DataSourceConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\")]\n\n      public interface IListSource\n  derivedClasses:\n  - System.Data.DataSet\n  - System.Data.DataTable\n  - System.Data.Linq.EntitySet`1\n  - System.Data.Linq.Table`1\n  - System.Data.Objects.ObjectQuery\n  - System.Data.Objects.ObjectQuery`1\n  - System.Data.Objects.ObjectResult\n  - System.Data.Objects.DataClasses.EntityCollection`1\n  - System.Web.UI.DataSourceControl\n  - System.Web.UI.WebControls.SiteMapDataSource\n  - System.Web.UI.WebControls.XmlDataSource\n  implements: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IListSource.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.IListSource.ContainsListCollection\n  commentId: P:System.ComponentModel.IListSource.ContainsListCollection\n  id: ContainsListCollection\n  parent: System.ComponentModel.IListSource\n  langs:\n  - csharp\n  name: ContainsListCollection\n  nameWithType: IListSource.ContainsListCollection\n  fullName: IListSource.ContainsListCollection\n  type: Property\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether the collection is a collection of <xref href=\"System.Collections.IList\"></xref> objects.\n  remarks: Using this property in <xref:System.Data.DataSet> returns `true` because the <xref:System.Data.DataSet> class contains a collection of collections. Using this property in <xref:System.Data.DataTable> returns `false` because the <xref:System.Data.DataTable> class contains a collection of objects.\n  example:\n  - \"The following code example demonstrates how to implement the <xref:System.ComponentModel.IListSource> interface. A component named `EmployeeListSource` indicates that it does not contain an <xref:System.Collections.IList> for data binding by returning `false` from the <xref:System.ComponentModel.IListSource.ContainsListCollection%2A> method. For a full code listing, see [How to: Implement the IListSource Interface](~/docs/framework/winforms/how-to-implement-the-ilistsource-interface.md).  \\n  \\n [!code-csharp[System.ComponentModel.IListSource#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.IListSource/CS/EmployeeListSource.cs#3)]\\n [!code-vb[System.ComponentModel.IListSource#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.IListSource/VB/EmployeeListSource.vb#3)]\"\n  syntax:\n    content: public bool ContainsListCollection { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the collection is a collection of <xref href=\"System.Collections.IList\"></xref> objects; otherwise, `false`.'\n  overload: System.ComponentModel.IListSource.ContainsListCollection*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IListSource.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.IListSource.GetList\n  commentId: M:System.ComponentModel.IListSource.GetList\n  id: GetList\n  parent: System.ComponentModel.IListSource\n  langs:\n  - csharp\n  name: GetList()\n  nameWithType: IListSource.GetList()\n  fullName: IListSource.GetList()\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns an <xref href=\"System.Collections.IList\"></xref> that can be bound to a data source from an object that does not implement an <xref href=\"System.Collections.IList\"></xref> itself.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to implement the <xref:System.ComponentModel.IListSource> interface. A component named `EmployeeListSource` exposes an <xref:System.Collections.IList> for data binding by implementing the <xref:System.ComponentModel.IListSource.GetList%2A> method. For a full code listing, see [How to: Implement the IListSource Interface](~/docs/framework/winforms/how-to-implement-the-ilistsource-interface.md).  \\n  \\n [!code-csharp[System.ComponentModel.IListSource#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.IListSource/CS/EmployeeListSource.cs#4)]\\n [!code-vb[System.ComponentModel.IListSource#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.IListSource/VB/EmployeeListSource.vb#4)]\"\n  syntax:\n    content: public System.Collections.IList GetList ();\n    parameters: []\n    return:\n      type: System.Collections.IList\n      description: An <xref href=\"System.Collections.IList\"></xref> that can be bound to a data source from the object.\n  overload: System.ComponentModel.IListSource.GetList*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IListSource.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.IListSource.ContainsListCollection\n  parent: System.ComponentModel.IListSource\n  isExternal: false\n  name: ContainsListCollection\n  nameWithType: IListSource.ContainsListCollection\n  fullName: IListSource.ContainsListCollection\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.IListSource.GetList\n  parent: System.ComponentModel.IListSource\n  isExternal: false\n  name: GetList()\n  nameWithType: IListSource.GetList()\n  fullName: IListSource.GetList()\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: false\n  name: IList\n  nameWithType: IList\n  fullName: System.Collections.IList\n- uid: System.ComponentModel.IListSource.ContainsListCollection*\n  parent: System.ComponentModel.IListSource\n  isExternal: false\n  name: ContainsListCollection\n  nameWithType: IListSource.ContainsListCollection\n  fullName: IListSource.ContainsListCollection\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IListSource.xml\n- uid: System.ComponentModel.IListSource.GetList*\n  parent: System.ComponentModel.IListSource\n  isExternal: false\n  name: GetList\n  nameWithType: IListSource.GetList\n  fullName: IListSource.GetList\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/IListSource.xml\n"}