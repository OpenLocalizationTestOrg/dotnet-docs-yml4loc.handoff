<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0278a8ba09b4a4be9a2372d7afb098a37d9e1b9b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Data.Objects.ObjectParameterCollection.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a90bfa6d243578ddffb8c5f026682b7ab5b8631d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cdd61a7e5e03d479bfbda68dd9cb01fca72154ad</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the query parameters as <ph id="ph1">&lt;xref href="System.Data.Objects.ObjectParameter"&gt;&lt;/xref&gt;</ph> objects that are defined in an <ph id="ph2">&lt;xref href="System.Data.Objects.ObjectQuery`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Represents the query parameters as <ph id="ph1">&lt;xref:System.Data.Objects.ObjectParameter&gt;</ph> objects defined in an <ph id="ph2">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parameters that are passed to query builder methods are aggregated by successive instances of an <ph id="ph1">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> in the sequence.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>They can be accessed by using the <ph id="ph1">&lt;xref:System.Data.Objects.ObjectQuery.Parameters%2A&gt;</ph> property, which returns the <ph id="ph2">&lt;xref:System.Data.Objects.ObjectParameterCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>After parameters have been added, they can be removed from the collection and the collection can be cleared, as long as the query has not been compiled or executed.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameter names cannot be changed, but values can be changed at any time.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameters must be unique in the <ph id="ph1">&lt;xref:System.Data.Objects.ObjectParameterCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>There cannot be two parameters in the collection with the same name.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using composition methods, such as <ph id="ph1">&lt;xref:System.Data.Objects.ObjectQuery%601.Union%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.Objects.ObjectQuery%601.Intersect%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Data.Objects.ObjectQuery%601.Except%2A&gt;</ph>, the parameters are merged.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception is thrown when the sets of parameters are incompatible or incomplete.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Query Builder Methods<ept id="p1">](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Data.Objects.ObjectParameter"&gt;&lt;/xref&gt;</ph> to the collection.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>After parameters have been added, they can be removed from the collection and the collection can be cleared, as long as the query has not been compiled or executed.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameter names cannot be changed, but values can be changed at any time.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameters must be unique in the <ph id="ph1">&lt;xref:System.Data.Objects.ObjectParameterCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>There cannot be two parameters in the collection with the same name.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Query Builder Methods<ept id="p1">](http://msdn.microsoft.com/en-us/05685434-05e6-41c2-8d5e-8933b88a40b0)</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The parameter to add to the collection.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">parameter</ph><ept id="p1">&lt;/code&gt;</ept> argument is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">parameter</ph><ept id="p1">&lt;/code&gt;</ept> argument already exists in the collection.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This behavior differs from that of most collections that allow duplicate entries.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Another parameter with the same name as the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">parameter</ph><ept id="p1">&lt;/code&gt;</ept> argument already exists in the collection.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Note that the lookup is case-insensitive.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This behavior differs from that of most collections, and is more like that of a <ph id="ph1">&lt;xref href="System.Collections.Generic.Dictionary"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The type of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">parameter</ph><ept id="p1">&lt;/code&gt;</ept> is not valid.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Deletes all <ph id="ph1">&lt;xref href="System.Data.Objects.ObjectParameter"&gt;&lt;/xref&gt;</ph> instances from the collection.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Checks for the existence of a specified <ph id="ph1">&lt;xref href="System.Data.Objects.ObjectParameter"&gt;&lt;/xref&gt;</ph> in the collection by reference.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is a reference-based check.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, if an <ph id="ph1">&lt;xref:System.Data.Objects.ObjectParameter&gt;</ph> is specified that contains the same name as a parameter object in the collection, this method will only return <ph id="ph2">`true`</ph> if it is the same object.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.Objects.ObjectParameter"&gt;&lt;/xref&gt;</ph> to find in the collection.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`true`</ph> if the parameter object was found in the collection; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">parameter</ph><ept id="p1">&lt;/code&gt;</ept> argument is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Determines whether an <ph id="ph1">&lt;xref href="System.Data.Objects.ObjectParameter"&gt;&lt;/xref&gt;</ph> with the specified name is in the collection.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The name of the parameter to look for in the collection.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This name should not include the "@" parameter marker that is used in the <ph id="ph1">[!INCLUDE[esql](~/includes/esql-md.md)]</ph> statements, only the actual name.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`true`</ph> if a parameter with the specified name was found in the collection; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Allows the parameters in the collection to be copied into a supplied array, starting with the object at the specified index.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The array into which to copy the parameters.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The index in the array at which to start copying the parameters.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets the number of parameters currently in the collection.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The number of <ph id="ph1">&lt;xref href="System.Data.Objects.ObjectParameter"&gt;&lt;/xref&gt;</ph> objects that are currently in the collection.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Provides an indexer that allows callers to retrieve parameters by name.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The name of the parameter to find.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This name should not include the "@" parameter marker that is used in the <ph id="ph1">[!INCLUDE[esql](~/includes/esql-md.md)]</ph> statements, only the actual name.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.Objects.ObjectParameter"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>No parameter with the specified name is found in the collection.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Removes an instance of an <ph id="ph1">&lt;xref href="System.Data.Objects.ObjectParameter"&gt;&lt;/xref&gt;</ph> from the collection by reference if it exists in the collection.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is a reference-based comparison.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, if a query parameter object is specified that contains the same name as a parameter object in the collection, the parameter in the collection will only be removed if it is the same object.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>To remove an object by name, first use the indexer to retrieve the parameter instance, then remove it by using this method.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>An object to remove from the collection.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`true`</ph> if the parameter object was found and removed from the collection; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">parameter</ph><ept id="p1">&lt;/code&gt;</ept> argument is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the collection is read-only or can be modified.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>This collection is always read/write; parameters can be added, removed, and modified.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A Boolean value that is <ph id="ph1">`true`</ph> if the collection is read-only and <ph id="ph2">`false`</ph> of the collection can be modified.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Returns a typed enumerator over the collection.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Returns an <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerator%601&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the collection to be iterated through and traversed.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.Generic.IEnumerator`1"&gt;&lt;/xref&gt;</ph> of type <ph id="ph2">&lt;xref href="System.Data.Objects.ObjectParameter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Returns an untyped enumerator over the collection.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>Returns an untyped enumerator over the collection.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the collection to be iterated through and traversed.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.IEnumerator"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>