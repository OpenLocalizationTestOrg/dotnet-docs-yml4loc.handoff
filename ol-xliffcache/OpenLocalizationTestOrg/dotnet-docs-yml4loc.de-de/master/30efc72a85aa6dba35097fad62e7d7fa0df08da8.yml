### YamlMime:ManagedReference
items:
- uid: System.Tuple`7
  commentId: T:System.Tuple`7
  id: Tuple`7
  children:
  - System.Tuple`7.#ctor(`0,`1,`2,`3,`4,`5,`6)
  - System.Tuple`7.Equals(System.Object)
  - System.Tuple`7.GetHashCode
  - System.Tuple`7.Item1
  - System.Tuple`7.Item2
  - System.Tuple`7.Item3
  - System.Tuple`7.Item4
  - System.Tuple`7.Item5
  - System.Tuple`7.Item6
  - System.Tuple`7.Item7
  - System.Tuple`7.ToString
  - System.Tuple`7.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)
  - System.Tuple`7.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)
  - System.Tuple`7.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)
  - System.Tuple`7.System#IComparable#CompareTo(System.Object)
  - System.Tuple`7.System#Runtime#CompilerServices#ITuple#Item(System.Int32)
  - System.Tuple`7.System#Runtime#CompilerServices#ITuple#Length
  langs:
  - csharp
  name: Tuple<T1,T2,T3,T4,T5,T6,T7>
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>
  fullName: System.Tuple<T1,T2,T3,T4,T5,T6,T7>
  type: Class
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Represents a 7-tuple, or septuple.
  remarks: "A tuple is a data structure that has a specific number and sequence of values. The <xref:System.Tuple%607> class represents a 7-tuple, or septuple, which is a tuple that has seven components.  \n  \n You can instantiate a <xref:System.Tuple%607> object by calling either the <xref:System.Tuple%607.%23ctor%2A> or the static <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=fullName> method. You can retrieve the value of the tuple's components by using the read-only <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> instance properties.  \n  \n Tuples are commonly used in four different ways:  \n  \n-   To represent a single set of data. For example, a tuple can represent a database record, and its components can represent individual fields of the record.  \n  \n-   To provide easy access to, and manipulation of, a data set. The following example defines a <xref:System.Tuple%607> object that contains population data for New York City for each census from 1950 through 2000. The septuple is passed to the `ComputePopulationChange` method, which calculates the annual rate of change between censuses, as well as the annual rate of change for the entire 60 year period.  \n  \n     [!code-csharp[System.Tuple\\`7.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.class/cs/example1.cs#1)]\n     [!code-vb[System.Tuple\\`7.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.class/vb/example1.vb#1)]  \n  \n-   To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic). For example, the previous example returns its computed statistics, along with the city name, in a <xref:System.Tuple%607> object.  \n  \n-   To pass multiple values to a method through a single parameter. For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName> method has a single parameter that lets you supply one value to the method that the thread executes at startup. If you supply a <xref:System.Tuple%607> object as the method argument, you can supply the threadâ€™s startup routine with seven items of data."
  syntax:
    content: 'public class Tuple<T1,T2,T3,T4,T5,T6,T7> : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable'
    typeParameters:
    - id: T1
      description: The type of the tuple's first component.
    - id: T2
      description: The type of the tuple's second component.
    - id: T3
      description: The type of the tuple's third component.
    - id: T4
      description: The type of the tuple's fourth component.
    - id: T5
      description: The type of the tuple's fifth component.
    - id: T6
      description: The type of the tuple's sixth component.
    - id: T7
      description: The type of the tuple's seventh component.
  inheritance:
  - System.Object
  implements:
  - System.Collections.IStructuralComparable
  - System.Collections.IStructuralEquatable
  - System.IComparable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)
  - System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Tuple`7.#ctor(`0,`1,`2,`3,`4,`5,`6)
  commentId: M:System.Tuple`7.#ctor(`0,`1,`2,`3,`4,`5,`6)
  id: '#ctor(`0,`1,`2,`3,`4,`5,`6)'
  parent: System.Tuple`7
  langs:
  - csharp
  name: Tuple<T1,T2,T3,T4,T5,T6,T7>(T1, T2, T3, T4, T5, T6, T7)
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Tuple<T1,T2,T3,T4,T5,T6,T7>(T1, T2, T3, T4, T5, T6, T7)
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Tuple<T1,T2,T3,T4,T5,T6,T7>(T1, T2, T3, T4, T5, T6, T7)
  type: Constructor
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Initializes a new instance of the <xref href="System.Tuple`7"></xref> class.
  remarks: "You can use the static <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=fullName> method to instantiate a 7-tuple object without having to explicitly specify the types of its components. The following example uses the <xref:System.Tuple.Create%60%607%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%29?displayProperty=fullName> method to instantiate a 7-tuple whose first component is of type <xref:System.String> and whose remaining components are of type <xref:System.Int32>.  \n  \n [!code-csharp[System.Tuple.Create#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#13)]\n [!code-vb[System.Tuple.Create#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#13)]  \n  \n This is equivalent to the following call to the <xref:System.Tuple%607.%23ctor%2A> class constructor.  \n  \n [!code-csharp[System.Tuple.Create#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#14)]\n [!code-vb[System.Tuple.Create#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#14)]"
  syntax:
    content: public Tuple (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7);
    parameters:
    - id: item1
      type: T1
      description: The value of the tuple's first component.
    - id: item2
      type: T2
      description: The value of the tuple's second component.
    - id: item3
      type: T3
      description: The value of the tuple's third component.
    - id: item4
      type: T4
      description: The value of the tuple's fourth component
    - id: item5
      type: T5
      description: The value of the tuple's fifth component.
    - id: item6
      type: T6
      description: The value of the tuple's sixth component.
    - id: item7
      type: T7
      description: The value of the tuple's seventh component.
  overload: System.Tuple`7.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Tuple`7.Equals(System.Object)
  commentId: M:System.Tuple`7.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Tuple`7
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Equals(Object)
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Equals(Object)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns a value that indicates whether the current <xref href="System.Tuple`7"></xref> object is equal to a specified object.
  remarks: "The `obj` parameter is considered to be equal to the current instance under the following conditions:  \n  \n-   It is a <xref:System.Tuple%607> object.  \n  \n-   Its seven components are of the same types as the current instance.  \n  \n-   Its seven components are equal to those of the current instance. Equality is determined by the default object equality comparer for each component."
  example:
  - "The following example defines an array of sextuples that contain population data for Los Angeles and New York from 1950 to 2000. The first component of each septuple identifies the city. The first, third, and fourth septuples contain data for New York. The first septuple is a duplicate of the fourth septuple. The third septuple identifies the city as \"New York City\" instead of \"New York\". As the example shows, only the fourth septuple is equal to the first septuple.  \n  \n [!code-csharp[System.Tuple\\`7.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.equals/cs/equals1.cs#1)]\n [!code-vb[System.Tuple\\`7.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.equals/vb/equals1.vb#1)]"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with this instance.
    return:
      type: System.Boolean
      description: '`true` if the current instance is equal to the specified object; otherwise, `false`.'
  overload: System.Tuple`7.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Tuple`7.GetHashCode
  commentId: M:System.Tuple`7.GetHashCode
  id: GetHashCode
  parent: System.Tuple`7
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.GetHashCode()
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.GetHashCode()
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns the hash code for the current <xref href="System.Tuple`7"></xref> object.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
  overload: System.Tuple`7.GetHashCode*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Tuple`7.Item1
  commentId: P:System.Tuple`7.Item1
  id: Item1
  parent: System.Tuple`7
  langs:
  - csharp
  name: Item1
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item1
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item1
  type: Property
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Gets the value of the current <xref href="System.Tuple`7"></xref> object's first component.
  remarks: "You can dynamically determine the type of the <xref:System.Tuple%607.Item1%2A> component in one of two ways:  \n  \n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item1%2A> property.  \n  \n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method."
  example:
  - "The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000. It then displays a table that lists the data. To display the city name, it retrieves the value of the <xref:System.Tuple%607.Item1%2A> property for each <xref:System.Tuple%607> object.  \n  \n [!code-csharp[System.Tuple\\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]\n [!code-vb[System.Tuple\\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]"
  syntax:
    content: public T1 Item1 { get; }
    return:
      type: T1
      description: The value of the current <xref href="System.Tuple`7"></xref> object's first component.
  overload: System.Tuple`7.Item1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Tuple`7.Item2
  commentId: P:System.Tuple`7.Item2
  id: Item2
  parent: System.Tuple`7
  langs:
  - csharp
  name: Item2
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item2
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item2
  type: Property
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Gets the value of the current <xref href="System.Tuple`7"></xref> object's second component.
  remarks: "You can dynamically determine the type of the <xref:System.Tuple%607.Item2%2A> component in one of two ways:  \n  \n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item2%2A> property.  \n  \n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method."
  example:
  - "The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000. It then displays a table that lists the data. To display the population in 1950, it retrieves the value of the <xref:System.Tuple%607.Item2%2A> property for each <xref:System.Tuple%607> object.  \n  \n [!code-csharp[System.Tuple\\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]\n [!code-vb[System.Tuple\\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]"
  syntax:
    content: public T2 Item2 { get; }
    return:
      type: T2
      description: The value of the current <xref href="System.Tuple`7"></xref> object's second component.
  overload: System.Tuple`7.Item2*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Tuple`7.Item3
  commentId: P:System.Tuple`7.Item3
  id: Item3
  parent: System.Tuple`7
  langs:
  - csharp
  name: Item3
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item3
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item3
  type: Property
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Gets the value of the current <xref href="System.Tuple`7"></xref> object's third component.
  remarks: "You can dynamically determine the type of the <xref:System.Tuple%607.Item3%2A> component in one of two ways:  \n  \n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item3%2A> property.  \n  \n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the third element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method."
  example:
  - "The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000. It then displays a table that lists the data. To display the population in 1960, it retrieves the value of the <xref:System.Tuple%607.Item3%2A> property for each <xref:System.Tuple%607> object.  \n  \n [!code-csharp[System.Tuple\\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]\n [!code-vb[System.Tuple\\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]"
  syntax:
    content: public T3 Item3 { get; }
    return:
      type: T3
      description: The value of the current <xref href="System.Tuple`7"></xref> object's third component.
  overload: System.Tuple`7.Item3*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Tuple`7.Item4
  commentId: P:System.Tuple`7.Item4
  id: Item4
  parent: System.Tuple`7
  langs:
  - csharp
  name: Item4
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item4
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item4
  type: Property
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Gets the value of the current <xref href="System.Tuple`7"></xref> object's fourth component.
  remarks: "You can dynamically determine the type of the <xref:System.Tuple%607.Item4%2A> component in one of two ways:  \n  \n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item4%2A> property.  \n  \n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the fourth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method."
  example:
  - "The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000. It then displays a table that lists the data. To display the population in 1970, it retrieves the value of the <xref:System.Tuple%607.Item4%2A> property for each <xref:System.Tuple%607> object.  \n  \n [!code-csharp[System.Tuple\\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]\n [!code-vb[System.Tuple\\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]"
  syntax:
    content: public T4 Item4 { get; }
    return:
      type: T4
      description: The value of the current <xref href="System.Tuple`7"></xref> object's fourth component.
  overload: System.Tuple`7.Item4*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Tuple`7.Item5
  commentId: P:System.Tuple`7.Item5
  id: Item5
  parent: System.Tuple`7
  langs:
  - csharp
  name: Item5
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item5
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item5
  type: Property
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Gets the value of the current <xref href="System.Tuple`7"></xref> object's fifth component.
  remarks: "You can dynamically determine the type of the <xref:System.Tuple%607.Item5%2A> component in one of two ways:  \n  \n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item5%2A> property.  \n  \n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the fifth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method."
  example:
  - "The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000. It then displays a table that lists the data. To display the population in 1980, it retrieves the value of the <xref:System.Tuple%607.Item5%2A> property for each <xref:System.Tuple%607> object.  \n  \n [!code-csharp[System.Tuple\\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]\n [!code-vb[System.Tuple\\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]"
  syntax:
    content: public T5 Item5 { get; }
    return:
      type: T5
      description: The value of the current <xref href="System.Tuple`7"></xref> object's fifth component.
  overload: System.Tuple`7.Item5*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Tuple`7.Item6
  commentId: P:System.Tuple`7.Item6
  id: Item6
  parent: System.Tuple`7
  langs:
  - csharp
  name: Item6
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item6
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item6
  type: Property
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Gets the value of the current <xref href="System.Tuple`7"></xref> object's sixth component.
  remarks: "You can dynamically determine the type of the <xref:System.Tuple%607.Item6%2A> component in one of two ways:  \n  \n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item6%2A> property.  \n  \n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the sixth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method."
  example:
  - "The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000. It then displays a table that lists the data. To display the population in 1990, it retrieves the value of the <xref:System.Tuple%607.Item6%2A> property for each <xref:System.Tuple%607> object.  \n  \n [!code-csharp[System.Tuple\\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]\n [!code-vb[System.Tuple\\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]"
  syntax:
    content: public T6 Item6 { get; }
    return:
      type: T6
      description: The value of the current <xref href="System.Tuple`7"></xref> object's sixth component.
  overload: System.Tuple`7.Item6*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Tuple`7.Item7
  commentId: P:System.Tuple`7.Item7
  id: Item7
  parent: System.Tuple`7
  langs:
  - csharp
  name: Item7
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item7
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item7
  type: Property
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Gets the value of the current <xref href="System.Tuple`7"></xref> object's seventh component.
  remarks: "You can dynamically determine the type of the <xref:System.Tuple%607.Item7%2A> component in one of two ways:  \n  \n-   By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%607.Item7%2A> property.  \n  \n-   By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%607> object, and retrieving the seventh element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method."
  example:
  - "The following example defines an array of <xref:System.Tuple%607> objects whose components contain population data for three U.S. cities (New York, Chicago, and Los Angeles) from 1950 through 2000. It then displays a table that lists the data. To display the population in 2000, it retrieves the value of the <xref:System.Tuple%607.Item7%2A> property for each <xref:System.Tuple%607> object.  \n  \n [!code-csharp[System.Tuple\\`7.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.item1/cs/item1.cs#1)]\n [!code-vb[System.Tuple\\`7.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.item1/vb/item1.vb#1)]"
  syntax:
    content: public T7 Item7 { get; }
    return:
      type: T7
      description: The value of the current <xref href="System.Tuple`7"></xref> object's seventh component.
  overload: System.Tuple`7.Item7*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Tuple`7.ToString
  commentId: M:System.Tuple`7.ToString
  id: ToString
  parent: System.Tuple`7
  langs:
  - csharp
  name: ToString()
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.ToString()
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.ToString()
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns a string that represents the value of this <xref href="System.Tuple`7"></xref> instance.
  remarks: The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, and *Item7* represent the values of the <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> properties, respectively. If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=fullName>.
  example:
  - "The following example defines a <xref:System.Tuple%607> object that contains population data for New York City for each census from 1950 through 2000. The components of the sextuple are then displayed by a call to the <xref:System.Tuple%607.ToString%2A> method.  \n  \n [!code-csharp[System.Tuple\\`7.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.tostring/cs/tostring1.cs#1)]\n [!code-vb[System.Tuple\\`7.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.tostring/vb/tostring1.vb#1)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: The string representation of this <xref href="System.Tuple`7"></xref> object.
  overload: System.Tuple`7.ToString*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Tuple`7.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)
  commentId: M:System.Tuple`7.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)
  id: System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)
  isEii: true
  parent: System.Tuple`7
  langs:
  - csharp
  name: IStructuralComparable.CompareTo(Object, IComparer)
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.IStructuralComparable.CompareTo(Object, IComparer)
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.IStructuralComparable.CompareTo(Object, IComparer)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Compares the current <xref href="System.Tuple`7"></xref> object to a specified object by using a specified comparer, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.
  remarks: "This member is an explicit interface implementation. It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.  \n  \n This method lets you define customized comparisons of <xref:System.Tuple%607> objects. For example, you can use this method to order <xref:System.Tuple%607> objects based on the value of a specific component.  \n  \n Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection. For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=fullName> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=fullName> constructor.  \n  \n> [!CAUTION]\n>  The <xref:System.Tuple%607.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations. It should not be used when the primary purpose of a comparison is to determine whether two objects are equal. To determine whether two objects are equal, call the <xref:System.Tuple%607.System%23Collections%23IStructuralEquatable%23Equals%2A> method."
  example:
  - "The following example creates an array of <xref:System.Tuple%607> objects that contains population data for three U.S. cities from 1950 to 2000. The septuple's first component is the city name. The remaining five components represent the population at 10-year intervals from 1950 to 2000.  \n  \n The `PopulationComparer` class provides an <xref:System.Collections.IComparer> implementation that allows the array of septuples to be sorted by any one of its components. Two values are provided to the `PopulationComparer` class in its constructor: The position of the component that defines the sort order, and a <xref:System.Boolean> value that indicates whether the tuple objects should be sorted in ascending or descending order.  \n  \n The example then displays the elements in the array in unsorted order, sorts them by the third component (the population in 1960) and displays them, and then sorts them by the sixth component (the population in 1990) and displays them.  \n  \n [!code-csharp[System.Tuple\\`7.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.compareto/cs/compareto2.cs#2)]\n [!code-vb[System.Tuple\\`7.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.compareto/vb/compareto2.vb#2)]"
  syntax:
    content: int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);
    parameters:
    - id: other
      type: System.Object
      description: An object to compare with the current instance.
    - id: comparer
      type: System.Collections.IComparer
      description: An object that provides custom rules for comparison.
    return:
      type: System.Int32
      description: "A signed integer that indicates the relative position of this instance and <code>other</code> in the sort order, as shown in the following table.  \n  \n <table><thead><tr><th> Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> A negative integer  \n  \n </td><td> This instance precedes <code>other</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance and <code>other</code> have the same position in the sort order.  \n  \n </td></tr><tr><td> A positive integer  \n  \n </td><td> This instance follows <code>other</code>.  \n  \n </td></tr></tbody></table>"
  overload: System.Tuple`7.System#Collections#IStructuralComparable#CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>other</code> is not a <xref href="System.Tuple`7"></xref> object.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Tuple`7.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)
  commentId: M:System.Tuple`7.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)
  id: System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)
  isEii: true
  parent: System.Tuple`7
  langs:
  - csharp
  name: IStructuralEquatable.Equals(Object, IEqualityComparer)
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.IStructuralEquatable.Equals(Object, IEqualityComparer)
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.IStructuralEquatable.Equals(Object, IEqualityComparer)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Returns a value that indicates whether the current <xref href="System.Tuple`7"></xref> object is equal to a specified object based on a specified comparison method.
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.  \n  \n The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation is called only if other is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%607> object whose components are of the same types as the current instance. The <xref:System.Tuple%607.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method first passes the <xref:System.Tuple%607.Item1%2A> values of the <xref:System.Tuple%607> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation. If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%607.Item2%2A> values of the two <xref:System.Tuple%607> objects. This continues until the method call returns `false` when it compares a specific pair of `Item` values, or the two <xref:System.Tuple%607.Item7%2A> values are passed to the method."
  example:
  - "The following example defines a `RateComparer` class that performs a custom test for equality. If the values that are passed to its <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=fullName> method are of type <xref:System.Single> or <xref:System.Double>, the method tests for equality by using only up to three fractional digits. Otherwise, it simply calls the `x` parameter's `Equals` method. The example uses this <xref:System.Collections.IEqualityComparer> implementation to determine whether four <xref:System.Tuple%607> objects that contain data on the rate of population change between 1950 and 2000 are equal.  \n  \n [!code-csharp[System.Tuple\\`7.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.equals/cs/equals2.cs#2)]\n [!code-vb[System.Tuple\\`7.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.equals/vb/equals2.vb#2)]"
  syntax:
    content: bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);
    parameters:
    - id: other
      type: System.Object
      description: The object to compare with this instance.
    - id: comparer
      type: System.Collections.IEqualityComparer
      description: An object that defines the method to use to evaluate whether the two objects are equal.
    return:
      type: System.Boolean
      description: '`true` if the current instance is equal to the specified object; otherwise, `false`.'
  overload: System.Tuple`7.System#Collections#IStructuralEquatable#Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Tuple`7.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)
  commentId: M:System.Tuple`7.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)
  id: System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)
  isEii: true
  parent: System.Tuple`7
  langs:
  - csharp
  name: IStructuralEquatable.GetHashCode(IEqualityComparer)
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.IStructuralEquatable.GetHashCode(IEqualityComparer)
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.IStructuralEquatable.GetHashCode(IEqualityComparer)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Calculates the hash code for the current <xref href="System.Tuple`7"></xref> object by using a specified computation method.
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.  \n  \n the method simply wraps a call to the comparer object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=fullName> implementation.  \n  \n The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%607> objects that are considered to be equal."
  syntax:
    content: int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);
    parameters:
    - id: comparer
      type: System.Collections.IEqualityComparer
      description: An object whose <xref href="System.Collections.IEqualityComparer.GetHashCode(System.Object)"></xref> method calculates the hash code of the current <xref href="System.Tuple`7"></xref> object.
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
  overload: System.Tuple`7.System#Collections#IStructuralEquatable#GetHashCode*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Tuple`7.System#IComparable#CompareTo(System.Object)
  commentId: M:System.Tuple`7.System#IComparable#CompareTo(System.Object)
  id: System#IComparable#CompareTo(System.Object)
  isEii: true
  parent: System.Tuple`7
  langs:
  - csharp
  name: IComparable.CompareTo(Object)
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.IComparable.CompareTo(Object)
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.IComparable.CompareTo(Object)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Compares the current <xref href="System.Tuple`7"></xref> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Tuple%607> instance is cast to an <xref:System.IComparable> interface.  \n  \n This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=fullName> implementation for the <xref:System.Tuple%607> class. Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=fullName> and <xref:System.Collections.SortedList.Add%2A?displayProperty=fullName>, to order the members of a collection.  \n  \n> [!CAUTION]\n>  The <xref:System.Tuple%607.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations. It should not be used when the primary purpose of a comparison is to determine whether two objects are equal. To determine whether two objects are equal, call the <xref:System.Tuple%607.Equals%28System.Object%29?displayProperty=fullName> method.  \n  \n This method uses the default object comparer to compare each component."
  example:
  - "The following example creates an array of <xref:System.Tuple%607> objects that contain population data for three cities in the United States from 1950 to 2000. The seven components consist of the city name followed by the city's population at 10-year intervals from 1950 to 2000. The example displays the components of each tuple in the array in unsorted order, sorts the array, and then calls the <xref:System.Tuple%607.ToString%2A> method to display each tuple in sorted order. The output shows that the array has been sorted by name, which is the first component. Note that the example does not directly call the <xref:System.Tuple%607.System%23IComparable%23CompareTo%28System.Object%29> method. This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.  \n  \n [!code-csharp[System.Tuple\\`7.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`7.compareto/cs/compareto1.cs#1)]\n [!code-vb[System.Tuple\\`7.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`7.compareto/vb/compareto1.vb#1)]"
  syntax:
    content: int IComparable.CompareTo (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: An object to compare with the current instance.
    return:
      type: System.Int32
      description: "A signed integer that indicates the relative position of this instance and <code>obj</code> in the sort order, as shown in the following table.  \n  \n <table><thead><tr><th> Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> A negative integer  \n  \n </td><td> This instance precedes <code>obj</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance and <code>obj</code> have the same position in the sort order.  \n  \n </td></tr><tr><td> A positive integer  \n  \n </td><td> This instance follows <code>obj</code>.  \n  \n </td></tr></tbody></table>"
  overload: System.Tuple`7.System#IComparable#CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>obj</code> is not a <xref href="System.Tuple`7"></xref> object.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Tuple`7.System#Runtime#CompilerServices#ITuple#Item(System.Int32)
  commentId: P:System.Tuple`7.System#Runtime#CompilerServices#ITuple#Item(System.Int32)
  id: System#Runtime#CompilerServices#ITuple#Item(System.Int32)
  isEii: true
  parent: System.Tuple`7
  langs:
  - csharp
  name: ITuple.Item(Int32)
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.ITuple.Item(Int32)
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.ITuple.Item(Int32)
  type: Property
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: ''
    return:
      type: System.Object
      description: ''
  overload: System.Tuple`7.System#Runtime#CompilerServices#ITuple#Item*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
- uid: System.Tuple`7.System#Runtime#CompilerServices#ITuple#Length
  commentId: P:System.Tuple`7.System#Runtime#CompilerServices#ITuple#Length
  id: System#Runtime#CompilerServices#ITuple#Length
  isEii: true
  parent: System.Tuple`7
  langs:
  - csharp
  name: ITuple.Length
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.ITuple.Length
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.ITuple.Length
  type: Property
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: int System.Runtime.CompilerServices.ITuple.Length { get; }
    return:
      type: System.Int32
      description: ''
  overload: System.Tuple`7.System#Runtime#CompilerServices#ITuple#Length*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Tuple`7.#ctor(`0,`1,`2,`3,`4,`5,`6)
  parent: System.Tuple`7
  isExternal: false
  name: Tuple<T1,T2,T3,T4,T5,T6,T7>(T1, T2, T3, T4, T5, T6, T7)
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Tuple<T1,T2,T3,T4,T5,T6,T7>(T1, T2, T3, T4, T5, T6, T7)
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Tuple<T1,T2,T3,T4,T5,T6,T7>(T1, T2, T3, T4, T5, T6, T7)
- uid: T1
  isExternal: true
  name: T1
  nameWithType: T1
  fullName: T1
- uid: T2
  isExternal: true
  name: T2
  nameWithType: T2
  fullName: T2
- uid: T3
  isExternal: true
  name: T3
  nameWithType: T3
  fullName: T3
- uid: T4
  isExternal: true
  name: T4
  nameWithType: T4
  fullName: T4
- uid: T5
  isExternal: true
  name: T5
  nameWithType: T5
  fullName: T5
- uid: T6
  isExternal: true
  name: T6
  nameWithType: T6
  fullName: T6
- uid: T7
  isExternal: true
  name: T7
  nameWithType: T7
  fullName: T7
- uid: System.Tuple`7.Equals(System.Object)
  parent: System.Tuple`7
  isExternal: false
  name: Equals(Object)
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Equals(Object)
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Tuple`7.GetHashCode
  parent: System.Tuple`7
  isExternal: false
  name: GetHashCode()
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.GetHashCode()
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Tuple`7.Item1
  parent: System.Tuple`7
  isExternal: false
  name: Item1
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item1
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item1
- uid: System.Tuple`7.Item2
  parent: System.Tuple`7
  isExternal: false
  name: Item2
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item2
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item2
- uid: System.Tuple`7.Item3
  parent: System.Tuple`7
  isExternal: false
  name: Item3
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item3
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item3
- uid: System.Tuple`7.Item4
  parent: System.Tuple`7
  isExternal: false
  name: Item4
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item4
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item4
- uid: System.Tuple`7.Item5
  parent: System.Tuple`7
  isExternal: false
  name: Item5
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item5
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item5
- uid: System.Tuple`7.Item6
  parent: System.Tuple`7
  isExternal: false
  name: Item6
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item6
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item6
- uid: System.Tuple`7.Item7
  parent: System.Tuple`7
  isExternal: false
  name: Item7
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item7
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item7
- uid: System.Tuple`7.ToString
  parent: System.Tuple`7
  isExternal: false
  name: ToString()
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.ToString()
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Tuple`7.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)
  parent: System.Tuple`7
  isExternal: false
  name: IStructuralComparable.CompareTo(Object, IComparer)
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.IStructuralComparable.CompareTo(Object, IComparer)
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.IStructuralComparable.CompareTo(Object, IComparer)
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: false
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.Tuple`7.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)
  parent: System.Tuple`7
  isExternal: false
  name: IStructuralEquatable.Equals(Object, IEqualityComparer)
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.IStructuralEquatable.Equals(Object, IEqualityComparer)
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.IStructuralEquatable.Equals(Object, IEqualityComparer)
- uid: System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: false
  name: IEqualityComparer
  nameWithType: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: System.Tuple`7.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)
  parent: System.Tuple`7
  isExternal: false
  name: IStructuralEquatable.GetHashCode(IEqualityComparer)
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.IStructuralEquatable.GetHashCode(IEqualityComparer)
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.IStructuralEquatable.GetHashCode(IEqualityComparer)
- uid: System.Tuple`7.System#IComparable#CompareTo(System.Object)
  parent: System.Tuple`7
  isExternal: false
  name: IComparable.CompareTo(Object)
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.IComparable.CompareTo(Object)
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.IComparable.CompareTo(Object)
- uid: System.Tuple`7.System#Runtime#CompilerServices#ITuple#Item(System.Int32)
  parent: System.Tuple`7
  isExternal: false
  name: ITuple.Item(Int32)
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.ITuple.Item(Int32)
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.ITuple.Item(Int32)
- uid: System.Tuple`7.System#Runtime#CompilerServices#ITuple#Length
  parent: System.Tuple`7
  isExternal: false
  name: ITuple.Length
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.ITuple.Length
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.ITuple.Length
- uid: System.Tuple`7.#ctor*
  parent: System.Tuple`7
  isExternal: false
  name: Tuple<T1,T2,T3,T4,T5,T6,T7>
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Tuple<T1,T2,T3,T4,T5,T6,T7>
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Tuple<T1,T2,T3,T4,T5,T6,T7>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
- uid: System.Tuple`7.Equals*
  parent: System.Tuple`7
  isExternal: false
  name: Equals
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Equals
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Equals
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
- uid: System.Tuple`7.GetHashCode*
  parent: System.Tuple`7
  isExternal: false
  name: GetHashCode
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.GetHashCode
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.GetHashCode
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
- uid: System.Tuple`7.Item1*
  parent: System.Tuple`7
  isExternal: false
  name: Item1
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item1
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item1
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
- uid: System.Tuple`7.Item2*
  parent: System.Tuple`7
  isExternal: false
  name: Item2
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item2
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item2
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
- uid: System.Tuple`7.Item3*
  parent: System.Tuple`7
  isExternal: false
  name: Item3
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item3
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item3
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
- uid: System.Tuple`7.Item4*
  parent: System.Tuple`7
  isExternal: false
  name: Item4
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item4
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item4
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
- uid: System.Tuple`7.Item5*
  parent: System.Tuple`7
  isExternal: false
  name: Item5
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item5
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item5
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
- uid: System.Tuple`7.Item6*
  parent: System.Tuple`7
  isExternal: false
  name: Item6
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item6
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item6
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
- uid: System.Tuple`7.Item7*
  parent: System.Tuple`7
  isExternal: false
  name: Item7
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item7
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.Item7
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
- uid: System.Tuple`7.ToString*
  parent: System.Tuple`7
  isExternal: false
  name: ToString
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.ToString
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.ToString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
- uid: System.Tuple`7.System#Collections#IStructuralComparable#CompareTo*
  parent: System.Tuple`7
  isExternal: false
  name: System.Collections.IStructuralComparable.CompareTo
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.System.Collections.IStructuralComparable.CompareTo
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.System.Collections.IStructuralComparable.CompareTo
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
- uid: System.Tuple`7.System#Collections#IStructuralEquatable#Equals*
  parent: System.Tuple`7
  isExternal: false
  name: System.Collections.IStructuralEquatable.Equals
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.System.Collections.IStructuralEquatable.Equals
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.System.Collections.IStructuralEquatable.Equals
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
- uid: System.Tuple`7.System#Collections#IStructuralEquatable#GetHashCode*
  parent: System.Tuple`7
  isExternal: false
  name: System.Collections.IStructuralEquatable.GetHashCode
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.System.Collections.IStructuralEquatable.GetHashCode
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.System.Collections.IStructuralEquatable.GetHashCode
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
- uid: System.Tuple`7.System#IComparable#CompareTo*
  parent: System.Tuple`7
  isExternal: false
  name: System.IComparable.CompareTo
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.System.IComparable.CompareTo
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.System.IComparable.CompareTo
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
- uid: System.Tuple`7.System#Runtime#CompilerServices#ITuple#Item*
  parent: System.Tuple`7
  isExternal: false
  name: System.Runtime.CompilerServices.ITuple.Item
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.System.Runtime.CompilerServices.ITuple.Item
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.System.Runtime.CompilerServices.ITuple.Item
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
- uid: System.Tuple`7.System#Runtime#CompilerServices#ITuple#Length*
  parent: System.Tuple`7
  isExternal: false
  name: System.Runtime.CompilerServices.ITuple.Length
  nameWithType: Tuple<T1,T2,T3,T4,T5,T6,T7>.System.Runtime.CompilerServices.ITuple.Length
  fullName: Tuple<T1,T2,T3,T4,T5,T6,T7>.System.Runtime.CompilerServices.ITuple.Length
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Tuple`7.xml
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)
  parent: System.TupleExtensions
  isExternal: false
  name: Deconstruct<T1,T2,T3,T4,T5,T6,T7>(Tuple<T1,T2,T3,T4,T5,T6,T7>, T1, T2, T3, T4, T5, T6, T7)
  nameWithType: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7>(Tuple<T1,T2,T3,T4,T5,T6,T7>, T1, T2, T3, T4, T5, T6, T7)
  fullName: TupleExtensions.Deconstruct<T1,T2,T3,T4,T5,T6,T7>(Tuple<T1,T2,T3,T4,T5,T6,T7>, T1, T2, T3, T4, T5, T6, T7)
- uid: System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})
  parent: System.TupleExtensions
  isExternal: false
  name: ToValueTuple<T1,T2,T3,T4,T5,T6,T7>(Tuple<T1,T2,T3,T4,T5,T6,T7>)
  nameWithType: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7>(Tuple<T1,T2,T3,T4,T5,T6,T7>)
  fullName: TupleExtensions.ToValueTuple<T1,T2,T3,T4,T5,T6,T7>(Tuple<T1,T2,T3,T4,T5,T6,T7>)
- uid: System.Collections.IStructuralComparable
  parent: System.Collections
  isExternal: false
  name: IStructuralComparable
  nameWithType: IStructuralComparable
  fullName: System.Collections.IStructuralComparable
- uid: System.Collections.IStructuralEquatable
  parent: System.Collections
  isExternal: false
  name: IStructuralEquatable
  nameWithType: IStructuralEquatable
  fullName: System.Collections.IStructuralEquatable
- uid: System.IComparable
  parent: System
  isExternal: false
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
