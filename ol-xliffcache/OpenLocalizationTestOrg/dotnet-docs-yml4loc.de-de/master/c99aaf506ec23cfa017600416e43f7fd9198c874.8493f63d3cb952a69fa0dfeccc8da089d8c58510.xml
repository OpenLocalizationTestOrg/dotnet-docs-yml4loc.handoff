{"nodes":[{"content":"Contains a single configuration namespace reference, similar to the `Import` directive. This class cannot be inherited.","nodes":[{"pos":[0,119],"content":"Contains a single configuration namespace reference, similar to the `Import` directive. This class cannot be inherited.","nodes":[{"content":"Contains a single configuration namespace reference, similar to the <ph id=\"ph1\">`Import`</ph> directive.","pos":[0,87],"source":"Contains a single configuration namespace reference, similar to the `Import` directive."},{"content":"This class cannot be inherited.","pos":[88,119]}]}],"pos":[674,794],"yaml":true},{"content":"The <xref:System.Web.Configuration.NamespaceCollection> contains <xref:System.Web.Configuration.NamespaceInfo> objects, which correspond to the `add` elements within the `namespaces` section. Each <xref:System.Web.Configuration.NamespaceInfo> object is the same as an `Import` (<`%@ Import %`>) directive that applies to all pages and controls in the scope of the configuration file. The `Import` directive allows you to import a namespace into your ASP.NET page, making all its classes available for use on your page.","nodes":[{"pos":[0,518],"content":"The <xref:System.Web.Configuration.NamespaceCollection> contains <xref:System.Web.Configuration.NamespaceInfo> objects, which correspond to the `add` elements within the `namespaces` section. Each <xref:System.Web.Configuration.NamespaceInfo> object is the same as an `Import` (<`%@ Import %`>) directive that applies to all pages and controls in the scope of the configuration file. The `Import` directive allows you to import a namespace into your ASP.NET page, making all its classes available for use on your page.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.NamespaceCollection&gt;</ph> contains <ph id=\"ph2\">&lt;xref:System.Web.Configuration.NamespaceInfo&gt;</ph> objects, which correspond to the <ph id=\"ph3\">`add`</ph> elements within the <ph id=\"ph4\">`namespaces`</ph> section.","pos":[0,191],"source":"The <xref:System.Web.Configuration.NamespaceCollection> contains <xref:System.Web.Configuration.NamespaceInfo> objects, which correspond to the `add` elements within the `namespaces` section."},{"content":"Each <ph id=\"ph1\">&lt;xref:System.Web.Configuration.NamespaceInfo&gt;</ph> object is the same as an <ph id=\"ph2\">`Import`</ph> (&lt;<ph id=\"ph3\">`%@ Import %`</ph>&gt;) directive that applies to all pages and controls in the scope of the configuration file.","pos":[192,383],"source":" Each <xref:System.Web.Configuration.NamespaceInfo> object is the same as an `Import` (<`%@ Import %`>) directive that applies to all pages and controls in the scope of the configuration file."},{"content":"The <ph id=\"ph1\">`Import`</ph> directive allows you to import a namespace into your ASP.NET page, making all its classes available for use on your page.","pos":[384,518],"source":" The `Import` directive allows you to import a namespace into your ASP.NET page, making all its classes available for use on your page."}]}],"pos":[805,1324],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.Configuration.NamespaceInfo\"></xref> class with the specified namespace reference.","nodes":[{"pos":[0,139],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Configuration.NamespaceInfo\"&gt;&lt;/xref&gt;</ph> class with the specified namespace reference.","source":"Initializes a new instance of the <xref href=\"System.Web.Configuration.NamespaceInfo\"></xref> class with the specified namespace reference."}],"pos":[6635,6775],"yaml":true},{"content":"No validation is performed to verify that the namespace reference is valid.","nodes":[{"pos":[0,75],"content":"No validation is performed to verify that the namespace reference is valid.","nodes":[{"content":"No validation is performed to verify that the namespace reference is valid.","pos":[0,75]}]}],"pos":[6786,6862],"yaml":true,"extradata":"MT"},{"content":"A namespace reference for the new <xref href=\"System.Web.Configuration.NamespaceInfo\"></xref> object.","nodes":[{"pos":[0,101],"content":"A namespace reference for the new <ph id=\"ph1\">&lt;xref href=\"System.Web.Configuration.NamespaceInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"A namespace reference for the new <xref href=\"System.Web.Configuration.NamespaceInfo\"></xref> object."}],"pos":[7565,7667],"yaml":true},{"content":"Compares the current instance to the passed <xref href=\"System.Web.Configuration.NamespaceInfo\"></xref> object.","nodes":[{"pos":[0,111],"content":"Compares the current instance to the passed <ph id=\"ph1\">&lt;xref href=\"System.Web.Configuration.NamespaceInfo\"&gt;&lt;/xref&gt;</ph> object.","source":"Compares the current instance to the passed <xref href=\"System.Web.Configuration.NamespaceInfo\"></xref> object."}],"pos":[8704,8816],"yaml":true},{"content":"A <xref href=\"System.Web.Configuration.NamespaceInfo\"></xref> object to compare to.","nodes":[{"pos":[0,83],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Web.Configuration.NamespaceInfo\"&gt;&lt;/xref&gt;</ph> object to compare to.","source":"A <xref href=\"System.Web.Configuration.NamespaceInfo\"></xref> object to compare to."}],"pos":[8990,9074],"yaml":true},{"content":"`true` if the two objects are identical.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">`true`</ph> if the two objects are identical.","source":"`true` if the two objects are identical."}],"pos":[9132,9175],"yaml":true},{"content":"Returns a hash value for the current instance.","nodes":[{"pos":[0,46],"content":"Returns a hash value for the current instance.","nodes":[{"content":"Returns a hash value for the current instance.","pos":[0,46]}]}],"pos":[10180,10227],"yaml":true},{"content":"A hash value for the current instance.","nodes":[{"pos":[0,38],"content":"A hash value for the current instance.","nodes":[{"content":"A hash value for the current instance.","pos":[0,38]}]}],"pos":[10361,10400],"yaml":true},{"content":"Gets or sets the namespace reference.","nodes":[{"pos":[0,37],"content":"Gets or sets the namespace reference.","nodes":[{"content":"Gets or sets the namespace reference.","pos":[0,37]}]}],"pos":[11394,11432],"yaml":true},{"content":"No validation is performed to verify that the namespace reference is valid.","nodes":[{"pos":[0,75],"content":"No validation is performed to verify that the namespace reference is valid.","nodes":[{"content":"No validation is performed to verify that the namespace reference is valid.","pos":[0,75]}]}],"pos":[11443,11519],"yaml":true,"extradata":"MT"},{"content":"A string that specifies the name of the namespace.","nodes":[{"pos":[0,50],"content":"A string that specifies the name of the namespace.","nodes":[{"content":"A string that specifies the name of the namespace.","pos":[0,50]}]}],"pos":[12444,12495],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Configuration.NamespaceInfo\n  commentId: T:System.Web.Configuration.NamespaceInfo\n  id: NamespaceInfo\n  children:\n  - System.Web.Configuration.NamespaceInfo.#ctor(System.String)\n  - System.Web.Configuration.NamespaceInfo.Equals(System.Object)\n  - System.Web.Configuration.NamespaceInfo.GetHashCode\n  - System.Web.Configuration.NamespaceInfo.Namespace\n  - System.Web.Configuration.NamespaceInfo.Properties\n  langs:\n  - csharp\n  name: NamespaceInfo\n  nameWithType: NamespaceInfo\n  fullName: System.Web.Configuration.NamespaceInfo\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Contains a single configuration namespace reference, similar to the `Import` directive. This class cannot be inherited.\n  remarks: The <xref:System.Web.Configuration.NamespaceCollection> contains <xref:System.Web.Configuration.NamespaceInfo> objects, which correspond to the `add` elements within the `namespaces` section. Each <xref:System.Web.Configuration.NamespaceInfo> object is the same as an `Import` (<`%@ Import %`>) directive that applies to all pages and controls in the scope of the configuration file. The `Import` directive allows you to import a namespace into your ASP.NET page, making all its classes available for use on your page.\n  example:\n  - \"This example demonstrates how to specify values declaratively for properties of the <xref:System.Web.Configuration.NamespaceCollection> and <xref:System.Web.Configuration.NamespaceInfo> classes.  \\n  \\n The following configuration file example shows how to specify values declaratively for the `namespaces` section.  \\n  \\n```  \\n  \\n<system.web>  \\n  <pages>  \\n    <namespaces>  \\n      <add namespace=\\\"System\\\" />  \\n      <add namespace=\\\"System.Collections\\\" />  \\n      <add namespace=\\\"System.Collections.Specialized\\\" />  \\n      <add namespace=\\\"System.ComponentModel\\\" />  \\n      <add namespace=\\\"System.Configuration\\\" />  \\n      <add namespace=\\\"System.Web\\\" />  \\n    </namespaces>  \\n  </pages>  \\n</system.web>  \\n```  \\n  \\n The following code example demonstrates how to use the <xref:System.Web.Configuration.NamespaceInfo> class. This code example is part of a larger example provided for the <xref:System.Web.Configuration.PagesSection> class.  \\n  \\n [!code-csharp[System.Web.Configuration.PagesSection#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#22)]\\n [!code-vb[System.Web.Configuration.PagesSection#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#22)]\"\n  syntax:\n    content: 'public sealed class NamespaceInfo : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/NamespaceInfo.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.NamespaceInfo.#ctor(System.String)\n  commentId: M:System.Web.Configuration.NamespaceInfo.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Web.Configuration.NamespaceInfo\n  langs:\n  - csharp\n  name: NamespaceInfo(String)\n  nameWithType: NamespaceInfo.NamespaceInfo(String)\n  fullName: NamespaceInfo.NamespaceInfo(String)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Web.Configuration.NamespaceInfo\"></xref> class with the specified namespace reference.\n  remarks: No validation is performed to verify that the namespace reference is valid.\n  example:\n  - \"The following code example shows how to use <xref:System.Web.Configuration.NamespaceInfo.%23ctor%2A> constructor. It is part of a larger example for the <xref:System.Web.Configuration.PagesSection> type.  \\n  \\n [!code-csharp[System.Web.Configuration.PagesSection#23](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#23)]\\n [!code-vb[System.Web.Configuration.PagesSection#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#23)]\"\n  syntax:\n    content: public NamespaceInfo (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: A namespace reference for the new <xref href=\"System.Web.Configuration.NamespaceInfo\"></xref> object.\n  overload: System.Web.Configuration.NamespaceInfo.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/NamespaceInfo.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.NamespaceInfo.Equals(System.Object)\n  commentId: M:System.Web.Configuration.NamespaceInfo.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Web.Configuration.NamespaceInfo\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: NamespaceInfo.Equals(Object)\n  fullName: NamespaceInfo.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Compares the current instance to the passed <xref href=\"System.Web.Configuration.NamespaceInfo\"></xref> object.\n  syntax:\n    content: public override bool Equals (object namespaceInformation);\n    parameters:\n    - id: namespaceInformation\n      type: System.Object\n      description: A <xref href=\"System.Web.Configuration.NamespaceInfo\"></xref> object to compare to.\n    return:\n      type: System.Boolean\n      description: '`true` if the two objects are identical.'\n  overload: System.Web.Configuration.NamespaceInfo.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/NamespaceInfo.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.NamespaceInfo.GetHashCode\n  commentId: M:System.Web.Configuration.NamespaceInfo.GetHashCode\n  id: GetHashCode\n  parent: System.Web.Configuration.NamespaceInfo\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: NamespaceInfo.GetHashCode()\n  fullName: NamespaceInfo.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Returns a hash value for the current instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash value for the current instance.\n  overload: System.Web.Configuration.NamespaceInfo.GetHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/NamespaceInfo.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.NamespaceInfo.Namespace\n  commentId: P:System.Web.Configuration.NamespaceInfo.Namespace\n  id: Namespace\n  parent: System.Web.Configuration.NamespaceInfo\n  langs:\n  - csharp\n  name: Namespace\n  nameWithType: NamespaceInfo.Namespace\n  fullName: NamespaceInfo.Namespace\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  summary: Gets or sets the namespace reference.\n  remarks: No validation is performed to verify that the namespace reference is valid.\n  example:\n  - \"The following code example shows how to use the <xref:System.Web.Configuration.NamespaceInfo.Namespace%2A> property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.PagesSection> class.  \\n  \\n [!code-csharp[System.Web.Configuration.PagesSection#29](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#29)]\\n [!code-vb[System.Web.Configuration.PagesSection#29](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#29)]\"\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"namespace\", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsKey=true, IsRequired=true)]\n\n      [System.Configuration.StringValidator(MinLength=1)]\n\n      public string Namespace { get; set; }\n    return:\n      type: System.String\n      description: A string that specifies the name of the namespace.\n  overload: System.Web.Configuration.NamespaceInfo.Namespace*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.StringValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/NamespaceInfo.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Configuration.NamespaceInfo.Properties\n  commentId: P:System.Web.Configuration.NamespaceInfo.Properties\n  id: Properties\n  parent: System.Web.Configuration.NamespaceInfo\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: NamespaceInfo.Properties\n  fullName: NamespaceInfo.Properties\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: ''\n  overload: System.Web.Configuration.NamespaceInfo.Properties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/NamespaceInfo.xml\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationElement\n  nameWithType: ConfigurationElement\n  fullName: System.Configuration.ConfigurationElement\n- uid: System.Web.Configuration.NamespaceInfo.#ctor(System.String)\n  parent: System.Web.Configuration.NamespaceInfo\n  isExternal: false\n  name: NamespaceInfo(String)\n  nameWithType: NamespaceInfo.NamespaceInfo(String)\n  fullName: NamespaceInfo.NamespaceInfo(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Configuration.NamespaceInfo.Equals(System.Object)\n  parent: System.Web.Configuration.NamespaceInfo\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: NamespaceInfo.Equals(Object)\n  fullName: NamespaceInfo.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Configuration.NamespaceInfo.GetHashCode\n  parent: System.Web.Configuration.NamespaceInfo\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: NamespaceInfo.GetHashCode()\n  fullName: NamespaceInfo.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.Configuration.NamespaceInfo.Namespace\n  parent: System.Web.Configuration.NamespaceInfo\n  isExternal: false\n  name: Namespace\n  nameWithType: NamespaceInfo.Namespace\n  fullName: NamespaceInfo.Namespace\n- uid: System.Web.Configuration.NamespaceInfo.Properties\n  parent: System.Web.Configuration.NamespaceInfo\n  isExternal: false\n  name: Properties\n  nameWithType: NamespaceInfo.Properties\n  fullName: NamespaceInfo.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.Web.Configuration.NamespaceInfo.#ctor*\n  parent: System.Web.Configuration.NamespaceInfo\n  isExternal: false\n  name: NamespaceInfo\n  nameWithType: NamespaceInfo.NamespaceInfo\n  fullName: NamespaceInfo.NamespaceInfo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/NamespaceInfo.xml\n- uid: System.Web.Configuration.NamespaceInfo.Equals*\n  parent: System.Web.Configuration.NamespaceInfo\n  isExternal: false\n  name: Equals\n  nameWithType: NamespaceInfo.Equals\n  fullName: NamespaceInfo.Equals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/NamespaceInfo.xml\n- uid: System.Web.Configuration.NamespaceInfo.GetHashCode*\n  parent: System.Web.Configuration.NamespaceInfo\n  isExternal: false\n  name: GetHashCode\n  nameWithType: NamespaceInfo.GetHashCode\n  fullName: NamespaceInfo.GetHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/NamespaceInfo.xml\n- uid: System.Web.Configuration.NamespaceInfo.Namespace*\n  parent: System.Web.Configuration.NamespaceInfo\n  isExternal: false\n  name: Namespace\n  nameWithType: NamespaceInfo.Namespace\n  fullName: NamespaceInfo.Namespace\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/NamespaceInfo.xml\n- uid: System.Web.Configuration.NamespaceInfo.Properties*\n  parent: System.Web.Configuration.NamespaceInfo\n  isExternal: false\n  name: Properties\n  nameWithType: NamespaceInfo.Properties\n  fullName: NamespaceInfo.Properties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Configuration/NamespaceInfo.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.ConfigurationElement.CurrentConfiguration\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: CurrentConfiguration\n  nameWithType: ConfigurationElement.CurrentConfiguration\n  fullName: ConfigurationElement.CurrentConfiguration\n- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: DeserializeElement(XmlReader, Boolean)\n  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n  fullName: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n- uid: System.Configuration.ConfigurationElement.ElementInformation\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementInformation\n  nameWithType: ConfigurationElement.ElementInformation\n  fullName: ConfigurationElement.ElementInformation\n- uid: System.Configuration.ConfigurationElement.ElementProperty\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementProperty\n  nameWithType: ConfigurationElement.ElementProperty\n  fullName: ConfigurationElement.ElementProperty\n- uid: System.Configuration.ConfigurationElement.EvaluationContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: EvaluationContext\n  nameWithType: ConfigurationElement.EvaluationContext\n  fullName: ConfigurationElement.EvaluationContext\n- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedAssemblyString(String)\n  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)\n  fullName: ConfigurationElement.GetTransformedAssemblyString(String)\n- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedTypeString(String)\n  nameWithType: ConfigurationElement.GetTransformedTypeString(String)\n  fullName: ConfigurationElement.GetTransformedTypeString(String)\n- uid: System.Configuration.ConfigurationElement.HasContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: HasContext\n  nameWithType: ConfigurationElement.HasContext\n  fullName: ConfigurationElement.HasContext\n- uid: System.Configuration.ConfigurationElement.Init\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Init()\n  nameWithType: ConfigurationElement.Init()\n  fullName: ConfigurationElement.Init()\n- uid: System.Configuration.ConfigurationElement.InitializeDefault\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: InitializeDefault()\n  nameWithType: ConfigurationElement.InitializeDefault()\n  fullName: ConfigurationElement.InitializeDefault()\n- uid: System.Configuration.ConfigurationElement.IsModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsModified()\n  nameWithType: ConfigurationElement.IsModified()\n  fullName: ConfigurationElement.IsModified()\n- uid: System.Configuration.ConfigurationElement.IsReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsReadOnly()\n  nameWithType: ConfigurationElement.IsReadOnly()\n  fullName: ConfigurationElement.IsReadOnly()\n- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(ConfigurationProperty)\n  nameWithType: ConfigurationElement.Item(ConfigurationProperty)\n  fullName: ConfigurationElement.Item(ConfigurationProperty)\n- uid: System.Configuration.ConfigurationElement.Item(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(String)\n  nameWithType: ConfigurationElement.Item(String)\n  fullName: ConfigurationElement.Item(String)\n- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ListErrors(IList)\n  nameWithType: ConfigurationElement.ListErrors(IList)\n  fullName: ConfigurationElement.ListErrors(IList)\n- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllAttributesExcept\n  nameWithType: ConfigurationElement.LockAllAttributesExcept\n  fullName: ConfigurationElement.LockAllAttributesExcept\n- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllElementsExcept\n  nameWithType: ConfigurationElement.LockAllElementsExcept\n  fullName: ConfigurationElement.LockAllElementsExcept\n- uid: System.Configuration.ConfigurationElement.LockAttributes\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAttributes\n  nameWithType: ConfigurationElement.LockAttributes\n  fullName: ConfigurationElement.LockAttributes\n- uid: System.Configuration.ConfigurationElement.LockElements\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockElements\n  nameWithType: ConfigurationElement.LockElements\n  fullName: ConfigurationElement.LockElements\n- uid: System.Configuration.ConfigurationElement.LockItem\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockItem\n  nameWithType: ConfigurationElement.LockItem\n  fullName: ConfigurationElement.LockItem\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedAttribute(String, String)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedElement(String, XmlReader)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnRequiredPropertyNotFound(String)\n  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)\n  fullName: ConfigurationElement.OnRequiredPropertyNotFound(String)\n- uid: System.Configuration.ConfigurationElement.PostDeserialize\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PostDeserialize()\n  nameWithType: ConfigurationElement.PostDeserialize()\n  fullName: ConfigurationElement.PostDeserialize()\n- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PreSerialize(XmlWriter)\n  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)\n  fullName: ConfigurationElement.PreSerialize(XmlWriter)\n- uid: System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: ConfigurationElement.Reset(ConfigurationElement)\n  fullName: ConfigurationElement.Reset(ConfigurationElement)\n- uid: System.Configuration.ConfigurationElement.ResetModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ResetModified()\n  nameWithType: ConfigurationElement.ResetModified()\n  fullName: ConfigurationElement.ResetModified()\n- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeElement(XmlWriter, Boolean)\n  nameWithType: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n  fullName: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeToXmlElement(XmlWriter, String)\n  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n  fullName: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  fullName: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n- uid: System.Configuration.ConfigurationElement.SetReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetReadOnly()\n  nameWithType: ConfigurationElement.SetReadOnly()\n  fullName: ConfigurationElement.SetReadOnly()\n- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  fullName: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n"}