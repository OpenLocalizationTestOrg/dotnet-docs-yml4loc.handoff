### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  commentId: T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  id: ContainerRandomAccessIterator`1
  children:
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer{`0},System.Int32)
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Clone
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.container
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Item(System.Int32)
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.move(System.Int32)
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.next
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Implicit
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.prev
  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.valid
  langs:
  - csharp
  name: ContainerRandomAccessIterator<TValue>
  nameWithType: ContainerRandomAccessIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>
  type: Class
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: 'Provides an iterator that supports the following operations: moving forward one position by calling <code>operator++</code>, moving backward one position by calling <code>operator--</code>, accessing an element by using <code>operator[]</code>, and accessing an element by using pointer arithmetic.'
  remarks: '[!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]'
  syntax:
    content: 'public class ContainerRandomAccessIterator<TValue> : Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>'
    typeParameters:
    - id: TValue
      description: '[!INCLUDE[cpp_iter_arg](~/includes/cpp-iter-arg-md.md)]'
  inheritance:
  - System.Object
  implements:
  - Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{TValue}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor
  id: '#ctor'
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: ContainerRandomAccessIterator<TValue>()
  nameWithType: ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator<TValue>()
  fullName: ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator<TValue>()
  type: Constructor
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Allocates and initializes a new <xref href="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1"></xref> object.
  syntax:
    content: public ContainerRandomAccessIterator ();
    parameters: []
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: '#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)'
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: ContainerRandomAccessIterator<TValue>(ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator<TValue>(ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator<TValue>(ContainerRandomAccessIterator)
  type: Constructor
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: public ContainerRandomAccessIterator (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer{`0},System.Int32)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer{`0},System.Int32)
  id: '#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer{`0},System.Int32)'
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: ContainerRandomAccessIterator<TValue>(IRandomAccessContainer<TValue>, Int32)
  nameWithType: ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator<TValue>(IRandomAccessContainer<TValue>, Int32)
  fullName: ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator<TValue>(IRandomAccessContainer<TValue>, Int32)
  type: Constructor
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Allocates and initializes a new <xref href="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1"></xref> object from an existing <xref href="Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1"></xref> object.
  syntax:
    content: public ContainerRandomAccessIterator (Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer<TValue> _Cont, int _Offset);
    parameters:
    - id: _Cont
      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1
      description: An existing <xref href="Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1"></xref> object to be copied to the current container.
    - id: _Offset
      type: System.Int32
      description: The offset of the element that the iterator will point to after creation.
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Clone
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Clone
  id: Clone
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: Clone()
  nameWithType: ContainerRandomAccessIterator<TValue>.Clone()
  fullName: ContainerRandomAccessIterator<TValue>.Clone()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Creates a copy of the current <xref href="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1"></xref> object.
  syntax:
    content: public virtual object Clone ();
    parameters: []
    return:
      type: System.Object
      description: A copy of the current <xref href="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1"></xref> object.
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Clone*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.container
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.container
  id: container
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: container()
  nameWithType: ContainerRandomAccessIterator<TValue>.container()
  fullName: ContainerRandomAccessIterator<TValue>.container()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Gets the container that the iterator is traversing.
  syntax:
    content: public virtual object container ();
    parameters: []
    return:
      type: System.Object
      description: The container that the iterator is traversing.
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.container*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: distance(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: distance(ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.distance(ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.distance(ContainerRandomAccessIterator)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: public int distance (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
      description: ''
    return:
      type: System.Int32
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  id: distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: distance(IRandomAccessIterator<TValue>)
  nameWithType: ContainerRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)
  fullName: ContainerRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Determines the distance between the element that the current iterator is pointing to and the element that the given iterator is pointing to.
  syntax:
    content: public virtual int distance (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
      description: A valid iterator that points to the same container as the current iterator.
    return:
      type: System.Int32
      description: The distance, in number of elements, between the element that the current iterator is pointing to and the element that <code>_Right</code> is pointing to. This number will be negative if <code>_Right</code> points to an element that is before the element that the current iterator points to.
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: equal_to(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: equal_to(ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.equal_to(ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.equal_to(ContainerRandomAccessIterator)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: public bool equal_to (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  id: equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: equal_to(IInputIterator<TValue>)
  nameWithType: ContainerRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)
  fullName: ContainerRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Determines whether the given <xref href="Microsoft.VisualC.StlClr.Generic.IInputIterator`1"></xref> object is the same as the current <xref href="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1"></xref> object.
  syntax:
    content: public virtual bool equal_to (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
      description: The <xref href="Microsoft.VisualC.StlClr.Generic.IInputIterator`1"></xref> object to compare with the current <xref href="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1"></xref> object.
    return:
      type: System.Boolean
      description: '`true` if the two iterators are the same object; otherwise, `false`.'
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Item(System.Int32)
  commentId: P:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ContainerRandomAccessIterator<TValue>.Item(Int32)
  fullName: ContainerRandomAccessIterator<TValue>.Item(Int32)
  type: Property
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Accesses the element at the given position in the container.
  syntax:
    content: public TValue this[int _Pos] { get; set; }
    parameters:
    - id: _Pos
      type: System.Int32
      description: The position of the element to access.
    return:
      type: TValue
      description: The element at the given position in the container.
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Item*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: less_than(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: less_than(ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.less_than(ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.less_than(ContainerRandomAccessIterator)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: public bool less_than (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  id: less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: less_than(IRandomAccessIterator<TValue>)
  nameWithType: ContainerRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)
  fullName: ContainerRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Determines whether the current iterator is pointing to an element in the container that is before the element that the given iterator points to.
  syntax:
    content: public virtual bool less_than (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
      description: A valid iterator that points to the same container as the current iterator.
    return:
      type: System.Boolean
      description: '`true` if the current iterator is pointing to an element that comes before the element that <code>_Right</code> is pointing to; otherwise, `false`.'
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.move(System.Int32)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.move(System.Int32)
  id: move(System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: move(Int32)
  nameWithType: ContainerRandomAccessIterator<TValue>.move(Int32)
  fullName: ContainerRandomAccessIterator<TValue>.move(Int32)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Moves the iterator by the given number of elements.
  syntax:
    content: public virtual int move (int _Offset);
    parameters:
    - id: _Offset
      type: System.Int32
      description: The number of elements to traverse. To move the iterator forward, specify a positive number. To move the iterator backward, use a negative number.
    return:
      type: System.Int32
      description: The actual number of elements traversed. This number will differ from <code>_Offset</code> if the beginning or end of the container is reached before iterating the desired number of elements.
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.move*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.next
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.next
  id: next
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: next()
  nameWithType: ContainerRandomAccessIterator<TValue>.next()
  fullName: ContainerRandomAccessIterator<TValue>.next()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.
  syntax:
    content: public virtual void next ();
    parameters: []
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.next*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)
  id: op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: op_Addition(ContainerRandomAccessIterator<TValue>, Int32)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Addition(ContainerRandomAccessIterator<TValue>, Int32)
  fullName: ContainerRandomAccessIterator<TValue>.op_Addition(ContainerRandomAccessIterator<TValue>, Int32)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Increments the iterator by the given number of elements. The integer parameter is specified on the right side of the addition operator.
  remarks: The equivalent method for this operator is <xref:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator%601.Add%28Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator%7B%600%7D%40%2CSystem.Int32%29?displayProperty=fullName>
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Addition (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , int _Right);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
      description: ''
    - id: _Right
      type: System.Int32
      description: The number of elements to increment.
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: op_Addition(ContainerRandomAccessIterator<TValue>, Int32, ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Addition(ContainerRandomAccessIterator<TValue>, Int32, ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.op_Addition(ContainerRandomAccessIterator<TValue>, Int32, ContainerRandomAccessIterator)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: public static Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Addition (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , int _Left, Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
      description: ''
    - id: _Left
      type: System.Int32
      description: ''
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: op_Assign(ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Assign(ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.op_Assign(ContainerRandomAccessIterator)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: public Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator op_Assign (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
      description: ''
    return:
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Assign*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)
  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: op_Decrement(ContainerRandomAccessIterator<TValue>)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Decrement(ContainerRandomAccessIterator<TValue>)
  fullName: ContainerRandomAccessIterator<TValue>.op_Decrement(ContainerRandomAccessIterator<TValue>)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Decrements the iterator by one element. This is the prefix version of the decrement operator.
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)
  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: op_Decrement(ContainerRandomAccessIterator<TValue>, Int32)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Decrement(ContainerRandomAccessIterator<TValue>, Int32)
  fullName: ContainerRandomAccessIterator<TValue>.op_Decrement(ContainerRandomAccessIterator<TValue>, Int32)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Decrements the iterator by one element. This is the postfix version of the decrement operator.
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , int A_0);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
      description: ''
    - id: A_0
      type: System.Int32
      description: An unused parameter that indicates this is the postfix version of the operator.
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  id: op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: op_Equality(IInputIterator<TValue>)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Equality(IInputIterator<TValue>)
  fullName: ContainerRandomAccessIterator<TValue>.op_Equality(IInputIterator<TValue>)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Determines whether the given <xref href="Microsoft.VisualC.StlClr.Generic.IInputIterator`1"></xref> object is the same as the current <xref href="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1"></xref> object.
  remarks: The equivalent method for this operator is <xref:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator%601.Equals%28Microsoft.VisualC.StlClr.Generic.IInputIterator%7B%600%7D%29?displayProperty=fullName>
  syntax:
    content: >-
      [System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]

      public bool op_Equality (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
      description: The <xref href="Microsoft.VisualC.StlClr.Generic.IInputIterator`1"></xref> object to compare with the current <xref href="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1"></xref> object.
    return:
      type: System.Boolean
      description: '`true` if the two iterators are the same object; otherwise, `false`.'
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality*
  exceptions: []
  attributes:
  - type: System.Runtime.TargetedPatchingOptOutAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: op_Equality(ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Equality(ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.op_Equality(ContainerRandomAccessIterator)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: >-
      [System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]

      public bool op_Equality (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality*
  exceptions: []
  attributes:
  - type: System.Runtime.TargetedPatchingOptOutAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: op_GreaterThan(ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThan(ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.op_GreaterThan(ContainerRandomAccessIterator)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: >-
      [System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]

      public bool op_GreaterThan (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan*
  exceptions: []
  attributes:
  - type: System.Runtime.TargetedPatchingOptOutAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: op_GreaterThan(IRandomAccessIterator<TValue>, ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThan(IRandomAccessIterator<TValue>, ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.op_GreaterThan(IRandomAccessIterator<TValue>, ContainerRandomAccessIterator)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: >-
      [System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]

      public static bool op_GreaterThan (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Left, Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);
    parameters:
    - id: _Left
      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
      description: ''
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan*
  exceptions: []
  attributes:
  - type: System.Runtime.TargetedPatchingOptOutAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: op_GreaterThanOrEqual(ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ContainerRandomAccessIterator)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: public bool op_GreaterThanOrEqual (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  id: op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: op_GreaterThanOrEqual(IRandomAccessIterator<TValue>)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(IRandomAccessIterator<TValue>)
  fullName: ContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(IRandomAccessIterator<TValue>)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Determines whether the position of the left-side iterator is greater than or equal to the position of the given right-side iterator.
  remarks: The equivalent method for this operator is <xref:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator%601.Compare%28Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator%7B%600%7D%29?displayProperty=fullName>
  syntax:
    content: public bool op_GreaterThanOrEqual (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
      description: The iterator to compare with the left-side iterator.
    return:
      type: System.Boolean
      description: '`true` if the left-side iterator is greater than or equal to the given right-side iterator; otherwise, `false`.'
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Implicit
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}
  id: op_Implicit
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: op_Implicit
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Implicit
  fullName: ContainerRandomAccessIterator<TValue>.op_Implicit
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: public Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> op_Implicit ();
    parameters: []
    return:
      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Implicit*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)
  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: op_Increment(ContainerRandomAccessIterator<TValue>)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Increment(ContainerRandomAccessIterator<TValue>)
  fullName: ContainerRandomAccessIterator<TValue>.op_Increment(ContainerRandomAccessIterator<TValue>)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Increments the iterator by one element. This is the prefix version of the increment operator.
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
      description: ''
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)
  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: op_Increment(ContainerRandomAccessIterator<TValue>, Int32)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Increment(ContainerRandomAccessIterator<TValue>, Int32)
  fullName: ContainerRandomAccessIterator<TValue>.op_Increment(ContainerRandomAccessIterator<TValue>, Int32)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Increments the iterator by one element. This is the postfix version of the increment operator.
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , int A_0);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
      description: ''
    - id: A_0
      type: System.Int32
      description: An unused parameter that indicates this is the postfix version of the operator.
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: op_Inequality(ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Inequality(ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.op_Inequality(ContainerRandomAccessIterator)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: public bool op_Inequality (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  id: op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: op_Inequality(IInputIterator<TValue>)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Inequality(IInputIterator<TValue>)
  fullName: ContainerRandomAccessIterator<TValue>.op_Inequality(IInputIterator<TValue>)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Determines whether the given <xref href="Microsoft.VisualC.StlClr.Generic.IInputIterator`1"></xref> object differs from the current <xref href="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1"></xref> object.
  remarks: The equivalent method for this operator is <xref:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator%601.Compare%28Microsoft.VisualC.StlClr.Generic.IInputIterator%7B%600%7D%29?displayProperty=fullName>
  syntax:
    content: public bool op_Inequality (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
      description: The <xref href="Microsoft.VisualC.StlClr.Generic.IInputIterator`1"></xref> object to compare with the current <xref href="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1"></xref> object.
    return:
      type: System.Boolean
      description: '`true` if the two iterators are different objects; otherwise, `false`.'
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  id: op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: op_LessThan(IRandomAccessIterator<TValue>)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThan(IRandomAccessIterator<TValue>)
  fullName: ContainerRandomAccessIterator<TValue>.op_LessThan(IRandomAccessIterator<TValue>)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Determines whether the position of the left-side iterator is less than the position of the given right-side iterator.
  remarks: The equivalent method for this operator is <xref:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator%601.Compare%28Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator%7B%600%7D%29?displayProperty=fullName>
  syntax:
    content: >-
      [System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]

      public bool op_LessThan (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
      description: The iterator to compare with the left-side iterator.
    return:
      type: System.Boolean
      description: '`true` if the left-side iterator is less than the given right-side iterator; otherwise, `false`.'
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan*
  exceptions: []
  attributes:
  - type: System.Runtime.TargetedPatchingOptOutAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_LessThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: op_LessThan(ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThan(ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.op_LessThan(ContainerRandomAccessIterator)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: >-
      [System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]

      public bool op_LessThan (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan*
  exceptions: []
  attributes:
  - type: System.Runtime.TargetedPatchingOptOutAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: op_LessThanOrEqual(ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(ContainerRandomAccessIterator)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: public bool op_LessThanOrEqual (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: op_LessThanOrEqual(IRandomAccessIterator<TValue>, ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(IRandomAccessIterator<TValue>, ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(IRandomAccessIterator<TValue>, ContainerRandomAccessIterator)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: public static bool op_LessThanOrEqual (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Left, Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);
    parameters:
    - id: _Left
      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
      description: ''
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
      description: ''
    return:
      type: System.Boolean
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: op_MemberSelection(ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_MemberSelection(ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.op_MemberSelection(ContainerRandomAccessIterator)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: >-
      [System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]

      public static TValue op_MemberSelection (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Left);
    parameters:
    - id: _Left
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
      description: ''
    return:
      type: TValue@
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_MemberSelection*
  exceptions: []
  attributes:
  - type: System.Runtime.TargetedPatchingOptOutAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: op_PointerDereference(ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_PointerDereference(ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.op_PointerDereference(ContainerRandomAccessIterator)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  syntax:
    content: >-
      [System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]

      public static TValue op_PointerDereference (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Left);
    parameters:
    - id: _Left
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
      description: ''
    return:
      type: TValue@
      description: ''
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_PointerDereference*
  exceptions: []
  attributes:
  - type: System.Runtime.TargetedPatchingOptOutAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  id: op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: op_Subtraction(IRandomAccessIterator<TValue>)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)
  fullName: ContainerRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Determines the difference between two iterators.
  remarks: The equivalent method for this operator is <xref:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator%601.Subtract%28Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator%7B%600%7D%29?displayProperty=fullName>
  syntax:
    content: >-
      [System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]

      public int op_Subtraction (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
      description: The <xref href="Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1"></xref> to be subtracted from the current <xref href="Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1"></xref> object.
    return:
      type: System.Int32
      description: The difference (number of elements) between the two iterators.
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction*
  exceptions: []
  attributes:
  - type: System.Runtime.TargetedPatchingOptOutAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)
  id: op_Subtraction(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: op_Subtraction(ContainerRandomAccessIterator<TValue>, Int32)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Subtraction(ContainerRandomAccessIterator<TValue>, Int32)
  fullName: ContainerRandomAccessIterator<TValue>.op_Subtraction(ContainerRandomAccessIterator<TValue>, Int32)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Decrements the iterator by the given number of elements. The integer parameter is specified on the right side of the subtraction operator.
  remarks: The equivalent method for this operator is <xref:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator%601.Subtract%28Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator%7B%600%7D%40%2CSystem.Int32%29?displayProperty=fullName>
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Subtraction (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , int _Right);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
      description: ''
    - id: _Right
      type: System.Int32
      description: The number of elements to decrement.
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: An iterator.
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.prev
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.prev
  id: prev
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: prev()
  nameWithType: ContainerRandomAccessIterator<TValue>.prev()
  fullName: ContainerRandomAccessIterator<TValue>.prev()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Positions the iterator to the element immediately before the current element.
  syntax:
    content: public virtual void prev ();
    parameters: []
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.prev*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.valid
  commentId: M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.valid
  id: valid
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  langs:
  - csharp
  name: valid()
  nameWithType: ContainerRandomAccessIterator<TValue>.valid()
  fullName: ContainerRandomAccessIterator<TValue>.valid()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr.Generic
  summary: Determines whether the iterator is valid and can be safely used to traverse the underlying container.
  syntax:
    content: public virtual bool valid ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the iterator is valid and safe to use; otherwise, `false`.'
  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.valid*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
  ms.author: mblome
  manager: ghogen
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: ContainerRandomAccessIterator<TValue>()
  nameWithType: ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator<TValue>()
  fullName: ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator<TValue>()
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: ContainerRandomAccessIterator<TValue>(ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator<TValue>(ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator<TValue>(ContainerRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: true
  name: ContainerRandomAccessIterator
  nameWithType: ContainerRandomAccessIterator
  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer{`0},System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: ContainerRandomAccessIterator<TValue>(IRandomAccessContainer<TValue>, Int32)
  nameWithType: ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator<TValue>(IRandomAccessContainer<TValue>, Int32)
  fullName: ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator<TValue>(IRandomAccessContainer<TValue>, Int32)
- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: IRandomAccessContainer<TValue>
  nameWithType: IRandomAccessContainer<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer<TValue>
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Clone
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: Clone()
  nameWithType: ContainerRandomAccessIterator<TValue>.Clone()
  fullName: ContainerRandomAccessIterator<TValue>.Clone()
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.container
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: container()
  nameWithType: ContainerRandomAccessIterator<TValue>.container()
  fullName: ContainerRandomAccessIterator<TValue>.container()
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: distance(ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.distance(ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.distance(ContainerRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: distance(IRandomAccessIterator<TValue>)
  nameWithType: ContainerRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)
  fullName: ContainerRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: IRandomAccessIterator<TValue>
  nameWithType: IRandomAccessIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: equal_to(ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.equal_to(ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.equal_to(ContainerRandomAccessIterator)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: equal_to(IInputIterator<TValue>)
  nameWithType: ContainerRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)
  fullName: ContainerRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: IInputIterator<TValue>
  nameWithType: IInputIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Item(System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: Item(Int32)
  nameWithType: ContainerRandomAccessIterator<TValue>.Item(Int32)
  fullName: ContainerRandomAccessIterator<TValue>.Item(Int32)
- uid: TValue
  isExternal: true
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: less_than(ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.less_than(ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.less_than(ContainerRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: less_than(IRandomAccessIterator<TValue>)
  nameWithType: ContainerRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)
  fullName: ContainerRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.move(System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: move(Int32)
  nameWithType: ContainerRandomAccessIterator<TValue>.move(Int32)
  fullName: ContainerRandomAccessIterator<TValue>.move(Int32)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.next
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: next()
  nameWithType: ContainerRandomAccessIterator<TValue>.next()
  fullName: ContainerRandomAccessIterator<TValue>.next()
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_Addition(ContainerRandomAccessIterator<TValue>, Int32)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Addition(ContainerRandomAccessIterator<TValue>, Int32)
  fullName: ContainerRandomAccessIterator<TValue>.op_Addition(ContainerRandomAccessIterator<TValue>, Int32)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ContainerRandomAccessIterator<TValue>
  nameWithType: ContainerRandomAccessIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_Addition(ContainerRandomAccessIterator<TValue>, Int32, ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Addition(ContainerRandomAccessIterator<TValue>, Int32, ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.op_Addition(ContainerRandomAccessIterator<TValue>, Int32, ContainerRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_Assign(ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Assign(ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.op_Assign(ContainerRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_Decrement(ContainerRandomAccessIterator<TValue>)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Decrement(ContainerRandomAccessIterator<TValue>)
  fullName: ContainerRandomAccessIterator<TValue>.op_Decrement(ContainerRandomAccessIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_Decrement(ContainerRandomAccessIterator<TValue>, Int32)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Decrement(ContainerRandomAccessIterator<TValue>, Int32)
  fullName: ContainerRandomAccessIterator<TValue>.op_Decrement(ContainerRandomAccessIterator<TValue>, Int32)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_Equality(IInputIterator<TValue>)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Equality(IInputIterator<TValue>)
  fullName: ContainerRandomAccessIterator<TValue>.op_Equality(IInputIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_Equality(ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Equality(ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.op_Equality(ContainerRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_GreaterThan(ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThan(ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.op_GreaterThan(ContainerRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_GreaterThan(IRandomAccessIterator<TValue>, ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThan(IRandomAccessIterator<TValue>, ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.op_GreaterThan(IRandomAccessIterator<TValue>, ContainerRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_GreaterThanOrEqual(ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ContainerRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_GreaterThanOrEqual(IRandomAccessIterator<TValue>)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(IRandomAccessIterator<TValue>)
  fullName: ContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(IRandomAccessIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Implicit
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_Implicit
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Implicit
  fullName: ContainerRandomAccessIterator<TValue>.op_Implicit
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_Increment(ContainerRandomAccessIterator<TValue>)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Increment(ContainerRandomAccessIterator<TValue>)
  fullName: ContainerRandomAccessIterator<TValue>.op_Increment(ContainerRandomAccessIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_Increment(ContainerRandomAccessIterator<TValue>, Int32)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Increment(ContainerRandomAccessIterator<TValue>, Int32)
  fullName: ContainerRandomAccessIterator<TValue>.op_Increment(ContainerRandomAccessIterator<TValue>, Int32)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_Inequality(ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Inequality(ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.op_Inequality(ContainerRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_Inequality(IInputIterator<TValue>)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Inequality(IInputIterator<TValue>)
  fullName: ContainerRandomAccessIterator<TValue>.op_Inequality(IInputIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_LessThan(IRandomAccessIterator<TValue>)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThan(IRandomAccessIterator<TValue>)
  fullName: ContainerRandomAccessIterator<TValue>.op_LessThan(IRandomAccessIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_LessThan(ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThan(ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.op_LessThan(ContainerRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_LessThanOrEqual(ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(ContainerRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_LessThanOrEqual(IRandomAccessIterator<TValue>, ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(IRandomAccessIterator<TValue>, ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(IRandomAccessIterator<TValue>, ContainerRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_MemberSelection(ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_MemberSelection(ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.op_MemberSelection(ContainerRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_PointerDereference(ContainerRandomAccessIterator)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_PointerDereference(ContainerRandomAccessIterator)
  fullName: ContainerRandomAccessIterator<TValue>.op_PointerDereference(ContainerRandomAccessIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_Subtraction(IRandomAccessIterator<TValue>)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)
  fullName: ContainerRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_Subtraction(ContainerRandomAccessIterator<TValue>, Int32)
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Subtraction(ContainerRandomAccessIterator<TValue>, Int32)
  fullName: ContainerRandomAccessIterator<TValue>.op_Subtraction(ContainerRandomAccessIterator<TValue>, Int32)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.prev
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: prev()
  nameWithType: ContainerRandomAccessIterator<TValue>.prev()
  fullName: ContainerRandomAccessIterator<TValue>.prev()
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.valid
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: valid()
  nameWithType: ContainerRandomAccessIterator<TValue>.valid()
  fullName: ContainerRandomAccessIterator<TValue>.valid()
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor*
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: ContainerRandomAccessIterator<TValue>
  nameWithType: ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator<TValue>
  fullName: ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator<TValue>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Clone*
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: Clone
  nameWithType: ContainerRandomAccessIterator<TValue>.Clone
  fullName: ContainerRandomAccessIterator<TValue>.Clone
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.container*
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: container
  nameWithType: ContainerRandomAccessIterator<TValue>.container
  fullName: ContainerRandomAccessIterator<TValue>.container
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance*
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: distance
  nameWithType: ContainerRandomAccessIterator<TValue>.distance
  fullName: ContainerRandomAccessIterator<TValue>.distance
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to*
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: equal_to
  nameWithType: ContainerRandomAccessIterator<TValue>.equal_to
  fullName: ContainerRandomAccessIterator<TValue>.equal_to
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Item*
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: Item
  nameWithType: ContainerRandomAccessIterator<TValue>.Item
  fullName: ContainerRandomAccessIterator<TValue>.Item
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than*
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: less_than
  nameWithType: ContainerRandomAccessIterator<TValue>.less_than
  fullName: ContainerRandomAccessIterator<TValue>.less_than
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.move*
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: move
  nameWithType: ContainerRandomAccessIterator<TValue>.move
  fullName: ContainerRandomAccessIterator<TValue>.move
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.next*
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: next
  nameWithType: ContainerRandomAccessIterator<TValue>.next
  fullName: ContainerRandomAccessIterator<TValue>.next
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition*
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_Addition
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Addition
  fullName: ContainerRandomAccessIterator<TValue>.op_Addition
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Assign*
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_Assign
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Assign
  fullName: ContainerRandomAccessIterator<TValue>.op_Assign
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement*
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_Decrement
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Decrement
  fullName: ContainerRandomAccessIterator<TValue>.op_Decrement
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality*
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_Equality
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Equality
  fullName: ContainerRandomAccessIterator<TValue>.op_Equality
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan*
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_GreaterThan
  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThan
  fullName: ContainerRandomAccessIterator<TValue>.op_GreaterThan
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual*
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_GreaterThanOrEqual
  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual
  fullName: ContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Implicit*
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_Implicit
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Implicit
  fullName: ContainerRandomAccessIterator<TValue>.op_Implicit
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment*
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_Increment
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Increment
  fullName: ContainerRandomAccessIterator<TValue>.op_Increment
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality*
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_Inequality
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Inequality
  fullName: ContainerRandomAccessIterator<TValue>.op_Inequality
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan*
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_LessThan
  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThan
  fullName: ContainerRandomAccessIterator<TValue>.op_LessThan
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual*
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_LessThanOrEqual
  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThanOrEqual
  fullName: ContainerRandomAccessIterator<TValue>.op_LessThanOrEqual
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_MemberSelection*
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_MemberSelection
  nameWithType: ContainerRandomAccessIterator<TValue>.op_MemberSelection
  fullName: ContainerRandomAccessIterator<TValue>.op_MemberSelection
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_PointerDereference*
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_PointerDereference
  nameWithType: ContainerRandomAccessIterator<TValue>.op_PointerDereference
  fullName: ContainerRandomAccessIterator<TValue>.op_PointerDereference
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction*
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: op_Subtraction
  nameWithType: ContainerRandomAccessIterator<TValue>.op_Subtraction
  fullName: ContainerRandomAccessIterator<TValue>.op_Subtraction
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.prev*
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: prev
  nameWithType: ContainerRandomAccessIterator<TValue>.prev
  fullName: ContainerRandomAccessIterator<TValue>.prev
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.valid*
  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1
  isExternal: false
  name: valid
  nameWithType: ContainerRandomAccessIterator<TValue>.valid
  fullName: ContainerRandomAccessIterator<TValue>.valid
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr.Generic/ContainerRandomAccessIterator`1.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
